cscope 15 $HOME/zookeeper-3.4.5/src/c/eji_keeper/script               0002497620
	@/home/pig/zookeeper-3.4.5/src/c/config.h

5 
	#HAVE_ARPA_INET_H
 1

	)

8 
	#HAVE_DLFCN_H
 1

	)

11 
	#HAVE_FCNTL_H
 1

	)

14 
	#HAVE_GENERATED_ZOOKEEPER_JUTE_C
 1

	)

17 
	#HAVE_GENERATED_ZOOKEEPER_JUTE_H
 1

	)

20 
	#HAVE_GETCWD
 1

	)

23 
	#HAVE_GETHOSTBYNAME
 1

	)

26 
	#HAVE_GETHOSTNAME
 1

	)

29 
	#HAVE_GETLOGIN
 1

	)

32 
	#HAVE_GETPWUID_R
 1

	)

35 
	#HAVE_GETTIMEOFDAY
 1

	)

38 
	#HAVE_GETUID
 1

	)

41 
	#HAVE_INTTYPES_H
 1

	)

44 
	#HAVE_MEMMOVE
 1

	)

47 
	#HAVE_MEMORY_H
 1

	)

50 
	#HAVE_MEMSET
 1

	)

53 
	#HAVE_NETDB_H
 1

	)

56 
	#HAVE_NETINET_IN_H
 1

	)

59 
	#HAVE_POLL
 1

	)

62 
	#HAVE_SOCKET
 1

	)

65 
	#HAVE_STDINT_H
 1

	)

68 
	#HAVE_STDLIB_H
 1

	)

71 
	#HAVE_STRCHR
 1

	)

74 
	#HAVE_STRDUP
 1

	)

77 
	#HAVE_STRERROR
 1

	)

80 
	#HAVE_STRINGS_H
 1

	)

83 
	#HAVE_STRING_H
 1

	)

86 
	#HAVE_STRTOL
 1

	)

89 
	#HAVE_SYS_SOCKET_H
 1

	)

92 
	#HAVE_SYS_STAT_H
 1

	)

95 
	#HAVE_SYS_TIME_H
 1

	)

98 
	#HAVE_SYS_TYPES_H
 1

	)

101 
	#HAVE_SYS_UTSNAME_H
 1

	)

104 
	#HAVE_UNISTD_H
 1

	)

110 
	#PACKAGE
 "zookì≥r"

	)

113 
	#PACKAGE_BUGREPORT
 "u£r@zookì≥r.≠ache.‹g"

	)

116 
	#PACKAGE_NAME
 "zookì≥∏C clõ¡"

	)

119 
	#PACKAGE_STRING
 "zookì≥∏C clõ¡ 3.4.5"

	)

122 
	#PACKAGE_TARNAME
 "zookì≥r"

	)

125 
	#PACKAGE_VERSION
 "3.4.5"

	)

128 
	#POLL_NFDS_TYPE
 
nfds_t


	)

131 
	#STDC_HEADERS
 1

	)

134 
	#TIME_WITH_SYS_TIME
 1

	)

137 
	#VERSION
 "3.4.5"

	)

144 #i‚de‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/eji_keeper/include/eji_keeper.h

1 #i‚de‡
__EJI_KEEPER_H__


2 
	#__EJI_KEEPER_H__


	)

4 
	~<zookì≥r.h
>

6 
	eEvít_ty≥
 {

7 
	mEVENT_START
, 
	mOFFER_START
, 
	mOFFER_COMPLETE
, 
	mDETERMINE_START
, 
	mDETERMINE_COMPLETE
, 
	mELECTED_START
, 
	mELECTED_COMPLETE
, 
	mREADY_START
, 
	mREADY_COMPLETE
, 
	mEVENT_FAILED
, 
	mSTOP_START
, 
	mSTOP_COMPLETE


10 
	eSèã
 {

11 
	mSTART
, 
	mOFFER
, 
	mDETERMINE
, 
	mELECTED
, 
	mREADY
, 
	mFAILED
, 
	mSTOP


14 
	sEÀ˘i⁄_d©a
 {

15 
zh™dÀ_t
 *
	mzh
;

16 
Sèã
 
	m°©e
;

17 
	mñe˘i⁄_id
;

18 
	mw©ch_ñe˘i⁄_id
;

19 *
	mroŸ
;

	@/home/pig/zookeeper-3.4.5/src/c/eji_keeper/src/eji_keeper.c

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<zookì≥r.h
>

19 
	~<zookì≥r_log.h
>

20 
	~<time.h
>

21 
	~"eji_kì≥r.h
"

24 
	#EXPIRED_SESSION_STATE_DEF
 -112

	)

25 
	#AUTH_FAILED_STATE_DEF
 -113

	)

26 
	#CONNECTING_STATE_DEF
 1

	)

27 
	#ASSOCIATING_STATE_DEF
 2

	)

28 
	#CONNECTED_STATE_DEF
 3

	)

29 
	#NOTCONNECTED_STATE_DEF
 999

	)

32 
	#CREATED_EVENT_DEF
 1

	)

33 
	#DELETED_EVENT_DEF
 2

	)

34 
	#CHANGED_EVENT_DEF
 3

	)

35 
	#CHILD_EVENT_DEF
 4

	)

36 
	#SESSION_EVENT_DEF
 -1

	)

37 
	#NOTWATCHING_EVENT_DEF
 -2

	)

39 
EÀ˘i⁄_d©a
 
	gñe˘i⁄_d©a_g
 = {0};

41 
dëîmöe_ñe˘i⁄_°©us
(
EÀ˘i⁄_d©a
 *
ñ_d©a
);

42 
∑th2ñe˘i⁄_id
(c⁄° * 
∑th
);

44 
__©åibuã__
 ((
unu£d
)Ëc⁄° * 
	$°©e2Såög
(
°©e
){

45 
°©e
){

48 
CONNECTING_STATE_DEF
:

50 
ASSOCIATING_STATE_DEF
:

52 
CONNECTED_STATE_DEF
:

54 
EXPIRED_SESSION_STATE_DEF
:

56 
AUTH_FAILED_STATE_DEF
:

60 
	}
}

61 
__©åibuã__
 ((
unu£d
)Ëc⁄° * 
	$w©chîEvít2Såög
(
ev
){

62 
ev
){

65 
CREATED_EVENT_DEF
:

67 
DELETED_EVENT_DEF
:

69 
CHANGED_EVENT_DEF
:

71 
CHILD_EVENT_DEF
:

73 
SESSION_EVENT_DEF
:

75 
NOTWATCHING_EVENT_DEF
:

79 
	}
}

81 
	$zkeji_w©chî_g
(
zh™dÀ_t
* 
zh
, 
ty≥
, 
°©e
,

82 c⁄° * 
∑th
, * 
w©chîCtx
)

84 
	`¥ötf
("Something happened.\n");

85 
	`¥ötf
("ty≥: %s\n", 
	`w©chîEvít2Såög
(
ty≥
));

86 
	`¥ötf
("°©e: %s\n", 
	`°©e2Såög
(
°©e
));

87 
	`¥ötf
("∑th: %s\n", 
∑th
);

88 
	`¥ötf
("w©chîCtx: %s\n", (*)
w©chîCtx
);

89 
	}
}

91 
	$zkeji_w©chî_√ighbour
(
zh™dÀ_t
* 
zh
, 
ty≥
, 
°©e
,

92 c⁄° * 
∑th
, * 
w©chîCtx
)

94 
	`¥ötf
("ty≥: %s\n", 
	`w©chîEvít2Såög
(
ty≥
));

95 
	`¥ötf
("°©e: %s\n", 
	`°©e2Såög
(
°©e
));

96 
	`¥ötf
("∑th: %s\n", 
∑th
);

97 
	`¥ötf
("w©chîCtx: %p\n", 
w©chîCtx
);

98 
EÀ˘i⁄_d©a
 *
ñ_d©a
 = 
w©chîCtx
;

99 i‡(
ty≥
 !
DELETED_EVENT_DEF
)

101 i‡(
	`∑th2ñe˘i⁄_id
(
∑th
Ë=
ñ_d©a
->
ñe˘i⁄_id
)

103 i‡(
	`∑th2ñe˘i⁄_id
(
∑th
Ë!
ñ_d©a
->
w©ch_ñe˘i⁄_id
)

105 i‡(
ñ_d©a
->
°©e
 =
STOP
)

107 
	`¥ötf
("myÇeighbour is missing.\n");

108 
	`dëîmöe_ñe˘i⁄_°©us
(
ñ_d©a
);

109 
	}
}

111 
	$zkeji_dump_°©
(c⁄° 
Sèt
 *
°©
)

113 
t˘imes
[40];

114 
tmtimes
[40];

115 
time_t
 
t˘ime
;

116 
time_t
 
tmtime
;

118 i‡(!
°©
) {

119 
	`Ârötf
(
°dîr
,"null\n");

122 
t˘ime
 = 
°©
->
˘ime
/1000;

123 
tmtime
 = 
°©
->
mtime
/1000;

125 
	`˘ime_r
(&
tmtime
, 
tmtimes
);

126 
	`˘ime_r
(&
t˘ime
, 
t˘imes
);

128 
	`Ârötf
(
°dîr
, "\tctime = %s\tczxid=%llx\n"

132 
t˘imes
, 
°©
->
czxid
,

133 
tmtimes
, 
°©
->
mzxid
,

134 ()
°©
->
vîsi⁄
, ()°©->
avîsi⁄
,

135 
°©
->
ïhemîÆOw√r
);

136 
	}
}

138 
	$zkeji_°©_com∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
)

140 
	`Ârötf
(
°dîr
, "[%s]:Ñ¯%d Sèt:\n", (*)
d©a
, 
rc
);

141 
	`zkeji_dump_°©
(
°©
);

142 
	}
}

144 
	$zkeji_void_com∂ëi⁄
(
rc
, c⁄° *
d©a
)

146 
	`Ârötf
(
°dîr
, "[%s]:Ñ¯%d\n", (*)(
d©a
==0?"nuŒ":d©a), 
rc
);

147 
	}
}

149 
	$zkeji_°rög_com∂ëi⁄
(
rc
, c⁄° *
«me
, c⁄° *
d©a
)

151 
	`Ârötf
(
°dîr
, "[%s]:Ñ¯%d\n", (*)(
d©a
==0?"nuŒ":d©a), 
rc
);

152 i‡(!
rc
) {

153 
	`Ârötf
(
°dîr
, "\äamê%s\n", 
«me
);

155 
	}
}

157 
	$∑th2ñe˘i⁄_id
(c⁄° * 
∑th
)

159 
i
 = 
	`°æí
(
∑th
) - 1;

160 ; 
i
 >= 0; i--) {

161 i‡(
∑th
[
i
] == '_') {

162  
	`©ﬁ
(
∑th
+
i
+1);

166 
	}
}

168 
	$make_of„r
(
EÀ˘i⁄_d©a
 *
ñ_d©a
){

169 
ªÆ_∑th
[1024] = {0};

170 
∑th_¥efix
[1024];

171 
ñ_d©a
->
°©e
 = 
OFFER
;

172 
	`¢¥ötf
(
∑th_¥efix
, ’©h_¥efix), "%s/n_", 
ñ_d©a
->
roŸ
);

173 
ªt
 = 
	`zoo_¸óã
(
ñ_d©a
->
zh
, 
∑th_¥efix
, 
NULL
, -1,

174 &
ZOO_OPEN_ACL_UNSAFE
, 
ZOO_SEQUENCE
 | 
ZOO_EPHEMERAL
 ,

175 
ªÆ_∑th
, (real_path) - 1);

176 i‡(
ªt
) {

177 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
ªt
, "create");

178 
	`exô
(
EXIT_FAILURE
);

180 
	`Ârötf
(
°dîr
, "ªÆ_∑th:%s\n", 
ªÆ_∑th
);

181 
ñ_d©a
->
ñe˘i⁄_id
 = 
	`∑th2ñe˘i⁄_id
(
ªÆ_∑th
);

182 i‡(
ñ_d©a
->
ñe˘i⁄_id
 < 0) {

183 
	`Ârötf
(
°dîr
, "Eº‹ f‹ gëÉÀ˘i⁄_id :%ld\n", 
ñ_d©a
->
ñe˘i⁄_id
);

184 
	`exô
(
EXIT_FAILURE
);

186 
	}
}

188 
	$‰ì_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
) {

189 i‡(
v
->
d©a
) {

190 
öt32_t
 
i
;

191 
i
=0; i<
v
->
cou¡
; i++) {

192 
	`‰ì
(
v
->
d©a
[
i
]);

194 
	`‰ì
(
v
->
d©a
);

195 
v
->
d©a
 = 0;

197 
	}
}

199 
	$become_Àadî
(
EÀ˘i⁄_d©a
 *
ñ_d©a
)

201 
	`Ârötf
(
°dout
, "becomögÜódî wôhÉÀ˘i⁄ id: %ld\n", 
ñ_d©a
->
ñe˘i⁄_id
);

202 
ñ_d©a
->
°©e
 = 
DETERMINE
;

203 
	}
}

205 
	$become_ªady
(
EÀ˘i⁄_d©a
 *
ñ_d©a
, *
node_«me
)

207 
Sèt
 
°©
;

208 
node_∑th
[2048];

209 
	`¢¥ötf
(
node_∑th
, “ode_∑th), "%s/%s", 
ñ_d©a
->
roŸ
, 
node_«me
);

210 
rc
 = 
	`zoo_wexi°s
(
ñ_d©a
->
zh
, 
node_∑th
, 
zkeji_w©chî_√ighbour
,Él_d©a, &
°©
);

211 i‡(
rc
) {

212 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ w©ch %s\n", 
rc
, 
node_∑th
);

213 
	`dëîmöe_ñe˘i⁄_°©us
(
ñ_d©a
);

215 
	`Ârötf
(
°dout
, "We'ª behöd %s, kìpögá¿eyê⁄Åhem\n", 
node_∑th
);

216 
ñ_d©a
->
w©ch_ñe˘i⁄_id
 = 
	`∑th2ñe˘i⁄_id
(
node_«me
);

217 
ñ_d©a
->
°©e
 = 
READY
;

219 
	}
}

221 
	$bubbÀ_s‹t
(
¨r
[],
n
)

223 
i
,
j
;

224 
t
;

225 
i
 = 0;ò< 
n
 - 1; i++)

226 
j
 = 0;j < 
n
 - 
i
 - 1; j++)

227 i‡(
¨r
[
j
+1] <árr[j])

229 
t
=
¨r
[
j
+1];

230 
¨r
[
j
+1]=arr[j];

231 
¨r
[
j
]=
t
;

233 
	}
}

235 
	$s‹t_of„rs
(
Såög_ve˘‹
 *
chûdªn
)

237 
i
, 
j
;

238 
size
 = (Ë* 
chûdªn
->
cou¡
;

239 *
ids
 = (*)
	`mÆloc
(
size
);

240 *
ids_‹g
 = (*)
	`mÆloc
(
size
);

241 **
d©a_‹g
 = (**)
	`mÆloc
((*Ë* 
chûdªn
->
cou¡
);

242 
i
 = 0; i < 
chûdªn
->
cou¡
; i++) {

243 
ids_‹g
[
i
] = 
	`∑th2ñe˘i⁄_id
(
chûdªn
->
d©a
[i]);

245 
	`mem˝y
(
ids
, 
ids_‹g
, 
size
);

246 
	`mem˝y
(
d©a_‹g
, 
chûdªn
->
d©a
, (*Ë* chûdªn->
cou¡
);

247 
	`bubbÀ_s‹t
(
ids
, 
chûdªn
->
cou¡
);

249 
i
 = 0; i < 
chûdªn
->
cou¡
; i++) {

250 
j
 = 0; j < 
chûdªn
->
cou¡
; j++) {

251 i‡(
ids_‹g
[
i
] =
ids
[
j
])

252 
chûdªn
->
d©a
[
j
] = 
d©a_‹g
[
i
];

255 
	}
}

257 
	$dëîmöe_ñe˘i⁄_°©us
(
EÀ˘i⁄_d©a
 *
ñ_d©a
)

259 
Såög_ve˘‹
 
chûdªn
;

260 
rc
 = 
	`zoo_gë_chûdªn
(
ñ_d©a
->
zh
,Él_d©a->
roŸ
, 0, &
chûdªn
);

261 i‡(
rc
 !
ZNONODE
) {

262 i‡(
rc
 !
ZOK
) {

263 
	`LOG_ERROR
(("FaûedÅÿgë chûdª¿o‡%s,Ñc=%d", 
ñ_d©a
->
roŸ
, 
rc
));

264  
rc
;

266 
	`s‹t_of„rs
(&
chûdªn
);

267 
i
;

268 
i
 = 0; i < 
chûdªn
.
cou¡
; i++) {

269 
	`Ârötf
(
°dîr
, "föd chûdªn:%s\n", 
chûdªn
.
d©a
[
i
]);

270 i‡(
	`∑th2ñe˘i⁄_id
(
chûdªn
.
d©a
[
i
]Ë=
ñ_d©a
->
ñe˘i⁄_id
) {

271 
	`Ârötf
(
°dout
, "thîê%dÜódî of„r. Iám %d\n", 
chûdªn
.
cou¡
, 
i
);

272 i‡(
i
 == 0) {

273 
	`become_Àadî
(
ñ_d©a
);

275 
	`become_ªady
(
ñ_d©a
, 
chûdªn
.
d©a
[
i
 - 1]);

279 
	`‰ì_Såög_ve˘‹
(&
chûdªn
);

282 
	}
}

284 
	$ñ_d©a_öô
(
EÀ˘i⁄_d©a
 *
ñ_d©a
, c⁄° *
ho°
, 
timeout
)

286 
ñ_d©a
->
ñe˘i⁄_id
 = -1;

287 
ñ_d©a
->
roŸ
 = "/ELECTION";

288 
ñ_d©a
->
°©e
 = 
START
;

289 
ñ_d©a
->
w©ch_ñe˘i⁄_id
 = -1;

290 
ñ_d©a
->
zh
 = 
	`zookì≥r_öô
(
ho°
,

291 
zkeji_w©chî_g
, 
timeout
, 0, "helloÉjitec.", 0);

292 i‡(
ñ_d©a
->
zh
 =
NULL
) {

293 
	`Ârötf
(
°dîr
, "Error when connectingÅo zookeeper servers...\n");

294 
	`exô
(
EXIT_FAILURE
);

296 
	}
}

298 
	$ñ_d©a_deöô
(
EÀ˘i⁄_d©a
 *
ñ_d©a
)

300 
ñ_d©a
->
ñe˘i⁄_id
 = -1;

301 
ñ_d©a
->
roŸ
 = "/ELECTION";

302 
ñ_d©a
->
°©e
 = 
STOP
;

303 
ñ_d©a
->
w©ch_ñe˘i⁄_id
 = -1;

304 
	`zookì≥r_˛o£
(
ñ_d©a
->
zh
);

305 
ñ_d©a
->
zh
 = 
NULL
;

306 
	}
}

308 
	$ek_°¨t
(c⁄° *
ho°
, 
timeout
)

310 
	`zoo_£t_debug_Àvñ
(
ZOO_LOG_LEVEL_WARN
);

311 
	`ñ_d©a_öô
(&
ñe˘i⁄_d©a_g
, 
ho°
, 
timeout
);

312 
	`make_of„r
(&
ñe˘i⁄_d©a_g
);

313 
	`Ârötf
(
°dout
, "ñe˘i⁄ id: %ld\n", 
ñe˘i⁄_d©a_g
.
ñe˘i⁄_id
);

314 
	`dëîmöe_ñe˘i⁄_°©us
(&
ñe˘i⁄_d©a_g
);

315 
	}
}

317 
	$ek_°›
()

319 
	`ñ_d©a_deöô
(&
ñe˘i⁄_d©a_g
);

320 
	}
}

322 
	$maö
(
¨gc
, c⁄° *
¨gv
[])

324 c⁄° * 
ho°
 = "192.168.3.190:2181,192.168.3.191:2181,192.168.3.192:2181";

325 
timeout
 = 30000;

327 
	`ek_°¨t
(
ho°
, 
timeout
);

329 
	`gëch¨
();

331 
	`ek_°›
();

333 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/generated/zookeeper.jute.c

19 
	~<°dlib.h
>

20 
	~"zookì≥r.juã.h
"

22 
	$£rülize_Id
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Id
 *
v
){

23 
rc
;

24 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

25 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "scheme", &
v
->
scheme
);

26 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "id", &
v
->
id
);

27 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

28  
rc
;

29 
	}
}

30 
	$de£rülize_Id
(
ürchive
 *
ö
, c⁄° *
èg
, 
Id
*
v
){

31 
rc
;

32 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

33 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "scheme", &
v
->
scheme
);

34 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "id", &
v
->
id
);

35 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

36  
rc
;

37 
	}
}

38 
	$dóŒoˇã_Id
(
Id
*
v
){

39 
	`dóŒoˇã_Såög
(&
v
->
scheme
);

40 
	`dóŒoˇã_Såög
(&
v
->
id
);

41 
	}
}

42 
	$£rülize_ACL
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
ACL
 *
v
){

43 
rc
;

44 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

45 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "≥rms", &
v
->
≥rms
);

46 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Id
(
out
, "id", &
v
->
id
);

47 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

48  
rc
;

49 
	}
}

50 
	$de£rülize_ACL
(
ürchive
 *
ö
, c⁄° *
èg
, 
ACL
*
v
){

51 
rc
;

52 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

53 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "≥rms", &
v
->
≥rms
);

54 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Id
(
ö
, "id", &
v
->
id
);

55 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

56  
rc
;

57 
	}
}

58 
	$dóŒoˇã_ACL
(
ACL
*
v
){

59 
	`dóŒoˇã_Id
(&
v
->
id
);

60 
	}
}

61 
	$£rülize_Sèt
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Sèt
 *
v
){

62 
rc
;

63 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

64 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "czxid", &
v
->
czxid
);

65 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mzxid", &
v
->
mzxid
);

66 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "˘ime", &
v
->
˘ime
);

67 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mtime", &
v
->
mtime
);

68 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

69 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "cvîsi⁄", &
v
->
cvîsi⁄
);

70 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "avîsi⁄", &
v
->
avîsi⁄
);

71 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

72 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "d©aLígth", &
v
->
d©aLígth
);

73 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "numChûdªn", &
v
->
numChûdªn
);

74 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "pzxid", &
v
->
pzxid
);

75 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

76  
rc
;

77 
	}
}

78 
	$de£rülize_Sèt
(
ürchive
 *
ö
, c⁄° *
èg
, 
Sèt
*
v
){

79 
rc
;

80 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

81 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "czxid", &
v
->
czxid
);

82 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mzxid", &
v
->
mzxid
);

83 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "˘ime", &
v
->
˘ime
);

84 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mtime", &
v
->
mtime
);

85 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

86 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "cvîsi⁄", &
v
->
cvîsi⁄
);

87 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "avîsi⁄", &
v
->
avîsi⁄
);

88 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

89 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "d©aLígth", &
v
->
d©aLígth
);

90 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "numChûdªn", &
v
->
numChûdªn
);

91 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "pzxid", &
v
->
pzxid
);

92 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

93  
rc
;

94 
	}
}

95 
	$dóŒoˇã_Sèt
(
Sèt
*
v
){

96 
	}
}

97 
	$£rülize_SètPîsi°ed
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SètPîsi°ed
 *
v
){

98 
rc
;

99 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

100 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "czxid", &
v
->
czxid
);

101 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mzxid", &
v
->
mzxid
);

102 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "˘ime", &
v
->
˘ime
);

103 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mtime", &
v
->
mtime
);

104 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

105 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "cvîsi⁄", &
v
->
cvîsi⁄
);

106 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "avîsi⁄", &
v
->
avîsi⁄
);

107 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

108 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "pzxid", &
v
->
pzxid
);

109 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

110  
rc
;

111 
	}
}

112 
	$de£rülize_SètPîsi°ed
(
ürchive
 *
ö
, c⁄° *
èg
, 
SètPîsi°ed
*
v
){

113 
rc
;

114 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

115 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "czxid", &
v
->
czxid
);

116 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mzxid", &
v
->
mzxid
);

117 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "˘ime", &
v
->
˘ime
);

118 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mtime", &
v
->
mtime
);

119 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

120 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "cvîsi⁄", &
v
->
cvîsi⁄
);

121 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "avîsi⁄", &
v
->
avîsi⁄
);

122 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

123 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "pzxid", &
v
->
pzxid
);

124 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

125  
rc
;

126 
	}
}

127 
	$dóŒoˇã_SètPîsi°ed
(
SètPîsi°ed
*
v
){

128 
	}
}

129 
	$£rülize_SètPîsi°edV1
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SètPîsi°edV1
 *
v
){

130 
rc
;

131 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

132 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "czxid", &
v
->
czxid
);

133 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mzxid", &
v
->
mzxid
);

134 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "˘ime", &
v
->
˘ime
);

135 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "mtime", &
v
->
mtime
);

136 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

137 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "cvîsi⁄", &
v
->
cvîsi⁄
);

138 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "avîsi⁄", &
v
->
avîsi⁄
);

139 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

140 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

141  
rc
;

142 
	}
}

143 
	$de£rülize_SètPîsi°edV1
(
ürchive
 *
ö
, c⁄° *
èg
, 
SètPîsi°edV1
*
v
){

144 
rc
;

145 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

146 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "czxid", &
v
->
czxid
);

147 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mzxid", &
v
->
mzxid
);

148 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "˘ime", &
v
->
˘ime
);

149 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "mtime", &
v
->
mtime
);

150 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

151 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "cvîsi⁄", &
v
->
cvîsi⁄
);

152 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "avîsi⁄", &
v
->
avîsi⁄
);

153 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "ïhemîÆOw√r", &
v
->
ïhemîÆOw√r
);

154 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

155  
rc
;

156 
	}
}

157 
	$dóŒoˇã_SètPîsi°edV1
(
SètPîsi°edV1
*
v
){

158 
	}
}

159 
	$£rülize_C⁄√˘Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
C⁄√˘Reque°
 *
v
){

160 
rc
;

161 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

162 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

163 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "œ°ZxidSìn", &
v
->
œ°ZxidSìn
);

164 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "timeOut", &
v
->
timeOut
);

165 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "£ssi⁄Id", &
v
->
£ssi⁄Id
);

166 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "∑sswd", &
v
->
∑sswd
);

167 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

168  
rc
;

169 
	}
}

170 
	$de£rülize_C⁄√˘Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
C⁄√˘Reque°
*
v
){

171 
rc
;

172 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

173 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

174 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "œ°ZxidSìn", &
v
->
œ°ZxidSìn
);

175 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "timeOut", &
v
->
timeOut
);

176 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "£ssi⁄Id", &
v
->
£ssi⁄Id
);

177 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "∑sswd", &
v
->
∑sswd
);

178 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

179  
rc
;

180 
	}
}

181 
	$dóŒoˇã_C⁄√˘Reque°
(
C⁄√˘Reque°
*
v
){

182 
	`dóŒoˇã_Buf„r
(&
v
->
∑sswd
);

183 
	}
}

184 
	$£rülize_C⁄√˘Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
C⁄√˘Re•⁄£
 *
v
){

185 
rc
;

186 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

187 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

188 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "timeOut", &
v
->
timeOut
);

189 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "£ssi⁄Id", &
v
->
£ssi⁄Id
);

190 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "∑sswd", &
v
->
∑sswd
);

191 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

192  
rc
;

193 
	}
}

194 
	$de£rülize_C⁄√˘Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
C⁄√˘Re•⁄£
*
v
){

195 
rc
;

196 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

197 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

198 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "timeOut", &
v
->
timeOut
);

199 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "£ssi⁄Id", &
v
->
£ssi⁄Id
);

200 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "∑sswd", &
v
->
∑sswd
);

201 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

202  
rc
;

203 
	}
}

204 
	$dóŒoˇã_C⁄√˘Re•⁄£
(
C⁄√˘Re•⁄£
*
v
){

205 
	`dóŒoˇã_Buf„r
(&
v
->
∑sswd
);

206 
	}
}

207 
	$Æloˇã_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
, 
öt32_t
 
Àn
) {

208 i‡(!
Àn
) {

209 
v
->
cou¡
 = 0;

210 
v
->
d©a
 = 0;

212 
v
->
cou¡
 = 
Àn
;

213 
v
->
d©a
 = 
	`ˇŒoc
((*v->d©a), 
Àn
);

216 
	}
}

217 
	$dóŒoˇã_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
) {

218 i‡(
v
->
d©a
) {

219 
öt32_t
 
i
;

220 
i
=0;i<
v
->
cou¡
; i++) {

221 
	`dóŒoˇã_Såög
(&
v
->
d©a
[
i
]);

223 
	`‰ì
(
v
->
d©a
);

224 
v
->
d©a
 = 0;

227 
	}
}

228 
	$£rülize_Såög_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Såög_ve˘‹
 *
v
)

230 
öt32_t
 
cou¡
 = 
v
->count;

231 
rc
 = 0;

232 
öt32_t
 
i
;

233 
rc
 = 
out
->
	`°¨t_ve˘‹
(out, 
èg
, &
cou¡
);

234 
i
=0;i<
v
->
cou¡
;i++) {

235 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "d©a", &
v
->
d©a
[
i
]);

237 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ve˘‹
(out, 
èg
);

238  
rc
;

239 
	}
}

240 
	$de£rülize_Såög_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Såög_ve˘‹
 *
v
)

242 
rc
 = 0;

243 
öt32_t
 
i
;

244 
rc
 = 
ö
->
	`°¨t_ve˘‹
(ö, 
èg
, &
v
->
cou¡
);

245 
v
->
d©a
 = 
	`ˇŒoc
(v->
cou¡
, (*v->data));

246 
i
=0;i<
v
->
cou¡
;i++) {

247 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "vÆue", &
v
->
d©a
[
i
]);

249 
rc
 = 
ö
->
	`íd_ve˘‹
(ö, 
èg
);

250  
rc
;

251 
	}
}

252 
	$£rülize_SëW©ches
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëW©ches
 *
v
){

253 
rc
;

254 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

255 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "ªœtiveZxid", &
v
->
ªœtiveZxid
);

256 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Såög_ve˘‹
(
out
, "d©aW©ches", &
v
->
d©aW©ches
);

257 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Såög_ve˘‹
(
out
, "exi°W©ches", &
v
->
exi°W©ches
);

258 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Såög_ve˘‹
(
out
, "chûdW©ches", &
v
->
chûdW©ches
);

259 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

260  
rc
;

261 
	}
}

262 
	$de£rülize_SëW©ches
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëW©ches
*
v
){

263 
rc
;

264 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

265 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "ªœtiveZxid", &
v
->
ªœtiveZxid
);

266 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Såög_ve˘‹
(
ö
, "d©aW©ches", &
v
->
d©aW©ches
);

267 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Såög_ve˘‹
(
ö
, "exi°W©ches", &
v
->
exi°W©ches
);

268 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Såög_ve˘‹
(
ö
, "chûdW©ches", &
v
->
chûdW©ches
);

269 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

270  
rc
;

271 
	}
}

272 
	$dóŒoˇã_SëW©ches
(
SëW©ches
*
v
){

273 
	`dóŒoˇã_Såög_ve˘‹
(&
v
->
d©aW©ches
);

274 
	`dóŒoˇã_Såög_ve˘‹
(&
v
->
exi°W©ches
);

275 
	`dóŒoˇã_Såög_ve˘‹
(&
v
->
chûdW©ches
);

276 
	}
}

277 
	$£rülize_Reque°Hódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Reque°Hódî
 *
v
){

278 
rc
;

279 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

280 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "xid", &
v
->
xid
);

281 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

282 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

283  
rc
;

284 
	}
}

285 
	$de£rülize_Reque°Hódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
Reque°Hódî
*
v
){

286 
rc
;

287 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

288 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "xid", &
v
->
xid
);

289 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

290 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

291  
rc
;

292 
	}
}

293 
	$dóŒoˇã_Reque°Hódî
(
Reque°Hódî
*
v
){

294 
	}
}

295 
	$£rülize_Mu…iHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Mu…iHódî
 *
v
){

296 
rc
;

297 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

298 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

299 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "d⁄e", &
v
->
d⁄e
);

300 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "îr", &
v
->
îr
);

301 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

302  
rc
;

303 
	}
}

304 
	$de£rülize_Mu…iHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
Mu…iHódî
*
v
){

305 
rc
;

306 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

307 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

308 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "d⁄e", &
v
->
d⁄e
);

309 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "îr", &
v
->
îr
);

310 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

311  
rc
;

312 
	}
}

313 
	$dóŒoˇã_Mu…iHódî
(
Mu…iHódî
*
v
){

314 
	}
}

315 
	$£rülize_AuthPackë
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
AuthPackë
 *
v
){

316 
rc
;

317 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

318 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

319 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "scheme", &
v
->
scheme
);

320 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "auth", &
v
->
auth
);

321 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

322  
rc
;

323 
	}
}

324 
	$de£rülize_AuthPackë
(
ürchive
 *
ö
, c⁄° *
èg
, 
AuthPackë
*
v
){

325 
rc
;

326 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

327 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

328 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "scheme", &
v
->
scheme
);

329 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "auth", &
v
->
auth
);

330 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

331  
rc
;

332 
	}
}

333 
	$dóŒoˇã_AuthPackë
(
AuthPackë
*
v
){

334 
	`dóŒoˇã_Såög
(&
v
->
scheme
);

335 
	`dóŒoˇã_Buf„r
(&
v
->
auth
);

336 
	}
}

337 
	$£rülize_RïlyHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
RïlyHódî
 *
v
){

338 
rc
;

339 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

340 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "xid", &
v
->
xid
);

341 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "zxid", &
v
->
zxid
);

342 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "îr", &
v
->
îr
);

343 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

344  
rc
;

345 
	}
}

346 
	$de£rülize_RïlyHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
RïlyHódî
*
v
){

347 
rc
;

348 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

349 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "xid", &
v
->
xid
);

350 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "zxid", &
v
->
zxid
);

351 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "îr", &
v
->
îr
);

352 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

353  
rc
;

354 
	}
}

355 
	$dóŒoˇã_RïlyHódî
(
RïlyHódî
*
v
){

356 
	}
}

357 
	$£rülize_GëD©aReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëD©aReque°
 *
v
){

358 
rc
;

359 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

360 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

361 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "w©ch", &
v
->
w©ch
);

362 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

363  
rc
;

364 
	}
}

365 
	$de£rülize_GëD©aReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëD©aReque°
*
v
){

366 
rc
;

367 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

368 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

369 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "w©ch", &
v
->
w©ch
);

370 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

371  
rc
;

372 
	}
}

373 
	$dóŒoˇã_GëD©aReque°
(
GëD©aReque°
*
v
){

374 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

375 
	}
}

376 
	$£rülize_SëD©aReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aReque°
 *
v
){

377 
rc
;

378 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

379 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

380 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

381 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

382 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

383  
rc
;

384 
	}
}

385 
	$de£rülize_SëD©aReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aReque°
*
v
){

386 
rc
;

387 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

388 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

389 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

390 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

391 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

392  
rc
;

393 
	}
}

394 
	$dóŒoˇã_SëD©aReque°
(
SëD©aReque°
*
v
){

395 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

396 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

397 
	}
}

398 
	$£rülize_SëD©aRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aRe•⁄£
 *
v
){

399 
rc
;

400 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

401 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

402 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

403  
rc
;

404 
	}
}

405 
	$de£rülize_SëD©aRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aRe•⁄£
*
v
){

406 
rc
;

407 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

408 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

409 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

410  
rc
;

411 
	}
}

412 
	$dóŒoˇã_SëD©aRe•⁄£
(
SëD©aRe•⁄£
*
v
){

413 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

414 
	}
}

415 
	$£rülize_GëSASLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëSASLReque°
 *
v
){

416 
rc
;

417 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

418 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "tokí", &
v
->
tokí
);

419 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

420  
rc
;

421 
	}
}

422 
	$de£rülize_GëSASLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëSASLReque°
*
v
){

423 
rc
;

424 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

425 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "tokí", &
v
->
tokí
);

426 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

427  
rc
;

428 
	}
}

429 
	$dóŒoˇã_GëSASLReque°
(
GëSASLReque°
*
v
){

430 
	`dóŒoˇã_Buf„r
(&
v
->
tokí
);

431 
	}
}

432 
	$£rülize_SëSASLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëSASLReque°
 *
v
){

433 
rc
;

434 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

435 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "tokí", &
v
->
tokí
);

436 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

437  
rc
;

438 
	}
}

439 
	$de£rülize_SëSASLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëSASLReque°
*
v
){

440 
rc
;

441 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

442 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "tokí", &
v
->
tokí
);

443 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

444  
rc
;

445 
	}
}

446 
	$dóŒoˇã_SëSASLReque°
(
SëSASLReque°
*
v
){

447 
	`dóŒoˇã_Buf„r
(&
v
->
tokí
);

448 
	}
}

449 
	$£rülize_SëSASLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëSASLRe•⁄£
 *
v
){

450 
rc
;

451 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

452 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "tokí", &
v
->
tokí
);

453 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

454  
rc
;

455 
	}
}

456 
	$de£rülize_SëSASLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëSASLRe•⁄£
*
v
){

457 
rc
;

458 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

459 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "tokí", &
v
->
tokí
);

460 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

461  
rc
;

462 
	}
}

463 
	$dóŒoˇã_SëSASLRe•⁄£
(
SëSASLRe•⁄£
*
v
){

464 
	`dóŒoˇã_Buf„r
(&
v
->
tokí
);

465 
	}
}

466 
	$Æloˇã_ACL_ve˘‹
(
ACL_ve˘‹
 *
v
, 
öt32_t
 
Àn
) {

467 i‡(!
Àn
) {

468 
v
->
cou¡
 = 0;

469 
v
->
d©a
 = 0;

471 
v
->
cou¡
 = 
Àn
;

472 
v
->
d©a
 = 
	`ˇŒoc
((*v->d©a), 
Àn
);

475 
	}
}

476 
	$dóŒoˇã_ACL_ve˘‹
(
ACL_ve˘‹
 *
v
) {

477 i‡(
v
->
d©a
) {

478 
öt32_t
 
i
;

479 
i
=0;i<
v
->
cou¡
; i++) {

480 
	`dóŒoˇã_ACL
(&
v
->
d©a
[
i
]);

482 
	`‰ì
(
v
->
d©a
);

483 
v
->
d©a
 = 0;

486 
	}
}

487 
	$£rülize_ACL_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
ACL_ve˘‹
 *
v
)

489 
öt32_t
 
cou¡
 = 
v
->count;

490 
rc
 = 0;

491 
öt32_t
 
i
;

492 
rc
 = 
out
->
	`°¨t_ve˘‹
(out, 
èg
, &
cou¡
);

493 
i
=0;i<
v
->
cou¡
;i++) {

494 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL
(
out
, "d©a", &
v
->
d©a
[
i
]);

496 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ve˘‹
(out, 
èg
);

497  
rc
;

498 
	}
}

499 
	$de£rülize_ACL_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
ACL_ve˘‹
 *
v
)

501 
rc
 = 0;

502 
öt32_t
 
i
;

503 
rc
 = 
ö
->
	`°¨t_ve˘‹
(ö, 
èg
, &
v
->
cou¡
);

504 
v
->
d©a
 = 
	`ˇŒoc
(v->
cou¡
, (*v->data));

505 
i
=0;i<
v
->
cou¡
;i++) {

506 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL
(
ö
, "vÆue", &
v
->
d©a
[
i
]);

508 
rc
 = 
ö
->
	`íd_ve˘‹
(ö, 
èg
);

509  
rc
;

510 
	}
}

511 
	$£rülize_Cª©eReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eReque°
 *
v
){

512 
rc
;

513 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

514 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

515 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

516 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

517 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "Êags", &
v
->
Êags
);

518 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

519  
rc
;

520 
	}
}

521 
	$de£rülize_Cª©eReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eReque°
*
v
){

522 
rc
;

523 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

524 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

525 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

526 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

527 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "Êags", &
v
->
Êags
);

528 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

529  
rc
;

530 
	}
}

531 
	$dóŒoˇã_Cª©eReque°
(
Cª©eReque°
*
v
){

532 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

533 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

534 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

535 
	}
}

536 
	$£rülize_DñëeReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
DñëeReque°
 *
v
){

537 
rc
;

538 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

539 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

540 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

541 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

542  
rc
;

543 
	}
}

544 
	$de£rülize_DñëeReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
DñëeReque°
*
v
){

545 
rc
;

546 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

547 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

548 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

549 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

550  
rc
;

551 
	}
}

552 
	$dóŒoˇã_DñëeReque°
(
DñëeReque°
*
v
){

553 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

554 
	}
}

555 
	$£rülize_GëChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªnReque°
 *
v
){

556 
rc
;

557 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

558 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

559 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "w©ch", &
v
->
w©ch
);

560 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

561  
rc
;

562 
	}
}

563 
	$de£rülize_GëChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªnReque°
*
v
){

564 
rc
;

565 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

566 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

567 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "w©ch", &
v
->
w©ch
);

568 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

569  
rc
;

570 
	}
}

571 
	$dóŒoˇã_GëChûdªnReque°
(
GëChûdªnReque°
*
v
){

572 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

573 
	}
}

574 
	$£rülize_GëChûdªn2Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªn2Reque°
 *
v
){

575 
rc
;

576 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

577 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

578 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "w©ch", &
v
->
w©ch
);

579 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

580  
rc
;

581 
	}
}

582 
	$de£rülize_GëChûdªn2Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªn2Reque°
*
v
){

583 
rc
;

584 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

585 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

586 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "w©ch", &
v
->
w©ch
);

587 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

588  
rc
;

589 
	}
}

590 
	$dóŒoˇã_GëChûdªn2Reque°
(
GëChûdªn2Reque°
*
v
){

591 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

592 
	}
}

593 
	$£rülize_CheckVîsi⁄Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
CheckVîsi⁄Reque°
 *
v
){

594 
rc
;

595 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

596 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

597 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

598 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

599  
rc
;

600 
	}
}

601 
	$de£rülize_CheckVîsi⁄Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
CheckVîsi⁄Reque°
*
v
){

602 
rc
;

603 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

604 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

605 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

606 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

607  
rc
;

608 
	}
}

609 
	$dóŒoˇã_CheckVîsi⁄Reque°
(
CheckVîsi⁄Reque°
*
v
){

610 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

611 
	}
}

612 
	$£rülize_GëMaxChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëMaxChûdªnReque°
 *
v
){

613 
rc
;

614 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

615 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

616 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

617  
rc
;

618 
	}
}

619 
	$de£rülize_GëMaxChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëMaxChûdªnReque°
*
v
){

620 
rc
;

621 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

622 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

623 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

624  
rc
;

625 
	}
}

626 
	$dóŒoˇã_GëMaxChûdªnReque°
(
GëMaxChûdªnReque°
*
v
){

627 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

628 
	}
}

629 
	$£rülize_GëMaxChûdªnRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëMaxChûdªnRe•⁄£
 *
v
){

630 
rc
;

631 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

632 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "max", &
v
->
max
);

633 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

634  
rc
;

635 
	}
}

636 
	$de£rülize_GëMaxChûdªnRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëMaxChûdªnRe•⁄£
*
v
){

637 
rc
;

638 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

639 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "max", &
v
->
max
);

640 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

641  
rc
;

642 
	}
}

643 
	$dóŒoˇã_GëMaxChûdªnRe•⁄£
(
GëMaxChûdªnRe•⁄£
*
v
){

644 
	}
}

645 
	$£rülize_SëMaxChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëMaxChûdªnReque°
 *
v
){

646 
rc
;

647 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

648 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

649 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "max", &
v
->
max
);

650 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

651  
rc
;

652 
	}
}

653 
	$de£rülize_SëMaxChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëMaxChûdªnReque°
*
v
){

654 
rc
;

655 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

656 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

657 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "max", &
v
->
max
);

658 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

659  
rc
;

660 
	}
}

661 
	$dóŒoˇã_SëMaxChûdªnReque°
(
SëMaxChûdªnReque°
*
v
){

662 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

663 
	}
}

664 
	$£rülize_SyncReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SyncReque°
 *
v
){

665 
rc
;

666 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

667 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

668 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

669  
rc
;

670 
	}
}

671 
	$de£rülize_SyncReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SyncReque°
*
v
){

672 
rc
;

673 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

674 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

675 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

676  
rc
;

677 
	}
}

678 
	$dóŒoˇã_SyncReque°
(
SyncReque°
*
v
){

679 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

680 
	}
}

681 
	$£rülize_SyncRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SyncRe•⁄£
 *
v
){

682 
rc
;

683 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

684 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

685 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

686  
rc
;

687 
	}
}

688 
	$de£rülize_SyncRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SyncRe•⁄£
*
v
){

689 
rc
;

690 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

691 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

692 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

693  
rc
;

694 
	}
}

695 
	$dóŒoˇã_SyncRe•⁄£
(
SyncRe•⁄£
*
v
){

696 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

697 
	}
}

698 
	$£rülize_GëACLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëACLReque°
 *
v
){

699 
rc
;

700 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

701 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

702 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

703  
rc
;

704 
	}
}

705 
	$de£rülize_GëACLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëACLReque°
*
v
){

706 
rc
;

707 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

708 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

709 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

710  
rc
;

711 
	}
}

712 
	$dóŒoˇã_GëACLReque°
(
GëACLReque°
*
v
){

713 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

714 
	}
}

715 
	$£rülize_SëACLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLReque°
 *
v
){

716 
rc
;

717 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

718 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

719 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

720 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

721 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

722  
rc
;

723 
	}
}

724 
	$de£rülize_SëACLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLReque°
*
v
){

725 
rc
;

726 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

727 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

728 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

729 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

730 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

731  
rc
;

732 
	}
}

733 
	$dóŒoˇã_SëACLReque°
(
SëACLReque°
*
v
){

734 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

735 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

736 
	}
}

737 
	$£rülize_SëACLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLRe•⁄£
 *
v
){

738 
rc
;

739 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

740 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

741 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

742  
rc
;

743 
	}
}

744 
	$de£rülize_SëACLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLRe•⁄£
*
v
){

745 
rc
;

746 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

747 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

748 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

749  
rc
;

750 
	}
}

751 
	$dóŒoˇã_SëACLRe•⁄£
(
SëACLRe•⁄£
*
v
){

752 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

753 
	}
}

754 
	$£rülize_W©chîEvít
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
W©chîEvít
 *
v
){

755 
rc
;

756 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

757 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

758 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "°©e", &
v
->
°©e
);

759 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

760 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

761  
rc
;

762 
	}
}

763 
	$de£rülize_W©chîEvít
(
ürchive
 *
ö
, c⁄° *
èg
, 
W©chîEvít
*
v
){

764 
rc
;

765 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

766 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

767 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "°©e", &
v
->
°©e
);

768 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

769 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

770  
rc
;

771 
	}
}

772 
	$dóŒoˇã_W©chîEvít
(
W©chîEvít
*
v
){

773 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

774 
	}
}

775 
	$£rülize_Eº‹Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Eº‹Re•⁄£
 *
v
){

776 
rc
;

777 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

778 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "îr", &
v
->
îr
);

779 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

780  
rc
;

781 
	}
}

782 
	$de£rülize_Eº‹Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Eº‹Re•⁄£
*
v
){

783 
rc
;

784 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

785 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "îr", &
v
->
îr
);

786 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

787  
rc
;

788 
	}
}

789 
	$dóŒoˇã_Eº‹Re•⁄£
(
Eº‹Re•⁄£
*
v
){

790 
	}
}

791 
	$£rülize_Cª©eRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eRe•⁄£
 *
v
){

792 
rc
;

793 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

794 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

795 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

796  
rc
;

797 
	}
}

798 
	$de£rülize_Cª©eRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eRe•⁄£
*
v
){

799 
rc
;

800 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

801 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

802 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

803  
rc
;

804 
	}
}

805 
	$dóŒoˇã_Cª©eRe•⁄£
(
Cª©eRe•⁄£
*
v
){

806 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

807 
	}
}

808 
	$£rülize_Exi°sReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Exi°sReque°
 *
v
){

809 
rc
;

810 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

811 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

812 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "w©ch", &
v
->
w©ch
);

813 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

814  
rc
;

815 
	}
}

816 
	$de£rülize_Exi°sReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
Exi°sReque°
*
v
){

817 
rc
;

818 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

819 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

820 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "w©ch", &
v
->
w©ch
);

821 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

822  
rc
;

823 
	}
}

824 
	$dóŒoˇã_Exi°sReque°
(
Exi°sReque°
*
v
){

825 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

826 
	}
}

827 
	$£rülize_Exi°sRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Exi°sRe•⁄£
 *
v
){

828 
rc
;

829 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

830 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

831 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

832  
rc
;

833 
	}
}

834 
	$de£rülize_Exi°sRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Exi°sRe•⁄£
*
v
){

835 
rc
;

836 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

837 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

838 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

839  
rc
;

840 
	}
}

841 
	$dóŒoˇã_Exi°sRe•⁄£
(
Exi°sRe•⁄£
*
v
){

842 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

843 
	}
}

844 
	$£rülize_GëD©aRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëD©aRe•⁄£
 *
v
){

845 
rc
;

846 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

847 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

848 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

849 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

850  
rc
;

851 
	}
}

852 
	$de£rülize_GëD©aRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëD©aRe•⁄£
*
v
){

853 
rc
;

854 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

855 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

856 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

857 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

858  
rc
;

859 
	}
}

860 
	$dóŒoˇã_GëD©aRe•⁄£
(
GëD©aRe•⁄£
*
v
){

861 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

862 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

863 
	}
}

864 
	$£rülize_GëChûdªnRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªnRe•⁄£
 *
v
){

865 
rc
;

866 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

867 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Såög_ve˘‹
(
out
, "chûdªn", &
v
->
chûdªn
);

868 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

869  
rc
;

870 
	}
}

871 
	$de£rülize_GëChûdªnRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªnRe•⁄£
*
v
){

872 
rc
;

873 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

874 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Såög_ve˘‹
(
ö
, "chûdªn", &
v
->
chûdªn
);

875 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

876  
rc
;

877 
	}
}

878 
	$dóŒoˇã_GëChûdªnRe•⁄£
(
GëChûdªnRe•⁄£
*
v
){

879 
	`dóŒoˇã_Såög_ve˘‹
(&
v
->
chûdªn
);

880 
	}
}

881 
	$£rülize_GëChûdªn2Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªn2Re•⁄£
 *
v
){

882 
rc
;

883 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

884 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Såög_ve˘‹
(
out
, "chûdªn", &
v
->
chûdªn
);

885 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

886 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

887  
rc
;

888 
	}
}

889 
	$de£rülize_GëChûdªn2Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªn2Re•⁄£
*
v
){

890 
rc
;

891 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

892 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Såög_ve˘‹
(
ö
, "chûdªn", &
v
->
chûdªn
);

893 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

894 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

895  
rc
;

896 
	}
}

897 
	$dóŒoˇã_GëChûdªn2Re•⁄£
(
GëChûdªn2Re•⁄£
*
v
){

898 
	`dóŒoˇã_Såög_ve˘‹
(&
v
->
chûdªn
);

899 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

900 
	}
}

901 
	$£rülize_GëACLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëACLRe•⁄£
 *
v
){

902 
rc
;

903 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

904 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

905 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Sèt
(
out
, "°©", &
v
->
°©
);

906 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

907  
rc
;

908 
	}
}

909 
	$de£rülize_GëACLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëACLRe•⁄£
*
v
){

910 
rc
;

911 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

912 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

913 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Sèt
(
ö
, "°©", &
v
->
°©
);

914 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

915  
rc
;

916 
	}
}

917 
	$dóŒoˇã_GëACLRe•⁄£
(
GëACLRe•⁄£
*
v
){

918 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

919 
	`dóŒoˇã_Sèt
(&
v
->
°©
);

920 
	}
}

921 
	$£rülize_Ló∫îInfo
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Ló∫îInfo
 *
v
){

922 
rc
;

923 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

924 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "£rvîid", &
v
->
£rvîid
);

925 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

926 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

927  
rc
;

928 
	}
}

929 
	$de£rülize_Ló∫îInfo
(
ürchive
 *
ö
, c⁄° *
èg
, 
Ló∫îInfo
*
v
){

930 
rc
;

931 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

932 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "£rvîid", &
v
->
£rvîid
);

933 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "¥ŸocﬁVîsi⁄", &
v
->
¥ŸocﬁVîsi⁄
);

934 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

935  
rc
;

936 
	}
}

937 
	$dóŒoˇã_Ló∫îInfo
(
Ló∫îInfo
*
v
){

938 
	}
}

939 
	$Æloˇã_Id_ve˘‹
(
Id_ve˘‹
 *
v
, 
öt32_t
 
Àn
) {

940 i‡(!
Àn
) {

941 
v
->
cou¡
 = 0;

942 
v
->
d©a
 = 0;

944 
v
->
cou¡
 = 
Àn
;

945 
v
->
d©a
 = 
	`ˇŒoc
((*v->d©a), 
Àn
);

948 
	}
}

949 
	$dóŒoˇã_Id_ve˘‹
(
Id_ve˘‹
 *
v
) {

950 i‡(
v
->
d©a
) {

951 
öt32_t
 
i
;

952 
i
=0;i<
v
->
cou¡
; i++) {

953 
	`dóŒoˇã_Id
(&
v
->
d©a
[
i
]);

955 
	`‰ì
(
v
->
d©a
);

956 
v
->
d©a
 = 0;

959 
	}
}

960 
	$£rülize_Id_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Id_ve˘‹
 *
v
)

962 
öt32_t
 
cou¡
 = 
v
->count;

963 
rc
 = 0;

964 
öt32_t
 
i
;

965 
rc
 = 
out
->
	`°¨t_ve˘‹
(out, 
èg
, &
cou¡
);

966 
i
=0;i<
v
->
cou¡
;i++) {

967 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Id
(
out
, "d©a", &
v
->
d©a
[
i
]);

969 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ve˘‹
(out, 
èg
);

970  
rc
;

971 
	}
}

972 
	$de£rülize_Id_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Id_ve˘‹
 *
v
)

974 
rc
 = 0;

975 
öt32_t
 
i
;

976 
rc
 = 
ö
->
	`°¨t_ve˘‹
(ö, 
èg
, &
v
->
cou¡
);

977 
v
->
d©a
 = 
	`ˇŒoc
(v->
cou¡
, (*v->data));

978 
i
=0;i<
v
->
cou¡
;i++) {

979 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Id
(
ö
, "vÆue", &
v
->
d©a
[
i
]);

981 
rc
 = 
ö
->
	`íd_ve˘‹
(ö, 
èg
);

982  
rc
;

983 
	}
}

984 
	$£rülize_Qu‹umPackë
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Qu‹umPackë
 *
v
){

985 
rc
;

986 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

987 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

988 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "zxid", &
v
->
zxid
);

989 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

990 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Id_ve˘‹
(
out
, "authöfo", &
v
->
authöfo
);

991 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

992  
rc
;

993 
	}
}

994 
	$de£rülize_Qu‹umPackë
(
ürchive
 *
ö
, c⁄° *
èg
, 
Qu‹umPackë
*
v
){

995 
rc
;

996 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

997 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

998 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "zxid", &
v
->
zxid
);

999 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

1000 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Id_ve˘‹
(
ö
, "authöfo", &
v
->
authöfo
);

1001 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1002  
rc
;

1003 
	}
}

1004 
	$dóŒoˇã_Qu‹umPackë
(
Qu‹umPackë
*
v
){

1005 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

1006 
	`dóŒoˇã_Id_ve˘‹
(&
v
->
authöfo
);

1007 
	}
}

1008 
	$£rülize_FûeHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
FûeHódî
 *
v
){

1009 
rc
;

1010 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1011 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "magic", &
v
->
magic
);

1012 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

1013 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "dbid", &
v
->
dbid
);

1014 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1015  
rc
;

1016 
	}
}

1017 
	$de£rülize_FûeHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
FûeHódî
*
v
){

1018 
rc
;

1019 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1020 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "magic", &
v
->
magic
);

1021 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

1022 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "dbid", &
v
->
dbid
);

1023 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1024  
rc
;

1025 
	}
}

1026 
	$dóŒoˇã_FûeHódî
(
FûeHódî
*
v
){

1027 
	}
}

1028 
	$£rülize_TxnHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
TxnHódî
 *
v
){

1029 
rc
;

1030 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1031 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "˛õ¡Id", &
v
->
˛õ¡Id
);

1032 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "cxid", &
v
->
cxid
);

1033 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "zxid", &
v
->
zxid
);

1034 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_L⁄g
(out, "time", &
v
->
time
);

1035 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

1036 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1037  
rc
;

1038 
	}
}

1039 
	$de£rülize_TxnHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
TxnHódî
*
v
){

1040 
rc
;

1041 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1042 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "˛õ¡Id", &
v
->
˛õ¡Id
);

1043 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "cxid", &
v
->
cxid
);

1044 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "zxid", &
v
->
zxid
);

1045 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_L⁄g
(ö, "time", &
v
->
time
);

1046 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

1047 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1048  
rc
;

1049 
	}
}

1050 
	$dóŒoˇã_TxnHódî
(
TxnHódî
*
v
){

1051 
	}
}

1052 
	$£rülize_Cª©eTxnV0
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eTxnV0
 *
v
){

1053 
rc
;

1054 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1055 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1056 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

1057 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

1058 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "ïhemîÆ", &
v
->
ïhemîÆ
);

1059 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1060  
rc
;

1061 
	}
}

1062 
	$de£rülize_Cª©eTxnV0
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eTxnV0
*
v
){

1063 
rc
;

1064 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1065 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1066 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

1067 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

1068 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "ïhemîÆ", &
v
->
ïhemîÆ
);

1069 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1070  
rc
;

1071 
	}
}

1072 
	$dóŒoˇã_Cª©eTxnV0
(
Cª©eTxnV0
*
v
){

1073 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1074 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

1075 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

1076 
	}
}

1077 
	$£rülize_Cª©eTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eTxn
 *
v
){

1078 
rc
;

1079 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1080 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1081 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

1082 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

1083 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Boﬁ
(out, "ïhemîÆ", &
v
->
ïhemîÆ
);

1084 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "∑ª¡CVîsi⁄", &
v
->
∑ª¡CVîsi⁄
);

1085 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1086  
rc
;

1087 
	}
}

1088 
	$de£rülize_Cª©eTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eTxn
*
v
){

1089 
rc
;

1090 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1091 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1092 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

1093 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

1094 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Boﬁ
(ö, "ïhemîÆ", &
v
->
ïhemîÆ
);

1095 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "∑ª¡CVîsi⁄", &
v
->
∑ª¡CVîsi⁄
);

1096 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1097  
rc
;

1098 
	}
}

1099 
	$dóŒoˇã_Cª©eTxn
(
Cª©eTxn
*
v
){

1100 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1101 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

1102 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

1103 
	}
}

1104 
	$£rülize_DñëeTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
DñëeTxn
 *
v
){

1105 
rc
;

1106 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1107 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1108 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1109  
rc
;

1110 
	}
}

1111 
	$de£rülize_DñëeTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
DñëeTxn
*
v
){

1112 
rc
;

1113 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1114 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1115 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1116  
rc
;

1117 
	}
}

1118 
	$dóŒoˇã_DñëeTxn
(
DñëeTxn
*
v
){

1119 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1120 
	}
}

1121 
	$£rülize_SëD©aTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aTxn
 *
v
){

1122 
rc
;

1123 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1124 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1125 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

1126 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

1127 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1128  
rc
;

1129 
	}
}

1130 
	$de£rülize_SëD©aTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aTxn
*
v
){

1131 
rc
;

1132 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1133 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1134 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

1135 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

1136 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1137  
rc
;

1138 
	}
}

1139 
	$dóŒoˇã_SëD©aTxn
(
SëD©aTxn
*
v
){

1140 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1141 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

1142 
	}
}

1143 
	$£rülize_CheckVîsi⁄Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
CheckVîsi⁄Txn
 *
v
){

1144 
rc
;

1145 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1146 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1147 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

1148 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1149  
rc
;

1150 
	}
}

1151 
	$de£rülize_CheckVîsi⁄Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
CheckVîsi⁄Txn
*
v
){

1152 
rc
;

1153 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1154 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1155 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

1156 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1157  
rc
;

1158 
	}
}

1159 
	$dóŒoˇã_CheckVîsi⁄Txn
(
CheckVîsi⁄Txn
*
v
){

1160 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1161 
	}
}

1162 
	$£rülize_SëACLTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLTxn
 *
v
){

1163 
rc
;

1164 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1165 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1166 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_ACL_ve˘‹
(
out
, "a˛", &
v
->
a˛
);

1167 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "vîsi⁄", &
v
->
vîsi⁄
);

1168 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1169  
rc
;

1170 
	}
}

1171 
	$de£rülize_SëACLTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLTxn
*
v
){

1172 
rc
;

1173 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1174 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1175 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_ACL_ve˘‹
(
ö
, "a˛", &
v
->
a˛
);

1176 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "vîsi⁄", &
v
->
vîsi⁄
);

1177 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1178  
rc
;

1179 
	}
}

1180 
	$dóŒoˇã_SëACLTxn
(
SëACLTxn
*
v
){

1181 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1182 
	`dóŒoˇã_ACL_ve˘‹
(&
v
->
a˛
);

1183 
	}
}

1184 
	$£rülize_SëMaxChûdªnTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëMaxChûdªnTxn
 *
v
){

1185 
rc
;

1186 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1187 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Såög
(out, "∑th", &
v
->
∑th
);

1188 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "max", &
v
->
max
);

1189 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1190  
rc
;

1191 
	}
}

1192 
	$de£rülize_SëMaxChûdªnTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëMaxChûdªnTxn
*
v
){

1193 
rc
;

1194 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1195 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Såög
(ö, "∑th", &
v
->
∑th
);

1196 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "max", &
v
->
max
);

1197 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1198  
rc
;

1199 
	}
}

1200 
	$dóŒoˇã_SëMaxChûdªnTxn
(
SëMaxChûdªnTxn
*
v
){

1201 
	`dóŒoˇã_Såög
(&
v
->
∑th
);

1202 
	}
}

1203 
	$£rülize_Cª©eSessi⁄Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eSessi⁄Txn
 *
v
){

1204 
rc
;

1205 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1206 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "timeOut", &
v
->
timeOut
);

1207 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1208  
rc
;

1209 
	}
}

1210 
	$de£rülize_Cª©eSessi⁄Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eSessi⁄Txn
*
v
){

1211 
rc
;

1212 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1213 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "timeOut", &
v
->
timeOut
);

1214 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1215  
rc
;

1216 
	}
}

1217 
	$dóŒoˇã_Cª©eSessi⁄Txn
(
Cª©eSessi⁄Txn
*
v
){

1218 
	}
}

1219 
	$£rülize_Eº‹Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Eº‹Txn
 *
v
){

1220 
rc
;

1221 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1222 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "îr", &
v
->
îr
);

1223 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1224  
rc
;

1225 
	}
}

1226 
	$de£rülize_Eº‹Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Eº‹Txn
*
v
){

1227 
rc
;

1228 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1229 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "îr", &
v
->
îr
);

1230 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1231  
rc
;

1232 
	}
}

1233 
	$dóŒoˇã_Eº‹Txn
(
Eº‹Txn
*
v
){

1234 
	}
}

1235 
	$£rülize_Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Txn
 *
v
){

1236 
rc
;

1237 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1238 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_I¡
(out, "ty≥", &
v
->
ty≥
);

1239 
rc
 =Ñ¯?Ñ¯: 
out
->
	`£rülize_Buf„r
(out, "d©a", &
v
->
d©a
);

1240 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1241  
rc
;

1242 
	}
}

1243 
	$de£rülize_Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Txn
*
v
){

1244 
rc
;

1245 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1246 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_I¡
(ö, "ty≥", &
v
->
ty≥
);

1247 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`de£rülize_Buf„r
(ö, "d©a", &
v
->
d©a
);

1248 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1249  
rc
;

1250 
	}
}

1251 
	$dóŒoˇã_Txn
(
Txn
*
v
){

1252 
	`dóŒoˇã_Buf„r
(&
v
->
d©a
);

1253 
	}
}

1254 
	$Æloˇã_Txn_ve˘‹
(
Txn_ve˘‹
 *
v
, 
öt32_t
 
Àn
) {

1255 i‡(!
Àn
) {

1256 
v
->
cou¡
 = 0;

1257 
v
->
d©a
 = 0;

1259 
v
->
cou¡
 = 
Àn
;

1260 
v
->
d©a
 = 
	`ˇŒoc
((*v->d©a), 
Àn
);

1263 
	}
}

1264 
	$dóŒoˇã_Txn_ve˘‹
(
Txn_ve˘‹
 *
v
) {

1265 i‡(
v
->
d©a
) {

1266 
öt32_t
 
i
;

1267 
i
=0;i<
v
->
cou¡
; i++) {

1268 
	`dóŒoˇã_Txn
(&
v
->
d©a
[
i
]);

1270 
	`‰ì
(
v
->
d©a
);

1271 
v
->
d©a
 = 0;

1274 
	}
}

1275 
	$£rülize_Txn_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Txn_ve˘‹
 *
v
)

1277 
öt32_t
 
cou¡
 = 
v
->count;

1278 
rc
 = 0;

1279 
öt32_t
 
i
;

1280 
rc
 = 
out
->
	`°¨t_ve˘‹
(out, 
èg
, &
cou¡
);

1281 
i
=0;i<
v
->
cou¡
;i++) {

1282 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Txn
(
out
, "d©a", &
v
->
d©a
[
i
]);

1284 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ve˘‹
(out, 
èg
);

1285  
rc
;

1286 
	}
}

1287 
	$de£rülize_Txn_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Txn_ve˘‹
 *
v
)

1289 
rc
 = 0;

1290 
öt32_t
 
i
;

1291 
rc
 = 
ö
->
	`°¨t_ve˘‹
(ö, 
èg
, &
v
->
cou¡
);

1292 
v
->
d©a
 = 
	`ˇŒoc
(v->
cou¡
, (*v->data));

1293 
i
=0;i<
v
->
cou¡
;i++) {

1294 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Txn
(
ö
, "vÆue", &
v
->
d©a
[
i
]);

1296 
rc
 = 
ö
->
	`íd_ve˘‹
(ö, 
èg
);

1297  
rc
;

1298 
	}
}

1299 
	$£rülize_Mu…iTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Mu…iTxn
 *
v
){

1300 
rc
;

1301 
rc
 = 
out
->
	`°¨t_ªc‹d
(out, 
èg
);

1302 
rc
 =Ñ¯?Ñ¯: 
	`£rülize_Txn_ve˘‹
(
out
, "txns", &
v
->
txns
);

1303 
rc
 =Ñ¯?Ñ¯: 
out
->
	`íd_ªc‹d
(out, 
èg
);

1304  
rc
;

1305 
	}
}

1306 
	$de£rülize_Mu…iTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Mu…iTxn
*
v
){

1307 
rc
;

1308 
rc
 = 
ö
->
	`°¨t_ªc‹d
(ö, 
èg
);

1309 
rc
 =Ñ¯?Ñ¯: 
	`de£rülize_Txn_ve˘‹
(
ö
, "txns", &
v
->
txns
);

1310 
rc
 =Ñ¯?Ñ¯: 
ö
->
	`íd_ªc‹d
(ö, 
èg
);

1311  
rc
;

1312 
	}
}

1313 
	$dóŒoˇã_Mu…iTxn
(
Mu…iTxn
*
v
){

1314 
	`dóŒoˇã_Txn_ve˘‹
(&
v
->
txns
);

1315 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/generated/zookeeper.jute.h

19 #i‚de‡
__ZOOKEEPER_JUTE__


20 
	#__ZOOKEEPER_JUTE__


	)

21 
	~"ªc‹dio.h
"

23 #ifde‡
__˝lu•lus


27 
	sId
 {

28 * 
scheme
;

29 * 
id
;

31 
£rülize_Id
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Id
 *
v
);

32 
de£rülize_Id
(
ürchive
 *
ö
, c⁄° *
èg
, 
Id
*
v
);

33 
dóŒoˇã_Id
(
Id
*);

34 
	sACL
 {

35 
öt32_t
 
≥rms
;

36 
Id
 
id
;

38 
£rülize_ACL
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
ACL
 *
v
);

39 
de£rülize_ACL
(
ürchive
 *
ö
, c⁄° *
èg
, 
ACL
*
v
);

40 
dóŒoˇã_ACL
(
ACL
*);

41 
	sSèt
 {

42 
öt64_t
 
czxid
;

43 
öt64_t
 
mzxid
;

44 
öt64_t
 
˘ime
;

45 
öt64_t
 
mtime
;

46 
öt32_t
 
vîsi⁄
;

47 
öt32_t
 
cvîsi⁄
;

48 
öt32_t
 
avîsi⁄
;

49 
öt64_t
 
ïhemîÆOw√r
;

50 
öt32_t
 
d©aLígth
;

51 
öt32_t
 
numChûdªn
;

52 
öt64_t
 
pzxid
;

54 
£rülize_Sèt
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Sèt
 *
v
);

55 
de£rülize_Sèt
(
ürchive
 *
ö
, c⁄° *
èg
, 
Sèt
*
v
);

56 
dóŒoˇã_Sèt
(
Sèt
*);

57 
	sSètPîsi°ed
 {

58 
öt64_t
 
czxid
;

59 
öt64_t
 
mzxid
;

60 
öt64_t
 
˘ime
;

61 
öt64_t
 
mtime
;

62 
öt32_t
 
vîsi⁄
;

63 
öt32_t
 
cvîsi⁄
;

64 
öt32_t
 
avîsi⁄
;

65 
öt64_t
 
ïhemîÆOw√r
;

66 
öt64_t
 
pzxid
;

68 
£rülize_SètPîsi°ed
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SètPîsi°ed
 *
v
);

69 
de£rülize_SètPîsi°ed
(
ürchive
 *
ö
, c⁄° *
èg
, 
SètPîsi°ed
*
v
);

70 
dóŒoˇã_SètPîsi°ed
(
SètPîsi°ed
*);

71 
	sSètPîsi°edV1
 {

72 
öt64_t
 
czxid
;

73 
öt64_t
 
mzxid
;

74 
öt64_t
 
˘ime
;

75 
öt64_t
 
mtime
;

76 
öt32_t
 
vîsi⁄
;

77 
öt32_t
 
cvîsi⁄
;

78 
öt32_t
 
avîsi⁄
;

79 
öt64_t
 
ïhemîÆOw√r
;

81 
£rülize_SètPîsi°edV1
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SètPîsi°edV1
 *
v
);

82 
de£rülize_SètPîsi°edV1
(
ürchive
 *
ö
, c⁄° *
èg
, 
SètPîsi°edV1
*
v
);

83 
dóŒoˇã_SètPîsi°edV1
(
SètPîsi°edV1
*);

84 
	sC⁄√˘Reque°
 {

85 
öt32_t
 
¥ŸocﬁVîsi⁄
;

86 
öt64_t
 
œ°ZxidSìn
;

87 
öt32_t
 
timeOut
;

88 
öt64_t
 
£ssi⁄Id
;

89 
buf„r
 
∑sswd
;

91 
£rülize_C⁄√˘Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
C⁄√˘Reque°
 *
v
);

92 
de£rülize_C⁄√˘Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
C⁄√˘Reque°
*
v
);

93 
dóŒoˇã_C⁄√˘Reque°
(
C⁄√˘Reque°
*);

94 
	sC⁄√˘Re•⁄£
 {

95 
öt32_t
 
¥ŸocﬁVîsi⁄
;

96 
öt32_t
 
timeOut
;

97 
öt64_t
 
£ssi⁄Id
;

98 
buf„r
 
∑sswd
;

100 
£rülize_C⁄√˘Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
C⁄√˘Re•⁄£
 *
v
);

101 
de£rülize_C⁄√˘Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
C⁄√˘Re•⁄£
*
v
);

102 
dóŒoˇã_C⁄√˘Re•⁄£
(
C⁄√˘Re•⁄£
*);

103 
	sSåög_ve˘‹
 {

104 
öt32_t
 
cou¡
;

105 * *
d©a
;

108 
£rülize_Såög_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Såög_ve˘‹
 *
v
);

109 
de£rülize_Såög_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Såög_ve˘‹
 *
v
);

110 
Æloˇã_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
, 
öt32_t
 
Àn
);

111 
dóŒoˇã_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
);

112 
	sSëW©ches
 {

113 
öt64_t
 
ªœtiveZxid
;

114 
Såög_ve˘‹
 
d©aW©ches
;

115 
Såög_ve˘‹
 
exi°W©ches
;

116 
Såög_ve˘‹
 
chûdW©ches
;

118 
£rülize_SëW©ches
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëW©ches
 *
v
);

119 
de£rülize_SëW©ches
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëW©ches
*
v
);

120 
dóŒoˇã_SëW©ches
(
SëW©ches
*);

121 
	sReque°Hódî
 {

122 
öt32_t
 
xid
;

123 
öt32_t
 
ty≥
;

125 
£rülize_Reque°Hódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Reque°Hódî
 *
v
);

126 
de£rülize_Reque°Hódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
Reque°Hódî
*
v
);

127 
dóŒoˇã_Reque°Hódî
(
Reque°Hódî
*);

128 
	sMu…iHódî
 {

129 
öt32_t
 
ty≥
;

130 
öt32_t
 
d⁄e
;

131 
öt32_t
 
îr
;

133 
£rülize_Mu…iHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Mu…iHódî
 *
v
);

134 
de£rülize_Mu…iHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
Mu…iHódî
*
v
);

135 
dóŒoˇã_Mu…iHódî
(
Mu…iHódî
*);

136 
	sAuthPackë
 {

137 
öt32_t
 
ty≥
;

138 * 
scheme
;

139 
buf„r
 
auth
;

141 
£rülize_AuthPackë
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
AuthPackë
 *
v
);

142 
de£rülize_AuthPackë
(
ürchive
 *
ö
, c⁄° *
èg
, 
AuthPackë
*
v
);

143 
dóŒoˇã_AuthPackë
(
AuthPackë
*);

144 
	sRïlyHódî
 {

145 
öt32_t
 
xid
;

146 
öt64_t
 
zxid
;

147 
öt32_t
 
îr
;

149 
£rülize_RïlyHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
RïlyHódî
 *
v
);

150 
de£rülize_RïlyHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
RïlyHódî
*
v
);

151 
dóŒoˇã_RïlyHódî
(
RïlyHódî
*);

152 
	sGëD©aReque°
 {

153 * 
∑th
;

154 
öt32_t
 
w©ch
;

156 
£rülize_GëD©aReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëD©aReque°
 *
v
);

157 
de£rülize_GëD©aReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëD©aReque°
*
v
);

158 
dóŒoˇã_GëD©aReque°
(
GëD©aReque°
*);

159 
	sSëD©aReque°
 {

160 * 
∑th
;

161 
buf„r
 
d©a
;

162 
öt32_t
 
vîsi⁄
;

164 
£rülize_SëD©aReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aReque°
 *
v
);

165 
de£rülize_SëD©aReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aReque°
*
v
);

166 
dóŒoˇã_SëD©aReque°
(
SëD©aReque°
*);

167 
	sSëD©aRe•⁄£
 {

168 
Sèt
 
°©
;

170 
£rülize_SëD©aRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aRe•⁄£
 *
v
);

171 
de£rülize_SëD©aRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aRe•⁄£
*
v
);

172 
dóŒoˇã_SëD©aRe•⁄£
(
SëD©aRe•⁄£
*);

173 
	sGëSASLReque°
 {

174 
buf„r
 
tokí
;

176 
£rülize_GëSASLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëSASLReque°
 *
v
);

177 
de£rülize_GëSASLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëSASLReque°
*
v
);

178 
dóŒoˇã_GëSASLReque°
(
GëSASLReque°
*);

179 
	sSëSASLReque°
 {

180 
buf„r
 
tokí
;

182 
£rülize_SëSASLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëSASLReque°
 *
v
);

183 
de£rülize_SëSASLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëSASLReque°
*
v
);

184 
dóŒoˇã_SëSASLReque°
(
SëSASLReque°
*);

185 
	sSëSASLRe•⁄£
 {

186 
buf„r
 
tokí
;

188 
£rülize_SëSASLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëSASLRe•⁄£
 *
v
);

189 
de£rülize_SëSASLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëSASLRe•⁄£
*
v
);

190 
dóŒoˇã_SëSASLRe•⁄£
(
SëSASLRe•⁄£
*);

191 
	sACL_ve˘‹
 {

192 
öt32_t
 
cou¡
;

193 
ACL
 *
d©a
;

196 
£rülize_ACL_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
ACL_ve˘‹
 *
v
);

197 
de£rülize_ACL_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
ACL_ve˘‹
 *
v
);

198 
Æloˇã_ACL_ve˘‹
(
ACL_ve˘‹
 *
v
, 
öt32_t
 
Àn
);

199 
dóŒoˇã_ACL_ve˘‹
(
ACL_ve˘‹
 *
v
);

200 
	sCª©eReque°
 {

201 * 
∑th
;

202 
buf„r
 
d©a
;

203 
ACL_ve˘‹
 
a˛
;

204 
öt32_t
 
Êags
;

206 
£rülize_Cª©eReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eReque°
 *
v
);

207 
de£rülize_Cª©eReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eReque°
*
v
);

208 
dóŒoˇã_Cª©eReque°
(
Cª©eReque°
*);

209 
	sDñëeReque°
 {

210 * 
∑th
;

211 
öt32_t
 
vîsi⁄
;

213 
£rülize_DñëeReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
DñëeReque°
 *
v
);

214 
de£rülize_DñëeReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
DñëeReque°
*
v
);

215 
dóŒoˇã_DñëeReque°
(
DñëeReque°
*);

216 
	sGëChûdªnReque°
 {

217 * 
∑th
;

218 
öt32_t
 
w©ch
;

220 
£rülize_GëChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªnReque°
 *
v
);

221 
de£rülize_GëChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªnReque°
*
v
);

222 
dóŒoˇã_GëChûdªnReque°
(
GëChûdªnReque°
*);

223 
	sGëChûdªn2Reque°
 {

224 * 
∑th
;

225 
öt32_t
 
w©ch
;

227 
£rülize_GëChûdªn2Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªn2Reque°
 *
v
);

228 
de£rülize_GëChûdªn2Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªn2Reque°
*
v
);

229 
dóŒoˇã_GëChûdªn2Reque°
(
GëChûdªn2Reque°
*);

230 
	sCheckVîsi⁄Reque°
 {

231 * 
∑th
;

232 
öt32_t
 
vîsi⁄
;

234 
£rülize_CheckVîsi⁄Reque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
CheckVîsi⁄Reque°
 *
v
);

235 
de£rülize_CheckVîsi⁄Reque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
CheckVîsi⁄Reque°
*
v
);

236 
dóŒoˇã_CheckVîsi⁄Reque°
(
CheckVîsi⁄Reque°
*);

237 
	sGëMaxChûdªnReque°
 {

238 * 
∑th
;

240 
£rülize_GëMaxChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëMaxChûdªnReque°
 *
v
);

241 
de£rülize_GëMaxChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëMaxChûdªnReque°
*
v
);

242 
dóŒoˇã_GëMaxChûdªnReque°
(
GëMaxChûdªnReque°
*);

243 
	sGëMaxChûdªnRe•⁄£
 {

244 
öt32_t
 
max
;

246 
£rülize_GëMaxChûdªnRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëMaxChûdªnRe•⁄£
 *
v
);

247 
de£rülize_GëMaxChûdªnRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëMaxChûdªnRe•⁄£
*
v
);

248 
dóŒoˇã_GëMaxChûdªnRe•⁄£
(
GëMaxChûdªnRe•⁄£
*);

249 
	sSëMaxChûdªnReque°
 {

250 * 
∑th
;

251 
öt32_t
 
max
;

253 
£rülize_SëMaxChûdªnReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëMaxChûdªnReque°
 *
v
);

254 
de£rülize_SëMaxChûdªnReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëMaxChûdªnReque°
*
v
);

255 
dóŒoˇã_SëMaxChûdªnReque°
(
SëMaxChûdªnReque°
*);

256 
	sSyncReque°
 {

257 * 
∑th
;

259 
£rülize_SyncReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SyncReque°
 *
v
);

260 
de£rülize_SyncReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SyncReque°
*
v
);

261 
dóŒoˇã_SyncReque°
(
SyncReque°
*);

262 
	sSyncRe•⁄£
 {

263 * 
∑th
;

265 
£rülize_SyncRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SyncRe•⁄£
 *
v
);

266 
de£rülize_SyncRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SyncRe•⁄£
*
v
);

267 
dóŒoˇã_SyncRe•⁄£
(
SyncRe•⁄£
*);

268 
	sGëACLReque°
 {

269 * 
∑th
;

271 
£rülize_GëACLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëACLReque°
 *
v
);

272 
de£rülize_GëACLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëACLReque°
*
v
);

273 
dóŒoˇã_GëACLReque°
(
GëACLReque°
*);

274 
	sSëACLReque°
 {

275 * 
∑th
;

276 
ACL_ve˘‹
 
a˛
;

277 
öt32_t
 
vîsi⁄
;

279 
£rülize_SëACLReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLReque°
 *
v
);

280 
de£rülize_SëACLReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLReque°
*
v
);

281 
dóŒoˇã_SëACLReque°
(
SëACLReque°
*);

282 
	sSëACLRe•⁄£
 {

283 
Sèt
 
°©
;

285 
£rülize_SëACLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLRe•⁄£
 *
v
);

286 
de£rülize_SëACLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLRe•⁄£
*
v
);

287 
dóŒoˇã_SëACLRe•⁄£
(
SëACLRe•⁄£
*);

288 
	sW©chîEvít
 {

289 
öt32_t
 
ty≥
;

290 
öt32_t
 
°©e
;

291 * 
∑th
;

293 
£rülize_W©chîEvít
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
W©chîEvít
 *
v
);

294 
de£rülize_W©chîEvít
(
ürchive
 *
ö
, c⁄° *
èg
, 
W©chîEvít
*
v
);

295 
dóŒoˇã_W©chîEvít
(
W©chîEvít
*);

296 
	sEº‹Re•⁄£
 {

297 
öt32_t
 
îr
;

299 
£rülize_Eº‹Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Eº‹Re•⁄£
 *
v
);

300 
de£rülize_Eº‹Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Eº‹Re•⁄£
*
v
);

301 
dóŒoˇã_Eº‹Re•⁄£
(
Eº‹Re•⁄£
*);

302 
	sCª©eRe•⁄£
 {

303 * 
∑th
;

305 
£rülize_Cª©eRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eRe•⁄£
 *
v
);

306 
de£rülize_Cª©eRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eRe•⁄£
*
v
);

307 
dóŒoˇã_Cª©eRe•⁄£
(
Cª©eRe•⁄£
*);

308 
	sExi°sReque°
 {

309 * 
∑th
;

310 
öt32_t
 
w©ch
;

312 
£rülize_Exi°sReque°
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Exi°sReque°
 *
v
);

313 
de£rülize_Exi°sReque°
(
ürchive
 *
ö
, c⁄° *
èg
, 
Exi°sReque°
*
v
);

314 
dóŒoˇã_Exi°sReque°
(
Exi°sReque°
*);

315 
	sExi°sRe•⁄£
 {

316 
Sèt
 
°©
;

318 
£rülize_Exi°sRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Exi°sRe•⁄£
 *
v
);

319 
de£rülize_Exi°sRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
Exi°sRe•⁄£
*
v
);

320 
dóŒoˇã_Exi°sRe•⁄£
(
Exi°sRe•⁄£
*);

321 
	sGëD©aRe•⁄£
 {

322 
buf„r
 
d©a
;

323 
Sèt
 
°©
;

325 
£rülize_GëD©aRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëD©aRe•⁄£
 *
v
);

326 
de£rülize_GëD©aRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëD©aRe•⁄£
*
v
);

327 
dóŒoˇã_GëD©aRe•⁄£
(
GëD©aRe•⁄£
*);

328 
	sGëChûdªnRe•⁄£
 {

329 
Såög_ve˘‹
 
chûdªn
;

331 
£rülize_GëChûdªnRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªnRe•⁄£
 *
v
);

332 
de£rülize_GëChûdªnRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªnRe•⁄£
*
v
);

333 
dóŒoˇã_GëChûdªnRe•⁄£
(
GëChûdªnRe•⁄£
*);

334 
	sGëChûdªn2Re•⁄£
 {

335 
Såög_ve˘‹
 
chûdªn
;

336 
Sèt
 
°©
;

338 
£rülize_GëChûdªn2Re•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëChûdªn2Re•⁄£
 *
v
);

339 
de£rülize_GëChûdªn2Re•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëChûdªn2Re•⁄£
*
v
);

340 
dóŒoˇã_GëChûdªn2Re•⁄£
(
GëChûdªn2Re•⁄£
*);

341 
	sGëACLRe•⁄£
 {

342 
ACL_ve˘‹
 
a˛
;

343 
Sèt
 
°©
;

345 
£rülize_GëACLRe•⁄£
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
GëACLRe•⁄£
 *
v
);

346 
de£rülize_GëACLRe•⁄£
(
ürchive
 *
ö
, c⁄° *
èg
, 
GëACLRe•⁄£
*
v
);

347 
dóŒoˇã_GëACLRe•⁄£
(
GëACLRe•⁄£
*);

348 
	sLó∫îInfo
 {

349 
öt64_t
 
£rvîid
;

350 
öt32_t
 
¥ŸocﬁVîsi⁄
;

352 
£rülize_Ló∫îInfo
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Ló∫îInfo
 *
v
);

353 
de£rülize_Ló∫îInfo
(
ürchive
 *
ö
, c⁄° *
èg
, 
Ló∫îInfo
*
v
);

354 
dóŒoˇã_Ló∫îInfo
(
Ló∫îInfo
*);

355 
	sId_ve˘‹
 {

356 
öt32_t
 
cou¡
;

357 
Id
 *
d©a
;

360 
£rülize_Id_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Id_ve˘‹
 *
v
);

361 
de£rülize_Id_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Id_ve˘‹
 *
v
);

362 
Æloˇã_Id_ve˘‹
(
Id_ve˘‹
 *
v
, 
öt32_t
 
Àn
);

363 
dóŒoˇã_Id_ve˘‹
(
Id_ve˘‹
 *
v
);

364 
	sQu‹umPackë
 {

365 
öt32_t
 
ty≥
;

366 
öt64_t
 
zxid
;

367 
buf„r
 
d©a
;

368 
Id_ve˘‹
 
authöfo
;

370 
£rülize_Qu‹umPackë
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Qu‹umPackë
 *
v
);

371 
de£rülize_Qu‹umPackë
(
ürchive
 *
ö
, c⁄° *
èg
, 
Qu‹umPackë
*
v
);

372 
dóŒoˇã_Qu‹umPackë
(
Qu‹umPackë
*);

373 
	sFûeHódî
 {

374 
öt32_t
 
magic
;

375 
öt32_t
 
vîsi⁄
;

376 
öt64_t
 
dbid
;

378 
£rülize_FûeHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
FûeHódî
 *
v
);

379 
de£rülize_FûeHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
FûeHódî
*
v
);

380 
dóŒoˇã_FûeHódî
(
FûeHódî
*);

381 
	sTxnHódî
 {

382 
öt64_t
 
˛õ¡Id
;

383 
öt32_t
 
cxid
;

384 
öt64_t
 
zxid
;

385 
öt64_t
 
time
;

386 
öt32_t
 
ty≥
;

388 
£rülize_TxnHódî
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
TxnHódî
 *
v
);

389 
de£rülize_TxnHódî
(
ürchive
 *
ö
, c⁄° *
èg
, 
TxnHódî
*
v
);

390 
dóŒoˇã_TxnHódî
(
TxnHódî
*);

391 
	sCª©eTxnV0
 {

392 * 
∑th
;

393 
buf„r
 
d©a
;

394 
ACL_ve˘‹
 
a˛
;

395 
öt32_t
 
ïhemîÆ
;

397 
£rülize_Cª©eTxnV0
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eTxnV0
 *
v
);

398 
de£rülize_Cª©eTxnV0
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eTxnV0
*
v
);

399 
dóŒoˇã_Cª©eTxnV0
(
Cª©eTxnV0
*);

400 
	sCª©eTxn
 {

401 * 
∑th
;

402 
buf„r
 
d©a
;

403 
ACL_ve˘‹
 
a˛
;

404 
öt32_t
 
ïhemîÆ
;

405 
öt32_t
 
∑ª¡CVîsi⁄
;

407 
£rülize_Cª©eTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eTxn
 *
v
);

408 
de£rülize_Cª©eTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eTxn
*
v
);

409 
dóŒoˇã_Cª©eTxn
(
Cª©eTxn
*);

410 
	sDñëeTxn
 {

411 * 
∑th
;

413 
£rülize_DñëeTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
DñëeTxn
 *
v
);

414 
de£rülize_DñëeTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
DñëeTxn
*
v
);

415 
dóŒoˇã_DñëeTxn
(
DñëeTxn
*);

416 
	sSëD©aTxn
 {

417 * 
∑th
;

418 
buf„r
 
d©a
;

419 
öt32_t
 
vîsi⁄
;

421 
£rülize_SëD©aTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëD©aTxn
 *
v
);

422 
de£rülize_SëD©aTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëD©aTxn
*
v
);

423 
dóŒoˇã_SëD©aTxn
(
SëD©aTxn
*);

424 
	sCheckVîsi⁄Txn
 {

425 * 
∑th
;

426 
öt32_t
 
vîsi⁄
;

428 
£rülize_CheckVîsi⁄Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
CheckVîsi⁄Txn
 *
v
);

429 
de£rülize_CheckVîsi⁄Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
CheckVîsi⁄Txn
*
v
);

430 
dóŒoˇã_CheckVîsi⁄Txn
(
CheckVîsi⁄Txn
*);

431 
	sSëACLTxn
 {

432 * 
∑th
;

433 
ACL_ve˘‹
 
a˛
;

434 
öt32_t
 
vîsi⁄
;

436 
£rülize_SëACLTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëACLTxn
 *
v
);

437 
de£rülize_SëACLTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëACLTxn
*
v
);

438 
dóŒoˇã_SëACLTxn
(
SëACLTxn
*);

439 
	sSëMaxChûdªnTxn
 {

440 * 
∑th
;

441 
öt32_t
 
max
;

443 
£rülize_SëMaxChûdªnTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
SëMaxChûdªnTxn
 *
v
);

444 
de£rülize_SëMaxChûdªnTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
SëMaxChûdªnTxn
*
v
);

445 
dóŒoˇã_SëMaxChûdªnTxn
(
SëMaxChûdªnTxn
*);

446 
	sCª©eSessi⁄Txn
 {

447 
öt32_t
 
timeOut
;

449 
£rülize_Cª©eSessi⁄Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Cª©eSessi⁄Txn
 *
v
);

450 
de£rülize_Cª©eSessi⁄Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Cª©eSessi⁄Txn
*
v
);

451 
dóŒoˇã_Cª©eSessi⁄Txn
(
Cª©eSessi⁄Txn
*);

452 
	sEº‹Txn
 {

453 
öt32_t
 
îr
;

455 
£rülize_Eº‹Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Eº‹Txn
 *
v
);

456 
de£rülize_Eº‹Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Eº‹Txn
*
v
);

457 
dóŒoˇã_Eº‹Txn
(
Eº‹Txn
*);

458 
	sTxn
 {

459 
öt32_t
 
ty≥
;

460 
buf„r
 
d©a
;

462 
£rülize_Txn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Txn
 *
v
);

463 
de£rülize_Txn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Txn
*
v
);

464 
dóŒoˇã_Txn
(
Txn
*);

465 
	sTxn_ve˘‹
 {

466 
öt32_t
 
cou¡
;

467 
Txn
 *
d©a
;

470 
£rülize_Txn_ve˘‹
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Txn_ve˘‹
 *
v
);

471 
de£rülize_Txn_ve˘‹
(
ürchive
 *
ö
, c⁄° *
èg
, 
Txn_ve˘‹
 *
v
);

472 
Æloˇã_Txn_ve˘‹
(
Txn_ve˘‹
 *
v
, 
öt32_t
 
Àn
);

473 
dóŒoˇã_Txn_ve˘‹
(
Txn_ve˘‹
 *
v
);

474 
	sMu…iTxn
 {

475 
Txn_ve˘‹
 
txns
;

477 
£rülize_Mu…iTxn
(
ﬂrchive
 *
out
, c⁄° *
èg
, 
Mu…iTxn
 *
v
);

478 
de£rülize_Mu…iTxn
(
ürchive
 *
ö
, c⁄° *
èg
, 
Mu…iTxn
*
v
);

479 
dóŒoˇã_Mu…iTxn
(
Mu…iTxn
*);

481 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/include/proto.h

18 #i‚de‡
PROTO_H_


19 
	#PROTO_H_


	)

21 #ifde‡
__˝lu•lus


25 
	#ZOO_NOTIFY_OP
 0

	)

26 
	#ZOO_CREATE_OP
 1

	)

27 
	#ZOO_DELETE_OP
 2

	)

28 
	#ZOO_EXISTS_OP
 3

	)

29 
	#ZOO_GETDATA_OP
 4

	)

30 
	#ZOO_SETDATA_OP
 5

	)

31 
	#ZOO_GETACL_OP
 6

	)

32 
	#ZOO_SETACL_OP
 7

	)

33 
	#ZOO_GETCHILDREN_OP
 8

	)

34 
	#ZOO_SYNC_OP
 9

	)

35 
	#ZOO_PING_OP
 11

	)

36 
	#ZOO_GETCHILDREN2_OP
 12

	)

37 
	#ZOO_CHECK_OP
 13

	)

38 
	#ZOO_MULTI_OP
 14

	)

39 
	#ZOO_CLOSE_OP
 -11

	)

40 
	#ZOO_SETAUTH_OP
 100

	)

41 
	#ZOO_SETWATCHES_OP
 101

	)

43 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/include/recordio.h

18 #i‚de‡
__RECORDIO_H__


19 
	#__RECORDIO_H__


	)

21 
	~<sys/ty≥s.h
>

22 #i‚de‡
WIN32


23 
	#STRUCT_INITIALIZER
(
l
,
r
Ë.»
	)
r

25 
	#STRUCT_INITIALIZER
(
l
,
r
Ë
	)
r

26 
	~"wöc⁄fig.h
"

29 #ifde‡
__˝lu•lus


33 
	sbuf„r
 {

34 
öt32_t
 
Àn
;

35 *
buff
;

38 
dóŒoˇã_Såög
(**
s
);

39 
dóŒoˇã_Buf„r
(
buf„r
 *
b
);

40 
dóŒoˇã_ve˘‹
(*
d
);

41 
	sürchive
 {

42 (*
°¨t_ªc‹d
)(
ürchive
 *
ü
, c⁄° *
èg
);

43 (*
íd_ªc‹d
)(
ürchive
 *
ü
, c⁄° *
èg
);

44 (*
°¨t_ve˘‹
)(
ürchive
 *
ü
, c⁄° *
èg
, 
öt32_t
 *
cou¡
);

45 (*
íd_ve˘‹
)(
ürchive
 *
ü
, c⁄° *
èg
);

46 (*
de£rülize_Boﬁ
)(
ürchive
 *
ü
, c⁄° *
«me
, 
öt32_t
 *);

47 (*
de£rülize_I¡
)(
ürchive
 *
ü
, c⁄° *
«me
, 
öt32_t
 *);

48 (*
de£rülize_L⁄g
)(
ürchive
 *
ü
, c⁄° *
«me
, 
öt64_t
 *);

49 (*
de£rülize_Buf„r
)(
ürchive
 *
ü
, c⁄° *
«me
,

50 
buf„r
 *);

51 (*
de£rülize_Såög
)(
ürchive
 *
ü
, c⁄° *
«me
, **);

52 *
¥iv
;

54 
	sﬂrchive
 {

55 (*
°¨t_ªc‹d
)(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
);

56 (*
íd_ªc‹d
)(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
);

57 (*
°¨t_ve˘‹
)(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
, c⁄° 
öt32_t
 *
cou¡
);

58 (*
íd_ve˘‹
)(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
);

59 (*
£rülize_Boﬁ
)(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
, c⁄° 
öt32_t
 *);

60 (*
£rülize_I¡
)(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
, c⁄° 
öt32_t
 *);

61 (*
£rülize_L⁄g
)(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
,

62 c⁄° 
öt64_t
 *);

63 (*
£rülize_Buf„r
)(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
,

64 c⁄° 
buf„r
 *);

65 (*
£rülize_Såög
)(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
, **);

66 *
¥iv
;

69 
ﬂrchive
 *
¸óã_buf„r_ﬂrchive
();

70 
˛o£_buf„r_ﬂrchive
(
ﬂrchive
 **
ﬂ
, 
‰ì_buf„r
);

71 
ürchive
 *
¸óã_buf„r_ürchive
(*
buf„r
, 
Àn
);

72 
˛o£_buf„r_ürchive
(
ürchive
 **
ü
);

73 *
gë_buf„r
(
ﬂrchive
 *);

74 
gë_buf„r_Àn
(
ﬂrchive
 *);

76 
öt64_t
 
ht⁄Œ
(öt64_à
v
);

78 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/include/winconfig.h

2 #unde‡
HAVE_ARPA_INET_H


5 #unde‡
HAVE_DLFCN_H


8 #unde‡
HAVE_FCNTL_H


11 
	#HAVE_GENERATED_ZOOKEEPER_JUTE_C
 1

	)

14 
	#HAVE_GENERATED_ZOOKEEPER_JUTE_H
 1

	)

17 #unde‡
HAVE_GETCWD


20 #unde‡
HAVE_GETHOSTBYNAME


23 
	#HAVE_GETHOSTNAME
 1

	)

26 #unde‡
HAVE_GETLOGIN


29 #unde‡
HAVE_GETPWUID_R


32 #unde‡
HAVE_GETTIMEOFDAY


35 #unde‡
HAVE_GETUID


38 #unde‡
HAVE_INTTYPES_H


41 #unde‡
HAVE_MEMMOVE


44 #unde‡
HAVE_MEMORY_H


47 #unde‡
HAVE_MEMSET


50 #unde‡
HAVE_NETDB_H


53 #unde‡
HAVE_NETINET_IN_H


56 #unde‡
HAVE_POLL


59 #unde‡
HAVE_SOCKET


62 #unde‡
HAVE_STDINT_H


65 
	#HAVE_STDLIB_H
 1

	)

68 
	#HAVE_STRCHR
 1

	)

71 
	#HAVE_STRDUP
 1

	)

74 
	#HAVE_STRERROR
 1

	)

77 #unde‡
HAVE_STRINGS_H


80 #unde‡
HAVE_STRING_H


83 #unde‡
HAVE_STRTOL


86 #unde‡
HAVE_SYS_SOCKET_H


89 #unde‡
HAVE_SYS_STAT_H


92 #unde‡
HAVE_SYS_TIME_H


95 #unde‡
HAVE_SYS_TYPES_H


98 #unde‡
HAVE_SYS_UTSNAME_H


101 #unde‡
HAVE_UNISTD_H


105 
	#LT_OBJDIR


	)

111 
	#PACKAGE
 "c-˛õ¡-§c"

	)

114 
	#PACKAGE_BUGREPORT
 "u£r@zookì≥r.≠ache.‹g"

	)

117 
	#PACKAGE_NAME
 "zookì≥∏C clõ¡"

	)

120 
	#PACKAGE_STRING
 "zookì≥∏C clõ¡ 3.4.0 wö32"

	)

123 
	#PACKAGE_TARNAME
 "c-˛õ¡-§c"

	)

126 
	#PACKAGE_URL
 ""

	)

129 
	#PACKAGE_VERSION
 "3.4.0"

	)

132 
	#POLL_NFDS_TYPE


	)

135 
	#STDC_HEADERS


	)

138 
	#TIME_WITH_SYS_TIME


	)

141 
	#VERSION
 "3.4.0"

	)

148 #i‚de‡
__˝lu•lus


149 
	#ölöe
 
__ölöe


	)

151 #ifde‡
WIN32


152 
	#__©åibuã__
(
x
)

	)

153 
	#__func__
 
__FUNCTION__


	)

155 #i‚de‡
_WIN32_WINNT_NT4


156 
	#_WIN32_WINNT_NT4
 0x0400

	)

159 
	#NTDDI_VERSION
 
_WIN32_WINNT_NT4


	)

160 
	#_WIN32_WINNT
 
_WIN32_WINNT_NT4


	)

162 
	#_CRT_SECURE_NO_WARNINGS


	)

163 
	#WIN32_LEAN_AND_MEAN


	)

164 
	~<Wödows.h
>

165 
	~<Wösock2.h
>

166 
	~<wö°döt.h
>

167 
	~<¥o˚ss.h
>

168 
	~<ws2t˝ù.h
>

169 #unde‡
AF_INET6


170 #unde‡
mö


171 #unde‡
max


173 
	~<î∫o.h
>

175 
	#°πok_r
 
°πok_s


	)

176 
	#loˇ…ime_r
(
a
,
b
Ë
	`loˇ…ime_s
(b,a)

	)

177 
	#gë_î∫o
(Ë
î∫o
=
	`GëLa°Eº‹
()

	)

178 
	#øndom
 
ønd


	)

179 
	#¢¥ötf
 
_¢¥ötf


	)

181 
	#ACL
 
ZKACL


182 

	)

183 
	#EAI_ADDRFAMILY
 
WSAEINVAL


	)

184 
	#EHOSTDOWN
 
EPIPE


	)

185 
	#ESTALE
 
ENODEV


	)

187 
	#EWOULDBLOCK
 
WSAEWOULDBLOCK


	)

188 
	#EINPROGRESS
 
WSAEINPROGRESS


	)

190 
	tpid_t
;

	@/home/pig/zookeeper-3.4.5/src/c/include/winstdint.h

32 #i‚de‡
_MSC_VER


36 #i‚de‡
_MSC_STDINT_H_


37 
	#_MSC_STDINT_H_


	)

39 #i‡
_MSC_VER
 > 1000

40 #¥agm®
⁄˚


43 
	~<limôs.h
>

49 #ifde‡
__˝lu•lus


52 
	~<wch¨.h
>

53 #ifde‡
__˝lu•lus


58 #i‚de‡
_W64


59 #i‡!
deföed
(
__midl
Ë&& (deföed(
_X86_
Ë|| deföed(
_M_IX86
)Ë&& 
_MSC_VER
 >= 1300

60 
	#_W64
 
__w64


	)

62 
	#_W64


	)

74 #i‡(
_MSC_VER
 < 1300)

75 sig√d 
	töt8_t
;

76 sig√d 
	töt16_t
;

77 sig√d 
	töt32_t
;

78 
	tuöt8_t
;

79 
	tuöt16_t
;

80 
	tuöt32_t
;

82 sig√d 
	t__öt8
 
	töt8_t
;

83 sig√d 
	t__öt16
 
	töt16_t
;

84 sig√d 
	t__öt32
 
	töt32_t
;

85 
	t__öt8
 
	tuöt8_t
;

86 
	t__öt16
 
	tuöt16_t
;

87 
	t__öt32
 
	tuöt32_t
;

89 sig√d 
	t__öt64
 
	töt64_t
;

90 
	t__öt64
 
	tuöt64_t
;

94 
öt8_t
 
	töt_Àa°8_t
;

95 
öt16_t
 
	töt_Àa°16_t
;

96 
öt32_t
 
	töt_Àa°32_t
;

97 
öt64_t
 
	töt_Àa°64_t
;

98 
uöt8_t
 
	tuöt_Àa°8_t
;

99 
uöt16_t
 
	tuöt_Àa°16_t
;

100 
uöt32_t
 
	tuöt_Àa°32_t
;

101 
uöt64_t
 
	tuöt_Àa°64_t
;

104 
öt8_t
 
	töt_Á°8_t
;

105 
öt16_t
 
	töt_Á°16_t
;

106 
öt32_t
 
	töt_Á°32_t
;

107 
öt64_t
 
	töt_Á°64_t
;

108 
uöt8_t
 
	tuöt_Á°8_t
;

109 
uöt16_t
 
	tuöt_Á°16_t
;

110 
uöt32_t
 
	tuöt_Á°32_t
;

111 
uöt64_t
 
	tuöt_Á°64_t
;

114 #ifde‡
_WIN64


115 sig√d 
	t__öt64
 
	töçå_t
;

116 
	t__öt64
 
	tuöçå_t
;

118 
_W64
 sig√d 
	töçå_t
;

119 
_W64
 
	tuöçå_t
;

123 
öt64_t
 
	tötmax_t
;

124 
uöt64_t
 
	tuötmax_t
;

129 #i‡!
deföed
(
__˝lu•lus
Ë|| deföed(
__STDC_LIMIT_MACROS
)

132 
	#INT8_MIN
 ((
öt8_t
)
_I8_MIN
)

	)

133 
	#INT8_MAX
 
_I8_MAX


	)

134 
	#INT16_MIN
 ((
öt16_t
)
_I16_MIN
)

	)

135 
	#INT16_MAX
 
_I16_MAX


	)

136 
	#INT32_MIN
 ((
öt32_t
)
_I32_MIN
)

	)

137 
	#INT32_MAX
 
_I32_MAX


	)

138 
	#INT64_MIN
 ((
öt64_t
)
_I64_MIN
)

	)

139 
	#INT64_MAX
 
_I64_MAX


	)

140 
	#UINT8_MAX
 
_UI8_MAX


	)

141 
	#UINT16_MAX
 
_UI16_MAX


	)

142 
	#UINT32_MAX
 
_UI32_MAX


	)

143 
	#UINT64_MAX
 
_UI64_MAX


	)

146 
	#INT_LEAST8_MIN
 
INT8_MIN


	)

147 
	#INT_LEAST8_MAX
 
INT8_MAX


	)

148 
	#INT_LEAST16_MIN
 
INT16_MIN


	)

149 
	#INT_LEAST16_MAX
 
INT16_MAX


	)

150 
	#INT_LEAST32_MIN
 
INT32_MIN


	)

151 
	#INT_LEAST32_MAX
 
INT32_MAX


	)

152 
	#INT_LEAST64_MIN
 
INT64_MIN


	)

153 
	#INT_LEAST64_MAX
 
INT64_MAX


	)

154 
	#UINT_LEAST8_MAX
 
UINT8_MAX


	)

155 
	#UINT_LEAST16_MAX
 
UINT16_MAX


	)

156 
	#UINT_LEAST32_MAX
 
UINT32_MAX


	)

157 
	#UINT_LEAST64_MAX
 
UINT64_MAX


	)

160 
	#INT_FAST8_MIN
 
INT8_MIN


	)

161 
	#INT_FAST8_MAX
 
INT8_MAX


	)

162 
	#INT_FAST16_MIN
 
INT16_MIN


	)

163 
	#INT_FAST16_MAX
 
INT16_MAX


	)

164 
	#INT_FAST32_MIN
 
INT32_MIN


	)

165 
	#INT_FAST32_MAX
 
INT32_MAX


	)

166 
	#INT_FAST64_MIN
 
INT64_MIN


	)

167 
	#INT_FAST64_MAX
 
INT64_MAX


	)

168 
	#UINT_FAST8_MAX
 
UINT8_MAX


	)

169 
	#UINT_FAST16_MAX
 
UINT16_MAX


	)

170 
	#UINT_FAST32_MAX
 
UINT32_MAX


	)

171 
	#UINT_FAST64_MAX
 
UINT64_MAX


	)

174 #ifde‡
_WIN64


175 
	#INTPTR_MIN
 
INT64_MIN


	)

176 
	#INTPTR_MAX
 
INT64_MAX


	)

177 
	#UINTPTR_MAX
 
UINT64_MAX


	)

179 
	#INTPTR_MIN
 
INT32_MIN


	)

180 
	#INTPTR_MAX
 
INT32_MAX


	)

181 
	#UINTPTR_MAX
 
UINT32_MAX


	)

185 
	#INTMAX_MIN
 
INT64_MIN


	)

186 
	#INTMAX_MAX
 
INT64_MAX


	)

187 
	#UINTMAX_MAX
 
UINT64_MAX


	)

191 #ifde‡
_WIN64


192 
	#PTRDIFF_MIN
 
_I64_MIN


	)

193 
	#PTRDIFF_MAX
 
_I64_MAX


	)

195 
	#PTRDIFF_MIN
 
_I32_MIN


	)

196 
	#PTRDIFF_MAX
 
_I32_MAX


	)

199 
	#SIG_ATOMIC_MIN
 
INT_MIN


	)

200 
	#SIG_ATOMIC_MAX
 
INT_MAX


	)

202 #i‚de‡
SIZE_MAX


203 #ifde‡
_WIN64


204 
	#SIZE_MAX
 
_UI64_MAX


	)

206 
	#SIZE_MAX
 
_UI32_MAX


	)

211 #i‚de‡
WCHAR_MIN


212 
	#WCHAR_MIN
 0

	)

214 #i‚de‡
WCHAR_MAX


215 
	#WCHAR_MAX
 
_UI16_MAX


	)

218 
	#WINT_MIN
 0

	)

219 
	#WINT_MAX
 
_UI16_MAX


	)

226 #i‡!
deföed
(
__˝lu•lus
Ë|| deföed(
__STDC_CONSTANT_MACROS
)

230 
	#INT8_C
(
vÆ
ËvÆ##
i8


	)

231 
	#INT16_C
(
vÆ
ËvÆ##
i16


	)

232 
	#INT32_C
(
vÆ
ËvÆ##
i32


	)

233 
	#INT64_C
(
vÆ
ËvÆ##
i64


	)

235 
	#UINT8_C
(
vÆ
ËvÆ##
ui8


	)

236 
	#UINT16_C
(
vÆ
ËvÆ##
ui16


	)

237 
	#UINT32_C
(
vÆ
ËvÆ##
ui32


	)

238 
	#UINT64_C
(
vÆ
ËvÆ##
ui64


	)

241 
	#INTMAX_C
 
INT64_C


	)

242 
	#UINTMAX_C
 
UINT64_C


	)

	@/home/pig/zookeeper-3.4.5/src/c/include/zookeeper.h

19 #i‚de‡
ZOOKEEPER_H_


20 
	#ZOOKEEPER_H_


	)

22 
	~<°dlib.h
>

23 #i‚de‡
WIN32


24 
	~<sys/sockë.h
>

25 
	~<sys/time.h
>

27 
	~"wöc⁄fig.h
"

29 
	~<°dio.h
>

30 
	~<˘y≥.h
>

32 
	~"¥Ÿo.h
"

33 
	~"zookì≥r_vîsi⁄.h
"

34 
	~"ªc‹dio.h
"

35 
	~"zookì≥r.juã.h
"

68 #ifde‡
DLL_EXPORT


69 
	#ZOOAPI
 
	`__de˛•ec
(
dŒexp‹t
)

	)

71 #i‡(
deföed
(
__CYGWIN__
Ë|| deföed(
WIN32
)Ë&& !deföed(
USE_STATIC_LIB
)

72 
	#ZOOAPI
 
	`__de˛•ec
(
dŒimp‹t
)

	)

74 
	#ZOOAPI


	)

80 
	eZOO_ERRORS
 {

81 
	mZOK
 = 0,

87 
	mZSYSTEMERROR
 = -1,

88 
	mZRUNTIMEINCONSISTENCY
 = -2,

89 
	mZDATAINCONSISTENCY
 = -3,

90 
	mZCONNECTIONLOSS
 = -4,

91 
	mZMARSHALLINGERROR
 = -5,

92 
	mZUNIMPLEMENTED
 = -6,

93 
	mZOPERATIONTIMEOUT
 = -7,

94 
	mZBADARGUMENTS
 = -8,

95 
	mZINVALIDSTATE
 = -9,

103 
	mZAPIERROR
 = -100,

104 
	mZNONODE
 = -101,

105 
	mZNOAUTH
 = -102,

106 
	mZBADVERSION
 = -103,

107 
	mZNOCHILDRENFOREPHEMERALS
 = -108,

108 
	mZNODEEXISTS
 = -110,

109 
	mZNOTEMPTY
 = -111,

110 
	mZSESSIONEXPIRED
 = -112,

111 
	mZINVALIDCALLBACK
 = -113,

112 
	mZINVALIDACL
 = -114,

113 
	mZAUTHFAILED
 = -115,

114 
	mZCLOSING
 = -116,

115 
	mZNOTHING
 = -117,

116 
	mZSESSIONMOVED
 = -118

119 #ifde‡
__˝lu•lus


126 íum {
ZOO_LOG_LEVEL_ERROR
=1,
ZOO_LOG_LEVEL_WARN
=2,
ZOO_LOG_LEVEL_INFO
=3,
ZOO_LOG_LEVEL_DEBUG
=4} 
	tZooLogLevñ
;

131 
ZOOAPI
 c⁄° 
ZOO_PERM_READ
;

132 
ZOOAPI
 c⁄° 
ZOO_PERM_WRITE
;

133 
ZOOAPI
 c⁄° 
ZOO_PERM_CREATE
;

134 
ZOOAPI
 c⁄° 
ZOO_PERM_DELETE
;

135 
ZOOAPI
 c⁄° 
ZOO_PERM_ADMIN
;

136 
ZOOAPI
 c⁄° 
ZOO_PERM_ALL
;

139 
ZOOAPI
 
Id
 
ZOO_ANYONE_ID_UNSAFE
;

143 
ZOOAPI
 
Id
 
ZOO_AUTH_IDS
;

146 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_OPEN_ACL_UNSAFE
;

148 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_READ_ACL_UNSAFE
;

150 
ZOOAPI
 
ACL_ve˘‹
 
ZOO_CREATOR_ALL_ACL
;

161 
ZOOAPI
 c⁄° 
ZOOKEEPER_WRITE
;

162 
ZOOAPI
 c⁄° 
ZOOKEEPER_READ
;

172 
ZOOAPI
 c⁄° 
ZOO_EPHEMERAL
;

173 
ZOOAPI
 c⁄° 
ZOO_SEQUENCE
;

182 
ZOOAPI
 c⁄° 
ZOO_EXPIRED_SESSION_STATE
;

183 
ZOOAPI
 c⁄° 
ZOO_AUTH_FAILED_STATE
;

184 
ZOOAPI
 c⁄° 
ZOO_CONNECTING_STATE
;

185 
ZOOAPI
 c⁄° 
ZOO_ASSOCIATING_STATE
;

186 
ZOOAPI
 c⁄° 
ZOO_CONNECTED_STATE
;

201 
ZOOAPI
 c⁄° 
ZOO_CREATED_EVENT
;

208 
ZOOAPI
 c⁄° 
ZOO_DELETED_EVENT
;

215 
ZOOAPI
 c⁄° 
ZOO_CHANGED_EVENT
;

222 
ZOOAPI
 c⁄° 
ZOO_CHILD_EVENT
;

228 
ZOOAPI
 c⁄° 
ZOO_SESSION_EVENT
;

236 
ZOOAPI
 c⁄° 
ZOO_NOTWATCHING_EVENT
;

246 
_zh™dÀ
 
	tzh™dÀ_t
;

256 
öt64_t
 
	g˛õ¡_id
;

257 
	g∑sswd
[16];

258 } 
	t˛õ¡id_t
;

269 
	szoo_›
 {

270 
	gty≥
;

274 c⁄° *
	g∑th
;

275 c⁄° *
	gd©a
;

276 
	gd©Æí
;

277 *
	gbuf
;

278 
	gbuÊí
;

279 c⁄° 
ACL_ve˘‹
 *
	ga˛
;

280 
	gÊags
;

281 } 
	g¸óã_›
;

285 c⁄° *
	g∑th
;

286 
	gvîsi⁄
;

287 } 
	gdñëe_›
;

291 c⁄° *
	g∑th
;

292 c⁄° *
	gd©a
;

293 
	gd©Æí
;

294 
	gvîsi⁄
;

295 
Sèt
 *
	g°©
;

296 } 
	g£t_›
;

300 c⁄° *
	g∑th
;

301 
	gvîsi⁄
;

302 } 
	gcheck_›
;

304 } 
	tzoo_›_t
;

330 
zoo_¸óã_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
vÆue
,

331 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

332 *
∑th_buf„r
, 
∑th_buf„r_Àn
);

346 
zoo_dñëe_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
);

363 
zoo_£t_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
buf„r
,

364 
buÊí
, 
vîsi⁄
, 
Sèt
 *
°©
);

377 
zoo_check_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
);

385 
	szoo_›_ªsu…
 {

386 
	gîr
;

387 *
	gvÆue
;

388 
	gvÆuñí
;

389 
Sèt
 *
	g°©
;

390 } 
	tzoo_›_ªsu…_t
;

418 (*
	gw©chî_‚
)(
	tzh™dÀ_t
 *
	tzh
, 
	tty≥
,

419 
	t°©e
, c⁄° *
	t∑th
,*
	tw©chîCtx
);

449 
ZOOAPI
 
zh™dÀ_t
 *
zookì≥r_öô
(c⁄° *
ho°
, 
w©chî_‚
 
‚
,

450 
ªcv_timeout
, c⁄° 
˛õ¡id_t
 *
˛õ¡id
, *
c⁄ãxt
, 
Êags
);

474 
ZOOAPI
 
zookì≥r_˛o£
(
zh™dÀ_t
 *
zh
);

480 
ZOOAPI
 c⁄° 
˛õ¡id_t
 *
zoo_˛õ¡_id
(
zh™dÀ_t
 *
zh
);

487 
ZOOAPI
 
zoo_ªcv_timeout
(
zh™dÀ_t
 *
zh
);

492 
ZOOAPI
 c⁄° *
zoo_gë_c⁄ãxt
(
zh™dÀ_t
 *
zh
);

497 
ZOOAPI
 
zoo_£t_c⁄ãxt
(
zh™dÀ_t
 *
zh
, *
c⁄ãxt
);

503 
ZOOAPI
 
w©chî_‚
 
zoo_£t_w©chî
(
zh™dÀ_t
 *
zh
,w©chî_‚ 
√wFn
);

510 
ZOOAPI
 
sockaddr
* 
zookì≥r_gë_c⁄√˘ed_ho°
(
zh™dÀ_t
 *
zh
,

511 
sockaddr
 *
addr
, 
sockÀn_t
 *
addr_Àn
);

513 #i‚de‡
THREADED


533 #ifde‡
WIN32


534 
ZOOAPI
 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, 
SOCKET
 *
fd
, *
öãª°
,

535 
timevÆ
 *
tv
);

537 
ZOOAPI
 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, *
fd
, *
öãª°
,

538 
timevÆ
 *
tv
);

558 
ZOOAPI
 
zookì≥r_¥o˚ss
(
zh™dÀ_t
 *
zh
, 
evíts
);

578 (*
	gvoid_com∂ëi⁄_t
)(
	trc
, c⁄° *
	td©a
);

600 (*
	g°©_com∂ëi⁄_t
)(
	trc
, c⁄° 
	tSèt
 *
	t°©
,

601 c⁄° *
	td©a
);

627 (*
	gd©a_com∂ëi⁄_t
)(
	trc
, c⁄° *
	tvÆue
, 
	tvÆue_Àn
,

628 c⁄° 
	tSèt
 *
	t°©
, c⁄° *
	td©a
);

651 (*
	g°rögs_com∂ëi⁄_t
)(
	trc
,

652 c⁄° 
	tSåög_ve˘‹
 *
	t°rögs
, c⁄° *
	td©a
);

679 (*
	g°rögs_°©_com∂ëi⁄_t
)(
	trc
,

680 c⁄° 
	tSåög_ve˘‹
 *
	t°rögs
, c⁄° 
	tSèt
 *
	t°©
,

681 c⁄° *
	td©a
);

702 (*
	t°rög_com∂ëi⁄_t
)(
	trc
, c⁄° *
	tvÆue
, c⁄° *
	td©a
);

727 (*
	ga˛_com∂ëi⁄_t
)(
	trc
, 
	tACL_ve˘‹
 *
	ta˛
,

728 
	tSèt
 *
	t°©
, c⁄° *
	td©a
);

735 
ZOOAPI
 
zoo_°©e
(
zh™dÀ_t
 *
zh
);

769 
ZOOAPI
 
zoo_a¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

770 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

771 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

796 
ZOOAPI
 
zoo_adñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

797 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

820 
ZOOAPI
 
zoo_´xi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

821 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

852 
ZOOAPI
 
zoo_awexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

853 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

854 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

876 
ZOOAPI
 
zoo_agë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

877 
d©a_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

905 
ZOOAPI
 
zoo_awgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

906 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

907 
d©a_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

935 
ZOOAPI
 
zoo_a£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
,

936 
vîsi⁄
, 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

958 
ZOOAPI
 
zoo_agë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

959 
°rögs_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

987 
ZOOAPI
 
zoo_awgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

988 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

989 
°rögs_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1013 
ZOOAPI
 
zoo_agë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1014 
°rögs_°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1044 
ZOOAPI
 
zoo_awgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1045 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1046 
°rögs_°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1067 
ZOOAPI
 
zoo_async
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1068 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1089 
ZOOAPI
 
zoo_agë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
a˛_com∂ëi⁄_t
 
com∂ëi⁄
,

1090 c⁄° *
d©a
);

1114 
ZOOAPI
 
zoo_a£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

1115 
ACL_ve˘‹
 *
a˛
, 
void_com∂ëi⁄_t
, c⁄° *
d©a
);

1133 
ZOOAPI
 
zoo_amu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
,

1134 
zoo_›_ªsu…_t
 *
ªsu…s
, 
void_com∂ëi⁄_t
, c⁄° *
d©a
);

1142 
ZOOAPI
 c⁄° * 
zîr‹
(
c
);

1171 
ZOOAPI
 
zoo_add_auth
(
zh™dÀ_t
 *
zh
,c⁄° * 
scheme
,c⁄° * 
˚π
,

1172 
˚πLí
, 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
);

1182 
ZOOAPI
 
is_uƒecovîabÀ
(
zh™dÀ_t
 *
zh
);

1187 
ZOOAPI
 
zoo_£t_debug_Àvñ
(
ZooLogLevñ
 
logLevñ
);

1196 
ZOOAPI
 
zoo_£t_log_°ªam
(
FILE
* 
logSåóm
);

1209 
ZOOAPI
 
zoo_dëîmöi°ic_c⁄n_‹dî
(
yesOrNo
);

1248 
ZOOAPI
 
zoo_¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

1249 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

1250 *
∑th_buf„r
, 
∑th_buf„r_Àn
);

1271 
ZOOAPI
 
zoo_dñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
);

1292 
ZOOAPI
 
zoo_exi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, 
Sèt
 *
°©
);

1318 
ZOOAPI
 
zoo_wexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1319 
w©chî_‚
 
w©chî
, * 
w©chîCtx
, 
Sèt
 *
°©
);

1341 
ZOOAPI
 
zoo_gë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, *
buf„r
,

1342 * 
buf„r_Àn
, 
Sèt
 *
°©
);

1370 
ZOOAPI
 
zoo_wgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1371 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1372 *
buf„r
, * 
buf„r_Àn
, 
Sèt
 *
°©
);

1396 
ZOOAPI
 
zoo_£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
,

1397 
buÊí
, 
vîsi⁄
);

1423 
ZOOAPI
 
zoo_£t2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
,

1424 
buÊí
, 
vîsi⁄
, 
Sèt
 *
°©
);

1443 
ZOOAPI
 
zoo_gë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1444 
Såög_ve˘‹
 *
°rögs
);

1469 
ZOOAPI
 
zoo_wgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1470 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1471 
Såög_ve˘‹
 *
°rögs
);

1493 
ZOOAPI
 
zoo_gë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

1494 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
);

1522 
ZOOAPI
 
zoo_wgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

1523 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

1524 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
);

1542 
ZOOAPI
 
zoo_gë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
ACL_ve˘‹
 *
a˛
,

1543 
Sèt
 *
°©
);

1563 
ZOOAPI
 
zoo_£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

1564 c⁄° 
ACL_ve˘‹
 *
a˛
);

1577 
ZOOAPI
 
zoo_mu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
, 
zoo_›_ªsu…_t
 *
ªsu…s
);

1579 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/include/zookeeper_log.h

19 #i‚de‡
ZK_LOG_H_


20 
	#ZK_LOG_H_


	)

22 
	~<zookì≥r.h
>

24 #ifde‡
__˝lu•lus


28 
ZOOAPI
 
ZooLogLevñ
 
logLevñ
;

29 
	#LOGSTREAM
 
	`gëLogSåóm
()

	)

31 
	#LOG_ERROR
(
x
Ëif(
logLevñ
>=
ZOO_LOG_LEVEL_ERROR
) \

32 
	`log_mesßge
(
ZOO_LOG_LEVEL_ERROR
,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

33 
	#LOG_WARN
(
x
Ëif(
logLevñ
>=
ZOO_LOG_LEVEL_WARN
) \

34 
	`log_mesßge
(
ZOO_LOG_LEVEL_WARN
,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

35 
	#LOG_INFO
(
x
Ëif(
logLevñ
>=
ZOO_LOG_LEVEL_INFO
) \

36 
	`log_mesßge
(
ZOO_LOG_LEVEL_INFO
,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

37 
	#LOG_DEBUG
(
x
Ëif(
logLevñ
==
ZOO_LOG_LEVEL_DEBUG
) \

38 
	`log_mesßge
(
ZOO_LOG_LEVEL_DEBUG
,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

40 
ZOOAPI
 
log_mesßge
(
ZooLogLevñ
 
curLevñ
, 
löe
,c⁄° * 
funcName
,

41 c⁄° * 
mesßge
);

43 
ZOOAPI
 c⁄° * 
f‹m©_log_mesßge
(c⁄° * 
f‹m©
,...);

45 
FILE
* 
gëLogSåóm
();

47 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/include/zookeeper_version.h

18 #i‚de‡
ZOOKEEPER_VERSION_H_


19 
	#ZOOKEEPER_VERSION_H_


	)

21 #ifde‡
__˝lu•lus


25 
	#ZOO_MAJOR_VERSION
 3

	)

26 
	#ZOO_MINOR_VERSION
 4

	)

27 
	#ZOO_PATCH_VERSION
 5

	)

29 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/src/cli.c

19 
	~<zookì≥r.h
>

20 
	~<¥Ÿo.h
>

21 
	~<°dlib.h
>

22 
	~<°dio.h
>

23 
	~<°rög.h
>

25 #i‚de‡
WIN32


26 
	~<sys/time.h
>

27 
	~<uni°d.h
>

28 
	~<sys/£À˘.h
>

30 
	~"wöp‹t.h
"

32 
ªad
(
_FûeH™dÀ
, * 
_D°Buf
, 
_MaxCh¨Cou¡
);

33 
wrôe
(
_Fûeh™dÀ
, c⁄° * 
_Buf
, 
_MaxCh¨Cou¡
);

34 
	#˘ime_r
(
t˘ime
, 
buf„r
Ë
	`˘ime_s
 (buf„r, 40,Å˘ime)

	)

37 
	~<time.h
>

38 
	~<î∫o.h
>

39 
	~<as£π.h
>

41 #ifde‡
YCA


42 
	~<yˇ/yˇ.h
>

45 
	#_LL_CAST_
 ()

	)

47 
zh™dÀ_t
 *
	gzh
;

48 
˛õ¡id_t
 
	gmyid
;

49 c⁄° *
	g˛õ¡IdFûe
 = 0;

50 
timevÆ
 
	g°¨tTime
;

51 
	gcmd
[1024];

52 
	gb©chMode
=0;

54 
	gto_£nd
=0;

55 
	g£¡
=0;

56 
	gªcvd
=0;

58 
	gshutdownThisThög
=0;

60 
__©åibuã__
 ((
unu£d
)) 

61 
	$¥ötProfûeInfo
(
timevÆ
 
°¨t
, timevÆ 
íd
, 
thªs
,

62 c⁄° * 
msg
)

64 
dñay
=(
íd
.
tv_£c
*1000+íd.
tv_u£c
/1000)-

65 (
°¨t
.
tv_£c
*1000+°¨t.
tv_u£c
/1000);

66 if(
dñay
>
thªs
)

67 
	`Ârötf
(
°dîr
,"%s:Éxecuti⁄Åime=%dms\n",
msg
,
dñay
);

68 
	}
}

70 c⁄° * 
	$°©e2Såög
(
°©e
){

71 i‡(
°©e
 == 0)

73 i‡(
°©e
 =
ZOO_CONNECTING_STATE
)

75 i‡(
°©e
 =
ZOO_ASSOCIATING_STATE
)

77 i‡(
°©e
 =
ZOO_CONNECTED_STATE
)

79 i‡(
°©e
 =
ZOO_EXPIRED_SESSION_STATE
)

81 i‡(
°©e
 =
ZOO_AUTH_FAILED_STATE
)

85 
	}
}

87 c⁄° * 
	$ty≥2Såög
(
°©e
){

88 i‡(
°©e
 =
ZOO_CREATED_EVENT
)

90 i‡(
°©e
 =
ZOO_DELETED_EVENT
)

92 i‡(
°©e
 =
ZOO_CHANGED_EVENT
)

94 i‡(
°©e
 =
ZOO_CHILD_EVENT
)

96 i‡(
°©e
 =
ZOO_SESSION_EVENT
)

98 i‡(
°©e
 =
ZOO_NOTWATCHING_EVENT
)

102 
	}
}

104 
	$w©chî
(
zh™dÀ_t
 *
zzh
, 
ty≥
, 
°©e
, c⁄° *
∑th
,

105 * 
c⁄ãxt
)

110 
	`Ârötf
(
°dîr
, "W©chî %†°©ê%s", 
	`ty≥2Såög
(
ty≥
), 
	`°©e2Såög
(
°©e
));

111 i‡(
∑th
 && 
	`°æí
(path) > 0) {

112 
	`Ârötf
(
°dîr
, " f‹Ö©h %s", 
∑th
);

114 
	`Ârötf
(
°dîr
, "\n");

116 i‡(
ty≥
 =
ZOO_SESSION_EVENT
) {

117 i‡(
°©e
 =
ZOO_CONNECTED_STATE
) {

118 c⁄° 
˛õ¡id_t
 *
id
 = 
	`zoo_˛õ¡_id
(
zzh
);

119 i‡(
myid
.
˛õ¡_id
 =0 || myid.˛õ¡_id !
id
->client_id) {

120 
myid
 = *
id
;

121 
	`Ârötf
(
°dîr
, "GotáÇew session id: 0x%llx\n",

122 
_LL_CAST_
 
myid
.
˛õ¡_id
);

123 i‡(
˛õ¡IdFûe
) {

124 
FILE
 *
fh
 = 
	`f›í
(
˛õ¡IdFûe
, "w");

125 i‡(!
fh
) {

126 
	`≥º‹
(
˛õ¡IdFûe
);

128 
rc
 = 
	`fwrôe
(&
myid
, (myid), 1, 
fh
);

129 i‡(
rc
 !(
myid
)) {

130 
	`≥º‹
("writing client id");

132 
	`f˛o£
(
fh
);

136 } i‡(
°©e
 =
ZOO_AUTH_FAILED_STATE
) {

137 
	`Ârötf
(
°dîr
, "Authentication failure. Shutting down...\n");

138 
	`zookì≥r_˛o£
(
zzh
);

139 
shutdownThisThög
=1;

140 
zh
=0;

141 } i‡(
°©e
 =
ZOO_EXPIRED_SESSION_STATE
) {

142 
	`Ârötf
(
°dîr
, "SessionÉxpired. Shutting down...\n");

143 
	`zookì≥r_˛o£
(
zzh
);

144 
shutdownThisThög
=1;

145 
zh
=0;

148 
	}
}

150 
	$dumpSèt
(c⁄° 
Sèt
 *
°©
) {

151 
t˘imes
[40];

152 
tmtimes
[40];

153 
time_t
 
t˘ime
;

154 
time_t
 
tmtime
;

156 i‡(!
°©
) {

157 
	`Ârötf
(
°dîr
,"null\n");

160 
t˘ime
 = 
°©
->
˘ime
/1000;

161 
tmtime
 = 
°©
->
mtime
/1000;

163 
	`˘ime_r
(&
tmtime
, 
tmtimes
);

164 
	`˘ime_r
(&
t˘ime
, 
t˘imes
);

166 
	`Ârötf
(
°dîr
, "\tctime = %s\tczxid=%llx\n"

170 
t˘imes
, 
_LL_CAST_
 
°©
->
czxid
, 
tmtimes
,

171 
_LL_CAST_
 
°©
->
mzxid
,

172 ()
°©
->
vîsi⁄
, ()°©->
avîsi⁄
,

173 
_LL_CAST_
 
°©
->
ïhemîÆOw√r
);

174 
	}
}

176 
	$my_°rög_com∂ëi⁄
(
rc
, c⁄° *
«me
, c⁄° *
d©a
) {

177 
	`Ârötf
(
°dîr
, "[%s]:Ñ¯%d\n", (*)(
d©a
==0?"nuŒ":d©a), 
rc
);

178 i‡(!
rc
) {

179 
	`Ârötf
(
°dîr
, "\äamê%s\n", 
«me
);

181 if(
b©chMode
)

182 
shutdownThisThög
=1;

183 
	}
}

185 
	$my_d©a_com∂ëi⁄
(
rc
, c⁄° *
vÆue
, 
vÆue_Àn
,

186 c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

187 
timevÆ
 
tv
;

188 
£c
;

189 
u£c
;

190 
	`gëtimeofday
(&
tv
, 0);

191 
£c
 = 
tv
.
tv_£c
 - 
°¨tTime
.tv_sec;

192 
u£c
 = 
tv
.
tv_u£c
 - 
°¨tTime
.tv_usec;

193 
	`Ârötf
(
°dîr
, "timê%d m£c\n", 
£c
*1000 + 
u£c
/1000);

194 
	`Ârötf
(
°dîr
, "%s:Ñ¯%d\n", (*)
d©a
, 
rc
);

195 i‡(
vÆue
) {

196 
	`Ârötf
(
°dîr
, " vÆue_À¿%d\n", 
vÆue_Àn
);

197 
	`as£π
(
	`wrôe
(2, 
vÆue
, 
vÆue_Àn
) == value_len);

199 
	`Ârötf
(
°dîr
, "\nStat:\n");

200 
	`dumpSèt
(
°©
);

201 
	`‰ì
((*)
d©a
);

202 if(
b©chMode
)

203 
shutdownThisThög
=1;

204 
	}
}

206 
	$my_sûít_d©a_com∂ëi⁄
(
rc
, c⁄° *
vÆue
, 
vÆue_Àn
,

207 c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

208 
ªcvd
++;

209 
	`Ârötf
(
°dîr
, "D©®com∂ëi⁄ %†r¯%d\n",(*)
d©a
,
rc
);

210 
	`‰ì
((*)
d©a
);

211 i‡(
ªcvd
==
to_£nd
) {

212 
	`Ârötf
(
°dîr
,"Recvd %dÑe•⁄£†f‹ %dÑeque°†£¡\n",
ªcvd
,
to_£nd
);

213 if(
b©chMode
)

214 
shutdownThisThög
=1;

216 
	}
}

218 
	$my_°rögs_com∂ëi⁄
(
rc
, c⁄° 
Såög_ve˘‹
 *
°rögs
,

219 c⁄° *
d©a
) {

220 
timevÆ
 
tv
;

221 
£c
;

222 
u£c
;

223 
i
;

225 
	`gëtimeofday
(&
tv
, 0);

226 
£c
 = 
tv
.
tv_£c
 - 
°¨tTime
.tv_sec;

227 
u£c
 = 
tv
.
tv_u£c
 - 
°¨tTime
.tv_usec;

228 
	`Ârötf
(
°dîr
, "timê%d m£c\n", 
£c
*1000 + 
u£c
/1000);

229 
	`Ârötf
(
°dîr
, "%s:Ñ¯%d\n", (*)
d©a
, 
rc
);

230 i‡(
°rögs
)

231 
i
=0; i < 
°rögs
->
cou¡
; i++) {

232 
	`Ârötf
(
°dîr
, "\t%s\n", 
°rögs
->
d©a
[
i
]);

234 
	`‰ì
((*)
d©a
);

235 
	`gëtimeofday
(&
tv
, 0);

236 
£c
 = 
tv
.
tv_£c
 - 
°¨tTime
.tv_sec;

237 
u£c
 = 
tv
.
tv_u£c
 - 
°¨tTime
.tv_usec;

238 
	`Ârötf
(
°dîr
, "timê%d m£c\n", 
£c
*1000 + 
u£c
/1000);

239 if(
b©chMode
)

240 
shutdownThisThög
=1;

241 
	}
}

243 
	$my_°rögs_°©_com∂ëi⁄
(
rc
, c⁄° 
Såög_ve˘‹
 *
°rögs
,

244 c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

245 
	`my_°rögs_com∂ëi⁄
(
rc
, 
°rögs
, 
d©a
);

246 
	`dumpSèt
(
°©
);

247 if(
b©chMode
)

248 
shutdownThisThög
=1;

249 
	}
}

251 
	$my_void_com∂ëi⁄
(
rc
, c⁄° *
d©a
) {

252 
	`Ârötf
(
°dîr
, "%s:Ñ¯%d\n", (*)
d©a
, 
rc
);

253 
	`‰ì
((*)
d©a
);

254 if(
b©chMode
)

255 
shutdownThisThög
=1;

256 
	}
}

258 
	$my_°©_com∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

259 
	`Ârötf
(
°dîr
, "%s:Ñ¯%d Sèt:\n", (*)
d©a
, 
rc
);

260 
	`dumpSèt
(
°©
);

261 
	`‰ì
((*)
d©a
);

262 if(
b©chMode
)

263 
shutdownThisThög
=1;

264 
	}
}

266 
	$my_sûít_°©_com∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
,

267 c⁄° *
d©a
) {

269 
£¡
++;

270 
	`‰ì
((*)
d©a
);

271 
	}
}

273 
	$£ndReque°
(c⁄° * 
d©a
) {

274 
	`zoo_a£t
(
zh
, "/od", 
d©a
, 
	`°æí
(d©a), -1, 
my_sûít_°©_com∂ëi⁄
,

275 
	`°rdup
("/od"));

276 
	`zoo_agë
(
zh
, "/od", 1, 
my_sûít_d©a_com∂ëi⁄
, 
	`°rdup
("/od"));

277 
	}
}

279 
	$od_com∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

280 
i
;

281 
	`Ârötf
(
°dîr
, "od comm™dÑe•⁄£:Ñ¯%d Sèt:\n", 
rc
);

282 
	`dumpSèt
(
°©
);

284 
ªcvd
=0;

285 
£¡
=0;

286 
to_£nd
=200;

287 
i
=0; i<
to_£nd
; i++) {

288 
buf
[4096*16];

289 
	`mem£t
(
buf
, -1, (buf)-1);

290 
buf
[(buf)-1]=0;

291 
	`£ndReque°
(
buf
);

293 
	}
}

295 
	$°¨tsWôh
(c⁄° *
löe
, c⁄° *
¥efix
) {

296 
Àn
 = 
	`°æí
(
¥efix
);

297  
	`°∫cmp
(
löe
, 
¥efix
, 
Àn
) == 0;

298 
	}
}

300 c⁄° *
	gho°P‹t
;

301 
	gvîbo£
 = 0;

303 
	$¥o˚s¶öe
(*
löe
) {

304 
rc
;

305 
async
 = ((
löe
[0] ='a'Ë&& !(
	`°¨tsWôh
(line, "addauth ")));

306 i‡(
async
) {

307 
löe
++;

309 i‡(
	`°¨tsWôh
(
löe
, "help")) {

310 
	`Ârötf
(
°dîr
, " create [+[e|s]] <path>\n");

311 
	`Ârötf
(
°dîr
, " delete <path>\n");

312 
	`Ârötf
(
°dîr
, " set <path> <data>\n");

313 
	`Ârötf
(
°dîr
, " get <path>\n");

314 
	`Ârötf
(
°dîr
, "Üs <path>\n");

315 
	`Ârötf
(
°dîr
, "Üs2 <path>\n");

316 
	`Ârötf
(
°dîr
, " sync <path>\n");

317 
	`Ârötf
(
°dîr
, "Éxists <path>\n");

318 
	`Ârötf
(
°dîr
, " wexists <path>\n");

319 
	`Ârötf
(
°dîr
, " myid\n");

320 
	`Ârötf
(
°dîr
, " verbose\n");

321 
	`Ârötf
(
°dîr
, "áddauth <id> <scheme>\n");

322 
	`Ârötf
(
°dîr
, " quit\n");

323 
	`Ârötf
(
°dîr
, "\n");

324 
	`Ârötf
(
°dîr
, "ÖrefixÅhe command withÅhe character 'a'ÅoÑunÅhe commandásynchronously.\n");

325 
	`Ârötf
(
°dîr
, "ÑunÅhe 'verbose' commandÅoÅoggle verboseÜogging.\n");

326 
	`Ârötf
(
°dîr
, " i.e. 'aget /foo'Åo get /fooásynchronously\n");

327 } i‡(
	`°¨tsWôh
(
löe
, "verbose")) {

328 i‡(
vîbo£
) {

329 
vîbo£
 = 0;

330 
	`zoo_£t_debug_Àvñ
(
ZOO_LOG_LEVEL_WARN
);

331 
	`Ârötf
(
°dîr
, "loggingÜevel setÅo WARN\n");

333 
vîbo£
 = 1;

334 
	`zoo_£t_debug_Àvñ
(
ZOO_LOG_LEVEL_DEBUG
);

335 
	`Ârötf
(
°dîr
, "loggingÜevel setÅo DEBUG\n");

337 } i‡(
	`°¨tsWôh
(
löe
, "get ")) {

338 
löe
 += 4;

339 i‡(
löe
[0] != '/') {

340 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

344 
rc
 = 
	`zoo_agë
(
zh
, 
löe
, 1, 
my_d©a_com∂ëi⁄
, 
	`°rdup
(line));

345 i‡(
rc
) {

346 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

348 } i‡(
	`°¨tsWôh
(
löe
, "set ")) {

349 *
±r
;

350 
löe
 += 4;

351 i‡(
löe
[0] != '/') {

352 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

355 
±r
 = 
	`°rchr
(
löe
, ' ');

356 i‡(!
±r
) {

357 
	`Ârötf
(
°dîr
, "No data foundáfterÖath\n");

360 *
±r
 = '\0';

361 
±r
++;

362 i‡(
async
) {

363 
rc
 = 
	`zoo_a£t
(
zh
, 
löe
, 
±r
, 
	`°æí
’å), -1, 
my_°©_com∂ëi⁄
,

364 
	`°rdup
(
löe
));

366 
Sèt
 
°©
;

367 
rc
 = 
	`zoo_£t2
(
zh
, 
löe
, 
±r
, 
	`°æí
’å), -1, &
°©
);

369 i‡(
rc
) {

370 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

372 } i‡(
	`°¨tsWôh
(
löe
, "ls ")) {

373 
löe
 += 3;

374 i‡(
löe
[0] != '/') {

375 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

378 
	`gëtimeofday
(&
°¨tTime
, 0);

379 
rc

	`zoo_agë_chûdªn
(
zh
, 
löe
, 1, 
my_°rögs_com∂ëi⁄
, 
	`°rdup
(line));

380 i‡(
rc
) {

381 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

383 } i‡(
	`°¨tsWôh
(
löe
, "ls2 ")) {

384 
löe
 += 4;

385 i‡(
löe
[0] != '/') {

386 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

389 
	`gëtimeofday
(&
°¨tTime
, 0);

390 
rc

	`zoo_agë_chûdªn2
(
zh
, 
löe
, 1, 
my_°rögs_°©_com∂ëi⁄
, 
	`°rdup
(line));

391 i‡(
rc
) {

392 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

394 } i‡(
	`°¨tsWôh
(
löe
, "create ")) {

395 
Êags
 = 0;

396 
löe
 += 7;

397 i‡(
löe
[0] == '+') {

398 
löe
++;

399 i‡(
löe
[0] == 'e') {

400 
Êags
 |
ZOO_EPHEMERAL
;

401 
löe
++;

403 i‡(
löe
[0] == 's') {

404 
Êags
 |
ZOO_SEQUENCE
;

405 
löe
++;

407 
löe
++;

409 i‡(
löe
[0] != '/') {

410 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

413 
	`Ârötf
(
°dîr
, "Cª©ög [%s]Çode\n", 
löe
);

420 
rc
 = 
	`zoo_a¸óã
(
zh
, 
löe
, "√w", 3, &
ZOO_OPEN_ACL_UNSAFE
, 
Êags
,

421 
my_°rög_com∂ëi⁄
, 
	`°rdup
(
löe
));

422 i‡(
rc
) {

423 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

425 } i‡(
	`°¨tsWôh
(
löe
, "delete ")) {

426 
löe
 += 7;

427 i‡(
löe
[0] != '/') {

428 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

431 i‡(
async
) {

432 
rc
 = 
	`zoo_adñëe
(
zh
, 
löe
, -1, 
my_void_com∂ëi⁄
, 
	`°rdup
(line));

434 
rc
 = 
	`zoo_dñëe
(
zh
, 
löe
, -1);

436 i‡(
rc
) {

437 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

439 } i‡(
	`°¨tsWôh
(
löe
, "sync ")) {

440 
löe
 += 5;

441 i‡(
löe
[0] != '/') {

442 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

445 
rc
 = 
	`zoo_async
(
zh
, 
löe
, 
my_°rög_com∂ëi⁄
, 
	`°rdup
(line));

446 i‡(
rc
) {

447 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

449 } i‡(
	`°¨tsWôh
(
löe
, "wexists ")) {

450 #ifde‡
THREADED


451 
Sèt
 
°©
;

453 
löe
 += 8;

454 i‡(
löe
[0] != '/') {

455 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

458 #i‚de‡
THREADED


459 
rc
 = 
	`zoo_awexi°s
(
zh
, 
löe
, 
w©chî
, (*Ë0, 
my_°©_com∂ëi⁄
, 
	`°rdup
(line));

461 
rc
 = 
	`zoo_wexi°s
(
zh
, 
löe
, 
w©chî
, (*Ë0, &
°©
);

463 i‡(
rc
) {

464 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

466 } i‡(
	`°¨tsWôh
(
löe
, "exists ")) {

467 #ifde‡
THREADED


468 
Sèt
 
°©
;

470 
löe
 += 7;

471 i‡(
löe
[0] != '/') {

472 
	`Ârötf
(
°dîr
, "P©h mu° sèπ wôh /, found: %s\n", 
löe
);

475 #i‚de‡
THREADED


476 
rc
 = 
	`zoo_´xi°s
(
zh
, 
löe
, 1, 
my_°©_com∂ëi⁄
, 
	`°rdup
(line));

478 
rc
 = 
	`zoo_exi°s
(
zh
, 
löe
, 1, &
°©
);

480 i‡(
rc
) {

481 
	`Ârötf
(
°dîr
, "Eº‹ %d f‹ %s\n", 
rc
, 
löe
);

483 } i‡(
	`°rcmp
(
löe
, "myid") == 0) {

484 
	`¥ötf
("£ssi⁄ Id = %Œx\n", 
_LL_CAST_
 
	`zoo_˛õ¡_id
(
zh
)->
˛õ¡_id
);

485 } i‡(
	`°rcmp
(
löe
, "reinit") == 0) {

486 
	`zookì≥r_˛o£
(
zh
);

489 
zh
 = 
	`zookì≥r_öô
(
ho°P‹t
, 
w©chî
, 30000, 0, 0, 0);

490 } i‡(
	`°¨tsWôh
(
löe
, "quit")) {

491 
	`Ârötf
(
°dîr
, "Quitting...\n");

492 
shutdownThisThög
=1;

493 } i‡(
	`°¨tsWôh
(
löe
, "od")) {

494 c⁄° 
vÆ
[]="fire off";

495 
	`Ârötf
(
°dîr
, "Overdosing...\n");

496 
rc
 = 
	`zoo_a£t
(
zh
, "/od", 
vÆ
, (vÆ)-1, -1, 
od_com∂ëi⁄
, 0);

497 i‡(
rc
)

498 
	`Ârötf
(
°dîr
, "od comm™d faûed: %d\n", 
rc
);

499 } i‡(
	`°¨tsWôh
(
löe
, "addauth ")) {

500 *
±r
;

501 
löe
 += 8;

502 
±r
 = 
	`°rchr
(
löe
, ' ');

503 i‡(
±r
) {

504 *
±r
 = '\0';

505 
±r
++;

507 
	`zoo_add_auth
(
zh
, 
löe
, 
±r
,Öå ? 
	`°æí
’åË: 0, 
NULL
, NULL);

509 
	}
}

511 
	$maö
(
¨gc
, **
¨gv
) {

512 #i‚de‡
THREADED


513 
fd_£t
 
rfds
, 
wfds
, 
efds
;

514 
¥o˚s£d
=0;

516 
buf„r
[4096];

517 
p
[2048];

518 #ifde‡
YCA


519 *
˚π
=0;

520 
≠pId
[64];

522 
bufoff
 = 0;

523 
FILE
 *
fh
;

525 i‡(
¨gc
 < 2) {

526 
	`Ârötf
(
°dîr
,

528 
¨gv
[0]);

529 
	`Ârötf
(
°dîr
,

531 
ZOO_MAJOR_VERSION
,

532 
ZOO_MINOR_VERSION
,

533 
ZOO_PATCH_VERSION
);

536 i‡(
¨gc
 > 2) {

537 if(
	`°∫cmp
("cmd:",
¨gv
[2],4)==0){

538 
	`°r˝y
(
cmd
,
¨gv
[2]+4);

539 
b©chMode
=1;

540 
	`Ârötf
(
°dîr
,"B©ch mode: %s\n",
cmd
);

542 
˛õ¡IdFûe
 = 
¨gv
[2];

543 
fh
 = 
	`f›í
(
˛õ¡IdFûe
, "r");

544 i‡(
fh
) {

545 i‡(
	`‰ód
(&
myid
, (myid), 1, 
fh
) != (myid)) {

546 
	`mem£t
(&
myid
, 0, (myid));

548 
	`f˛o£
(
fh
);

552 #ifde‡
YCA


553 
	`°r˝y
(
≠pId
,"yahoo.example.yca_test");

554 
˚π
 = 
	`yˇ_gë_˚π_⁄˚
(
≠pId
);

555 if(
˚π
!=0) {

556 
	`Ârötf
(
°dîr
,"Cîtifiˇã f‹áµid [%s] i†[%s]\n",
≠pId
,
˚π
);

557 
	`°∫˝y
(
p
,
˚π
,(p)-1);

558 
	`‰ì
(
˚π
);

560 
	`Ârötf
(
°dîr
,"Cîtifiˇã f‹áµid [%s]ÇŸ found\n",
≠pId
);

561 
	`°r˝y
(
p
,"dummy");

564 
	`°r˝y
(
p
, "dummy");

566 
vîbo£
 = 0;

567 
	`zoo_£t_debug_Àvñ
(
ZOO_LOG_LEVEL_WARN
);

568 
	`zoo_dëîmöi°ic_c⁄n_‹dî
(1);

569 
ho°P‹t
 = 
¨gv
[1];

570 
zh
 = 
	`zookì≥r_öô
(
ho°P‹t
, 
w©chî
, 30000, &
myid
, 0, 0);

571 i‡(!
zh
) {

572  
î∫o
;

575 #ifde‡
YCA


576 if(
	`zoo_add_auth
(
zh
,"yˇ",
p
,
	`°æí
’),0,0)!=
ZOK
)

580 #ifde‡
THREADED


581 !
shutdownThisThög
) {

582 
rc
;

583 
Àn
 = (
buf„r
Ë- 
bufoff
 -1;

584 i‡(
Àn
 <= 0) {

585 
	`Ârötf
(
°dîr
, "Can't handleÜinesÅhatÜong!\n");

586 
	`exô
(2);

588 
rc
 = 
	`ªad
(0, 
buf„r
+
bufoff
, 
Àn
);

589 i‡(
rc
 <= 0) {

590 
	`Ârötf
(
°dîr
, "bye\n");

591 
shutdownThisThög
=1;

594 
bufoff
 +
rc
;

595 
buf„r
[
bufoff
] = '\0';

596 
	`°rchr
(
buf„r
, '\n')) {

597 *
±r
 = 
	`°rchr
(
buf„r
, '\n');

598 *
±r
 = '\0';

599 
	`¥o˚s¶öe
(
buf„r
);

600 
±r
++;

601 
	`memmove
(
buf„r
, 
±r
, 
	`°æí
(ptr)+1);

602 
bufoff
 = 0;

606 
	`FD_ZERO
(&
rfds
);

607 
	`FD_ZERO
(&
wfds
);

608 
	`FD_ZERO
(&
efds
);

609 !
shutdownThisThög
) {

610 
fd
;

611 
öãª°
;

612 
evíts
;

613 
timevÆ
 
tv
;

614 
rc
;

615 
	`zookì≥r_öãª°
(
zh
, &
fd
, &
öãª°
, &
tv
);

616 i‡(
fd
 != -1) {

617 i‡(
öãª°
&
ZOOKEEPER_READ
) {

618 
	`FD_SET
(
fd
, &
rfds
);

620 
	`FD_CLR
(
fd
, &
rfds
);

622 i‡(
öãª°
&
ZOOKEEPER_WRITE
) {

623 
	`FD_SET
(
fd
, &
wfds
);

625 
	`FD_CLR
(
fd
, &
wfds
);

628 
fd
 = 0;

630 
	`FD_SET
(0, &
rfds
);

631 
rc
 = 
	`£À˘
(
fd
+1, &
rfds
, &
wfds
, &
efds
, &
tv
);

632 
evíts
 = 0;

633 i‡(
rc
 > 0) {

634 i‡(
	`FD_ISSET
(
fd
, &
rfds
)) {

635 
evíts
 |
ZOOKEEPER_READ
;

637 i‡(
	`FD_ISSET
(
fd
, &
wfds
)) {

638 
evíts
 |
ZOOKEEPER_WRITE
;

641 if(
b©chMode
 && 
¥o˚s£d
==0){

643 
	`¥o˚s¶öe
(
cmd
);

644 
¥o˚s£d
=1;

646 i‡(
	`FD_ISSET
(0, &
rfds
)) {

647 
rc
;

648 
Àn
 = (
buf„r
Ë- 
bufoff
 -1;

649 i‡(
Àn
 <= 0) {

650 
	`Ârötf
(
°dîr
, "Can't handleÜinesÅhatÜong!\n");

651 
	`exô
(2);

653 
rc
 = 
	`ªad
(0, 
buf„r
+
bufoff
, 
Àn
);

654 i‡(
rc
 <= 0) {

655 
	`Ârötf
(
°dîr
, "bye\n");

658 
bufoff
 +
rc
;

659 
buf„r
[
bufoff
] = '\0';

660 
	`°rchr
(
buf„r
, '\n')) {

661 *
±r
 = 
	`°rchr
(
buf„r
, '\n');

662 *
±r
 = '\0';

663 
	`¥o˚s¶öe
(
buf„r
);

664 
±r
++;

665 
	`memmove
(
buf„r
, 
±r
, 
	`°æí
(ptr)+1);

666 
bufoff
 = 0;

669 
	`zookì≥r_¥o˚ss
(
zh
, 
evíts
);

672 i‡(
to_£nd
!=0)

673 
	`Ârötf
(
°dîr
,"Recvd %dÑe•⁄£†f‹ %dÑeque°†£¡\n",
ªcvd
,
£¡
);

674 
	`zookì≥r_˛o£
(
zh
);

676 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable.c

3 
	~"hashèbÀ.h
"

4 
	~"hashèbÀ_¥iv©e.h
"

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<m©h.h
>

15 c⁄° 
	g¥imes
[] = {

24 c⁄° 
	g¥ime_èbÀ_Àngth
 = (
¥imes
)/(primes[0]);

25 c⁄° 
	gmax_lﬂd_Á˘‹
 = 0.65;

28 
hashèbÀ
 *

29 
¸óã_hashèbÀ
(
mösize
,

30 (*
hashf
) (*),

31 (*
eqf
) (*,*))

33 
hashèbÀ
 *
h
;

34 
pödex
, 
size
 = 
¥imes
[0];

36 i‡(
mösize
 > (1u << 30)Ë 
NULL
;

38 
pödex
=0;Öödex < 
¥ime_èbÀ_Àngth
;Öindex++) {

39 i‡(
¥imes
[
pödex
] > 
mösize
Ë{ 
size
 =Örimes[pindex]; ; }

41 
h
 = (
hashèbÀ
 *)
	`mÆloc
((hashtable));

42 i‡(
NULL
 =
h
)  NULL;

43 
h
->
èbÀ
 = (
íåy
 **)
	`mÆloc
((íåy*Ë* 
size
);

44 i‡(
NULL
 =
h
->
èbÀ
Ë{ 
	`‰ì
(h);  NULL; }

45 
	`mem£t
(
h
->
èbÀ
, 0, 
size
 * (
íåy
 *));

46 
h
->
èbÀÀngth
 = 
size
;

47 
h
->
¥imeödex
 = 
pödex
;

48 
h
->
íåycou¡
 = 0;

49 
h
->
hash‚
 = 
hashf
;

50 
h
->
eq‚
 = 
eqf
;

51 
h
->
lﬂdlimô
 = (Ë
	`˚û
(
size
 * 
max_lﬂd_Á˘‹
);

52  
h
;

53 
	}
}

57 
	$hash
(
hashèbÀ
 *
h
, *
k
)

61 
i
 = 
h
->
	`hash‚
(
k
);

62 
i
 += ~(i << 9);

63 
i
 ^= ((i >> 14) | (i << 18));

64 
i
 += (i << 4);

65 
i
 ^= ((i >> 10) | (i << 22));

66  
i
;

67 
	}
}

71 
	$hashèbÀ_ex∑nd
(
hashèbÀ
 *
h
)

74 
íåy
 **
√wèbÀ
;

75 
íåy
 *
e
;

76 
íåy
 **
pE
;

77 
√wsize
, 
i
, 
ödex
;

79 i‡(
h
->
¥imeödex
 =(
¥ime_èbÀ_Àngth
 - 1))  0;

80 
√wsize
 = 
¥imes
[++(
h
->
¥imeödex
)];

82 
√wèbÀ
 = (
íåy
 **)
	`mÆloc
((íåy*Ë* 
√wsize
);

83 i‡(
NULL
 !
√wèbÀ
)

85 
	`mem£t
(
√wèbÀ
, 0, 
√wsize
 * (
íåy
 *));

88 
i
 = 0; i < 
h
->
èbÀÀngth
; i++) {

89 
NULL
 !(
e
 = 
h
->
èbÀ
[
i
])) {

90 
h
->
èbÀ
[
i
] = 
e
->
√xt
;

91 
ödex
 = 
	`ödexF‹
(
√wsize
,
e
->
h
);

92 
e
->
√xt
 = 
√wèbÀ
[
ödex
];

93 
√wèbÀ
[
ödex
] = 
e
;

96 
	`‰ì
(
h
->
èbÀ
);

97 
h
->
èbÀ
 = 
√wèbÀ
;

102 
√wèbÀ
 = (
íåy
 **)

103 
	`ªÆloc
(
h
->
èbÀ
, 
√wsize
 * (
íåy
 *));

104 i‡(
NULL
 =
√wèbÀ
Ë{ (
h
->
¥imeödex
)--;  0; }

105 
h
->
èbÀ
 = 
√wèbÀ
;

106 
	`mem£t
(
√wèbÀ
[
h
->
èbÀÀngth
], 0, 
√wsize
 - h->tablelength);

107 
i
 = 0; i < 
h
->
èbÀÀngth
; i++) {

108 
pE
 = &(
√wèbÀ
[
i
]), 
e
 = *pE;É !
NULL
;É = *pE) {

109 
ödex
 = 
	`ödexF‹
(
√wsize
,
e
->
h
);

110 i‡(
ödex
 =
i
)

112 
pE
 = &(
e
->
√xt
);

116 *
pE
 = 
e
->
√xt
;

117 
e
->
√xt
 = 
√wèbÀ
[
ödex
];

118 
√wèbÀ
[
ödex
] = 
e
;

123 
h
->
èbÀÀngth
 = 
√wsize
;

124 
h
->
lﬂdlimô
 = (Ë
	`˚û
(
√wsize
 * 
max_lﬂd_Á˘‹
);

126 
	}
}

130 
	$hashèbÀ_cou¡
(
hashèbÀ
 *
h
)

132  
h
->
íåycou¡
;

133 
	}
}

137 
	$hashèbÀ_ö£π
(
hashèbÀ
 *
h
, *
k
, *
v
)

140 
ödex
;

141 
íåy
 *
e
;

142 i‡(++(
h
->
íåycou¡
Ë> h->
lﬂdlimô
)

148 
	`hashèbÀ_ex∑nd
(
h
);

150 
e
 = (
íåy
 *)
	`mÆloc
((entry));

151 i‡(
NULL
 =
e
Ë{ --(
h
->
íåycou¡
);  0; }

152 
e
->
h
 = 
	`hash
(h,
k
);

153 
ödex
 = 
	`ödexF‹
(
h
->
èbÀÀngth
,
e
->h);

154 
e
->
k
 = k;

155 
e
->
v
 = v;

156 
e
->
√xt
 = 
h
->
èbÀ
[
ödex
];

157 
h
->
èbÀ
[
ödex
] = 
e
;

159 
	}
}

163 
	$hashèbÀ_£¨ch
(
hashèbÀ
 *
h
, *
k
)

165 
íåy
 *
e
;

166 
hashvÆue
, 
ödex
;

167 
hashvÆue
 = 
	`hash
(
h
,
k
);

168 
ödex
 = 
	`ödexF‹
(
h
->
èbÀÀngth
,
hashvÆue
);

169 
e
 = 
h
->
èbÀ
[
ödex
];

170 
NULL
 !
e
)

173 i‡((
hashvÆue
 =
e
->
h
Ë&& (h->
	`eq‚
(
k
,É->k))ËÉ->
v
;

174 
e
 =É->
√xt
;

176  
NULL
;

177 
	}
}

181 
	$hashèbÀ_ªmove
(
hashèbÀ
 *
h
, *
k
)

186 
íåy
 *
e
;

187 
íåy
 **
pE
;

188 *
v
;

189 
hashvÆue
, 
ödex
;

191 
hashvÆue
 = 
	`hash
(
h
,
k
);

192 
ödex
 = 
	`ödexF‹
(
h
->
èbÀÀngth
,
	`hash
(h,
k
));

193 
pE
 = &(
h
->
èbÀ
[
ödex
]);

194 
e
 = *
pE
;

195 
NULL
 !
e
)

198 i‡((
hashvÆue
 =
e
->
h
Ë&& (h->
	`eq‚
(
k
,É->k)))

200 *
pE
 = 
e
->
√xt
;

201 
h
->
íåycou¡
--;

202 
v
 = 
e
->v;

203 
	`‰ìkey
(
e
->
k
);

204 
	`‰ì
(
e
);

205  
v
;

207 
pE
 = &(
e
->
√xt
);

208 
e
 =É->
√xt
;

210  
NULL
;

211 
	}
}

216 
	$hashèbÀ_de°roy
(
hashèbÀ
 *
h
, 
‰ì_vÆues
)

218 
i
;

219 
íåy
 *
e
, *
f
;

220 
íåy
 **
èbÀ
 = 
h
->table;

221 i‡(
‰ì_vÆues
)

223 
i
 = 0; i < 
h
->
èbÀÀngth
; i++)

225 
e
 = 
èbÀ
[
i
];

226 
NULL
 !
e
)

227 { 
f
 = 
e
;É =É->
√xt
; 
	`‰ìkey
(f->
k
); 
	`‰ì
(f->
v
); free(f); }

232 
i
 = 0; i < 
h
->
èbÀÀngth
; i++)

234 
e
 = 
èbÀ
[
i
];

235 
NULL
 !
e
)

236 { 
f
 = 
e
;É =É->
√xt
; 
	`‰ìkey
(f->
k
); 
	`‰ì
(f); }

239 
	`‰ì
(
h
->
èbÀ
);

240 
	`‰ì
(
h
);

241 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable.h

3 #i‚de‡
__HASHTABLE_CWC22_H__


4 
	#__HASHTABLE_CWC22_H__


	)

5 #ifde‡
WIN32


6 
	~"wöc⁄fig.h
"

8 #ifde‡
__˝lu•lus


12 
hashèbÀ
;

80 
hashèbÀ
 *

81 
¸óã_hashèbÀ
(
mösize
,

82 (*
hashfun˘i⁄
) (*),

83 (*
key_eq_‚
) (*,*));

105 
hashèbÀ_ö£π
(
hashèbÀ
 *
h
, *
k
, *
v
);

107 
	#DEFINE_HASHTABLE_INSERT
(
‚«me
, 
keyty≥
, 
vÆuëy≥
) \

108 
	`‚«me
 (
hashèbÀ
 *
h
, 
keyty≥
 *
k
, 
vÆuëy≥
 *
v
) \

110  
	`hashèbÀ_ö£π
(
h
,
k
,
v
); \

111 }

	)

123 
hashèbÀ_£¨ch
(
hashèbÀ
 *
h
, *
k
);

125 
	#DEFINE_HASHTABLE_SEARCH
(
‚«me
, 
keyty≥
, 
vÆuëy≥
) \

126 
vÆuëy≥
 * 
	`‚«me
 (
hashèbÀ
 *
h
, 
keyty≥
 *
k
) \

128  (
vÆuëy≥
 *Ë(
	`hashèbÀ_£¨ch
(
h
,
k
)); \

129 }

	)

141 
hashèbÀ_ªmove
(
hashèbÀ
 *
h
, *
k
);

143 
	#DEFINE_HASHTABLE_REMOVE
(
‚«me
, 
keyty≥
, 
vÆuëy≥
) \

144 
vÆuëy≥
 * 
	`‚«me
 (
hashèbÀ
 *
h
, 
keyty≥
 *
k
) \

146  (
vÆuëy≥
 *Ë(
	`hashèbÀ_ªmove
(
h
,
k
)); \

147 }

	)

158 
hashèbÀ_cou¡
(
hashèbÀ
 *
h
);

170 
hashèbÀ_de°roy
(
hashèbÀ
 *
h
, 
‰ì_vÆues
);

172 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_itr.c

3 
	~"hashèbÀ.h
"

4 
	~"hashèbÀ_¥iv©e.h
"

5 
	~"hashèbÀ_ôr.h
"

6 
	~<°dlib.h
>

11 
hashèbÀ_ôr
 *

12 
	$hashèbÀ_ôî©‹
(
hashèbÀ
 *
h
)

14 
i
, 
èbÀÀngth
;

15 
hashèbÀ_ôr
 *
ôr
 = (hashtable_itr *)

16 
	`mÆloc
((
hashèbÀ_ôr
));

17 i‡(
NULL
 =
ôr
)  NULL;

18 
ôr
->
h
 = h;

19 
ôr
->
e
 = 
NULL
;

20 
ôr
->
∑ª¡
 = 
NULL
;

21 
èbÀÀngth
 = 
h
->tablelength;

22 
ôr
->
ödex
 = 
èbÀÀngth
;

23 i‡(0 =
h
->
íåycou¡
Ë 
ôr
;

25 
i
 = 0; i < 
èbÀÀngth
; i++)

27 i‡(
NULL
 !
h
->
èbÀ
[
i
])

29 
ôr
->
e
 = 
h
->
èbÀ
[
i
];

30 
ôr
->
ödex
 = 
i
;

34  
ôr
;

35 
	}
}

42 
	$hashèbÀ_ôî©‹_adv™˚
(
hashèbÀ_ôr
 *
ôr
)

44 
j
,
èbÀÀngth
;

45 
íåy
 **
èbÀ
;

46 
íåy
 *
√xt
;

47 i‡(
NULL
 =
ôr
->
e
)  0;

49 
√xt
 = 
ôr
->
e
->next;

50 i‡(
NULL
 !
√xt
)

52 
ôr
->
∑ª¡
 = iå->
e
;

53 
ôr
->
e
 = 
√xt
;

56 
èbÀÀngth
 = 
ôr
->
h
->tablelength;

57 
ôr
->
∑ª¡
 = 
NULL
;

58 i‡(
èbÀÀngth
 <(
j
 = ++(
ôr
->
ödex
)))

60 
ôr
->
e
 = 
NULL
;

63 
èbÀ
 = 
ôr
->
h
->table;

64 
NULL
 =(
√xt
 = 
èbÀ
[
j
]))

66 i‡(++
j
 >
èbÀÀngth
)

68 
ôr
->
ödex
 = 
èbÀÀngth
;

69 
ôr
->
e
 = 
NULL
;

73 
ôr
->
ödex
 = 
j
;

74 
ôr
->
e
 = 
√xt
;

76 
	}
}

87 
	$hashèbÀ_ôî©‹_ªmove
(
hashèbÀ_ôr
 *
ôr
)

89 
íåy
 *
ªmembî_e
, *
ªmembî_∑ª¡
;

90 
ªt
;

93 i‡(
NULL
 =(
ôr
->
∑ª¡
))

96 
ôr
->
h
->
èbÀ
[ôr->
ödex
] = iå->
e
->
√xt
;

99 
ôr
->
∑ª¡
->
√xt
 = iå->
e
->next;

102 
ªmembî_e
 = 
ôr
->
e
;

103 
ôr
->
h
->
íåycou¡
--;

104 
	`‰ìkey
(
ªmembî_e
->
k
);

107 
ªmembî_∑ª¡
 = 
ôr
->
∑ª¡
;

108 
ªt
 = 
	`hashèbÀ_ôî©‹_adv™˚
(
ôr
);

109 i‡(
ôr
->
∑ª¡
 =
ªmembî_e
Ë{ iå->∑ª¡ = 
ªmembî_∑ª¡
; }

110 
	`‰ì
(
ªmembî_e
);

111  
ªt
;

112 
	}
}

116 
	$hashèbÀ_ôî©‹_£¨ch
(
hashèbÀ_ôr
 *
ôr
,

117 
hashèbÀ
 *
h
, *
k
)

119 
íåy
 *
e
, *
∑ª¡
;

120 
hashvÆue
, 
ödex
;

122 
hashvÆue
 = 
	`hash
(
h
,
k
);

123 
ödex
 = 
	`ödexF‹
(
h
->
èbÀÀngth
,
hashvÆue
);

125 
e
 = 
h
->
èbÀ
[
ödex
];

126 
∑ª¡
 = 
NULL
;

127 
NULL
 !
e
)

130 i‡((
hashvÆue
 =
e
->
h
Ë&& (h->
	`eq‚
(
k
,É->k)))

132 
ôr
->
ödex
 = index;

133 
ôr
->
e
 =É;

134 
ôr
->
∑ª¡
 =Öarent;

135 
ôr
->
h
 = h;

138 
∑ª¡
 = 
e
;

139 
e
 =É->
√xt
;

142 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_itr.h

3 #i‚de‡
__HASHTABLE_ITR_CWC22__


4 
	#__HASHTABLE_ITR_CWC22__


	)

5 
	~"hashèbÀ.h
"

6 
	~"hashèbÀ_¥iv©e.h
"

8 #ifde‡
__˝lu•lus


15 
	shashèbÀ_ôr


17 
hashèbÀ
 *
h
;

18 
íåy
 *
e
;

19 
íåy
 *
∑ª¡
;

20 
ödex
;

28 
hashèbÀ_ôr
 *

29 
hashèbÀ_ôî©‹
(
hashèbÀ
 *
h
);

35 
ölöe
 *

36 
hashèbÀ_ôî©‹_key
(
hashèbÀ_ôr
 *
i
)

38  
i
->
e
->
k
;

44 
ölöe
 *

45 
hashèbÀ_ôî©‹_vÆue
(
hashèbÀ_ôr
 *
i
)

47  
i
->
e
->
v
;

55 
hashèbÀ_ôî©‹_adv™˚
(
hashèbÀ_ôr
 *
ôr
);

64 
hashèbÀ_ôî©‹_ªmove
(
hashèbÀ_ôr
 *
ôr
);

72 
hashèbÀ_ôî©‹_£¨ch
(
hashèbÀ_ôr
 *
ôr
,

73 
hashèbÀ
 *
h
, *
k
);

75 
	#DEFINE_HASHTABLE_ITERATOR_SEARCH
(
‚«me
, 
keyty≥
) \

76 
	`‚«me
 (
hashèbÀ_ôr
 *
i
, 
hashèbÀ
 *
h
, 
keyty≥
 *
k
) \

78  (
	`hashèbÀ_ôî©‹_£¨ch
(
i
,
h
,
k
)); \

79 }

	)

82 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_private.h

3 #i‚de‡
__HASHTABLE_PRIVATE_CWC22_H__


4 
	#__HASHTABLE_PRIVATE_CWC22_H__


	)

6 
	~"hashèbÀ.h
"

9 
	síåy


11 *
	mk
, *
	mv
;

12 
	mh
;

13 
íåy
 *
	m√xt
;

16 
	shashèbÀ
 {

17 
	mèbÀÀngth
;

18 
íåy
 **
	mèbÀ
;

19 
	míåycou¡
;

20 
	mlﬂdlimô
;

21 
	m¥imeödex
;

22 (*
	mhash‚
Ë(*
	mk
);

23 (*
	meq‚
Ë(*
	mk1
, *
	mk2
);

28 
hash
(
hashèbÀ
 *
h
, *
k
);

32 
ölöe
 

33 
	$ödexF‹
(
èbÀÀngth
, 
hashvÆue
) {

34  (
hashvÆue
 % 
èbÀÀngth
);

35 
	}
};

46 
	#‰ìkey
(
X
Ë
	`‰ì
(X)

	)

	@/home/pig/zookeeper-3.4.5/src/c/src/load_gen.c

19 
	~<zookì≥r.h
>

20 
	~"zookì≥r_log.h
"

21 
	~<î∫o.h
>

22 #i‚de‡
WIN32


23 #ifde‡
THREADED


24 
	~<±hªad.h
>

27 
	~"wö32p‹t.h
"

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

32 
zh™dÀ_t
 *
	gzh
;

34 
	gshutdownThisThög
=0;

38 
±hªad_c⁄d_t
 
	gc⁄d
=
PTHREAD_COND_INITIALIZER
;

39 
±hªad_muãx_t
 
	glock
=
PTHREAD_MUTEX_INITIALIZER
;

41 
±hªad_c⁄d_t
 
	gcou¡îC⁄d
=
PTHREAD_COND_INITIALIZER
;

42 
±hªad_muãx_t
 
	gcou¡îLock
=
PTHREAD_MUTEX_INITIALIZER
;

43 
	gcou¡î
;

47 
	$ísuªC⁄√˘ed
(){

48 
	`±hªad_muãx_lock
(&
lock
);

49 
	`zoo_°©e
(
zh
)!=
ZOO_CONNECTED_STATE
) {

50 
	`±hªad_c⁄d_waô
(&
c⁄d
,&
lock
);

52 
	`±hªad_muãx_u∆ock
(&
lock
);

53 
	}
}

55 
	$öcCou¡î
(
dñè
){

56 
	`±hªad_muãx_lock
(&
cou¡îLock
);

57 
cou¡î
+=
dñè
;

58 
	`±hªad_c⁄d_brﬂdˇ°
(&
cou¡îC⁄d
);

59 
	`±hªad_muãx_u∆ock
(&
cou¡îLock
);

61 
	}
}

62 
	$£tCou¡î
(
˙t
){

63 
	`±hªad_muãx_lock
(&
cou¡îLock
);

64 
cou¡î
=
˙t
;

65 
	`±hªad_c⁄d_brﬂdˇ°
(&
cou¡îC⁄d
);

66 
	`±hªad_muãx_u∆ock
(&
cou¡îLock
);

68 
	}
}

69 
	$waôCou¡î
(){

70 
	`±hªad_muãx_lock
(&
cou¡îLock
);

71 
cou¡î
>0) {

72 
	`±hªad_c⁄d_waô
(&
cou¡îC⁄d
,&
cou¡îLock
);

74 
	`±hªad_muãx_u∆ock
(&
cou¡îLock
);

75 
	}
}

77 
	$li°íî
(
zh™dÀ_t
 *
zzh
, 
ty≥
, 
°©e
, c⁄° *
∑th
,* 
˘x
) {

78 if(
ty≥
 =
ZOO_SESSION_EVENT
){

79 if(
°©e
 =
ZOO_CONNECTED_STATE
){

80 
	`±hªad_muãx_lock
(&
lock
);

81 
	`±hªad_c⁄d_brﬂdˇ°
(&
c⁄d
);

82 
	`±hªad_muãx_u∆ock
(&
lock
);

84 
	`£tCou¡î
(0);

86 
	}
}

88 
	$¸óã_com∂ëi⁄
(
rc
, c⁄° *
«me
, c⁄° *
d©a
) {

89 
	`öcCou¡î
(-1);

90 if(
rc
!=
ZOK
){

91 
	`LOG_ERROR
(("FaûedÅÿ¸óãáÇodêrc=%d",
rc
));

93 
	}
}

95 
	$doCª©eNodes
(c⁄° * 
roŸ
, 
cou¡
){

96 
nodeName
[1024];

97 
i
;

98 
i
=0; i<
cou¡
;i++){

99 
rc
 = 0;

100 
	`¢¥ötf
(
nodeName
, “odeName),"%s/%d",
roŸ
,
i
);

101 
	`öcCou¡î
(1);

102 
rc
=
	`zoo_a¸óã
(
zh
, 
nodeName
, "fú°", 5, &
ZOO_OPEN_ACL_UNSAFE
, 0,

103 
¸óã_com∂ëi⁄
, 0);

104 if(
i
%1000==0){

105 
	`LOG_INFO
(("Cª©ed %s",
nodeName
));

107 if(
rc
!=
ZOK
) Ñc;

109 
	}
}

111 
	$¸óãRoŸ
(c⁄° * 
roŸ
){

112 
ªÆ∑th
[1024];

113  
	`zoo_¸óã
(
zh
,
roŸ
,"roŸ",4,&
ZOO_OPEN_ACL_UNSAFE
,0,
ªÆ∑th
,(realpath)-1);

114 
	}
}

116 
	$wrôe_com∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

117 
	`öcCou¡î
(-1);

118 if(
rc
!=
ZOK
){

119 
	`LOG_ERROR
(("FaûedÅÿwrôê®nodêrc=%d",
rc
));

121 
	}
}

123 
	$doWrôes
(c⁄° * 
roŸ
, 
cou¡
){

124 
nodeName
[1024];

125 
i
;

126 
cou¡î
=0;

127 
i
=0; i<
cou¡
;i++){

128 
rc
 = 0;

129 
	`¢¥ötf
(
nodeName
, “odeName),"%s/%d",
roŸ
,
i
);

130 
	`öcCou¡î
(1);

131 
rc
=
	`zoo_a£t
(
zh
, 
nodeName
, "£c⁄d", 6,-1,
wrôe_com∂ëi⁄
, 0);

132 if(
rc
!=
ZOK
) Ñc;

134 
	}
}

136 
	$ªad_com∂ëi⁄
(
rc
, c⁄° *
vÆue
, 
vÆue_Àn
,

137 c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
) {

138 
	`öcCou¡î
(-1);

139 if(
rc
!=
ZOK
){

140 
	`LOG_ERROR
(("FaûedÅÿªadáÇodêrc=%d",
rc
));

143 if(
	`memcmp
(
vÆue
,"second",6)!=0){

144 
buf
[
vÆue_Àn
+1];

145 
	`mem˝y
(
buf
,
vÆue
,
vÆue_Àn
);buf[value_len]=0;

146 
	`LOG_ERROR
(("InvÆidÑód,Éx≥˘ed [£c⁄d],Ñe˚ived [%s]\n",
buf
));

147 
	`exô
(1);

149 
	}
}

151 
	$doRóds
(c⁄° * 
roŸ
, 
cou¡
){

152 
nodeName
[1024];

153 
i
;

154 
cou¡î
=0;

155 
i
=0; i<
cou¡
;i++){

156 
rc
 = 0;

157 
	`¢¥ötf
(
nodeName
, “odeName),"%s/%d",
roŸ
,
i
);

158 
	`öcCou¡î
(1);

159 
rc
=
	`zoo_agë
(
zh
, 
nodeName
,0,
ªad_com∂ëi⁄
, 0);

160 if(
rc
!=
ZOK
) Ñc;

162 
	}
}

164 
	$dñëe_com∂ëi⁄
(
rc
, c⁄° *
d©a
) {

165 
	`öcCou¡î
(-1);

166 
	}
}

168 
	$doDñëes
(c⁄° * 
roŸ
, 
cou¡
){

169 
nodeName
[1024];

170 
i
;

171 
cou¡î
=0;

172 
i
=0; i<
cou¡
;i++){

173 
rc
 = 0;

174 
	`¢¥ötf
(
nodeName
, “odeName),"%s/%d",
roŸ
,
i
);

175 
	`öcCou¡î
(1);

176 
rc
=
	`zoo_adñëe
(
zh
, 
nodeName
,-1,
dñëe_com∂ëi⁄
, 0);

177 if(
rc
!=
ZOK
) Ñc;

179 
	}
}

181 
	$‰ì_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
) {

182 i‡(
v
->
d©a
) {

183 
öt32_t
 
i
;

184 
i
=0;i<
v
->
cou¡
; i++) {

185 
	`‰ì
(
v
->
d©a
[
i
]);

187 
	`‰ì
(
v
->
d©a
);

188 
v
->
d©a
 = 0;

191 
	}
}

193 
	gdñëedCou¡î
;

195 
	$ªcursiveDñëe
(c⁄° * 
roŸ
){

196 
Såög_ve˘‹
 
chûdªn
;

197 
i
;

198 
rc
=
	`zoo_gë_chûdªn
(
zh
,
roŸ
,0,&
chûdªn
);

199 if(
rc
!=
ZNONODE
){

200 if(
rc
!=
ZOK
){

201 
	`LOG_ERROR
(("FaûedÅÿgë chûdª¿o‡%s,Ñc=%d",
roŸ
,
rc
));

202  
rc
;

204 
i
=0;i<
chûdªn
.
cou¡
; i++){

205 
rc
 = 0;

206 
nodeName
[2048];

207 
	`¢¥ötf
(
nodeName
, “odeName),"%s/%s",
roŸ
,
chûdªn
.
d©a
[
i
]);

208 
rc
=
	`ªcursiveDñëe
(
nodeName
);

209 if(
rc
!=
ZOK
){

210 
	`‰ì_Såög_ve˘‹
(&
chûdªn
);

211  
rc
;

214 
	`‰ì_Såög_ve˘‹
(&
chûdªn
);

216 if(
dñëedCou¡î
%1000==0)

217 
	`LOG_INFO
(("Dñëög %s",
roŸ
));

218 
rc
=
	`zoo_dñëe
(
zh
,
roŸ
,-1);

219 if(
rc
!=
ZOK
){

220 
	`LOG_ERROR
(("FaûedÅÿdñëêznodê%s,Ñc=%d",
roŸ
,
rc
));

222 
dñëedCou¡î
++;

223  
rc
;

224 
	}
}

226 
	$ußge
(*
¨gv
[]){

227 
	`Ârötf
(
°dîr
, "USAGE:\t%†zookì≥r_ho°_li°Ö©h #chûdªn\n‹", 
¨gv
[0]);

228 
	`Ârötf
(
°dîr
, "\t%†zookì≥r_ho°_li°Ö©h cÀ™\n", 
¨gv
[0]);

229 
	`exô
(0);

230 
	}
}

232 
	$maö
(
¨gc
, **
¨gv
) {

233 
nodeCou¡
;

234 
˛ónög
=0;

235 i‡(
¨gc
 < 4) {

236 
	`ußge
(
¨gv
);

238 if(
	`°rcmp
("˛ón",
¨gv
[3])==0){

239 
˛ónög
=1;

241 
	`zoo_£t_debug_Àvñ
(
ZOO_LOG_LEVEL_INFO
);

242 
	`zoo_dëîmöi°ic_c⁄n_‹dî
(1);

244 
zh
 = 
	`zookì≥r_öô
(
¨gv
[1], 
li°íî
, 10000, 0, 0, 0);

245 i‡(!
zh
)

246  
î∫o
;

248 
	`LOG_INFO
(("Checking server connection..."));

249 
	`ísuªC⁄√˘ed
();

250 if(
˛ónög
==1){

251 
rc
 = 0;

252 
dñëedCou¡î
=0;

253 
rc
=
	`ªcursiveDñëe
(
¨gv
[2]);

254 if(
rc
==
ZOK
){

255 
	`LOG_INFO
(("Succesfully deletedá subtree startingát %s (%dÇodes)",

256 
¨gv
[2],
dñëedCou¡î
));

257 
	`exô
(0);

259 
	`exô
(1);

261 
nodeCou¡
=
	`©oi
(
¨gv
[3]);

262 
	`¸óãRoŸ
(
¨gv
[2]);

264 
	`ísuªC⁄√˘ed
();

265 
	`LOG_INFO
(("Cª©ög chûdª¿f‹Ö©h %s",
¨gv
[2]));

266 
	`doCª©eNodes
(
¨gv
[2],
nodeCou¡
);

267 
	`waôCou¡î
();

269 
	`LOG_INFO
(("SèπögÅhêwrôêcy˛êf‹Ö©h %s",
¨gv
[2]));

270 
	`doWrôes
(
¨gv
[2],
nodeCou¡
);

271 
	`waôCou¡î
();

272 
	`LOG_INFO
(("SèπögÅhêªad cy˛êf‹Ö©h %s",
¨gv
[2]));

273 
	`doRóds
(
¨gv
[2],
nodeCou¡
);

274 
	`waôCou¡î
();

276 
	`LOG_INFO
(("SèπögÅhêdñëêcy˛êf‹Ö©h %s",
¨gv
[2]));

277 
	`doDñëes
(
¨gv
[2],
nodeCou¡
);

278 
	`waôCou¡î
();

280 
	`zookì≥r_˛o£
(
zh
);

282 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/mt_adaptor.c

18 #i‚de‡
THREADED


19 
	#THREADED


	)

22 #i‚de‡
DLL_EXPORT


23 
	#USE_STATIC_LIB


	)

26 #i‚de‡
_GNU_SOURCE


27 
	#_GNU_SOURCE


	)

30 
	~"zk_ad≠t‹.h
"

31 
	~"zookì≥r_log.h
"

33 
	~<°dlib.h
>

34 
	~<°dio.h
>

35 
	~<time.h
>

36 
	~<f˙é.h
>

37 
	~<as£π.h
>

38 
	~<î∫o.h
>

40 #i‚de‡
WIN32


41 
	~<sig«l.h
>

42 
	~<pﬁl.h
>

43 
	~<uni°d.h
>

44 
	~<sys/time.h
>

47 
	$zoo_lock_auth
(
zh™dÀ_t
 *
zh
)

49 
	`±hªad_muãx_lock
(&
zh
->
auth_h
.
lock
);

50 
	}
}

51 
	$zoo_u∆ock_auth
(
zh™dÀ_t
 *
zh
)

53 
	`±hªad_muãx_u∆ock
(&
zh
->
auth_h
.
lock
);

54 
	}
}

55 
	$lock_buf„r_li°
(
buf„r_hód_t
 *
l
)

57 
	`±hªad_muãx_lock
(&
l
->
lock
);

58 
	}
}

59 
	$u∆ock_buf„r_li°
(
buf„r_hód_t
 *
l
)

61 
	`±hªad_muãx_u∆ock
(&
l
->
lock
);

62 
	}
}

63 
	$lock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
)

65 
	`±hªad_muãx_lock
(&
l
->
lock
);

66 
	}
}

67 
	$u∆ock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
)

69 
	`±hªad_c⁄d_brﬂdˇ°
(&
l
->
c⁄d
);

70 
	`±hªad_muãx_u∆ock
(&
l
->
lock
);

71 
	}
}

72 
sync_com∂ëi⁄
 *
	$Æloc_sync_com∂ëi⁄
()

74 
sync_com∂ëi⁄
 *
sc
 = (sync_com∂ëi⁄*)
	`ˇŒoc
(1, (sync_completion));

75 i‡(
sc
) {

76 
	`±hªad_c⁄d_öô
(&
sc
->
c⁄d
, 0);

77 
	`±hªad_muãx_öô
(&
sc
->
lock
, 0);

79  
sc
;

80 
	}
}

81 
	$waô_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

83 
	`±hªad_muãx_lock
(&
sc
->
lock
);

84 !
sc
->
com∂ëe
) {

85 
	`±hªad_c⁄d_waô
(&
sc
->
c⁄d
, &sc->
lock
);

87 
	`±hªad_muãx_u∆ock
(&
sc
->
lock
);

89 
	}
}

91 
	$‰ì_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

93 i‡(
sc
) {

94 
	`±hªad_muãx_de°roy
(&
sc
->
lock
);

95 
	`±hªad_c⁄d_de°roy
(&
sc
->
c⁄d
);

96 
	`‰ì
(
sc
);

98 
	}
}

100 
	$nŸify_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

102 
	`±hªad_muãx_lock
(&
sc
->
lock
);

103 
sc
->
com∂ëe
 = 1;

104 
	`±hªad_c⁄d_brﬂdˇ°
(&
sc
->
c⁄d
);

105 
	`±hªad_muãx_u∆ock
(&
sc
->
lock
);

106 
	}
}

108 
	$¥o˚ss_async
(
out°™dög_sync
)

111 
	}
}

113 #ifde‡
WIN32


114 
__°dˇŒ
 
do_io
( * );

115 
__°dˇŒ
 
do_com∂ëi⁄
( * );

117 
	$h™dÀ_îr‹
(
SOCKET
 
sock
, * 
mesßge
)

119 
	`LOG_ERROR
(("%s. %d",
mesßge
, 
	`WSAGëLa°Eº‹
()));

120 
	`˛o£sockë
 (
sock
);

122 
	}
}

125 
	$¸óã_sockë_∑ú
(
SOCKET
 
fds
[2])

127 
sockaddr_ö
 
öaddr
;

128 
sockaddr
 
addr
;

129 
yes
=1;

130 
Àn
=0;

132 
SOCKET
 
l°
=
	`sockë
(
AF_INET
, 
SOCK_STREAM
,
IPPROTO_TCP
);

133 i‡(
l°
 =
INVALID_SOCKET
 ){

134 
	`LOG_ERROR
(("Eº‹ cª©ög sockë. %d",
	`WSAGëLa°Eº‹
()));

137 
	`mem£t
(&
öaddr
, 0, (inaddr));

138 
	`mem£t
(&
addr
, 0, (addr));

139 
öaddr
.
sö_Ámûy
 = 
AF_INET
;

140 
öaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_LOOPBACK
);

141 
öaddr
.
sö_p‹t
 = 0;

143 i‡–
	`£tsock›t
(
l°
,
SOL_SOCKET
,
SO_REUSEADDR
,(*)&
yes
,(yes)Ë=
SOCKET_ERROR
 ) {

144  
	`h™dÀ_îr‹
(
l°
,"ErrorÅryingÅo set socket option.");

146 i‡(
	`böd
(
l°
,(
sockaddr
 *)&
öaddr
,(öaddr)Ë=
SOCKET_ERROR
){

147  
	`h™dÀ_îr‹
(
l°
,"ErrorÅryingÅo bind socket.");

149 i‡(
	`li°í
(
l°
,1Ë=
SOCKET_ERROR
){

150  
	`h™dÀ_îr‹
(
l°
,"ErrorÅryingÅoÜisten on socket.");

152 
Àn
=(
öaddr
);

153 
	`gësock«me
(
l°
, &
addr
,&
Àn
);

154 
fds
[0]=
	`sockë
(
AF_INET
, 
SOCK_STREAM
,0);

155 i‡(
	`c⁄√˘
(
fds
[0],&
addr
,
Àn
Ë=
SOCKET_ERROR
){

156  
	`h™dÀ_îr‹
(
l°
, "Error while connectingÅo socket.");

158 i‡((
fds
[1]=
	`ac˚±
(
l°
,0,0)Ë=
INVALID_SOCKET
){

159 
	`˛o£sockë
(
fds
[0]);

160  
	`h™dÀ_îr‹
(
l°
, "Error whileáccepting socket connection.");

162 
	`˛o£sockë
(
l°
);

164 
	}
}

166 *
do_io
(*);

167 *
do_com∂ëi⁄
(*);

171 
wakeup_io_thªad
(
zh™dÀ_t
 *
zh
);

173 #ifde‡
WIN32


174 
	$£t_n⁄block
(
SOCKET
 
fd
){

175 
ULONG
 
n⁄blockög_Êag
 = 1;

176 i‡(
	`io˘lsockë
(
fd
, 
FIONBIO
, &
n⁄blockög_Êag
) == 0)

180 
	}
}

182 
	$£t_n⁄block
(
fd
){

183 
l
 = 
	`f˙é
(
fd
, 
F_GETFL
);

184 if(
l
 & 
O_NONBLOCK
)  0;

185  
	`f˙é
(
fd
, 
F_SETFL
, 
l
 | 
O_NONBLOCK
);

186 
	}
}

189 
	$waô_f‹_Ÿhîs
(
zh™dÀ_t
* 
zh
)

191 
ad≠t‹_thªads
* 
ad≠t‹
=
zh
->
ad≠t‹_¥iv
;

192 
	`±hªad_muãx_lock
(&
ad≠t‹
->
lock
);

193 
ad≠t‹
->
thªadsToWaô
>0)

194 
	`±hªad_c⁄d_waô
(&
ad≠t‹
->
c⁄d
,&ad≠t‹->
lock
);

195 
	`±hªad_muãx_u∆ock
(&
ad≠t‹
->
lock
);

196 
	}
}

198 
	$nŸify_thªad_ªady
(
zh™dÀ_t
* 
zh
)

200 
ad≠t‹_thªads
* 
ad≠t‹
=
zh
->
ad≠t‹_¥iv
;

201 
	`±hªad_muãx_lock
(&
ad≠t‹
->
lock
);

202 
ad≠t‹
->
thªadsToWaô
--;

203 
	`±hªad_c⁄d_brﬂdˇ°
(&
ad≠t‹
->
c⁄d
);

204 
ad≠t‹
->
thªadsToWaô
>0)

205 
	`±hªad_c⁄d_waô
(&
ad≠t‹
->
c⁄d
,&ad≠t‹->
lock
);

206 
	`±hªad_muãx_u∆ock
(&
ad≠t‹
->
lock
);

207 
	}
}

210 
	$°¨t_thªads
(
zh™dÀ_t
* 
zh
)

212 
rc
 = 0;

213 
ad≠t‹_thªads
* 
ad≠t‹
=
zh
->
ad≠t‹_¥iv
;

214 
	`±hªad_c⁄d_öô
(&
ad≠t‹
->
c⁄d
,0);

215 
	`±hªad_muãx_öô
(&
ad≠t‹
->
lock
,0);

216 
ad≠t‹
->
thªadsToWaô
=2;

220 
	`≠i_¥ﬁog
(
zh
);

221 
	`LOG_DEBUG
(("startingÅhreads..."));

222 
rc
=
	`±hªad_¸óã
(&
ad≠t‹
->
io
, 0, 
do_io
, 
zh
);

223 
	`as£π
("±hªad_¸óã(ËÁûed f‹ÅhêIOÅhªad"&&!
rc
);

224 
rc
=
	`±hªad_¸óã
(&
ad≠t‹
->
com∂ëi⁄
, 0, 
do_com∂ëi⁄
, 
zh
);

225 
	`as£π
("±hªad_¸óã(ËÁûed f‹Åhêcom∂ëi⁄Åhªad"&&!
rc
);

226 
	`waô_f‹_Ÿhîs
(
zh
);

227 
	`≠i_ïûog
(
zh
, 0);

228 
	}
}

230 
	$ad≠t‹_öô
(
zh™dÀ_t
 *
zh
)

232 
±hªad_muãx©å_t
 
ªcursive_mx_©å
;

233 
ad≠t‹_thªads
 *ad≠t‹_thªad†
	`ˇŒoc
(1, (*adaptor_threads));

234 i‡(!
ad≠t‹_thªads
) {

235 
	`LOG_ERROR
(("Out of memory"));

240 #ifde‡
WIN32


241 i‡(
	`¸óã_sockë_∑ú
(
ad≠t‹_thªads
->
£lf_pùe
) == -1){

242 
	`LOG_ERROR
(("Can't makeá socket."));

244 if(
	`pùe
(
ad≠t‹_thªads
->
£lf_pùe
)==-1) {

245 
	`LOG_ERROR
(("C™'àmakê®pùê%d",
î∫o
));

247 
	`‰ì
(
ad≠t‹_thªads
);

250 
	`£t_n⁄block
(
ad≠t‹_thªads
->
£lf_pùe
[1]);

251 
	`£t_n⁄block
(
ad≠t‹_thªads
->
£lf_pùe
[0]);

253 
	`±hªad_muãx_öô
(&
zh
->
auth_h
.
lock
,0);

255 
zh
->
ad≠t‹_¥iv
 = 
ad≠t‹_thªads
;

256 
	`±hªad_muãx_öô
(&
zh
->
to_¥o˚ss
.
lock
,0);

257 
	`±hªad_muãx_öô
(&
ad≠t‹_thªads
->
zh_lock
,0);

259 
	`±hªad_muãx©å_öô
(&
ªcursive_mx_©å
);

260 
	`±hªad_muãx©å_£ây≥
(&
ªcursive_mx_©å
, 
PTHREAD_MUTEX_RECURSIVE
);

261 
	`±hªad_muãx_öô
(&
zh
->
to_£nd
.
lock
,&
ªcursive_mx_©å
);

262 
	`±hªad_muãx©å_de°roy
(&
ªcursive_mx_©å
);

264 
	`±hªad_muãx_öô
(&
zh
->
£¡_ªque°s
.
lock
,0);

265 
	`±hªad_c⁄d_öô
(&
zh
->
£¡_ªque°s
.
c⁄d
,0);

266 
	`±hªad_muãx_öô
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
,0);

267 
	`±hªad_c⁄d_öô
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
c⁄d
,0);

268 
	`°¨t_thªads
(
zh
);

270 
	}
}

272 
	$ad≠t‹_föish
(
zh™dÀ_t
 *
zh
)

274 
ad≠t‹_thªads
 *adaptor_threads;

276 
	`≠i_¥ﬁog
(
zh
);

277 
ad≠t‹_thªads
 = 
zh
->
ad≠t‹_¥iv
;

278 if(
ad≠t‹_thªads
==0) {

279 
	`≠i_ïûog
(
zh
,0);

283 if(!
	`±hªad_equÆ
(
ad≠t‹_thªads
->
io
,
	`±hªad_£lf
())){

284 
	`wakeup_io_thªad
(
zh
);

285 
	`±hªad_joö
(
ad≠t‹_thªads
->
io
, 0);

287 
	`±hªad_dëach
(
ad≠t‹_thªads
->
io
);

289 if(!
	`±hªad_equÆ
(
ad≠t‹_thªads
->
com∂ëi⁄
,
	`±hªad_£lf
())){

290 
	`±hªad_muãx_lock
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
);

291 
	`±hªad_c⁄d_brﬂdˇ°
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
c⁄d
);

292 
	`±hªad_muãx_u∆ock
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
);

293 
	`±hªad_joö
(
ad≠t‹_thªads
->
com∂ëi⁄
, 0);

295 
	`±hªad_dëach
(
ad≠t‹_thªads
->
com∂ëi⁄
);

297 
	`≠i_ïûog
(
zh
,0);

298 
	}
}

300 
	$ad≠t‹_de°roy
(
zh™dÀ_t
 *
zh
)

302 
ad≠t‹_thªads
 *
ad≠t‹
 = 
zh
->
ad≠t‹_¥iv
;

303 if(
ad≠t‹
==0) ;

305 
	`±hªad_c⁄d_de°roy
(&
ad≠t‹
->
c⁄d
);

306 
	`±hªad_muãx_de°roy
(&
ad≠t‹
->
lock
);

307 
	`±hªad_muãx_de°roy
(&
zh
->
to_¥o˚ss
.
lock
);

308 
	`±hªad_muãx_de°roy
(&
zh
->
to_£nd
.
lock
);

309 
	`±hªad_muãx_de°roy
(&
zh
->
£¡_ªque°s
.
lock
);

310 
	`±hªad_c⁄d_de°roy
(&
zh
->
£¡_ªque°s
.
c⁄d
);

311 
	`±hªad_muãx_de°roy
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
);

312 
	`±hªad_c⁄d_de°roy
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
c⁄d
);

313 
	`±hªad_muãx_de°roy
(&
ad≠t‹
->
zh_lock
);

315 
	`±hªad_muãx_de°roy
(&
zh
->
auth_h
.
lock
);

317 
	`˛o£
(
ad≠t‹
->
£lf_pùe
[0]);

318 
	`˛o£
(
ad≠t‹
->
£lf_pùe
[1]);

319 
	`‰ì
(
ad≠t‹
);

320 
zh
->
ad≠t‹_¥iv
=0;

321 
	}
}

323 
	$wakeup_io_thªad
(
zh™dÀ_t
 *
zh
)

325 
ad≠t‹_thªads
 *ad≠t‹_thªad†
zh
->
ad≠t‹_¥iv
;

326 
c
=0;

327 #i‚de‡
WIN32


328  
	`wrôe
(
ad≠t‹_thªads
->
£lf_pùe
[1],&
c
,1)==1? 
ZOK
: 
ZSYSTEMERROR
;

330  
	`£nd
(
ad≠t‹_thªads
->
£lf_pùe
[1], &
c
, 1, 0)==1? 
ZOK
: 
ZSYSTEMERROR
;

332 
	}
}

334 
	$ad≠t‹_£nd_queue
(
zh™dÀ_t
 *
zh
, 
timeout
)

336 if(!
zh
->
˛o£_ªque°ed
)

337  
	`wakeup_io_thªad
(
zh
);

340  
	`Êush_£nd_queue
(
zh
, 
timeout
);

341 
	}
}

345 #ifde‡
WIN32


346 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, 
SOCKET
 *
fd
, *
öãª°
,

347 
timevÆ
 *
tv
);

349 
zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, *
fd
, *
öãª°
,

350 
timevÆ
 *
tv
);

352 
zookì≥r_¥o˚ss
(
zh™dÀ_t
 *
zh
, 
evíts
);

354 #ifde‡
WIN32


355 
__°dˇŒ
 
	$do_io
–* 
v
)

357 *
	$do_io
(*
v
)

360 
zh™dÀ_t
 *
zh
 = (zh™dÀ_t*)
v
;

361 #i‚de‡
WIN32


362 
pﬁlfd
 
fds
[2];

363 
ad≠t‹_thªads
 *ad≠t‹_thªad†
zh
->
ad≠t‹_¥iv
;

365 
	`≠i_¥ﬁog
(
zh
);

366 
	`nŸify_thªad_ªady
(
zh
);

367 
	`LOG_DEBUG
(("started IOÅhread"));

368 
fds
[0].
fd
=
ad≠t‹_thªads
->
£lf_pùe
[0];

369 
fds
[0].
evíts
=
POLLIN
;

370 !
zh
->
˛o£_ªque°ed
) {

371 
timevÆ
 
tv
;

372 
fd
;

373 
öãª°
;

374 
timeout
;

375 
maxfd
=1;

376 
rc
;

378 
	`zookì≥r_öãª°
(
zh
, &
fd
, &
öãª°
, &
tv
);

379 i‡(
fd
 != -1) {

380 
fds
[1].
fd
=fd;

381 
fds
[1].
evíts
=(
öãª°
&
ZOOKEEPER_READ
)?
POLLIN
:0;

382 
fds
[1].
evíts
|=(
öãª°
&
ZOOKEEPER_WRITE
)?
POLLOUT
:0;

383 
maxfd
=2;

385 
timeout
=
tv
.
tv_£c
 * 1000 + (tv.
tv_u£c
/1000);

387 
	`pﬁl
(
fds
,
maxfd
,
timeout
);

388 i‡(
fd
 != -1) {

389 
öãª°
=(
fds
[1].
ªvíts
&
POLLIN
)?
ZOOKEEPER_READ
:0;

390 
öãª°
|=((
fds
[1].
ªvíts
&
POLLOUT
)||(fds[1].ªvíts&
POLLHUP
))?
ZOOKEEPER_WRITE
:0;

392 if(
fds
[0].
ªvíts
&
POLLIN
){

394 
b
[128];

395 
	`ªad
(
ad≠t‹_thªads
->
£lf_pùe
[0],
b
,(b))==(b)){}

398 
fd_£t
 
rfds
, 
wfds
, 
efds
;

399 
ad≠t‹_thªads
 *ad≠t‹_thªad†
zh
->
ad≠t‹_¥iv
;

400 
	`≠i_¥ﬁog
(
zh
);

401 
	`nŸify_thªad_ªady
(
zh
);

402 
	`LOG_DEBUG
(("started IOÅhread"));

403 
	`FD_ZERO
(&
rfds
); FD_ZERO(&
wfds
); FD_ZERO(&
efds
);

404 !
zh
->
˛o£_ªque°ed
) {

405 
timevÆ
 
tv
;

406 
SOCKET
 
fd
;

407 
SOCKET
 
maxfd
=
ad≠t‹_thªads
->
£lf_pùe
[0];

408 
öãª°
;

409 
rc
;

411 
	`zookì≥r_öãª°
(
zh
, &
fd
, &
öãª°
, &
tv
);

412 i‡(
fd
 != -1) {

413 i‡(
öãª°
&
ZOOKEEPER_READ
) {

414 
	`FD_SET
(
fd
, &
rfds
);

416 
	`FD_CLR
(
fd
, &
rfds
);

418 i‡(
öãª°
&
ZOOKEEPER_WRITE
) {

419 
	`FD_SET
(
fd
, &
wfds
);

421 
	`FD_CLR
(
fd
, &
wfds
);

424 
	`FD_SET
–
ad≠t‹_thªads
->
£lf_pùe
[0] ,&
rfds
 );

425 
rc
 = 
	`£À˘
(()
maxfd
, &
rfds
, &
wfds
, &
efds
, &
tv
);

426 i‡(
fd
 != -1)

428 
öãª°
 = (
	`FD_ISSET
(
fd
, &
rfds
))? 
ZOOKEEPER_READ
:0;

429 
öãª°
|(
	`FD_ISSET
(
fd
, &
wfds
))? 
ZOOKEEPER_WRITE
:0;

432 i‡(
	`FD_ISSET
(
ad≠t‹_thªads
->
£lf_pùe
[0], &
rfds
)){

434 
b
[128];

435 
	`ªcv
(
ad≠t‹_thªads
->
£lf_pùe
[0],
b
,(b), 0)==(b)){}

439 
rc
 = 
	`zookì≥r_¥o˚ss
(
zh
, 
öãª°
);

442 if(
	`is_uƒecovîabÀ
(
zh
))

445 
	`≠i_ïûog
(
zh
, 0);

446 
	`LOG_DEBUG
(("IOÅhreadÅerminated"));

448 
	}
}

450 #ifde‡
WIN32


451 
__°dˇŒ
 
	$do_com∂ëi⁄
–* 
v
)

453 *
	$do_com∂ëi⁄
(*
v
)

456 
zh™dÀ_t
 *
zh
 = 
v
;

457 
	`≠i_¥ﬁog
(
zh
);

458 
	`nŸify_thªad_ªady
(
zh
);

459 
	`LOG_DEBUG
(("started completionÅhread"));

460 !
zh
->
˛o£_ªque°ed
) {

461 
	`±hªad_muãx_lock
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
);

462 !
zh
->
com∂ëi⁄s_to_¥o˚ss
.
hód
 && !zh->
˛o£_ªque°ed
) {

463 
	`±hªad_c⁄d_waô
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
c⁄d
, &zh->com∂ëi⁄s_to_¥o˚ss.
lock
);

465 
	`±hªad_muãx_u∆ock
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
.
lock
);

466 
	`¥o˚ss_com∂ëi⁄s
(
zh
);

468 
	`≠i_ïûog
(
zh
, 0);

469 
	`LOG_DEBUG
(("completionÅhreadÅerminated"));

471 
	}
}

473 
öt32_t
 
	$öc_ªf_cou¡î
(
zh™dÀ_t
* 
zh
,
i
)

475 
ö¸
=(
i
<0?-1:(i>0?1:0));

477 
v
=
	`„tch_™d_add
(&
zh
->
ªf_cou¡î
,
ö¸
);

479 
v
+=
ö¸
;

480  
v
;

481 
	}
}

483 
öt32_t
 
	$„tch_™d_add
(vﬁ©ûê
öt32_t
* 
›î™d
, 
ö¸
)

485 #i‚de‡
WIN32


486 
öt32_t
 
ªsu…
;

487 
asm
 
	`__vﬁ©ûe__
(

489 : "Ù"(
ªsu…
), "=m"(*(*)
›î™d
)

490 : "0"(
ö¸
)

492  
ªsu…
;

494 vﬁ©ûê
öt32_t
 
ªsu…
;

495 
_asm


497 
mov
 
óx
, 
›î™d
;

498 
mov
 
ebx
, 
ö¸
;

499 
mov
 
ecx
, 0x0;

500 
lock
 
xadd
 
dw‹d
 
±r
 [
óx
], 
ecx
;

501 
lock
 
xadd
 
dw‹d
 
±r
 [
óx
], 
ebx
;

502 
mov
 
ªsu…
, 
ecx
;

504  
ªsu…
;

506 
	}
}

509 
__©åibuã__
((
c⁄°ru˘‹
)Ë
öt32_t
 
	$gë_xid
()

511 
öt32_t
 
xid
 = -1;

512 i‡(
xid
 == -1) {

513 
xid
 = 
	`time
(0);

515  
	`„tch_™d_add
(&
xid
,1);

516 
	}
}

518 
	$íãr_¸ôiˇl
(
zh™dÀ_t
* 
zh
)

520 
ad≠t‹_thªads
 *
ad≠t‹
 = 
zh
->
ad≠t‹_¥iv
;

521 if(
ad≠t‹
)

522 
	`±hªad_muãx_lock
(&
ad≠t‹
->
zh_lock
);

523 
	}
}

525 
	$Àave_¸ôiˇl
(
zh™dÀ_t
* 
zh
)

527 
ad≠t‹_thªads
 *
ad≠t‹
 = 
zh
->
ad≠t‹_¥iv
;

528 if(
ad≠t‹
)

529 
	`±hªad_muãx_u∆ock
(&
ad≠t‹
->
zh_lock
);

530 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/recordio.c

19 
	~<ªc‹dio.h
>

20 
	~<°rög.h
>

21 
	~<°dio.h
>

22 
	~<î∫o.h
>

23 
	~<°dlib.h
>

24 #i‚de‡
WIN32


25 
	~<√töë/ö.h
>

28 
	$dóŒoˇã_Såög
(**
s
)

30 i‡(*
s
)

31 
	`‰ì
(*
s
);

32 *
s
 = 0;

33 
	}
}

35 
	$dóŒoˇã_Buf„r
(
buf„r
 *
b
)

37 i‡(
b
->
buff
)

38 
	`‰ì
(
b
->
buff
);

39 
b
->
buff
 = 0;

40 
	}
}

42 
	sbuff_°ru˘
 {

43 
öt32_t
 
	mÀn
;

44 
öt32_t
 
	moff
;

45 *
	mbuf„r
;

48 
	$ªsize_buf„r
(
buff_°ru˘
 *
s
, 
√wÀn
)

50 *
buf„r

NULL
;

51 
s
->
Àn
 < 
√wÀn
) {

52 
s
->
Àn
 *= 2;

54 
buf„r
 = (*)
	`ªÆloc
(
s
->buf„r, s->
Àn
);

55 i‡(!
buf„r
) {

56 
s
->
buf„r
 = 0;

57  -
ENOMEM
;

59 
s
->
buf„r
 = buffer;

61 
	}
}

63 
	$ﬂ_°¨t_ªc‹d
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
)

66 
	}
}

67 
	$ﬂ_íd_ªc‹d
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
)

70 
	}
}

71 
	$ﬂ_£rülize_öt
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
, c⁄° 
öt32_t
 *
d
)

73 
buff_°ru˘
 *
¥iv
 = 
ﬂ
->priv;

74 
öt32_t
 
i
 = 
	`ht⁄l
(*
d
);

75 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< (
i
)) {

76 
rc
 = 
	`ªsize_buf„r
(
¥iv
,Öriv->
Àn
 + (
i
));

77 i‡(
rc
 < 0) Ñc;

79 
	`mem˝y
(
¥iv
->
buf„r
+¥iv->
off
, &
i
, (i));

80 
¥iv
->
off
+=(
i
);

82 
	}
}

83 
öt64_t
 
	$ht⁄Œ
(
öt64_t
 
v
)

85 
i
 = 0;

86 *
s
 = (*)&
v
;

87 i‡(
	`ht⁄l
(1) == 1) {

88  
v
;

90 
i
 = 0; i < 4; i++) {

91 
tmp
 = 
s
[
i
];

92 
s
[
i
] = s[8-i-1];

93 
s
[8-
i
-1] = 
tmp
;

96  
v
;

97 
	}
}

99 
	$ﬂ_£rülize_l⁄g
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
, c⁄° 
öt64_t
 *
d
)

101 c⁄° 
öt64_t
 
i
 = 
	`ht⁄Œ
(*
d
);

102 
buff_°ru˘
 *
¥iv
 = 
ﬂ
->priv;

103 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< (
i
)) {

104 
rc
 = 
	`ªsize_buf„r
(
¥iv
,Öriv->
Àn
 + (
i
));

105 i‡(
rc
 < 0) Ñc;

107 
	`mem˝y
(
¥iv
->
buf„r
+¥iv->
off
, &
i
, (i));

108 
¥iv
->
off
+=(
i
);

110 
	}
}

111 
	$ﬂ_°¨t_ve˘‹
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
, c⁄° 
öt32_t
 *
cou¡
)

113  
	`ﬂ_£rülize_öt
(
ﬂ
, 
èg
, 
cou¡
);

114 
	}
}

115 
	$ﬂ_íd_ve˘‹
(
ﬂrchive
 *
ﬂ
, c⁄° *
èg
)

118 
	}
}

119 
	$ﬂ_£rülize_boﬁ
(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
, c⁄° 
öt32_t
 *
i
)

122 
buff_°ru˘
 *
¥iv
 = 
ﬂ
->priv;

123 i‡((
¥iv
->
Àn
 -Öriv->
off
) < 1) {

124 
rc
 = 
	`ªsize_buf„r
(
¥iv
,Öriv->
Àn
 + 1);

125 i‡(
rc
 < 0)

126  
rc
;

128 
¥iv
->
buf„r
[¥iv->
off
] = (*
i
 == 0 ? '\0' : '\1');

129 
¥iv
->
off
++;

131 
	}
}

132 c⁄° 
öt32_t
 
	g√g⁄e
 = -1;

133 
	$ﬂ_£rülize_buf„r
(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
,

134 c⁄° 
buf„r
 *
b
)

136 
buff_°ru˘
 *
¥iv
 = 
ﬂ
->priv;

137 
rc
;

138 i‡(!
b
) {

139  
	`ﬂ_£rülize_öt
(
ﬂ
, "Àn", &
√g⁄e
);

141 
rc
 = 
	`ﬂ_£rülize_öt
(
ﬂ
, "Àn", &
b
->
Àn
);

142 i‡(
rc
 < 0)

143  
rc
;

147 i‡(
b
->
Àn
 == -1) {

148  
rc
;

150 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< 
b
->len) {

151 
rc
 = 
	`ªsize_buf„r
(
¥iv
,Öriv->
Àn
 + 
b
->len);

152 i‡(
rc
 < 0)

153  
rc
;

155 
	`mem˝y
(
¥iv
->
buf„r
+¥iv->
off
, 
b
->
buff
, b->
Àn
);

156 
¥iv
->
off
 +
b
->
Àn
;

158 
	}
}

159 
	$ﬂ_£rülize_°rög
(
ﬂrchive
 *
ﬂ
, c⁄° *
«me
, **
s
)

161 
buff_°ru˘
 *
¥iv
 = 
ﬂ
->priv;

162 
öt32_t
 
Àn
;

163 
rc
;

164 i‡(!*
s
) {

165 
	`ﬂ_£rülize_öt
(
ﬂ
, "Àn", &
√g⁄e
);

168 
Àn
 = 
	`°æí
(*
s
);

169 
rc
 = 
	`ﬂ_£rülize_öt
(
ﬂ
, "Àn", &
Àn
);

170 i‡(
rc
 < 0)

171  
rc
;

172 i‡((
¥iv
->
Àn
 -Öriv->
off
) <Üen) {

173 
rc
 = 
	`ªsize_buf„r
(
¥iv
,Öriv->
Àn
 +Üen);

174 i‡(
rc
 < 0)

175  
rc
;

177 
	`mem˝y
(
¥iv
->
buf„r
+¥iv->
off
, *
s
, 
Àn
);

178 
¥iv
->
off
 +
Àn
;

180 
	}
}

181 
	$ü_°¨t_ªc‹d
(
ürchive
 *
ü
, c⁄° *
èg
)

184 
	}
}

185 
	$ü_íd_ªc‹d
(
ürchive
 *
ü
, c⁄° *
èg
)

188 
	}
}

189 
	$ü_de£rülize_öt
(
ürchive
 *
ü
, c⁄° *
èg
, 
öt32_t
 *
cou¡
)

191 
buff_°ru˘
 *
¥iv
 = 
ü
->priv;

192 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< (*
cou¡
)) {

193  -
E2BIG
;

195 
	`mem˝y
(
cou¡
, 
¥iv
->
buf„r
+¥iv->
off
, (*count));

196 
¥iv
->
off
+=(*
cou¡
);

197 *
cou¡
 = 
	`¡ohl
(*count);

199 
	}
}

201 
	$ü_de£rülize_l⁄g
(
ürchive
 *
ü
, c⁄° *
èg
, 
öt64_t
 *
cou¡
)

203 
buff_°ru˘
 *
¥iv
 = 
ü
->priv;

204 
öt64_t
 
v
 = 0;

205 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< (*
cou¡
)) {

206  -
E2BIG
;

208 
	`mem˝y
(
cou¡
, 
¥iv
->
buf„r
+¥iv->
off
, (*count));

209 
¥iv
->
off
+=(*
cou¡
);

210 
v
 = 
	`ht⁄Œ
(*
cou¡
);

211 *
cou¡
 = 
v
;

213 
	}
}

214 
	$ü_°¨t_ve˘‹
(
ürchive
 *
ü
, c⁄° *
èg
, 
öt32_t
 *
cou¡
)

216  
	`ü_de£rülize_öt
(
ü
, 
èg
, 
cou¡
);

217 
	}
}

218 
	$ü_íd_ve˘‹
(
ürchive
 *
ü
, c⁄° *
èg
)

221 
	}
}

222 
	$ü_de£rülize_boﬁ
(
ürchive
 *
ü
, c⁄° *
«me
, 
öt32_t
 *
v
)

224 
buff_°ru˘
 *
¥iv
 = 
ü
->priv;

227 i‡((
¥iv
->
Àn
 -Öriv->
off
) < 1) {

228  -
E2BIG
;

230 *
v
 = 
¥iv
->
buf„r
[¥iv->
off
];

231 
¥iv
->
off
+=1;

234 
	}
}

235 
	$ü_de£rülize_buf„r
(
ürchive
 *
ü
, c⁄° *
«me
,

236 
buf„r
 *
b
)

238 
buff_°ru˘
 *
¥iv
 = 
ü
->priv;

239 
rc
 = 
	`ü_de£rülize_öt
(
ü
, "Àn", &
b
->
Àn
);

240 i‡(
rc
 < 0)

241  
rc
;

242 i‡((
¥iv
->
Àn
 -Öriv->
off
Ë< 
b
->len) {

243  -
E2BIG
;

246 i‡(
b
->
Àn
 == -1) {

247 
b
->
buff
 = 
NULL
;

248  
rc
;

250 
b
->
buff
 = 
	`mÆloc
(b->
Àn
);

251 i‡(!
b
->
buff
) {

252  -
ENOMEM
;

254 
	`mem˝y
(
b
->
buff
, 
¥iv
->
buf„r
+¥iv->
off
, b->
Àn
);

255 
¥iv
->
off
 +
b
->
Àn
;

257 
	}
}

258 
	$ü_de£rülize_°rög
(
ürchive
 *
ü
, c⁄° *
«me
, **
s
)

260 
buff_°ru˘
 *
¥iv
 = 
ü
->priv;

261 
öt32_t
 
Àn
;

262 
rc
 = 
	`ü_de£rülize_öt
(
ü
, "Àn", &
Àn
);

263 i‡(
rc
 < 0)

264  
rc
;

265 i‡((
¥iv
->
Àn
 -Öriv->
off
) <Üen) {

266  -
E2BIG
;

268 i‡(
Àn
 < 0) {

269  -
EINVAL
;

271 *
s
 = 
	`mÆloc
(
Àn
+1);

272 i‡(!*
s
) {

273  -
ENOMEM
;

275 
	`mem˝y
(*
s
, 
¥iv
->
buf„r
+¥iv->
off
, 
Àn
);

276 (*
s
)[
Àn
] = '\0';

277 
¥iv
->
off
 +
Àn
;

279 
	}
}

281 
ürchive
 
	gü_deÁu…
 = { 
STRUCT_INITIALIZER
 (
°¨t_ªc‹d
 ,
ü_°¨t_ªc‹d
),

282 
STRUCT_INITIALIZER
 (
íd_ªc‹d
 ,
ü_íd_ªc‹d
), STRUCT_INITIALIZER (
°¨t_ve˘‹
 , 
ü_°¨t_ve˘‹
),

283 
STRUCT_INITIALIZER
 (
íd_ve˘‹
 ,
ü_íd_ve˘‹
), STRUCT_INITIALIZER (
de£rülize_Boﬁ
 , 
ü_de£rülize_boﬁ
),

284 
STRUCT_INITIALIZER
 (
de£rülize_I¡
 ,
ü_de£rülize_öt
),

285 
STRUCT_INITIALIZER
 (
de£rülize_L⁄g
 , 
ü_de£rülize_l⁄g
) ,

286 
STRUCT_INITIALIZER
 (
de£rülize_Buf„r
, 
ü_de£rülize_buf„r
),

287 
STRUCT_INITIALIZER
 (
de£rülize_Såög
, 
ü_de£rülize_°rög
) };

289 
ﬂrchive
 
	gﬂ_deÁu…
 = { 
STRUCT_INITIALIZER
 (
°¨t_ªc‹d
 , 
ﬂ_°¨t_ªc‹d
),

290 
STRUCT_INITIALIZER
 (
íd_ªc‹d
 , 
ﬂ_íd_ªc‹d
), STRUCT_INITIALIZER (
°¨t_ve˘‹
 , 
ﬂ_°¨t_ve˘‹
),

291 
STRUCT_INITIALIZER
 (
íd_ve˘‹
 , 
ﬂ_íd_ve˘‹
), STRUCT_INITIALIZER (
£rülize_Boﬁ
 , 
ﬂ_£rülize_boﬁ
),

292 
STRUCT_INITIALIZER
 (
£rülize_I¡
 , 
ﬂ_£rülize_öt
),

293 
STRUCT_INITIALIZER
 (
£rülize_L⁄g
 , 
ﬂ_£rülize_l⁄g
) ,

294 
STRUCT_INITIALIZER
 (
£rülize_Buf„r
 , 
ﬂ_£rülize_buf„r
),

295 
STRUCT_INITIALIZER
 (
£rülize_Såög
 , 
ﬂ_£rülize_°rög
) };

297 
ürchive
 *
	$¸óã_buf„r_ürchive
(*
buf„r
, 
Àn
)

299 
ürchive
 *
ü
 = 
	`mÆloc
((*ia));

300 
buff_°ru˘
 *
buff
 = 
	`mÆloc
((buff_struct));

301 i‡(!
ü
)  0;

302 i‡(!
buff
) {

303 
	`‰ì
(
ü
);

306 *
ü
 = 
ü_deÁu…
;

307 
buff
->
off
 = 0;

308 
buff
->
buf„r
 = buffer;

309 
buff
->
Àn
 =Üen;

310 
ü
->
¥iv
 = 
buff
;

311  
ü
;

312 
	}
}

314 
ﬂrchive
 *
	$¸óã_buf„r_ﬂrchive
()

316 
ﬂrchive
 *
ﬂ
 = 
	`mÆloc
((*oa));

317 
buff_°ru˘
 *
buff
 = 
	`mÆloc
((buff_struct));

318 i‡(!
ﬂ
)  0;

319 i‡(!
buff
) {

320 
	`‰ì
(
ﬂ
);

323 *
ﬂ
 = 
ﬂ_deÁu…
;

324 
buff
->
off
 = 0;

325 
buff
->
buf„r
 = 
	`mÆloc
(128);

326 
buff
->
Àn
 = 128;

327 
ﬂ
->
¥iv
 = 
buff
;

328  
ﬂ
;

329 
	}
}

331 
	$˛o£_buf„r_ürchive
(
ürchive
 **
ü
)

333 
	`‰ì
((*
ü
)->
¥iv
);

334 
	`‰ì
(*
ü
);

335 *
ü
 = 0;

336 
	}
}

338 
	$˛o£_buf„r_ﬂrchive
(
ﬂrchive
 **
ﬂ
, 
‰ì_buf„r
)

340 i‡(
‰ì_buf„r
) {

341 
buff_°ru˘
 *
buff
 = (buff_°ru˘ *)(*
ﬂ
)->
¥iv
;

342 i‡(
buff
->
buf„r
) {

343 
	`‰ì
(
buff
->
buf„r
);

346 
	`‰ì
((*
ﬂ
)->
¥iv
);

347 
	`‰ì
(*
ﬂ
);

348 *
ﬂ
 = 0;

349 
	}
}

351 *
	$gë_buf„r
(
ﬂrchive
 *
ﬂ
)

353 
buff_°ru˘
 *
buff
 = 
ﬂ
->
¥iv
;

354  
buff
->
buf„r
;

355 
	}
}

356 
	$gë_buf„r_Àn
(
ﬂrchive
 *
ﬂ
)

358 
buff_°ru˘
 *
buff
 = 
ﬂ
->
¥iv
;

359  
buff
->
off
;

360 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/st_adaptor.c

19 #i‚de‡
DLL_EXPORT


20 
	#USE_STATIC_LIB


	)

23 
	~"zk_ad≠t‹.h
"

24 
	~<°dlib.h
>

25 
	~<time.h
>

27 
	$zoo_lock_auth
(
zh™dÀ_t
 *
zh
)

29 
	}
}

30 
	$zoo_u∆ock_auth
(
zh™dÀ_t
 *
zh
)

32 
	}
}

33 
	$lock_buf„r_li°
(
buf„r_hód_t
 *
l
)

35 
	}
}

36 
	$u∆ock_buf„r_li°
(
buf„r_hód_t
 *
l
)

38 
	}
}

39 
	$lock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
)

41 
	}
}

42 
	$u∆ock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
)

44 
	}
}

45 
sync_com∂ëi⁄
 *
	$Æloc_sync_com∂ëi⁄
()

47  (
sync_com∂ëi⁄
*)
	`ˇŒoc
(1, (sync_completion));

48 
	}
}

49 
	$waô_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

52 
	}
}

54 
	$‰ì_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

56 
	`‰ì
(
sc
);

57 
	}
}

59 
	$nŸify_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
)

61 
	}
}

63 
	$¥o˚ss_async
(
out°™dög_sync
)

65  
out°™dög_sync
 == 0;

66 
	}
}

68 
	$ad≠t‹_öô
(
zh™dÀ_t
 *
zh
)

71 
	}
}

73 
	$ad≠t‹_föish
(
zh™dÀ_t
 *
zh
){
	}
}

75 
	$ad≠t‹_de°roy
(
zh™dÀ_t
 *
zh
){
	}
}

77 
Êush_£nd_queue
(
zh™dÀ_t
 *, );

79 
	$ad≠t‹_£nd_queue
(
zh™dÀ_t
 *
zh
, 
timeout
)

81  
	`Êush_£nd_queue
(
zh
, 
timeout
);

82 
	}
}

84 
öt32_t
 
	$öc_ªf_cou¡î
(
zh™dÀ_t
* 
zh
,
i
)

86 
zh
->
ªf_cou¡î
+=(
i
<0?-1:(i>0?1:0));

87  
zh
->
ªf_cou¡î
;

88 
	}
}

90 
öt32_t
 
	$gë_xid
()

92 
öt32_t
 
xid
 = -1;

93 i‡(
xid
 == -1) {

94 
xid
 = 
	`time
(0);

96  
xid
++;

97 
	}
}

98 
	$íãr_¸ôiˇl
(
zh™dÀ_t
* 
zh
){
	}
}

99 
	$Àave_¸ôiˇl
(
zh™dÀ_t
* 
zh
){
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/winport.c

19 #ifde‡
WIN32


20 
	~"wöp‹t.h
"

21 
	~<wösock2.h
>

22 
	~<ws2t˝ù.h
>

24 
	$±hªad_muãx_lock
(
±hªad_muãx_t
* 
_muãx
 ){

25 
rc
 = 
	`WaôF‹SögÀObje˘
–*
_muãx
,

26 
INFINITE
);

27  ((
rc
 =
WAIT_OBJECT_0
) ? 0:Ñc);

28 
	}
}

30 
	$±hªad_muãx_u∆ock
–
±hªad_muãx_t
* 
_muãx
 ){

31 
rc
 = 
	`Rñó£Muãx
(*
_muãx
);

32  ((
rc
 !0)? 0: 
	`GëLa°Eº‹
());

33 
	}
}

35 
	$±hªad_muãx_öô
(
±hªad_muãx_t
* 
_muãx
, * 
ign‹edAâr
){

37 *
_muãx
 = 
	`Cª©eMuãx
(

38 
NULL
,

39 
FALSE
,

40 
NULL
);

41  ((*
_muãx
 =
NULL
Ë? 
	`GëLa°Eº‹
() : 0);

42 
	}
}

44 
	$±hªad_muãx_de°roy
(
±hªad_muãx_t
* 
_muãx
)

46 
rc
 = 
	`Clo£H™dÀ
(*
_muãx
);

47  ((
rc
 !0)? 0: 
	`GëLa°Eº‹
());

48 
	}
}

50 
±hªad_¸óã
(
±hªad_t
 *
thªad
, c⁄° 
±hªad_©å_t
 *
©å
, (
__°dˇŒ
* 
°¨t_routöe
)(* 
a
), *
¨g
)

52 
_ötThªadId
;

53 (*
thªad
).
thªad_h™dÀ
 = (
HANDLE
)
	`_begöthªadex
–
NULL
, 0, 
°¨t_routöe
 , 
¨g
, 0, (*)&
_ötThªadId
 );

54 (*
thªad
).
thªad_id
 = 
_ötThªadId
;

55  (((*
thªad
).
thªad_h™dÀ
 =0 ) ? 
î∫o
 : 0 );

56 
	}
}

59 
	$±hªad_equÆ
(
±hªad_t
 
t1
,Öthªad_à
t2
){

61  ((
t1
.
thªad_id
 =
t2
.thread_id) ? 1:0);

62 
	}
}

64 
±hªad_t
 
	$±hªad_£lf
(){

65 
±hªad_t
 
thªad_£lf
;

66 
thªad_£lf
.
thªad_h™dÀ
 = 
	`GëCuºítThªad
();

67 
thªad_£lf
.
thªad_id
 = 
	`GëCuºítThªadId
();

68  
thªad_£lf
;

69 
	}
}

71 
	$±hªad_joö
(
±hªad_t
 
_thªad
, ** 
ign‹e
)

73 
rc
 = 
	`WaôF‹SögÀObje˘
–
_thªad
.
thªad_h™dÀ
, 
INFINITE
 );

74  ((
rc
 =
WAIT_OBJECT_0
) ? 0:Ñc);

75 
	}
}

77 
	$±hªad_dëach
(
±hªad_t
 
_thªad
)

79 
rc
 = 
	`Clo£H™dÀ
(
_thªad
.
thªad_h™dÀ
) ;

80  (
rc
 !0Ë? 0: 
	`GëLa°Eº‹
();

81 
	}
}

83 
	$±hªad_muãx©å_öô
(
±hªad_muãx©å_t
* 
ign‹e
){
	}
}

84 
	$±hªad_muãx©å_£ây≥
(
±hªad_muãx©å_t
* 
ög‹e_©å
, 
ign‹e
){
	}
}

85 
	$±hªad_muãx©å_de°roy
(
±hªad_muãx©å_t
* 
ign‹e_©å
){
	}
}

88 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
cv
,

89 c⁄° 
±hªad_c⁄d©å_t
 * 
ign‹e
)

91 
cv
->
waôîs_cou¡_
 = 0;

92 
cv
->
was_brﬂdˇ°_
 = 0;

93 
cv
->
£ma_
 = 
	`Cª©eSem≠h‹e
 (
NULL
,

96 
NULL
);

97 i‡(
cv
->
£ma_
 =
NULL
 )

98  
	`GëLa°Eº‹
();

99 
	`InôülizeCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

100 
cv
->
waôîs_d⁄e_
 = 
	`Cª©eEvít
 (
NULL
,

101 
FALSE
,

102 
FALSE
,

103 
NULL
);

104  (
cv
->
waôîs_d⁄e_
 =
NULL
Ë? 
	`GëLa°Eº‹
() : 0;

106 
	}
}

109 
	$±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
c⁄d
)

111 
	`Clo£H™dÀ
–
c⁄d
->
£ma_
);

112 
	`DñëeCrôiˇlSe˘i⁄
(&
c⁄d
->
waôîs_cou¡_lock_
);

113  (
	`Clo£H™dÀ
–
c⁄d
->
waôîs_d⁄e_
 ) =0)? 
	`GëLa°Eº‹
(): 0 ;

114 
	}
}

118 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
cv
)

120 
have_waôîs
;

121 
	`E¡îCrôiˇlSe˘i⁄
 (& (
cv
->
waôîs_cou¡_lock_
));

122 
have_waôîs
 = 
cv
->
waôîs_cou¡_
 > 0;

123 
	`LóveCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

126 i‡(
have_waôîs
){

127  (
	`Rñó£Sem≠h‹e
 (
cv
->
£ma_
, 1, 0Ë=0 ) ? 
	`GëLa°Eº‹
() : 0 ;

130 
	}
}

134 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
cv
)

138 
have_waôîs
 = 0;

139 
	`E¡îCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

141 i‡(
cv
->
waôîs_cou¡_
 > 0) {

145 
cv
->
was_brﬂdˇ°_
 = 1;

146 
have_waôîs
 = 1;

149 i‡(
have_waôîs
) {

151 
	`Rñó£Sem≠h‹e
 (
cv
->
£ma_
, cv->
waôîs_cou¡_
, 0);

153 
	`LóveCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

157 
	`WaôF‹SögÀObje˘
 (
cv
->
waôîs_d⁄e_
, 
INFINITE
);

160 
cv
->
was_brﬂdˇ°_
 = 0;

163 
	`LóveCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

164 
	}
}

168 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
cv
,

169 
±hªad_muãx_t
 *
exã∫Æ_muãx
)

171 
œ°_waôî
;

173 
	`E¡îCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

174 
cv
->
waôîs_cou¡_
++;

175 
	`LóveCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

180 
	`Sig«lObje˘AndWaô
 (*
exã∫Æ_muãx
, 
cv
->
£ma_
, 
INFINITE
, 
FALSE
);

183 
	`E¡îCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

186 
cv
->
waôîs_cou¡_
--;

189 
œ°_waôî
 = 
cv
->
was_brﬂdˇ°_
 && cv->
waôîs_cou¡_
 == 0;

191 
	`LóveCrôiˇlSe˘i⁄
 (&
cv
->
waôîs_cou¡_lock_
);

195 i‡(
œ°_waôî
)

198 
	`Sig«lObje˘AndWaô
 (
cv
->
waôîs_d⁄e_
, *
exã∫Æ_muãx
, 
INFINITE
, 
FALSE
);

202 
	`WaôF‹SögÀObje˘
 (*
exã∫Æ_muãx
, 
INFINITE
);

203 
	}
}

205 
±hªad_key_¸óã
(
±hªad_key_t
 *
key
, (*
de°ru˘‹
)(*) )

207 
ªsu…
 = 0;

208 
±hªad_key_t
* 
√wkey
;

210 i‡((
√wkey
 = (
±hªad_key_t
*Ë
	`ˇŒoc
 (1,  (±hªad_key_t))Ë=
NULL
)

212 
ªsu…
 = 
ENOMEM
;

214 i‡((
√wkey
->
key
 = 
	`TlsAŒoc
 ()Ë=
TLS_OUT_OF_INDEXES
)

216 
ªsu…
 = 
EAGAIN
;

217 
	`‰ì
 (
√wkey
);

218 
√wkey
 = 
NULL
;

220 i‡(
de°ru˘‹
 !
NULL
)

224 
√wkey
->
de°ru˘‹
 = destructor;

226 
key
 = 
√wkey
;

227  (
ªsu…
);

228 
	}
}

230 
	$±hªad_key_dñëe
(
±hªad_key_t
 
key
)

232 
rc
 = 0;

233 
LPVOID
 
ÕvD©a
 = 
	`TlsGëVÆue
(
key
.key);

234 
rc
 = 
	`TlsFªe
 (
key
.key);

235 
rc
 = (r¯!0 ) ? 0 : 
	`GëLa°Eº‹
();

236 i‡(
key
.
de°ru˘‹
 !
NULL
 && 
ÕvD©a
 != 0){

237 
key
.
	`de°ru˘‹
(
ÕvD©a
);

239 
	`‰ì
 (&
key
);

240  (
rc
);

241 
	}
}

243 *
	$±hªad_gë•ecific
(
±hªad_key_t
 
key
)

245 
LPVOID
 
ÕvD©a
 = 
	`TlsGëVÆue
(
key
.key);

246 i‡((
ÕvD©a
 =0Ë&& (
	`GëLa°Eº‹
(Ë!
ERROR_SUCCESS
))

247  
NULL
;

249  
ÕvD©a
;

250 
	}
}

252 
	$±hªad_£t•ecific
(
±hªad_key_t
 
key
, c⁄° *
vÆue
)

254 
rc
 = 
	`TlsSëVÆue
 (
key
.key, 
vÆue
);

255  ((
rc
 !0 ) ? 0 : 
	`GëLa°Eº‹
());

256 
	}
}

259 
	$˛o£
(
SOCKET
 
fd
) {

260  
	`˛o£sockë
(
fd
);

261 
	}
}

263 
	$Wö32WSASèπup
()

265 
WORD
 
wVîsi⁄Rq
;

266 
WSADATA
 
wßD©a
;

267 
îr
;

269 
wVîsi⁄Rq
 = 
	`MAKEWORD
(2,0);

270 
îr
 = 
	`WSASèπup
(
wVîsi⁄Rq
, &
wßD©a
);

271 i‡(
îr
 != 0)

275 i‡((
	`LOBYTE
(
wßD©a
.
wVîsi⁄
) != 2) ||

276 (
	`HIBYTE
(
wßD©a
.
wVîsi⁄
) != 0))

278 
	`Wö32WSACÀ™up
();

282 
	}
}

284 
	$Wö32WSACÀ™up
()

286 
	`WSACÀ™up
();

287 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/winport.h

24 #i‚de‡
WINPORT_H_


25 
	#WINPORT_H_


	)

27 #ifde‡
WIN32


28 
	~<wöc⁄fig.h
>

29 
	~<î∫o.h
>

30 
	~<¥o˚ss.h
>

31 
	~<°dlib.h
>

32 
	~<mÆloc.h
>

35 
	tssize_t
;

36 
HANDLE
 
	t±hªad_muãx_t
;

38 
	s±hªad_t_


40 
HANDLE
 
	mthªad_h™dÀ
;

41 
DWORD
 
	mthªad_id
;

44 
±hªad_t_
 
	t±hªad_t
;

45 
	t±hªad_muãx©å_t
;

46 
	t±hªad_c⁄d©å_t
;

47 
	t±hªad_©å_t
;

48 
	#PTHREAD_MUTEX_RECURSIVE
 0

	)

50 
±hªad_muãx_lock
(
±hªad_muãx_t
* 
_muãx
 );

51 
±hªad_muãx_u∆ock
–
±hªad_muãx_t
* 
_muãx
 );

52 
±hªad_muãx_öô
(
±hªad_muãx_t
* 
_muãx
, * 
ign‹edAâr
);

53 
±hªad_muãx_de°roy
(
±hªad_muãx_t
* 
_muãx
);

54 
±hªad_¸óã
(
±hªad_t
 *
thªad
, c⁄° 
±hªad_©å_t
 *
©å
, (
__°dˇŒ
* 
°¨t_routöe
)(* 
a
), *
¨g
);

55 
	`±hªad_equÆ
(
±hªad_t
 
t1
,Öthªad_à
t2
);

56 
±hªad_t
 
	`±hªad_£lf
();

57 
	`±hªad_joö
(
±hªad_t
 
_thªad
, ** 
ign‹e
);

58 
	`±hªad_dëach
(
±hªad_t
 
_thªad
);

60 
	`±hªad_muãx©å_öô
(
±hªad_muãx©å_t
* 
ign‹e
);

61 
	`±hªad_muãx©å_£ây≥
(
±hªad_muãx©å_t
* 
ög‹e_©å
, 
ign‹e
);

62 
	`±hªad_muãx©å_de°roy
(
±hªad_muãx©å_t
* 
ign‹e_©å
);

69 
waôîs_cou¡_
;

72 
CRITICAL_SECTION
 
waôîs_cou¡_lock_
;

75 
HANDLE
 
£ma_
;

79 
HANDLE
 
waôîs_d⁄e_
;

84 
size_t
 
was_brﬂdˇ°_
;

87 }
	t±hªad_c⁄d_t
;

89 
	`±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
cv
,c⁄° 
±hªad_c⁄d©å_t
 * 
ign‹e
);

90 
	`±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
c⁄d
);

91 
	`±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
cv
);

92 
	`±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
cv
);

93 
	`±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
cv
, 
±hªad_muãx_t
 *
exã∫Æ_muãx
);

96 
	s±hªad_key_t_


98 
DWORD
 
key
;

99 (*
de°ru˘‹
) (*);

102 
±hªad_key_t_
 
	t±hªad_key_t
;

103 
	`±hªad_key_¸óã
(
±hªad_key_t
 *
key
, (*
de°ru˘‹
)(*) );

104 
	`±hªad_key_dñëe
(
±hªad_key_t
 
key
);

105 *
	`±hªad_gë•ecific
(
±hªad_key_t
 
key
);

106 
	`±hªad_£t•ecific
(
±hªad_key_t
 
key
, c⁄° *
vÆue
);

108 
ölöe
 
	$gëtimeofday
(
timevÆ
 *
ç
, *
tzp
) {

109 
öt64_t
 
now
 = 0;

110 i‡(
tzp
 !0Ë{ 
î∫o
 = 
EINVAL
;  -1; }

111 
	`GëSy°emTimeAsFûeTime
–(
LPFILETIME
)&
now
 );

112 
ç
->
tv_£c
 = ()(
now
 / 10000000 - 11644473600LL);

113 
ç
->
tv_u£c
 = (
now
 / 10) % 1000000;

115 
	}
}

116 
˛o£
(
SOCKET
 
fd
);

117 
Wö32WSASèπup
();

118 
Wö32WSACÀ™up
();

	@/home/pig/zookeeper-3.4.5/src/c/src/zk_adaptor.h

19 #i‚de‡
ZK_ADAPTOR_H_


20 
	#ZK_ADAPTOR_H_


	)

21 
	~<zookì≥r.juã.h
>

22 #ifde‡
THREADED


23 #i‚de‡
WIN32


24 
	~<±hªad.h
>

26 
	~"wöp‹t.h
"

29 
	~"zookì≥r.h
"

30 
	~"zk_hashèbÀ.h
"

33 
	#WATCHER_EVENT_XID
 -1

	)

34 
	#PING_XID
 -2

	)

35 
	#AUTH_XID
 -4

	)

36 
	#SET_WATCHES_XID
 -8

	)

39 
	#EXPIRED_SESSION_STATE_DEF
 -112

	)

40 
	#AUTH_FAILED_STATE_DEF
 -113

	)

41 
	#CONNECTING_STATE_DEF
 1

	)

42 
	#ASSOCIATING_STATE_DEF
 2

	)

43 
	#CONNECTED_STATE_DEF
 3

	)

44 
	#NOTCONNECTED_STATE_DEF
 999

	)

47 
	#CREATED_EVENT_DEF
 1

	)

48 
	#DELETED_EVENT_DEF
 2

	)

49 
	#CHANGED_EVENT_DEF
 3

	)

50 
	#CHILD_EVENT_DEF
 4

	)

51 
	#SESSION_EVENT_DEF
 -1

	)

52 
	#NOTWATCHING_EVENT_DEF
 -2

	)

54 #ifde‡
__˝lu•lus


58 
_buf„r_li°
;

59 
_com∂ëi⁄_li°
;

61 
	s_buf„r_hód
 {

62 
_buf„r_li°
 *vﬁ©ûê
hód
;

63 
_buf„r_li°
 *
œ°
;

64 #ifde‡
THREADED


65 
±hªad_muãx_t
 
lock
;

67 } 
	tbuf„r_hód_t
;

69 
	s_com∂ëi⁄_hód
 {

70 
_com∂ëi⁄_li°
 *vﬁ©ûê
hód
;

71 
_com∂ëi⁄_li°
 *
œ°
;

72 #ifde‡
THREADED


73 
±hªad_c⁄d_t
 
c⁄d
;

74 
±hªad_muãx_t
 
lock
;

76 } 
	tcom∂ëi⁄_hód_t
;

78 
lock_buf„r_li°
(
buf„r_hód_t
 *
l
);

79 
u∆ock_buf„r_li°
(
buf„r_hód_t
 *
l
);

80 
lock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
);

81 
u∆ock_com∂ëi⁄_li°
(
com∂ëi⁄_hód_t
 *
l
);

83 
	ssync_com∂ëi⁄
 {

84 
rc
;

87 *
°r
;

88 
°r_Àn
;

89 } 
°r
;

90 
Sèt
 
°©
;

92 *
buf„r
;

93 
buff_Àn
;

94 
Sèt
 
°©
;

95 } 
d©a
;

97 
ACL_ve˘‹
 
a˛
;

98 
Sèt
 
°©
;

99 } 
a˛
;

100 
Såög_ve˘‹
 
°rs2
;

102 
Såög_ve˘‹
 
°rs2
;

103 
Sèt
 
°©2
;

104 } 
°rs_°©
;

105 } 
u
;

106 
com∂ëe
;

107 #ifde‡
THREADED


108 
±hªad_c⁄d_t
 
c⁄d
;

109 
±hªad_muãx_t
 
lock
;

113 
	s_auth_öfo
 {

114 
°©e
;

115 * 
scheme
;

116 
buf„r
 
auth
;

117 
void_com∂ëi⁄_t
 
com∂ëi⁄
;

118 c⁄° * 
d©a
;

119 
_auth_öfo
 *
√xt
;

120 } 
	tauth_öfo
;

125 
	s_buf„r_li°
 {

126 *
buf„r
;

127 
Àn
;

128 
cuº_off£t
;

129 
_buf„r_li°
 *
√xt
;

130 } 
	tbuf„r_li°_t
;

133 
	#HANDSHAKE_REQ_SIZE
 44

	)

135 
	sc⁄√˘_ªq
 {

136 
öt32_t
 
¥ŸocﬁVîsi⁄
;

137 
öt64_t
 
œ°ZxidSìn
;

138 
öt32_t
 
timeOut
;

139 
öt64_t
 
£ssi⁄Id
;

140 
öt32_t
 
∑sswd_Àn
;

141 
∑sswd
[16];

145 
	s¥ime_°ru˘
 {

146 
öt32_t
 
Àn
;

147 
öt32_t
 
¥ŸocﬁVîsi⁄
;

148 
öt32_t
 
timeOut
;

149 
öt64_t
 
£ssi⁄Id
;

150 
öt32_t
 
∑sswd_Àn
;

151 
∑sswd
[16];

154 #ifde‡
THREADED


156 
	sad≠t‹_thªads
 {

157 
±hªad_t
 
io
;

158 
±hªad_t
 
com∂ëi⁄
;

159 
thªadsToWaô
;

160 
±hªad_c⁄d_t
 
c⁄d
;

161 
±hªad_muãx_t
 
lock
;

162 
±hªad_muãx_t
 
zh_lock
;

163 #ifde‡
WIN32


164 
SOCKET
 
£lf_pùe
[2];

166 
£lf_pùe
[2];

172 
	s_auth_li°_hód
 {

173 
auth_öfo
 *
auth
;

174 #ifde‡
THREADED


175 
±hªad_muãx_t
 
lock
;

177 } 
	tauth_li°_hód_t
;

183 
	s_zh™dÀ
 {

184 #ifde‡
WIN32


185 
SOCKET
 
fd
;

187 
fd
;

189 *
ho°«me
;

190 
sockaddr_°‹age
 *
addrs
;

191 
addrs_cou¡
;

192 
w©chî_‚
 
w©chî
;

193 
timevÆ
 
œ°_ªcv
;

194 
timevÆ
 
œ°_£nd
;

195 
timevÆ
 
œ°_pög
;

196 
timevÆ
 
√xt_dódlöe
;

197 
ªcv_timeout
;

199 
buf„r_li°_t
 *
öput_buf„r
;

200 
buf„r_hód_t
 
to_¥o˚ss
;

201 
buf„r_hód_t
 
to_£nd
;

202 
com∂ëi⁄_hód_t
 
£¡_ªque°s
;

203 
com∂ëi⁄_hód_t
 
com∂ëi⁄s_to_¥o˚ss
;

204 
c⁄√˘_ödex
;

205 
˛õ¡id_t
 
˛õ¡_id
;

206 
œ°_zxid
;

207 
out°™dög_sync
;

208 
_buf„r_li°
 
¥imî_buf„r
;

209 
¥ime_°ru˘
 
¥imî_°‹age
;

210 
¥imî_°‹age_buf„r
[40];

211 vﬁ©ûê
°©e
;

212 *
c⁄ãxt
;

213 
auth_li°_hód_t
 
auth_h
;

217 
öt32_t
 
ªf_cou¡î
;

218 vﬁ©ûê
˛o£_ªque°ed
;

219 *
ad≠t‹_¥iv
;

223 
timevÆ
 
sockë_ªadabÀ
;

225 
zk_hashèbÀ
* 
a˘ive_node_w©chîs
;

226 
zk_hashèbÀ
* 
a˘ive_exi°_w©chîs
;

227 
zk_hashèbÀ
* 
a˘ive_chûd_w©chîs
;

229 *
chroŸ
;

233 
ad≠t‹_öô
(
zh™dÀ_t
 *
zh
);

234 
ad≠t‹_föish
(
zh™dÀ_t
 *
zh
);

235 
ad≠t‹_de°roy
(
zh™dÀ_t
 *
zh
);

236 
sync_com∂ëi⁄
 *
Æloc_sync_com∂ëi⁄
();

237 
waô_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
);

238 
‰ì_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
);

239 
nŸify_sync_com∂ëi⁄
(
sync_com∂ëi⁄
 *
sc
);

240 
ad≠t‹_£nd_queue
(
zh™dÀ_t
 *
zh
, 
timeout
);

241 
¥o˚ss_async
(
out°™dög_sync
);

242 
¥o˚ss_com∂ëi⁄s
(
zh™dÀ_t
 *
zh
);

243 
Êush_£nd_queue
(
zh™dÀ_t
*
zh
, 
timeout
);

244 * 
sub_°rög
(
zh™dÀ_t
 *
zh
, c⁄° * 
£rvî_∑th
);

245 
‰ì_du∂iˇã_∑th
(c⁄° * 
‰ì_∑th
, c⁄° * 
∑th
);

246 
zoo_lock_auth
(
zh™dÀ_t
 *
zh
);

247 
zoo_u∆ock_auth
(
zh™dÀ_t
 *
zh
);

250 
íãr_¸ôiˇl
(
zh™dÀ_t
* 
zh
);

251 
Àave_¸ôiˇl
(
zh™dÀ_t
* 
zh
);

253 
≠i_¥ﬁog
(
zh™dÀ_t
* 
zh
);

254 
≠i_ïûog
(
zh™dÀ_t
 *
zh
, 
rc
);

255 
öt32_t
 
gë_xid
();

257 
öt32_t
 
öc_ªf_cou¡î
(
zh™dÀ_t
* 
zh
,
i
);

259 #ifde‡
THREADED


261 
öt32_t
 
„tch_™d_add
(vﬁ©ûêöt32_t* 
›î™d
, 
ö¸
);

263 
	#PROCESS_SESSION_EVENT
(
zh
,
√w°©e
Ë
	`queue_£ssi⁄_evít
(zh,√w°©e)

	)

267 
	#PROCESS_SESSION_EVENT
(
zh
,
√w°©e
Ë
	`queue_£ssi⁄_evít
(zh,√w°©e)

	)

270 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/src/zk_hashtable.c

19 
	~"zk_hashèbÀ.h
"

20 
	~"zk_ad≠t‹.h
"

21 
	~"hashèbÀ/hashèbÀ.h
"

22 
	~"hashèbÀ/hashèbÀ_ôr.h
"

23 
	~<°rög.h
>

24 
	~<°dlib.h
>

25 
	~<as£π.h
>

27 
	s_w©chî_obje˘
 {

28 
w©chî_‚
 
	mw©chî
;

29 * 
	mc⁄ãxt
;

30 
_w©chî_obje˘
* 
	m√xt
;

31 } 
	tw©chî_obje˘_t
;

34 
	s_zk_hashèbÀ
 {

35 
hashèbÀ
* 
	mht
;

38 
	sw©chî_obje˘_li°
 {

39 
w©chî_obje˘_t
* 
	mhód
;

43 
hashèbÀ
 
	thashèbÀ_im∂
;

45 
hashèbÀ_im∂
* 
	$gëIm∂
(
zk_hashèbÀ
* 
ht
){

46  
ht
->ht;

47 
	}
}

49 
w©chî_obje˘_t
* 
	$gëFú°W©chî
(
zk_hashèbÀ
* 
ht
,c⁄° * 
∑th
)

51 
w©chî_obje˘_li°_t
* 
wl
=
	`hashèbÀ_£¨ch
(
ht
->ht,(*)
∑th
);

52 if(
wl
!=0)

53  
wl
->
hód
;

55 
	}
}

58 
w©chî_obje˘_t
* 
	$˛⁄e_w©chî_obje˘
(
w©chî_obje˘_t
* 
wo
)

60 
w©chî_obje˘_t
* 
ªs
=
	`ˇŒoc
(1,(watcher_object_t));

61 
	`as£π
(
ªs
);

62 
ªs
->
w©chî
=
wo
->watcher;

63 
ªs
->
c⁄ãxt
=
wo
->context;

64  
ªs
;

65 
	}
}

67 
	$°rög_hash_djb2
(*
°r
)

69 
hash
 = 5381;

70 
c
;

71 c⁄° * 
c°r
 = (c⁄° *)
°r
;

72 (
c
 = *
c°r
++))

73 
hash
 = ((hash << 5Ë+ hashË+ 
c
;

75  
hash
;

76 
	}
}

78 
	$°rög_equÆ
(*
key1
,*
key2
)

80  
	`°rcmp
((c⁄° *)
key1
,(c⁄° *)
key2
)==0;

81 
	}
}

83 
w©chî_obje˘_t
* 
	$¸óã_w©chî_obje˘
(
w©chî_‚
 
w©chî
,* 
˘x
)

85 
w©chî_obje˘_t
* 
wo
=
	`ˇŒoc
(1,(watcher_object_t));

86 
	`as£π
(
wo
);

87 
wo
->
w©chî
=watcher;

88 
wo
->
c⁄ãxt
=
˘x
;

89  
wo
;

90 
	}
}

92 
w©chî_obje˘_li°_t
* 
	$¸óã_w©chî_obje˘_li°
(
w©chî_obje˘_t
* 
hód
)

94 
w©chî_obje˘_li°_t
* 
wl
=
	`ˇŒoc
(1,(watcher_object_list_t));

95 
	`as£π
(
wl
);

96 
wl
->
hód
=head;

97  
wl
;

98 
	}
}

100 
	$de°roy_w©chî_obje˘_li°
(
w©chî_obje˘_li°_t
* 
li°
)

102 
w©chî_obje˘_t
* 
e
 = 
NULL
;

104 if(
li°
==0)

106 
e
=
li°
->
hód
;

107 
e
!=0){

108 
w©chî_obje˘_t
* 
this
=
e
;

109 
e
Û->
√xt
;

110 
	`‰ì
(
this
);

112 
	`‰ì
(
li°
);

113 
	}
}

115 
zk_hashèbÀ
* 
	$¸óã_zk_hashèbÀ
()

117 
_zk_hashèbÀ
 *
ht
=
	`ˇŒoc
(1,(_zk_hashtable));

118 
	`as£π
(
ht
);

119 
ht
->ht=
	`¸óã_hashèbÀ
(32,
°rög_hash_djb2
,
°rög_equÆ
);

120  
ht
;

121 
	}
}

123 
	$do_˛ón_hashèbÀ
(
zk_hashèbÀ
* 
ht
)

125 
hashèbÀ_ôr
 *
ô
;

126 
hasM‹e
;

127 if(
	`hashèbÀ_cou¡
(
ht
->ht)==0)

129 
ô
=
	`hashèbÀ_ôî©‹
(
ht
->ht);

131 
w©chî_obje˘_li°_t
* 
w
=
	`hashèbÀ_ôî©‹_vÆue
(
ô
);

132 
	`de°roy_w©chî_obje˘_li°
(
w
);

133 
hasM‹e
=
	`hashèbÀ_ôî©‹_ªmove
(
ô
);

134 } 
hasM‹e
);

135 
	`‰ì
(
ô
);

136 
	}
}

138 
	$de°roy_zk_hashèbÀ
(
zk_hashèbÀ
* 
ht
)

140 if(
ht
!=0){

141 
	`do_˛ón_hashèbÀ
(
ht
);

142 
	`hashèbÀ_de°roy
(
ht
->ht,0);

143 
	`‰ì
(
ht
);

145 
	}
}

150 
w©chî_obje˘_t
* 
	$£¨ch_w©chî
(
w©chî_obje˘_li°_t
** 
wl
,
w©chî_obje˘_t
* 
wo
)

152 
w©chî_obje˘_t
* 
wobj
=(*
wl
)->
hód
;

153 
wobj
!=0){

154 if(
wobj
->
w©chî
==
wo
->w©chî && wobj->
c⁄ãxt
==wo->context)

155  
wobj
;

156 
wobj
=wobj->
√xt
;

159 
	}
}

161 
	$add_to_li°
(
w©chî_obje˘_li°_t
 **
wl
, 
w©chî_obje˘_t
 *
wo
,

162 
˛⁄e
)

164 i‡(
	`£¨ch_w©chî
(
wl
, 
wo
)==0) {

165 
w©chî_obje˘_t
* 
˛⁄ed
=
wo
;

166 i‡(
˛⁄e
) {

167 
˛⁄ed
 = 
	`˛⁄e_w©chî_obje˘
(
wo
);

168 
	`as£π
(
˛⁄ed
);

170 
˛⁄ed
->
√xt
 = (*
wl
)->
hód
;

171 (*
wl
)->
hód
 = 
˛⁄ed
;

173 } i‡(!
˛⁄e
) {

175 
	`‰ì
(
wo
);

178 
	}
}

180 
	$do_ö£π_w©chî_obje˘
(
zk_hashèbÀ
 *
ht
, c⁄° *
∑th
, 
w©chî_obje˘_t
* 
wo
)

182 
ªs
=1;

183 
w©chî_obje˘_li°_t
* 
wl
;

185 
wl
=
	`hashèbÀ_£¨ch
(
ht
->ht,(*)
∑th
);

186 if(
wl
==0){

187 
ªs
;

189 
ªs
=
	`hashèbÀ_ö£π
(
ht
->ht,
	`°rdup
(
∑th
),
	`¸óã_w©chî_obje˘_li°
(
wo
));

190 
	`as£π
(
ªs
);

197 
ªs
 = 
	`add_to_li°
(&
wl
, 
wo
, 0);

199  
ªs
;

200 
	}
}

203 **
	$cﬁÀ˘_keys
(
zk_hashèbÀ
 *
ht
, *
cou¡
)

205 **
li°
;

206 
hashèbÀ_ôr
 *
ô
;

207 
i
;

209 *
cou¡
 = 
	`hashèbÀ_cou¡
(
ht
->ht);

210 
li°
 = 
	`ˇŒoc
(*
cou¡
, (*));

211 
ô
=
	`hashèbÀ_ôî©‹
(
ht
->ht);

212 
i
 = 0; i < *
cou¡
; i++) {

213 
li°
[
i
] = 
	`°rdup
(
	`hashèbÀ_ôî©‹_key
(
ô
));

214 
	`hashèbÀ_ôî©‹_adv™˚
(
ô
);

216 
	`‰ì
(
ô
);

217  
li°
;

218 
	}
}

220 
	$ö£π_w©chî_obje˘
(
zk_hashèbÀ
 *
ht
, c⁄° *
∑th
,

221 
w©chî_obje˘_t
* 
wo
)

223 
ªs
;

224 
ªs
=
	`do_ö£π_w©chî_obje˘
(
ht
,
∑th
,
wo
);

225  
ªs
;

226 
	}
}

228 
	$c›y_w©chîs
(
w©chî_obje˘_li°_t
 *
‰om
, w©chî_obje˘_li°_à*
to
, 
˛⁄e
)

230 
w©chî_obje˘_t
* 
wo
=
‰om
->
hód
;

231 
wo
){

232 
w©chî_obje˘_t
 *
√xt
 = 
wo
->next;

233 
	`add_to_li°
(&
to
, 
wo
, 
˛⁄e
);

234 
wo
=
√xt
;

236 
	}
}

238 
	$c›y_èbÀ
(
zk_hashèbÀ
 *
‰om
, 
w©chî_obje˘_li°_t
 *
to
) {

239 
hashèbÀ_ôr
 *
ô
;

240 
hasM‹e
;

241 if(
	`hashèbÀ_cou¡
(
‰om
->
ht
)==0)

243 
ô
=
	`hashèbÀ_ôî©‹
(
‰om
->
ht
);

245 
w©chî_obje˘_li°_t
 *
w
 = 
	`hashèbÀ_ôî©‹_vÆue
(
ô
);

246 
	`c›y_w©chîs
(
w
, 
to
, 1);

247 
hasM‹e
=
	`hashèbÀ_ôî©‹_adv™˚
(
ô
);

248 } 
hasM‹e
);

249 
	`‰ì
(
ô
);

250 
	}
}

252 
	$cﬁÀ˘_£ssi⁄_w©chîs
(
zh™dÀ_t
 *
zh
,

253 
w©chî_obje˘_li°_t
 **
li°
)

255 
	`c›y_èbÀ
(
zh
->
a˘ive_node_w©chîs
, *
li°
);

256 
	`c›y_èbÀ
(
zh
->
a˘ive_exi°_w©chîs
, *
li°
);

257 
	`c›y_èbÀ
(
zh
->
a˘ive_chûd_w©chîs
, *
li°
);

258 
	}
}

260 
	$add_f‹_evít
(
zk_hashèbÀ
 *
ht
, *
∑th
, 
w©chî_obje˘_li°_t
 **
li°
)

262 
w©chî_obje˘_li°_t
* 
wl
;

263 
wl
 = (
w©chî_obje˘_li°_t
*)
	`hashèbÀ_ªmove
(
ht
->ht, 
∑th
);

264 i‡(
wl
) {

265 
	`c›y_w©chîs
(
wl
, *
li°
, 0);

268 
	`‰ì
(
wl
);

270 
	}
}

272 
	$do_f‹óch_w©chî
(
w©chî_obje˘_t
* 
wo
,
zh™dÀ_t
* 
zh
,

273 c⁄° * 
∑th
,
ty≥
,
°©e
)

276 c⁄° *
˛õ¡_∑th
 =

277 (
ty≥
 !
ZOO_SESSION_EVENT
 ? 
	`sub_°rög
(
zh
, 
∑th
) :Öath);

278 
wo
!=0){

279 
wo
->
	`w©chî
(
zh
,
ty≥
,
°©e
,
˛õ¡_∑th
,wo->
c⁄ãxt
);

280 
wo
=wo->
√xt
;

282 
	`‰ì_du∂iˇã_∑th
(
˛õ¡_∑th
, 
∑th
);

283 
	}
}

285 
w©chî_obje˘_li°_t
 *
	$cﬁÀ˘W©chîs
(
zh™dÀ_t
 *
zh
,
ty≥
, *
∑th
)

287 
w©chî_obje˘_li°
 *
li°
 = 
	`¸óã_w©chî_obje˘_li°
(0);

289 if(
ty≥
==
ZOO_SESSION_EVENT
){

290 
w©chî_obje˘_t
 
defW©chî
;

291 
defW©chî
.
w©chî
=
zh
->watcher;

292 
defW©chî
.
c⁄ãxt
=
zh
->context;

293 
	`add_to_li°
(&
li°
, &
defW©chî
, 1);

294 
	`cﬁÀ˘_£ssi⁄_w©chîs
(
zh
, &
li°
);

295  
li°
;

297 
ty≥
){

298 
CREATED_EVENT_DEF
:

299 
CHANGED_EVENT_DEF
:

301 
	`add_f‹_evít
(
zh
->
a˘ive_node_w©chîs
,
∑th
,&
li°
);

302 
	`add_f‹_evít
(
zh
->
a˘ive_exi°_w©chîs
,
∑th
,&
li°
);

304 
CHILD_EVENT_DEF
:

306 
	`add_f‹_evít
(
zh
->
a˘ive_chûd_w©chîs
,
∑th
,&
li°
);

308 
DELETED_EVENT_DEF
:

310 
	`add_f‹_evít
(
zh
->
a˘ive_node_w©chîs
,
∑th
,&
li°
);

311 
	`add_f‹_evít
(
zh
->
a˘ive_exi°_w©chîs
,
∑th
,&
li°
);

312 
	`add_f‹_evít
(
zh
->
a˘ive_chûd_w©chîs
,
∑th
,&
li°
);

315  
li°
;

316 
	}
}

318 
	$dñivîW©chîs
(
zh™dÀ_t
 *
zh
, 
ty≥
,
°©e
, *
∑th
, 
w©chî_obje˘_li°_t
 **
li°
)

320 i‡(!
li°
 || !(*list)) ;

321 
	`do_f‹óch_w©chî
((*
li°
)->
hód
, 
zh
, 
∑th
, 
ty≥
, 
°©e
);

322 
	`de°roy_w©chî_obje˘_li°
(*
li°
);

323 *
li°
 = 0;

324 
	}
}

326 
	$a˘iv©eW©chî
(
zh™dÀ_t
 *
zh
, 
w©chî_ªgi°øti⁄_t
* 
ªg
, 
rc
)

328 if(
ªg
){

331 
zk_hashèbÀ
 *
ht
 = 
ªg
->
	`checkî
(
zh
, 
rc
);

332 if(
ht
){

333 
	`ö£π_w©chî_obje˘
(
ht
,
ªg
->
∑th
,

334 
	`¸óã_w©chî_obje˘
(
ªg
->
w©chî
,Ñeg->
c⁄ãxt
));

337 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/zk_hashtable.h

19 #i‚de‡
ZK_HASHTABLE_H_


20 
	#ZK_HASHTABLE_H_


	)

22 
	~<zookì≥r.h
>

24 #ifde‡
__˝lu•lus


28 
w©chî_obje˘_li°
 
	tw©chî_obje˘_li°_t
;

29 
_zk_hashèbÀ
 
	tzk_hashèbÀ
;

37 
zk_hashèbÀ
 *(*
	tªsu…_checkî_‚
)(
	tzh™dÀ_t
 *, 
	trc
);

44 
	s_w©chî_ªgi°øti⁄
 {

45 
w©chî_‚
 
w©chî
;

46 * 
c⁄ãxt
;

47 
ªsu…_checkî_‚
 
checkî
;

48 c⁄° * 
∑th
;

49 } 
	tw©chî_ªgi°øti⁄_t
;

51 
zk_hashèbÀ
* 
¸óã_zk_hashèbÀ
();

52 
de°roy_zk_hashèbÀ
(
zk_hashèbÀ
* 
ht
);

54 **
cﬁÀ˘_keys
(
zk_hashèbÀ
 *
ht
, *
cou¡
);

61 
a˘iv©eW©chî
(
zh™dÀ_t
 *
zh
, 
w©chî_ªgi°øti⁄_t
* 
ªg
, 
rc
);

62 
w©chî_obje˘_li°_t
 *
cﬁÀ˘W©chîs
(
zh™dÀ_t
 *
zh
,
ty≥
, *
∑th
);

63 
dñivîW©chîs
(
zh™dÀ_t
 *
zh
, 
ty≥
, 
°©e
, *
∑th
, 
w©chî_obje˘_li°
 **
li°
);

65 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/c/src/zk_log.c

19 #i‚de‡
DLL_EXPORT


20 
	#USE_STATIC_LIB


	)

23 
	~"zookì≥r_log.h
"

24 #i‚de‡
WIN32


25 
	~<uni°d.h
>

28 
	~<°d¨g.h
>

29 
	~<time.h
>

31 
	#TIME_NOW_BUF_SIZE
 1024

	)

32 
	#FORMAT_LOG_BUF_SIZE
 4096

	)

34 #ifde‡
THREADED


35 #i‚de‡
WIN32


36 
	~<±hªad.h
>

38 
	~"wöp‹t.h
"

41 
±hªad_key_t
 
	gtime_now_buf„r
;

42 
±hªad_key_t
 
	gf‹m©_log_msg_buf„r
;

44 
	$‰ìBuf„r
(* 
p
){

45 if(
p
Ë
	`‰ì
(p);

46 
	}
}

48 
__©åibuã__
((
c⁄°ru˘‹
)Ë
	$¥ï¨eTSDKeys
() {

49 
	`±hªad_key_¸óã
 (&
time_now_buf„r
, 
‰ìBuf„r
);

50 
	`±hªad_key_¸óã
 (&
f‹m©_log_msg_buf„r
, 
‰ìBuf„r
);

51 
	}
}

53 * 
	$gëTSD©a
(
±hªad_key_t
 
key
,
size
){

54 * 
p
=
	`±hªad_gë•ecific
(
key
);

55 if(
p
==0){

56 
ªs
;

57 
p
=
	`ˇŒoc
(1,
size
);

58 
ªs
=
	`±hªad_£t•ecific
(
key
,
p
);

59 if(
ªs
!=0){

60 
	`Ârötf
(
°dîr
,"FaûedÅÿ£àTSD key: %d",
ªs
);

63  
p
;

64 
	}
}

66 * 
	$gë_time_buf„r
(){

67  
	`gëTSD©a
(
time_now_buf„r
,
TIME_NOW_BUF_SIZE
);

68 
	}
}

70 * 
	$gë_f‹m©_log_buf„r
(){

71  
	`gëTSD©a
(
f‹m©_log_msg_buf„r
,
FORMAT_LOG_BUF_SIZE
);

72 
	}
}

74 * 
	$gë_time_buf„r
(){

75 
buf
[
TIME_NOW_BUF_SIZE
];

76  
buf
;

77 
	}
}

79 * 
	$gë_f‹m©_log_buf„r
(){

80 
buf
[
FORMAT_LOG_BUF_SIZE
];

81  
buf
;

82 
	}
}

86 
ZooLogLevñ
 
	glogLevñ
=
ZOO_LOG_LEVEL_INFO
;

88 
FILE
* 
	glogSåóm
=0;

89 
FILE
* 
	$gëLogSåóm
(){

90 if(
logSåóm
==0)

91 
logSåóm
=
°dîr
;

92  
logSåóm
;

93 
	}
}

95 
	$zoo_£t_log_°ªam
(
FILE
* 
°ªam
){

96 
logSåóm
=
°ªam
;

97 
	}
}

99 c⁄° * 
	$time_now
(* 
now_°r
){

100 
timevÆ
 
tv
;

101 
tm
 
…
;

102 
time_t
 
now
 = 0;

103 
size_t
 
Àn
 = 0;

105 
	`gëtimeofday
(&
tv
,0);

107 
now
 = 
tv
.
tv_£c
;

108 
	`loˇ…ime_r
(&
now
, &
…
);

113 
Àn
 = 
	`°r·ime
(
now_°r
, 
TIME_NOW_BUF_SIZE
,

115 &
…
);

117 
Àn
 +
	`¢¥ötf
(
now_°r
 +Üen,

118 
TIME_NOW_BUF_SIZE
 - 
Àn
,

120 ()(
tv
.
tv_u£c
/1000));

122  
now_°r
;

123 
	}
}

125 
	$log_mesßge
(
ZooLogLevñ
 
curLevñ
,
löe
,c⁄° * 
funcName
,

126 c⁄° * 
mesßge
)

128 c⁄° * 
dbgLevñSå
[]={"ZOO_INVALID","ZOO_ERROR","ZOO_WARN",

130 
pid_t
 
pid
=0;

131 #ifde‡
WIN32


132 
timebuf
 [
TIME_NOW_BUF_SIZE
];

134 if(
pid
==0Ìid=
	`gëpid
();

135 #i‚de‡
THREADED


136 
	`Ârötf
(
LOGSTREAM
, "%s:%d:%s@%s@%d: %s\n", 
	`time_now
(
	`gë_time_buf„r
()),
pid
,

137 
dbgLevñSå
[
curLevñ
],
funcName
,
löe
,
mesßge
);

139 #ifde‡
WIN32


140 
	`Ârötf
(
LOGSTREAM
, "%s:%d(0x%lx):%s@%s@%d: %s\n", 
	`time_now
(
timebuf
),
pid
,

141 ()(
	`±hªad_£lf
().
thªad_id
),

142 
dbgLevñSå
[
curLevñ
],
funcName
,
löe
,
mesßge
);

144 
	`Ârötf
(
LOGSTREAM
, "%s:%d(0x%lx):%s@%s@%d: %s\n", 
	`time_now
(
	`gë_time_buf„r
()),
pid
,

145 ()
	`±hªad_£lf
(),

146 
dbgLevñSå
[
curLevñ
],
funcName
,
löe
,
mesßge
);

149 
	`fÊush
(
LOGSTREAM
);

150 
	}
}

152 c⁄° * 
	$f‹m©_log_mesßge
(c⁄° * 
f‹m©
,...)

154 
va_li°
 
va
;

155 * 
buf
=
	`gë_f‹m©_log_buf„r
();

156 if(!
buf
)

159 
	`va_°¨t
(
va
,
f‹m©
);

160 
	`v¢¥ötf
(
buf
, 
FORMAT_LOG_BUF_SIZE
-1,
f‹m©
,
va
);

161 
	`va_íd
(
va
);

162  
buf
;

163 
	}
}

165 
	$zoo_£t_debug_Àvñ
(
ZooLogLevñ
 
Àvñ
)

167 if(
Àvñ
==0){

169 
logLevñ
=(
ZooLogLevñ
)0;

172 if(
Àvñ
<
ZOO_LOG_LEVEL_ERROR
)level=ZOO_LOG_LEVEL_ERROR;

173 if(
Àvñ
>
ZOO_LOG_LEVEL_DEBUG
)level=ZOO_LOG_LEVEL_DEBUG;

174 
logLevñ
=
Àvñ
;

175 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/src/zookeeper.c

19 #i‚de‡
DLL_EXPORT


20 
	#USE_STATIC_LIB


	)

23 #i‡
deföed
(
__CYGWIN__
)

24 
	#USE_IPV6


	)

27 
	~<zookì≥r.h
>

28 
	~<zookì≥r.juã.h
>

29 
	~<¥Ÿo.h
>

30 
	~"zk_ad≠t‹.h
"

31 
	~"zookì≥r_log.h
"

32 
	~"zk_hashèbÀ.h
"

34 
	~<°dlib.h
>

35 
	~<°dio.h
>

36 
	~<°rög.h
>

37 
	~<time.h
>

38 
	~<î∫o.h
>

39 
	~<f˙é.h
>

40 
	~<as£π.h
>

41 
	~<°d¨g.h
>

42 
	~<limôs.h
>

44 #i‚de‡
WIN32


45 
	~<sys/time.h
>

46 
	~<sys/sockë.h
>

47 
	~<pﬁl.h
>

48 
	~<√töë/ö.h
>

49 
	~<√töë/t˝.h
>

50 
	~<¨∑/öë.h
>

51 
	~<√tdb.h
>

52 
	~<uni°d.h
>

53 
	~"c⁄fig.h
"

56 #ifde‡
HAVE_SYS_UTSNAME_H


57 
	~<sys/ut¢ame.h
>

60 #ifde‡
HAVE_GETPWUID_R


61 
	~<pwd.h
>

64 
	#IF_DEBUG
(
x
Ëif(
logLevñ
==
ZOO_LOG_LEVEL_DEBUG
Ë{x;}

	)

66 c⁄° 
	gZOOKEEPER_WRITE
 = 1 << 0;

67 c⁄° 
	gZOOKEEPER_READ
 = 1 << 1;

69 c⁄° 
	gZOO_EPHEMERAL
 = 1 << 0;

70 c⁄° 
	gZOO_SEQUENCE
 = 1 << 1;

72 c⁄° 
	gZOO_EXPIRED_SESSION_STATE
 = 
EXPIRED_SESSION_STATE_DEF
;

73 c⁄° 
	gZOO_AUTH_FAILED_STATE
 = 
AUTH_FAILED_STATE_DEF
;

74 c⁄° 
	gZOO_CONNECTING_STATE
 = 
CONNECTING_STATE_DEF
;

75 c⁄° 
	gZOO_ASSOCIATING_STATE
 = 
ASSOCIATING_STATE_DEF
;

76 c⁄° 
	gZOO_CONNECTED_STATE
 = 
CONNECTED_STATE_DEF
;

77 
__©åibuã__
 ((
unu£d
)Ëc⁄° * 
	$°©e2Såög
(
°©e
){

78 
°©e
){

81 
CONNECTING_STATE_DEF
:

83 
ASSOCIATING_STATE_DEF
:

85 
CONNECTED_STATE_DEF
:

87 
EXPIRED_SESSION_STATE_DEF
:

89 
AUTH_FAILED_STATE_DEF
:

93 
	}
}

95 c⁄° 
	gZOO_CREATED_EVENT
 = 
CREATED_EVENT_DEF
;

96 c⁄° 
	gZOO_DELETED_EVENT
 = 
DELETED_EVENT_DEF
;

97 c⁄° 
	gZOO_CHANGED_EVENT
 = 
CHANGED_EVENT_DEF
;

98 c⁄° 
	gZOO_CHILD_EVENT
 = 
CHILD_EVENT_DEF
;

99 c⁄° 
	gZOO_SESSION_EVENT
 = 
SESSION_EVENT_DEF
;

100 c⁄° 
	gZOO_NOTWATCHING_EVENT
 = 
NOTWATCHING_EVENT_DEF
;

101 
__©åibuã__
 ((
unu£d
)Ëc⁄° * 
	$w©chîEvít2Såög
(
ev
){

102 
ev
){

105 
CREATED_EVENT_DEF
:

107 
DELETED_EVENT_DEF
:

109 
CHANGED_EVENT_DEF
:

111 
CHILD_EVENT_DEF
:

113 
SESSION_EVENT_DEF
:

115 
NOTWATCHING_EVENT_DEF
:

119 
	}
}

121 c⁄° 
	gZOO_PERM_READ
 = 1 << 0;

122 c⁄° 
	gZOO_PERM_WRITE
 = 1 << 1;

123 c⁄° 
	gZOO_PERM_CREATE
 = 1 << 2;

124 c⁄° 
	gZOO_PERM_DELETE
 = 1 << 3;

125 c⁄° 
	gZOO_PERM_ADMIN
 = 1 << 4;

126 c⁄° 
	gZOO_PERM_ALL
 = 0x1f;

127 
Id
 
	gZOO_ANYONE_ID_UNSAFE
 = {"world", "anyone"};

128 
Id
 
	gZOO_AUTH_IDS
 = {"auth", ""};

129 
ACL
 
	g_OPEN_ACL_UNSAFE_ACL
[] = {{0x1f, {"world", "anyone"}}};

130 
ACL
 
	g_READ_ACL_UNSAFE_ACL
[] = {{0x01, {"world", "anyone"}}};

131 
ACL
 
	g_CREATOR_ALL_ACL_ACL
[] = {{0x1f, {"auth", ""}}};

132 
ACL_ve˘‹
 
	gZOO_OPEN_ACL_UNSAFE
 = { 1, 
_OPEN_ACL_UNSAFE_ACL
};

133 
ACL_ve˘‹
 
	gZOO_READ_ACL_UNSAFE
 = { 1, 
_READ_ACL_UNSAFE_ACL
};

134 
ACL_ve˘‹
 
	gZOO_CREATOR_ALL_ACL
 = { 1, 
_CREATOR_ALL_ACL_ACL
};

136 
	#COMPLETION_WATCH
 -1

	)

137 
	#COMPLETION_VOID
 0

	)

138 
	#COMPLETION_STAT
 1

	)

139 
	#COMPLETION_DATA
 2

	)

140 
	#COMPLETION_STRINGLIST
 3

	)

141 
	#COMPLETION_STRINGLIST_STAT
 4

	)

142 
	#COMPLETION_ACLLIST
 5

	)

143 
	#COMPLETION_STRING
 6

	)

144 
	#COMPLETION_MULTI
 7

	)

146 
	s_auth_com∂ëi⁄_li°
 {

147 
void_com∂ëi⁄_t
 
	mcom∂ëi⁄
;

148 c⁄° *
	mauth_d©a
;

149 
_auth_com∂ëi⁄_li°
 *
	m√xt
;

150 } 
	tauth_com∂ëi⁄_li°_t
;

152 
	scom∂ëi⁄
 {

153 
	mty≥
;

155 
void_com∂ëi⁄_t
 
	mvoid_ªsu…
;

156 
°©_com∂ëi⁄_t
 
	m°©_ªsu…
;

157 
d©a_com∂ëi⁄_t
 
	md©a_ªsu…
;

158 
°rögs_com∂ëi⁄_t
 
	m°rögs_ªsu…
;

159 
°rögs_°©_com∂ëi⁄_t
 
	m°rögs_°©_ªsu…
;

160 
a˛_com∂ëi⁄_t
 
	ma˛_ªsu…
;

161 
°rög_com∂ëi⁄_t
 
	m°rög_ªsu…
;

162 
w©chî_obje˘_li°
 *
	mw©chî_ªsu…
;

164 
com∂ëi⁄_hód_t
 
	m˛i°
;

165 } 
	tcom∂ëi⁄_t
;

167 
	s_com∂ëi⁄_li°
 {

168 
	mxid
;

169 
com∂ëi⁄_t
 
	mc
;

170 c⁄° *
	md©a
;

171 
buf„r_li°_t
 *
	mbuf„r
;

172 
_com∂ëi⁄_li°
 *
	m√xt
;

173 
w©chî_ªgi°øti⁄_t
* 
	mw©chî
;

174 } 
	tcom∂ëi⁄_li°_t
;

176 c⁄° *
îr2°rög
(
îr
);

177 
queue_£ssi⁄_evít
(
zh™dÀ_t
 *
zh
, 
°©e
);

178 c⁄° * 
f‹m©_ídpoöt_öfo
(c⁄° 
sockaddr_°‹age
* 
ï
);

179 c⁄° * 
f‹m©_cuºít_ídpoöt_öfo
(
zh™dÀ_t
* 
zh
);

182 
de£rülize_ª•⁄£
(
ty≥
, 
xid
, 
Áûed
, 
rc
, 
com∂ëi⁄_li°_t
 *
˝å
, 
ürchive
 *
ü
);

183 
de£rülize_mu…i
(
xid
, 
com∂ëi⁄_li°_t
 *
˝å
, 
ürchive
 *
ü
);

186 
add_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
com∂ëi⁄_ty≥
,

187 c⁄° *
dc
, c⁄° *
d©a
, 
add_to_‰⁄t
,

188 
w©chî_ªgi°øti⁄_t
* 
wo
, 
com∂ëi⁄_hód_t
 *
˛i°
);

189 
com∂ëi⁄_li°_t
* 
¸óã_com∂ëi⁄_íåy
(
xid
, 
com∂ëi⁄_ty≥
,

190 c⁄° *
dc
, c⁄° *
d©a
, 
w©chî_ªgi°øti⁄_t
* 
wo
,

191 
com∂ëi⁄_hód_t
 *
˛i°
);

192 
de°roy_com∂ëi⁄_íåy
(
com∂ëi⁄_li°_t
* 
c
);

193 
queue_com∂ëi⁄_nﬁock
(
com∂ëi⁄_hód_t
 *
li°
, 
com∂ëi⁄_li°_t
 *
c
,

194 
add_to_‰⁄t
);

195 
queue_com∂ëi⁄
(
com∂ëi⁄_hód_t
 *
li°
, 
com∂ëi⁄_li°_t
 *
c
,

196 
add_to_‰⁄t
);

197 
h™dÀ_sockë_îr‹_msg
(
zh™dÀ_t
 *
zh
, 
löe
, 
rc
,

198 c⁄° * 
f‹m©
,...);

199 
˛ónup_bufs
(
zh™dÀ_t
 *
zh
,
ˇŒCom∂ëi⁄
,
rc
);

201 
	gdißbÀ_c⁄n_≥rmuã
=0;

203 
__©åibuã__
((
unu£d
)Ë
¥öt_com∂ëi⁄_queue
(
zh™dÀ_t
 *
zh
);

205 *
	gSYNCHRONOUS_MARKER
 = (*)&
SYNCHRONOUS_MARKER
;

206 
isVÆidP©h
(c⁄° * 
∑th
, c⁄° 
Êags
);

208 #ifde‡
_WINDOWS


209 
	$zookì≥r_£nd
(
SOCKET
 
s
, c⁄° * 
buf
, 
Àn
)

211 
ssize_t
 
	$zookì≥r_£nd
(
s
, c⁄° * 
buf
, 
size_t
 
Àn
)

214 #ifde‡
__löux__


215  
	`£nd
(
s
, 
buf
, 
Àn
, 
MSG_NOSIGNAL
);

217  
	`£nd
(
s
, 
buf
, 
Àn
, 0);

219 
	}
}

221 c⁄° *
	$zoo_gë_c⁄ãxt
(
zh™dÀ_t
 *
zh
)

223  
zh
->
c⁄ãxt
;

224 
	}
}

226 
	$zoo_£t_c⁄ãxt
(
zh™dÀ_t
 *
zh
, *
c⁄ãxt
)

228 i‡(
zh
 !
NULL
) {

229 
zh
->
c⁄ãxt
 = context;

231 
	}
}

233 
	$zoo_ªcv_timeout
(
zh™dÀ_t
 *
zh
)

235  
zh
->
ªcv_timeout
;

236 
	}
}

240 
auth_öfo
* 
	$gë_œ°_auth
(
auth_li°_hód_t
 *
auth_li°
) {

241 
auth_öfo
 *
ñemít
;

242 
ñemít
 = 
auth_li°
->
auth
;

243 i‡(
ñemít
 =
NULL
) {

244  
NULL
;

246 
ñemít
->
√xt
 !
NULL
) {

247 
ñemít
 =ÉÀmít->
√xt
;

249  
ñemít
;

250 
	}
}

252 
	$‰ì_auth_com∂ëi⁄
(
auth_com∂ëi⁄_li°_t
 *
a_li°
) {

253 
auth_com∂ëi⁄_li°_t
 *
tmp
, *
·mp
;

254 i‡(
a_li°
 =
NULL
) {

257 
tmp
 = 
a_li°
->
√xt
;

258 
tmp
 !
NULL
) {

259 
·mp
 = 
tmp
;

260 
tmp
 =Åmp->
√xt
;

261 
·mp
->
com∂ëi⁄
 = 
NULL
;

262 
·mp
->
auth_d©a
 = 
NULL
;

263 
	`‰ì
(
·mp
);

265 
a_li°
->
com∂ëi⁄
 = 
NULL
;

266 
a_li°
->
auth_d©a
 = 
NULL
;

267 
a_li°
->
√xt
 = 
NULL
;

269 
	}
}

271 
	$add_auth_com∂ëi⁄
(
auth_com∂ëi⁄_li°_t
* 
a_li°
, 
void_com∂ëi⁄_t
* 
com∂ëi⁄
,

272 c⁄° *
d©a
) {

273 
auth_com∂ëi⁄_li°_t
 *
ñemít
;

274 
auth_com∂ëi⁄_li°_t
 *
n_ñemít
;

275 
ñemít
 = 
a_li°
;

276 i‡(
a_li°
->
com∂ëi⁄
 =
NULL
) {

278 
a_li°
->
com∂ëi⁄
 = *completion;

279 
a_li°
->
√xt
 = 
NULL
;

280 
a_li°
->
auth_d©a
 = 
d©a
;

283 
ñemít
->
√xt
 !
NULL
) {

284 
ñemít
 =ÉÀmít->
√xt
;

286 
n_ñemít
 = (
auth_com∂ëi⁄_li°_t
*Ë
	`mÆloc
((auth_completion_list_t));

287 
n_ñemít
->
√xt
 = 
NULL
;

288 
n_ñemít
->
com∂ëi⁄
 = *completion;

289 
n_ñemít
->
auth_d©a
 = 
d©a
;

290 
ñemít
->
√xt
 = 
n_ñemít
;

292 
	}
}

294 
	$gë_auth_com∂ëi⁄s
(
auth_li°_hód_t
 *
auth_li°
, 
auth_com∂ëi⁄_li°_t
 *
a_li°
) {

295 
auth_öfo
 *
ñemít
;

296 
ñemít
 = 
auth_li°
->
auth
;

297 i‡(
ñemít
 =
NULL
) {

300 
ñemít
) {

301 i‡(
ñemít
->
com∂ëi⁄
) {

302 
	`add_auth_com∂ëi⁄
(
a_li°
, &
ñemít
->
com∂ëi⁄
,ÉÀmít->
d©a
);

304 
ñemít
->
com∂ëi⁄
 = 
NULL
;

305 
ñemít
 =ÉÀmít->
√xt
;

308 
	}
}

310 
	$add_œ°_auth
(
auth_li°_hód_t
 *
auth_li°
, 
auth_öfo
 *
add_ñ
) {

311 
auth_öfo
 *
ñemít
;

312 
ñemít
 = 
auth_li°
->
auth
;

313 i‡(
ñemít
 =
NULL
) {

315 
auth_li°
->
auth
 = 
add_ñ
;

318 
ñemít
->
√xt
 !
NULL
) {

319 
ñemít
 =ÉÀmít->
√xt
;

321 
ñemít
->
√xt
 = 
add_ñ
;

323 
	}
}

325 
	$öô_auth_öfo
(
auth_li°_hód_t
 *
auth_li°
)

327 
auth_li°
->
auth
 = 
NULL
;

328 
	}
}

330 
	$m¨k_a˘ive_auth
(
zh™dÀ_t
 *
zh
) {

331 
auth_li°_hód_t
 
auth_h
 = 
zh
->auth_h;

332 
auth_öfo
 *
ñemít
;

333 i‡(
auth_h
.
auth
 =
NULL
) {

336 
ñemít
 = 
auth_h
.
auth
;

337 
ñemít
 !
NULL
) {

338 
ñemít
->
°©e
 = 1;

339 
ñemít
 =ÉÀmít->
√xt
;

341 
	}
}

343 
	$‰ì_auth_öfo
(
auth_li°_hód_t
 *
auth_li°
)

345 
auth_öfo
 *
auth
 = 
auth_li°
->auth;

346 
auth
 !
NULL
) {

347 
auth_öfo
* 
ﬁd_auth
 = 
NULL
;

348 if(
auth
->
scheme
!=
NULL
)

349 
	`‰ì
(
auth
->
scheme
);

350 
	`dóŒoˇã_Buf„r
(&
auth
->auth);

351 
ﬁd_auth
 = 
auth
;

352 
auth
 =áuth->
√xt
;

353 
	`‰ì
(
ﬁd_auth
);

355 
	`öô_auth_öfo
(
auth_li°
);

356 
	}
}

358 
	$is_uƒecovîabÀ
(
zh™dÀ_t
 *
zh
)

360  (
zh
->
°©e
<0)? 
ZINVALIDSTATE
: 
ZOK
;

361 
	}
}

363 
zk_hashèbÀ
 *
	$exi°s_ªsu…_checkî
(
zh™dÀ_t
 *
zh
, 
rc
)

365 i‡(
rc
 =
ZOK
) {

366  
zh
->
a˘ive_node_w©chîs
;

367 } i‡(
rc
 =
ZNONODE
) {

368  
zh
->
a˘ive_exi°_w©chîs
;

371 
	}
}

373 
zk_hashèbÀ
 *
	$d©a_ªsu…_checkî
(
zh™dÀ_t
 *
zh
, 
rc
)

375  
rc
==
ZOK
 ? 
zh
->
a˘ive_node_w©chîs
 : 0;

376 
	}
}

378 
zk_hashèbÀ
 *
	$chûd_ªsu…_checkî
(
zh™dÀ_t
 *
zh
, 
rc
)

380  
rc
==
ZOK
 ? 
zh
->
a˘ive_chûd_w©chîs
 : 0;

381 
	}
}

387 
	$de°roy
(
zh™dÀ_t
 *
zh
)

389 i‡(
zh
 =
NULL
) {

393 
	`˛ónup_bufs
(
zh
,1,
ZCLOSING
);

394 i‡(
zh
->
ho°«me
 != 0) {

395 
	`‰ì
(
zh
->
ho°«me
);

396 
zh
->
ho°«me
 = 
NULL
;

398 i‡(
zh
->
fd
 != -1) {

399 
	`˛o£
(
zh
->
fd
);

400 
zh
->
fd
 = -1;

401 
zh
->
°©e
 = 0;

403 i‡(
zh
->
addrs
 != 0) {

404 
	`‰ì
(
zh
->
addrs
);

405 
zh
->
addrs
 = 
NULL
;

408 i‡(
zh
->
chroŸ
 != 0) {

409 
	`‰ì
(
zh
->
chroŸ
);

410 
zh
->
chroŸ
 = 
NULL
;

413 
	`‰ì_auth_öfo
(&
zh
->
auth_h
);

414 
	`de°roy_zk_hashèbÀ
(
zh
->
a˘ive_node_w©chîs
);

415 
	`de°roy_zk_hashèbÀ
(
zh
->
a˘ive_exi°_w©chîs
);

416 
	`de°roy_zk_hashèbÀ
(
zh
->
a˘ive_chûd_w©chîs
);

417 
	}
}

419 
	$£tup_øndom
()

421 #i‚de‡
WIN32


422 
£ed
;

423 
fd
 = 
	`›í
("/dev/uøndom", 
O_RDONLY
);

424 i‡(
fd
 == -1) {

425 
£ed
 = 
	`gëpid
();

427 
rc
 = 
	`ªad
(
fd
, &
£ed
, (seed));

428 
	`as£π
(
rc
 =(
£ed
));

429 
	`˛o£
(
fd
);

431 
	`§™dom
(
£ed
);

433 
	}
}

435 #i‚de‡
__CYGWIN__


442 
	$gëaddröfo_î∫o
(
rc
) {

443 
rc
) {

444 
EAI_NONAME
:

446 #i‡
deföed
 
EAI_NODATA
 && EAI_NODATA !
EAI_NONAME


447 
EAI_NODATA
:

449  
ENOENT
;

450 
EAI_MEMORY
:

451  
ENOMEM
;

453  
EINVAL
;

455 
	}
}

462 
	$gëaddrs
(
zh™dÀ_t
 *
zh
)

464 *
ho°s
 = 
	`°rdup
(
zh
->
ho°«me
);

465 *
ho°
;

466 *
°πok_œ°
;

467 
sockaddr_°‹age
 *
addr
;

468 
i
;

469 
rc
;

470 
Æí
 = 0;

472 
zh
->
addrs_cou¡
 = 0;

473 i‡(
zh
->
addrs
) {

474 
	`‰ì
(
zh
->
addrs
);

475 
zh
->
addrs
 = 0;

477 i‡(!
ho°s
) {

478 
	`LOG_ERROR
(("out of memory"));

479 
î∫o
=
ENOMEM
;

480  
ZSYSTEMERROR
;

482 
zh
->
addrs
 = 0;

483 
ho°
=
	`°πok_r
(
ho°s
, ",", &
°πok_œ°
);

484 
ho°
) {

485 *
p‹t_•ec
 = 
	`°ºchr
(
ho°
, ':');

486 *
íd_p‹t_•ec
;

487 
p‹t
;

488 i‡(!
p‹t_•ec
) {

489 
	`LOG_ERROR
(("nÿp‹àö %s", 
ho°
));

490 
î∫o
=
EINVAL
;

491 
rc
=
ZBADARGUMENTS
;

492 
Áû
;

494 *
p‹t_•ec
 = '\0';

495 
p‹t_•ec
++;

496 
p‹t
 = 
	`°πﬁ
(
p‹t_•ec
, &
íd_p‹t_•ec
, 0);

497 i‡(!*
p‹t_•ec
 || *
íd_p‹t_•ec
 || 
p‹t
 == 0) {

498 
	`LOG_ERROR
(("övÆidÖ‹àö %s", 
ho°
));

499 
î∫o
=
EINVAL
;

500 
rc
=
ZBADARGUMENTS
;

501 
Áû
;

503 #i‡
	`deföed
(
__CYGWIN__
)

507 
ho°ít
 *
he
;

508 **
±r
;

509 
sockaddr_ö
 *
addr4
;

511 
he
 = 
	`gëho°by«me
(
ho°
);

512 i‡(!
he
) {

513 
	`LOG_ERROR
(("couldÇŸÑesﬁvê%s", 
ho°
));

514 
î∫o
=
ENOENT
;

515 
rc
=
ZBADARGUMENTS
;

516 
Áû
;

520 
±r
 = 
he
->
h_addr_li°
;*ptr != 0;Ötr++) {

521 i‡(
zh
->
addrs_cou¡
 =
Æí
) {

522 
Æí
 += 16;

523 
zh
->
addrs
 = 
	`ªÆloc
(zh->addrs, (*zh->addrs)*
Æí
);

524 i‡(
zh
->
addrs
 == 0) {

525 
	`LOG_ERROR
(("out of memory"));

526 
î∫o
=
ENOMEM
;

527 
rc
=
ZSYSTEMERROR
;

528 
Áû
;

531 
addr
 = &
zh
->
addrs
[zh->
addrs_cou¡
];

532 
addr4
 = (
sockaddr_ö
*)
addr
;

533 
addr
->
ss_Ámûy
 = 
he
->
h_addπy≥
;

534 i‡(
addr
->
ss_Ámûy
 =
AF_INET
) {

535 
addr4
->
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

536 
	`mem£t
(&
addr4
->
sö_zîo
, 0, (addr4->sin_zero));

537 
	`mem˝y
(&
addr4
->
sö_addr
, *
±r
, 
he
->
h_Àngth
);

538 
zh
->
addrs_cou¡
++;

540 #i‡
	`deföed
(
AF_INET6
)

541 i‡(
addr
->
ss_Ámûy
 =
AF_INET6
) {

542 
sockaddr_ö6
 *
addr6
;

544 
addr6
 = (
sockaddr_ö6
*)
addr
;

545 
addr6
->
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

546 
addr6
->
sö6_sc›e_id
 = 0;

547 
addr6
->
sö6_Êowöfo
 = 0;

548 
	`mem˝y
(&
addr6
->
sö6_addr
, *
±r
, 
he
->
h_Àngth
);

549 
zh
->
addrs_cou¡
++;

553 
	`LOG_WARN
(("skipping unknownáddress family %x for %s",

554 
addr
->
ss_Ámûy
, 
zh
->
ho°«me
));

557 
ho°
 = 
	`°πok_r
(0, ",", &
°πok_œ°
);

561 
addröfo
 
höts
, *
ªs
, *
ªs0
;

563 
	`mem£t
(&
höts
, 0, (hints));

564 #ifde‡
AI_ADDRCONFIG


565 
höts
.
ai_Êags
 = 
AI_ADDRCONFIG
;

567 
höts
.
ai_Êags
 = 0;

569 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

570 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

571 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

573 
	`is•a˚
(*
ho°
Ë&& ho° !
°πok_œ°
)

574 
ho°
++;

576 i‡((
rc
 = 
	`gëaddröfo
(
ho°
, 
p‹t_•ec
, &
höts
, &
ªs0
)) != 0) {

580 #ifde‡
AI_ADDRCONFIG


581 i‡((
höts
.
ai_Êags
 =
AI_ADDRCONFIG
) &&

583 #ifde‡
EAI_ADDRFAMILY


584 ((
rc
 ==
EAI_BADFLAGS
Ë|| (r¯=
EAI_ADDRFAMILY
))) {

586 (
rc
 =
EAI_BADFLAGS
)) {

589 
höts
.
ai_Êags
 = 0;

591 
rc
 = 
	`gëaddröfo
(
ho°
, 
p‹t_•ec
, &
höts
, &
ªs0
);

594 i‡(
rc
 != 0) {

595 
î∫o
 = 
	`gëaddröfo_î∫o
(
rc
);

596 #ifde‡
WIN32


597 
	`LOG_ERROR
(("Wö32 mesßge: %s\n", 
	`gai_°ªº‹
(
rc
)));

599 
	`LOG_ERROR
(("gëaddröfo: %s\n", 
	`°ªº‹
(
î∫o
)));

601 
rc
=
ZSYSTEMERROR
;

602 
Áû
;

606 
ªs
 = 
ªs0
;Ñes;Ñe†ªs->
ai_√xt
) {

608 i‡(
zh
->
addrs_cou¡
 =
Æí
) {

609 *
tm∑ddr
;

610 
Æí
 += 16;

611 
tm∑ddr
 = 
	`ªÆloc
(
zh
->
addrs
, (*zh->addrs)*
Æí
);

612 i‡(
tm∑ddr
 == 0) {

613 
	`LOG_ERROR
(("out of memory"));

614 
î∫o
=
ENOMEM
;

615 
rc
=
ZSYSTEMERROR
;

616 
Áû
;

618 
zh
->
addrs
=
tm∑ddr
;

622 
addr
 = &
zh
->
addrs
[zh->
addrs_cou¡
];

623 
ªs
->
ai_Ámûy
) {

624 
AF_INET
:

625 #i‡
	`deföed
(
AF_INET6
)

626 
AF_INET6
:

628 
	`mem˝y
(
addr
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
);

629 ++
zh
->
addrs_cou¡
;

632 
	`LOG_WARN
(("skipping unknownáddress family %x for %s",

633 
ªs
->
ai_Ámûy
, 
zh
->
ho°«me
));

638 
	`‰ìaddröfo
(
ªs0
);

640 
ho°
 = 
	`°πok_r
(0, ",", &
°πok_œ°
);

644 
	`‰ì
(
ho°s
);

646 if(!
dißbÀ_c⁄n_≥rmuã
){

647 
	`£tup_øndom
();

649 
i
 = 
zh
->
addrs_cou¡
 - 1; i > 0; --i) {

650 
j
 = 
	`øndom
()%(
i
+1);

651 i‡(
i
 !
j
) {

652 
sockaddr_°‹age
 
t
 = 
zh
->
addrs
[
i
];

653 
zh
->
addrs
[
i
] = zh->addrs[
j
];

654 
zh
->
addrs
[
j
] = 
t
;

658  
ZOK
;

659 
Áû
:

660 i‡(
zh
->
addrs
) {

661 
	`‰ì
(
zh
->
addrs
);

662 
zh
->
addrs
=0;

664 i‡(
ho°s
) {

665 
	`‰ì
(
ho°s
);

667  
rc
;

668 
	}
}

670 c⁄° 
˛õ¡id_t
 *
	$zoo_˛õ¡_id
(
zh™dÀ_t
 *
zh
)

672  &
zh
->
˛õ¡_id
;

673 
	}
}

675 
	$nuŒ_w©chî_‚
(
zh™dÀ_t
* 
p1
, 
p2
, 
p3
,c⁄° * 
p4
,*
p5
){
	}
}

677 
w©chî_‚
 
	$zoo_£t_w©chî
(
zh™dÀ_t
 *
zh
,
w©chî_‚
 
√wFn
)

679 
w©chî_‚
 
ﬁdW©chî
=
zh
->
w©chî
;

680 i‡(
√wFn
) {

681 
zh
->
w©chî
 = 
√wFn
;

683 
zh
->
w©chî
 = 
nuŒ_w©chî_‚
;

685  
ﬁdW©chî
;

686 
	}
}

688 
sockaddr
* 
	$zookì≥r_gë_c⁄√˘ed_ho°
(
zh™dÀ_t
 *
zh
,

689 
sockaddr
 *
addr
, 
sockÀn_t
 *
addr_Àn
)

691 i‡(
zh
->
°©e
!=
ZOO_CONNECTED_STATE
) {

692  
NULL
;

694 i‡(
	`gë≥î«me
(
zh
->
fd
, 
addr
, 
addr_Àn
)==-1) {

695  
NULL
;

697  
addr
;

698 
	}
}

700 
	$log_ív
() {

701 
buf
[2048];

702 #ifde‡
HAVE_SYS_UTSNAME_H


703 
ut¢ame
 utsname;

706 #i‡
	`deföed
(
HAVE_GETUID
Ë&& deföed(
HAVE_GETPWUID_R
)

707 
∑sswd
 
pw
;

708 
∑sswd
 *
pwp
 = 
NULL
;

709 
uid_t
 
uid
 = 0;

712 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:zookì≥r.vîsi⁄=%s", 
PACKAGE_STRING
));

714 #ifde‡
HAVE_GETHOSTNAME


715 
	`gëho°«me
(
buf
, (buf));

716 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:ho°.«me=%s", 
buf
));

718 
	`LOG_INFO
(("ClientÉnvironment:host.name=<not implemented>"));

721 #ifde‡
HAVE_SYS_UTSNAME_H


722 
	`u«me
(&
ut¢ame
);

723 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:os.«me=%s", 
ut¢ame
.
sy¢ame
));

724 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:os.¨ch=%s", 
ut¢ame
.
ªÀa£
));

725 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:os.vîsi⁄=%s", 
ut¢ame
.
vîsi⁄
));

727 
	`LOG_INFO
(("ClientÉnvironment:os.name=<not implemented>"));

728 
	`LOG_INFO
(("ClientÉnvironment:os.arch=<not implemented>"));

729 
	`LOG_INFO
(("ClientÉnvironment:os.version=<not implemented>"));

732 #ifde‡
HAVE_GETLOGIN


733 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:u£r.«me=%s", 
	`gëlogö
()));

735 
	`LOG_INFO
(("ClientÉnvironment:user.name=<not implemented>"));

738 #i‡
	`deföed
(
HAVE_GETUID
Ë&& deföed(
HAVE_GETPWUID_R
)

739 
uid
 = 
	`gëuid
();

740 i‡(!
	`gëpwuid_r
(
uid
, &
pw
, 
buf
, (buf), &
pwp
)) {

741 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:u£r.home=%s", 
pw
.
pw_dú
));

743 
	`LOG_INFO
(("ClientÉnvironment:user.home=<NA>"));

746 
	`LOG_INFO
(("ClientÉnvironment:user.home=<not implemented>"));

749 #ifde‡
HAVE_GETCWD


750 i‡(!
	`gëcwd
(
buf
, (buf))) {

751 
	`LOG_INFO
(("ClientÉnvironment:user.dir=<toolong>"));

753 
	`LOG_INFO
(("Clõ¡Énvú⁄mít:u£r.dú=%s", 
buf
));

756 
	`LOG_INFO
(("ClientÉnvironment:user.dir=<not implemented>"));

758 
	}
}

763 
zh™dÀ_t
 *
	$zookì≥r_öô
(c⁄° *
ho°
, 
w©chî_‚
 
w©chî
,

764 
ªcv_timeout
, c⁄° 
˛õ¡id_t
 *
˛õ¡id
, *
c⁄ãxt
, 
Êags
)

766 
î∫oßve
 = 0;

767 
zh™dÀ_t
 *
zh
 = 
NULL
;

768 *
ödex_chroŸ
 = 
NULL
;

770 
	`log_ív
();

771 #ifde‡
WIN32


772 i‡(
	`Wö32WSASèπup
()){

773 
	`LOG_ERROR
(("Error initializing ws2_32.dll"));

777 
	`LOG_INFO
(("Initiating client connection, host=%s sessionTimeout=%d watcher=%p"

779 
ho°
,

780 
ªcv_timeout
,

781 
w©chî
,

782 (
˛õ¡id
 =0 ? 0 : clõ¡id->
˛õ¡_id
),

783 ((
˛õ¡id
 =0Ë|| (˛õ¡id->
∑sswd
[0] == 0) ?

785 
c⁄ãxt
,

786 
Êags
));

788 
zh
 = 
	`ˇŒoc
(1, (*zh));

789 i‡(!
zh
) {

792 
zh
->
fd
 = -1;

793 
zh
->
°©e
 = 
NOTCONNECTED_STATE_DEF
;

794 
zh
->
c⁄ãxt
 = context;

795 
zh
->
ªcv_timeout
 =Ñecv_timeout;

796 
	`öô_auth_öfo
(&
zh
->
auth_h
);

797 i‡(
w©chî
) {

798 
zh
->
w©chî
 = watcher;

800 
zh
->
w©chî
 = 
nuŒ_w©chî_‚
;

802 i‡(
ho°
 == 0 || *host == 0) {

803 
î∫o
=
EINVAL
;

804 
ab‹t
;

808 
ödex_chroŸ
 = 
	`°rchr
(
ho°
, '/');

809 i‡(
ödex_chroŸ
) {

810 
zh
->
chroŸ
 = 
	`°rdup
(
ödex_chroŸ
);

811 i‡(
zh
->
chroŸ
 =
NULL
) {

812 
ab‹t
;

815 i‡(
	`°æí
(
zh
->
chroŸ
) == 1) {

816 
	`‰ì
(
zh
->
chroŸ
);

817 
zh
->
chroŸ
 = 
NULL
;

820 
zh
->
ho°«me
 = (*Ë
	`mÆloc
(
ödex_chroŸ
 - 
ho°
 + 1);

821 
zh
->
ho°«me
 = 
	`°∫˝y
(zh->ho°«me, 
ho°
, (
ödex_chroŸ
 - host));

823 *(
zh
->
ho°«me
 + (
ödex_chroŸ
 - 
ho°
)) = '\0';

826 
zh
->
chroŸ
 = 
NULL
;

827 
zh
->
ho°«me
 = 
	`°rdup
(
ho°
);

829 i‡(
zh
->
chroŸ
 && !
	`isVÆidP©h
(zh->chroot, 0)) {

830 
î∫o
 = 
EINVAL
;

831 
ab‹t
;

833 i‡(
zh
->
ho°«me
 == 0) {

834 
ab‹t
;

836 if(
	`gëaddrs
(
zh
)!=0) {

837 
ab‹t
;

839 
zh
->
c⁄√˘_ödex
 = 0;

840 i‡(
˛õ¡id
) {

841 
	`mem˝y
(&
zh
->
˛õ¡_id
, 
˛õ¡id
, (zh->client_id));

843 
	`mem£t
(&
zh
->
˛õ¡_id
, 0, (zh->client_id));

845 
zh
->
¥imî_buf„r
.
buf„r
 = zh->
¥imî_°‹age_buf„r
;

846 
zh
->
¥imî_buf„r
.
cuº_off£t
 = 0;

847 
zh
->
¥imî_buf„r
.
Àn
 = (zh->
¥imî_°‹age_buf„r
);

848 
zh
->
¥imî_buf„r
.
√xt
 = 0;

849 
zh
->
œ°_zxid
 = 0;

850 
zh
->
√xt_dódlöe
.
tv_£c
=zh->√xt_dódlöe.
tv_u£c
=0;

851 
zh
->
sockë_ªadabÀ
.
tv_£c
=zh->sockë_ªadabÀ.
tv_u£c
=0;

852 
zh
->
a˘ive_node_w©chîs
=
	`¸óã_zk_hashèbÀ
();

853 
zh
->
a˘ive_exi°_w©chîs
=
	`¸óã_zk_hashèbÀ
();

854 
zh
->
a˘ive_chûd_w©chîs
=
	`¸óã_zk_hashèbÀ
();

856 i‡(
	`ad≠t‹_öô
(
zh
) == -1) {

857 
ab‹t
;

860  
zh
;

861 
ab‹t
:

862 
î∫oßve
=
î∫o
;

863 
	`de°roy
(
zh
);

864 
	`‰ì
(
zh
);

865 
î∫o
=
î∫oßve
;

867 
	}
}

873 
	$‰ì_du∂iˇã_∑th
(c⁄° *
‰ì_∑th
, c⁄° * 
∑th
) {

874 i‡(
‰ì_∑th
 !
∑th
) {

875 
	`‰ì
((*)
‰ì_∑th
);

877 
	}
}

882 * 
	$¥ïíd_°rög
(
zh™dÀ_t
 *
zh
, c⁄° * 
˛õ¡_∑th
) {

883 *
ªt_°r
;

884 i‡(
zh
 =
NULL
 || zh->
chroŸ
 == NULL)

885  (*Ë
˛õ¡_∑th
;

887 i‡(
	`°æí
(
˛õ¡_∑th
) == 1) {

888  
	`°rdup
(
zh
->
chroŸ
);

890 
ªt_°r
 = (*Ë
	`mÆloc
(
	`°æí
(
zh
->
chroŸ
Ë+ såÀn(
˛õ¡_∑th
) + 1);

891 
	`°r˝y
(
ªt_°r
, 
zh
->
chroŸ
);

892  
	`°rˇt
(
ªt_°r
, 
˛õ¡_∑th
);

893 
	}
}

899 * 
	$sub_°rög
(
zh™dÀ_t
 *
zh
, c⁄° * 
£rvî_∑th
) {

900 *
ªt_°r
;

901 i‡(
zh
->
chroŸ
 =
NULL
)

902  (*Ë
£rvî_∑th
;

904 i‡(
	`°∫cmp
(
£rvî_∑th
, 
zh
->
chroŸ
, 
	`°æí
(zh->chroot)) != 0) {

905 
	`LOG_ERROR
(("serverÖath %s doesÇot include chrootÖath %s",

906 
£rvî_∑th
, 
zh
->
chroŸ
));

907  (*Ë
£rvî_∑th
;

909 i‡(
	`°æí
(
£rvî_∑th
Ë=°æí(
zh
->
chroŸ
)) {

911 
ªt_°r
 = 
	`°rdup
("/");

912  
ªt_°r
;

914 
ªt_°r
 = 
	`°rdup
(
£rvî_∑th
 + 
	`°æí
(
zh
->
chroŸ
));

915  
ªt_°r
;

916 
	}
}

918 
buf„r_li°_t
 *
	$Æloˇã_buf„r
(*
buff
, 
Àn
)

920 
buf„r_li°_t
 *
buf„r
 = 
	`ˇŒoc
(1, (*buffer));

921 i‡(
buf„r
 == 0)

924 
buf„r
->
Àn
 =Üen==0?(*buffer):len;

925 
buf„r
->
cuº_off£t
 = 0;

926 
buf„r
->buf„∏
buff
;

927 
buf„r
->
√xt
 = 0;

928  
buf„r
;

929 
	}
}

931 
	$‰ì_buf„r
(
buf„r_li°_t
 *
b
)

933 i‡(!
b
) {

936 i‡(
b
->
buf„r
) {

937 
	`‰ì
(
b
->
buf„r
);

939 
	`‰ì
(
b
);

940 
	}
}

942 
buf„r_li°_t
 *
	$dequeue_buf„r
(
buf„r_hód_t
 *
li°
)

944 
buf„r_li°_t
 *
b
;

945 
	`lock_buf„r_li°
(
li°
);

946 
b
 = 
li°
->
hód
;

947 i‡(
b
) {

948 
li°
->
hód
 = 
b
->
√xt
;

949 i‡(!
li°
->
hód
) {

950 
	`as£π
(
b
 =
li°
->
œ°
);

951 
li°
->
œ°
 = 0;

954 
	`u∆ock_buf„r_li°
(
li°
);

955  
b
;

956 
	}
}

958 
	$ªmove_buf„r
(
buf„r_hód_t
 *
li°
)

960 
buf„r_li°_t
 *
b
 = 
	`dequeue_buf„r
(
li°
);

961 i‡(!
b
) {

964 
	`‰ì_buf„r
(
b
);

966 
	}
}

968 
	$queue_buf„r
(
buf„r_hód_t
 *
li°
, 
buf„r_li°_t
 *
b
, 
add_to_‰⁄t
)

970 
b
->
√xt
 = 0;

971 
	`lock_buf„r_li°
(
li°
);

972 i‡(
li°
->
hód
) {

973 
	`as£π
(
li°
->
œ°
);

975 i‡(
add_to_‰⁄t
) {

976 
b
->
√xt
 = 
li°
->
hód
;

977 
li°
->
hód
 = 
b
;

979 
li°
->
œ°
->
√xt
 = 
b
;

980 
li°
->
œ°
 = 
b
;

984 
	`as£π
(!
li°
->
hód
);

985 
li°
->
hód
 = 
b
;

986 
li°
->
œ°
 = 
b
;

988 
	`u∆ock_buf„r_li°
(
li°
);

989 
	}
}

991 
	$queue_buf„r_byãs
(
buf„r_hód_t
 *
li°
, *
buff
, 
Àn
)

993 
buf„r_li°_t
 *
b
 = 
	`Æloˇã_buf„r
(
buff
,
Àn
);

994 i‡(!
b
)

995  
ZSYSTEMERROR
;

996 
	`queue_buf„r
(
li°
, 
b
, 0);

997  
ZOK
;

998 
	}
}

1000 
	$queue_‰⁄t_buf„r_byãs
(
buf„r_hód_t
 *
li°
, *
buff
, 
Àn
)

1002 
buf„r_li°_t
 *
b
 = 
	`Æloˇã_buf„r
(
buff
,
Àn
);

1003 i‡(!
b
)

1004  
ZSYSTEMERROR
;

1005 
	`queue_buf„r
(
li°
, 
b
, 1);

1006  
ZOK
;

1007 
	}
}

1009 
__©åibuã__
 ((
unu£d
)Ë
	$gë_queue_Àn
(
buf„r_hód_t
 *
li°
)

1011 
i
;

1012 
buf„r_li°_t
 *
±r
;

1013 
	`lock_buf„r_li°
(
li°
);

1014 
±r
 = 
li°
->
hód
;

1015 
i
=0; 
±r
!=0;Öåıå->
√xt
, i++)

1017 
	`u∆ock_buf„r_li°
(
li°
);

1018  
i
;

1019 
	}
}

1025 #ifde‡
WIN32


1026 
	$£nd_buf„r
(
SOCKET
 
fd
, 
buf„r_li°_t
 *
buff
)

1028 
	$£nd_buf„r
(
fd
, 
buf„r_li°_t
 *
buff
)

1031 
Àn
 = 
buff
->len;

1032 
off
 = 
buff
->
cuº_off£t
;

1033 
rc
 = -1;

1035 i‡(
off
 < 4) {

1037 
∆í
 = 
	`ht⁄l
(
Àn
);

1038 *
b
 = (*)&
∆í
;

1039 
rc
 = 
	`zookì≥r_£nd
(
fd
, 
b
 + 
off
, (
∆í
) - off);

1040 i‡(
rc
 == -1) {

1041 #i‚de‡
_WINDOWS


1042 i‡(
î∫o
 !
EAGAIN
) {

1044 i‡(
	`WSAGëLa°Eº‹
(Ë!
WSAEWOULDBLOCK
) {

1051 
buff
->
cuº_off£t
 +
rc
;

1053 
off
 = 
buff
->
cuº_off£t
;

1055 i‡(
off
 >= 4) {

1057 
off
 -(
buff
->
Àn
);

1058 
rc
 = 
	`zookì≥r_£nd
(
fd
, 
buff
->
buf„r
 + 
off
, 
Àn
 - off);

1059 i‡(
rc
 == -1) {

1060 #i‚de‡
_WINDOWS


1061 i‡(
î∫o
 !
EAGAIN
) {

1063 i‡(
	`WSAGëLa°Eº‹
(Ë!
WSAEWOULDBLOCK
) {

1068 
buff
->
cuº_off£t
 +
rc
;

1071  
buff
->
cuº_off£t
 =
Àn
 + (buff->len);

1072 
	}
}

1079 #ifde‡
WIN32


1080 
	$ªcv_buf„r
(
SOCKET
 
fd
, 
buf„r_li°_t
 *
buff
)

1082 
	$ªcv_buf„r
(
fd
, 
buf„r_li°_t
 *
buff
)

1085 
off
 = 
buff
->
cuº_off£t
;

1086 
rc
 = 0;

1090 i‡(
off
 < 4) {

1091 *
buf„r
 = (*)&(
buff
->
Àn
);

1092 
rc
 = 
	`ªcv
(
fd
, 
buf„r
+
off
, ()-off, 0);

1094 
rc
) {

1096 
î∫o
 = 
EHOSTDOWN
;

1098 #i‚de‡
_WINDOWS


1099 i‡(
î∫o
 =
EAGAIN
) {

1101 i‡(
	`WSAGëLa°Eº‹
(Ë=
WSAEWOULDBLOCK
) {

1107 
buff
->
cuº_off£t
 +
rc
;

1109 
off
 = 
buff
->
cuº_off£t
;

1110 i‡(
buff
->
cuº_off£t
 =(buff->
Àn
)) {

1111 
buff
->
Àn
 = 
	`¡ohl
(buff->len);

1112 
buff
->
buf„r
 = 
	`ˇŒoc
(1, buff->
Àn
);

1115 i‡(
buff
->
buf„r
) {

1117 
off
 -(
buff
->
Àn
);

1119 
rc
 = 
	`ªcv
(
fd
, 
buff
->
buf„r
+
off
, buff->
Àn
-off, 0);

1120 
rc
) {

1122 
î∫o
 = 
EHOSTDOWN
;

1124 #i‚de‡
_WINDOWS


1125 i‡(
î∫o
 =
EAGAIN
) {

1127 i‡(
	`WSAGëLa°Eº‹
(Ë=
WSAEWOULDBLOCK
) {

1133 
buff
->
cuº_off£t
 +
rc
;

1136  
buff
->
cuº_off£t
 =buff->
Àn
 + (buff->len);

1137 
	}
}

1139 
	$‰ì_buf„rs
(
buf„r_hód_t
 *
li°
)

1141 
	`ªmove_buf„r
(
li°
))

1143 
	}
}

1145 
	$‰ì_com∂ëi⁄s
(
zh™dÀ_t
 *
zh
,
ˇŒCom∂ëi⁄
,
ªas⁄
)

1147 
com∂ëi⁄_hód_t
 
tmp_li°
;

1148 
ﬂrchive
 *
ﬂ
;

1149 
RïlyHódî
 
h
;

1150 
void_com∂ëi⁄_t
 
auth_com∂ëi⁄
 = 
NULL
;

1151 
auth_com∂ëi⁄_li°_t
 
a_li°
, *
a_tmp
;

1153 
	`lock_com∂ëi⁄_li°
(&
zh
->
£¡_ªque°s
);

1154 
tmp_li°
 = 
zh
->
£¡_ªque°s
;

1155 
zh
->
£¡_ªque°s
.
hód
 = 0;

1156 
zh
->
£¡_ªque°s
.
œ°
 = 0;

1157 
	`u∆ock_com∂ëi⁄_li°
(&
zh
->
£¡_ªque°s
);

1158 
tmp_li°
.
hód
) {

1159 
com∂ëi⁄_li°_t
 *
˝å
 = 
tmp_li°
.
hód
;

1161 
tmp_li°
.
hód
 = 
˝å
->
√xt
;

1162 i‡(
˝å
->
c
.
d©a_ªsu…
 =
SYNCHRONOUS_MARKER
) {

1163 
sync_com∂ëi⁄


1164 *
sc
 = (
sync_com∂ëi⁄
*)
˝å
->
d©a
;

1165 
sc
->
rc
 = 
ªas⁄
;

1166 
	`nŸify_sync_com∂ëi⁄
(
sc
);

1167 
zh
->
out°™dög_sync
--;

1168 
	`de°roy_com∂ëi⁄_íåy
(
˝å
);

1169 } i‡(
ˇŒCom∂ëi⁄
) {

1170 if(
˝å
->
xid
 =
PING_XID
){

1172 
	`de°roy_com∂ëi⁄_íåy
(
˝å
);

1175 
buf„r_li°_t
 *
b±r
;

1176 
h
.
xid
 = 
˝å
->xid;

1177 
h
.
zxid
 = -1;

1178 
h
.
îr
 = 
ªas⁄
;

1179 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

1180 
	`£rülize_RïlyHódî
(
ﬂ
, "hódî", &
h
);

1181 
b±r
 = 
	`ˇŒoc
((*bptr), 1);

1182 
	`as£π
(
b±r
);

1183 
b±r
->
Àn
 = 
	`gë_buf„r_Àn
(
ﬂ
);

1184 
b±r
->
buf„r
 = 
	`gë_buf„r
(
ﬂ
);

1185 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

1186 
˝å
->
buf„r
 = 
b±r
;

1187 
	`queue_com∂ëi⁄
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
, 
˝å
, 0);

1191 
a_li°
.
com∂ëi⁄
 = 
NULL
;

1192 
a_li°
.
√xt
 = 
NULL
;

1193 
	`zoo_lock_auth
(
zh
);

1194 
	`gë_auth_com∂ëi⁄s
(&
zh
->
auth_h
, &
a_li°
);

1195 
	`zoo_u∆ock_auth
(
zh
);

1196 
a_tmp
 = &
a_li°
;

1198 
a_tmp
->
com∂ëi⁄
 !
NULL
) {

1199 
auth_com∂ëi⁄
 = 
a_tmp
->
com∂ëi⁄
;

1200 
	`auth_com∂ëi⁄
(
ªas⁄
, 
a_tmp
->
auth_d©a
);

1201 
a_tmp
 =á_tmp->
√xt
;

1202 i‡(
a_tmp
 =
NULL
)

1205 
	`‰ì_auth_com∂ëi⁄
(&
a_li°
);

1206 
	}
}

1208 
	$˛ónup_bufs
(
zh™dÀ_t
 *
zh
,
ˇŒCom∂ëi⁄
,
rc
)

1210 
	`íãr_¸ôiˇl
(
zh
);

1211 
	`‰ì_buf„rs
(&
zh
->
to_£nd
);

1212 
	`‰ì_buf„rs
(&
zh
->
to_¥o˚ss
);

1213 
	`‰ì_com∂ëi⁄s
(
zh
,
ˇŒCom∂ëi⁄
,
rc
);

1214 
	`Àave_¸ôiˇl
(
zh
);

1215 i‡(
zh
->
öput_buf„r
 && zh->öput_buf„∏!&zh->
¥imî_buf„r
) {

1216 
	`‰ì_buf„r
(
zh
->
öput_buf„r
);

1217 
zh
->
öput_buf„r
 = 0;

1219 
	}
}

1221 
	$h™dÀ_îr‹
(
zh™dÀ_t
 *
zh
,
rc
)

1223 
	`˛o£
(
zh
->
fd
);

1224 i‡(
	`is_uƒecovîabÀ
(
zh
)) {

1225 
	`LOG_DEBUG
(("Callingá watcher forá ZOO_SESSION_EVENTándÅhe state=%s",

1226 
	`°©e2Såög
(
zh
->
°©e
)));

1227 
	`PROCESS_SESSION_EVENT
(
zh
, zh->
°©e
);

1228 } i‡(
zh
->
°©e
 =
ZOO_CONNECTED_STATE
) {

1229 
	`LOG_DEBUG
(("Callingá watcher forá ZOO_SESSION_EVENTándÅhe state=CONNECTING_STATE"));

1230 
	`PROCESS_SESSION_EVENT
(
zh
, 
ZOO_CONNECTING_STATE
);

1232 
	`˛ónup_bufs
(
zh
,1,
rc
);

1233 
zh
->
fd
 = -1;

1234 
zh
->
c⁄√˘_ödex
++;

1235 i‡(!
	`is_uƒecovîabÀ
(
zh
)) {

1236 
zh
->
°©e
 = 0;

1238 i‡(
	`¥o˚ss_async
(
zh
->
out°™dög_sync
)) {

1239 
	`¥o˚ss_com∂ëi⁄s
(
zh
);

1241 
	}
}

1243 
	$h™dÀ_sockë_îr‹_msg
(
zh™dÀ_t
 *
zh
, 
löe
, 
rc
,

1244 c⁄° * 
f‹m©
, ...)

1246 if(
logLevñ
>=
ZOO_LOG_LEVEL_ERROR
){

1247 
va_li°
 
va
;

1248 
buf
[1024];

1249 
	`va_°¨t
(
va
,
f‹m©
);

1250 
	`v¢¥ötf
(
buf
, (buf)-1,
f‹m©
,
va
);

1251 
	`log_mesßge
(
ZOO_LOG_LEVEL_ERROR
,
löe
,
__func__
,

1252 
	`f‹m©_log_mesßge
("Socket [%s] zkÑetcode=%d,Érrno=%d(%s): %s",

1253 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
),
rc
,
î∫o
,
	`°ªº‹
”ºno),
buf
));

1254 
	`va_íd
(
va
);

1256 
	`h™dÀ_îr‹
(
zh
,
rc
);

1257  
rc
;

1258 
	}
}

1260 
	$auth_com∂ëi⁄_func
(
rc
, 
zh™dÀ_t
* 
zh
)

1262 
void_com∂ëi⁄_t
 
auth_com∂ëi⁄
 = 
NULL
;

1263 
auth_com∂ëi⁄_li°_t
 
a_li°
;

1264 
auth_com∂ëi⁄_li°_t
 *
a_tmp
;

1266 if(
zh
==
NULL
)

1269 
	`zoo_lock_auth
(
zh
);

1271 if(
rc
!=0){

1272 
zh
->
°©e
=
ZOO_AUTH_FAILED_STATE
;

1275 
	`m¨k_a˘ive_auth
(
zh
);

1277 
a_li°
.
com∂ëi⁄
 = 
NULL
;

1278 
a_li°
.
√xt
 = 
NULL
;

1279 
	`gë_auth_com∂ëi⁄s
(&
zh
->
auth_h
, &
a_li°
);

1280 
	`zoo_u∆ock_auth
(
zh
);

1281 i‡(
rc
) {

1282 
	`LOG_ERROR
(("Authentication scheme %s failed. Connection closed.",

1283 
zh
->
auth_h
.
auth
->
scheme
));

1286 
	`LOG_INFO
(("Authítiˇti⁄ schemê%†suc˚eded", 
zh
->
auth_h
.
auth
->
scheme
));

1288 
a_tmp
 = &
a_li°
;

1290 
a_tmp
->
com∂ëi⁄
 !
NULL
) {

1291 
auth_com∂ëi⁄
 = 
a_tmp
->
com∂ëi⁄
;

1292 
	`auth_com∂ëi⁄
(
rc
, 
a_tmp
->
auth_d©a
);

1293 
a_tmp
 =á_tmp->
√xt
;

1294 i‡(
a_tmp
 =
NULL
)

1297 
	`‰ì_auth_com∂ëi⁄
(&
a_li°
);

1298 
	}
}

1300 
	$£nd_öfo_∑ckë
(
zh™dÀ_t
 *
zh
, 
auth_öfo
* 
auth
) {

1301 
ﬂrchive
 *
ﬂ
;

1302 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
 , 
AUTH_XID
), STRUCT_INITIALIZER(
ty≥
 , 
ZOO_SETAUTH_OP
)};

1303 
AuthPackë
 
ªq
;

1304 
rc
;

1305 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

1306 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

1307 
ªq
.
ty≥
=0;

1308 
ªq
.
scheme
 = 
auth
->scheme;

1309 
ªq
.
auth
 =áuth->auth;

1310 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_AuthPackë
(
ﬂ
, "ªq", &
ªq
);

1312 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_‰⁄t_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

1313 
	`gë_buf„r_Àn
(
ﬂ
));

1315 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

1317  
rc
;

1318 
	}
}

1321 
	$£nd_auth_öfo
(
zh™dÀ_t
 *
zh
) {

1322 
rc
 = 0;

1323 
auth_öfo
 *
auth
 = 
NULL
;

1325 
	`zoo_lock_auth
(
zh
);

1326 
auth
 = 
zh
->
auth_h
.auth;

1327 i‡(
auth
 =
NULL
) {

1328 
	`zoo_u∆ock_auth
(
zh
);

1329  
ZOK
;

1331 
auth
 !
NULL
) {

1332 
rc
 = 
	`£nd_öfo_∑ckë
(
zh
, 
auth
);

1333 
auth
 =áuth->
√xt
;

1335 
	`zoo_u∆ock_auth
(
zh
);

1336 
	`LOG_DEBUG
(("SídögáŒáuth infÿªque°Åÿ%s", 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

1337  (
rc
 <0Ë? 
ZMARSHALLINGERROR
:
ZOK
;

1338 
	}
}

1340 
	$£nd_œ°_auth_öfo
(
zh™dÀ_t
 *
zh
)

1342 
rc
 = 0;

1343 
auth_öfo
 *
auth
 = 
NULL
;

1345 
	`zoo_lock_auth
(
zh
);

1346 
auth
 = 
	`gë_œ°_auth
(&
zh
->
auth_h
);

1347 if(
auth
==
NULL
) {

1348 
	`zoo_u∆ock_auth
(
zh
);

1349  
ZOK
;

1351 
rc
 = 
	`£nd_öfo_∑ckë
(
zh
, 
auth
);

1352 
	`zoo_u∆ock_auth
(
zh
);

1353 
	`LOG_DEBUG
(("Sídögáuth infÿªque°Åÿ%s",
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

1354  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

1355 
	}
}

1357 
	$‰ì_key_li°
(**
li°
, 
cou¡
)

1359 
i
;

1361 
i
 = 0; i < 
cou¡
; i++) {

1362 
	`‰ì
(
li°
[
i
]);

1364 
	`‰ì
(
li°
);

1365 
	}
}

1367 
	$£nd_£t_w©ches
(
zh™dÀ_t
 *
zh
)

1369 
ﬂrchive
 *
ﬂ
;

1370 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
 , 
SET_WATCHES_XID
), STRUCT_INITIALIZER(
ty≥
 , 
ZOO_SETWATCHES_OP
)};

1371 
SëW©ches
 
ªq
;

1372 
rc
;

1374 
ªq
.
ªœtiveZxid
 = 
zh
->
œ°_zxid
;

1375 
ªq
.
d©aW©ches
.
d©a
 = 
	`cﬁÀ˘_keys
(
zh
->
a˘ive_node_w©chîs
, (*)&ªq.d©aW©ches.
cou¡
);

1376 
ªq
.
exi°W©ches
.
d©a
 = 
	`cﬁÀ˘_keys
(
zh
->
a˘ive_exi°_w©chîs
, (*)&ªq.exi°W©ches.
cou¡
);

1377 
ªq
.
chûdW©ches
.
d©a
 = 
	`cﬁÀ˘_keys
(
zh
->
a˘ive_chûd_w©chîs
, (*)&ªq.chûdW©ches.
cou¡
);

1380 i‡(!
ªq
.
d©aW©ches
.
cou¡
 && !ªq.
exi°W©ches
.count &&

1381 !
ªq
.
chûdW©ches
.
cou¡
) {

1382 
	`‰ì_key_li°
(
ªq
.
d©aW©ches
.
d©a
,Ñeq.d©aW©ches.
cou¡
);

1383 
	`‰ì_key_li°
(
ªq
.
exi°W©ches
.
d©a
,Ñeq.exi°W©ches.
cou¡
);

1384 
	`‰ì_key_li°
(
ªq
.
chûdW©ches
.
d©a
,Ñeq.chûdW©ches.
cou¡
);

1385  
ZOK
;

1389 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

1390 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

1391 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_SëW©ches
(
ﬂ
, "ªq", &
ªq
);

1393 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_‰⁄t_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

1394 
	`gë_buf„r_Àn
(
ﬂ
));

1396 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

1397 
	`‰ì_key_li°
(
ªq
.
d©aW©ches
.
d©a
,Ñeq.d©aW©ches.
cou¡
);

1398 
	`‰ì_key_li°
(
ªq
.
exi°W©ches
.
d©a
,Ñeq.exi°W©ches.
cou¡
);

1399 
	`‰ì_key_li°
(
ªq
.
chûdW©ches
.
d©a
,Ñeq.chûdW©ches.
cou¡
);

1400 
	`LOG_DEBUG
(("Sídög së w©che†ªque°Åÿ%s",
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

1401  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

1402 
	}
}

1404 
	$£rülize_¥ime_c⁄√˘
(
c⁄√˘_ªq
 *
ªq
, * 
buf„r
){

1406 
off£t
 = 0;

1407 
ªq
->
¥ŸocﬁVîsi⁄
 = 
	`ht⁄l
(req->protocolVersion);

1408 
	`mem˝y
(
buf„r
 + 
off£t
, &
ªq
->
¥ŸocﬁVîsi⁄
, (req->protocolVersion));

1409 
off£t
 = off£à+ (
ªq
->
¥ŸocﬁVîsi⁄
);

1411 
ªq
->
œ°ZxidSìn
 = 
	`ht⁄Œ
(req->lastZxidSeen);

1412 
	`mem˝y
(
buf„r
 + 
off£t
, &
ªq
->
œ°ZxidSìn
, (req->lastZxidSeen));

1413 
off£t
 = off£à+ (
ªq
->
œ°ZxidSìn
);

1415 
ªq
->
timeOut
 = 
	`ht⁄l
(req->timeOut);

1416 
	`mem˝y
(
buf„r
 + 
off£t
, &
ªq
->
timeOut
, (req->timeOut));

1417 
off£t
 = off£à+ (
ªq
->
timeOut
);

1419 
ªq
->
£ssi⁄Id
 = 
	`ht⁄Œ
(req->sessionId);

1420 
	`mem˝y
(
buf„r
 + 
off£t
, &
ªq
->
£ssi⁄Id
, (req->sessionId));

1421 
off£t
 = off£à+ (
ªq
->
£ssi⁄Id
);

1423 
ªq
->
∑sswd_Àn
 = 
	`ht⁄l
(req->passwd_len);

1424 
	`mem˝y
(
buf„r
 + 
off£t
, &
ªq
->
∑sswd_Àn
, (req->passwd_len));

1425 
off£t
 = off£à+ (
ªq
->
∑sswd_Àn
);

1427 
	`mem˝y
(
buf„r
 + 
off£t
, 
ªq
->
∑sswd
, (req->passwd));

1430 
	}
}

1432 
	$de£rülize_¥ime_ª•⁄£
(
¥ime_°ru˘
 *
ªq
, * 
buf„r
){

1434 
off£t
 = 0;

1435 
	`mem˝y
(&
ªq
->
Àn
, 
buf„r
 + 
off£t
, (req->len));

1436 
off£t
 = off£à+ (
ªq
->
Àn
);

1438 
ªq
->
Àn
 = 
	`¡ohl
(req->len);

1439 
	`mem˝y
(&
ªq
->
¥ŸocﬁVîsi⁄
, 
buf„r
 + 
off£t
, (req->protocolVersion));

1440 
off£t
 = off£à+ (
ªq
->
¥ŸocﬁVîsi⁄
);

1442 
ªq
->
¥ŸocﬁVîsi⁄
 = 
	`¡ohl
(req->protocolVersion);

1443 
	`mem˝y
(&
ªq
->
timeOut
, 
buf„r
 + 
off£t
, (req->timeOut));

1444 
off£t
 = off£à+ (
ªq
->
timeOut
);

1446 
ªq
->
timeOut
 = 
	`¡ohl
(req->timeOut);

1447 
	`mem˝y
(&
ªq
->
£ssi⁄Id
, 
buf„r
 + 
off£t
, (req->sessionId));

1448 
off£t
 = off£à+ (
ªq
->
£ssi⁄Id
);

1450 
ªq
->
£ssi⁄Id
 = 
	`ht⁄Œ
(req->sessionId);

1451 
	`mem˝y
(&
ªq
->
∑sswd_Àn
, 
buf„r
 + 
off£t
, (req->passwd_len));

1452 
off£t
 = off£à+ (
ªq
->
∑sswd_Àn
);

1454 
ªq
->
∑sswd_Àn
 = 
	`¡ohl
(req->passwd_len);

1455 
	`mem˝y
(
ªq
->
∑sswd
, 
buf„r
 + 
off£t
, (req->passwd));

1457 
	}
}

1459 
	$¥ime_c⁄√˘i⁄
(
zh™dÀ_t
 *
zh
)

1461 
rc
;

1463 
buf„r_ªq
[
HANDSHAKE_REQ_SIZE
];

1464 
Àn
 = (
buf„r_ªq
);

1465 
hÀn
 = 0;

1466 
c⁄√˘_ªq
 
ªq
;

1467 
ªq
.
¥ŸocﬁVîsi⁄
 = 0;

1468 
ªq
.
£ssi⁄Id
 = 
zh
->
˛õ¡_id
.client_id;

1469 
ªq
.
∑sswd_Àn
 = ‘eq.
∑sswd
);

1470 
	`mem˝y
(
ªq
.
∑sswd
, 
zh
->
˛õ¡_id
.passwd, (zh->client_id.passwd));

1471 
ªq
.
timeOut
 = 
zh
->
ªcv_timeout
;

1472 
ªq
.
œ°ZxidSìn
 = 
zh
->
œ°_zxid
;

1473 
hÀn
 = 
	`ht⁄l
(
Àn
);

1475 
rc
=
	`zookì≥r_£nd
(
zh
->
fd
, &
hÀn
, (
Àn
));

1476 
	`£rülize_¥ime_c⁄√˘
(&
ªq
, 
buf„r_ªq
);

1477 
rc
Ùc<0 ?Ñ¯: 
	`zookì≥r_£nd
(
zh
->
fd
, 
buf„r_ªq
, 
Àn
);

1478 i‡(
rc
<0) {

1479  
	`h™dÀ_sockë_îr‹_msg
(
zh
, 
__LINE__
, 
ZCONNECTIONLOSS
,

1480 "ÁûedÅÿ£ndá h™dshakê∑ckë: %s", 
	`°ªº‹
(
î∫o
));

1482 
zh
->
°©e
 = 
ZOO_ASSOCIATING_STATE
;

1484 
zh
->
öput_buf„r
 = &zh->
¥imî_buf„r
;

1488 
zh
->
öput_buf„r
->
cuº_off£t
 = 4;

1490  
ZOK
;

1491 
	}
}

1493 
ölöe
 
	$ˇlcuœã_öãrvÆ
(c⁄° 
timevÆ
 *
°¨t
,

1494 c⁄° 
timevÆ
 *
íd
)

1496 
öãrvÆ
;

1497 
timevÆ
 
i
 = *
íd
;

1498 
i
.
tv_£c
 -
°¨t
->tv_sec;

1499 
i
.
tv_u£c
 -
°¨t
->tv_usec;

1500 
öãrvÆ
 = 
i
.
tv_£c
 * 1000 + (i.
tv_u£c
/1000);

1501  
öãrvÆ
;

1502 
	}
}

1504 
timevÆ
 
	$gë_timevÆ
(
öãrvÆ
)

1506 
timevÆ
 
tv
;

1507 i‡(
öãrvÆ
 < 0) {

1508 
öãrvÆ
 = 0;

1510 
tv
.
tv_£c
 = 
öãrvÆ
/1000;

1511 
tv
.
tv_u£c
 = (
öãrvÆ
%1000)*1000;

1512  
tv
;

1513 
	}
}

1515 
add_void_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
void_com∂ëi⁄_t
 
dc
,

1516 c⁄° *
d©a
);

1517 
add_°rög_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
,

1518 
°rög_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
);

1520 
	$£nd_pög
(
zh™dÀ_t
* 
zh
)

1522 
rc
;

1523 
ﬂrchive
 *
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

1524 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
 ,
PING_XID
), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_PING_OP
) };

1526 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

1527 
	`íãr_¸ôiˇl
(
zh
);

1528 
	`gëtimeofday
(&
zh
->
œ°_pög
, 0);

1529 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_void_com∂ëi⁄
(
zh
, 
h
.
xid
, 0, 0);

1530 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

1531 
	`gë_buf„r_Àn
(
ﬂ
));

1532 
	`Àave_¸ôiˇl
(
zh
);

1533 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

1534  
rc
<0 ?Ñ¯: 
	`ad≠t‹_£nd_queue
(
zh
, 0);

1535 
	}
}

1537 #ifde‡
WIN32


1538 
	$zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, 
SOCKET
 *
fd
, *
öãª°
,

1539 
timevÆ
 *
tv
)

1542 
ULONG
 
n⁄blockög_Êag
 = 1;

1544 
	$zookì≥r_öãª°
(
zh™dÀ_t
 *
zh
, *
fd
, *
öãª°
,

1545 
timevÆ
 *
tv
)

1548 
timevÆ
 
now
;

1549 if(
zh
==0 || 
fd
==0 ||
öãª°
==0 || 
tv
==0)

1550  
ZBADARGUMENTS
;

1551 i‡(
	`is_uƒecovîabÀ
(
zh
))

1552  
ZINVALIDSTATE
;

1553 
	`gëtimeofday
(&
now
, 0);

1554 if(
zh
->
√xt_dódlöe
.
tv_£c
!=0 || zh->√xt_dódlöe.
tv_u£c
!=0){

1555 
time_À·
 = 
	`ˇlcuœã_öãrvÆ
(&
zh
->
√xt_dódlöe
, &
now
);

1556 i‡(
time_À·
 > 10)

1557 
	`LOG_WARN
(("Ex˚eded dódlöêby %dms", 
time_À·
));

1559 
	`≠i_¥ﬁog
(
zh
);

1560 *
fd
 = 
zh
->fd;

1561 *
öãª°
 = 0;

1562 
tv
->
tv_£c
 = 0;

1563 
tv
->
tv_u£c
 = 0;

1564 i‡(*
fd
 == -1) {

1565 i‡(
zh
->
c⁄√˘_ödex
 =zh->
addrs_cou¡
) {

1567 
zh
->
c⁄√˘_ödex
 = 0;

1569 
rc
;

1570 #ifde‡
WIN32


1571 
íabÀ_t˝_nodñay
 = 1;

1573 
íabÀ_t˝_nodñay
 = 1;

1575 
ss‹esu…
;

1577 
zh
->
fd
 = 
	`sockë
(zh->
addrs
[zh->
c⁄√˘_ödex
].
ss_Ámûy
, 
SOCK_STREAM
, 0);

1578 i‡(
zh
->
fd
 < 0) {

1579  
	`≠i_ïûog
(
zh
,
	`h™dÀ_sockë_îr‹_msg
(zh,
__LINE__
,

1580 
ZSYSTEMERROR
, "socket() call failed"));

1582 
ss‹esu…
 = 
	`£tsock›t
(
zh
->
fd
, 
IPPROTO_TCP
, 
TCP_NODELAY
, &
íabÀ_t˝_nodñay
, (enable_tcp_nodelay));

1583 i‡(
ss‹esu…
 != 0) {

1584 
	`LOG_WARN
(("UnableÅo set TCP_NODELAY, operationÜatency may beÉffected"));

1586 #ifde‡
WIN32


1587 
	`io˘lsockë
(
zh
->
fd
, 
FIONBIO
, &
n⁄blockög_Êag
);

1589 
	`f˙é
(
zh
->
fd
, 
F_SETFL
, 
O_NONBLOCK
|f˙é(zh->fd, 
F_GETFL
, 0));

1591 #i‡
	`deföed
(
AF_INET6
)

1592 i‡(
zh
->
addrs
[zh->
c⁄√˘_ödex
].
ss_Ámûy
 =
AF_INET6
) {

1593 
rc
 = 
	`c⁄√˘
(
zh
->
fd
, (
sockaddr
*Ë&zh->
addrs
[zh->
c⁄√˘_ödex
], (
sockaddr_ö6
));

1596 
	`LOG_DEBUG
(("[zk] connect()\n"));

1599 
rc
 = 
	`c⁄√˘
(
zh
->
fd
, (
sockaddr
*Ë&zh->
addrs
[zh->
c⁄√˘_ödex
], (
sockaddr_ö
));

1600 #ifde‡
WIN32


1601 
	`gë_î∫o
();

1604 i‡(
rc
 == -1) {

1608 i‡(
î∫o
 =
EWOULDBLOCK
 ||Éºnÿ=
EINPROGRESS
)

1609 
zh
->
°©e
 = 
ZOO_CONNECTING_STATE
;

1611  
	`≠i_ïûog
(
zh
,
	`h™dÀ_sockë_îr‹_msg
(zh,
__LINE__
,

1612 
ZCONNECTIONLOSS
,"connect() call failed"));

1614 if((
rc
=
	`¥ime_c⁄√˘i⁄
(
zh
))!=0)

1615  
	`≠i_ïûog
(
zh
,
rc
);

1617 
	`LOG_INFO
(("Initiated connectionÅo server [%s]",

1618 
	`f‹m©_ídpoöt_öfo
(&
zh
->
addrs
[zh->
c⁄√˘_ödex
])));

1621 *
fd
 = 
zh
->fd;

1622 *
tv
 = 
	`gë_timevÆ
(
zh
->
ªcv_timeout
/3);

1623 
zh
->
œ°_ªcv
 = 
now
;

1624 
zh
->
œ°_£nd
 = 
now
;

1625 
zh
->
œ°_pög
 = 
now
;

1627 i‡(
zh
->
fd
 != -1) {

1628 
idÀ_ªcv
 = 
	`ˇlcuœã_öãrvÆ
(&
zh
->
œ°_ªcv
, &
now
);

1629 
idÀ_£nd
 = 
	`ˇlcuœã_öãrvÆ
(&
zh
->
œ°_£nd
, &
now
);

1630 
ªcv_to
 = 
zh
->
ªcv_timeout
*2/3 - 
idÀ_ªcv
;

1631 
£nd_to
 = 
zh
->
ªcv_timeout
/3;

1633 i‡(
ªcv_to
 <= 0) {

1635 #ifde‡
WIN32


1636 
î∫o
 = 
WSAETIMEDOUT
;

1638 
î∫o
 = 
ETIMEDOUT
;

1640 *
öãª°
=0;

1641 *
tv
 = 
	`gë_timevÆ
(0);

1642  
	`≠i_ïûog
(
zh
,
	`h™dÀ_sockë_îr‹_msg
(zh,

1643 
__LINE__
,
ZOPERATIONTIMEOUT
,

1645 
	`f‹m©_ídpoöt_öfo
(&
zh
->
addrs
[zh->
c⁄√˘_ödex
]),

1646 -
ªcv_to
));

1651 i‡(
zh
->
°©e
==
ZOO_CONNECTED_STATE
) {

1652 
£nd_to
 = 
zh
->
ªcv_timeout
/3 - 
idÀ_£nd
;

1653 i‡(
£nd_to
 <0 && 
zh
->
£¡_ªque°s
.
hód
==0) {

1656 
rc
=
	`£nd_pög
(
zh
);

1657 i‡(
rc
 < 0){

1658 
	`LOG_ERROR
(("ÁûedÅÿ£nd PINGÑeque° (zkÑëcode=%d)",
rc
));

1659  
	`≠i_ïûog
(
zh
,
rc
);

1661 
£nd_to
 = 
zh
->
ªcv_timeout
/3;

1665 *
tv
 = 
	`gë_timevÆ
(
ªcv_to
 < 
£nd_to
?Ñecv_to:send_to);

1666 
zh
->
√xt_dódlöe
.
tv_£c
 = 
now
.tv_£¯+ 
tv
->tv_sec;

1667 
zh
->
√xt_dódlöe
.
tv_u£c
 = 
now
.tv_u£¯+ 
tv
->tv_usec;

1668 i‡(
zh
->
√xt_dódlöe
.
tv_u£c
 > 1000000) {

1669 
zh
->
√xt_dódlöe
.
tv_£c
 +zh->√xt_dódlöe.
tv_u£c
 / 1000000;

1670 
zh
->
√xt_dódlöe
.
tv_u£c
 = zh->next_deadline.tv_usec % 1000000;

1672 *
öãª°
 = 
ZOOKEEPER_READ
;

1675 i‡((
zh
->
to_£nd
.
hód
 && (zh->
°©e
 =
ZOO_CONNECTED_STATE
))

1676 || 
zh
->
°©e
 =
ZOO_CONNECTING_STATE
) {

1677 *
öãª°
 |
ZOOKEEPER_WRITE
;

1680  
	`≠i_ïûog
(
zh
,
ZOK
);

1681 
	}
}

1683 
	$check_evíts
(
zh™dÀ_t
 *
zh
, 
evíts
)

1685 i‡(
zh
->
fd
 == -1)

1686  
ZINVALIDSTATE
;

1687 i‡((
evíts
&
ZOOKEEPER_WRITE
)&&(
zh
->
°©e
 =
ZOO_CONNECTING_STATE
)) {

1688 
rc
, 
îr‹
;

1689 
sockÀn_t
 
Àn
 = (
îr‹
);

1690 
rc
 = 
	`gësock›t
(
zh
->
fd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr‹
, &
Àn
);

1694 i‡(
rc
 < 0 || 
îr‹
) {

1695 i‡(
rc
 == 0)

1696 
î∫o
 = 
îr‹
;

1697  
	`h™dÀ_sockë_îr‹_msg
(
zh
, 
__LINE__
,
ZCONNECTIONLOSS
,

1700 if((
rc
=
	`¥ime_c⁄√˘i⁄
(
zh
))!=0)

1701  
rc
;

1702 
	`LOG_INFO
(("initiated connectionÅo server [%s]",

1703 
	`f‹m©_ídpoöt_öfo
(&
zh
->
addrs
[zh->
c⁄√˘_ödex
])));

1704  
ZOK
;

1706 i‡(
zh
->
to_£nd
.
hód
 && (
evíts
&
ZOOKEEPER_WRITE
)) {

1708 
rc
=
	`Êush_£nd_queue
(
zh
,0);

1709 i‡(
rc
 < 0)

1710  
	`h™dÀ_sockë_îr‹_msg
(
zh
,
__LINE__
,
ZCONNECTIONLOSS
,

1713 i‡(
evíts
&
ZOOKEEPER_READ
) {

1714 
rc
;

1715 i‡(
zh
->
öput_buf„r
 == 0) {

1716 
zh
->
öput_buf„r
 = 
	`Æloˇã_buf„r
(0,0);

1719 
rc
 = 
	`ªcv_buf„r
(
zh
->
fd
, zh->
öput_buf„r
);

1720 i‡(
rc
 < 0) {

1721  
	`h™dÀ_sockë_îr‹_msg
(
zh
, 
__LINE__
,
ZCONNECTIONLOSS
,

1724 i‡(
rc
 > 0) {

1725 
	`gëtimeofday
(&
zh
->
œ°_ªcv
, 0);

1726 i‡(
zh
->
öput_buf„r
 !&zh->
¥imî_buf„r
) {

1727 
	`queue_buf„r
(&
zh
->
to_¥o˚ss
, zh->
öput_buf„r
, 0);

1729 
öt64_t
 
ﬁdid
,
√wid
;

1731 
	`de£rülize_¥ime_ª•⁄£
(&
zh
->
¥imî_°‹age
, zh->
¥imî_buf„r
.
buf„r
);

1734 
ﬁdid
 = 
zh
->
˛õ¡_id
.client_id;

1735 
√wid
 = 
zh
->
¥imî_°‹age
.
£ssi⁄Id
;

1736 i‡(
ﬁdid
 !0 && oldid !
√wid
) {

1737 
zh
->
°©e
 = 
ZOO_EXPIRED_SESSION_STATE
;

1738 
î∫o
 = 
ESTALE
;

1739  
	`h™dÀ_sockë_îr‹_msg
(
zh
,
__LINE__
,
ZSESSIONEXPIRED
,

1740 "£ssi⁄Id=%#Œx ha†expúed.",
ﬁdid
);

1742 
zh
->
ªcv_timeout
 = zh->
¥imî_°‹age
.
timeOut
;

1743 
zh
->
˛õ¡_id
.˛õ¡_id = 
√wid
;

1745 
	`mem˝y
(
zh
->
˛õ¡_id
.
∑sswd
, &zh->
¥imî_°‹age
.passwd,

1746 (
zh
->
˛õ¡_id
.
∑sswd
));

1747 
zh
->
°©e
 = 
ZOO_CONNECTED_STATE
;

1748 
	`LOG_INFO
(("sessionÉstablishment complete on server [%s], sessionId=%#llx,ÇegotiatedÅimeout=%d",

1749 
	`f‹m©_ídpoöt_öfo
(&
zh
->
addrs
[zh->
c⁄√˘_ödex
]),

1750 
√wid
, 
zh
->
ªcv_timeout
));

1753 
	`£nd_£t_w©ches
(
zh
);

1755 
	`£nd_auth_öfo
(
zh
);

1756 
	`LOG_DEBUG
(("Callingá watcher forá ZOO_SESSION_EVENTándÅhe state=ZOO_CONNECTED_STATE"));

1757 
zh
->
öput_buf„r
 = 0;

1758 
	`PROCESS_SESSION_EVENT
(
zh
, 
ZOO_CONNECTED_STATE
);

1761 
zh
->
öput_buf„r
 = 0;

1765  
ZNOTHING
;

1768  
ZOK
;

1769 
	}
}

1771 
	$≠i_¥ﬁog
(
zh™dÀ_t
* 
zh
)

1773 
	`öc_ªf_cou¡î
(
zh
,1);

1774 
	}
}

1776 
	$≠i_ïûog
(
zh™dÀ_t
 *
zh
,
rc
)

1778 if(
	`öc_ªf_cou¡î
(
zh
,-1)==0 && zh->
˛o£_ªque°ed
!=0)

1779 
	`zookì≥r_˛o£
(
zh
);

1780  
rc
;

1781 
	}
}

1783 
__©åibuã__
((
unu£d
)Ë
	$¥öt_com∂ëi⁄_queue
(
zh™dÀ_t
 *
zh
)

1785 
com∂ëi⁄_li°_t
* 
˝å
;

1787 if(
logLevñ
<
ZOO_LOG_LEVEL_DEBUG
) ;

1789 
	`Ârötf
(
LOGSTREAM
,"Completion queue: ");

1790 i‡(
zh
->
£¡_ªque°s
.
hód
==0) {

1791 
	`Ârötf
(
LOGSTREAM
,"empty\n");

1795 
˝å
=
zh
->
£¡_ªque°s
.
hód
;

1796 
˝å
){

1797 
	`Ârötf
(
LOGSTREAM
,"%d,",
˝å
->
xid
);

1798 
˝å
=˝å->
√xt
;

1800 
	`Ârötf
(
LOGSTREAM
,"end\n");

1801 
	}
}

1805 
	$queue_£ssi⁄_evít
(
zh™dÀ_t
 *
zh
, 
°©e
)

1807 
rc
;

1808 
W©chîEvít
 
evt
 = { 
ZOO_SESSION_EVENT
, 
°©e
, "" };

1809 
RïlyHódî
 
hdr
 = { 
WATCHER_EVENT_XID
, 0, 0 };

1810 
ﬂrchive
 *
ﬂ
;

1811 
com∂ëi⁄_li°_t
 *
˝å
;

1813 i‡((
ﬂ
=
	`¸óã_buf„r_ﬂrchive
())==
NULL
) {

1814 
	`LOG_ERROR
(("out of memory"));

1815 
îr‹
;

1817 
rc
 = 
	`£rülize_RïlyHódî
(
ﬂ
, "hdr", &
hdr
);

1818 
rc
 =Ñc<0?rc: 
	`£rülize_W©chîEvít
(
ﬂ
, "evít", &
evt
);

1819 if(
rc
<0){

1820 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 1);

1821 
îr‹
;

1823 
˝å
 = 
	`¸óã_com∂ëi⁄_íåy
(
WATCHER_EVENT_XID
,-1,0,0,0,0);

1824 
˝å
->
buf„r
 = 
	`Æloˇã_buf„r
(
	`gë_buf„r
(
ﬂ
), 
	`gë_buf„r_Àn
(oa));

1825 
˝å
->
buf„r
->
cuº_off£t
 = 
	`gë_buf„r_Àn
(
ﬂ
);

1826 i‡(!
˝å
->
buf„r
) {

1827 
	`‰ì
(
˝å
);

1828 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 1);

1829 
îr‹
;

1832 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

1833 
˝å
->
c
.
w©chî_ªsu…
 = 
	`cﬁÀ˘W©chîs
(
zh
, 
ZOO_SESSION_EVENT
, "");

1834 
	`queue_com∂ëi⁄
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
, 
˝å
, 0);

1835 i‡(
	`¥o˚ss_async
(
zh
->
out°™dög_sync
)) {

1836 
	`¥o˚ss_com∂ëi⁄s
(
zh
);

1838  
ZOK
;

1839 
îr‹
:

1840 
î∫o
=
ENOMEM
;

1841  
ZSYSTEMERROR
;

1842 
	}
}

1845 
com∂ëi⁄_li°_t
 *
	$dequeue_com∂ëi⁄
(
com∂ëi⁄_hód_t
 *
li°
)

1847 
com∂ëi⁄_li°_t
 *
˝å
;

1848 
	`lock_com∂ëi⁄_li°
(
li°
);

1849 
˝å
 = 
li°
->
hód
;

1850 i‡(
˝å
) {

1851 
li°
->
hód
 = 
˝å
->
√xt
;

1852 i‡(!
li°
->
hód
) {

1853 
	`as£π
(
li°
->
œ°
 =
˝å
);

1854 
li°
->
œ°
 = 0;

1857 
	`u∆ock_com∂ëi⁄_li°
(
li°
);

1858  
˝å
;

1859 
	}
}

1861 
	$¥o˚ss_sync_com∂ëi⁄
(

1862 
com∂ëi⁄_li°_t
 *
˝å
,

1863 
sync_com∂ëi⁄
 *
sc
,

1864 
ürchive
 *
ü
,

1865 
zh™dÀ_t
 *
zh
)

1867 
	`LOG_DEBUG
(("Processing sync_completion withÅype=%d xid=%#xÑc=%d",

1868 
˝å
->
c
.
ty≥
, c±r->
xid
, 
sc
->
rc
));

1870 
˝å
->
c
.
ty≥
) {

1871 
COMPLETION_DATA
:

1872 i‡(
sc
->
rc
==0) {

1873 
GëD©aRe•⁄£
 
ªs
;

1874 
Àn
;

1875 
	`de£rülize_GëD©aRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1876 i‡(
ªs
.
d©a
.
Àn
 <
sc
->
u
.d©a.
buff_Àn
) {

1877 
Àn
 = 
ªs
.
d©a
.len;

1879 
Àn
 = 
sc
->
u
.
d©a
.
buff_Àn
;

1881 
sc
->
u
.
d©a
.
buff_Àn
 = 
Àn
;

1884 i‡(
Àn
 == -1) {

1885 
sc
->
u
.
d©a
.
buf„r
 = 
NULL
;

1887 
	`mem˝y
(
sc
->
u
.
d©a
.
buf„r
, 
ªs
.d©a.
buff
, 
Àn
);

1889 
sc
->
u
.
d©a
.
°©
 = 
ªs
.stat;

1890 
	`dóŒoˇã_GëD©aRe•⁄£
(&
ªs
);

1893 
COMPLETION_STAT
:

1894 i‡(
sc
->
rc
==0) {

1895 
SëD©aRe•⁄£
 
ªs
;

1896 
	`de£rülize_SëD©aRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1897 
sc
->
u
.
°©
 = 
ªs
.stat;

1898 
	`dóŒoˇã_SëD©aRe•⁄£
(&
ªs
);

1901 
COMPLETION_STRINGLIST
:

1902 i‡(
sc
->
rc
==0) {

1903 
GëChûdªnRe•⁄£
 
ªs
;

1904 
	`de£rülize_GëChûdªnRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1905 
sc
->
u
.
°rs2
 = 
ªs
.
chûdªn
;

1910 
COMPLETION_STRINGLIST_STAT
:

1911 i‡(
sc
->
rc
==0) {

1912 
GëChûdªn2Re•⁄£
 
ªs
;

1913 
	`de£rülize_GëChûdªn2Re•⁄£
(
ü
, "ª∂y", &
ªs
);

1914 
sc
->
u
.
°rs_°©
.
°rs2
 = 
ªs
.
chûdªn
;

1915 
sc
->
u
.
°rs_°©
.
°©2
 = 
ªs
.
°©
;

1920 
COMPLETION_STRING
:

1921 i‡(
sc
->
rc
==0) {

1922 
Cª©eRe•⁄£
 
ªs
;

1923 
Àn
;

1924 c⁄° * 
˛õ¡_∑th
;

1925 
	`de£rülize_Cª©eRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1927 
˛õ¡_∑th
 = 
	`sub_°rög
(
zh
, 
ªs
.
∑th
);

1928 
Àn
 = 
	`°æí
(
˛õ¡_∑th
Ë+ 1;i‡÷í > 
sc
->
u
.
°r
.
°r_Àn
) {

1929 
Àn
 = 
sc
->
u
.
°r
.
°r_Àn
;

1931 i‡(
Àn
 > 0) {

1932 
	`mem˝y
(
sc
->
u
.
°r
.°r, 
˛õ¡_∑th
, 
Àn
 - 1);

1933 
sc
->
u
.
°r
.°r[
Àn
 - 1] = '\0';

1935 
	`‰ì_du∂iˇã_∑th
(
˛õ¡_∑th
, 
ªs
.
∑th
);

1936 
	`dóŒoˇã_Cª©eRe•⁄£
(&
ªs
);

1939 
COMPLETION_ACLLIST
:

1940 i‡(
sc
->
rc
==0) {

1941 
GëACLRe•⁄£
 
ªs
;

1942 
	`de£rülize_GëACLRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1943 
sc
->
u
.
a˛
.a˛ = 
ªs
.acl;

1944 
sc
->
u
.
a˛
.
°©
 = 
ªs
.stat;

1949 
COMPLETION_VOID
:

1951 
COMPLETION_MULTI
:

1952 
sc
->
rc
 = 
	`de£rülize_mu…i
(
˝å
->
xid
, c±r, 
ü
);

1955 
	`LOG_DEBUG
(("Unsuµ‹ãd com∂ëi⁄Åy≥=%d", 
˝å
->
c
.
ty≥
));

1958 
	}
}

1960 
	$de£rülize_mu…i
(
xid
, 
com∂ëi⁄_li°_t
 *
˝å
, 
ürchive
 *
ü
)

1962 
rc
 = 0;

1963 
com∂ëi⁄_hód_t
 *
˛i°
 = &
˝å
->
c
.clist;

1964 
Mu…iHódî
 
mhdr
 = { 
	`STRUCT_INITIALIZER
(
ty≥
 , 0), STRUCT_INITIALIZER(
d⁄e
 , 0), STRUCT_INITIALIZER(
îr
 , 0) };

1965 
	`as£π
(
˛i°
);

1966 
	`de£rülize_Mu…iHódî
(
ü
, "mu…ihódî", &
mhdr
);

1967 !
mhdr
.
d⁄e
) {

1968 
com∂ëi⁄_li°_t
 *
íåy
 = 
	`dequeue_com∂ëi⁄
(
˛i°
);

1969 
	`as£π
(
íåy
);

1971 i‡(
mhdr
.
ty≥
 == -1) {

1972 
Eº‹Re•⁄£
 
î
;

1973 
	`de£rülize_Eº‹Re•⁄£
(
ü
, "îr‹", &
î
);

1974 
mhdr
.
îr
 = 
î
.err ;

1975 i‡(
rc
 =0 && 
î
.
îr
 !0 &&Ér.î∏!
ZRUNTIMEINCONSISTENCY
) {

1976 
rc
 = 
î
.
îr
;

1980 
	`de£rülize_ª•⁄£
(
íåy
->
c
.
ty≥
, 
xid
, 
mhdr
.ty≥ =-1, mhdr.
îr
,É¡ry, 
ü
);

1981 
	`de£rülize_Mu…iHódî
(
ü
, "mu…ihódî", &
mhdr
);

1984  
rc
;

1985 
	}
}

1987 
	$de£rülize_ª•⁄£
(
ty≥
, 
xid
, 
Áûed
, 
rc
, 
com∂ëi⁄_li°_t
 *
˝å
, 
ürchive
 *
ü
)

1989 
ty≥
) {

1990 
COMPLETION_DATA
:

1991 
	`LOG_DEBUG
(("Calling COMPLETION_DATA for xid=%#x failed=%dÑc=%d",

1992 
˝å
->
xid
, 
Áûed
, 
rc
));

1993 i‡(
Áûed
) {

1994 
˝å
->
c
.
	`d©a_ªsu…
(
rc
, 0, 0, 0, c±r->
d©a
);

1996 
GëD©aRe•⁄£
 
ªs
;

1997 
	`de£rülize_GëD©aRe•⁄£
(
ü
, "ª∂y", &
ªs
);

1998 
˝å
->
c
.
	`d©a_ªsu…
(
rc
, 
ªs
.
d©a
.
buff
,Ñes.d©a.
Àn
,

1999 &
ªs
.
°©
, 
˝å
->
d©a
);

2000 
	`dóŒoˇã_GëD©aRe•⁄£
(&
ªs
);

2003 
COMPLETION_STAT
:

2004 
	`LOG_DEBUG
(("Calling COMPLETION_STAT for xid=%#x failed=%dÑc=%d",

2005 
˝å
->
xid
, 
Áûed
, 
rc
));

2006 i‡(
Áûed
) {

2007 
˝å
->
c
.
	`°©_ªsu…
(
rc
, 0, c±r->
d©a
);

2009 
SëD©aRe•⁄£
 
ªs
;

2010 
	`de£rülize_SëD©aRe•⁄£
(
ü
, "ª∂y", &
ªs
);

2011 
˝å
->
c
.
	`°©_ªsu…
(
rc
, &
ªs
.
°©
, c±r->
d©a
);

2012 
	`dóŒoˇã_SëD©aRe•⁄£
(&
ªs
);

2015 
COMPLETION_STRINGLIST
:

2016 
	`LOG_DEBUG
(("Calling COMPLETION_STRINGLIST for xid=%#x failed=%dÑc=%d",

2017 
˝å
->
xid
, 
Áûed
, 
rc
));

2018 i‡(
Áûed
) {

2019 
˝å
->
c
.
	`°rögs_ªsu…
(
rc
, 0, c±r->
d©a
);

2021 
GëChûdªnRe•⁄£
 
ªs
;

2022 
	`de£rülize_GëChûdªnRe•⁄£
(
ü
, "ª∂y", &
ªs
);

2023 
˝å
->
c
.
	`°rögs_ªsu…
(
rc
, &
ªs
.
chûdªn
, c±r->
d©a
);

2024 
	`dóŒoˇã_GëChûdªnRe•⁄£
(&
ªs
);

2027 
COMPLETION_STRINGLIST_STAT
:

2028 
	`LOG_DEBUG
(("Calling COMPLETION_STRINGLIST_STAT for xid=%#x failed=%dÑc=%d",

2029 
˝å
->
xid
, 
Áûed
, 
rc
));

2030 i‡(
Áûed
) {

2031 
˝å
->
c
.
	`°rögs_°©_ªsu…
(
rc
, 0, 0, c±r->
d©a
);

2033 
GëChûdªn2Re•⁄£
 
ªs
;

2034 
	`de£rülize_GëChûdªn2Re•⁄£
(
ü
, "ª∂y", &
ªs
);

2035 
˝å
->
c
.
	`°rögs_°©_ªsu…
(
rc
, &
ªs
.
chûdªn
, &ªs.
°©
, c±r->
d©a
);

2036 
	`dóŒoˇã_GëChûdªn2Re•⁄£
(&
ªs
);

2039 
COMPLETION_STRING
:

2040 
	`LOG_DEBUG
(("Calling COMPLETION_STRING for xid=%#x failed=%d,Ñc=%d",

2041 
˝å
->
xid
, 
Áûed
, 
rc
));

2042 i‡(
Áûed
) {

2043 
˝å
->
c
.
	`°rög_ªsu…
(
rc
, 0, c±r->
d©a
);

2045 
Cª©eRe•⁄£
 
ªs
;

2046 
	`de£rülize_Cª©eRe•⁄£
(
ü
, "ª∂y", &
ªs
);

2047 
˝å
->
c
.
	`°rög_ªsu…
(
rc
, 
ªs
.
∑th
, c±r->
d©a
);

2048 
	`dóŒoˇã_Cª©eRe•⁄£
(&
ªs
);

2051 
COMPLETION_ACLLIST
:

2052 
	`LOG_DEBUG
(("Calling COMPLETION_ACLLIST for xid=%#x failed=%dÑc=%d",

2053 
˝å
->
xid
, 
Áûed
, 
rc
));

2054 i‡(
Áûed
) {

2055 
˝å
->
c
.
	`a˛_ªsu…
(
rc
, 0, 0, c±r->
d©a
);

2057 
GëACLRe•⁄£
 
ªs
;

2058 
	`de£rülize_GëACLRe•⁄£
(
ü
, "ª∂y", &
ªs
);

2059 
˝å
->
c
.
	`a˛_ªsu…
(
rc
, &
ªs
.
a˛
, &ªs.
°©
, c±r->
d©a
);

2060 
	`dóŒoˇã_GëACLRe•⁄£
(&
ªs
);

2063 
COMPLETION_VOID
:

2064 
	`LOG_DEBUG
(("Calling COMPLETION_VOID for xid=%#x failed=%dÑc=%d",

2065 
˝å
->
xid
, 
Áûed
, 
rc
));

2066 i‡(
xid
 =
PING_XID
) {

2069 
	`as£π
(
˝å
->
c
.
void_ªsu…
);

2070 
˝å
->
c
.
	`void_ªsu…
(
rc
, c±r->
d©a
);

2073 
COMPLETION_MULTI
:

2074 
	`LOG_DEBUG
(("Calling COMPLETION_MULTI for xid=%#x failed=%dÑc=%d",

2075 
˝å
->
xid
, 
Áûed
, 
rc
));

2076 
rc
 = 
	`de£rülize_mu…i
(
xid
, 
˝å
, 
ü
);

2077 
	`as£π
(
˝å
->
c
.
void_ªsu…
);

2078 
˝å
->
c
.
	`void_ªsu…
(
rc
, c±r->
d©a
);

2081 
	`LOG_DEBUG
(("Unsuµ‹ãd com∂ëi⁄Åy≥=%d", 
˝å
->
c
.
ty≥
));

2083 
	}
}

2087 
	$¥o˚ss_com∂ëi⁄s
(
zh™dÀ_t
 *
zh
)

2089 
com∂ëi⁄_li°_t
 *
˝å
;

2090 (
˝å
 = 
	`dequeue_com∂ëi⁄
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
)) != 0) {

2091 
RïlyHódî
 
hdr
;

2092 
buf„r_li°_t
 *
b±r
 = 
˝å
->
buf„r
;

2093 
ürchive
 *
ü
 = 
	`¸óã_buf„r_ürchive
(
b±r
->
buf„r
,

2094 
b±r
->
Àn
);

2095 
	`de£rülize_RïlyHódî
(
ü
, "hdr", &
hdr
);

2097 i‡(
hdr
.
xid
 =
WATCHER_EVENT_XID
) {

2098 
ty≥
, 
°©e
;

2099 
W©chîEvít
 
evt
;

2100 
	`de£rülize_W©chîEvít
(
ü
, "evít", &
evt
);

2102 
ty≥
 = 
evt
.type;

2103 
°©e
 = 
evt
.state;

2105 
	`LOG_DEBUG
(("Callingá watcher forÇode [%s],Åype = %dÉvent=%s",

2106 (
evt
.
∑th
==
NULL
?"NULL":evt.∑th), 
˝å
->
c
.
ty≥
,

2107 
	`w©chîEvít2Såög
(
ty≥
)));

2108 
	`dñivîW©chîs
(
zh
,
ty≥
,
°©e
,
evt
.
∑th
, &
˝å
->
c
.
w©chî_ªsu…
);

2109 
	`dóŒoˇã_W©chîEvít
(&
evt
);

2111 
	`de£rülize_ª•⁄£
(
˝å
->
c
.
ty≥
, 
hdr
.
xid
, hdr.
îr
 !0, hdr.îr, c±r, 
ü
);

2113 
	`de°roy_com∂ëi⁄_íåy
(
˝å
);

2114 
	`˛o£_buf„r_ürchive
(&
ü
);

2116 
	}
}

2118 
	$isSockëRódabÀ
(
zh™dÀ_t
* 
zh
)

2120 #i‚de‡
WIN32


2121 
pﬁlfd
 
fds
;

2122 
fds
.
fd
 = 
zh
->fd;

2123 
fds
.
evíts
 = 
POLLIN
;

2124 i‡(
	`pﬁl
(&
fds
,1,0)<=0) {

2126 
zh
->
sockë_ªadabÀ
.
tv_£c
=zh->sockë_ªadabÀ.
tv_u£c
=0;

2129 
fd_£t
 
rfds
;

2130 
timevÆ
 
waôtime
 = {0, 0};

2131 
	`FD_ZERO
(&
rfds
);

2132 
	`FD_SET
–
zh
->
fd
 , &
rfds
);

2133 i‡(
	`£À˘
(0, &
rfds
, 
NULL
, NULL, &
waôtime
) <= 0){

2135 
zh
->
sockë_ªadabÀ
.
tv_£c
=zh->sockë_ªadabÀ.
tv_u£c
=0;

2139 
	`gëtimeofday
(&
zh
->
sockë_ªadabÀ
,0);

2141 
	}
}

2143 
	$checkRe•⁄£L©ícy
(
zh™dÀ_t
* 
zh
)

2145 
dñay
;

2146 
timevÆ
 
now
;

2148 if(
zh
->
sockë_ªadabÀ
.
tv_£c
==0)

2151 
	`gëtimeofday
(&
now
,0);

2152 
dñay
=
	`ˇlcuœã_öãrvÆ
(&
zh
->
sockë_ªadabÀ
, &
now
);

2153 if(
dñay
>20)

2154 
	`LOG_DEBUG
(("Thêfﬁlowög sîvîÑe•⁄£ ha†•íà©Üó° %dm†sôtög i¿thê˛õ¡ sockëÑecv buf„r",
dñay
));

2156 
zh
->
sockë_ªadabÀ
.
tv_£c
=zh->sockë_ªadabÀ.
tv_u£c
=0;

2157 
	}
}

2159 
	$zookì≥r_¥o˚ss
(
zh™dÀ_t
 *
zh
, 
evíts
)

2161 
buf„r_li°_t
 *
b±r
;

2162 
rc
;

2164 i‡(
zh
==
NULL
)

2165  
ZBADARGUMENTS
;

2166 i‡(
	`is_uƒecovîabÀ
(
zh
))

2167  
ZINVALIDSTATE
;

2168 
	`≠i_¥ﬁog
(
zh
);

2169 
	`IF_DEBUG
(
	`checkRe•⁄£L©ícy
(
zh
));

2170 
rc
 = 
	`check_evíts
(
zh
, 
evíts
);

2171 i‡(
rc
!=
ZOK
)

2172  
	`≠i_ïûog
(
zh
, 
rc
);

2174 
	`IF_DEBUG
(
	`isSockëRódabÀ
(
zh
));

2176 
rc
 >0 && (
b±r
=
	`dequeue_buf„r
(&
zh
->
to_¥o˚ss
))) {

2177 
RïlyHódî
 
hdr
;

2178 
ürchive
 *
ü
 = 
	`¸óã_buf„r_ürchive
(

2179 
b±r
->
buf„r
, b±r->
cuº_off£t
);

2180 
	`de£rülize_RïlyHódî
(
ü
, "hdr", &
hdr
);

2181 i‡(
hdr
.
zxid
 > 0) {

2182 
zh
->
œ°_zxid
 = 
hdr
.
zxid
;

2187 i‡(
hdr
.
xid
 =
WATCHER_EVENT_XID
) {

2188 
W©chîEvít
 
evt
;

2189 
ty≥
 = 0;

2190 *
∑th
 = 
NULL
;

2191 
com∂ëi⁄_li°_t
 *
c
 = 
NULL
;

2193 
	`LOG_DEBUG
(("Processing WATCHER_EVENT"));

2195 
	`de£rülize_W©chîEvít
(
ü
, "evít", &
evt
);

2196 
ty≥
 = 
evt
.type;

2197 
∑th
 = 
evt
.path;

2199 
c
 = 
	`¸óã_com∂ëi⁄_íåy
(
WATCHER_EVENT_XID
,-1,0,0,0,0);

2200 
c
->
buf„r
 = 
b±r
;

2201 
c
->c.
w©chî_ªsu…
 = 
	`cﬁÀ˘W©chîs
(
zh
, 
ty≥
, 
∑th
);

2204 
	`dóŒoˇã_W©chîEvít
(&
evt
);

2205 
	`queue_com∂ëi⁄
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
, 
c
, 0);

2206 } i‡(
hdr
.
xid
 =
SET_WATCHES_XID
) {

2207 
	`LOG_DEBUG
(("Processing SET_WATCHES"));

2208 
	`‰ì_buf„r
(
b±r
);

2209 } i‡(
hdr
.
xid
 =
AUTH_XID
){

2210 
	`LOG_DEBUG
(("Processing AUTH_XID"));

2214 
	`auth_com∂ëi⁄_func
(
hdr
.
îr
,
zh
);

2215 
	`‰ì_buf„r
(
b±r
);

2218 if(
	`is_uƒecovîabÀ
(
zh
)){

2219 
	`h™dÀ_îr‹
(
zh
, 
ZAUTHFAILED
);

2220 
	`˛o£_buf„r_ürchive
(&
ü
);

2221  
	`≠i_ïûog
(
zh
, 
ZAUTHFAILED
);

2224 
rc
 = 
hdr
.
îr
;

2226 
com∂ëi⁄_li°_t
 *
˝å
 = 
	`dequeue_com∂ëi⁄
(&
zh
->
£¡_ªque°s
);

2229 i‡(
zh
->
˛o£_ªque°ed
 =1 && 
˝å
 =
NULL
) {

2230 
	`LOG_DEBUG
(("Completion queue has been cleared by zookeeper_close()"));

2231 
	`˛o£_buf„r_ürchive
(&
ü
);

2232  
	`≠i_ïûog
(
zh
,
ZINVALIDSTATE
);

2234 
	`as£π
(
˝å
);

2236 i‡(
˝å
->
xid
 !
hdr
.xid) {

2237 
	`LOG_DEBUG
(("Processing unexpected or out-of-orderÑesponse!"));

2240 
	`˛o£_buf„r_ürchive
(&
ü
);

2241 
	`‰ì_buf„r
(
b±r
);

2244 
	`queue_com∂ëi⁄
(&
zh
->
£¡_ªque°s
,
˝å
,1);

2245  
	`h™dÀ_sockë_îr‹_msg
(
zh
, 
__LINE__
,
ZRUNTIMEINCONSISTENCY
,

2247 
hdr
.
xid
,
˝å
->xid);

2250 
	`a˘iv©eW©chî
(
zh
, 
˝å
->
w©chî
, 
rc
);

2252 i‡(
˝å
->
c
.
void_ªsu…
 !
SYNCHRONOUS_MARKER
) {

2253 if(
hdr
.
xid
 =
PING_XID
){

2254 
ñ≠£d
 = 0;

2255 
timevÆ
 
now
;

2256 
	`gëtimeofday
(&
now
, 0);

2257 
ñ≠£d
 = 
	`ˇlcuœã_öãrvÆ
(&
zh
->
œ°_pög
, &
now
);

2258 
	`LOG_DEBUG
(("GŸÖögÑe•⁄£ i¿%d ms", 
ñ≠£d
));

2261 
	`‰ì_buf„r
(
b±r
);

2262 
	`de°roy_com∂ëi⁄_íåy
(
˝å
);

2264 
	`LOG_DEBUG
(("QueueingásynchronousÑesponse"));

2266 
˝å
->
buf„r
 = 
b±r
;

2267 
	`queue_com∂ëi⁄
(&
zh
->
com∂ëi⁄s_to_¥o˚ss
, 
˝å
, 0);

2270 
sync_com∂ëi⁄


2271 *
sc
 = (
sync_com∂ëi⁄
*)
˝å
->
d©a
;

2272 
sc
->
rc
 =Ñc;

2274 
	`¥o˚ss_sync_com∂ëi⁄
(
˝å
, 
sc
, 
ü
, 
zh
);

2276 
	`nŸify_sync_com∂ëi⁄
(
sc
);

2277 
	`‰ì_buf„r
(
b±r
);

2278 
zh
->
out°™dög_sync
--;

2279 
	`de°roy_com∂ëi⁄_íåy
(
˝å
);

2283 
	`˛o£_buf„r_ürchive
(&
ü
);

2286 i‡(
	`¥o˚ss_async
(
zh
->
out°™dög_sync
)) {

2287 
	`¥o˚ss_com∂ëi⁄s
(
zh
);

2289  
	`≠i_ïûog
(
zh
,
ZOK
);
	}
}

2291 
	$zoo_°©e
(
zh™dÀ_t
 *
zh
)

2293 if(
zh
!=0)

2294  
zh
->
°©e
;

2296 
	}
}

2298 
w©chî_ªgi°øti⁄_t
* 
	$¸óã_w©chî_ªgi°øti⁄
(c⁄° * 
∑th
,

2299 
ªsu…_checkî_‚
 
checkî
,
w©chî_‚
 
w©chî
,* 
˘x
){

2300 
w©chî_ªgi°øti⁄_t
* 
wo
;

2301 if(
w©chî
==0)

2303 
wo
=
	`ˇŒoc
(1,(
w©chî_ªgi°øti⁄_t
));

2304 
wo
->
∑th
=
	`°rdup
(path);

2305 
wo
->
w©chî
=watcher;

2306 
wo
->
c⁄ãxt
=
˘x
;

2307 
wo
->
checkî
=checker;

2308  
wo
;

2309 
	}
}

2311 
	$de°roy_w©chî_ªgi°øti⁄
(
w©chî_ªgi°øti⁄_t
* 
wo
){

2312 if(
wo
!=0){

2313 
	`‰ì
((*)
wo
->
∑th
);

2314 
	`‰ì
(
wo
);

2316 
	}
}

2318 
com∂ëi⁄_li°_t
* 
	$¸óã_com∂ëi⁄_íåy
(
xid
, 
com∂ëi⁄_ty≥
,

2319 c⁄° *
dc
, c⁄° *
d©a
,
w©chî_ªgi°øti⁄_t
* 
wo
, 
com∂ëi⁄_hód_t
 *
˛i°
)

2321 
com∂ëi⁄_li°_t
 *
c
 = 
	`ˇŒoc
(1,(completion_list_t));

2322 i‡(!
c
) {

2323 
	`LOG_ERROR
(("out of memory"));

2326 
c
->c.
ty≥
 = 
com∂ëi⁄_ty≥
;

2327 
c
->
d©a
 = data;

2328 
c
->c.
ty≥
) {

2329 
COMPLETION_VOID
:

2330 
c
->c.
void_ªsu…
 = (
void_com∂ëi⁄_t
)
dc
;

2332 
COMPLETION_STRING
:

2333 
c
->c.
°rög_ªsu…
 = (
°rög_com∂ëi⁄_t
)
dc
;

2335 
COMPLETION_DATA
:

2336 
c
->c.
d©a_ªsu…
 = (
d©a_com∂ëi⁄_t
)
dc
;

2338 
COMPLETION_STAT
:

2339 
c
->c.
°©_ªsu…
 = (
°©_com∂ëi⁄_t
)
dc
;

2341 
COMPLETION_STRINGLIST
:

2342 
c
->c.
°rögs_ªsu…
 = (
°rögs_com∂ëi⁄_t
)
dc
;

2344 
COMPLETION_STRINGLIST_STAT
:

2345 
c
->c.
°rögs_°©_ªsu…
 = (
°rögs_°©_com∂ëi⁄_t
)
dc
;

2347 
COMPLETION_ACLLIST
:

2348 
c
->c.
a˛_ªsu…
 = (
a˛_com∂ëi⁄_t
)
dc
;

2350 
COMPLETION_MULTI
:

2351 
	`as£π
(
˛i°
);

2352 
c
->c.
void_ªsu…
 = (
void_com∂ëi⁄_t
)
dc
;

2353 
c
->c.
˛i°
 = *clist;

2356 
c
->
xid
 = xid;

2357 
c
->
w©chî
 = 
wo
;

2359  
c
;

2360 
	}
}

2362 
	$de°roy_com∂ëi⁄_íåy
(
com∂ëi⁄_li°_t
* 
c
){

2363 if(
c
!=0){

2364 
	`de°roy_w©chî_ªgi°øti⁄
(
c
->
w©chî
);

2365 if(
c
->
buf„r
!=0)

2366 
	`‰ì_buf„r
(
c
->
buf„r
);

2367 
	`‰ì
(
c
);

2369 
	}
}

2371 
	$queue_com∂ëi⁄_nﬁock
(
com∂ëi⁄_hód_t
 *
li°
,

2372 
com∂ëi⁄_li°_t
 *
c
,

2373 
add_to_‰⁄t
)

2375 
c
->
√xt
 = 0;

2377 i‡(
li°
->
œ°
) {

2378 
	`as£π
(
li°
->
hód
);

2380 i‡(!
add_to_‰⁄t
) {

2381 
li°
->
œ°
->
√xt
 = 
c
;

2382 
li°
->
œ°
 = 
c
;

2384 
c
->
√xt
 = 
li°
->
hód
;

2385 
li°
->
hód
 = 
c
;

2389 
	`as£π
(!
li°
->
hód
);

2390 
li°
->
hód
 = 
c
;

2391 
li°
->
œ°
 = 
c
;

2393 
	}
}

2395 
	$queue_com∂ëi⁄
(
com∂ëi⁄_hód_t
 *
li°
, 
com∂ëi⁄_li°_t
 *
c
,

2396 
add_to_‰⁄t
)

2399 
	`lock_com∂ëi⁄_li°
(
li°
);

2400 
	`queue_com∂ëi⁄_nﬁock
(
li°
, 
c
, 
add_to_‰⁄t
);

2401 
	`u∆ock_com∂ëi⁄_li°
(
li°
);

2402 
	}
}

2404 
	$add_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
com∂ëi⁄_ty≥
,

2405 c⁄° *
dc
, c⁄° *
d©a
, 
add_to_‰⁄t
,

2406 
w©chî_ªgi°øti⁄_t
* 
wo
, 
com∂ëi⁄_hód_t
 *
˛i°
)

2408 
com∂ëi⁄_li°_t
 *
c
 =
	`¸óã_com∂ëi⁄_íåy
(
xid
, 
com∂ëi⁄_ty≥
, 
dc
,

2409 
d©a
, 
wo
, 
˛i°
);

2410 
rc
 = 0;

2411 i‡(!
c
)

2412  
ZSYSTEMERROR
;

2413 
	`lock_com∂ëi⁄_li°
(&
zh
->
£¡_ªque°s
);

2414 i‡(
zh
->
˛o£_ªque°ed
 != 1) {

2415 
	`queue_com∂ëi⁄_nﬁock
(&
zh
->
£¡_ªque°s
, 
c
, 
add_to_‰⁄t
);

2416 i‡(
dc
 =
SYNCHRONOUS_MARKER
) {

2417 
zh
->
out°™dög_sync
++;

2419 
rc
 = 
ZOK
;

2421 
	`‰ì
(
c
);

2422 
rc
 = 
ZINVALIDSTATE
;

2424 
	`u∆ock_com∂ëi⁄_li°
(&
zh
->
£¡_ªque°s
);

2425  
rc
;

2426 
	}
}

2428 
	$add_d©a_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
d©a_com∂ëi⁄_t
 
dc
,

2429 c⁄° *
d©a
,
w©chî_ªgi°øti⁄_t
* 
wo
)

2431  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_DATA
, 
dc
, 
d©a
, 0, 
wo
, 0);

2432 
	}
}

2434 
	$add_°©_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
°©_com∂ëi⁄_t
 
dc
,

2435 c⁄° *
d©a
,
w©chî_ªgi°øti⁄_t
* 
wo
)

2437  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_STAT
, 
dc
, 
d©a
, 0, 
wo
, 0);

2438 
	}
}

2440 
	$add_°rögs_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
,

2441 
°rögs_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
,
w©chî_ªgi°øti⁄_t
* 
wo
)

2443  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_STRINGLIST
, 
dc
, 
d©a
, 0, 
wo
, 0);

2444 
	}
}

2446 
	$add_°rögs_°©_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
,

2447 
°rögs_°©_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
,
w©chî_ªgi°øti⁄_t
* 
wo
)

2449  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_STRINGLIST_STAT
, 
dc
, 
d©a
, 0, 
wo
, 0);

2450 
	}
}

2452 
	$add_a˛_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
a˛_com∂ëi⁄_t
 
dc
,

2453 c⁄° *
d©a
)

2455  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_ACLLIST
, 
dc
, 
d©a
, 0, 0, 0);

2456 
	}
}

2458 
	$add_void_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
void_com∂ëi⁄_t
 
dc
,

2459 c⁄° *
d©a
)

2461  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_VOID
, 
dc
, 
d©a
, 0, 0, 0);

2462 
	}
}

2464 
	$add_°rög_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
,

2465 
°rög_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
)

2467  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_STRING
, 
dc
, 
d©a
, 0, 0, 0);

2468 
	}
}

2470 
	$add_mu…i_com∂ëi⁄
(
zh™dÀ_t
 *
zh
, 
xid
, 
void_com∂ëi⁄_t
 
dc
,

2471 c⁄° *
d©a
, 
com∂ëi⁄_hód_t
 *
˛i°
)

2473  
	`add_com∂ëi⁄
(
zh
, 
xid
, 
COMPLETION_MULTI
, 
dc
, 
d©a
, 0,0, 
˛i°
);

2474 
	}
}

2476 
	$zookì≥r_˛o£
(
zh™dÀ_t
 *
zh
)

2478 
rc
=
ZOK
;

2479 i‡(
zh
==0)

2480  
ZBADARGUMENTS
;

2482 
zh
->
˛o£_ªque°ed
=1;

2483 i‡(
	`öc_ªf_cou¡î
(
zh
,1)>1) {

2489 
	`íãr_¸ôiˇl
(
zh
);

2490 
	`‰ì_com∂ëi⁄s
(
zh
,1,
ZCLOSING
);

2491 
	`Àave_¸ôiˇl
(
zh
);

2493 
	`ad≠t‹_föish
(
zh
);

2496 
	`≠i_ïûog
(
zh
, 0);

2497  
ZOK
;

2501 if(
zh
->
°©e
==
ZOO_CONNECTED_STATE
){

2502 
ﬂrchive
 *
ﬂ
;

2503 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_CLOSE_OP
)};

2504 
	`LOG_INFO
(("Closing zookeeper sessionId=%#llxÅo [%s]\n",

2505 
zh
->
˛õ¡_id
.˛õ¡_id,
	`f‹m©_cuºít_ídpoöt_öfo
(zh)));

2506 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2507 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2508 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2509 
	`gë_buf„r_Àn
(
ﬂ
));

2511 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2512 i‡(
rc
 < 0) {

2513 
rc
 = 
ZMARSHALLINGERROR
;

2514 
föish
;

2519 
rc
=
	`ad≠t‹_£nd_queue
(
zh
, 3000);

2521 
	`LOG_INFO
(("Freeing zookeeperÑesources for sessionId=%#llx\n",

2522 
zh
->
˛õ¡_id
.client_id));

2523 
rc
 = 
ZOK
;

2526 
föish
:

2527 
	`de°roy
(
zh
);

2528 
	`ad≠t‹_de°roy
(
zh
);

2529 
	`‰ì
(
zh
);

2530 #ifde‡
WIN32


2531 
	`Wö32WSACÀ™up
();

2533  
rc
;

2534 
	}
}

2536 
	$isVÆidP©h
(c⁄° * 
∑th
, c⁄° 
Êags
) {

2537 
Àn
 = 0;

2538 
œ°c
 = '/';

2539 
c
;

2540 
i
 = 0;

2542 i‡(
∑th
 == 0)

2544 
Àn
 = 
	`°æí
(
∑th
);

2545 i‡(
Àn
 == 0)

2547 i‡(
∑th
[0] != '/')

2549 i‡(
Àn
 == 1)

2551 i‡(
∑th
[
Àn
 - 1] ='/' && !(
Êags
 & 
ZOO_SEQUENCE
))

2554 
i
 = 1;

2555 ; 
i
 < 
Àn
; 
œ°c
 = 
∑th
[i], i++) {

2556 
c
 = 
∑th
[
i
];

2558 i‡(
c
 == 0) {

2560 } i‡(
c
 ='/' && 
œ°c
 == '/') {

2562 } i‡(
c
 ='.' && 
œ°c
 == '.') {

2563 i‡(
∑th
[
i
-2] ='/' && (((ò+ 1 =
Àn
Ë&& !(
Êags
 & 
ZOO_SEQUENCE
))

2564 || 
∑th
[
i
+1] == '/')) {

2567 } i‡(
c
 == '.') {

2568 i‡((
∑th
[
i
-1] ='/'Ë&& (((ò+ 1 =
Àn
Ë&& !(
Êags
 & 
ZOO_SEQUENCE
))

2569 || 
∑th
[
i
+1] == '/')) {

2572 } i‡(
c
 > 0x00 && c < 0x1f) {

2578 
	}
}

2584 
	$Reque°_∑th_öô
(
zh™dÀ_t
 *
zh
, 
Êags
,

2585 **
∑th_out
, c⁄° *
∑th
)

2587 
	`as£π
(
∑th_out
);

2589 *
∑th_out
 = 
	`¥ïíd_°rög
(
zh
, 
∑th
);

2590 i‡(
zh
 =
NULL
 || !
	`isVÆidP©h
(*
∑th_out
, 
Êags
)) {

2591 
	`‰ì_du∂iˇã_∑th
(*
∑th_out
, 
∑th
);

2592  
ZBADARGUMENTS
;

2594 i‡(
	`is_uƒecovîabÀ
(
zh
)) {

2595 
	`‰ì_du∂iˇã_∑th
(*
∑th_out
, 
∑th
);

2596  
ZINVALIDSTATE
;

2599  
ZOK
;

2600 
	}
}

2602 
	$Reque°_∑th_w©ch_öô
(
zh™dÀ_t
 *
zh
, 
Êags
,

2603 **
∑th_out
, c⁄° *
∑th
,

2604 
öt32_t
 *
w©ch_out
, 
uöt32_t
 
w©ch
)

2606 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 
Êags
, 
∑th_out
, 
∑th
);

2607 i‡(
rc
 !
ZOK
) {

2608  
rc
;

2610 *
w©ch_out
 = 
w©ch
;

2611  
ZOK
;

2612 
	}
}

2617 
	$zoo_agë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, 
d©a_com∂ëi⁄_t
 
dc
,

2618 c⁄° *
d©a
)

2620  
	`zoo_awgë
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
dc
,
d©a
);

2621 
	}
}

2623 
	$zoo_awgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2624 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2625 
d©a_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
)

2627 
ﬂrchive
 *
ﬂ
;

2628 *
£rvî_∑th
 = 
	`¥ïíd_°rög
(
zh
, 
∑th
);

2629 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 ,
ZOO_GETDATA_OP
)};

2630 
GëD©aReque°
 
ªq
 = { (*)
£rvî_∑th
, 
w©chî
!=0 };

2631 
rc
;

2633 i‡(
zh
==0 || !
	`isVÆidP©h
(
£rvî_∑th
, 0)) {

2634 
	`‰ì_du∂iˇã_∑th
(
£rvî_∑th
, 
∑th
);

2635  
ZBADARGUMENTS
;

2637 i‡(
	`is_uƒecovîabÀ
(
zh
)) {

2638 
	`‰ì_du∂iˇã_∑th
(
£rvî_∑th
, 
∑th
);

2639  
ZINVALIDSTATE
;

2641 
ﬂ
=
	`¸óã_buf„r_ﬂrchive
();

2642 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2643 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_GëD©aReque°
(
ﬂ
, "ªq", &
ªq
);

2644 
	`íãr_¸ôiˇl
(
zh
);

2645 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_d©a_com∂ëi⁄
(
zh
, 
h
.
xid
, 
dc
, 
d©a
,

2646 
	`¸óã_w©chî_ªgi°øti⁄
(
£rvî_∑th
,
d©a_ªsu…_checkî
,
w©chî
,
w©chîCtx
));

2647 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2648 
	`gë_buf„r_Àn
(
ﬂ
));

2649 
	`Àave_¸ôiˇl
(
zh
);

2650 
	`‰ì_du∂iˇã_∑th
(
£rvî_∑th
, 
∑th
);

2652 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2654 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2655 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2657 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2658  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2659 
	}
}

2661 
	$SëD©aReque°_öô
(
zh™dÀ_t
 *
zh
, 
SëD©aReque°
 *
ªq
,

2662 c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
, 
vîsi⁄
)

2664 
rc
;

2665 
	`as£π
(
ªq
);

2666 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
->
∑th
,Öath);

2667 i‡(
rc
 !
ZOK
) {

2668  
rc
;

2670 
ªq
->
d©a
.
buff
 = (*)
buf„r
;

2671 
ªq
->
d©a
.
Àn
 = 
buÊí
;

2672 
ªq
->
vîsi⁄
 = version;

2674  
ZOK
;

2675 
	}
}

2677 
	$zoo_a£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
,

2678 
vîsi⁄
, 
°©_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
)

2680 
ﬂrchive
 *
ﬂ
;

2681 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_SETDATA_OP
)};

2682 
SëD©aReque°
 
ªq
;

2683 
rc
 = 
	`SëD©aReque°_öô
(
zh
, &
ªq
, 
∑th
, 
buf„r
, 
buÊí
, 
vîsi⁄
);

2684 i‡(
rc
 !
ZOK
) {

2685  
rc
;

2687 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2688 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2689 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_SëD©aReque°
(
ﬂ
, "ªq", &
ªq
);

2690 
	`íãr_¸ôiˇl
(
zh
);

2691 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°©_com∂ëi⁄
(
zh
, 
h
.
xid
, 
dc
, 
d©a
,0);

2692 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2693 
	`gë_buf„r_Àn
(
ﬂ
));

2694 
	`Àave_¸ôiˇl
(
zh
);

2695 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2697 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2699 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2700 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2702 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2703  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2704 
	}
}

2706 
	$Cª©eReque°_öô
(
zh™dÀ_t
 *
zh
, 
Cª©eReque°
 *
ªq
,

2707 c⁄° *
∑th
, c⁄° *
vÆue
,

2708 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛_íåõs
, 
Êags
)

2710 
rc
;

2711 
	`as£π
(
ªq
);

2712 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 
Êags
, &
ªq
->
∑th
,Öath);

2713 
	`as£π
(
ªq
);

2714 i‡(
rc
 !
ZOK
) {

2715  
rc
;

2717 
ªq
->
Êags
 = flags;

2718 
ªq
->
d©a
.
buff
 = (*)
vÆue
;

2719 
ªq
->
d©a
.
Àn
 = 
vÆuñí
;

2720 i‡(
a˛_íåõs
 == 0) {

2721 
ªq
->
a˛
.
cou¡
 = 0;

2722 
ªq
->
a˛
.
d©a
 = 0;

2724 
ªq
->
a˛
 = *
a˛_íåõs
;

2727  
ZOK
;

2728 
	}
}

2730 
	$zoo_a¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

2731 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛_íåõs
, 
Êags
,

2732 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

2734 
ﬂrchive
 *
ﬂ
;

2735 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 ,
ZOO_CREATE_OP
) };

2736 
Cª©eReque°
 
ªq
;

2738 
rc
 = 
	`Cª©eReque°_öô
(
zh
, &
ªq
,

2739 
∑th
, 
vÆue
, 
vÆuñí
, 
a˛_íåõs
, 
Êags
);

2740 i‡(
rc
 !
ZOK
) {

2741  
rc
;

2743 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2744 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2745 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_Cª©eReque°
(
ﬂ
, "ªq", &
ªq
);

2746 
	`íãr_¸ôiˇl
(
zh
);

2747 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°rög_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
);

2748 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2749 
	`gë_buf„r_Àn
(
ﬂ
));

2750 
	`Àave_¸ôiˇl
(
zh
);

2751 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2753 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2755 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2756 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2758 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2759  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2760 
	}
}

2762 
	$DñëeReque°_öô
(
zh™dÀ_t
 *
zh
, 
DñëeReque°
 *
ªq
,

2763 c⁄° *
∑th
, 
vîsi⁄
)

2765 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
->
∑th
,Öath);

2766 i‡(
rc
 !
ZOK
) {

2767  
rc
;

2769 
ªq
->
vîsi⁄
 = version;

2770  
ZOK
;

2771 
	}
}

2773 
	$zoo_adñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

2774 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

2776 
ﬂrchive
 *
ﬂ
;

2777 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_DELETE_OP
)};

2778 
DñëeReque°
 
ªq
;

2779 
rc
 = 
	`DñëeReque°_öô
(
zh
, &
ªq
, 
∑th
, 
vîsi⁄
);

2780 i‡(
rc
 !
ZOK
) {

2781  
rc
;

2783 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2784 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2785 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_DñëeReque°
(
ﬂ
, "ªq", &
ªq
);

2786 
	`íãr_¸ôiˇl
(
zh
);

2787 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_void_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
);

2788 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2789 
	`gë_buf„r_Àn
(
ﬂ
));

2790 
	`Àave_¸ôiˇl
(
zh
);

2791 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2793 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2795 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2796 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2798 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2799  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2800 
	}
}

2802 
	$zoo_´xi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

2803 
°©_com∂ëi⁄_t
 
sc
, c⁄° *
d©a
)

2805  
	`zoo_awexi°s
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
sc
,
d©a
);

2806 
	}
}

2808 
	$zoo_awexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2809 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2810 
°©_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

2812 
ﬂrchive
 *
ﬂ
;

2813 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 ,
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_EXISTS_OP
) };

2814 
Exi°sReque°
 
ªq
;

2815 
rc
 = 
	`Reque°_∑th_w©ch_öô
(
zh
, 0, &
ªq
.
∑th
,Öath,

2816 &
ªq
.
w©ch
, 
w©chî
 !
NULL
);

2817 i‡(
rc
 !
ZOK
) {

2818  
rc
;

2820 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2821 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2822 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_Exi°sReque°
(
ﬂ
, "ªq", &
ªq
);

2823 
	`íãr_¸ôiˇl
(
zh
);

2824 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°©_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
,

2825 
	`¸óã_w©chî_ªgi°øti⁄
(
ªq
.
∑th
,
exi°s_ªsu…_checkî
,

2826 
w©chî
,
w©chîCtx
));

2827 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2828 
	`gë_buf„r_Àn
(
ﬂ
));

2829 
	`Àave_¸ôiˇl
(
zh
);

2830 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2832 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2834 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2835 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2837 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2838  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2839 
	}
}

2841 
	$zoo_awgë_chûdªn_
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2842 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2843 
°rögs_com∂ëi⁄_t
 
sc
,

2844 c⁄° *
d©a
)

2846 
ﬂrchive
 *
ﬂ
;

2847 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_GETCHILDREN_OP
)};

2848 
GëChûdªnReque°
 
ªq
 ;

2849 
rc
 = 
	`Reque°_∑th_w©ch_öô
(
zh
, 0, &
ªq
.
∑th
,Öath,

2850 &
ªq
.
w©ch
, 
w©chî
 !
NULL
);

2851 i‡(
rc
 !
ZOK
) {

2852  
rc
;

2854 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2855 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2856 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_GëChûdªnReque°
(
ﬂ
, "ªq", &
ªq
);

2857 
	`íãr_¸ôiˇl
(
zh
);

2858 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°rögs_com∂ëi⁄
(
zh
, 
h
.
xid
, 
sc
, 
d©a
,

2859 
	`¸óã_w©chî_ªgi°øti⁄
(
ªq
.
∑th
,
chûd_ªsu…_checkî
,
w©chî
,
w©chîCtx
));

2860 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2861 
	`gë_buf„r_Àn
(
ﬂ
));

2862 
	`Àave_¸ôiˇl
(
zh
);

2863 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2865 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2867 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2868 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2870 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2871  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2872 
	}
}

2874 
	$zoo_agë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

2875 
°rögs_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
)

2877  
	`zoo_awgë_chûdªn_
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
dc
,
d©a
);

2878 
	}
}

2880 
	$zoo_awgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2881 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2882 
°rögs_com∂ëi⁄_t
 
dc
,

2883 c⁄° *
d©a
)

2885  
	`zoo_awgë_chûdªn_
(
zh
,
∑th
,
w©chî
,
w©chîCtx
,
dc
,
d©a
);

2886 
	}
}

2888 
	$zoo_awgë_chûdªn2_
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2889 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2890 
°rögs_°©_com∂ëi⁄_t
 
ssc
,

2891 c⁄° *
d©a
)

2894 
ﬂrchive
 *
ﬂ
;

2895 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
–
xid
, 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 ,
ZOO_GETCHILDREN2_OP
)};

2896 
GëChûdªn2Reque°
 
ªq
 ;

2897 
rc
 = 
	`Reque°_∑th_w©ch_öô
(
zh
, 0, &
ªq
.
∑th
,Öath,

2898 &
ªq
.
w©ch
, 
w©chî
 !
NULL
);

2899 i‡(
rc
 !
ZOK
) {

2900  
rc
;

2902 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2903 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2904 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_GëChûdªn2Reque°
(
ﬂ
, "ªq", &
ªq
);

2905 
	`íãr_¸ôiˇl
(
zh
);

2906 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°rögs_°©_com∂ëi⁄
(
zh
, 
h
.
xid
, 
ssc
, 
d©a
,

2907 
	`¸óã_w©chî_ªgi°øti⁄
(
ªq
.
∑th
,
chûd_ªsu…_checkî
,
w©chî
,
w©chîCtx
));

2908 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2909 
	`gë_buf„r_Àn
(
ﬂ
));

2910 
	`Àave_¸ôiˇl
(
zh
);

2911 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2913 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2915 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2916 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2918 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2919  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2920 
	}
}

2922 
	$zoo_agë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

2923 
°rögs_°©_com∂ëi⁄_t
 
dc
, c⁄° *
d©a
)

2925  
	`zoo_awgë_chûdªn2_
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
dc
,
d©a
);

2926 
	}
}

2928 
	$zoo_awgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2929 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

2930 
°rögs_°©_com∂ëi⁄_t
 
dc
,

2931 c⁄° *
d©a
)

2933  
	`zoo_awgë_chûdªn2_
(
zh
,
∑th
,
w©chî
,
w©chîCtx
,
dc
,
d©a
);

2934 
	}
}

2936 
	$zoo_async
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

2937 
°rög_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

2939 
ﬂrchive
 *
ﬂ
;

2940 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_SYNC_OP
)};

2941 
SyncReque°
 
ªq
;

2942 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
.
∑th
,Öath);

2943 i‡(
rc
 !
ZOK
) {

2944  
rc
;

2946 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2947 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2948 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_SyncReque°
(
ﬂ
, "ªq", &
ªq
);

2949 
	`íãr_¸ôiˇl
(
zh
);

2950 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_°rög_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
);

2951 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2952 
	`gë_buf„r_Àn
(
ﬂ
));

2953 
	`Àave_¸ôiˇl
(
zh
);

2954 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2956 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2958 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2959 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2961 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2962  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2963 
	}
}

2966 
	$zoo_agë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
a˛_com∂ëi⁄_t
 
com∂ëi⁄
,

2967 c⁄° *
d©a
)

2969 
ﬂrchive
 *
ﬂ
;

2970 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
 (
xid
 , 
	`gë_xid
()), STRUCT_INITIALIZER(
ty≥
 ,
ZOO_GETACL_OP
)};

2971 
GëACLReque°
 
ªq
;

2972 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
.
∑th
,Öath) ;

2973 i‡(
rc
 !
ZOK
) {

2974  
rc
;

2976 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

2977 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

2978 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_GëACLReque°
(
ﬂ
, "ªq", &
ªq
);

2979 
	`íãr_¸ôiˇl
(
zh
);

2980 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_a˛_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
);

2981 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

2982 
	`gë_buf„r_Àn
(
ﬂ
));

2983 
	`Àave_¸ôiˇl
(
zh
);

2984 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

2986 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

2988 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

2989 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

2991 
	`ad≠t‹_£nd_queue
(
zh
, 0);

2992  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

2993 
	}
}

2995 
	$zoo_a£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

2996 
ACL_ve˘‹
 *
a˛
, 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

2998 
ﬂrchive
 *
ﬂ
;

2999 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
 ,
	`gë_xid
()), STRUCT_INITIALIZER (
ty≥
 , 
ZOO_SETACL_OP
)};

3000 
SëACLReque°
 
ªq
;

3001 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
.
∑th
,Öath);

3002 i‡(
rc
 !
ZOK
) {

3003  
rc
;

3005 
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

3006 
ªq
.
a˛
 = *acl;

3007 
ªq
.
vîsi⁄
 = version;

3008 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

3009 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_SëACLReque°
(
ﬂ
, "ªq", &
ªq
);

3010 
	`íãr_¸ôiˇl
(
zh
);

3011 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_void_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
);

3012 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

3013 
	`gë_buf„r_Àn
(
ﬂ
));

3014 
	`Àave_¸ôiˇl
(
zh
);

3015 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
,Öath);

3017 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

3019 
	`LOG_DEBUG
(("SídögÑeque° xid=%#x f‹Ö©h [%s]Åÿ%s",
h
.
xid
,
∑th
,

3020 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

3022 
	`ad≠t‹_£nd_queue
(
zh
, 0);

3023  (
rc
 < 0)?
ZMARSHALLINGERROR
:
ZOK
;

3024 
	}
}

3027 
	$›_ªsu…_°rög_com∂ëi⁄
(
îr
, c⁄° *
vÆue
, c⁄° *
d©a
)

3029 
zoo_›_ªsu…
 *
ªsu…
 = (zoo_›_ªsu… *)
d©a
;

3030 
	`as£π
(
ªsu…
);

3031 
ªsu…
->
îr
 =Érr;

3033 i‡(
ªsu…
->
vÆue
 && value) {

3034 
Àn
 = 
	`°æí
(
vÆue
) + 1;

3035 i‡(
Àn
 > 
ªsu…
->
vÆuñí
) {

3036 
Àn
 = 
ªsu…
->
vÆuñí
;

3038 i‡(
Àn
 > 0) {

3039 
	`mem˝y
(
ªsu…
->
vÆue
, vÆue, 
Àn
 - 1);

3040 
ªsu…
->
vÆue
[
Àn
 - 1] = '\0';

3043 
ªsu…
->
vÆue
 = 
NULL
;

3045 
	}
}

3047 
	$›_ªsu…_void_com∂ëi⁄
(
îr
, c⁄° *
d©a
)

3049 
zoo_›_ªsu…
 *
ªsu…
 = (zoo_›_ªsu… *)
d©a
;

3050 
	`as£π
(
ªsu…
);

3051 
ªsu…
->
îr
 =Érr;

3052 
	}
}

3054 
	$›_ªsu…_°©_com∂ëi⁄
(
îr
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
)

3056 
zoo_›_ªsu…
 *
ªsu…
 = (zoo_›_ªsu… *)
d©a
;

3057 
	`as£π
(
ªsu…
);

3058 
ªsu…
->
îr
 =Érr;

3060 i‡(
ªsu…
->
°©
 && 
îr
 == 0 && stat) {

3061 *
ªsu…
->
°©
 = *stat;

3063 
ªsu…
->
°©
 = 
NULL
 ;

3065 
	}
}

3067 
	$CheckVîsi⁄Reque°_öô
(
zh™dÀ_t
 *
zh
, 
CheckVîsi⁄Reque°
 *
ªq
,

3068 c⁄° *
∑th
, 
vîsi⁄
)

3070 
rc
 ;

3071 
	`as£π
(
ªq
);

3072 
rc
 = 
	`Reque°_∑th_öô
(
zh
, 0, &
ªq
->
∑th
,Öath);

3073 i‡(
rc
 !
ZOK
) {

3074  
rc
;

3076 
ªq
->
vîsi⁄
 = version;

3078  
ZOK
;

3079 
	}
}

3081 
	$zoo_amu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
,

3082 
zoo_›_ªsu…_t
 *
ªsu…s
, 
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

3084 
Reque°Hódî
 
h
 = { 
	`STRUCT_INITIALIZER
(
xid
, 
	`gë_xid
()), STRUCT_INITIALIZER(
ty≥
, 
ZOO_MULTI_OP
) };

3085 
Mu…iHódî
 
mh
 = { 
	`STRUCT_INITIALIZER
(
ty≥
, -1), STRUCT_INITIALIZER(
d⁄e
, 1), STRUCT_INITIALIZER(
îr
, -1) };

3086 
ﬂrchive
 *
ﬂ
 = 
	`¸óã_buf„r_ﬂrchive
();

3087 
com∂ëi⁄_hód_t
 
˛i°
 = { 0 };

3089 
rc
 = 
	`£rülize_Reque°Hódî
(
ﬂ
, "hódî", &
h
);

3091 
ödex
 = 0;

3092 
ödex
=0; index < 
cou¡
; index++) {

3093 c⁄° 
zoo_›_t
 *
›
 = 
›s
+
ödex
;

3094 
zoo_›_ªsu…_t
 *
ªsu…
 = 
ªsu…s
+
ödex
;

3095 
com∂ëi⁄_li°_t
 *
íåy
 = 
NULL
;

3097 
Mu…iHódî
 
mh
 = { 
	`STRUCT_INITIALIZER
(
ty≥
, 
›
->ty≥), STRUCT_INITIALIZER(
d⁄e
, 0), STRUCT_INITIALIZER(
îr
, -1) };

3098 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_Mu…iHódî
(
ﬂ
, "mu…ihódî", &
mh
);

3100 
›
->
ty≥
) {

3101 
ZOO_CREATE_OP
: {

3102 
Cª©eReque°
 
ªq
;

3104 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`Cª©eReque°_öô
(
zh
, &
ªq
,

3105 
›
->
¸óã_›
.
∑th
, op->¸óã_›.
d©a
,

3106 
›
->
¸óã_›
.
d©Æí
, op->¸óã_›.
a˛
,

3107 
›
->
¸óã_›
.
Êags
);

3108 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_Cª©eReque°
(
ﬂ
, "ªq", &
ªq
);

3109 
ªsu…
->
vÆue
 = 
›
->
¸óã_›
.
buf
;

3110 
ªsu…
->
vÆuñí
 = 
›
->
¸óã_›
.
buÊí
;

3112 
	`íãr_¸ôiˇl
(
zh
);

3113 
íåy
 = 
	`¸óã_com∂ëi⁄_íåy
(
h
.
xid
, 
COMPLETION_STRING
, 
›_ªsu…_°rög_com∂ëi⁄
, 
ªsu…
, 0, 0);

3114 
	`Àave_¸ôiˇl
(
zh
);

3115 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
, 
›
->
¸óã_›
.path);

3119 
ZOO_DELETE_OP
: {

3120 
DñëeReque°
 
ªq
;

3121 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`DñëeReque°_öô
(
zh
, &
ªq
, 
›
->
dñëe_›
.
∑th
, op->dñëe_›.
vîsi⁄
);

3122 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_DñëeReque°
(
ﬂ
, "ªq", &
ªq
);

3124 
	`íãr_¸ôiˇl
(
zh
);

3125 
íåy
 = 
	`¸óã_com∂ëi⁄_íåy
(
h
.
xid
, 
COMPLETION_VOID
, 
›_ªsu…_void_com∂ëi⁄
, 
ªsu…
, 0, 0);

3126 
	`Àave_¸ôiˇl
(
zh
);

3127 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
, 
›
->
dñëe_›
.path);

3131 
ZOO_SETDATA_OP
: {

3132 
SëD©aReque°
 
ªq
;

3133 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`SëD©aReque°_öô
(
zh
, &
ªq
,

3134 
›
->
£t_›
.
∑th
, op->£t_›.
d©a
,

3135 
›
->
£t_›
.
d©Æí
, op->£t_›.
vîsi⁄
);

3136 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_SëD©aReque°
(
ﬂ
, "ªq", &
ªq
);

3137 
ªsu…
->
°©
 = 
›
->
£t_›
.stat;

3139 
	`íãr_¸ôiˇl
(
zh
);

3140 
íåy
 = 
	`¸óã_com∂ëi⁄_íåy
(
h
.
xid
, 
COMPLETION_STAT
, 
›_ªsu…_°©_com∂ëi⁄
, 
ªsu…
, 0, 0);

3141 
	`Àave_¸ôiˇl
(
zh
);

3142 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
, 
›
->
£t_›
.path);

3146 
ZOO_CHECK_OP
: {

3147 
CheckVîsi⁄Reque°
 
ªq
;

3148 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`CheckVîsi⁄Reque°_öô
(
zh
, &
ªq
,

3149 
›
->
check_›
.
∑th
, op->check_›.
vîsi⁄
);

3150 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_CheckVîsi⁄Reque°
(
ﬂ
, "ªq", &
ªq
);

3152 
	`íãr_¸ôiˇl
(
zh
);

3153 
íåy
 = 
	`¸óã_com∂ëi⁄_íåy
(
h
.
xid
, 
COMPLETION_VOID
, 
›_ªsu…_void_com∂ëi⁄
, 
ªsu…
, 0, 0);

3154 
	`Àave_¸ôiˇl
(
zh
);

3155 
	`‰ì_du∂iˇã_∑th
(
ªq
.
∑th
, 
›
->
check_›
.path);

3160 
	`LOG_ERROR
(("Unim∂emíãd sub-›Åy≥=%d i¿mu…i-›", 
›
->
ty≥
));

3161  
ZUNIMPLEMENTED
;

3164 
	`queue_com∂ëi⁄
(&
˛i°
, 
íåy
, 0);

3167 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`£rülize_Mu…iHódî
(
ﬂ
, "mu…ihódî", &
mh
);

3170 
	`íãr_¸ôiˇl
(
zh
);

3171 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`add_mu…i_com∂ëi⁄
(
zh
, 
h
.
xid
, 
com∂ëi⁄
, 
d©a
, &
˛i°
);

3172 
rc
 =Ñ¯< 0 ?Ñ¯: 
	`queue_buf„r_byãs
(&
zh
->
to_£nd
, 
	`gë_buf„r
(
ﬂ
),

3173 
	`gë_buf„r_Àn
(
ﬂ
));

3174 
	`Àave_¸ôiˇl
(
zh
);

3177 
	`˛o£_buf„r_ﬂrchive
(&
ﬂ
, 0);

3179 
	`LOG_DEBUG
(("Sending multiÑequest xid=%#x with %d subrequestsÅo %s",

3180 
h
.
xid
, 
ödex
, 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh
)));

3182 
	`ad≠t‹_£nd_queue
(
zh
, 0);

3184  (
rc
 < 0Ë? 
ZMARSHALLINGERROR
 : 
ZOK
;

3185 
	}
}

3187 
	$zoo_¸óã_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
vÆue
,

3188 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

3189 *
∑th_buf„r
, 
∑th_buf„r_Àn
)

3191 
	`as£π
(
›
);

3192 
›
->
ty≥
 = 
ZOO_CREATE_OP
;

3193 
›
->
¸óã_›
.
∑th
 =Öath;

3194 
›
->
¸óã_›
.
d©a
 = 
vÆue
;

3195 
›
->
¸óã_›
.
d©Æí
 = 
vÆuñí
;

3196 
›
->
¸óã_›
.
a˛
 =ácl;

3197 
›
->
¸óã_›
.
Êags
 = flags;

3198 
›
->
¸óã_›
.
buf
 = 
∑th_buf„r
;

3199 
›
->
¸óã_›
.
buÊí
 = 
∑th_buf„r_Àn
;

3200 
	}
}

3202 
	$zoo_dñëe_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
)

3204 
	`as£π
(
›
);

3205 
›
->
ty≥
 = 
ZOO_DELETE_OP
;

3206 
›
->
dñëe_›
.
∑th
 =Öath;

3207 
›
->
dñëe_›
.
vîsi⁄
 = version;

3208 
	}
}

3210 
	$zoo_£t_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, c⁄° *
buf„r
,

3211 
buÊí
, 
vîsi⁄
, 
Sèt
 *
°©
)

3213 
	`as£π
(
›
);

3214 
›
->
ty≥
 = 
ZOO_SETDATA_OP
;

3215 
›
->
£t_›
.
∑th
 =Öath;

3216 
›
->
£t_›
.
d©a
 = 
buf„r
;

3217 
›
->
£t_›
.
d©Æí
 = 
buÊí
;

3218 
›
->
£t_›
.
vîsi⁄
 = version;

3219 
›
->
£t_›
.
°©
 = stat;

3220 
	}
}

3222 
	$zoo_check_›_öô
(
zoo_›_t
 *
›
, c⁄° *
∑th
, 
vîsi⁄
)

3224 
	`as£π
(
›
);

3225 
›
->
ty≥
 = 
ZOO_CHECK_OP
;

3226 
›
->
check_›
.
∑th
 =Öath;

3227 
›
->
check_›
.
vîsi⁄
 = version;

3228 
	}
}

3230 
	$zoo_mu…i
(
zh™dÀ_t
 *
zh
, 
cou¡
, c⁄° 
zoo_›_t
 *
›s
, 
zoo_›_ªsu…_t
 *
ªsu…s
)

3232 
rc
;

3234 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3235 i‡(!
sc
) {

3236  
ZSYSTEMERROR
;

3239 
rc
 = 
	`zoo_amu…i
(
zh
, 
cou¡
, 
›s
, 
ªsu…s
, 
SYNCHRONOUS_MARKER
, 
sc
);

3240 i‡(
rc
 =
ZOK
) {

3241 
	`waô_sync_com∂ëi⁄
(
sc
);

3242 
rc
 = 
sc
->rc;

3244 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3246  
rc
;

3247 
	}
}

3251 
	$Êush_£nd_queue
(
zh™dÀ_t
*
zh
, 
timeout
)

3253 
rc

ZOK
;

3254 
timevÆ
 
°¨ãd
;

3255 #ifde‡
WIN32


3256 
fd_£t
 
pﬁlSë
;

3257 
timevÆ
 
waô
;

3259 
	`gëtimeofday
(&
°¨ãd
,0);

3264 
	`lock_buf„r_li°
(&
zh
->
to_£nd
);

3265 
zh
->
to_£nd
.
hód
 !0&& zh->
°©e
 =
ZOO_CONNECTED_STATE
) {

3266 if(
timeout
!=0){

3267 
ñ≠£d
;

3268 
timevÆ
 
now
;

3269 
	`gëtimeofday
(&
now
,0);

3270 
ñ≠£d
=
	`ˇlcuœã_öãrvÆ
(&
°¨ãd
,&
now
);

3271 i‡(
ñ≠£d
>
timeout
) {

3272 
rc
 = 
ZOPERATIONTIMEOUT
;

3276 #ifde‡
WIN32


3277 
waô
 = 
	`gë_timevÆ
(
timeout
-
ñ≠£d
);

3278 
	`FD_ZERO
(&
pﬁlSë
);

3279 
	`FD_SET
(
zh
->
fd
, &
pﬁlSë
);

3281 
rc
 = 
	`£À˘
(()(
zh
->
fd
)+1, 
NULL
, &
pﬁlSë
, NULL, &
waô
);

3283 
pﬁlfd
 
fds
;

3284 
fds
.
fd
 = 
zh
->fd;

3285 
fds
.
evíts
 = 
POLLOUT
;

3286 
fds
.
ªvíts
 = 0;

3287 
rc
 = 
	`pﬁl
(&
fds
, 1, 
timeout
-
ñ≠£d
);

3289 i‡(
rc
<=0) {

3291 
rc
 =Ñc==0 ? 
ZOPERATIONTIMEOUT
 : 
ZSYSTEMERROR
;

3296 
rc
 = 
	`£nd_buf„r
(
zh
->
fd
, zh->
to_£nd
.
hód
);

3297 if(
rc
==0 && 
timeout
==0){

3299 
rc
 = 
ZOK
;

3302 i‡(
rc
 < 0) {

3303 
rc
 = 
ZCONNECTIONLOSS
;

3307 i‡(
rc
 > 0)

3308 
	`ªmove_buf„r
(&
zh
->
to_£nd
);

3309 
	`gëtimeofday
(&
zh
->
œ°_£nd
, 0);

3310 
rc
 = 
ZOK
;

3312 
	`u∆ock_buf„r_li°
(&
zh
->
to_£nd
);

3313  
rc
;

3314 
	}
}

3316 c⁄° * 
	$zîr‹
(
c
)

3318 
c
){

3319 
ZOK
:

3321 
ZSYSTEMERROR
:

3323 
ZRUNTIMEINCONSISTENCY
:

3325 
ZDATAINCONSISTENCY
:

3327 
ZCONNECTIONLOSS
:

3329 
ZMARSHALLINGERROR
:

3331 
ZUNIMPLEMENTED
:

3333 
ZOPERATIONTIMEOUT
:

3335 
ZBADARGUMENTS
:

3337 
ZINVALIDSTATE
:

3339 
ZAPIERROR
:

3341 
ZNONODE
:

3343 
ZNOAUTH
:

3345 
ZBADVERSION
:

3347 
ZNOCHILDRENFOREPHEMERALS
:

3349 
ZNODEEXISTS
:

3351 
ZNOTEMPTY
:

3353 
ZSESSIONEXPIRED
:

3355 
ZINVALIDCALLBACK
:

3357 
ZINVALIDACL
:

3359 
ZAUTHFAILED
:

3361 
ZCLOSING
:

3363 
ZNOTHING
:

3365 
ZSESSIONMOVED
:

3368 i‡(
c
 > 0) {

3369  
	`°ªº‹
(
c
);

3372 
	}
}

3374 
	$zoo_add_auth
(
zh™dÀ_t
 *
zh
,c⁄° * 
scheme
,c⁄° * 
˚π
,

3375 
˚πLí
,
void_com∂ëi⁄_t
 
com∂ëi⁄
, c⁄° *
d©a
)

3377 
buf„r
 
auth
;

3378 
auth_öfo
 *
authöfo
;

3379 if(
scheme
==
NULL
 || 
zh
==NULL)

3380  
ZBADARGUMENTS
;

3382 i‡(
	`is_uƒecovîabÀ
(
zh
))

3383  
ZINVALIDSTATE
;

3387 i‡(
	`zoo_°©e
(
zh
) == 0) {

3388  
ZINVALIDSTATE
;

3391 if(
˚π
!=
NULL
 && 
˚πLí
!=0){

3392 
auth
.
buff
=
	`ˇŒoc
(1,
˚πLí
);

3393 if(
auth
.
buff
==0) {

3394  
ZSYSTEMERROR
;

3396 
	`mem˝y
(
auth
.
buff
,
˚π
,
˚πLí
);

3397 
auth
.
Àn
=
˚πLí
;

3399 
auth
.
buff
 = 0;

3400 
auth
.
Àn
 = 0;

3403 
	`zoo_lock_auth
(
zh
);

3404 
authöfo
 = (
auth_öfo
*Ë
	`mÆloc
((auth_info));

3405 
authöfo
->
scheme
=
	`°rdup
(scheme);

3406 
authöfo
->
auth
=auth;

3407 
authöfo
->
com∂ëi⁄
=completion;

3408 
authöfo
->
d©a
=data;

3409 
authöfo
->
√xt
 = 
NULL
;

3410 
	`add_œ°_auth
(&
zh
->
auth_h
, 
authöfo
);

3411 
	`zoo_u∆ock_auth
(
zh
);

3413 if(
zh
->
°©e
 =
ZOO_CONNECTED_STATE
 || zh->°©ê=
ZOO_ASSOCIATING_STATE
)

3414  
	`£nd_œ°_auth_öfo
(
zh
);

3416  
ZOK
;

3417 
	}
}

3419 c⁄° * 
	$f‹m©_ídpoöt_öfo
(c⁄° 
sockaddr_°‹age
* 
ï
)

3421 
buf
[128];

3422 
addr°r
[128];

3423 *
öaddr
;

3424 #ifde‡
WIN32


3425 * 
addr°rög
;

3427 
p‹t
;

3428 if(
ï
==0)

3431 #i‡
	`deföed
(
AF_INET6
)

3432 if(
ï
->
ss_Ámûy
==
AF_INET6
){

3433 
öaddr
=&((
sockaddr_ö6
*)
ï
)->
sö6_addr
;

3434 
p‹t
=((
sockaddr_ö6
*)
ï
)->
sö6_p‹t
;

3437 
öaddr
=&((
sockaddr_ö
*)
ï
)->
sö_addr
;

3438 
p‹t
=((
sockaddr_ö
*)
ï
)->
sö_p‹t
;

3439 #i‡
	`deföed
(
AF_INET6
)

3442 #ifde‡
WIN32


3443 
addr°rög
 = 
	`öë_¡ﬂ
 (*(
ö_addr
*)
öaddr
);

3444 
	`•rötf
(
buf
,"%s:%d",
addr°rög
,
	`¡ohs
(
p‹t
));

3446 
	`öë_¡›
(
ï
->
ss_Ámûy
,
öaddr
,
addr°r
,(addrstr)-1);

3447 
	`•rötf
(
buf
,"%s:%d",
addr°r
,
	`¡ohs
(
p‹t
));

3449  
buf
;

3452 c⁄° * 
	`f‹m©_cuºít_ídpoöt_öfo
(
zh™dÀ_t
* 
zh
)

3454  
	`f‹m©_ídpoöt_öfo
(&
zh
->
addrs
[zh->
c⁄√˘_ödex
]);

3457 
	`zoo_dëîmöi°ic_c⁄n_‹dî
(
yesOrNo
)

3459 
dißbÀ_c⁄n_≥rmuã
=
yesOrNo
;

3465 
	`zoo_¸óã
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
vÆue
,

3466 
vÆuñí
, c⁄° 
ACL_ve˘‹
 *
a˛
, 
Êags
,

3467 *
∑th_buf„r
, 
∑th_buf„r_Àn
)

3469 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3470 
rc
;

3471 i‡(!
sc
) {

3472  
ZSYSTEMERROR
;

3474 
sc
->
u
.
°r
.°∏
∑th_buf„r
;

3475 
sc
->
u
.
°r
.
°r_Àn
 = 
∑th_buf„r_Àn
;

3476 
rc
=
	`zoo_a¸óã
(
zh
, 
∑th
, 
vÆue
, 
vÆuñí
, 
a˛
, 
Êags
, 
SYNCHRONOUS_MARKER
, 
sc
);

3477 if(
rc
==
ZOK
){

3478 
	`waô_sync_com∂ëi⁄
(
sc
);

3479 
rc
 = 
sc
->rc;

3481 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3482  
rc
;

3485 
	`zoo_dñëe
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
)

3487 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3488 
rc
;

3489 i‡(!
sc
) {

3490  
ZSYSTEMERROR
;

3492 
rc
=
	`zoo_adñëe
(
zh
, 
∑th
, 
vîsi⁄
, 
SYNCHRONOUS_MARKER
, 
sc
);

3493 if(
rc
==
ZOK
){

3494 
	`waô_sync_com∂ëi⁄
(
sc
);

3495 
rc
 = 
sc
->rc;

3497 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3498  
rc
;

3501 
	`zoo_exi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, 
Sèt
 *
°©
)

3503  
	`zoo_wexi°s
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
°©
);

3506 
	`zoo_wexi°s
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3507 
w©chî_‚
 
w©chî
, * 
w©chîCtx
, 
Sèt
 *
°©
)

3509 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3510 
rc
;

3511 i‡(!
sc
) {

3512  
ZSYSTEMERROR
;

3514 
rc
=
	`zoo_awexi°s
(
zh
,
∑th
,
w©chî
,
w©chîCtx
,
SYNCHRONOUS_MARKER
, 
sc
);

3515 if(
rc
==
ZOK
){

3516 
	`waô_sync_com∂ëi⁄
(
sc
);

3517 
rc
 = 
sc
->rc;

3518 i‡(
rc
 =0&& 
°©
) {

3519 *
°©
 = 
sc
->
u
.stat;

3522 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3523  
rc
;

3526 
	`zoo_gë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
, *
buf„r
,

3527 * 
buf„r_Àn
, 
Sèt
 *
°©
)

3529  
	`zoo_wgë
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,

3530 
buf„r
,
buf„r_Àn
,
°©
);

3533 
	`zoo_wgë
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3534 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

3535 *
buf„r
, * 
buf„r_Àn
, 
Sèt
 *
°©
)

3537 
sync_com∂ëi⁄
 *
sc
;

3538 
rc
=0;

3540 if(
buf„r_Àn
==
NULL
)

3541  
ZBADARGUMENTS
;

3542 if((
sc
=
	`Æloc_sync_com∂ëi⁄
())==
NULL
)

3543  
ZSYSTEMERROR
;

3545 
sc
->
u
.
d©a
.
buf„r
 = buffer;

3546 
sc
->
u
.
d©a
.
buff_Àn
 = *
buf„r_Àn
;

3547 
rc
=
	`zoo_awgë
(
zh
, 
∑th
, 
w©chî
, 
w©chîCtx
, 
SYNCHRONOUS_MARKER
, 
sc
);

3548 if(
rc
==
ZOK
){

3549 
	`waô_sync_com∂ëi⁄
(
sc
);

3550 
rc
 = 
sc
->rc;

3551 i‡(
rc
 == 0) {

3552 if(
°©
)

3553 *
°©
 = 
sc
->
u
.
d©a
.stat;

3554 *
buf„r_Àn
 = 
sc
->
u
.
d©a
.
buff_Àn
;

3557 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3558  
rc
;

3561 
	`zoo_£t
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
,

3562 
vîsi⁄
)

3564  
	`zoo_£t2
(
zh
, 
∑th
, 
buf„r
, 
buÊí
, 
vîsi⁄
, 0);

3567 
	`zoo_£t2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, c⁄° *
buf„r
, 
buÊí
,

3568 
vîsi⁄
, 
Sèt
 *
°©
)

3570 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3571 
rc
;

3572 i‡(!
sc
) {

3573  
ZSYSTEMERROR
;

3575 
rc
=
	`zoo_a£t
(
zh
, 
∑th
, 
buf„r
, 
buÊí
, 
vîsi⁄
, 
SYNCHRONOUS_MARKER
, 
sc
);

3576 if(
rc
==
ZOK
){

3577 
	`waô_sync_com∂ëi⁄
(
sc
);

3578 
rc
 = 
sc
->rc;

3579 i‡(
rc
 =0 && 
°©
) {

3580 *
°©
 = 
sc
->
u
.stat;

3583 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3584  
rc
;

3587 
	`zoo_wgë_chûdªn_
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3588 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

3589 
Såög_ve˘‹
 *
°rögs
)

3591 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3592 
rc
;

3593 i‡(!
sc
) {

3594  
ZSYSTEMERROR
;

3596 
rc

	`zoo_awgë_chûdªn
 (
zh
, 
∑th
, 
w©chî
, 
w©chîCtx
, 
SYNCHRONOUS_MARKER
, 
sc
);

3597 if(
rc
==
ZOK
){

3598 
	`waô_sync_com∂ëi⁄
(
sc
);

3599 
rc
 = 
sc
->rc;

3600 i‡(
rc
 == 0) {

3601 i‡(
°rögs
) {

3602 *
°rögs
 = 
sc
->
u
.
°rs2
;

3604 
	`dóŒoˇã_Såög_ve˘‹
(&
sc
->
u
.
°rs2
);

3608 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3609  
rc
;

3612 
	`zoo_wgë_chûdªn2_
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3613 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

3614 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
)

3616 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3617 
rc
;

3618 i‡(!
sc
) {

3619  
ZSYSTEMERROR
;

3621 
rc

	`zoo_awgë_chûdªn2
(
zh
, 
∑th
, 
w©chî
, 
w©chîCtx
, 
SYNCHRONOUS_MARKER
, 
sc
);

3623 if(
rc
==
ZOK
){

3624 
	`waô_sync_com∂ëi⁄
(
sc
);

3625 
rc
 = 
sc
->rc;

3626 i‡(
rc
 == 0) {

3627 *
°©
 = 
sc
->
u
.
°rs_°©
.
°©2
;

3628 i‡(
°rögs
) {

3629 *
°rögs
 = 
sc
->
u
.
°rs_°©
.
°rs2
;

3631 
	`dóŒoˇã_Såög_ve˘‹
(&
sc
->
u
.
°rs_°©
.
°rs2
);

3635 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3636  
rc
;

3639 
	`zoo_gë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

3640 
Såög_ve˘‹
 *
°rögs
)

3642  
	`zoo_wgë_chûdªn_
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
°rögs
);

3645 
	`zoo_wgë_chûdªn
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3646 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

3647 
Såög_ve˘‹
 *
°rögs
)

3649  
	`zoo_wgë_chûdªn_
(
zh
,
∑th
,
w©chî
,
w©chîCtx
,
°rögs
);

3652 
	`zoo_gë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
w©ch
,

3653 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
)

3655  
	`zoo_wgë_chûdªn2_
(
zh
,
∑th
,
w©ch
?zh->
w©chî
:0,zh->
c⁄ãxt
,
°rögs
,
°©
);

3658 
	`zoo_wgë_chûdªn2
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
,

3659 
w©chî_‚
 
w©chî
, * 
w©chîCtx
,

3660 
Såög_ve˘‹
 *
°rögs
, 
Sèt
 *
°©
)

3662  
	`zoo_wgë_chûdªn2_
(
zh
,
∑th
,
w©chî
,
w©chîCtx
,
°rögs
,
°©
);

3665 
	`zoo_gë_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
ACL_ve˘‹
 *
a˛
,

3666 
Sèt
 *
°©
)

3668 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3669 
rc
;

3670 i‡(!
sc
) {

3671  
ZSYSTEMERROR
;

3673 
rc
=
	`zoo_agë_a˛
(
zh
, 
∑th
, 
SYNCHRONOUS_MARKER
, 
sc
);

3674 if(
rc
==
ZOK
){

3675 
	`waô_sync_com∂ëi⁄
(
sc
);

3676 
rc
 = 
sc
->rc;

3677 i‡(
rc
 =0&& 
°©
) {

3678 *
°©
 = 
sc
->
u
.
a˛
.stat;

3680 i‡(
rc
 == 0) {

3681 i‡(
a˛
) {

3682 *
a˛
 = 
sc
->
u
.acl.acl;

3684 
	`dóŒoˇã_ACL_ve˘‹
(&
sc
->
u
.
a˛
.acl);

3688 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3689  
rc
;

3692 
	`zoo_£t_a˛
(
zh™dÀ_t
 *
zh
, c⁄° *
∑th
, 
vîsi⁄
,

3693 c⁄° 
ACL_ve˘‹
 *
a˛
)

3695 
sync_com∂ëi⁄
 *
sc
 = 
	`Æloc_sync_com∂ëi⁄
();

3696 
rc
;

3697 i‡(!
sc
) {

3698  
ZSYSTEMERROR
;

3700 
rc
=
	`zoo_a£t_a˛
(
zh
, 
∑th
, 
vîsi⁄
, (
ACL_ve˘‹
*)
a˛
,

3701 
SYNCHRONOUS_MARKER
, 
sc
);

3702 if(
rc
==
ZOK
){

3703 
	`waô_sync_com∂ëi⁄
(
sc
);

3704 
rc
 = 
sc
->rc;

3706 
	`‰ì_sync_com∂ëi⁄
(
sc
);

3707  
rc
;

	@/home/pig/zookeeper-3.4.5/src/c/tests/CollectionUtil.h

18 #i‚de‡
_COLLECTION_UTIL_H_


19 
	#_COLLECTION_UTIL_H_


	)

26 
«me•a˚
 
	gUtû


48 
	gãm∂©e
 <
˛ass
 
	gCONT
>

49 ˛as†
	cCﬁÀ˘i⁄Buûdî


51 
	gpublic
:

53 
CONT
 
	tCﬁÀ˘i⁄Ty≥
;

55 
ty≥«me
 
	tCﬁÀ˘i⁄Ty≥
::
	tvÆue_ty≥
 value_type;

57 
ty≥«me
 
	tCﬁÀ˘i⁄Ty≥
::
	tc⁄°_ôî©‹
 const_iterator;

59 
ty≥«me
 
	tCﬁÀ˘i⁄Ty≥
::
	tsize_ty≥
 size_type;

64 
	gCﬁÀ˘i⁄Buûdî
<
	gCONT
>& 
›î©‹
()(c⁄° 
	gvÆue_ty≥
& 
	gvÆue
){

65  
push_back
(
vÆue
);

70 
	gCﬁÀ˘i⁄Buûdî
<
	gCONT
>& 
push_back
(c⁄° 
vÆue_ty≥
& 
vÆue
){

71 
	gcﬁÀ˘i⁄_
.
push_back
(
vÆue
);

72  *
	gthis
;

76 
c⁄°_ôî©‹
 
begö
(Ëc⁄°{ 
	gcﬁÀ˘i⁄_
.begin();}

77 
c⁄°_ôî©‹
 
íd
(Ëc⁄°{ 
	gcﬁÀ˘i⁄_
.end();}

78 
size_ty≥
 
size
(Ëc⁄°{ 
	gcﬁÀ˘i⁄_
.size();}

79 
˛ór
(Ë{
	gcﬁÀ˘i⁄_
.clear();}

82 
›î©‹
 c⁄° 
	gCﬁÀ˘i⁄Ty≥
&(Ëc⁄° { 
	gcﬁÀ˘i⁄_
;}

83 
	g¥iv©e
:

85 
CﬁÀ˘i⁄Ty≥
 
cﬁÀ˘i⁄_
;

109 
	gãm∂©e
 <
˛ass
 
	gCONT
>

110 ˛as†
	cDi˘i⁄¨yBuûdî


112 
	gpublic
:

114 
CONT
 
	tDi˘i⁄¨yTy≥
;

116 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tvÆue_ty≥
 value_type;

118 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tkey_ty≥
 key_type;

120 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tm≠≥d_ty≥
 mapped_type;

122 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tc⁄°_ôî©‹
 const_iterator;

124 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tôî©‹
 iterator;

126 
ty≥«me
 
	tDi˘i⁄¨yTy≥
::
	tsize_ty≥
 size_type;

133 
	gDi˘i⁄¨yBuûdî
<
	gCONT
>& 
›î©‹
()(c⁄° 
	gkey_ty≥
& 
	gkey
,c⁄° 
	gm≠≥d_ty≥
& 
	gvÆue
){

134 
	gdi˘_
.
ö£π
(
vÆue_ty≥
(
key
,
vÆue
));

135  *
	gthis
;

141 
ôî©‹
 
föd
(c⁄° 
key_ty≥
& 
key
){

142  
	gdi˘_
.
föd
(
key
);

148 
c⁄°_ôî©‹
 
föd
(c⁄° 
key_ty≥
& 
key
) const{

149  
	gdi˘_
.
föd
(
key
);

154 
c⁄°_ôî©‹
 
begö
(Ëc⁄°{ 
	gdi˘_
.begin();}

155 
c⁄°_ôî©‹
 
íd
(Ëc⁄°{ 
	gdi˘_
.end();}

156 
size_ty≥
 
size
(Ëc⁄°{ 
	gdi˘_
.size();}

157 
˛ór
(Ë{
	gdi˘_
.clear();}

160 
›î©‹
 c⁄° 
	gDi˘i⁄¨yTy≥
&(Ëc⁄° { 
	gdi˘_
;}

161 
	g¥iv©e
:

162 
Di˘i⁄¨yTy≥
 
di˘_
;

172 
	gãm∂©e
 <
˛ass
 
	gC
>

173 
	$˛órCﬁÀ˘i⁄
(
C
& 
c
){

174 
ty≥«me
 
C
::
c⁄°_ôî©‹
 
ô
=
c
.
	`begö
();ô!=c.
	`íd
();++it)

175 
dñëe
 *
ô
;

176 
c
.
	`˛ór
();

177 
	}
}

185 
	gãm∂©e
 <
˛ass
 
	gM
>

186 
	$˛órM≠
(
M
& 
m
){

187 
ty≥«me
 
M
::
c⁄°_ôî©‹
 
ô
=
m
.
	`begö
();ô!=m.
	`íd
();++it)

188 
dñëe
 
ô
->
£c⁄d
;

189 
m
.
	`˛ór
();

190 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/tests/CppAssertHelper.h

19 #i‚de‡
CPPASSERTHELPER_H_


20 
	#CPPASSERTHELPER_H_


	)

22 
	~<˝punô/Te°As£π.h
>

25 
	#CPPUNIT_ASSERT_EQUAL_LOC
(
ex≥˘ed
,
a˘uÆ
,
fûe
,
löe
) \

26 –
CPPUNIT_NS
::
	`as£πEquÆs
–(
ex≥˘ed
), \

27 (
a˘uÆ
), \

28 
CPPUNIT_NS
::
	`Sour˚Löe
(
fûe
,
löe
), \

29 "" ) )

	)

31 
	#CPPUNIT_ASSERT_EQUAL_MESSAGE_LOC
(
mesßge
,
ex≥˘ed
,
a˘uÆ
,
fûe
,
löe
) \

32 –
CPPUNIT_NS
::
	`as£πEquÆs
–(
ex≥˘ed
), \

33 (
a˘uÆ
), \

34 
CPPUNIT_NS
::
	`Sour˚Löe
(
fûe
,
löe
), \

35 (
mesßge
ËË)

	)

	@/home/pig/zookeeper-3.4.5/src/c/tests/LibCMocks.h

19 #i‚de‡
LIBCMOCKS_H_


20 
	#LIBCMOCKS_H_


	)

22 
	~<°rög
>

23 
	~<ve˘‹
>

24 
	~<deque
>

26 
	~<î∫o.h
>

27 
	~<°rög.h
>

29 
	~"MocksBa£.h
"

30 
	~"LibCSymTabÀ.h
"

31 
	~"ThªadögUtû.h
"

36 ˛as†
	cMock_gëho°by«me
: 
public
 
Mock


38 
public
:

39 
Ho°E¡ry
: 
public
 
ho°ít
 {

40 
Ho°E¡ry
(c⁄° * 
ho°Name
,
addπy≥
);

41 ~
Ho°E¡ry
();

42 
	mHo°E¡ry
& 
addAlüs
(c⁄° * 
Æüs
);

43 
	mHo°E¡ry
& 
addAddªss
(c⁄° * 
addr4
);

46 
	$Mock_gëho°by«me
():
	$cuºít
(0){
mock_
=
this
;
	}
}

47 
	gvútuÆ
 ~
Mock_gëho°by«me
();

48 
	gHo°E¡ry
& 
addHo°E¡ry
(c⁄° * 
ho°Name
,
addπy≥
=
AF_INET
);

49 
vútuÆ
 
ho°ít
* 
ˇŒ
(c⁄° * 
«me
);

51 
	g°d
::
	tve˘‹
<
	tHo°E¡ry
*> 
	tHo°E¡ryCﬁÀ˘i⁄
;

52 
Ho°E¡ryCﬁÀ˘i⁄
 
	ggëho°by«meRëu∫s
;

53 
	gcuºít
;

54 
Mock_gëho°by«me
* 
	gmock_
;

57 ˛as†
	cMockFaûed_gëho°by«me
: 
public
 
Mock_gëho°by«me


59 
public
:

60 
	$MockFaûed_gëho°by«me
():
	$h_î∫oRëu∫
(
HOST_NOT_FOUND
) {}

62 
h_î∫oRëu∫
;

63 
vútuÆ
 
ho°ít
* 
	$ˇŒ
(c⁄° * 
«me
) {

64 
h_î∫o
=
h_î∫oRëu∫
;

66 
	}
}

72 ˛as†
	cMock_ˇŒoc
: 
public
 
Mock


74 
public
:

75 
	$Mock_ˇŒoc
():
	`î∫oOnFaûuª
(
ENOMEM
),
	`ˇŒsBef‹eFaûuª
(-1),
	$cou¡î
(0) {

76 
mock_
=
this
;

78 
vútuÆ
 ~
	$Mock_ˇŒoc
(Ë{
mock_
=0;
	}
}

80 
	gî∫oOnFaûuª
;

81 
	gˇŒsBef‹eFaûuª
;

82 
	gcou¡î
;

83 
vútuÆ
 * 
ˇŒ
(
size_t
 
p1
, size_à
p2
);

85 
Mock_ˇŒoc
* 
	gmock_
;

91 ˛as†
	cMock_ªÆloc
: 
public
 
Mock


93 
public
:

94 
	$Mock_ªÆloc
():
	`î∫oOnFaûuª
(
ENOMEM
),
	`ˇŒsBef‹eFaûuª
(-1),
	$cou¡î
(0) {

95 
mock_
=
this
;

97 
vútuÆ
 ~
	$Mock_ªÆloc
(Ë{
mock_
=0;
	}
}

99 
	gî∫oOnFaûuª
;

100 
	gˇŒsBef‹eFaûuª
;

101 
	gcou¡î
;

102 
vútuÆ
 * 
ˇŒ
(* 
p
, 
size_t
 
s
);

104 
Mock_ªÆloc
* 
	gmock_
;

110 ˛as†
	cMock_øndom
: 
public
 
Mock


112 
public
:

113 
	$Mock_øndom
():
	$cuºítIdx
(0Ë{
mock_
=
this
;}

114 
vútuÆ
 ~
	$Mock_øndom
(Ë{
mock_
=0;
	}
}

116 
	gcuºítIdx
;

117 
	g°d
::
ve˘‹
<> 
øndomRëu∫s
;

118 
vútuÆ
 
ˇŒ
();

119 
	$£tSìd
(){
cuºítIdx
=0;
	}
}

121 
Mock_øndom
* 
	gmock_
;

126 ˛as†
	cMock_‰ì_no›
: 
public
 
Mock


128 
Muãx
 
mx
;

129 
	m°d
::
ve˘‹
<*> 
ªque°ed
;

130 
	mpublic
:

131 
	$Mock_‰ì_no›
():
	`√°ed
(0),
	$ˇŒCou¡î
(0){
mock_
=
this
;}

132 
vútuÆ
 ~
	$Mock_‰ì_no›
(){

133 
mock_
=0;

134 
	`‰ìReque°ed
();

135 
	}
}

137 
	g√°ed
;

138 
	gˇŒCou¡î
;

139 
vútuÆ
 
ˇŒ
(* 
p
);

140 
‰ìReque°ed
();

141 
	$dißbÀ
(){
mock_
=0;
	}
}

143 
gëFªeCou¡
(*);

144 
boﬁ
 
isFªed
(*);

146 
Mock_‰ì_no›
* 
	gmock_
;

152 ˛as†
	cMock_sockë
: 
public
 
Mock


154 
public
:

155 c⁄° 
FD
=63;

156 
	$Mock_sockë
():
	`sockëRëu∫s
(
FD
),
	`˛o£Rëu∫s
(0),
	`gësockë›tRëu∫s
(0),

157 
	`›tvÆSO_ERROR
(0),

158 
	`£tsock›tRëu∫s
(0),
	`c⁄√˘Rëu∫s
(0),
	`c⁄√˘Eºno
(0),

159 
	`£ndEºno
(0),
	$ªcvEºno
(0)

161 
mock_
=
this
;

163 
vútuÆ
 ~
	$Mock_sockë
(){
mock_
=0;
	}
}

165 
	gsockëRëu∫s
;

166 
vútuÆ
 
	$ˇŒSockë
(
domaö
, 
ty≥
, 
¥Ÿocﬁ
){

167  
sockëRëu∫s
;

168 
	}
}

169 
	g˛o£Rëu∫s
;

170 
vútuÆ
 
	$ˇŒClo£
(
fd
){

171  
˛o£Rëu∫s
;

172 
	}
}

173 
	ggësockë›tRëu∫s
;

174 
	g›tvÆSO_ERROR
;

175 
vútuÆ
 
	$ˇŒGë
(
s
,
Àvñ
,
›äame
,*
›tvÆ
,
sockÀn_t
 *
Àn
){

176 if(
Àvñ
==
SOL_SOCKET
 && 
›äame
==
SO_ERROR
){

177 
	`£tSO_ERROR
(
›tvÆ
,*
Àn
);

179  
gësockë›tRëu∫s
;

180 
	}
}

181 
vútuÆ
 
	$£tSO_ERROR
(*
›tvÆ
,
sockÀn_t
 
Àn
){

182 
	`mem˝y
(
›tvÆ
,&
›tvÆSO_ERROR
,
Àn
);

183 
	}
}

185 
	g£tsock›tRëu∫s
;

186 
vútuÆ
 
	$ˇŒSë
(
s
,
Àvñ
,
›äame
,c⁄° *
›tvÆ
,
sockÀn_t
 
Àn
){

187  
£tsock›tRëu∫s
;

188 
	}
}

189 
	gc⁄√˘Rëu∫s
;

190 
	gc⁄√˘Eºno
;

191 
vútuÆ
 
	$ˇŒC⁄√˘
(
s
,c⁄° 
sockaddr
 *
addr
,
sockÀn_t
 
Àn
){

192 
î∫o
=
c⁄√˘Eºno
;

193  
c⁄√˘Rëu∫s
;

194 
	}
}

196 
vútuÆ
 
nŸifyBuf„rSít
(c⁄° 
°d
::
°rög
& 
buf„r
){}

198 
£ndEºno
;

199 
	g°d
::
°rög
 
£ndBuf„r
;

200 
vútuÆ
 
ssize_t
 
	$ˇŒSíd
(
s
,c⁄° *
buf
,
size_t
 
Àn
,
Êags
){

201 if(
£ndEºno
!=0){

202 
î∫o
=
£ndEºno
;

206 
boﬁ
 
£ndögLígth
=
£ndBuf„r
.
	`size
()==0;

208 
£ndBuf„r
.
	`assign
((c⁄° *)
buf
,
Àn
);

209 if(!
£ndögLígth
){

210 
	`nŸifyBuf„rSít
(
£ndBuf„r
);

211 
£ndBuf„r
.
	`îa£
();

213  
Àn
;

214 
	}
}

216 
	gªcvEºno
;

217 
	g°d
::
°rög
 
ªcvRëu∫Buf„r
;

218 
vútuÆ
 
ssize_t
 
	$ˇŒRecv
(
s
,*
buf
,
size_t
 
Àn
,
Êags
){

219 if(
ªcvEºno
!=0){

220 
î∫o
=
ªcvEºno
;

223 
k
=
°d
::
	`mö
(
Àn
,
ªcvRëu∫Buf„r
.
	`Àngth
());

224 if(
k
==0)

226 
	`mem˝y
(
buf
,
ªcvRëu∫Buf„r
.
	`d©a
(),
k
);

227 
ªcvRëu∫Buf„r
.
	`îa£
(0,
k
);

228  
k
;

229 
	}
}

230 
vútuÆ
 
boﬁ
 
	$hasM‹eRecv
() const{

231  
ªcvRëu∫Buf„r
.
	`size
()!=0;

232 
	}
}

233 
Mock_sockë
* 
	gmock_
;

238 ˛as†
	cMock_f˙é
: 
public
 
Mock


240 
public
:

241 
	$Mock_f˙é
():
	`ˇŒRëu∫s
(0),
	`å≠FD
(-1){
mock_
=
this
;}

242 ~
	$Mock_f˙é
(){
mock_
=0;
	}
}

244 
	gˇŒRëu∫s
;

245 
	gå≠FD
;

246 
vútuÆ
 
	$ˇŒ
(
fd
, 
cmd
, * 
¨g
){

247 if(
å≠FD
==-1)

248  
LIBC_SYMBOLS
.
	`f˙é
(
fd
,
cmd
,
¨g
);

249  
ˇŒRëu∫s
;

250 
	}
}

252 
Mock_f˙é
* 
	gmock_
;

257 ˛as†
	cMock_£À˘
: 
public
 
Mock


259 
public
:

260 
	$Mock_£À˘
(
Mock_sockë
* 
s
,
fd
):
	`sock
(s),

261 
	`ˇŒRëu∫s
(0),
	`myFD
(
fd
),
	$timeout
(50)

263 
mock_
=
this
;

265 ~
	$Mock_£À˘
(){
mock_
=0;
	}
}

267 
Mock_sockë
* 
	gsock
;

268 
	gˇŒRëu∫s
;

269 
	gmyFD
;

270 
	gtimeout
;

271 
vútuÆ
 
	$ˇŒ
(
nfds
,
fd_£t
 *
rfds
,fd_£à*
wfds
,fd_£à*
efds
,
timevÆ
 *
tv
){

272 
boﬁ
 
isWrôabÀReque°ed
=(
wfds
 && 
	`FD_ISSET
(
myFD
,wfds));

273 if(
rfds
Ë
	`FD_CLR
(
myFD
,rfds);

274 if(
wfds
Ë
	`FD_CLR
(
myFD
,wfds);

276 
timevÆ
 
myTimeout
={0,0};

277 if(!
isWrôabÀReque°ed
 && !
	`isFDRódabÀ
()){

278 
myTimeout
.
tv_£c
=
timeout
/1000;

279 
myTimeout
.
tv_u£c
=(
timeout
%1000)*1000;

281 
LIBC_SYMBOLS
.
	`£À˘
(
nfds
,
rfds
,
wfds
,
efds
,&
myTimeout
);

283 if(
isWrôabÀReque°ed
Ë
	`FD_SET
(
myFD
,
wfds
);

285 if(
	`isFDRódabÀ
(Ë&& 
rfds
Ë
	`FD_SET
(
myFD
,rfds);

286  
ˇŒRëu∫s
;

287 
	}
}

289 
vútuÆ
 
boﬁ
 
	$isFDRódabÀ
() const {

290  
sock
->
	`hasM‹eRecv
();

291 
	}
}

293 
Mock_£À˘
* 
	gmock_
;

299 ˛as†
	cMock_pﬁl
: 
public
 
Mock


301 
public
:

302 
	$Mock_pﬁl
(
Mock_sockë
* 
s
,
fd
):
	`sock
(s),

303 
	`ˇŒRëu∫s
(1),
	`myFD
(
fd
),
	$timeout
(50)

305 
mock_
=
this
;

307 ~
	$Mock_pﬁl
(){
mock_
=0;
	}
}

309 
Mock_sockë
* 
	gsock
;

310 
	gˇŒRëu∫s
;

311 
	gmyFD
;

312 
	gtimeout
;

313 
vútuÆ
 
	$ˇŒ
(
pﬁlfd
 *
fds
, 
POLL_NFDS_TYPE
 
nfds
, 
to
) {

314 
pﬁlfd
* 
myPﬁl
=0;

315 if(
fds
[
nfds
-1].
fd
==
myFD
)

316 
myPﬁl
=&
fds
[
nfds
-1];

317 
boﬁ
 
isWrôabÀReque°ed
=
Ál£
;

318 if(
myPﬁl
!=0){

319 
isWrôabÀReque°ed
=
myPﬁl
->
evíts
&
POLLOUT
;

320 
nfds
--;

322 
LIBC_SYMBOLS
.
	`pﬁl
(
fds
,
nfds
,(!
isWrôabÀReque°ed
&&!
	`isFDRódabÀ
())?
timeout
:0);

323 if(
myPﬁl
!=0){

325 
myPﬁl
->
ªvíts
=
isWrôabÀReque°ed
?
POLLOUT
:0;

327 
myPﬁl
->
ªvíts
|=
	`isFDRódabÀ
()?
POLLIN
:0;

329  
ˇŒRëu∫s
;

330 
	}
}

332 
vútuÆ
 
boﬁ
 
	$isFDRódabÀ
() const {

333  
sock
->
	`hasM‹eRecv
();

334 
	}
}

336 
Mock_pﬁl
* 
	gmock_
;

341 ˛as†
	cMock_gëtimeofday
: 
public
 
Mock


343 
public
:

344 
	$Mock_gëtimeofday
(){

345 
LIBC_SYMBOLS
.
	`gëtimeofday
(&
tv
,0);

346 
mock_
=
this
;

348 
	$Mock_gëtimeofday
(c⁄° 
Mock_gëtimeofday
& 
Ÿhî
):
	$tv
(
Ÿhî
.
tv
){
	}
}

349 
	$Mock_gëtimeofday
(
öt32_t
 
£c
,öt32_à
u£c
){

350 
tv
.
tv_£c
=
£c
;

351 
tv
.
tv_u£c
=
u£c
;

352 
	}
}

353 ~
	$Mock_gëtimeofday
(){
mock_
=0;
	}
}

355 
timevÆ
 
	gtv
;

356 
vútuÆ
 
	$ˇŒ
(
timevÆ
 *
ç
, 
GETTIMEOFDAY_ARG2_TYPE
 
tzp
){

357 *
ç
=
tv
;

359 
	}
}

360 
›î©‹
 
	$timevÆ
() const{

361  
tv
;

362 
	}
}

364 
vútuÆ
 
	$tick
(
howmuch
=1){
tv
.
tv_£c
+=howmuch;
	}
}

368 
vútuÆ
 
	$mûlôick
(
howmuch
=1){

369 
ms
=
tv
.
tv_u£c
/1000+
howmuch
;

370 
tv
.
tv_£c
+=
ms
/1000;

372 if(
ms
<0){

373 
ms
=1000-(-ms%1000);

375 
tv
.
tv_u£c
=(
ms
%1000)*1000;

376 
	}
}

377 
vútuÆ
 
	$tick
(c⁄° 
timevÆ
& 
howmuch
){

379 
ms
=
tv
.
tv_u£c
/1000+
howmuch
.tv_usec/1000;

380 
tv
.
tv_£c
+=
howmuch
.tv_£c+
ms
/1000;

381 
tv
.
tv_u£c
=(
ms
%1000)*1000;

382 
	}
}

383 
Mock_gëtimeofday
* 
	gmock_
;

387 
ölöe
 
boﬁ
 
	g›î©‹
==(c⁄° 
timevÆ
& 
lhs
, c⁄° 
	gtimevÆ
& 
	grhs
){

388  
	grhs
.
	gtv_£c
==
lhs
.
tv_£c
 && 
rhs
.
tv_u£c
/1000==lhs.tv_usec/1000;

393 
ölöe
 
timevÆ
 
	g›î©‹
-(c⁄° 
	gtimevÆ
& 
	glhs
, c⁄°ÅimevÆ& 
	grhs
){

394 
timevÆ
 
	gªs
;

395 
	gªs
.
	gtv_£c
=
lhs
.
tv_£c
-
rhs
.tv_sec;

396 
	gªs
.
	gtv_u£c
=(
lhs
.
tv_u£c
/1000-
rhs
.tv_usec/1000)*1000;

397 if(
	gªs
.
	gtv_u£c
<0){

398 
	gªs
.
	gtv_£c
--;

399 
	gªs
.
	gtv_u£c
=1000000+
ªs
.
tv_u£c
%1000000;

401  
	gªs
;

404 
ölöe
 
öt32_t
 
	$toMûli£c⁄ds
(c⁄° 
timevÆ
& 
tv
){

405  
tv
.
tv_£c
*1000+tv.
tv_u£c
/1000;

406 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/tests/LibCSymTable.h

19 #i‚de‡
LIBCSYMTABLE_H_


20 
	#LIBCSYMTABLE_H_


	)

22 
	~<sys/ty≥s.h
>

23 
	~<sys/sockë.h
>

24 
	~<√tdb.h
>

25 
	~<°ddef.h
>

26 
	~<dlf˙.h
>

27 
	~<ˇs£π
>

28 
	~<pﬁl.h
>

30 #ifde‡
THREADED


31 
	~<±hªad.h
>

34 
	~"c⁄fig.h
"

37 #ifde‡
__CYGWIN__


38 #i‡(
CYGWIN_VERSION_DLL_MAJOR
 < 1007)

39 
	#RANDOM_RET_TYPE
 

	)

41 
	#RANDOM_RET_TYPE
 

	)

43 
	#GETTIMEOFDAY_ARG2_TYPE
 *

	)

45 
	#RANDOM_RET_TYPE
 

	)

46 
	#GETTIMEOFDAY_ARG2_TYPE
 
timez⁄e
*

	)

49 
	#DECLARE_SYM
(
ªt
,
sym
,
sig
) \

50 
	`ªt
 (*
	tsym
##
	t_sig
)
	tsig
; \

51 
sym
##
_sig
 
¥ñﬂd_
##
	`sym
 () { \

52 
sym
##
_sig
 
±r
=0;\

53 if(!
±r
){ * 
h
=
	`gëH™dÀ
();Öå=(
sym
##
_sig
)
	`dlsym
(h,#sym); } \

54 
	`as£π
("U«bÀÅÿlﬂd "#sym" fromÜibc"&&
±r
); \

55  
±r
; \

57 
sym
##
_sig
 
	)
sym

59 
	#LIBC_SYMBOLS
 
LibCSymTabÀ
::
	`ö°™˚
()

	)

63 
	sLibCSymTabÀ


65 
DECLARE_SYM
(
ho°ít
*,
gëho°by«me
,(const *));

66 
DECLARE_SYM
(*,
ˇŒoc
,(
size_t
, size_t));

67 
DECLARE_SYM
(*,
ªÆloc
,(*, 
size_t
));

68 
DECLARE_SYM
(,
‰ì
,(*));

69 
DECLARE_SYM
(
RANDOM_RET_TYPE
,
øndom
,());

70 
DECLARE_SYM
(,
§™dom
,());

71 
DECLARE_SYM
(,
¥ötf
,(const *, ...));

72 
DECLARE_SYM
(,
sockë
,(,,));

73 
DECLARE_SYM
(,
˛o£
,());

74 
DECLARE_SYM
(,
gësock›t
,(,,,*,
sockÀn_t
*));

75 
DECLARE_SYM
(,
£tsock›t
,(,,,c⁄° *,
sockÀn_t
));

76 
DECLARE_SYM
(,
f˙é
,(,,...));

77 
DECLARE_SYM
(,
c⁄√˘
,(,c⁄° 
sockaddr
*,
sockÀn_t
));

78 
DECLARE_SYM
(
ssize_t
,
£nd
,(,c⁄° *,
size_t
,));

79 
DECLARE_SYM
(
ssize_t
,
ªcv
,(,c⁄° *,
size_t
,));

80 
DECLARE_SYM
(,
£À˘
,(,
fd_£t
*,fd_£t*,fd_£t*,
timevÆ
*));

81 
DECLARE_SYM
(,
pﬁl
,(
pﬁlfd
*,
POLL_NFDS_TYPE
,));

82 
DECLARE_SYM
(,
gëtimeofday
,(
timevÆ
*,
GETTIMEOFDAY_ARG2_TYPE
));

83 #ifde‡
THREADED


84 
DECLARE_SYM
(,
±hªad_¸óã
,(
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

86 
DECLARE_SYM
(,
±hªad_dëach
,(
±hªad_t
));

87 
DECLARE_SYM
(,
±hªad_c⁄d_brﬂdˇ°
,(
±hªad_c⁄d_t
 *));

88 
DECLARE_SYM
(,
±hªad_c⁄d_de°roy
,(
±hªad_c⁄d_t
 *));

89 
DECLARE_SYM
(,
±hªad_c⁄d_öô
,(
±hªad_c⁄d_t
 *, c⁄° 
±hªad_c⁄d©å_t
 *));

90 
DECLARE_SYM
(,
±hªad_c⁄d_sig«l
,(
±hªad_c⁄d_t
 *));

91 
DECLARE_SYM
(,
±hªad_c⁄d_timedwaô
,(
±hªad_c⁄d_t
 *,

92 
±hªad_muãx_t
 *, c⁄° 
time•ec
 *));

93 
DECLARE_SYM
(,
±hªad_c⁄d_waô
,(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *));

94 
DECLARE_SYM
(,
±hªad_joö
,(
±hªad_t
, **));

95 
DECLARE_SYM
(,
±hªad_muãx_de°roy
,(
±hªad_muãx_t
 *));

96 
DECLARE_SYM
(,
±hªad_muãx_öô
,(
±hªad_muãx_t
 *, c⁄° 
±hªad_muãx©å_t
 *));

97 
DECLARE_SYM
(,
±hªad_muãx_lock
,(
±hªad_muãx_t
 *));

98 
DECLARE_SYM
(,
±hªad_muãx_åylock
,(
±hªad_muãx_t
 *));

99 
DECLARE_SYM
(,
±hªad_muãx_u∆ock
,(
±hªad_muãx_t
 *));

101 
LibCSymTabÀ
();

103 * 
gëH™dÀ
();

104 
	mLibCSymTabÀ
& 
ö°™˚
();

	@/home/pig/zookeeper-3.4.5/src/c/tests/MocksBase.h

19 #i‚de‡
MOCKSBASE_H_


20 
	#MOCKSBASE_H_


	)

22 
	~<c°ddef
>

27 ˛as†
	cMock


29 
	mpublic
:

30 
vútuÆ
 ~
	$Mock
(){}

32 * 
›î©‹
 
	`√w
(
°d
::
size_t
 
s
);

33 
›î©‹
 
	`dñëe
(* 
p
);

34 
	}
};

	@/home/pig/zookeeper-3.4.5/src/c/tests/PthreadMocks.h

19 #i‚de‡
PTHREADMOCKS_H_


20 
	#PTHREADMOCKS_H_


	)

22 
	~<±hªad.h
>

23 
	~<°rög.h
>

24 
	~<î∫o.h
>

26 
	~"§c/zk_ad≠t‹.h
"

28 
	~"Utû.h
"

29 
	~"MocksBa£.h
"

30 
	~"LibCSymTabÀ.h
"

31 
	~"ThªadögUtû.h
"

34 ˛as†
	cMockPthªadsBa£
: 
public
 
Mock


36 
public
:

37 
	$MockPthªadsBa£
(){
mock_
=
this
;}

38 
vútuÆ
 ~
	$MockPthªadsBa£
(){
mock_
=0;
	}
}

40 
vútuÆ
 
±hªad_¸óã
(
±hªad_t
 * 
t
, c⁄° 
±hªad_©å_t
 *
a
,

41 *(*
f
)(*), *
d
) =0;

42 
vútuÆ
 
±hªad_joö
(
±hªad_t
 
t
, ** 
r
) =0;

43 
vútuÆ
 
±hªad_dëach
(
±hªad_t
 
t
) =0;

44 
vútuÆ
 
±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *
c
) =0;

45 
vútuÆ
 
±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
c
) =0;

46 
vútuÆ
 
±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 *
c
, c⁄° 
±hªad_c⁄d©å_t
 *
a
) =0;

47 
vútuÆ
 
±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *
c
) =0;

48 
vútuÆ
 
±hªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *
c
,

49 
±hªad_muãx_t
 *
m
, c⁄° 
time•ec
 *
t
) =0;

50 
vútuÆ
 
±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 *
c
, 
±hªad_muãx_t
 *
m
) =0;

51 
vútuÆ
 
±hªad_muãx_de°roy
(
±hªad_muãx_t
 *
m
) =0;

52 
vútuÆ
 
±hªad_muãx_öô
(
±hªad_muãx_t
 *
m
, c⁄° 
±hªad_muãx©å_t
 *
a
) =0;

53 
vútuÆ
 
±hªad_muãx_lock
(
±hªad_muãx_t
 *
m
) =0;

54 
vútuÆ
 
±hªad_muãx_åylock
(
±hªad_muãx_t
 *
m
) =0;

55 
vútuÆ
 
±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m
) =0;

57 
MockPthªadsBa£
* 
	gmock_
;

62 ˛as†
	cMockPthªadsNuŒ
: 
public
 
MockPthªadsBa£


64 
public
:

65 
	$MockPthªadsNuŒ
():

66 
	`±hªad_¸óãRëu∫s
(0),
	`±hªad_¸óãCou¡î
(0),

67 
	`±hªad_joöRëu∫s
(0),
	`±hªad_joöCou¡î
(0),
	`±hªad_joöResu…Rëu∫
(0),

68 
	`±hªad_dëachRëu∫s
(0),
	`±hªad_dëachCou¡î
(0),

69 
	`±hªad_c⁄d_brﬂdˇ°Rëu∫s
(0),
	`±hªad_c⁄d_brﬂdˇ°Cou¡î
(0),

70 
	`±hªad_c⁄d_de°royRëu∫s
(0),
	`±hªad_c⁄d_de°royCou¡î
(0),

71 
	`±hªad_c⁄d_öôRëu∫s
(0),
	`±hªad_c⁄d_öôCou¡î
(0),

72 
	`±hªad_c⁄d_sig«lRëu∫s
(0),
	`±hªad_c⁄d_sig«lCou¡î
(0),

73 
	`±hªad_c⁄d_timedwaôRëu∫s
(0),
	`±hªad_c⁄d_timedwaôCou¡î
(0),

74 
	`±hªad_c⁄d_waôRëu∫s
(0),
	`±hªad_c⁄d_waôCou¡î
(0),

75 
	`±hªad_muãx_de°royRëu∫s
(0),
	`±hªad_muãx_de°royCou¡î
(0),

76 
	`±hªad_muãx_öôRëu∫s
(0),
	`±hªad_muãx_öôCou¡î
(0),

77 
	`±hªad_muãx_lockRëu∫s
(0),
	`±hªad_muãx_lockCou¡î
(0),

78 
	`±hªad_muãx_åylockRëu∫s
(0),
	`±hªad_muãx_åylockCou¡î
(0),

79 
	`±hªad_muãx_u∆ockRëu∫s
(0),
	$±hªad_muãx_u∆ockCou¡î
(0)

81 
	`mem£t
(
thªads
,0,(threads));

84 
thªads
[512];

86 
±hªad_¸óãRëu∫s
;

87 
±hªad_¸óãCou¡î
;

88 
vútuÆ
 
	`±hªad_¸óã
(
±hªad_t
 * 
t
, c⁄° 
±hªad_©å_t
 *
a
,

89 *(*
f
)(*), *
d
){

90 * 
p
=(*)&
thªads
[
±hªad_¸óãCou¡î
++];

91 
p
[0]='i';

92 *
t
=(
±hªad_t
)
p
;

93  
±hªad_¸óãRëu∫s
;

94 
	}
}

95 
	g±hªad_joöRëu∫s
;

96 
	g±hªad_joöCou¡î
;

97 * 
	g±hªad_joöResu…Rëu∫
;

98 
vútuÆ
 
	$±hªad_joö
(
±hªad_t
 
t
, ** 
r
){

99 
±hªad_joöCou¡î
++;

100 if(
r
!=0)

101 *
r
=
±hªad_joöResu…Rëu∫
;

102 * 
p
=(*)
t
;

103 
p
[0]='x';p[1]+=1;

104  
±hªad_joöRëu∫s
;

105 
	}
}

106 
	g±hªad_dëachRëu∫s
;

107 
	g±hªad_dëachCou¡î
;

108 
vútuÆ
 
	$±hªad_dëach
(
±hªad_t
 
t
){

109 
±hªad_dëachCou¡î
++;

110 * 
p
=(*)
t
;

111 
p
[0]='x';p[1]+=1;

112  
±hªad_dëachRëu∫s
;

113 
	}
}

115 
	gãm∂©e
<
˛ass
 
	gT
>

116 
boﬁ
 
	$isInôülized
(c⁄° 
T
& 
t
){

117  ((*)
t
)[0]=='i';

118 
	}
}

119 
	gãm∂©e
<
˛ass
 
	gT
>

120 
boﬁ
 
	$isDe°royed
(c⁄° 
T
& 
t
){

121  ((*)
t
)[0]=='x';

122 
	}
}

123 
	gãm∂©e
<
˛ass
 
	gT
>

124 
	$gëDe°royCou¡î
(c⁄° 
T
& 
t
){

125  ((*)
t
)[1];

126 
	}
}

127 
	gãm∂©e
<
˛ass
 
	gT
>

128 
	$gëInvÆidAc˚ssCou¡î
(c⁄° 
T
& 
t
){

129  ((*)
t
)[2];

130 
	}
}

131 
	g±hªad_c⁄d_brﬂdˇ°Rëu∫s
;

132 
	g±hªad_c⁄d_brﬂdˇ°Cou¡î
;

133 
vútuÆ
 
	$±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *
c
){

134 
±hªad_c⁄d_brﬂdˇ°Cou¡î
++;

135 if(
	`isDe°royed
(
c
))((*)c)[2]++;

136  
±hªad_c⁄d_brﬂdˇ°Rëu∫s
;

137 
	}
}

138 
	g±hªad_c⁄d_de°royRëu∫s
;

139 
	g±hªad_c⁄d_de°royCou¡î
;

140 
vútuÆ
 
	$±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
c
){

141 
±hªad_c⁄d_de°royCou¡î
++;

142 * 
p
=(*)
c
;

143 
p
[0]='x';p[1]+=1;

144  
±hªad_c⁄d_de°royRëu∫s
;

145 
	}
}

146 
	g±hªad_c⁄d_öôRëu∫s
;

147 
	g±hªad_c⁄d_öôCou¡î
;

148 
vútuÆ
 
	$±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 *
c
, c⁄° 
±hªad_c⁄d©å_t
 *
a
){

149 
±hªad_c⁄d_öôCou¡î
++;

150 * 
p
=(*)
c
;

151 
p
[0]='i';

152 
p
[1]=0;

153 
p
[2]=0;

154  
±hªad_c⁄d_öôRëu∫s
;

155 
	}
}

156 
	g±hªad_c⁄d_sig«lRëu∫s
;

157 
	g±hªad_c⁄d_sig«lCou¡î
;

158 
vútuÆ
 
	$±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *
c
){

159 
±hªad_c⁄d_sig«lCou¡î
++;

160 if(
	`isDe°royed
(
c
))((*)c)[2]++;

161  
±hªad_c⁄d_sig«lRëu∫s
;

162 
	}
}

163 
	g±hªad_c⁄d_timedwaôRëu∫s
;

164 
	g±hªad_c⁄d_timedwaôCou¡î
;

165 
vútuÆ
 
	$±hªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *
c
,

166 
±hªad_muãx_t
 *
m
, c⁄° 
time•ec
 *
t
){

167 
±hªad_c⁄d_timedwaôCou¡î
++;

168 if(
	`isDe°royed
(
c
))((*)c)[2]++;

169  
±hªad_c⁄d_timedwaôRëu∫s
;

170 
	}
}

171 
	g±hªad_c⁄d_waôRëu∫s
;

172 
	g±hªad_c⁄d_waôCou¡î
;

173 
vútuÆ
 
	$±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 *
c
, 
±hªad_muãx_t
 *
m
){

174 
±hªad_c⁄d_waôCou¡î
++;

175 if(
	`isDe°royed
(
c
))((*)c)[2]++;

176  
±hªad_c⁄d_waôRëu∫s
;

177 
	}
}

178 
	g±hªad_muãx_de°royRëu∫s
;

179 
	g±hªad_muãx_de°royCou¡î
;

180 
vútuÆ
 
	$±hªad_muãx_de°roy
(
±hªad_muãx_t
 *
m
){

181 
±hªad_muãx_de°royCou¡î
++;

182 * 
p
=(*)
m
;

183 
p
[0]='x';p[1]+=1;

184  
±hªad_muãx_de°royRëu∫s
;

185 
	}
}

186 
	g±hªad_muãx_öôRëu∫s
;

187 
	g±hªad_muãx_öôCou¡î
;

188 
vútuÆ
 
	$±hªad_muãx_öô
(
±hªad_muãx_t
 *
m
, c⁄° 
±hªad_muãx©å_t
 *
a
){

189 
±hªad_muãx_öôCou¡î
++;

190 * 
p
=(*)
m
;

191 
p
[0]='i';

192 
p
[1]=0;

193 
p
[2]=0;

194  
±hªad_muãx_öôRëu∫s
;

195 
	}
}

196 
	g±hªad_muãx_lockRëu∫s
;

197 
	g±hªad_muãx_lockCou¡î
;

198 
vútuÆ
 
	$±hªad_muãx_lock
(
±hªad_muãx_t
 *
m
){

199 
±hªad_muãx_lockCou¡î
++;

200 if(
	`isDe°royed
(
m
))((*)m)[2]++;

201  
±hªad_muãx_lockRëu∫s
;

202 
	}
}

203 
	g±hªad_muãx_åylockRëu∫s
;

204 
	g±hªad_muãx_åylockCou¡î
;

205 
vútuÆ
 
	$±hªad_muãx_åylock
(
±hªad_muãx_t
 *
m
){

206 
±hªad_muãx_åylockCou¡î
++;

207 if(
	`isDe°royed
(
m
))((*)m)[2]++;

208  
±hªad_muãx_åylockRëu∫s
;

209 
	}
}

210 
	g±hªad_muãx_u∆ockRëu∫s
;

211 
	g±hªad_muãx_u∆ockCou¡î
;

212 
vútuÆ
 
	$±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m
){

213 
±hªad_muãx_u∆ockCou¡î
++;

214 if(
	`isDe°royed
(
m
))((*)m)[2]++;

215  
±hªad_muãx_u∆ockRëu∫s
;

216 
	}
}

221 ˛as†
	cMockPthªadZKNuŒ
: 
public
 
MockPthªadsNuŒ


223 
°d
::
	tm≠
<
	t±hªad_t
,
	tzh™dÀ_t
*> 
	tM≠
;

224 
M≠
 
	mm≠_
;

225 
	mpublic
:

226 
vútuÆ
 
±hªad_¸óã
(
±hªad_t
 * 
t
, c⁄° 
±hªad_©å_t
 *
a
,

227 *(*
f
)(*), *
d
){

228 
	mªt
=
MockPthªadsNuŒ
::
±hªad_¸óã
(
t
,
a
,
f
,
d
);

229 
zh™dÀ_t
* 
	mzh
=(zh™dÀ_t*)
d
;

230 
ad≠t‹_thªads
* 
	mad
=◊d≠t‹_thªads*)
zh
->
ad≠t‹_¥iv
;

231 
≠i_¥ﬁog
(
zh
);

232 
	mad
->
	mthªadsToWaô
--;

233 
putVÆue
(
m≠_
,*
t
,
zh
);

234  
	mªt
;

236 
vútuÆ
 
	$±hªad_joö
(
±hªad_t
 
t
, ** 
r
){

237 
zh™dÀ_t
* 
zh
=0;

238 if(
	`gëVÆue
(
m≠_
,
t
,
zh
))

239 
	`≠i_ïûog
(
zh
,0);

240  
MockPthªadsNuŒ
::
	`±hªad_joö
(
t
,
r
);

241 
	}
}

244 
	sThªadInfo
{

245 íum {
	mRUNNING
,
	mTERMINATED
} 
	tThªadSèã
;

247 
ThªadInfo
():

248 
de°ru˘i⁄Cou¡î_
(0),
övÆidAc˚ssCou¡î_
(0),
°©e_
(
RUNNING
)

252 
	mThªadInfo
& 
öcDe°royed
() {

253 
	mde°ru˘i⁄Cou¡î_
++;

254  *
	mthis
;

256 
	mThªadInfo
& 
öcInvÆidAc˚ss
(){

257 
	mövÆidAc˚ssCou¡î_
++;

258  *
	mthis
;

260 
	mThªadInfo
& 
£tTîmö©ed
(){

261 
	m°©e_
=
TERMINATED
;

262  *
	mthis
;

264 
	mde°ru˘i⁄Cou¡î_
;

265 
	mövÆidAc˚ssCou¡î_
;

266 
ThªadSèã
 
	m°©e_
;

269 ˛as†
	cCheckedPthªad
: 
public
 
MockPthªadsBa£


274 
ThªadInfo
 
	tE¡ry
;

275 
	m°d
::
	tm≠
<
	t±hªad_t
,
	tE¡ry
> 
	tThªadM≠
;

276 
ThªadM≠
 
	mtm≠_
;

277 
	mThªadM≠
& 
gëM≠
(c⁄° 
Ty≥Op
<
±hªad_t
>::
B¨eT
&){ 
tm≠_
;}

278 
	g°d
::
	tm≠
<
	t±hªad_muãx_t
*,
	tE¡ry
> 
	tMuãxM≠
;

279 
MuãxM≠
 
	gmm≠_
;

280 
	gMuãxM≠
& 
gëM≠
(c⁄° 
Ty≥Op
<
±hªad_muãx_t
>::
B¨eT
&){ 
mm≠_
;}

281 
	g°d
::
	tm≠
<
	t±hªad_c⁄d_t
*,
	tE¡ry
> 
	tCVM≠
;

282 
CVM≠
 
	gcvm≠_
;

283 
	gCVM≠
& 
gëM≠
(c⁄° 
Ty≥Op
<
±hªad_c⁄d_t
>::
B¨eT
&){ 
cvm≠_
;}

285 
Muãx
 
	gmx
;

287 
	gãm∂©e
<
˛ass
 
	gT
>

288 
	$m¨kDe°royed
(
T
& 
t
){

289 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

290 
E¡ry
 
e
;

291 
	`synchr⁄ized
(
mx
);

292 if(
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
)){

293 
	`putVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
	`E¡ry
(
e
).
	`öcDe°royed
());

295 
	`putVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
	`E¡ry
().
	`öcDe°royed
());

297 
	}
}

298 
	gãm∂©e
<
˛ass
 
	gT
>

299 
	$m¨kCª©ed
(
T
& 
t
){

300 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

301 
E¡ry
 
e
;

302 
	`synchr⁄ized
(
mx
);

303 if(!
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
))

304 
	`putVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
	`E¡ry
());

305 
	}
}

306 
	gãm∂©e
<
˛ass
 
	gT
>

307 
	$checkAc˚s£d
(
T
& 
t
){

308 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

309 
E¡ry
 
e
;

310 
	`synchr⁄ized
(
mx
);

311 if(
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
Ë&&É.
de°ru˘i⁄Cou¡î_
>0)

312 
	`putVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
	`E¡ry
(
e
).
	`öcInvÆidAc˚ss
());

313 
	}
}

314 
	$£tTîmö©ed
(
±hªad_t
 
t
){

315 
E¡ry
 
e
;

316 
	`synchr⁄ized
(
mx
);

317 if(
	`gëVÆue
(
tm≠_
,
t
,
e
))

318 
	`putVÆue
(
tm≠_
,
t
,
	`E¡ry
(
e
).
	`£tTîmö©ed
());

319 
	}
}

320 
	gpublic
:

321 
boﬁ
 
vîbo£
;

322 
	$CheckedPthªad
():
	$vîbo£
(
Ál£
){

323 
tm≠_
.
	`˛ór
();

324 
mm≠_
.
	`˛ór
();

325 
cvm≠_
.
	`˛ór
();

326 
mx
.
	`ªÀa£
();

327 
	}
}

328 
	gãm∂©e
 <
˛ass
 
	gT
>

329 
boﬁ
 
	$isInôülized
(c⁄° 
T
& 
t
){

330 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

331 
E¡ry
 
e
;

332 
	`synchr⁄ized
(
mx
);

333  
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
Ë&&É.
de°ru˘i⁄Cou¡î_
==0;

334 
	}
}

335 
	gãm∂©e
 <
˛ass
 
	gT
>

336 
boﬁ
 
	$isDe°royed
(c⁄° 
T
& 
t
){

337 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

338 
E¡ry
 
e
;

339 
	`synchr⁄ized
(
mx
);

340  
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
Ë&&É.
de°ru˘i⁄Cou¡î_
>0;

341 
	}
}

342 
boﬁ
 
	$isTîmö©ed
(
±hªad_t
 
t
){

343 
E¡ry
 
e
;

344 
	`synchr⁄ized
(
mx
);

345  
	`gëVÆue
(
tm≠_
,
t
,
e
Ë&&É.
°©e_
==
ThªadInfo
::
TERMINATED
;

346 
	}
}

347 
	gãm∂©e
 <
˛ass
 
	gT
>

348 
	$gëDe°royCou¡î
(c⁄° 
T
& 
t
){

349 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

350 
E¡ry
 
e
;

351 
	`synchr⁄ized
(
mx
);

352  
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
)?e.
de°ru˘i⁄Cou¡î_
:-1;

353 
	}
}

354 
	gãm∂©e
<
˛ass
 
	gT
>

355 
	$gëInvÆidAc˚ssCou¡î
(c⁄° 
T
& 
t
){

356 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 
	tTy≥
;

357 
E¡ry
 
e
;

358 
	`synchr⁄ized
(
mx
);

359  
	`gëVÆue
(
	`gëM≠
(
	`Ty≥
()),
t
,
e
)?e.
övÆidAc˚ssCou¡î_
:-1;

360 
	}
}

362 
	sThªadC⁄ãxt
{

363 *(*
	tThªadFunc
)(*);

365 
ThªadC⁄ãxt
(
ThªadFunc
 
func
,* 
∑øm
):
func_
(func),
∑øm_
(param){}

366 
ThªadFunc
 
	gfunc_
;

367 * 
	g∑øm_
;

369 * 
	$thªadFuncWøµî
(* 
v
){

370 
ThªadC⁄ãxt
* 
˘x
=(ThªadC⁄ãxt*)
v
;

371 
±hªad_t
 
t
=
	`±hªad_£lf
();

372 
	`m¨kCª©ed
(
t
);

373 * 
ªs
=
˘x
->
	`func_
(˘x->
∑øm_
);

374 
	`£tTîmö©ed
(
	`±hªad_£lf
());

375 
dñëe
 
˘x
;

376  
ªs
;

377 
	}
}

378 
vútuÆ
 
±hªad_¸óã
(
±hªad_t
 * 
t
, c⁄° 
±hªad_©å_t
 *
a
,

379 *(*
f
)(*), *
d
)

381 
	gªt
=
LIBC_SYMBOLS
.
±hªad_¸óã
(
t
,
a
,
thªadFuncWøµî
,

382 
√w
 
ThªadC⁄ãxt
(
f
,
d
));

383 if(
	gvîbo£
)

384 
TEST_TRACE
(("thªad cª©ed %p",*
t
));

385  
	gªt
;

387 
vútuÆ
 
	$±hªad_joö
(
±hªad_t
 
t
, ** 
r
){

388 if(
vîbo£
Ë
	`TEST_TRACE
(("thªad joöed %p",
t
));

389 
ªt
=
LIBC_SYMBOLS
.
	`±hªad_joö
(
t
,
r
);

390 if(
ªt
==0)

391 
	`m¨kDe°royed
(
t
);

392  
ªt
;

393 
	}
}

394 
vútuÆ
 
	$±hªad_dëach
(
±hªad_t
 
t
){

395 if(
vîbo£
Ë
	`TEST_TRACE
(("thªad dëached %p",
t
));

396 
ªt
=
LIBC_SYMBOLS
.
	`±hªad_dëach
(
t
);

397 if(
ªt
==0)

398 
	`m¨kDe°royed
(
t
);

399  
ªt
;

400 
	}
}

401 
vútuÆ
 
	$±hªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *
c
){

402 
	`checkAc˚s£d
(
c
);

403  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_brﬂdˇ°
(
c
);

404 
	}
}

405 
vútuÆ
 
	$±hªad_c⁄d_de°roy
(
±hªad_c⁄d_t
 *
c
){

406 
	`m¨kDe°royed
(
c
);

407  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_de°roy
(
c
);

408 
	}
}

409 
vútuÆ
 
	$±hªad_c⁄d_öô
(
±hªad_c⁄d_t
 *
c
, c⁄° 
±hªad_c⁄d©å_t
 *
a
){

410 
	`m¨kCª©ed
(
c
);

411  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_öô
(
c
,
a
);

412 
	}
}

413 
vútuÆ
 
	$±hªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *
c
){

414 
	`checkAc˚s£d
(
c
);

415  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_sig«l
(
c
);

416 
	}
}

417 
vútuÆ
 
	$±hªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *
c
,

418 
±hªad_muãx_t
 *
m
, c⁄° 
time•ec
 *
t
){

419 
	`checkAc˚s£d
(
c
);

420  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_timedwaô
(
c
,
m
,
t
);

421 
	}
}

422 
vútuÆ
 
	$±hªad_c⁄d_waô
(
±hªad_c⁄d_t
 *
c
, 
±hªad_muãx_t
 *
m
){

423 
	`checkAc˚s£d
(
c
);

424  
LIBC_SYMBOLS
.
	`±hªad_c⁄d_waô
(
c
,
m
);

425 
	}
}

426 
vútuÆ
 
	$±hªad_muãx_de°roy
(
±hªad_muãx_t
 *
m
){

427 
	`m¨kDe°royed
(
m
);

428  
LIBC_SYMBOLS
.
	`±hªad_muãx_de°roy
(
m
);

429 
	}
}

430 
vútuÆ
 
	$±hªad_muãx_öô
(
±hªad_muãx_t
 *
m
, c⁄° 
±hªad_muãx©å_t
 *
a
){

431 
	`m¨kCª©ed
(
m
);

432  
LIBC_SYMBOLS
.
	`±hªad_muãx_öô
(
m
,
a
);

433 
	}
}

434 
vútuÆ
 
	$±hªad_muãx_lock
(
±hªad_muãx_t
 *
m
){

435 
	`checkAc˚s£d
(
m
);

436  
LIBC_SYMBOLS
.
	`±hªad_muãx_lock
(
m
);

437 
	}
}

438 
vútuÆ
 
	$±hªad_muãx_åylock
(
±hªad_muãx_t
 *
m
){

439 
	`checkAc˚s£d
(
m
);

440  
LIBC_SYMBOLS
.
	`±hªad_muãx_åylock
(
m
);

441 
	}
}

442 
vútuÆ
 
	$±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m
){

443 
	`checkAc˚s£d
(
m
);

444  
LIBC_SYMBOLS
.
	`±hªad_muãx_u∆ock
(
m
);

445 
	}
}

	@/home/pig/zookeeper-3.4.5/src/c/tests/ThreadingUtil.h

19 #i‚de‡
THREADINGUTIL_H_


20 
	#THREADINGUTIL_H_


	)

22 
	~<ve˘‹
>

24 #ifde‡
THREADED


25 
	~"±hªad.h
"

32 
öt32_t
 
©omic_po°_ö¸
(vﬁ©ûêöt32_t* 
›î™d
, i¡32_à
ö¸
);

34 
öt32_t
 
©omic_„tch_°‹e
(vﬁ©ûêöt32_à*
›î™d
, i¡32_à
vÆue
);

37 ˛as†
	cAtomicI¡
{

38 
	mpublic
:

39 
ex∂icô
 
	$AtomicI¡
(
öt32_t
 
öô
=0):
	$v_
(
öô
){}

40 
	$AtomicI¡
(c⁄° 
AtomicI¡
& 
Ÿhî
):
	$v_
(
Ÿhî
){
	}
}

42 
AtomicI¡
& 
›î©‹
=(c⁄° AtomicI¡& 
lhs
){

43 
©omic_„tch_°‹e
(&
v_
,
lhs
);

44  *
	gthis
;

46 
	gAtomicI¡
& 
	g›î©‹
=(
öt32_t
 
i
){

47 
©omic_„tch_°‹e
(&
v_
,
i
);

48  *
	gthis
;

51 
	gAtomicI¡
& 
	g›î©‹
++() {

52 
©omic_po°_ö¸
(&
v_
,1);

53  *
	gthis
;

56 
	gAtomicI¡
& 
	g›î©‹
--() {

57 
©omic_po°_ö¸
(&
v_
,-1);

58  *
	gthis
;

61 
AtomicI¡
 
	g›î©‹
++(){

62  
AtomicI¡
(
©omic_po°_ö¸
(&
v_
,1));

65 
AtomicI¡
 
	g›î©‹
--(){

66  
AtomicI¡
(
©omic_po°_ö¸
(&
v_
,-1));

69 
›î©‹
 () const{

70  
	`©omic_po°_ö¸
(&
v_
,0);

71 
	}
}

72 
	$gë
() const{

73  
	`©omic_po°_ö¸
(&
v_
,0);

74 
	}
}

75 
	g¥iv©e
:

76 
muèbÀ
 
öt32_t
 
v_
;

79 #ifde‡
THREADED


81 
	#VALIDATE_JOBS
(
jm
Ëjm.
	`vÆid©eJobs
(
__FILE__
,
__LINE__
)

	)

82 
	#VALIDATE_JOB
(
j
Ëj.
	`vÆid©e
(
__FILE__
,
__LINE__
)

	)

84 ˛as†
	cMuãx
{

85 
	mpublic
:

86 
Muãx
();

87 ~
Muãx
();

88 
acquúe
();

89 
ªÀa£
();

90 
	m¥iv©e
:

91 
Muãx
(const Mutex&);

92 
	mMuãx
& 
	m›î©‹
=(c⁄° 
Muãx
&);

93 
	mIm∂
;

94 
Im∂
* 
	mim∂_
;

97 ˛as†
	cMTLock
{

98 
	mpublic
:

99 
	$MTLock
(
Muãx
& 
m
):
	$m_
(
m
){m.
	`acquúe
();}

100 ~
	$MTLock
(){
m_
.
	`ªÀa£
();
	}
}

101 
	gMuãx
& 
	gm_
;

104 
	#synchr⁄ized
(
m
Ë
MTLock
 
	`__lock
(m)

	)

107 ˛as†
	cL©ch
 {

108 
	mpublic
:

109 
vútuÆ
 ~
	$L©ch
() {}

110 
vútuÆ
 
	$awaô
() const =0;

111 
vútuÆ
 
	`sig«lAndWaô
() =0;

112 
vútuÆ
 
	`sig«l
() =0;

113 
	}
};

115 ˛as†
	cCou¡DownL©ch
: 
public
 
L©ch
 {

116 
public
:

117 
	$Cou¡DownL©ch
(
cou¡
):
	$cou¡_
(
cou¡
) {

118 
	`±hªad_c⁄d_öô
(&
c⁄d_
,0);

119 
	`±hªad_muãx_öô
(&
mut_
,0);

121 
vútuÆ
 ~
	$Cou¡DownL©ch
() {

122 
	`±hªad_muãx_lock
(&
mut_
);

123 if(
cou¡_
!=0) {

124 
cou¡_
=0;

125 
	`±hªad_c⁄d_brﬂdˇ°
(&
c⁄d_
);

127 
	`±hªad_muãx_u∆ock
(&
mut_
);

129 
	`±hªad_c⁄d_de°roy
(&
c⁄d_
);

130 
	`±hªad_muãx_de°roy
(&
mut_
);

131 
	}
}

133 
vútuÆ
 
	$awaô
() const {

134 
	`±hªad_muãx_lock
(&
mut_
);

135 
	`awaôIm∂
();

136 
	`±hªad_muãx_u∆ock
(&
mut_
);

137 
	}
}

138 
vútuÆ
 
	$sig«lAndWaô
() {

139 
	`±hªad_muãx_lock
(&
mut_
);

140 
	`sig«lIm∂
();

141 
	`awaôIm∂
();

142 
	`±hªad_muãx_u∆ock
(&
mut_
);

143 
	}
}

144 
vútuÆ
 
	$sig«l
() {

145 
	`±hªad_muãx_lock
(&
mut_
);

146 
	`sig«lIm∂
();

147 
	`±hªad_muãx_u∆ock
(&
mut_
);

148 
	}
}

149 
	g¥iv©e
:

150 
	$awaôIm∂
() const{

151 
cou¡_
!=0)

152 
	`±hªad_c⁄d_waô
(&
c⁄d_
,&
mut_
);

153 
	}
}

154 
	$sig«lIm∂
() {

155 if(
cou¡_
>0) {

156 
cou¡_
--;

157 
	`±hªad_c⁄d_brﬂdˇ°
(&
c⁄d_
);

159 
	}
}

160 
	gcou¡_
;

161 
muèbÀ
 
±hªad_muãx_t
 
	gmut_
;

162 
muèbÀ
 
±hªad_c⁄d_t
 
	gc⁄d_
;

165 ˛as†
	cTe°Job
 {

166 
	mpublic
:

167 
	tJobId
;

168 
	$Te°Job
():
	`hasRun_
(
Ál£
),
	`°¨tL©ch_
(0),
	$ídL©ch_
(0) {}

169 
vútuÆ
 ~
	$Te°Job
() {

170 
	`joö
();

171 
	}
}

172 
vútuÆ
 
Te°Job
* 
	$˛⁄e
() const =0;

174 
vútuÆ
 
	`run
() =0;

175 
vútuÆ
 
	$vÆid©e
(c⁄° * 
fûe
, 
löe
) const =0;

177 
vútuÆ
 
	$°¨t
(
L©ch
* 
°¨tL©ch
=0,L©ch* 
ídL©ch
=0) {

178 
°¨tL©ch_
=
°¨tL©ch
;
ídL©ch_
=
ídL©ch
;

179 
hasRun_
=
åue
;

180 
	`±hªad_¸óã
(&
thªad_
, 0, 
thªad
, 
this
);

181 
	}
}

182 
vútuÆ
 
JobId
 
	$gëJobId
() const {

183  (
JobId
)
thªad_
;

184 
	}
}

185 
vútuÆ
 
	$joö
() {

186 if(!
hasRun_
)

188 if(!
	`±hªad_equÆ
(
thªad_
,
	`±hªad_£lf
()))

189 
	`±hªad_joö
(
thªad_
,0);

191 
	`±hªad_dëach
(
thªad_
);

192 
	}
}

193 
	g¥iv©e
:

194 
	$awaôSèπ
() {

195 if(
°¨tL©ch_
==0) ;

196 
°¨tL©ch_
->
	`sig«lAndWaô
();

197 
	}
}

198 
	$sig«lFöished
() {

199 if(
ídL©ch_
==0) ;

200 
ídL©ch_
->
	`sig«l
();

201 
	}
}

202 * 
	$thªad
(* 
p
) {

203 
Te°Job
* 
j
=(Te°Job*)
p
;

204 
j
->
	`awaôSèπ
();

205 
j
->
	`run
();

206 
j
->
	`sig«lFöished
();

208 
	}
}

209 
boﬁ
 
	ghasRun_
;

210 
L©ch
* 
	g°¨tL©ch_
;

211 
L©ch
* 
	gídL©ch_
;

212 
±hªad_t
 
	gthªad_
;

215 ˛as†
	cTe°JobM™agî
 {

216 
	m°d
::
	tve˘‹
<
	tTe°Job
*> 
	tJobLi°
;

217 
	mpublic
:

218 
	$Te°JobM™agî
(c⁄° 
Te°Job
& 
tj
,
thªadCou¡
=1):

219 
	`°¨tL©ch_
(
thªadCou¡
),
	$ídL©ch_
(
thªadCou¡
)

221 
i
=0;i<
thªadCou¡
;++i)

222 
jobs_
.
	`push_back
(
tj
.
	`˛⁄e
());

224 
vútuÆ
 ~
	$Te°JobM™agî
(){

225 
i
=0;i<
jobs_
.
	`size
();++i)

226 
dñëe
 
jobs_
[
i
];

227 
	}
}

229 
vútuÆ
 
	$°¨tAŒJobs
() {

230 
i
=0;i<
jobs_
.
	`size
();++i)

231 
jobs_
[
i
]->
	`°¨t
(&
°¨tL©ch_
,&
ídL©ch_
);

232 
	}
}

233 
vútuÆ
 
	$°¨tJobsImmedüãly
() {

234 
i
=0;i<
jobs_
.
	`size
();++i)

235 
jobs_
[
i
]->
	`°¨t
(0,&
ídL©ch_
);

236 
	}
}

237 
vútuÆ
 
	$waô
() const {

238 
ídL©ch_
.
	`awaô
();

239 
	}
}

240 
vútuÆ
 
	$vÆid©eJobs
(c⁄° * 
fûe
, 
löe
) const{

241 
i
=0;i<
jobs_
.
	`size
();++i)

242 
jobs_
[
i
]->
	`vÆid©e
(
fûe
,
löe
);

243 
	}
}

244 
	g¥iv©e
:

245 
JobLi°
 
jobs_
;

246 
Cou¡DownL©ch
 
	g°¨tL©ch_
;

247 
Cou¡DownL©ch
 
	gídL©ch_
;

252 ˛as†
	cMuãx
{

253 
	mpublic
:

254 
	$acquúe
(){}

255 
	$ªÀa£
(){
	}
}

257 
	#synchr⁄ized
(
m
)

	)

	@/home/pig/zookeeper-3.4.5/src/c/tests/Util.h

19 #i‚de‡
UTIL_H_


20 
	#UTIL_H_


	)

22 
	~<m≠
>

23 
	~<ve˘‹
>

24 
	~<°rög
>

26 
	~"zookì≥r_log.h
"

29 
	#COUNTOF
(
¨øy
Ë◊ºay)/◊ºay[0])

	)

31 
	#DECLARE_WRAPPER
(
ªt
,
sym
,
sig
) \

32 "C" 
ªt
 
__ªÆ_
##
sym
 
sig
; \

33 "C" 
ªt
 
__wøp_
##
sym
 
sig


	)

35 
	#CALL_REAL
(
sym
,
∑øms
) \

36 
__ªÆ_
##
sym
 
∑øms


	)

39 
	#TEST_TRACE
(
x
) \

40 
	`log_mesßge
(
ZOO_LOG_LEVEL_DEBUG
,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

42 c⁄° 
°d
::
°rög
 
EMPTY_STRING
;

47 
	gãm∂©e
 <
˛ass
 
	gT
>

48 
	sTy≥Op
 {

49 
T
 
	tB¨eT
;

50 
T
 
	tArgT
;

54 
	gãm∂©e
 <
˛ass
 
	gT
>

55 
	gTy≥Op
<
	gT
&>{

56 
	gT
& 
	tArgT
;

57 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

61 
	gãm∂©e
 <
˛ass
 
	gT
>

62 
	gTy≥Op
<
	gT
*>{

63 
T
* 
	tArgT
;

64 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

70 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

71 
putVÆue
(
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
, c⁄° V& 
v
){

72 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

73 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

74 if(
	gô
==
m≠
.
íd
())

75 
m≠
.
ö£π
(
ty≥«me
 
M≠
::
vÆue_ty≥
(
k
,
v
));

77 
	gm≠
[
k
]=
v
;

80 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

81 
boﬁ
 
gëVÆue
(c⁄° 
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
,V& 
v
){

82 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

83 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

84 if(
	gô
==
m≠
.
íd
())

85  
Ál£
;

86 
	gv
=
ô
->
£c⁄d
;

87  
	gåue
;

94 
mûli¶ìp
(
ms
);

95 
FILE
 *
›ílogfûe
(c⁄° * 
«me
);

98 
	gãm∂©e
<
˛ass
 
	gPªdiˇã
>

99 
	$ísuªC⁄dôi⁄
(c⁄° 
Pªdiˇã
& 
p
,
timeout
){

100 
ñ≠£d
=0;

101 !
	`p
(Ë&& 
ñ≠£d
<
timeout
){

102 
	`mûli¶ìp
(2);

103 
ñ≠£d
+=2;

105  
ñ≠£d
;

106 
	}
};

110 ˛as†
	cTe°C⁄fig
{

111 
	m°d
::
	tve˘‹
<
	t°d
::
	t°rög
> 
	tCmdLöeO±Li°
;

112 
	mpublic
:

113 
CmdLöeO±Li°
::
	tc⁄°_ôî©‹
 const_iterator;

114 
	$Te°C⁄fig
(){}

115 ~
	$Te°C⁄fig
(){
	}
}

116 
	$addC⁄figFromCmdLöe
(
¨gc
, * 
¨gv
[]){

117 if(
¨gc
>=2)

118 
ã°Name_
=
¨gv
[1];

119 
i
=2; i<
¨gc
;++i)

120 
cmdO±s_
.
	`push_back
(
¨gv
[
i
]);

121 
	}
}

122 
c⁄°_ôî©‹
 
	$gëExåaO±Begö
(Ëc⁄° { 
cmdO±s_
.
	`begö
();
	}
}

123 
c⁄°_ôî©‹
 
	$gëExåaO±End
(Ëc⁄° { 
cmdO±s_
.
	`íd
();
	}
}

124 
size_t
 
	$gëExåaO±Cou¡
() const {

125  
cmdO±s_
.
	`size
();

126 
	}
}

127 c⁄° 
	g°d
::
°rög
& 
	$gëTe°Name
() const {

128  
ã°Name_
=="Æl"?
EMPTY_STRING
:testName_;

129 
	}
}

130 
	g¥iv©e
:

131 
CmdLöeO±Li°
 
cmdO±s_
;

132 
	g°d
::
°rög
 
ã°Name_
;

135 
Te°C⁄fig
 
globÆTe°C⁄fig
;

	@/home/pig/zookeeper-3.4.5/src/c/tests/Vector.h

18 #i‚de‡
_VECTOR_UTIL_H


19 
	#_VECTOR_UTIL_H


	)

21 
	~<ve˘‹
>

24 
	gãm∂©e
 <
˛ass
 
	gU
>

25 
	g°d
::
o°ªam
& 
›î©‹
<<(
°d
::o°ªam& 
os
,c⁄° std::
ve˘‹
<
U
>& 
c
){

26 
°d
::
	tve˘‹
<
	tU
> 
	tV
;

27 
	gos
<<"[";

28 if(
	gc
.
size
()>0){

29 
ty≥«me
 
	gV
::
c⁄°_ôî©‹
 
ô
=
c
.
begö
();
	gô
!=c.
íd
();++it)

30 
	gos
<<*
	gô
<<",";

31 
	gos
.
£ekp
(-1,
°d
::
ios
::
cur
);

33 
	gos
<<"]";

34  
	gos
;

	@/home/pig/zookeeper-3.4.5/src/c/tests/ZKMocks.h

19 #i‚de‡
ZKMOCKS_H_


20 
	#ZKMOCKS_H_


	)

22 
	~<zookì≥r.h
>

23 
	~"§c/zk_ad≠t‹.h
"

25 
	~"Utû.h
"

26 
	~"LibCMocks.h
"

27 
	~"MocksBa£.h
"

33 
f‹˚C⁄√˘ed
(
zh™dÀ_t
* 
zh
);

38 
ãrmö©eZookì≥rThªads
(
zh™dÀ_t
* 
zh
);

42 
	gSyn˚dBoﬁC⁄dôi⁄
;

44 ˛as†
	cW©chîA˘i⁄
{

45 
	mpublic
:

46 
	$W©chîA˘i⁄
():
	$åiggîed_
(
Ál£
){}

47 
vútuÆ
 ~
	$W©chîA˘i⁄
(){
	}
}

49 
vútuÆ
 
	$⁄Sessi⁄Expúed
(
zh™dÀ_t
*){
	}
}

50 
vútuÆ
 
	$⁄C⁄√˘i⁄E°ablished
(
zh™dÀ_t
*){
	}
}

51 
vútuÆ
 
	$⁄C⁄√˘i⁄Lo°
(
zh™dÀ_t
*){
	}
}

52 
vútuÆ
 
	$⁄NodeVÆueCh™ged
(
zh™dÀ_t
*,c⁄° * 
∑th
){
	}
}

53 
vútuÆ
 
	$⁄NodeDñëed
(
zh™dÀ_t
*,c⁄° * 
∑th
){
	}
}

54 
vútuÆ
 
	$⁄ChûdCh™ged
(
zh™dÀ_t
*,c⁄° * 
∑th
){
	}
}

56 
Syn˚dBoﬁC⁄dôi⁄
 
	$isW©chîTriggîed
() const;

57 
	$£tW©chîTriggîed
(){

58 
	`synchr⁄ized
(
mx_
);

59 
åiggîed_
=
åue
;

60 
	}
}

62 
	g¥Ÿe˘ed
:

63 
muèbÀ
 
Muãx
 
mx_
;

64 
boﬁ
 
	gåiggîed_
;

69 
a˘iveW©chî
(
zh™dÀ_t
 *
zh
, 
ty≥
, 
°©e
, c⁄° *
∑th
,* 
˘x
);

73 ˛as†
	cAsyncCom∂ëi⁄
{

74 
	mpublic
:

75 
vútuÆ
 ~
	$AsyncCom∂ëi⁄
(){}

76 
vútuÆ
 
	$a˛Com∂
(
rc
, 
ACL_ve˘‹
 *
a˛
,
Sèt
 *
°©
){
	}
}

77 
vútuÆ
 
	$d©aCom∂
(
rc
, c⁄° *
vÆue
, 
Àn
, c⁄° 
Sèt
 *
°©
){
	}
}

78 
vútuÆ
 
	$°©Com∂
(
rc
, c⁄° 
Sèt
 *
°©
){
	}
}

79 
vútuÆ
 
	$°rögCom∂
(
rc
, c⁄° *
vÆue
){
	}
}

80 
vútuÆ
 
	$°rögsCom∂
(
rc
,c⁄° 
Såög_ve˘‹
 *
°rögs
){
	}
}

81 
vútuÆ
 
	$voidCom∂
(
rc
){
	}
}

83 
asyncCom∂ëi⁄
(
rc
, 
ACL_ve˘‹
 *
a˛
,
Sèt
 *
°©
, c⁄° *
d©a
);

84 
asyncCom∂ëi⁄
(
rc
, c⁄° *
vÆue
, 
Àn
, c⁄° 
Sèt
 *
°©
,

85 c⁄° *
d©a
);

86 
asyncCom∂ëi⁄
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
);

87 
asyncCom∂ëi⁄
(
rc
, c⁄° *
vÆue
, c⁄° *
d©a
);

88 
asyncCom∂ëi⁄
(
rc
,c⁄° 
Såög_ve˘‹
 *
°rögs
, c⁄° *
d©a
);

89 
asyncCom∂ëi⁄
(
rc
, c⁄° *
d©a
);

94 
	sClõ¡C⁄√˘ed
{

95 
Clõ¡C⁄√˘ed
(
zh™dÀ_t
* 
zh
):
zh_
(zh){}

96 
boﬁ
 
›î©‹
()() const{

97  
zoo_°©e
(
zh_
)==
ZOO_CONNECTED_STATE
;

99 
zh™dÀ_t
* 
	mzh_
;

102 
	sSessi⁄Expúed
{

103 
Sessi⁄Expúed
(
zh™dÀ_t
* 
zh
):
zh_
(zh){}

104 
boﬁ
 
›î©‹
()() const{

105  
zoo_°©e
(
zh_
)==
ZOO_EXPIRED_SESSION_STATE
;

107 
zh™dÀ_t
* 
	mzh_
;

110 
	sIOThªadSt›≥d
{

111 
IOThªadSt›≥d
(
zh™dÀ_t
* 
zh
):
zh_
(zh){}

112 
boﬁ
 
›î©‹
()() const;

113 
zh™dÀ_t
* 
	mzh_
;

117 
	sSyn˚dBoﬁC⁄dôi⁄
{

118 
Syn˚dBoﬁC⁄dôi⁄
(c⁄° 
boﬁ
& 
c⁄d
,
Muãx
& 
mx
):
c⁄d_
(c⁄d),
mx_
(mx){}

119 
boﬁ
 
›î©‹
()() const{

120 
synchr⁄ized
(
mx_
);

121  
	mc⁄d_
;

123 c⁄° 
	mboﬁ
& 
	mc⁄d_
;

124 
	mMuãx
& 
	mmx_
;

128 
	sSyn˚dI¡egîEquÆ
{

129 
Syn˚dI¡egîEquÆ
(c⁄° & 
c⁄d
,
ex≥˘ed
,
Muãx
& 
mx
):

130 
c⁄d_
(
c⁄d
),
ex≥˘ed_
(
ex≥˘ed
),
mx_
(
mx
){}

131 
boﬁ
 
›î©‹
()() const{

132 
synchr⁄ized
(
mx_
);

133  
	mc⁄d_
==
ex≥˘ed_
;

135 c⁄° & 
	mc⁄d_
;

136 c⁄° 
	mex≥˘ed_
;

137 
	mMuãx
& 
	mmx_
;

142 
	sClo£FöÆly
{

143 
Clo£FöÆly
(
zh™dÀ_t
** 
zh
):
zh_
(zh){}

144 ~
Clo£FöÆly
(){

145 
execuã
();

147 
execuã
(){

148 if(
	mzh_
==0) 
ZOK
;

149 
zh™dÀ_t
* 
	mlzh
=*
zh_
;

150 *
	mzh_
=0;

151 
dißrm
();

152  
zookì≥r_˛o£
(
lzh
);

154 
dißrm
(){
	mzh_
=0;}

155 
zh™dÀ_t
 ** 
	mzh_
;

158 
	gTe°Clõ¡Id
: 
˛õ¡id_t
{

159 c⁄° 
SESSION_ID
=123456789;

160 c⁄° * 
	gPASSWD
;

161 
Te°Clõ¡Id
(){

162 
	g˛õ¡_id
=
SESSION_ID
;

163 
mem˝y
(
∑sswd
,
PASSWD
,(passwd));

169 
Te°Clõ¡Id
 
ã°Clõ¡Id
;

170 
	#TEST_CLIENT_ID
 &
ã°Clõ¡Id


	)

174 
	gH™dshakeReque°
: 
public
 
c⁄√˘_ªq


176 
H™dshakeReque°
* 
∑r£
(c⁄° 
°d
::
°rög
& 
buf
);

177 
boﬁ
 
isVÆid
(c⁄° 
°d
::
°rög
& 
buf
){

179  
buf
.
size
()==
HANDSHAKE_REQ_SIZE
;

185 ˛as†
	cMock_Êush_£nd_queue
: 
public
 
Mock


187 
public
:

188 
	$Mock_Êush_£nd_queue
():
	`cou¡î
(0),
	$ˇŒRëu∫s
(
ZOK
){
mock_
=
this
;}

189 ~
	$Mock_Êush_£nd_queue
(){
mock_
=0;
	}
}

191 
	gcou¡î
;

192 
	gˇŒRëu∫s
;

193 
vútuÆ
 
	$ˇŒ
(
zh™dÀ_t
* 
zh
, 
timeout
){

194 
cou¡î
++;

195  
ˇŒRëu∫s
;

196 
	}
}

198 
Mock_Êush_£nd_queue
* 
	gmock_
;

203 ˛as†
	cMock_gë_xid
: 
public
 
Mock


205 
public
:

206 c⁄° 
öt32_t
 
XID
=123456;

207 
	$Mock_gë_xid
(
ªtVÆue
=
XID
):
	$ˇŒRëu∫s
(
ªtVÆue
){
mock_
=
this
;}

208 ~
	$Mock_gë_xid
(){
mock_
=0;
	}
}

210 
	gˇŒRëu∫s
;

211 
vútuÆ
 
	$ˇŒ
(){

212  
ˇŒRëu∫s
;

213 
	}
}

215 
Mock_gë_xid
* 
	gmock_
;

220 ˛as†
	cMock_a˘iv©eW©chî
: 
public
 
Mock
{

221 
public
:

222 
	$Mock_a˘iv©eW©chî
(){
mock_
=
this
;}

223 
vútuÆ
 ~
	$Mock_a˘iv©eW©chî
(){
mock_
=0;
	}
}

225 
vútuÆ
 
	$ˇŒ
(
zh™dÀ_t
 *
zh
, 
w©chî_ªgi°øti⁄_t
* 
ªg
, 
rc
){
	}
}

226 
Mock_a˘iv©eW©chî
* 
	gmock_
;

229 
˛ass
 
	gA˘iv©eW©chîWøµî
;

230 ˛as†
	cW©chîA˘iv©i⁄Tøckî
{

231 
	mpublic
:

232 
W©chîA˘iv©i⁄Tøckî
();

233 ~
W©chîA˘iv©i⁄Tøckî
();

235 
åack
(* 
˘x
);

236 
Syn˚dBoﬁC⁄dôi⁄
 
	$isW©chîA˘iv©ed
() const;

237 
¥iv©e
:

238 
A˘iv©eW©chîWøµî
* 
wøµî_
;

243 ˛as†
	cMock_dñivîW©chîs
: 
public
 
Mock
{

244 
public
:

245 
	$Mock_dñivîW©chîs
(){
mock_
=
this
;}

246 
vútuÆ
 ~
	$Mock_dñivîW©chîs
(){
mock_
=0;
	}
}

248 
vútuÆ
 
	$ˇŒ
(
zh™dÀ_t
* 
zh
,
ty≥
,
°©e
, c⁄° * 
∑th
, 
w©chî_obje˘_li°
 **){
	}
}

249 
Mock_dñivîW©chîs
* 
	gmock_
;

252 
˛ass
 
	gDñivîW©chîsWøµî
;

253 ˛as†
	cW©chîDñivîyTøckî
{

254 
	mpublic
:

256 
W©chîDñivîyTøckî
(
ty≥
,
°©e
,
boﬁ
 
ãrmö©eCom∂ëi⁄Thªad
=
åue
);

257 ~
W©chîDñivîyTøckî
();

262 
Syn˚dBoﬁC⁄dôi⁄
 
	$isW©chîPro˚ssögCom∂ëed
() const;

263 
	`ª£tDñivîyCou¡î
();

264 
Syn˚dI¡egîEquÆ
 
	$dñivîyCou¡îEquÆs
(
ex≥˘ed
) const;

265 
¥iv©e
:

266 
DñivîW©chîsWøµî
* 
dñivîyWøµî_
;

271 
NodeSèt
: 
public
 
Sèt


273 
	`NodeSèt
(){

274 
czxid
=0;

275 
mzxid
=0;

276 
˘ime
=0;

277 
mtime
=0;

278 
vîsi⁄
=1;

279 
cvîsi⁄
=0;

280 
avîsi⁄
=0;

281 
ïhemîÆOw√r
=0;

283 
	`NodeSèt
(c⁄° 
Sèt
& 
Ÿhî
){

284 
	`mem˝y
(
this
,&
Ÿhî
,(*this));

286 
	}
};

290 ˛as†
	cRe•⁄£


292 
	mpublic
:

293 
vútuÆ
 ~
	$Re•⁄£
(){}

295 
vútuÆ
 
	$£tXID
(
öt32_t
 
xid
){
	}
}

298 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const =0;

299 
	}
};

303 ˛as†
	cH™dshakeRe•⁄£
: 
public
 
Re•⁄£


305 
public
:

306 
	$H™dshakeRe•⁄£
(
öt64_t
 
£ssId
=1)

307 :
	`¥ŸocﬁVîsi⁄
(1),
	`timeOut
(10000),
	`£ssi⁄Id
(
£ssId
),
	`∑sswd_Àn
((
∑sswd
))

309 
	`mem˝y
(
∑sswd
,"1234567890123456",(passwd));

311 
öt32_t
 
¥ŸocﬁVîsi⁄
;

312 
öt32_t
 
timeOut
;

313 
öt64_t
 
£ssi⁄Id
;

314 
öt32_t
 
∑sswd_Àn
;

315 
∑sswd
[16];

316 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const ;

317 
	}
};

320 ˛as†
	cZooGëRe•⁄£
: 
public
 
Re•⁄£


322 
public
:

323 
ZooGëRe•⁄£
(c⁄° * 
d©a
, 
Àn
,
öt32_t
 
xid
=0,
rc
=
ZOK
,c⁄° 
Sèt
& 
°©
=
	$NodeSèt
())

324 :
	`xid_
(
xid
),
	`d©a_
(
d©a
,
Àn
),
	`rc_
(
rc
),
	$°©_
(
°©
)

327 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const;

328 
vútuÆ
 
	$£tXID
(
öt32_t
 
xid
Ë{
xid_
=xid;
	}
}

330 
	g¥iv©e
:

331 
öt32_t
 
xid_
;

332 
	g°d
::
°rög
 
d©a_
;

333 
	grc_
;

334 
Sèt
 
	g°©_
;

338 ˛as†
	cZooSètRe•⁄£
: 
public
 
Re•⁄£


340 
public
:

341 
ZooSètRe•⁄£
(
öt32_t
 
xid
=0,
rc
=
ZOK
,c⁄° 
Sèt
& 
°©
=
	$NodeSèt
())

342 :
	`xid_
(
xid
),
	`rc_
(
rc
),
	$°©_
(
°©
)

345 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const;

346 
vútuÆ
 
	$£tXID
(
öt32_t
 
xid
Ë{
xid_
=xid;
	}
}

348 
	g¥iv©e
:

349 
öt32_t
 
xid_
;

350 
	grc_
;

351 
Sèt
 
	g°©_
;

355 ˛as†
	cZooGëChûdªnRe•⁄£
: 
public
 
Re•⁄£


357 
public
:

358 
°d
::
	tve˘‹
<
	t°d
::
	t°rög
> 
	tSåögVe˘‹
;

359 
	$ZooGëChûdªnRe•⁄£
(c⁄° 
SåögVe˘‹
& 
v
,
rc
=
ZOK
):

360 
	`xid_
(0),
	`°rögs_
(
v
),
	$rc_
(
rc
)

364 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const;

365 
vútuÆ
 
	$£tXID
(
öt32_t
 
xid
Ë{
xid_
=xid;
	}
}

367 
öt32_t
 
	gxid_
;

368 
SåögVe˘‹
 
	g°rögs_
;

369 
	grc_
;

373 ˛as†
	cPögRe•⁄£
: 
public
 
Re•⁄£


375 
public
:

376 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const;

380 ˛as†
	cZNodeEvít
: 
public
 
Re•⁄£


382 
public
:

383 
	$ZNodeEvít
(
ty≥
,c⁄° * 
∑th
):
	`ty≥_
—y≥),
	$∑th_
(
∑th
){}

385 
vútuÆ
 
°d
::
°rög
 
	$toSåög
() const;

387 
¥iv©e
:

388 
ty≥_
;

389 
°d
::
°rög
 
∑th_
;

390 
	}
};

395 ˛as†
	cZookì≥rSîvî
: 
public
 
Mock_sockë


397 
public
:

398 
	$Zookì≥rSîvî
():

399 
	`£rvîDownSkùCou¡_
(-1),
	`£ssi⁄Expúed
(
Ál£
),
	$c⁄√˘i⁄Lo°
(
Ál£
)

401 
c⁄√˘Rëu∫s
=-1;

402 
c⁄√˘Eºno
=
EWOULDBLOCK
;

404 
vútuÆ
 ~
	$Zookì≥rSîvî
(){

405 
	`˛órRecvQueue
();

406 
	`˛órRe•Queue
();

407 
	}
}

408 
vútuÆ
 
	$ˇŒClo£
(
fd
){

409 if(
fd
!=
FD
)

410  
LIBC_SYMBOLS
.
	`˛o£
(
fd
);

411 
	`˛órRecvQueue
();

412 
	`˛órRe•Queue
();

413  
Mock_sockë
::
	`ˇŒClo£
(
fd
);

414 
	}
}

417 
	g£rvîDownSkùCou¡_
;

422 
	$£tSîvîDown
(
skùCou¡
=0){

423 
£rvîDownSkùCou¡_
=
skùCou¡
;

424 
›tvÆSO_ERROR
=0;

425 
	}
}

426 
vútuÆ
 
	$£tSO_ERROR
(*
›tvÆ
,
sockÀn_t
 
Àn
){

427 if(
£rvîDownSkùCou¡_
!=-1){

428 if(
£rvîDownSkùCou¡_
==0)

429 
›tvÆSO_ERROR
=
ECONNREFUSED
;

431 
£rvîDownSkùCou¡_
--;

433 
Mock_sockë
::
	`£tSO_ERROR
(
›tvÆ
,
Àn
);

434 
	}
}

439 vﬁ©ûê
boﬁ
 
	g£ssi⁄Expúed
;

440 
	$ªtu∫Sessi⁄Expúed
(){ 
£ssi⁄Expúed
=
åue
; 
	}
}

444 vﬁ©ûê
boﬁ
 
	gc⁄√˘i⁄Lo°
;

445 
	$£tC⁄√˘i⁄Lo°
(Ë{
c⁄√˘i⁄Lo°
=
åue
;
	}
}

450 
	g°d
::
	t∑ú
<
	tRe•⁄£
*,> 
	tEÀmít
;

451 
	g°d
::
	tdeque
<
	tEÀmít
> 
	tRe•⁄£Li°
;

452 
Re•⁄£Li°
 
	gªcvQueue
;

453 
muèbÀ
 
Muãx
 
	gªcvQMx
;

454 
AtomicI¡
 
	gªcvHasM‹e
;

455 
	gZookì≥rSîvî
& 
	$addRecvRe•⁄£
(
Re•⁄£
* 
ª•
, 
î∫um
=0){

456 
	`synchr⁄ized
(
ªcvQMx
);

457 
ªcvQueue
.
	`push_back
(
	`EÀmít
(
ª•
,
î∫um
));

458 ++
ªcvHasM‹e
;

459  *
this
;

460 
	}
}

461 
	gZookì≥rSîvî
& 
	$addRecvRe•⁄£
(
î∫um
){

462 
	`synchr⁄ized
(
ªcvQMx
);

463 
ªcvQueue
.
	`push_back
(
	`EÀmít
(0,
î∫um
));

464 ++
ªcvHasM‹e
;

465  *
this
;

466 
	}
}

467 
	gZookì≥rSîvî
& 
	$addRecvRe•⁄£
(c⁄° 
EÀmít
& 
e
){

468 
	`synchr⁄ized
(
ªcvQMx
);

469 
ªcvQueue
.
	`push_back
(
e
);

470 ++
ªcvHasM‹e
;

471  *
this
;

472 
	}
}

473 
	$˛órRecvQueue
(){

474 
	`synchr⁄ized
(
ªcvQMx
);

475 
ªcvHasM‹e
=0;

476 
i
=0; i<
ªcvQueue
.
	`size
();i++)

477 
dñëe
 
ªcvQueue
[
i
].
fú°
;

478 
ªcvQueue
.
	`˛ór
();

479 
	}
}

481 
vútuÆ
 
ssize_t
 
ˇŒRecv
(
s
,*
buf
,
size_t
 
Àn
,
Êags
);

482 
vútuÆ
 
boﬁ
 
	$hasM‹eRecv
() const;

489 
Re•⁄£Li°
 
ª•Queue
;

490 
muèbÀ
 
Muãx
 
ª•QMx
;

491 
Zookì≥rSîvî
& 
	$addO≥øti⁄Re•⁄£
(
Re•⁄£
* 
ª•
, 
î∫um
=0){

492 
	`synchr⁄ized
(
ª•QMx
);

493 
ª•Queue
.
	`push_back
(
	`EÀmít
(
ª•
,
î∫um
));

494  *
this
;

495 
	}
}

496 
	$˛órRe•Queue
(){

497 
	`synchr⁄ized
(
ª•QMx
);

498 
i
=0; i<
ª•Queue
.
	`size
();i++)

499 
dñëe
 
ª•Queue
[
i
].
fú°
;

500 
ª•Queue
.
	`˛ór
();

501 
	}
}

502 
AtomicI¡
 
	g˛o£Sít
;

503 
vútuÆ
 
nŸifyBuf„rSít
(c⁄° 
°d
::
°rög
& 
buf„r
);

506 
vútuÆ
 
⁄MesßgeRe˚ived
(c⁄° 
Reque°Hódî
& 
rh
, 
ürchive
* 
ü
);

	@/home/pig/zookeeper-3.4.5/src/contrib/fatjar/src/java/org/apache/zookeeper/util/FatJarMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gutû
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

25 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gInvoˇti⁄T¨gëEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gMëhod
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

40 
public
 cœs†
	cF©J¨Maö
 {

41 ˛as†
	cCmd
 {

42 
Cmd
(
Såög
 
cmd
, Såög 
˛azz
, Såög 
desc
) {

43 
	mthis
.
	mcmd
 = 
cmd
;

44 
	mthis
.
	m˛azz
 = 
˛azz
;

45 
	mthis
.
	mdesc
 = 
desc
;

47 
Såög
 
	mcmd
;

48 
Såög
 
	m˛azz
;

49 
Såög
 
	mdesc
;

51 
	gHashM≠
<
	gSåög
, 
	gCmd
> 
	gcmds
 = 
√w
 
HashM≠
<
Såög
, Cmd>();

52 
	gAºayLi°
<
	gSåög
> 
	g‹dî
 = 
√w
 
AºayLi°
<
Såög
>();

65 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
, 
CœssNŸFoundEx˚±i⁄
, 
SecurôyEx˚±i⁄
, 
NoSuchMëhodEx˚±i⁄
, 
IŒegÆArgumítEx˚±i⁄
, 
IŒegÆAc˚ssEx˚±i⁄
 {

66 
I≈utSåóm
 
is
 = 
F©J¨Maö
.
˛ass
.
	`gëResour˚AsSåóm
("/mainClasses");

67 i‡(
is
 =
nuŒ
) {

68 
Sy°em
.
îr
.
	`¥öén
("Couldn't find /mainClasses in classpath.");

69 
Sy°em
.
	`exô
(3);

71 
Buf„ªdRódî
 
br
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(
is
));

72 
Såög
 
löe
;

73 (
löe
 = 
br
.
	`ªadLöe
()Ë!
nuŒ
) {

74 
Såög
 
∑πs
[] = 
löe
.
	`•lô
(":", 3);

75 i‡(
∑πs
.
Àngth
 !3 || (∑πs[0].
	`Àngth
(Ë> 0 &&Ö¨ts[0].
	`ch¨At
(0) == '#')) {

78 i‡(
∑πs
[0].
	`Àngth
() > 0) {

79 
cmds
.
	`put
(
∑πs
[0], 
√w
 
	`Cmd
(parts[0],Öarts[1],Öarts[2]));

82 
‹dî
.
	`add
(
∑πs
[0]);

85 
‹dî
.
	`add
(
∑πs
[2]);

88 i‡(
¨gs
.
Àngth
 == 0) {

89 
	`doHñp
();

92 
Cmd
 
cmd
 = 
cmds
.
	`gë
(
¨gs
[0]);

93 i‡(
cmd
 =
nuŒ
) {

94 
	`doHñp
();

97 
Cœss
<?> 
˛azz
 = Cœss.
	`f‹Name
(
cmd
.clazz);

98 
Mëhod
 
maö
 = 
˛azz
.
	`gëMëhod
("maö", 
Såög
[].
˛ass
);

99 
Såög
 
√wArgs
[] = 
√w
 Såög[
¨gs
.
Àngth
-1];

100 
Sy°em
.
	`¨øyc›y
(
¨gs
, 1, 
√wArgs
, 0,ÇewArgs.
Àngth
);

101 
åy
 {

102 
maö
.
	`övoke
(
nuŒ
, (
Obje˘
)
√wArgs
);

103 } 
	`ˇtch
(
Invoˇti⁄T¨gëEx˚±i⁄
 
e
) {

104 i‡(
e
.
	`gëCau£
(Ë!
nuŒ
) {

105 
e
.
	`gëCau£
().
	`¥ötSèckTø˚
();

107 
e
.
	`¥ötSèckTø˚
();

110 
	}
}

112 
¥iv©e
 
	$doHñp
() {

113 
Sy°em
.
îr
.
	`¥öén
("USAGE: FatJarMain cmdárgs");

114 
Sy°em
.
îr
.
	`¥öén
("Available cmds:");

115 
Såög
 
c
: 
‹dî
) {

116 
Cmd
 
cmd
 = 
cmds
.
	`gë
(
c
);

117 i‡(
cmd
 !
nuŒ
) {

118 
Sy°em
.
îr
.
	`¥öén
(" " + 
c
 + " " + 
cmd
.
desc
);

120 
Sy°em
.
îr
.
	`¥öén
(
c
);

123 
Sy°em
.
	`exô
(2);

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterException.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
public
 cœs†
	cFûãrEx˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

21 
public
 
	$FûãrEx˚±i⁄
(
Såög
 
s
Ë{ 
	`su≥r
(s); }

22 
	}
};

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
.*;

23 
public
 
ab°ø˘
 cœs†
	cFûãrOp
 {

24 
¥Ÿe˘ed
 
	mAºayLi°
<
	mFûãrOp
> 
	msubOps
;

25 
¥Ÿe˘ed
 
	mAºayLi°
<
	mArg
> 
	m¨gs
;

27 
public
 
	eArgTy≥
 {

28 
	mSTRING
, 
	mNUMBER
, 
	mSYMBOL


31 
public
 
	$FûãrOp
() {

32 
subOps
 = 
√w
 
AºayLi°
<
FûãrOp
>();

33 
¨gs
 = 
√w
 
AºayLi°
<
Arg
>();

34 
	}
}

36 
public
 
FûãrOp
 
	$√wOp
(
Såög
 
›
Ë
throws
 
FûãrEx˚±i⁄
 {

37 i‡(
›
.
	`equÆs
("or"))

38  
√w
 
	`OrOp
();

39 i‡(
›
.
	`equÆs
("and"))

40  
√w
 
	`AndOp
();

41 i‡(
›
.
	`equÆs
("not"))

42  
√w
 
	`NŸOp
();

43 i‡(
›
.
	`equÆs
("xor"))

44  
√w
 
	`X‹Op
();

45 i‡(
›
.
	`equÆs
("="))

46  
√w
 
	`EquÆsOp
();

47 i‡(
›
.
	`equÆs
("<"))

48  
√w
 
	`LessTh™Op
();

49 i‡(
›
.
	`equÆs
(">"))

50  
√w
 
	`Gª©îTh™Op
();

52 
throw
 
√w
 
	`FûãrEx˚±i⁄
("InvÆid o≥øti⁄ '"+
›
+"'");

53 
	}
}

55 
public
 
	$addSubOp
(
FûãrOp
 
›
) {

56 
subOps
.
	`add
(
›
);

57 
	}
}

59 
public
 
	$addArg
(
Arg
 
¨g
) {

60 
¨gs
.
	`add
(
¨g
);

61 
	}
}

63 
public
 
ab°ø˘
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
;

65 
public
 
Såög
 
	$toSåög
() {

66 
Såög
 
›
 = "(" + 
	`gëCœss
().
	`gëName
();

67 
FûãrOp
 
f
 : 
subOps
) {

68 
›
 +" " + 
f
;

70 
Arg
 
a
 : 
¨gs
) {

71 
›
 +" " + 
a
;

73  
›
 + ")";

74 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterParser.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gPushbackRódî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gSåögRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
.*;

27 
public
 cœs†
	cFûãrP¨£r
 {

28 
¥iv©e
 
PushbackRódî
 
	mªadî
;

30 
public
 
	$FûãrP¨£r
(
Såög
 
s
) {

31 
ªadî
 = 
√w
 
	`PushbackRódî
“ew 
	`SåögRódî
(
s
));

34 
¥iv©e
 
Såög
 
	$ªadU¡ûS∑˚
(Ë
throws
 
IOEx˚±i⁄
 {

35 
SåögBuf„r
 
buf„r
 = 
√w
 
	`SåögBuf„r
();

37 
c
 = 
ªadî
.
	`ªad
();

38 !
Ch¨a˘î
.
	`isWhôe•a˚
(
c
) && c != ')' && c != '(') {

39 
buf„r
.
	`≠≥nd
(()
c
);

40 
c
 = 
ªadî
.
	`ªad
();

41 i‡(
c
 == -1) {

45 
ªadî
.
	`uƒód
(
c
);

47  
buf„r
.
	`toSåög
().
	`åim
();

48 
	}
}

50 
¥iv©e
 
SåögArg
 
	$ªadSåögArg
(Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

51 
c
 = 
ªadî
.
	`ªad
();

52 
œ°
 = 0;

53 i‡(
c
 != '"') {

54 
throw
 
√w
 
	`FûãrEx˚±i⁄
("CheckÅheÖarser,ÅryingÅoÑeadá stringÅhat doesn't begin with quotes");

56 
SåögBuf„r
 
buf„r
 = 
√w
 
	`SåögBuf„r
();

57 
ªadî
.
	`ªady
()) {

58 
œ°
 = 
c
;

59 
c
 = 
ªadî
.
	`ªad
();

60 i‡(
c
 == -1) {

64 i‡(
c
 ='"' && 
œ°
 != '\\') {

65  
√w
 
	`SåögArg
(
buf„r
.
	`toSåög
());

67 
buf„r
.
	`≠≥nd
(()
c
);

70 
throw
 
√w
 
	`FûãrEx˚±i⁄
("Unterminated string");

71 
	}
}

73 
¥iv©e
 
NumbîArg
 
	$ªadNumbîArg
(Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

74 
Såög
 
°rvÆ
 = 
	`ªadU¡ûS∑˚
();

76 
åy
 {

77 i‡(
°rvÆ
.
	`°¨tsWôh
("0x")) {

78  
√w
 
	`NumbîArg
(
L⁄g
.
	`vÆueOf
(
°rvÆ
.
	`sub°rög
(2), 16));

80  
√w
 
	`NumbîArg
(
L⁄g
.
	`vÆueOf
(
°rvÆ
));

82 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

83 
throw
 
√w
 
	`FûãrEx˚±i⁄
("NŸáÇumbî [" + 
°rvÆ
 + "]\n" + 
e
);

85 
	}
}

87 
¥iv©e
 
SymbﬁArg
 
	$ªadSymbﬁArg
(Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

88  
√w
 
	`SymbﬁArg
(
	`ªadU¡ûS∑˚
());

89 
	}
}

91 
public
 
FûãrOp
 
	$∑r£
(Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

92 
c
 = 
ªadî
.
	`ªad
();

93 i‡(
c
 != '(') {

94 
throw
 
√w
 
	`FûãrEx˚±i⁄
("Invalid format");

97 
Såög
 
›°r
 = 
	`ªadU¡ûS∑˚
();

98 
FûãrOp
 
›
 = FûãrOp.
	`√wOp
(
›°r
);

100 
ªadî
.
	`ªady
()) {

101 
c
 = 
ªadî
.
	`ªad
();

102 i‡(
c
 == -1) {

105 i‡(
c
 == '(') {

106 
ªadî
.
	`uƒód
(
c
);

107 
›
.
	`addSubOp
(
	`∑r£
());

108 } i‡(
c
 == ')') {

109  
›
;

110 } i‡(
c
 == '"') {

111 
ªadî
.
	`uƒód
(
c
);

112 
›
.
	`addArg
(
	`ªadSåögArg
());

113 } i‡(
Ch¨a˘î
.
	`isDigô
(
c
) || c == '-' || c == '+') {

114 
ªadî
.
	`uƒód
(
c
);

115 
›
.
	`addArg
(
	`ªadNumbîArg
());

116 } i‡(
Ch¨a˘î
.
	`isJavaIdítifõrSèπ
(
c
)) {

117 
ªadî
.
	`uƒód
(
c
);

118 
›
.
	`addArg
(
	`ªadSymbﬁArg
());

121 
throw
 
√w
 
	`FûãrEx˚±i⁄
("Incomplete filter");

122 
	}
}

124 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

125 i‡(
¨gs
.
Àngth
 == 1) {

126 
Sy°em
.
out
.
	`¥öén
(
√w
 
	`FûãrP¨£r
(
¨gs
[0]).
	`∑r£
());

128 
Sy°em
.
out
.
	`¥öén
(
√w
 
	`FûãrP¨£r
("(‹ (™d (£ssi⁄ foob¨Ë(£ssi⁄ b¨foo)Ë(£ssi⁄ sdfs))").
	`∑r£
());

130 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/JsonGenerator.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

21 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

22 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

23 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

25 
imp‹t
 
	gjava
.
	gio
.
	gWrôî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåómWrôî
;

27 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gLi°Iãøt‹
;

35 
public
 cœs†
	cJs⁄Gíî©‹
 {

36 
¥iv©e
 
JSONObje˘
 
	mroŸ
;

37 
¥iv©e
 
	mHashSë
<
	mI¡egî
> 
	m£rvîs
;

39 
¥iv©e
 cœs†
	cMesßge
 {

40 
¥iv©e
 
	m‰om
;

41 
¥iv©e
 
	mto
;

42 
¥iv©e
 
	mzxid
;

44 
public
 
Mesßge
(
‰om
, 
to
, 
zxid
) {

45 
	mthis
.
	m‰om
 = 
‰om
;

46 
	mthis
.
	mto
 = 
to
;

47 
	mthis
.
	mzxid
 = 
zxid
;

50 
public
 
boﬁón
 
equÆs
(
Mesßge
 
m
) {

51  (
	mm
.
	m‰om
 =
this
.
‰om


52 && 
m
.
to
 =
this
.to

53 && 
m
.
zxid
 =
this
.zxid);

57 
public
 
JSONObje˘
 
	$txnE¡ry
(
Tønß˘i⁄E¡ry
 
e
) {

58 
JSONObje˘
 
evít
 = 
√w
 
	`JSONObje˘
();

60 
evít
.
	`put
("time", 
L⁄g
.
	`toSåög
(
e
.
	`gëTime°amp
()));

61 
evít
.
	`put
("˛õ¡", 
L⁄g
.
	`toHexSåög
(
e
.
	`gëClõ¡Id
()));

62 
evít
.
	`put
("cxid", 
L⁄g
.
	`toHexSåög
(
e
.
	`gëCxid
()));

63 
evít
.
	`put
("zxid", 
L⁄g
.
	`toHexSåög
(
e
.
	`gëZxid
()));

64 
evít
.
	`put
("›", 
e
.
	`gëOp
());

65 
evít
.
	`put
("exåa", 
e
.
	`gëExåa
());

66 
evít
.
	`put
("type", "transaction");

68  
evít
;

69 
	}
}

74 
public
 
	$Js⁄Gíî©‹
(
LogIãøt‹
 
ôî
) {

75 
£rvîs
 = 
√w
 
HashSë
<
I¡egî
>();

77 
P©ã∫
 
°©eCh™geP
 = P©ã∫.
	`compûe
("- (LOOKING|FOLLOWING|LEADING)");

78 
P©ã∫
 
√wEÀ˘i⁄P
 = P©ã∫.
	`compûe
("NewÉlection. My id = (\\d+), Proposed zxid = (\\d+)");

79 
P©ã∫
 
ª˚ivedPr›oßlP
 = P©ã∫.
	`compûe
("Notification: (\\d+) \\(n.leader\\), (\\d+) \\(n.zxid\\), (\\d+) \\(n.round\\), .+ \\(n.state\\), (\\d+) \\(n.sid\\), .+ \\(my state\\)");

80 
P©ã∫
 
ex˚±i⁄P
 = P©ã∫.
	`compûe
("xception");

82 
roŸ
 = 
√w
 
	`JSONObje˘
();

83 
M©chî
 
m
 = 
nuŒ
;

84 
JSONAºay
 
evíts
 = 
√w
 
	`JSONAºay
();

85 
roŸ
.
	`put
("evíts", 
evíts
);

87 
°¨âime
 = 
L⁄g
.
MAX_VALUE
;

88 
ídtime
 = 0;

90 
Àadî
 = 0;

91 
curEpoch
 = 0;

92 
boﬁón
 
√wEpoch
 = 
Ál£
;

94 
ôî
.
	`hasNext
()) {

95 
LogE¡ry
 
ít
 = 
ôî
.
	`√xt
();

97 i‡(
ít
.
	`gëTime°amp
(Ë< 
°¨âime
) {

98 
°¨âime
 = 
ít
.
	`gëTime°amp
();

100 i‡(
ít
.
	`gëTime°amp
(Ë> 
ídtime
) {

101 
ídtime
 = 
ít
.
	`gëTime°amp
();

104 i‡(
ít
.
	`gëTy≥
(Ë=
LogE¡ry
.
Ty≥
.
TXN
) {

105 
evíts
.
	`add
(
	`txnE¡ry
((
Tønß˘i⁄E¡ry
)
ít
));

107 
Log4JE¡ry
 
e
 = (Log4JE¡ry)
ít
;

108 
£rvîs
.
	`add
(
e
.
	`gëNode
());

110 i‡((
m
 = 
°©eCh™geP
.
	`m©chî
(
e
.
	`gëE¡ry
())).
	`föd
()) {

111 
JSONObje˘
 
°©eCh™ge
 = 
√w
 
	`JSONObje˘
();

112 
°©eCh™ge
.
	`put
("type", "stateChange");

113 
°©eCh™ge
.
	`put
("time", 
e
.
	`gëTime°amp
());

114 
°©eCh™ge
.
	`put
("£rvî", 
e
.
	`gëNode
());

115 
°©eCh™ge
.
	`put
("°©e", 
m
.
	`group
(1));

116 
evíts
.
	`add
(
°©eCh™ge
);

118 i‡(
m
.
	`group
(1).
	`equÆs
("LEADING")) {

119 
Àadî
 = 
e
.
	`gëNode
();

121 } i‡((
m
 = 
√wEÀ˘i⁄P
.
	`m©chî
(
e
.
	`gëE¡ry
())).
	`föd
()) {

122 
Iãøt‹
<
I¡egî
> 
ôî©‹
 = 
£rvîs
.
	`ôî©‹
();

123 
zxid
 = 
L⁄g
.
	`vÆueOf
(
m
.
	`group
(2));

124 
cou¡
 = ()
zxid
;

125 
ïoch
 = ()
L⁄g
.
	`rŸ©eRight
(
zxid
, 32);

127 i‡(
Àadî
 !0 && 
ïoch
 > 
curEpoch
) {

128 
JSONObje˘
 
°©eCh™ge
 = 
√w
 
	`JSONObje˘
();

129 
°©eCh™ge
.
	`put
("type", "stateChange");

130 
°©eCh™ge
.
	`put
("time", 
e
.
	`gëTime°amp
());

131 
°©eCh™ge
.
	`put
("£rvî", 
Àadî
);

132 
°©eCh™ge
.
	`put
("state", "INIT");

133 
evíts
.
	`add
(
°©eCh™ge
);

134 
Àadî
 = 0;

137 
ôî©‹
.
	`hasNext
()) {

138 
d°
 = 
ôî©‹
.
	`√xt
();

139 i‡(
d°
 !
e
.
	`gëNode
()) {

140 
JSONObje˘
 
msg
 = 
√w
 
	`JSONObje˘
();

141 
msg
.
	`put
("type", "postmessage");

142 
msg
.
	`put
("§c", 
e
.
	`gëNode
());

143 
msg
.
	`put
("d°", 
d°
);

144 
msg
.
	`put
("time", 
e
.
	`gëTime°amp
());

145 
msg
.
	`put
("zxid", 
m
.
	`group
(2));

146 
msg
.
	`put
("cou¡", 
cou¡
);

147 
msg
.
	`put
("ïoch", 
ïoch
);

149 
evíts
.
	`add
(
msg
);

152 } i‡((
m
 = 
ª˚ivedPr›oßlP
.
	`m©chî
(
e
.
	`gëE¡ry
())).
	`föd
()) {

154 
§c
 = 
I¡egî
.
	`vÆueOf
(
m
.
	`group
(4));

155 
zxid
 = 
L⁄g
.
	`vÆueOf
(
m
.
	`group
(2));

156 
d°
 = 
e
.
	`gëNode
();

157 
ïoch2
 = 
L⁄g
.
	`vÆueOf
(
m
.
	`group
(3));

159 
cou¡
 = ()
zxid
;

160 
ïoch
 = ()
L⁄g
.
	`rŸ©eRight
(
zxid
, 32);

162 i‡(
Àadî
 !0 && 
ïoch
 > 
curEpoch
) {

163 
JSONObje˘
 
°©eCh™ge
 = 
√w
 
	`JSONObje˘
();

164 
°©eCh™ge
.
	`put
("type", "stateChange");

165 
°©eCh™ge
.
	`put
("time", 
e
.
	`gëTime°amp
());

166 
°©eCh™ge
.
	`put
("£rvî", 
Àadî
);

167 
°©eCh™ge
.
	`put
("state", "INIT");

168 
evíts
.
	`add
(
°©eCh™ge
);

169 
Àadî
 = 0;

172 i‡(
§c
 !
d°
) {

173 
JSONObje˘
 
msg
 = 
√w
 
	`JSONObje˘
();

174 
msg
.
	`put
("type", "delivermessage");

175 
msg
.
	`put
("§c", 
§c
);

176 
msg
.
	`put
("d°", 
d°
);

177 
msg
.
	`put
("time", 
e
.
	`gëTime°amp
());

178 
msg
.
	`put
("zxid", 
zxid
);

179 
msg
.
	`put
("ïoch", 
ïoch
);

180 
msg
.
	`put
("cou¡", 
cou¡
);

181 
msg
.
	`put
("ïoch2", 
ïoch2
);

183 
evíts
.
	`add
(
msg
);

185 } i‡((
m
 = 
ex˚±i⁄P
.
	`m©chî
(
e
.
	`gëE¡ry
())).
	`föd
()) {

186 
JSONObje˘
 
ex
 = 
√w
 
	`JSONObje˘
();

187 
ex
.
	`put
("type", "exception");

188 
ex
.
	`put
("£rvî", 
e
.
	`gëNode
());

189 
ex
.
	`put
("time", 
e
.
	`gëTime°amp
());

190 
ex
.
	`put
("ãxt", 
e
.
	`gëE¡ry
());

191 
evíts
.
	`add
(
ex
);

194 
JSONObje˘
 
ex
 = 
√w
 
	`JSONObje˘
();

195 
ex
.
	`put
("type", "text");

196 
ex
.
	`put
("time", 
ít
.
	`gëTime°amp
());

197 
Såög
 
txt
 = 
ít
.
	`toSåög
();

198 
ex
.
	`put
("ãxt", 
txt
);

199 
evíts
.
	`add
(
ex
);

202 
roŸ
.
	`put
("°¨âime", 
°¨âime
);

203 
roŸ
.
	`put
("ídtime", 
ídtime
);

205 
JSONAºay
 
£rvîßºay
 = 
√w
 
	`JSONAºay
();

206 
roŸ
.
	`put
("£rvîs", 
£rvîßºay
);

208 
Iãøt‹
<
I¡egî
> 
ôî©‹
 = 
£rvîs
.
	`ôî©‹
();

209 
ôî©‹
.
	`hasNext
()) {

210 
£rvîßºay
.
	`add
(
ôî©‹
.
	`√xt
());

212 
	}
}

214 
public
 
Såög
 
	$toSåög
() {

215  
JSONVÆue
.
	`toJSONSåög
(
roŸ
);

216 
	}
}

218 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
Ex˚±i⁄
 {

219 
MîgedLogSour˚
 
§c
 = 
√w
 
	`MîgedLogSour˚
(
¨gs
);

220 
LogIãøt‹
 
ôî
 = 
§c
.
	`ôî©‹
();

221 
Sy°em
.
out
.
	`¥öén
(
√w
 
	`Js⁄Gíî©‹
(
ôî
));

222 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/Log4JEntry.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
public
 cœs†
	cLog4JE¡ry
 
exãnds
 
	mLogE¡ry
 {

21 
public
 
	$Log4JE¡ry
(
time°amp
, 
node
, 
Såög
 
íåy
) {

22 
	`su≥r
(
time°amp
);

23 
	`£tAâribuã
("log-ãxt", 
íåy
);

24 
	`£tAâribuã
("node", 
√w
 
	`I¡egî
(
node
));

27 
public
 
Såög
 
	$gëE¡ry
() {

28  (
Såög
Ë
	`gëAâribuã
("log-text");

29 
	}
}

31 
public
 
Såög
 
	$toSåög
() {

32  "" + 
	`gëTime°amp
(Ë+ "::::" + 
	`gëNode
(Ë+ "::::" + 
	`gëE¡ry
();

33 
	}
}

35 
public
 
	$gëNode
() {

36  (
I¡egî
Ë
	`gëAâribuã
("node");

37 
	}
}

39 
public
 
Ty≥
 
	$gëTy≥
(Ë{  
LogE¡ry
.
Ty≥
.
LOG4J
; 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/Log4JSource.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

29 
imp‹t
 
	gjava
.
	gãxt
.
	gSim∂eD©eF‹m©
;

30 
imp‹t
 
	gjava
.
	gãxt
.
	gP¨£Ex˚±i⁄
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gGªg‹ünCÆíd¨
;

34 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

35 
imp‹t
 
	gjava
.
	gio
.
	gClo£abÀ
;

36 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

38 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
public
 cœs†
	cLog4JSour˚
 
im∂emíts
 
	mLogSour˚
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Log4JSour˚
.
˛ass
);

46 
¥iv©e
 
föÆ
 
	mskùN
 = 10000;

47 
¥iv©e
 
föÆ
 
Såög
 
	mDATE_FORMAT
 = "yyyy-MM-dd HH:mm:ss,SSS";

49 
¥iv©e
 
LogSkùLi°
 
	mskùli°
 = 
nuŒ
;

51 
¥iv©e
 
Såög
 
	mfûe
 = 
nuŒ
;

52 
¥iv©e
 
	m°¨âime
 = 0;

53 
¥iv©e
 
	mídtime
 = 0;

54 
¥iv©e
 
	m£rvîid
 = 0;

55 
¥iv©e
 
	msize
 = 0;

57 
¥iv©e
 
P©ã∫
 
	mtimï
;

59 
public
 
boﬁón
 
	$ovîœpsR™ge
(
°¨âime
, 
ídtime
) {

60  (
°¨âime
 <
this
.
ídtime
 &&Éndtime >=Åhis.starttime);

63 
public
 
	$size
(Ë{  
size
; 
	}
}

64 
public
 
	$gëSèπTime
(Ë{  
°¨âime
; 
	}
}

65 
public
 
	$gëEndTime
(Ë{  
ídtime
; 
	}
}

66 
public
 
LogSkùLi°
 
	$gëSkùLi°
(Ë{  
skùli°
; 
	}
}

68 
¥iv©e
 cœs†
	cLog4JSour˚Iãøt‹
 
im∂emíts
 
	gLogIãøt‹
 {

69 
¥iv©e
 
R™domAc˚ssFûeRódî
 
	gö
;

70 
¥iv©e
 
LogE¡ry
 
	g√xt
 = 
nuŒ
;

71 
¥iv©e
 
	g°¨âime
 = 0;

72 
¥iv©e
 
	gídtime
 = 0;

73 
¥iv©e
 
Såög
 
	gbuf
 = "";

74 
¥iv©e
 
Log4JSour˚
 
	g§c
 = 
nuŒ
;

75 
¥iv©e
 
	gskù≥dAtSèπ
 = 0;

76 
¥iv©e
 
Sim∂eD©eF‹m©
 
	gd©ef‹m©
 = 
nuŒ
;

77 
¥iv©e
 
FûãrOp
 
	gfûãr
 = 
nuŒ
;

79 
public
 
Log4JSour˚Iãøt‹
(
Log4JSour˚
 
§c
, 
°¨âime
, 
ídtime
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

80 
this
(
§c
, 
°¨âime
, 
ídtime
, 
nuŒ
);

83 
public
 
Log4JSour˚Iãøt‹
(
Log4JSour˚
 
§c
, 
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

85 
	gthis
.
	gd©ef‹m©
 = 
√w
 
Sim∂eD©eF‹m©
(
DATE_FORMAT
);

86 
	gthis
.
	g§c
 = 
§c
;

87 
	gthis
.
	g°¨âime
 = 
°¨âime
;

88 
	gthis
.
	gídtime
 = 
ídtime
;

90 
Fûe
 
	gf
 = 
√w
 Fûe(
§c
.
fûe
);

91 
	gåy
 {

92 
	gö
 = 
√w
 
R™domAc˚ssFûeRódî
(
f
);

93 } 
ˇtch
 (
FûeNŸFoundEx˚±i⁄
 
e
) {

94 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
("Bad fûê∑s£d i¿(" + 
§c
.
fûe
 +"Ëˇ¬Ÿ o≥n:" + 
e
);

98 
	gLogSkùLi°
.
M¨k
 
	g°¨t
 = 
§c
.
gëSkùLi°
().
födM¨kBef‹e
(
°¨âime
);

99 
	gåy
 {

100 
	gö
.
£ek
(
°¨t
.
gëByãs
());

101 
	gskù≥dAtSèπ
 = 
°¨t
.
gëE¡rõsSkù≥d
();

102 } 
ˇtch
 (
IOEx˚±i⁄
 
i€
) {

106 
LogE¡ry
 
	ge
;

107 (
	ge
 = 
ªadNextE¡ry
()Ë!
nuŒ
 && 
e
.
gëTime°amp
(Ë< 
ídtime
) {

108 i‡(
e
.
gëTime°amp
(Ë>
°¨âime
 && (
fûãr
 =
nuŒ
 || fûãr.
m©ches
(e))) {

109 
√xt
 = 
e
;

112 
	gskù≥dAtSèπ
++;

114 
	gthis
.
	gfûãr
 = 
fûãr
;

117 
synchr⁄ized
 
public
 
size
(Ë
throws
 
	gIOEx˚±i⁄
 {

118 i‡(
	gLOG
.
isTø˚E«bÀd
()) {

119 
	gLOG
.
åa˚
("size() called");

122 i‡(
	gthis
.
	gídtime
 >
§c
.
gëEndTime
()) {

123  
§c
.
size
(Ë- 
skù≥dAtSèπ
;

126 
	gpos
 = 
ö
.
gëPosôi⁄
();

128 i‡(
	gLOG
.
isTø˚E«bÀd
()) {

129 
	gLOG
.
åa˚
("ßvedÖo†(Ë" + 
pos
);

132 
LogE¡ry
 
	ge
;

134 
	gLogSkùLi°
.
M¨k
 
	gœ°£g
 = 
§c
.
gëSkùLi°
().
födM¨kBef‹e
(
this
.
ídtime
);

135 
	gö
.
£ek
(
œ°£g
.
gëByãs
());

136 
	gbuf
 = "";

138 
	gcou¡
 = 
œ°£g
.
gëE¡rõsSkù≥d
(Ë- 
skù≥dAtSèπ
;

140 (
	ge
 = 
ªadNextE¡ry
()Ë!
nuŒ
) {

141 i‡(
LOG
.
isTø˚E«bÀd
()) {

144 i‡(
e
.
gëTime°amp
(Ë> 
this
.
ídtime
) {

147 
	gcou¡
++;

149 
	gö
.
£ek
(
pos
);

150 
	gbuf
 = "";

152 i‡(
	gLOG
.
isTø˚E«bÀd
()) {

153 
	gLOG
.
åa˚
("size(Ë" + 
cou¡
);

156  
	gcou¡
;

159 
synchr⁄ized
 
¥iv©e
 
LogE¡ry
 
ªadNextE¡ry
() {

160 
	gåy
 {

161 
	gåy
 {

162 
	gåue
) {

163 
Såög
 
	glöe
 = 
ö
.
ªadLöe
();

164 i‡(
	glöe
 =
nuŒ
) {

168 
M©chî
 
	gm
 = 
§c
.
timï
.
m©chî
(
löe
);

169 i‡(
	gm
.
lookögAt
()) {

170 i‡(
	gbuf
.
Àngth
() > 0) {

171 
LogE¡ry
 
	ge
 = 
√w
 
Log4JE¡ry
(
§c
.
time°ampFromText
(
d©ef‹m©
, 
buf
), src.
gëSîvîId
(), buf);

172 
	gbuf
 = 
löe
;

173  
	ge
;

175 
	gbuf
 = 
löe
;

176 } i‡(
	gbuf
.
Àngth
() > 0) {

177 
	gbuf
 +
löe
 + "\n";

180 } 
ˇtch
 (
EOFEx˚±i⁄
 
eof
) {

183 i‡(
	gbuf
.
Àngth
() > 0) {

184 
LogE¡ry
 
	ge
 = 
√w
 
Log4JE¡ry
(
§c
.
time°ampFromText
(
d©ef‹m©
, 
buf
), src.
gëSîvîId
(), buf);

185 
	gbuf
 = "";

186  
	ge
;

188 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

189 
	gLOG
.
îr‹
("Eº‹ÑódögÇexàíåy i¿fûê(" + 
§c
.
fûe
 + "): " + 
e
);

190  
	gnuŒ
;

192  
	gnuŒ
;

195 
public
 
boﬁón
 
hasNext
() {

196  
	g√xt
 !
nuŒ
;

199 
public
 
LogE¡ry
 
√xt
(Ë
throws
 
	gNoSuchEÀmítEx˚±i⁄
 {

200 
LogE¡ry
 
	gªt
 = 
√xt
;

201 
LogE¡ry
 
	ge
 = 
ªadNextE¡ry
();

203 i‡(
	gfûãr
 !
nuŒ
) {

204 
åy
 {

205 
e
 !
nuŒ
 && !
fûãr
.
m©ches
(e)) {

206 
e
 = 
ªadNextE¡ry
();

208 } 
ˇtch
 (
FûãrEx˚±i⁄
 
„
) {

209 
throw
 
√w
 
NoSuchEÀmítEx˚±i⁄
(
e
.
toSåög
());

213 i‡(
	ge
 !
nuŒ
 && 
e
.
gëTime°amp
(Ë< 
ídtime
) {

214 
√xt
 = 
e
;

216 
	g√xt
 = 
nuŒ
;

218  
	gªt
;

221 
public
 
ªmove
(Ë
throws
 
	gUnsuµ‹ãdO≥øti⁄Ex˚±i⁄
 {

222 
throw
 
√w
 
Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("removeÇot supported for L4JÜogs");

225 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

226 
	gö
.
˛o£
();

229 
public
 
Såög
 
toSåög
() {

230 
Såög
 
	gsize
;

231 
	gåy
 {

232 
	gsize
 = 
√w
 
L⁄g
(
size
()).
toSåög
();

233 } 
ˇtch
 (
IOEx˚±i⁄
 
i€
) {

234 
	gsize
 = "UnableÅoÑead";

236  "Log4JSour˚Iãøt‹(°¨t=" + 
	g°¨âime
 + ",Énd=" + 
	gídtime
 + ", size=" + 
	gsize
 + ")";

240 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

241 
åy
 {

242  
	`ôî©‹
(
°¨âime
, 
ídtime
, 
nuŒ
);

243 } 
	`ˇtch
 (
FûãrEx˚±i⁄
 
„
) {

244 
	`as£π
(
Ál£
);

245  
nuŒ
;

247 
	}
}

249 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
, 
FûãrEx˚±i⁄
{

251 i‡(
ídtime
 < 
°¨âime
) {

252 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("EndÅimê(" + 
ídtime
 + "Ëmu° bêgª©î o∏equÆÅÿ°¨âimê(" + 
°¨âime
 + ")");

255  
√w
 
	`Log4JSour˚Iãøt‹
(
this
, 
°¨âime
, 
ídtime
, 
fûãr
);

256 
	}
}

258 
public
 
LogIãøt‹
 
	$ôî©‹
(Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

259  
	`ôî©‹
(
°¨âime
, 
ídtime
+1);

260 
	}
}

262 
public
 
	$Log4JSour˚
(
Såög
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

263 
this
.
fûe
=file;

265 
timï
 = 
P©ã∫
.
	`compûe
("^(\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2},\\d{3})");

266 
skùli°
 = 
√w
 
	`LogSkùLi°
();

267 
	`öô
();

268 
	}
}

270 
¥iv©e
 
	$time°ampFromText
(
Sim∂eD©eF‹m©
 
f‹m©
, 
Såög
 
s
) {

271 
D©e
 
d
 = 
nuŒ
;

272 
åy
 {

273 
d
 = 
f‹m©
.
	`∑r£
(
s
);

274 } 
	`ˇtch
 (
P¨£Ex˚±i⁄
 
e
) {

277 
CÆíd¨
 
c
 = 
√w
 
	`Gªg‹ünCÆíd¨
();

278 
c
.
	`£tTime
(
d
);

279  
c
.
	`gëTimeInMûlis
();

280 
	}
}

282 
¥iv©e
 
	$öô
(Ë
throws
 
IOEx˚±i⁄
 {

283 
Fûe
 
f
 = 
√w
 
	`Fûe
(
fûe
);

284 
R™domAc˚ssFûeRódî
 
ö
 = 
√w
 
	`R™domAc˚ssFûeRódî
(
f
);

285 
Sim∂eD©eF‹m©
 
d©ef‹m©
 = 
√w
 
	`Sim∂eD©eF‹m©
(
DATE_FORMAT
);

286 
P©ã∫
 
idp
 = P©ã∫.
	`compûe
("\\[myid:(\\d+)\\]");

288 
œ°Fp
 = 
ö
.
	`gëPosôi⁄
();

289 
Såög
 
löe
 = 
ö
.
	`ªadLöe
();

290 
M©chî
 
m
 = 
nuŒ
;

293 i‡((
löe
 !
nuŒ
Ë&& (
m
 = 
timï
.
	`m©chî
÷öe)).
	`lookögAt
()) {

294 
°¨âime
 = 
	`time°ampFromText
(
d©ef‹m©
, 
m
.
	`group
(1));

296 
throw
 
√w
 
	`IOEx˚±i⁄
("InvalidÜog4j format. FirstÜine doesn't start withÅime");

302 
Såög
 
œ°íåy
 = 
löe
;

303 
åy
 {

304 
löe
 !
nuŒ
) {

305 
m
 = 
timï
.
	`m©chî
(
löe
);

306 i‡(
m
.
	`lookögAt
()) {

307 i‡(
size
 % 
skùN
 == 0) {

308 
time
 = 
	`time°ampFromText
(
d©ef‹m©
, 
m
.
	`group
(1));

309 
skùli°
.
	`addM¨k
(
time
, 
œ°Fp
, 
size
);

311 
size
++;

312 
œ°íåy
 = 
löe
;

314 i‡(
£rvîid
 =0 && (
m
 = 
idp
.
	`m©chî
(
löe
)).
	`föd
()) {

315 
£rvîid
 = 
I¡egî
.
	`vÆueOf
(
m
.
	`group
(1));

318 
œ°Fp
 = 
ö
.
	`gëPosôi⁄
();

319 
löe
 = 
ö
.
	`ªadLöe
();

321 } 
	`ˇtch
 (
EOFEx˚±i⁄
 
eof
) {

323 } 
föÆly
 {

324 
ö
.
	`˛o£
();

327 
m
 = 
timï
.
	`m©chî
(
œ°íåy
);

328 i‡(
m
.
	`lookögAt
()) {

329 
ídtime
 = 
	`time°ampFromText
(
d©ef‹m©
, 
m
.
	`group
(1));

331 
throw
 
√w
 
	`IOEx˚±i⁄
("InvalidÜog4j format. LastÜine doesn't start withÅime");

333 
	}
}

335 
public
 
Såög
 
	$toSåög
() {

336  "Log4JSour˚(fûe=" + 
fûe
 + ", size=" + 
size
 + ", sèπ=" + 
°¨âime
 + ",Énd=" + 
ídtime
 +", id=" + 
£rvîid
 +")";

337 
	}
}

339 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

340 
föÆ
 
Log4JSour˚
 
s
 = 
√w
 
	`Log4JSour˚
(
¨gs
[0]);

341 
Sy°em
.
out
.
	`¥öén
(
s
);

343 
LogIãøt‹
 
ôî
;

345 i‡(
¨gs
.
Àngth
 == 3) {

346 
föÆ
 
°¨âime
 = 
L⁄g
.
	`vÆueOf
(
¨gs
[1]);

347 
föÆ
 
ídtime
 = 
L⁄g
.
	`vÆueOf
(
¨gs
[2]);

348 
ôî
 = 
s
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

350 
Thªad
 
t1
 = 
√w
 
	`Thªad
(Ë{ 
public
 
	`run
 () {

352 
LogIãøt‹
 
ôî
 = 
s
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

353 
Sy°em
.
out
.
	`¥öén
(
ôî
);

355 
Thªad
 
t2
 = 
√w
 
	`Thªad
(Ë{ 
public
 
	`run
 () {

357 
LogIãøt‹
 
ôî
 = 
s
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

358 
Sy°em
.
out
.
	`¥öén
(
ôî
);

360 
Thªad
 
t3
 = 
√w
 
	`Thªad
(Ë{ 
public
 
	`run
 () {

362 
LogIãøt‹
 
ôî
 = 
s
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

363 
Sy°em
.
out
.
	`¥öén
(
ôî
);

365 
t1
.
	`°¨t
();

366 
t2
.
	`°¨t
();

369 
ôî
 = 
s
.
	`ôî©‹
();

375 
ôî
.
	`˛o£
();

376 
	}
}

378 
public
 
	$gëSîvîId
() {

379  
£rvîid
;

380 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogEntry.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
public
 
ab°ø˘
 cœs†
	cLogE¡ry
 
im∂emíts
 
	mSîülizabÀ
 {

24 
¥iv©e
 
HashM≠
 
	m©åibuãs
;

26 
public
 
	eTy≥
 { 
	mUNKNOWN
, 
	mLOG4J
, 
	mTXN
 };

28 
public
 
	$LogE¡ry
(
time°amp
) {

29 
©åibuãs
 = 
√w
 
	`HashM≠
();

30 
	`£tAâribuã
("time°amp", 
√w
 
	`L⁄g
(
time°amp
));

31 
	}
}

33 
public
 
	$gëTime°amp
() {

34  (
L⁄g
)
	`gëAâribuã
("timestamp");

35 
	}
}

37 
public
 
ab°ø˘
 
Ty≥
 
gëTy≥
();

39 
public
 
	$£tAâribuã
(
Såög
 
key
, 
Obje˘
 
v
) {

40 
©åibuãs
.
	`put
(
key
, 
v
);

41 
	}
}

43 
public
 
Obje˘
 
	$gëAâribuã
(
Såög
 
key
) {

44  
©åibuãs
.
	`gë
(
key
);

45 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogIterator.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gClo£abÀ
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
public
 
öãrÁ˚
 
LogIãøt‹
 
exãnds
 
	gIãøt‹
<
	gLogE¡ry
>, 
	gClo£abÀ
 {

25 
size
(Ë
throws
 
	gIOEx˚±i⁄
;;

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogServer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

23 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	ge˛ù£
.
	gjëty
.
	g£rvî
.
	gSîvî
;

29 
imp‹t
 
	g‹g
.
	ge˛ù£
.
	gjëty
.
	g£rvî
.
	gReque°
;

30 
imp‹t
 
	g‹g
.
	ge˛ù£
.
	gjëty
.
	g£rvî
.
	gh™dÀr
.
	gAb°ø˘H™dÀr
;

31 
imp‹t
 
	g‹g
.
	ge˛ù£
.
	gjëty
.
	g£rvÀt
.
	gSîvÀtC⁄ãxtH™dÀr
;

32 
imp‹t
 
	g‹g
.
	ge˛ù£
.
	gjëty
.
	g£rvÀt
.
	gSîvÀtHﬁdî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
.*;

36 
public
 cœs†
	cLogSîvî
 
exãnds
 
	mSîvÀtC⁄ãxtH™dÀr
 {

37 
public
 
	$LogSîvî
(
MîgedLogSour˚
 
§c
Ë
throws
 
Ex˚±i⁄
 {

38 
	`su≥r
(
SîvÀtC⁄ãxtH™dÀr
.
SESSIONS
);

39 
	`£tC⁄ãxtP©h
("/");

41 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`SèticC⁄ã¡
()),"/graph/*");

43 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`Fs
()),"/fs");

44 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`GøphD©a
(
§c
)), "/data");

45 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`FûeLﬂdî
(
§c
)), "/loadfile");

46 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`NumEvíts
(
§c
)), "/info");

47 
	`addSîvÀt
(
√w
 
	`SîvÀtHﬁdî
“ew 
	`Throughput
(
§c
)), "/throughput");

50 
public
 
	$maö
(
Såög
[] 
¨gs
) {

51 
åy
 {

52 
MîgedLogSour˚
 
§c
 = 
√w
 
	`MîgedLogSour˚
(
¨gs
);

53 
Sy°em
.
out
.
	`¥öén
(
§c
);

55 
Sîvî
 
£rvî
 = 
√w
 
	`Sîvî
(8182);

56 
£rvî
.
	`£tH™dÀr
(
√w
 
	`LogSîvî
(
§c
));

58 
£rvî
.
	`°¨t
();

59 
£rvî
.
	`joö
();

61 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

63 
e
.
	`¥ötSèckTø˚
();

65 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogSkipList.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
public
 cœs†
	cLogSkùLi°
 {

34 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
LogSkùLi°
.
˛ass
);

36 
¥iv©e
 
	mLökedLi°
<
	mM¨k
> 
	mm¨ks
;

38 
public
 cœs†
	cM¨k
 {

39 
¥iv©e
 
	mtime
;

40 
¥iv©e
 
	mbyãs
;

41 
¥iv©e
 
	mskù≥d
;

43 
public
 
M¨k
(
time
, 
byãs
, 
skù≥d
) {

44 
	mthis
.
	mtime
 = 
time
;

45 
	mthis
.
	mbyãs
 = 
byãs
;

46 
	mthis
.
	mskù≥d
 = 
skù≥d
;

49 
public
 
gëTime
(Ë{  
	mthis
.
	mtime
; }

50 
public
 
gëByãs
(Ë{  
	mthis
.
	mbyãs
; }

51 
public
 
gëE¡rõsSkù≥d
(Ë{  
	mthis
.
	mskù≥d
; }

53 
public
 
Såög
 
toSåög
() {

54  "M¨k—ime=" + 
	mtime
 + ", byãs=" + 
	mbyãs
 + ", skù≥d=" + 
	mskù≥d
 + ")";

58 
public
 
	$LogSkùLi°
() {

59 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

60 
LOG
.
	`åa˚
("New skipÜist");

62 
m¨ks
 = 
√w
 
LökedLi°
<
M¨k
>();

63 
	}
}

65 
public
 
	$addM¨k
(
time
, 
byãs
, 
skù≥d
) {

66 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

67 
LOG
.
	`åa˚
("addM¨k (time:" + 
time
 + ", byãs: " + 
byãs
 + ", skù≥d: " + 
skù≥d
 + ")");

69 
m¨ks
.
	`add
(
√w
 
	`M¨k
(
time
, 
byãs
, 
skù≥d
));

70 
	}
}

75 
public
 
M¨k
 
	$födM¨kBef‹e
(
time
Ë
throws
 
NoSuchEÀmítEx˚±i⁄
 {

76 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

77 
LOG
.
	`åa˚
("födM¨kBef‹e(" + 
time
 + ")");

80 
M¨k
 
œ°
 = 
m¨ks
.
	`gëFú°
();

81 
M¨k
 
m
: 
m¨ks
) {

82 i‡(
m
.
	`gëTime
(Ë> 
time
) {

85 
œ°
 = 
m
;

88 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

89 
LOG
.
	`åa˚
("ªtu∫ " + 
œ°
 );

92  
œ°
;

93 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogSource.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

19 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

21 
public
 
öãrÁ˚
 
LogSour˚
 
exãnds
 
	gIãøbÀ
<
	gLogE¡ry
> {

22 
public
 
LogIãøt‹
 
ôî©‹
(
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
;

24 
public
 
LogIãøt‹
 
ôî©‹
(
°¨âime
, 
ídtime
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
;

26 
public
 
LogIãøt‹
 
ôî©‹
(Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
;

28 
public
 
boﬁón
 
ovîœpsR™ge
(
°¨âime
, 
ídtime
);

30 
public
 
size
();

31 
public
 
gëSèπTime
();

32 
public
 
gëEndTime
();

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/MeasureThroughput.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

28 
public
 cœs†
	cMósuªThroughput
 {

29 
¥iv©e
 
föÆ
 
	mMS_PER_SEC
 = 1000;

30 
¥iv©e
 
föÆ
 
	mMS_PER_MIN
 = 
MS_PER_SEC
*60;

31 
¥iv©e
 
föÆ
 
	mMS_PER_HOUR
 = 
MS_PER_MIN
*60;

33 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

34 
MîgedLogSour˚
 
sour˚
 = 
√w
 
	`MîgedLogSour˚
(
¨gs
);

36 
PrötSåóm
 
ps_ms
 = 
√w
 
	`PrötSåóm
“ew 
	`Buf„ªdOuçutSåóm
“ew 
	`FûeOuçutSåóm
("throughput-ms.out")));

37 
PrötSåóm
 
ps_£c
 = 
√w
 
	`PrötSåóm
“ew 
	`Buf„ªdOuçutSåóm
“ew 
	`FûeOuçutSåóm
("throughput-sec.out")));

38 
PrötSåóm
 
ps_mö
 = 
√w
 
	`PrötSåóm
“ew 
	`Buf„ªdOuçutSåóm
“ew 
	`FûeOuçutSåóm
("throughput-min.out")));

39 
PrötSåóm
 
ps_hour
 = 
√w
 
	`PrötSåóm
“ew 
	`Buf„ªdOuçutSåóm
“ew 
	`FûeOuçutSåóm
("throughput-hour.out")));

40 
LogIãøt‹
 
ôî
;

42 
Sy°em
.
out
.
	`¥öén
(
sour˚
);

43 
ôî
 = 
sour˚
.
	`ôî©‹
();

44 
cuºítms
 = 0;

45 
cuºít£c
 = 0;

46 
cuºítmö
 = 0;

47 
cuºíthour
 = 0;

48 
HashSë
<
L⁄g
> 
zxids_ms
 = 
√w
 HashSet<Long>();

49 
zxid_£c
 = 0;

50 
zxid_mö
 = 0;

51 
zxid_hour
 = 0;

53 
ôî
.
	`hasNext
()) {

54 
LogE¡ry
 
e
 = 
ôî
.
	`√xt
();

55 
Tønß˘i⁄E¡ry
 
cxn
 = (Tønß˘i⁄E¡ry)
e
;

57 
ms
 = 
cxn
.
	`gëTime°amp
();

58 
£c
 = 
ms
/
MS_PER_SEC
;

59 
mö
 = 
ms
/
MS_PER_MIN
;

60 
hour
 = 
ms
/
MS_PER_HOUR
;

62 i‡(
cuºítms
 !
ms
 && currentms != 0) {

63 
ps_ms
.
	`¥öén
("" + 
cuºítms
 + " " + 
zxids_ms
.
	`size
());

65 
zxid_£c
 +
zxids_ms
.
	`size
();

66 
zxid_mö
 +
zxids_ms
.
	`size
();

67 
zxid_hour
 +
zxids_ms
.
	`size
();

68 
zxids_ms
.
	`˛ór
();

71 i‡(
cuºít£c
 !
£c
 && currentsec != 0) {

72 
ps_£c
.
	`¥öén
("" + 
cuºít£c
*
MS_PER_SEC
 + " " + 
zxid_£c
);

74 
zxid_£c
 = 0;

77 i‡(
cuºítmö
 !
mö
 && currentmin != 0) {

78 
ps_mö
.
	`¥öén
("" + 
cuºítmö
*
MS_PER_MIN
 + " " + 
zxid_mö
);

80 
zxid_mö
 = 0;

83 i‡(
cuºíthour
 !
hour
 && currenthour != 0) {

84 
ps_hour
.
	`¥öén
("" + 
cuºíthour
*
MS_PER_HOUR
 + " " + 
zxid_hour
);

86 
zxid_hour
 = 0;

89 
cuºítms
 = 
ms
;

90 
cuºít£c
 = 
£c
;

91 
cuºítmö
 = 
mö
;

92 
cuºíthour
 = 
hour
;

94 
zxids_ms
.
	`add
(
cxn
.
	`gëZxid
());

97 
ôî
.
	`˛o£
();

98 
ps_ms
.
	`˛o£
();

99 
ps_£c
.
	`˛o£
();

100 
ps_mö
.
	`˛o£
();

101 
ps_hour
.
	`˛o£
();

103 
	}
};

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/MergedLogSource.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gChecksum
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gTø˚F‹m©ãr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeHódî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

49 
imp‹t
 
	gjava
.
	gio
.
	gClo£abÀ
;

50 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

51 
imp‹t
 
	gjava
.
	gutû
.
	gVe˘‹
;

52 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

53 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

54 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

56 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

57 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

59 
public
 cœs†
	cMîgedLogSour˚
 
im∂emíts
 
	mLogSour˚
 {

60 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
MîgedLogSour˚
.
˛ass
);

61 
¥iv©e
 
	mVe˘‹
<
	mLogSour˚
> 
	msour˚s
 = 
nuŒ
;

62 
¥iv©e
 
	m°¨âime
 = 0;

63 
¥iv©e
 
	mídtime
 = 0;

64 
¥iv©e
 
	msize
 = 0;

66 
public
 
boﬁón
 
	$ovîœpsR™ge
(
°¨âime
, 
ídtime
) {

67  (
°¨âime
 <
this
.
ídtime
 &&Éndtime >=Åhis.starttime);

70 
public
 
	$size
(Ë{  
size
; 
	}
}

71 
public
 
	$gëSèπTime
(Ë{  
°¨âime
; 
	}
}

72 
public
 
	$gëEndTime
(Ë{  
ídtime
; 
	}
}

74 
¥iv©e
 cœs†
	cMîgedLogSour˚Iãøt‹
 
im∂emíts
 
	gLogIãøt‹
 {

75 
¥iv©e
 
LogE¡ry
 
	g√xt
 = 
nuŒ
;

76 
¥iv©e
 
	g°¨t
 = 0;

77 
¥iv©e
 
	gíd
 = 0;

78 
¥iv©e
 
MîgedLogSour˚
 
	g§c
 = 
nuŒ
;

79 
¥iv©e
 
	gLogIãøt‹
[] 
	gsour˚s
 = 
nuŒ
;

80 
¥iv©e
 
	gLogE¡ry
[] 
	g√xts
 = 
nuŒ
;

81 
¥iv©e
 
FûãrOp
 
	gfûãr
 = 
nuŒ
;

83 
public
 
MîgedLogSour˚Iãøt‹
(
MîgedLogSour˚
 
§c
, 
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

84 
	gVe˘‹
<
	gLogIãøt‹
> 
	gôîs
 = 
√w
 
Ve˘‹
<
LogIãøt‹
>();

85 
LogSour˚
 
	gs
 : 
§c
.
sour˚s
) {

86 i‡(
s
.
ovîœpsR™ge
(
°¨âime
, 
ídtime
)) {

87 
	gôîs
.
add
(
s
.
ôî©‹
(
°¨âime
, 
ídtime
, 
fûãr
));

91 
	gsour˚s
 = 
√w
 
LogIãøt‹
[
ôîs
.
size
()];

92 
	gsour˚s
 = 
ôîs
.
toAºay
(
sour˚s
);

93 
	g√xts
 = 
√w
 
LogE¡ry
[
ôîs
.
size
()];

94 
	gi
 = 0; i < 
	gsour˚s
.
	gÀngth
; i++) {

95 i‡(
	gsour˚s
[
i
].
hasNext
())

96 
	g√xts
[
i
] = 
sour˚s
[i].
√xt
();

98 
	gthis
.
	gfûãr
 = 
fûãr
;

101 
public
 
MîgedLogSour˚Iãøt‹
(
MîgedLogSour˚
 
§c
, 
°¨âime
, 
ídtime
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

102 
this
(
§c
, 
°¨âime
, 
ídtime
, 
nuŒ
);

105 
public
 
size
(Ë
throws
 
	gIOEx˚±i⁄
 {

106 
	gsize
 = 0;

107 
LogIãøt‹
 
	gi
 : 
sour˚s
) {

108 
size
 +
i
.size();

110  
	gsize
;

113 
public
 
boﬁón
 
hasNext
() {

114 
LogE¡ry
 
	gn
 : 
√xts
) {

115 i‡(
n
 !
nuŒ
Ë 
åue
;

117  
	gÁl£
;

120 
public
 
LogE¡ry
 
√xt
() {

121 
	gmö
 = -1;

122 
	gi
 = 0; i < 
	g√xts
.
	gÀngth
; i++) {

123 i‡(
	g√xts
[
i
] !
nuŒ
) {

124 i‡(
mö
 == -1) {

125 
mö
 = 
i
;

126 } i‡(
	g√xts
[
i
].
gëTime°amp
(Ë<Çexts[
mö
].getTimestamp()) {

127 
	gmö
 = 
i
;

131 i‡(
	gmö
 == -1) {

132  
nuŒ
;

134 
LogE¡ry
 
	ge
 = 
√xts
[
mö
];

135 
	g√xts
[
mö
] = 
sour˚s
[mö].
√xt
();

136  
	ge
;

140 
public
 
ªmove
(Ë
throws
 
	gUnsuµ‹ãdO≥øti⁄Ex˚±i⁄
 {

141 
throw
 
√w
 
Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("removeÇot supported for MergedÜogs");

144 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

145 
LogIãøt‹
 
	gi
 : 
sour˚s
) {

146 
i
.
˛o£
();

151 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

152 
åy
 {

153  
	`ôî©‹
(
°¨âime
, 
ídtime
, 
nuŒ
);

154 } 
	`ˇtch
 (
FûãrEx˚±i⁄
 
„
) {

155 
	`as£π
(
Ál£
);

156  
nuŒ
;

158 
	}
}

160 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

162 i‡(
ídtime
 < 
°¨âime
) {

163 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("EndÅimê(" + 
ídtime
 + "Ëmu° bêgª©î o∏equÆÅÿ°¨âimê(" + 
°¨âime
 + ")");

166  
√w
 
	`MîgedLogSour˚Iãøt‹
(
this
, 
°¨âime
, 
ídtime
, 
fûãr
);

167 
	}
}

169 
public
 
LogIãøt‹
 
	$ôî©‹
(Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

170  
	`ôî©‹
(
°¨âime
, 
ídtime
+1);

171 
	}
}

173 
public
 
	$MîgedLogSour˚
(
Såög
[] 
fûes
Ë
throws
 
IOEx˚±i⁄
 {

174 
sour˚s
 = 
√w
 
Ve˘‹
<
LogSour˚
>();

175 
Såög
 
f
 : 
fûes
) {

176 
	`addSour˚
(
f
);

178 
	}
}

180 
public
 
	$addSour˚
(
Såög
 
f
Ë
throws
 
IOEx˚±i⁄
 {

181 
LogSour˚
 
s
 = 
nuŒ
;

182 i‡(
TxnLogSour˚
.
	`isTønß˘i⁄Fûe
(
f
)) {

183 
s
 = 
√w
 
	`TxnLogSour˚
(
f
);

185 
s
 = 
√w
 
	`Log4JSour˚
(
f
);

188 
size
 +
s
.
	`size
();

189 
ídtime
 = 
s
.
	`gëEndTime
() >Éndtime ? s.getEndTime() :Éndtime;

190 
°¨âime
 = 
s
.
	`gëSèπTime
() < starttime || starttime == 0 ? s.getStartTime() : starttime;

191 
sour˚s
.
	`add
(
s
);

192 
	}
}

194 
public
 
Såög
 
	$toSåög
() {

195 
Såög
 
s
 = "MîgedLogSour˚(size=" + 
size
 + ", sèπ=" + 
°¨âime
 + ",Énd=" + 
ídtime
 +")";

196 
LogSour˚
 
§c
 : 
sour˚s
) {

197 
s
 +"\n\t- " +
§c
;

199  
s
;

200 
	}
}

202 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

203 
Sy°em
.
out
.
	`¥öén
("Time: " + Sy°em.
	`cuºítTimeMûlis
());

204 
MîgedLogSour˚
 
s
 = 
√w
 
	`MîgedLogSour˚
(
¨gs
);

205 
Sy°em
.
out
.
	`¥öén
(
s
);

207 
LogIãøt‹
 
ôî
;

209 
ôî
 = 
s
.
	`ôî©‹
();

210 
Sy°em
.
out
.
	`¥öén
("Time: " + Sy°em.
	`cuºítTimeMûlis
());

211 
Sy°em
.
out
.
	`¥öén
("Iãøt‹ Size: " + 
ôî
.
	`size
());

212 
Sy°em
.
out
.
	`¥öén
("Time: " + Sy°em.
	`cuºítTimeMûlis
());

216 
ôî
.
	`˛o£
();

217 
Sy°em
.
out
.
	`¥öén
("Time: " + Sy°em.
	`cuºítTimeMûlis
());

218 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/RandomAccessFileReader.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈utSåóm
;

28 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

29 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈ut
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

34 
public
 cœs†
	cR™domAc˚ssFûeRódî
 
exãnds
 
Ródî
 
im∂emíts
 
	mD©aI≈ut
 {

35 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
R™domAc˚ssFûeRódî
.
˛ass
);

36 
¥iv©e
 
R™domAc˚ssFûe
 
	mfûe
;

37 
¥iv©e
 
	mbyã
[] 
	mbuf„r
;

38 
¥iv©e
 
	mbuf„rsize
;

39 
¥iv©e
 
	mbuf„roff£t
;

40 
¥iv©e
 
	mfûeoff£t
;

41 
¥iv©e
 
	mÂ
;

43 
¥iv©e
 
föÆ
 
	mDEFAULT_BUFFER_SIZE
 = 512*1024;

44 
¥iv©e
 
	mpoöt
 = 0;

46 
public
 
	$R™domAc˚ssFûeRódî
(
Fûe
 
f
Ë
throws
 
FûeNŸFoundEx˚±i⁄
 {

47 
fûe
 = 
√w
 
	`R™domAc˚ssFûe
(
f
, "r");

48 i‡(
LOG
.
	`isDebugE«bÀd
()) {

49 
åy
 {

50 
LOG
.
	`debug
("O≥√d fûe(" + 
f
 + "Ëwôh FD (" + 
fûe
.
	`gëFD
() + ")");

51 } 
	`ˇtch
 (
IOEx˚±i⁄
 
i€
) {

52 
LOG
.
	`debug
("O≥√d fûe(" + 
f
 + ") coulds get FD");

56 
buf„r
 = 
√w
 
byã
[
DEFAULT_BUFFER_SIZE
];

57 
buf„rsize
 = 0;

58 
buf„roff£t
 = 0;

59 
fûeoff£t
 = 0;

60 
Â
 = 0;

68 
¥iv©e
 
	$fûl
(Ë
throws
 
IOEx˚±i⁄
 {

69 
fûeoff£t
 = 
Â
;

70 
ªad
 = 
fûe
.
	`ªad
(
buf„r
, 0, buf„r.
Àngth
);

72 i‡(
LOG
.
	`isDebugE«bÀd
()) {

73 
Såög
 
buf
 = 
√w
 
	`Såög
(
buf„r
, 0, 40, "UTF-8");

74 
LOG
.
	`debug
("fûl(buf„r=" + 
buf
 + ")");

77 i‡(
ªad
 == -1) {

78 
buf„rsize
 = 0;

80 
buf„rsize
 = 
ªad
;

82 
Â
 +
buf„rsize
;

83 
buf„roff£t
 = 0;

85  
buf„rsize
;

86 
	}
}

91 
public
 
boﬁón
 
	$m¨kSuµ‹ãd
(Ë{  
Ál£
; 
	}
}

96 
synchr⁄ized
 
public
 
	$ªad
([] 
cbuf
, 
off
, 
Àn
Ë
throws
 
IOEx˚±i⁄
 {

98 
byã
[] 
b
 = 
√w
 byte[2];

99 
byã§ód
 = 0;

100 
Àn
 > 0) {

101 
ªad
 = 
	`ªad
(
b
, 0, 2);

102 
byã§ód
 +
ªad
;

103 i‡(
ªad
 < 2) {

104  
byã§ód
;

106 
cbuf
[
off
] = ()((
b
[0] << 8) | (b[1] & 0xff));

107 
off
 +
ªad
;

108 
Àn
 -
ªad
;

111  
byã§ód
;

112 
	}
}

114 
synchr⁄ized
 
public
 
	$ªad
(
byã
[] 
buf
, 
off
, 
Àn
Ë
throws
 
IOEx˚±i⁄
 {

115 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

116 
LOG
.
	`åa˚
("ªad(buf, off=" + 
off
 + ",Üí=" + 
Àn
);

119 
ªad
 = 0;

120 
Àn
 > 0) {

121 i‡(
buf„rsize
 == 0) {

122 
	`fûl
();

123 i‡(
buf„rsize
 == 0) {

128 
toc›y
 = 
M©h
.
	`mö
(
Àn
, 
buf„rsize
);

129 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

130 
LOG
.
	`åa˚
("toc›y=" + 
toc›y
);

133 
Sy°em
.
	`¨øyc›y
(
buf„r
, 
buf„roff£t
, 
buf
, 
off
, 
toc›y
);

134 
buf„rsize
 -
toc›y
;

135 
buf„roff£t
 +
toc›y
;

137 
Àn
 -
toc›y
;

138 
ªad
 +
toc›y
;

139 
off
 +
toc›y
;

141 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

142 
LOG
.
	`åa˚
("ªad=" + 
ªad
);

145  
ªad
;

146 
	}
}

148 
public
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

149 
fûe
.
	`˛o£
();

150 
	}
}

155 
public
 
	$gëPosôi⁄
() {

156  
buf„roff£t
 + 
fûeoff£t
;

157 
	}
}

159 
synchr⁄ized
 
public
 
	$£ek
(
pos
Ë
throws
 
IOEx˚±i⁄
 {

160 i‡(
LOG
.
	`isDebugE«bÀd
()) {

161 
LOG
.
	`debug
("£ek(" + 
pos
 + ")");

163 
fûe
.
	`£ek
(
pos
);

164 
Â
 = 
pos
;

165 
buf„rsize
 = 0;

166 
	}
}

171 
synchr⁄ized
 
public
 
Såög
 
	$ªadLöe
(Ë
throws
 
IOEx˚±i⁄
 {

172 
SåögBuf„r
 
s
 = 
nuŒ
;

176 
buf„rög
:

178 i‡(
buf„rsize
 == 0) {

179 
	`fûl
();

180 i‡(
buf„rsize
 == 0) {

185 
i
 = 0; i < 
buf„rsize
; i++) {

186 i‡(
buf„r
[
buf„roff£t
 + 
i
] == '\n') {

187 i‡(
i
 > 0) {

188 i‡(
s
 =
nuŒ
Ë{ s = 
√w
 
	`SåögBuf„r
(); }

189 
s
.
	`≠≥nd
(
√w
 
	`Såög
(
buf„r
, 
buf„roff£t
, 
i
, "UTF-8"));

191 
buf„roff£t
 +
i
+1;

192 
buf„rsize
 -
i
+1;

193  
buf„rög
;

198 i‡(
s
 =
nuŒ
Ë{ s = 
√w
 
	`SåögBuf„r
(); }

199 
s
.
	`≠≥nd
(
√w
 
	`Såög
(
buf„r
, 
buf„roff£t
, 
buf„rsize
, "UTF-8"));

200 
buf„rsize
 = 0;

203 i‡(
s
 =
nuŒ
) {

204  
nuŒ
;

206  
s
.
	`toSåög
();

208 
	}
}

213 
public
 
	$ªadFuŒy
(
byã
[] 
b
Ë
throws
 
IOEx˚±i⁄
 {

214 
	`ªadFuŒy
(
b
, 0, b.
Àngth
);

215 
	}
}

217 
public
 
	$ªadFuŒy
(
byã
[] 
b
, 
off
, 
Àn
Ë
throws
 
IOEx˚±i⁄


219 
Àn
 > 0) {

220 
ªad
 = 
	`ªad
(
b
, 
off
, 
Àn
);

221 
Àn
 -
ªad
;

222 
off
 +
ªad
;

224 i‡(
ªad
 == 0) {

225 
throw
 
√w
 
	`EOFEx˚±i⁄
("End of fileÑeached");

228 
	}
}

230 
public
 
	$skùByãs
(
n
Ë
throws
 
IOEx˚±i⁄
 {

231 
	`£ek
(
	`gëPosôi⁄
(Ë+ 
n
);

232  
n
;

233 
	}
}

235 
public
 
boﬁón
 
	$ªadBoﬁón
(Ë
throws
 
IOEx˚±i⁄
 {

236  (
	`ªadByã
() != 0);

237 
	}
}

239 
public
 
byã
 
	$ªadByã
(Ë
throws
 
IOEx˚±i⁄
 {

240 
byã
[] 
b
 = 
√w
 byte[1];

241 
	`ªadFuŒy
(
b
, 0, 1);

242  
b
[0];

243 
	}
}

245 
public
 
	$ªadUnsig√dByã
(Ë
throws
 
IOEx˚±i⁄
 {

246  ()
	`ªadByã
();

247 
	}
}

249 
public
 
	$ªadSh‹t
(Ë
throws
 
IOEx˚±i⁄
 {

250 
byã
[] 
b
 = 
√w
 byte[2];

251 
	`ªadFuŒy
(
b
, 0, 2);

252  ()((
b
[0] << 8) | (b[1] & 0xff));

253 
	}
}

255 
public
 
	$ªadUnsig√dSh‹t
(Ë
throws
 
IOEx˚±i⁄
 {

256 
byã
[] 
b
 = 
√w
 byte[2];

257 
	`ªadFuŒy
(
b
, 0, 2);

258  (((
b
[0] & 0xff) << 8) | (b[1] & 0xff));

259 
	}
}

261 
public
 
	$ªadCh¨
(Ë
throws
 
IOEx˚±i⁄
 {

262  ()
	`ªadSh‹t
();

263 
	}
}

265 
public
 
	$ªadI¡
(Ë
throws
 
IOEx˚±i⁄
 {

266 
byã
[] 
b
 = 
√w
 byte[4];

267 
	`ªadFuŒy
(
b
, 0, 4);

268  (((
b
[0] & 0xff) << 24) | ((b[1] & 0xff) << 16) | ((b[2] & 0xff) << 8) | (b[3] & 0xff));

269 
	}
}

271 
public
 
	$ªadL⁄g
(Ë
throws
 
IOEx˚±i⁄
 {

272 
byã
[] 
b
 = 
√w
 byte[8];

273 
	`ªadFuŒy
(
b
, 0, 8);

275  ((()(
b
[0] & 0xff) << 56) | (()(b[1] & 0xff) << 48) |

276 (()(
b
[2] & 0xff) << 40) | (()(b[3] & 0xff) << 32) |

277 (()(
b
[4] & 0xff) << 24) | (()(b[5] & 0xff) << 16) |

278 (()(
b
[6] & 0xff) << 8) | (()(b[7] & 0xff)));

279 
	}
}

281 
public
 
	$ªadFlﬂt
(Ë
throws
 
IOEx˚±i⁄
 {

282  
Flﬂt
.
	`ötBôsToFlﬂt
(
	`ªadI¡
());

283 
	}
}

285 
public
 
	$ªadDoubÀ
(Ë
throws
 
IOEx˚±i⁄
 {

286  
DoubÀ
.
	`l⁄gBôsToDoubÀ
(
	`ªadL⁄g
());

287 
	}
}

289 
public
 
Såög
 
	$ªadUTF
(Ë
throws
 
IOEx˚±i⁄
 {

290 
Àn
 = 
	`ªadUnsig√dSh‹t
();

291 
byã
[] 
byãs
 = 
√w
 byã[
Àn
+2];

292 
byãs
[0] = (
byã
)((
Àn
 >> 8) & 0xFF);

293 
byãs
[1] = (
byã
)(
Àn
 & 0xFF);

294 
	`ªadFuŒy
(
byãs
, 2, 
Àn
);

295 
D©aI≈utSåóm
 
dis
 = 
√w
 
	`D©aI≈utSåóm
“ew 
	`ByãAºayI≈utSåóm
(
byãs
));

296  
dis
.
	`ªadUTF
();

297 
	}
}

299 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

300 
R™domAc˚ssFûeRódî
 
f
 = 
√w
 
	`R™domAc˚ssFûeRódî
“ew 
	`Fûe
(
¨gs
[0]));

302 
pos0
 = 
f
.
	`gëPosôi⁄
();

303 
i
 = 0; i < 5; i++) {

304 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

306 
Sy°em
.
out
.
	`¥öén
("=============");

307 
pos1
 = 
f
.
	`gëPosôi⁄
();

308 
Sy°em
.
out
.
	`¥öén
("pos: " + 
pos1
);

309 
i
 = 0; i < 5; i++) {

310 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

312 
Sy°em
.
out
.
	`¥öén
("=============");

313 
f
.
	`£ek
(
pos1
);

314 
i
 = 0; i < 5; i++) {

315 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

317 
Sy°em
.
out
.
	`¥öén
("=============");

318 
f
.
	`£ek
(
pos0
);

319 
i
 = 0; i < 5; i++) {

320 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

322 
pos2
 = 
f
.
	`gëPosôi⁄
();

323 
Sy°em
.
out
.
	`¥öén
("=============");

324 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

325 
f
.
	`£ek
(
pos2
);

326 
Sy°em
.
out
.
	`¥öén
(
f
.
	`ªadLöe
());

327 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TransactionEntry.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
public
 cœs†
	cTønß˘i⁄E¡ry
 
exãnds
 
	mLogE¡ry
 {

21 
public
 
	$Tønß˘i⁄E¡ry
(
time°amp
, 
˛õ¡Id
, 
Cxid
, 
Zxid
, 
Såög
 
›
) {

22 
	`this
(
time°amp
, 
˛õ¡Id
, 
Cxid
, 
Zxid
, 
›
, "");

25 
public
 
	$Tønß˘i⁄E¡ry
(
time°amp
, 
˛õ¡Id
, 
Cxid
, 
Zxid
, 
Såög
 
›
, Såög 
exåa
) {

26 
	`su≥r
(
time°amp
);

27 
	`£tAâribuã
("˛õ¡-id", 
√w
 
	`L⁄g
(
˛õ¡Id
));

28 
	`£tAâribuã
("cxid", 
√w
 
	`L⁄g
(
Cxid
));

29 
	`£tAâribuã
("zxid", 
√w
 
	`L⁄g
(
Zxid
));

30 
	`£tAâribuã
("›î©i⁄", 
›
);

31 
	`£tAâribuã
("exåa", 
exåa
);

32 
	}
}

34 
public
 
	$gëClõ¡Id
() {

35  (
L⁄g
)
	`gëAâribuã
("client-id");

36 
	}
}

38 
public
 
	$gëCxid
() {

39  (
L⁄g
)
	`gëAâribuã
("cxid");

40 
	}
}

42 
public
 
	$gëZxid
() {

43  (
L⁄g
)
	`gëAâribuã
("zxid");

44 
	}
}

46 
public
 
Såög
 
	$gëOp
() {

47  (
Såög
)
	`gëAâribuã
("operation");

48 
	}
}

50 
public
 
Såög
 
	$gëExåa
() {

51  (
Såög
)
	`gëAâribuã
("extra");

52 
	}
}

54 
public
 
Såög
 
	$toSåög
() {

55  
	`gëTime°amp
(Ë+ ":::£ssi⁄(0x" + 
L⁄g
.
	`toHexSåög
(
	`gëClõ¡Id
()Ë+ "Ëcxid(0x" + L⁄g.toHexSåög(
	`gëCxid
()Ë+ "Ëzxid(0x" + L⁄g.toHexSåög(
	`gëZxid
()Ë+ "Ë›(" + 
	`gëOp
(Ë+ "Ëexåa(" + 
	`gëExåa
() +")";

56 
	}
}

58 
public
 
Ty≥
 
	$gëTy≥
(Ë{  
LogE¡ry
.
Ty≥
.
TXN
; 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TxnLogSource.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
;

20 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gChecksum
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gTø˚F‹m©ãr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeHódî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

49 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

50 
imp‹t
 
	gjava
.
	gio
.
	gClo£abÀ
;

51 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

52 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

53 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

55 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

56 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

58 
public
 cœs†
	cTxnLogSour˚
 
im∂emíts
 
	mLogSour˚
 {

59 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
TxnLogSour˚
.
˛ass
);

61 
¥iv©e
 
LogSkùLi°
 
	mskùli°
 = 
nuŒ
;

62 
¥iv©e
 
föÆ
 
	mskùN
 = 10000;

64 
¥iv©e
 
Såög
 
	mfûe
 = 
nuŒ
;

65 
¥iv©e
 
	m°¨âime
 = 0;

66 
¥iv©e
 
	mídtime
 = 0;

67 
¥iv©e
 
	msize
 = 0;

69 
public
 
boﬁón
 
	$ovîœpsR™ge
(
°¨âime
, 
ídtime
) {

70  (
°¨âime
 <
this
.
ídtime
 &&Éndtime >=Åhis.starttime);

73 
public
 
	$size
(Ë{  
size
; 
	}
}

74 
public
 
	$gëSèπTime
(Ë{  
°¨âime
; 
	}
}

75 
public
 
	$gëEndTime
(Ë{  
ídtime
; 
	}
}

76 
public
 
LogSkùLi°
 
	$gëSkùLi°
(Ë{  
skùli°
; 
	}
}

78 
public
 
boﬁón
 
	$isTønß˘i⁄Fûe
(
Såög
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

79 
R™domAc˚ssFûeRódî
 
ªadî
 = 
√w
 
	`R™domAc˚ssFûeRódî
“ew 
	`Fûe
(
fûe
));

80 
Bö¨yI≈utArchive
 
logSåóm
 = 
√w
 
	`Bö¨yI≈utArchive
(
ªadî
);

81 
FûeHódî
 
fhdr
 = 
√w
 
	`FûeHódî
();

82 
fhdr
.
	`de£rülize
(
logSåóm
, "fileheader");

83 
ªadî
.
	`˛o£
();

85  
fhdr
.
	`gëMagic
(Ë=
FûeTxnLog
.
TXNLOG_MAGIC
;

86 
	}
}

88 
¥iv©e
 cœs†
	cTxnLogSour˚Iãøt‹
 
im∂emíts
 
	gLogIãøt‹
 {

89 
¥iv©e
 
LogE¡ry
 
	g√xt
 = 
nuŒ
;

90 
¥iv©e
 
	g°¨âime
 = 0;

91 
¥iv©e
 
	gídtime
 = 0;

92 
¥iv©e
 
TxnLogSour˚
 
	g§c
 = 
nuŒ
;

93 
¥iv©e
 
R™domAc˚ssFûeRódî
 
	gªadî
 = 
nuŒ
;

94 
¥iv©e
 
Bö¨yI≈utArchive
 
	glogSåóm
 = 
nuŒ
;

95 
¥iv©e
 
	gskù≥dAtSèπ
 = 0;

96 
¥iv©e
 
FûãrOp
 
	gfûãr
 = 
nuŒ
;

98 
public
 
TxnLogSour˚Iãøt‹
(
TxnLogSour˚
 
§c
, 
°¨âime
, 
ídtime
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

99 
this
(
§c
,
°¨âime
,
ídtime
,
nuŒ
);

102 
public
 
TxnLogSour˚Iãøt‹
(
TxnLogSour˚
 
§c
, 
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
	gIŒegÆArgumítEx˚±i⁄
, 
	gFûãrEx˚±i⁄
 {

103 
	gåy
 {

104 
	gthis
.
	g§c
 = 
§c
;

105 
	gthis
.
	g°¨âime
 = 
°¨âime
;

106 
	gthis
.
	gídtime
 = 
ídtime
;

107 
	gªadî
 = 
√w
 
R™domAc˚ssFûeRódî
“ew 
Fûe
(
§c
.
fûe
));

108 
	glogSåóm
 = 
√w
 
Bö¨yI≈utArchive
(
ªadî
);

109 
FûeHódî
 
	gfhdr
 = 
√w
 FileHeader();

110 
	gfhdr
.
de£rülize
(
logSåóm
, "fileheader");

111 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

112 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
("C™nŸ o≥¿å™ß˘i⁄Üog ("+
§c
.
fûe
+"Ë:" + 
e
);

115 
	gLogSkùLi°
.
M¨k
 
	g°¨t
 = 
§c
.
gëSkùLi°
().
födM¨kBef‹e
(
°¨âime
);

116 
	gåy
 {

117 
	gªadî
.
£ek
(
°¨t
.
gëByãs
());

118 
	gskù≥dAtSèπ
 = 
°¨t
.
gëE¡rõsSkù≥d
();

119 } 
ˇtch
 (
IOEx˚±i⁄
 
i€
) {

123 
	gthis
.
	gfûãr
 = 
fûãr
;

125 
LogE¡ry
 
	ge
;

126 (
	ge
 = 
ªadNextE¡ry
()Ë!
nuŒ
 && 
e
.
gëTime°amp
(Ë< 
ídtime
) {

127 i‡(
e
.
gëTime°amp
(Ë>
°¨âime
 && (
fûãr
 =
nuŒ
 || fûãr.
m©ches
(e)) ) {

128 
√xt
 = 
e
;

131 
	gskù≥dAtSèπ
++;

137 
public
 
size
(Ë
throws
 
	gIOEx˚±i⁄
 {

138 i‡(
	gthis
.
	gídtime
 >
§c
.
gëEndTime
()) {

139  
§c
.
size
(Ë- 
skù≥dAtSèπ
;

142 
	gpos
 = 
ªadî
.
gëPosôi⁄
();

143 
LogE¡ry
 
	ge
;

145 
	gLogSkùLi°
.
M¨k
 
	gœ°£g
 = 
§c
.
gëSkùLi°
().
födM¨kBef‹e
(
this
.
ídtime
);

146 
	gªadî
.
£ek
(
œ°£g
.
gëByãs
());

148 
	gcou¡
 = 
œ°£g
.
gëE¡rõsSkù≥d
(Ë- 
skù≥dAtSèπ
;

150 (
	ge
 = 
ªadNextE¡ry
()Ë!
nuŒ
) {

151 i‡(
e
.
gëTime°amp
(Ë> 
this
.
ídtime
) {

154 
	gcou¡
++;

156 
	gªadî
.
£ek
(
pos
);;

158  
	gcou¡
;

161 
¥iv©e
 
LogE¡ry
 
ªadNextE¡ry
() {

162 
LogE¡ry
 
	ge
 = 
nuŒ
;

163 
	gåy
 {

164 
	g¸cVÆue
;

165 
	gbyã
[] 
	gbyãs
;

166 
	gåy
 {

167 
	g¸cVÆue
 = 
logSåóm
.
ªadL⁄g
("crcvalue");

169 
	gbyãs
 = 
logSåóm
.
ªadBuf„r
("txnEntry");

170 } 
ˇtch
 (
EOFEx˚±i⁄
 
ex
) {

171  
	gnuŒ
;

174 i‡(
	gbyãs
.
	gÀngth
 == 0) {

175  
nuŒ
;

177 
Checksum
 
	g¸c
 = 
√w
 
AdÀr32
();

178 
	g¸c
.
upd©e
(
byãs
, 0, byãs.
Àngth
);

179 i‡(
	g¸cVÆue
 !
¸c
.
gëVÆue
()) {

180 
throw
 
√w
 
IOEx˚±i⁄
("CRC d€¢'àm©ch " + 
¸cVÆue
 +

181 " v†" + 
¸c
.
gëVÆue
());

183 
TxnHódî
 
	ghdr
 = 
√w
 TxnHeader();

184 
Rec‹d
 
	gr
 = 
SîülizeUtûs
.
de£rülizeTxn
(
byãs
, 
hdr
);

186 
	ghdr
.
gëTy≥
()) {

187 
	gOpCode
.
	g¸óãSessi⁄
: {

188 
e
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "createSession");

191 
	gOpCode
.
	g˛o£Sessi⁄
: {

192 
e
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "closeSession");

195 
	gOpCode
.
	g¸óã
:

196 i‡(
r
 !
nuŒ
) {

197 
Cª©eTxn
 
¸óã
 = (Cª©eTxn)
r
;

198 
Såög
 
	g∑th
 = 
¸óã
.
gëP©h
();

199 
	ge
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "¸óã", 
∑th
);

202 
	gOpCode
.
	g£tD©a
:

203 i‡(
r
 !
nuŒ
) {

204 
SëD©aTxn
 
£t
 = (SëD©aTxn)
r
;

205 
Såög
 
	g∑th
 = 
£t
.
gëP©h
();

206 
	ge
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "£tD©a", 
∑th
);

209 
	gOpCode
.
	g£tACL
:

210 i‡(
r
 !
nuŒ
) {

211 
SëACLTxn
 
£è˛
 = (SëACLTxn)
r
;

212 
Såög
 
	g∑th
 = 
£è˛
.
gëP©h
();

213 
	ge
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "£tACL", 
∑th
);

216 
	gOpCode
.
	gîr‹
:

217 i‡(
r
 !
nuŒ
) {

218 
Eº‹Txn
 
îr‹
 = (Eº‹Txn)
r
;

220 
	ge
 = 
√w
 
Tønß˘i⁄E¡ry
(
hdr
.
gëTime
(), hdr.
gëClõ¡Id
(), hdr.
gëCxid
(), hdr.
gëZxid
(), "îr‹", "Eº‹: " + 
îr‹
.
gëEº
());

224 
LOG
.
öfo
("Unknow¿›: " + 
hdr
.
gëTy≥
());

228 i‡(
	glogSåóm
.
ªadByã
("EOR") != 'B') {

229 
throw
 
√w
 
EOFEx˚±i⁄
("LastÅransaction wasÖartial.");

231 } 
ˇtch
 (
Ex˚±i⁄
 
ex
) {

232 
	gLOG
.
îr‹
("Eº‹ÑódögÅønß˘i⁄ from (" + 
§c
.
fûe
 + "Ë:" + 
e
);

233  
	gnuŒ
;

235  
	ge
;

238 
public
 
boﬁón
 
hasNext
() {

239  
	g√xt
 !
nuŒ
;

242 
public
 
LogE¡ry
 
√xt
(Ë
throws
 
	gNoSuchEÀmítEx˚±i⁄
 {

243 
LogE¡ry
 
	gªt
 = 
√xt
;

244 
LogE¡ry
 
	ge
 = 
ªadNextE¡ry
();

246 i‡(
	gfûãr
 !
nuŒ
) {

247 
åy
 {

248 
e
 !
nuŒ
 && !
fûãr
.
m©ches
(e)) {

249 
e
 = 
ªadNextE¡ry
();

251 } 
ˇtch
 (
FûãrEx˚±i⁄
 
„
) {

252 
throw
 
√w
 
NoSuchEÀmítEx˚±i⁄
(
„
.
toSåög
());

255 i‡(
	ge
 !
nuŒ
 && 
e
.
gëTime°amp
(Ë< 
ídtime
) {

256 
√xt
 = 
e
;

258 
	g√xt
 = 
nuŒ
;

260  
	gªt
;

263 
public
 
ªmove
(Ë
throws
 
	gUnsuµ‹ãdO≥øti⁄Ex˚±i⁄
 {

264 
throw
 
√w
 
Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("removeÇot supported for TxnÜogs");

267 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

268 
	gªadî
.
˛o£
();

272 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

273 
åy
 {

274  
	`ôî©‹
(
°¨âime
, 
ídtime
, 
nuŒ
);

275 } 
	`ˇtch
 (
FûãrEx˚±i⁄
 
„
) {

276 
	`as£π
(
Ál£
);

277  
nuŒ
;

279 
	}
}

281 
public
 
LogIãøt‹
 
	$ôî©‹
(
°¨âime
, 
ídtime
, 
FûãrOp
 
fûãr
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

283 i‡(
ídtime
 < 
°¨âime
) {

284 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("EndÅimê(" + 
ídtime
 + "Ëmu° bêgª©î o∏equÆÅÿ°¨âimê(" + 
°¨âime
 + ")");

287  
√w
 
	`TxnLogSour˚Iãøt‹
(
this
, 
°¨âime
, 
ídtime
, 
fûãr
);

288 
	}
}

290 
public
 
LogIãøt‹
 
	$ôî©‹
(Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

291  
	`ôî©‹
(
°¨âime
, 
ídtime
+1);

292 
	}
}

294 
public
 
	$TxnLogSour˚
(
Såög
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

295 
this
.
fûe
 = file;

297 
skùli°
 = 
√w
 
	`LogSkùLi°
();

299 
R™domAc˚ssFûeRódî
 
ªadî
 = 
√w
 
	`R™domAc˚ssFûeRódî
“ew 
	`Fûe
(
fûe
));

300 
åy
 {

301 
Bö¨yI≈utArchive
 
logSåóm
 = 
√w
 
	`Bö¨yI≈utArchive
(
ªadî
);

302 
FûeHódî
 
fhdr
 = 
√w
 
	`FûeHódî
();

303 
fhdr
.
	`de£rülize
(
logSåóm
, "fileheader");

305 
byã
[] 
byãs
 = 
nuŒ
;

306 
åue
) {

307 
œ°Fp
 = 
ªadî
.
	`gëPosôi⁄
();

309 
¸cVÆue
;

311 
åy
 {

312 
¸cVÆue
 = 
logSåóm
.
	`ªadL⁄g
("crcvalue");

313 
byãs
 = 
logSåóm
.
	`ªadBuf„r
("txnEntry");

314 } 
	`ˇtch
 (
EOFEx˚±i⁄
 
e
) {

318 i‡(
byãs
.
Àngth
 == 0) {

321 
Checksum
 
¸c
 = 
√w
 
	`AdÀr32
();

322 
¸c
.
	`upd©e
(
byãs
, 0, byãs.
Àngth
);

323 i‡(
¸cVÆue
 !
¸c
.
	`gëVÆue
()) {

324 
throw
 
√w
 
	`IOEx˚±i⁄
("CRC d€¢'àm©ch " + 
¸cVÆue
 +

325 " v†" + 
¸c
.
	`gëVÆue
());

327 i‡(
logSåóm
.
	`ªadByã
("EOR") != 'B') {

328 
throw
 
√w
 
	`EOFEx˚±i⁄
("LastÅransaction wasÖartial.");

330 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

331 
Rec‹d
 
r
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
byãs
, 
hdr
);

333 i‡(
°¨âime
 == 0) {

334 
°¨âime
 = 
hdr
.
	`gëTime
();

336 
ídtime
 = 
hdr
.
	`gëTime
();

338 i‡(
size
 % 
skùN
 == 0) {

339 
skùli°
.
	`addM¨k
(
hdr
.
	`gëTime
(), 
œ°Fp
, 
size
);

341 
size
++;

343 i‡(
byãs
 =
nuŒ
) {

344 
throw
 
√w
 
	`IOEx˚±i⁄
("NŸhögÑód from ("+
fûe
+")");

346 } 
föÆly
 {

347 
ªadî
.
	`˛o£
();

349 
	}
}

351 
public
 
Såög
 
	$toSåög
() {

352  "TxnLogSour˚(fûe=" + 
fûe
 + ", size=" + 
size
 + ", sèπ=" + 
°¨âime
 + ",Énd=" + 
ídtime
 +")";

353 
	}
}

355 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
, 
FûãrEx˚±i⁄
 {

356 
TxnLogSour˚
 
s
 = 
√w
 
	`TxnLogSour˚
(
¨gs
[0]);

357 
Sy°em
.
out
.
	`¥öén
(
s
);

359 
LogIãøt‹
 
ôî
;

361 i‡(
¨gs
.
Àngth
 == 3) {

362 
°¨âime
 = 
L⁄g
.
	`vÆueOf
(
¨gs
[1]);

363 
ídtime
 = 
L⁄g
.
	`vÆueOf
(
¨gs
[2]);

364 
FûãrOp
 
fo
 = 
√w
 
	`FûãrP¨£r
("(‹ (™d (> zxid 0x2f0bd6f5e0Ë(< zxid 0x2f0bd6f5e9)Ë(›î©i⁄ \"îr‹\"))").
	`∑r£
();

365 
Sy°em
.
out
.
	`¥öén
("fo: " + 
fo
);

366 
ôî
 = 
s
.
	`ôî©‹
(
°¨âime
, 
ídtime
, 
fo
);

368 
ôî
 = 
s
.
	`ôî©‹
();

370 
Sy°em
.
out
.
	`¥öén
(
ôî
);

371 
ôî
.
	`hasNext
()) {

372 
Sy°em
.
out
.
	`¥öén
(
ôî
.
	`√xt
());

374 
ôî
.
	`˛o£
();

375 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/AndOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cAndOp
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 
FûãrOp
 
f
 : 
subOps
) {

27 i‡(!
f
.
	`m©ches
(
íåy
)) {

28  
Ál£
;

31  
åue
;

33 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/Arg.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
.*;

22 
public
 
˛ass
 
	gArg
<
	gT
> {

23 
¥iv©e
 
ArgTy≥
 
	gty≥
;

24 
¥Ÿe˘ed
 
T
 
	gvÆue
;

26 
¥Ÿe˘ed
 
Arg
(
ArgTy≥
 
ty≥
) {

27 
	gthis
.
	gty≥
 = 
ty≥
;

30 
public
 
ArgTy≥
 
gëTy≥
(Ë{  
	gty≥
; }

31 
public
 
T
 
gëVÆue
(Ë{  
	gvÆue
; }

33 
public
 
Såög
 
toSåög
() {

34  "[" + 
	gty≥
 + ":" + 
	gvÆue
 + "]";

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/EqualsOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cEquÆsOp
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

27 
Obje˘
 
œ°
 = 
nuŒ
;

28 
Arg
 
a
 : 
¨gs
) {

29 
Obje˘
 
v
 = 
a
.
	`gëVÆue
();

30 i‡(
a
.
	`gëTy≥
(Ë=
FûãrOp
.
ArgTy≥
.
SYMBOL
) {

31 
Såög
 
key
 = (Såög)
a
.
	`gëVÆue
();

32 
v
 = 
íåy
.
	`gëAâribuã
(
key
);

35 i‡(
œ°
 !
nuŒ


36 && !
œ°
.
	`equÆs
(
v
)) {

37  
Ál£
;

39 
œ°
 = 
v
;

42  
åue
;

44 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/GreaterThanOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cGª©îTh™Op
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 
Arg
 
fú°
 = 
¨gs
.
	`gë
(0);

28 i‡(
fú°
 !
nuŒ
) {

29 
FûãrOp
.
ArgTy≥
 
ty≥
 = 
fú°
.
	`gëTy≥
();

30 i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
SYMBOL
) {

31 
Såög
 
key
 = (Såög)
fú°
.
	`gëVÆue
();

32 
Obje˘
 
v
 = 
íåy
.
	`gëAâribuã
(
key
);

33 i‡(
v
 
ö°™˚of
 
Såög
) {

34 
ty≥
 = 
FûãrOp
.
ArgTy≥
.
STRING
;

35 } i‡(
v
 
ö°™˚of
 
DoubÀ
 || v in°™˚o‡
L⁄g
 || v in°™˚o‡
I¡egî
 || v in°™˚o‡
Sh‹t
) {

36 
ty≥
 = 
FûãrOp
.
ArgTy≥
.
NUMBER
;

38 
throw
 
√w
 
	`FûãrEx˚±i⁄
("LessThanOp: Invalidárgument, firstárgumentÑesolvesÅoÇeitherá StringÇorá Number");

42 
Obje˘
 
œ°
 = 
nuŒ
;

43 
Arg
 
a
 : 
¨gs
) {

44 
Obje˘
 
v
 = 
a
.
	`gëVÆue
();

45 i‡(
a
.
	`gëTy≥
(Ë=
FûãrOp
.
ArgTy≥
.
SYMBOL
) {

46 
Såög
 
key
 = (Såög)
a
.
	`gëVÆue
();

47 
v
 = 
íåy
.
	`gëAâribuã
(
key
);

50 i‡(
œ°
 !
nuŒ
) {

51 i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
STRING
) {

52 i‡(((
Såög
)
œ°
).
	`com∑ªTo
((Såög)
v
) <= 0) {

53  
Ál£
;

55 } i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
NUMBER
) {

57 i‡(((
Numbî
)
œ°
).
	`l⁄gVÆue
(Ë<((Numbî)
v
).longValue()) {

58  
Ál£
;

62 
œ°
 = 
v
;

64  
åue
;

66  
åue
;

70 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/LessThanOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cLessTh™Op
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 
Arg
 
fú°
 = 
¨gs
.
	`gë
(0);

28 i‡(
fú°
 !
nuŒ
) {

29 
FûãrOp
.
ArgTy≥
 
ty≥
 = 
fú°
.
	`gëTy≥
();

30 i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
SYMBOL
) {

31 
Såög
 
key
 = (Såög)
fú°
.
	`gëVÆue
();

32 
Obje˘
 
v
 = 
íåy
.
	`gëAâribuã
(
key
);

33 i‡(
v
 
ö°™˚of
 
Såög
) {

34 
ty≥
 = 
FûãrOp
.
ArgTy≥
.
STRING
;

35 } i‡(
v
 
ö°™˚of
 
DoubÀ
 || v in°™˚o‡
L⁄g
 || v in°™˚o‡
I¡egî
 || v in°™˚o‡
Sh‹t
) {

36 
ty≥
 = 
FûãrOp
.
ArgTy≥
.
NUMBER
;

38 
throw
 
√w
 
	`FûãrEx˚±i⁄
("LessThanOp: Invalidárgument, firstárgumentÑesolvesÅoÇeitherá StringÇorá Number");

42 
Obje˘
 
œ°
 = 
nuŒ
;

43 
Arg
 
a
 : 
¨gs
) {

44 
Obje˘
 
v
 = 
a
.
	`gëVÆue
();

45 i‡(
a
.
	`gëTy≥
(Ë=
FûãrOp
.
ArgTy≥
.
SYMBOL
) {

46 
Såög
 
key
 = (Såög)
a
.
	`gëVÆue
();

47 
v
 = 
íåy
.
	`gëAâribuã
(
key
);

50 i‡(
œ°
 !
nuŒ
) {

51 i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
STRING
) {

52 i‡(((
Såög
)
œ°
).
	`com∑ªTo
((Såög)
v
) >= 0) {

53  
Ál£
;

55 } i‡(
ty≥
 =
FûãrOp
.
ArgTy≥
.
NUMBER
) {

56 i‡(((
Numbî
)
œ°
).
	`doubÀVÆue
(Ë>((Numbî)
v
).doubleValue()) {

57  
Ál£
;

61 
œ°
 = 
v
;

63  
åue
;

65  
åue
;

69 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/NotOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cNŸOp
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 i‡(
subOps
.
	`size
() != 1) {

27 
throw
 
√w
 
	`FûãrEx˚±i⁄
("Not operation can onlyÅake oneárgument");

29  !
subOps
.
	`gë
(0).
	`m©ches
(
íåy
);

31 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/NumberArg.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
.*;

22 
public
 
˛ass
 
NumbîArg
 
exãnds
 
	gArg
<
	gL⁄g
> {

23 
public
 
NumbîArg
(
L⁄g
 
vÆue
) {

24 
su≥r
(
ArgTy≥
.
NUMBER
);

25 
	gthis
.
	gvÆue
 = 
vÆue
;

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/OrOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cOrOp
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 
FûãrOp
 
f
 : 
subOps
) {

27 i‡(
f
.
	`m©ches
(
íåy
)) {

28  
åue
;

31  
Ál£
;

33 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/StringArg.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
.*;

22 
public
 
˛ass
 
SåögArg
 
exãnds
 
	gArg
<
	gSåög
> {

23 
public
 
SåögArg
(
Såög
 
vÆue
) {

24 
su≥r
(
ArgTy≥
.
STRING
);

25 
	gthis
.
	gvÆue
 = 
vÆue
;

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/SymbolArg.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
.*;

22 
public
 
˛ass
 
SymbﬁArg
 
exãnds
 
	gArg
<
	gSåög
> {

23 
public
 
SymbﬁArg
(
Såög
 
vÆue
) {

24 
su≥r
(
ArgTy≥
.
SYMBOL
);

25 
	gthis
.
	gvÆue
 = 
vÆue
;

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/XorOp.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gfûãr›s
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gLogE¡ry
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrOp
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	gFûãrEx˚±i⁄
;

24 
public
 cœs†
	cX‹Op
 
exãnds
 
	mFûãrOp
 {

25 
public
 
boﬁón
 
	$m©ches
(
LogE¡ry
 
íåy
Ë
throws
 
FûãrEx˚±i⁄
 {

26 
cou¡
 = 0;

27 
FûãrOp
 
f
 : 
subOps
) {

28 i‡(
f
.
	`m©ches
(
íåy
)) {

29 
cou¡
++;

30 i‡(
cou¡
 > 1) {

31  
Ál£
;

35 i‡(
cou¡
 == 1) {

36  
åue
;

38  
Ál£
;

40 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/FileLoader.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

29 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

30 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

31 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.*;

35 
public
 cœs†
	cFûeLﬂdî
 
exãnds
 
	mJs⁄SîvÀt


37 
¥iv©e
 
MîgedLogSour˚
 
	msour˚
 = 
nuŒ
;

39 
public
 
	$FûeLﬂdî
(
MîgedLogSour˚
 
§c
Ë
throws
 
Ex˚±i⁄
 {

40 
sour˚
 = 
§c
;

43 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄


45 
Såög
 
ouçut
 = "";

47 
Såög
 
fûe
 = 
ªque°
.
	`gëSåög
("path", "/");

48 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

49 
åy
 {

50 
this
.
sour˚
.
	`addSour˚
(
fûe
);

51 
o
.
	`put
("status", "OK");

53 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

54 
o
.
	`put
("status", "ERR");

55 
o
.
	`put
("îr‹", 
e
.
	`toSåög
());

58  
JSONVÆue
.
	`toJSONSåög
(
o
);

59 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/Fs.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

29 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

30 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

31 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

35 
public
 cœs†
	cFs
 
exãnds
 
	mJs⁄SîvÀt


37 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄


39 
Såög
 
ouçut
 = "";

40 
JSONAºay
 
fûñi°
 = 
√w
 
	`JSONAºay
();

42 
Fûe
 
ba£
 = 
√w
 
	`Fûe
(
ªque°
.
	`gëSåög
("path", "/"));

43 i‡(!
ba£
.
	`exi°s
(Ë|| !ba£.
	`isDúe˘‹y
()) {

44 
throw
 
√w
 
	`FûeNŸFoundEx˚±i⁄
("Couldn'àföd [" + 
ªque°
 + "]");

46 
Fûe
[] 
fûes
 = 
ba£
.
	`li°Fûes
();

47 
Aºays
.
	`s‹t
(
fûes
, 
√w
 
Com∑øt‹
<
Fûe
>() {

48 
public
 
	`com∑ª
(
Fûe
 
o1
, Fûê
o2
) {

49 i‡(
o1
.
	`isDúe˘‹y
(Ë!
o2
.isDirectory()) {

50 i‡(
o1
.
	`isDúe˘‹y
()) {

56  
o1
.
	`gëName
().
	`com∑ªToIgn‹eCa£
(
o2
.getName());

60 
Fûe
 
f
 : 
fûes
) {

61 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

62 
o
.
	`put
("fûe", 
f
.
	`gëName
());

63 
o
.
	`put
("ty≥", 
f
.
	`isDúe˘‹y
() ? "D" : "F");

64 
o
.
	`put
("∑th", 
f
.
	`gëC™⁄iˇlP©h
());

65 
fûñi°
.
	`add
(
o
);

67  
JSONVÆue
.
	`toJSONSåög
(
fûñi°
);

69 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/GraphData.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

32 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

33 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

34 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.*;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
public
 cœs†
	cGøphD©a
 
exãnds
 
	mJs⁄SîvÀt


42 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
GøphD©a
.
˛ass
);

43 
¥iv©e
 
föÆ
 
	mDEFAULT_PERIOD
 = 1000;

45 
¥iv©e
 
LogSour˚
 
	msour˚
 = 
nuŒ
;

47 
public
 
	$GøphD©a
(
LogSour˚
 
§c
Ë
throws
 
Ex˚±i⁄
 {

48 
this
.
sour˚
 = 
§c
;

51 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄
 {

54 
°¨âime
 = 0;

55 
ídtime
 = 0;

56 
≥riod
 = 0;

57 
FûãrOp
 
fo
 = 
nuŒ
;

59 
°¨âime
 = 
ªque°
.
	`gëNumbî
("start", 0);

60 
ídtime
 = 
ªque°
.
	`gëNumbî
("end", 0);

61 
≥riod
 = 
ªque°
.
	`gëNumbî
("period", 0);

62 
Såög
 
fûãr°r
 = 
ªque°
.
	`gëSåög
("filter", "");

64 i‡(
fûãr°r
.
	`Àngth
() > 0) {

65 
fo
 = 
√w
 
	`FûãrP¨£r
(
fûãr°r
).
	`∑r£
();

68 i‡(
°¨âime
 =0Ë{ sèπtimê
sour˚
.
	`gëSèπTime
(); }

69 i‡(
ídtime
 == 0) {

70 i‡(
≥riod
 > 0) {

71 
ídtime
 = 
°¨âime
 + 
≥riod
;

73 
ídtime
 = 
°¨âime
 + 
DEFAULT_PERIOD
;

77 i‡(
LOG
.
	`isDebugE«bÀd
()) {

78 
LOG
.
	`debug
("h™dÀ(°¨t" + 
°¨âime
 + ",Énd=" + 
ídtime
 + ",Öîiod=" + 
≥riod
 + ")");

81 
LogIãøt‹
 
ôî©‹
 = (
fo
 !
nuŒ
) ?

82 
sour˚
.
	`ôî©‹
(
°¨âime
, 
ídtime
, 
fo
) : source.iterator(starttime,Éndtime);

83  
√w
 
	`Js⁄Gíî©‹
(
ôî©‹
).
	`toSåög
();

84 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/JsonServlet.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

23 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtReque°
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

28 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

29 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

33 
ab°ø˘
 
public
 cœs†
	cJs⁄SîvÀt
 
exãnds
 
	mHâpSîvÀt
 {

34 
ab°ø˘
 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄
;

36 
¥Ÿe˘ed
 cœs†
	cJs⁄Reque°
 {

37 
¥iv©e
 
M≠
 
m≠
;

39 
public
 
	`Js⁄Reque°
(
SîvÀtReque°
 
ªque°
) {

40 
m≠
 = 
ªque°
.
	`gëP¨amëîM≠
();

43 
public
 
	`gëNumbî
(
Såög
 
«me
, 
deÁu…num
) {

44 
Såög
[] 
vÆs
 = (Såög[])
m≠
.
	`gë
(
«me
);

45 i‡(
vÆs
 =
nuŒ
 || vÆs.
Àngth
 == 0) {

46  
deÁu…num
;

49 
åy
 {

50  
L⁄g
.
	`vÆueOf
(
vÆs
[0]);

51 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

52  
deÁu…num
;

56 
public
 
Såög
 
	`gëSåög
(Såög 
«me
, Såög 
deÁu…°r
) {

57 
Såög
[] 
vÆs
 = (Såög[])
m≠
.
	`gë
(
«me
);

58 i‡(
vÆs
 =
nuŒ
 || vÆs.
Àngth
 == 0) {

59  
deÁu…°r
;

61  
vÆs
[0];

66 
¥Ÿe˘ed
 
	$doGë
(
HâpSîvÀtReque°
 
ªque°
, 
HâpSîvÀtRe•⁄£
 
ª•⁄£
Ë
throws
 
SîvÀtEx˚±i⁄
, 
IOEx˚±i⁄


68 
ª•⁄£
.
	`£tC⁄ã¡Ty≥
("text/plain;charset=utf-8");

69 
ª•⁄£
.
	`£tSètus
(
HâpSîvÀtRe•⁄£
.
SC_OK
);

71 
åy
 {

72 
Såög
 
ªq
 = 
ªque°
.
	`gëReque°URI
().
	`sub°rög
‘eque°.
	`gëSîvÀtP©h
().
	`Àngth
());

74 
ª•⁄£
.
	`gëWrôî
().
	`¥öén
(
	`h™dÀReque°
(
√w
 
	`Js⁄Reque°
(
ªque°
)));

75 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

76 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

77 
o
.
	`put
("îr‹", 
e
.
	`toSåög
());

78 
ª•⁄£
.
	`gëWrôî
().
	`¥öén
(
JSONVÆue
.
	`toJSONSåög
(
o
));

79 } 
	`ˇtch
 (
java
.
œng
.
OutOfMem‹yEº‹
 
oom
) {

80 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

81 
o
.
	`put
("error", "Out of memory. Perhaps you'veÑequestedÅoo manyÜogs. TryÇarrowing you're filter criteria.");

82 
ª•⁄£
.
	`gëWrôî
().
	`¥öén
(
JSONVÆue
.
	`toJSONSåög
(
o
));

84 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/NumEvents.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

29 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

30 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

31 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.*;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

41 
public
 cœs†
	cNumEvíts
 
exãnds
 
	mJs⁄SîvÀt


43 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
NumEvíts
.
˛ass
);

44 
¥iv©e
 
föÆ
 
	mDEFAULT_PERIOD
 = 1000;

46 
¥iv©e
 
LogSour˚
 
	msour˚
 = 
nuŒ
;

48 
public
 
	$NumEvíts
(
LogSour˚
 
§c
Ë
throws
 
Ex˚±i⁄
 {

49 
this
.
sour˚
 = 
§c
;

52 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄
 {

53 
Såög
 
ouçut
 = "";

55 
°¨âime
 = 0;

56 
ídtime
 = 0;

57 
≥riod
 = 0;

59 
°¨âime
 = 
ªque°
.
	`gëNumbî
("start", 0);

60 
ídtime
 = 
ªque°
.
	`gëNumbî
("end", 0);

61 
≥riod
 = 
ªque°
.
	`gëNumbî
("period", 0);

63 i‡(
°¨âime
 =0Ë{ sèπtimê
sour˚
.
	`gëSèπTime
(); }

64 i‡(
ídtime
 == 0) {

65 i‡(
≥riod
 > 0) {

66 
ídtime
 = 
°¨âime
 + 
≥riod
;

68 
ídtime
 = 
sour˚
.
	`gëEndTime
();

72 
LogIãøt‹
 
ôî
 = 
sour˚
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

73 
JSONObje˘
 
d©a
 = 
√w
 
	`JSONObje˘
();

74 
d©a
.
	`put
("°¨tTime", 
°¨âime
);

75 
d©a
.
	`put
("ídTime", 
ídtime
);

76 
size
 = 0;

78 
size
 = 
ôî
.
	`size
();

80 
d©a
.
	`put
("numE¡rõs", 
size
);

81 i‡(
LOG
.
	`isDebugE«bÀd
()) {

82 
LOG
.
	`debug
("h™dÀ(°¨t" + 
°¨âime
 + ",Énd=" + 
ídtime
 + ",ÇumE¡rõs=" + 
size
 +")");

84  
JSONVÆue
.
	`toJSONSåög
(
d©a
);

85 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/StaticContent.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀt
;

28 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

29 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

31 
public
 cœs†
	cSèticC⁄ã¡
 
exãnds
 
	mHâpSîvÀt
 {

32 
¥Ÿe˘ed
 
	$doGë
(
HâpSîvÀtReque°
 
ªque°
, 
HâpSîvÀtRe•⁄£
 
ª•⁄£
Ë
throws
 
SîvÀtEx˚±i⁄
, 
IOEx˚±i⁄


34 
Såög
 
∑th
 = 
ªque°
.
	`gëReque°URI
().
	`sub°rög
‘eque°.
	`gëSîvÀtP©h
().
	`Àngth
());

36 
I≈utSåóm
 
ªsour˚
 = 
CœssLﬂdî
.
	`gëSy°emResour˚AsSåóm
("‹g/≠ache/zookì≥r/gøph/ªsour˚s" + 
∑th
);

37 i‡(
ªsour˚
 =
nuŒ
) {

38 
ª•⁄£
.
	`gëWrôî
().
	`¥öén
(
∑th
 + "Çot found!");

39 
ª•⁄£
.
	`£tSètus
(
HâpSîvÀtRe•⁄£
.
SC_NOT_FOUND
);

43 
ªsour˚
.
	`avaûabÀ
() > 0) {

44 
ª•⁄£
.
	`gëWrôî
().
	`wrôe
(
ªsour˚
.
	`ªad
());

47 
ª•⁄£
.
	`£tSètus
(
HâpSîvÀtRe•⁄£
.
SC_OK
);

50 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/Throughput.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.
	g£rvÀts
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashM≠
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	ggøph
.*;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONAºay
;

34 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONObje˘
;

35 
imp‹t
 
	g‹g
.
	gjs⁄
.
	gsim∂e
.
	gJSONVÆue
;

38 
public
 cœs†
	cThroughput
 
exãnds
 
	mJs⁄SîvÀt


40 
¥iv©e
 
föÆ
 
	mMS_PER_SEC
 = 1000;

41 
¥iv©e
 
föÆ
 
	mMS_PER_MIN
 = 
MS_PER_SEC
*60;

42 
¥iv©e
 
föÆ
 
	mMS_PER_HOUR
 = 
MS_PER_MIN
*60;

44 
¥iv©e
 
LogSour˚
 
	msour˚
 = 
nuŒ
;

46 
public
 
	$Throughput
(
LogSour˚
 
§c
Ë
throws
 
Ex˚±i⁄
 {

47 
this
.
sour˚
 = 
§c
;

50 
public
 
Såög
 
	$h™dÀReque°
(
Js⁄Reque°
 
ªque°
Ë
throws
 
Ex˚±i⁄
 {

51 
°¨âime
 = 0;

52 
ídtime
 = 0;

53 
≥riod
 = 0;

54 
sˇÀ
 = 0;

56 
°¨âime
 = 
ªque°
.
	`gëNumbî
("start", 0);

57 
ídtime
 = 
ªque°
.
	`gëNumbî
("end", 0);

58 
≥riod
 = 
ªque°
.
	`gëNumbî
("period", 0);

61 i‡(
°¨âime
 =0Ë{ sèπtimê
sour˚
.
	`gëSèπTime
(); }

62 i‡(
ídtime
 == 0) {

63 i‡(
≥riod
 > 0) {

64 
ídtime
 = 
°¨âime
 + 
≥riod
;

66 
ídtime
 = 
sour˚
.
	`gëEndTime
();

70 
Såög
 
sˇÀ°r
 = 
ªque°
.
	`gëSåög
("scale", "minutes");

71 i‡(
sˇÀ°r
.
	`equÆs
("seconds")) {

72 
sˇÀ
 = 
MS_PER_SEC
;

73 } i‡(
sˇÀ°r
.
	`equÆs
("hours")) {

74 
sˇÀ
 = 
MS_PER_HOUR
;

76 
sˇÀ
 = 
MS_PER_MIN
;

79 
LogIãøt‹
 
ôî
 = 
sour˚
.
	`ôî©‹
(
°¨âime
, 
ídtime
);

81 
cuºít
 = 0;

82 
cuºítms
 = 0;

83 
HashSë
<
L⁄g
> 
zxids_ms
 = 
√w
 HashSet<Long>();

84 
zxidcou¡
 = 0;

86 
JSONAºay
 
evíts
 = 
√w
 
	`JSONAºay
();

87 
ôî
.
	`hasNext
()) {

88 
LogE¡ry
 
e
 = 
ôî
.
	`√xt
();

89 i‡(
e
.
	`gëTy≥
(Ë!
LogE¡ry
.
Ty≥
.
TXN
) {

93 
Tønß˘i⁄E¡ry
 
cxn
 = (Tønß˘i⁄E¡ry)
e
;

95 
ms
 = 
cxn
.
	`gëTime°amp
();

96 
ösˇÀ
 = 
ms
/
sˇÀ
;

98 i‡(
cuºítms
 !
ms
 && currentms != 0) {

99 
zxidcou¡
 +
zxids_ms
.
	`size
();

100 
zxids_ms
.
	`˛ór
();

103 i‡(
ösˇÀ
 !
cuºít
 && current != 0) {

104 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

105 
o
.
	`put
("time", 
cuºít
*
sˇÀ
);

106 
o
.
	`put
("cou¡", 
zxidcou¡
);

107 
evíts
.
	`add
(
o
);

108 
zxidcou¡
 = 0;

110 
cuºít
 = 
ösˇÀ
;

111 
cuºítms
 = 
ms
;

113 
zxids_ms
.
	`add
(
cxn
.
	`gëZxid
());

115 
JSONObje˘
 
o
 = 
√w
 
	`JSONObje˘
();

116 
o
.
	`put
("time", 
cuºít
*
sˇÀ
);

117 
o
.
	`put
("cou¡", 
zxidcou¡
);

118 
evíts
.
	`add
(
o
);

120 
ôî
.
	`˛o£
();

122  
JSONVÆue
.
	`toJSONSåög
(
evíts
);

123 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/RestMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gURISy¡axEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gURL
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gCªdítüls
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gEndpoöt
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gRe°Cfg
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gfûãrs
.
	gHTTPBasicAuth
;

33 
imp‹t
 
	gcom
.
	gsun
.
	ggrizzly
.
	gSSLC⁄fig
;

34 
imp‹t
 
	gcom
.
	gsun
.
	ggrizzly
.
	ghâp
.
	gembed
.
	gGrizzlyWebSîvî
;

35 
imp‹t
 
	gcom
.
	gsun
.
	ggrizzly
.
	ghâp
.
	g£rvÀt
.
	gSîvÀtAd≠ãr
;

36 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g•i
.
	gc⁄èöî
.
	g£rvÀt
.
	gSîvÀtC⁄èöî
;

41 
public
 cœs†
	cRe°Maö
 {

43 
¥iv©e
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Re°Maö
.
˛ass
);

45 
¥iv©e
 
GrizzlyWebSîvî
 
	mgws
;

46 
¥iv©e
 
Re°Cfg
 
	mcfg
;

48 
public
 
	$Re°Maö
(
Re°Cfg
 
cfg
) {

49 
this
.
cfg
 = cfg;

52 
public
 
	$°¨t
(Ë
throws
 
IOEx˚±i⁄
 {

53 
Sy°em
.
out
.
	`¥öén
("Starting grizzly ...");

55 
boﬁón
 
u£SSL
 = 
cfg
.
	`u£SSL
();

56 
gws
 = 
√w
 
	`GrizzlyWebSîvî
(
cfg
.
	`gëP‹t
(), "/tmp/23cxv45345/2131xc2/", 
u£SSL
);

59 
Endpoöt
 
e
 : 
cfg
.
	`gëEndpoöts
()) {

60 
ZooKì≥rSîvi˚
.
	`m≠C⁄ãxt
(
e
.
	`gëC⁄ãxt
(),É);

61 
gws
.
	`addGrizzlyAd≠ãr
(
	`¸óãJî£yAd≠ãr
(
e
), 
√w
 
Såög
[] {É

62 .
	`gëC⁄ãxt
() });

65 i‡(
u£SSL
) {

66 
Sy°em
.
out
.
	`¥öén
("Starting SSL ...");

67 
Såög
 
jks
 = 
cfg
.
	`gëJKS
("keys/rest.jks");

68 
Såög
 
jksPassw‹d
 = 
cfg
.
	`gëJKSPassw‹d
();

70 
SSLC⁄fig
 
s¶C⁄fig
 = 
√w
 
	`SSLC⁄fig
();

71 
URL
 
ªsour˚
 = 
	`gëCœss
().
	`gëCœssLﬂdî
().
	`gëResour˚
(
jks
);

72 i‡(
ªsour˚
 =
nuŒ
) {

73 
LOG
.
	`îr‹
("U«bÀÅÿfödÅhêkey°‹êfûe: " + 
jks
);

74 
Sy°em
.
	`exô
(2);

76 
åy
 {

77 
s¶C⁄fig
.
	`£tKeySt‹eFûe
(
√w
 
	`Fûe
(
ªsour˚
.
	`toURI
())

78 .
	`gëAbsﬁuãP©h
());

79 } 
	`ˇtch
 (
URISy¡axEx˚±i⁄
 
e1
) {

80 
LOG
.
	`îr‹
("U«bÀÅÿlﬂd key°‹e: " + 
jks
, 
e1
);

81 
Sy°em
.
	`exô
(2);

83 
s¶C⁄fig
.
	`£tKeySt‹ePass
(
jksPassw‹d
);

84 
gws
.
	`£tSSLC⁄fig
(
s¶C⁄fig
);

87 
gws
.
	`°¨t
();

88 
	}
}

90 
public
 
	$°›
() {

91 
gws
.
	`°›
();

92 
ZooKì≥rSîvi˚
.
	`˛o£AŒ
();

93 
	}
}

95 
¥iv©e
 
SîvÀtAd≠ãr
 
	$¸óãJî£yAd≠ãr
(
Endpoöt
 
e
) {

96 
SîvÀtAd≠ãr
 
jî£y
 = 
√w
 
	`SîvÀtAd≠ãr
();

98 
jî£y
.
	`£tSîvÀtIn°™˚
(
√w
 
	`SîvÀtC⁄èöî
());

99 
jî£y
.
	`addInôP¨amëî
("com.sun.jersey.config.property.packages",

101 
jî£y
.
	`£tC⁄ãxtP©h
(
e
.
	`gëC⁄ãxt
());

103 
Cªdítüls
 
c
 = Cªdítüls.
	`joö
(
e
.
	`gëCªdítüls
(), 
cfg


104 .
	`gëCªdítüls
());

105 i‡(!
c
.
	`isEm±y
()) {

106 
jî£y
.
	`addFûãr
(
√w
 
	`HTTPBasicAuth
(
c
), 
e
.
	`gëC⁄ãxt
()

107 + "-basic-auth", 
nuŒ
);

110  
jî£y
;

111 
	}
}

117 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
Ex˚±i⁄
 {

118 
Re°Cfg
 
cfg
 = 
√w
 
	`Re°Cfg
("rest.properties");

120 
föÆ
 
Re°Maö
 
maö
 = 
√w
 
	`Re°Maö
(
cfg
);

121 
maö
.
	`°¨t
();

123 
Ru¡ime
.
	`gëRu¡ime
().
	`addShutdownHook
(
√w
 
	`Thªad
() {

124 @
Ovîride


125 
public
 
	`run
() {

126 
maö
.
	`°›
();

127 
Sy°em
.
out
.
	`¥öén
("GotÉxitÑequest. Bye.");

131 
	`¥ötEndpoöts
(
cfg
);

132 
Sy°em
.
out
.
	`¥öén
("Server started.");

133 
	}
}

135 
¥iv©e
 
	$¥ötEndpoöts
(
Re°Cfg
 
cfg
) {

136 
p‹t
 = 
cfg
.
	`gëP‹t
();

138 
Endpoöt
 
e
 : 
cfg
.
	`gëEndpoöts
()) {

140 
Såög
 
c⁄ãxt
 = 
e
.
	`gëC⁄ãxt
();

141 i‡(
c⁄ãxt
.
	`ch¨At
(c⁄ãxt.
	`Àngth
() - 1) != '/') {

142 
c⁄ãxt
 += "/";

145 
Sy°em
.
out
.
	`¥öén
(
Såög
.
	`f‹m©
(

147 
c⁄ãxt
, 
p‹t
, context));

149 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/ZooKeeperService.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gTimî
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gTimîTask
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gTªeSë
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gEndpoöt
;

41 
public
 cœs†
	cZooKì≥rSîvi˚
 {

43 
¥iv©e
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSîvi˚
.
˛ass
);

46 
¥iv©e
 
	mM≠
<
	mSåög
, 
	mEndpoöt
> 
	mc⁄ãxtM≠
 = 
√w
 
HashM≠
<
Såög
, Endpoint>();

49 
¥iv©e
 
	mM≠
<
	mSåög
, 
	mZooKì≥r
> 
	mzkM≠
 = 
√w
 
HashM≠
<
Såög
, ZooKeeper>();

52 
¥iv©e
 
	mM≠
<
	mSåög
, 
	mSessi⁄TimîTask
> 
	mzkSessi⁄Timîs
 = 
√w
 
HashM≠
<
Såög
, SessionTimerTask>();

53 
¥iv©e
 
Timî
 
	mtimî
 = 
√w
 Timer();

56 
¥iv©e
 ˛as†
	cMyW©chî
 
im∂emíts
 
	mW©chî
 {

57 
föÆ
 
Såög
 
	mc⁄ãxtP©h
;

60 
public
 
MyW©chî
(
Såög
 
c⁄ãxtP©h
) {

61 
	mthis
.
	mc⁄ãxtP©h
 = 
c⁄ãxtP©h
;

68 
synchr⁄ized
 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

69 i‡(
	mevít
.
gëSèã
(Ë=
Kì≥rSèã
.
Expúed
) {

70 
˛o£
(
c⁄ãxtP©h
);

76 
¥iv©e
 ˛as†
	cSessi⁄TimîTask
 
exãnds
 
	gTimîTask
 {

78 
¥iv©e
 
	gdñay
;

79 
¥iv©e
 
Såög
 
	gc⁄ãxtP©h
, 
	g£ssi⁄
;

80 
¥iv©e
 
Timî
 
	gtimî
;

82 
public
 
Sessi⁄TimîTask
(
dñayInSec⁄ds
, 
Såög
 
£ssi⁄
,

83 
Såög
 
c⁄ãxtP©h
, 
Timî
 
timî
) {

84 
	gdñay
 = 
dñayInSec⁄ds
 * 1000;

85 
	gthis
.
	gc⁄ãxtP©h
 = 
c⁄ãxtP©h
;

86 
	gthis
.
	g£ssi⁄
 = 
£ssi⁄
;

87 
	gthis
.
	gtimî
 = 
timî
;

88 
ª£t
();

91 
public
 
Sessi⁄TimîTask
(Sessi⁄TimîTask 
t
) {

92 
this
(
t
.
dñay
 / 1000,Å.
£ssi⁄
,Å.
c⁄ãxtP©h
,Å.
timî
);

95 @
Ovîride


96 
public
 
run
() {

97 i‡(
	gLOG
.
isInfoE«bÀd
()) {

98 
	gLOG
.
öfo
(
Såög
.
f‹m©
("Session '%s'Éxpiredáfter "

99 + "'%d' mûli£c⁄ds.", 
£ssi⁄
, 
dñay
));

101 
	gZooKì≥rSîvi˚
.
˛o£
(
c⁄ãxtP©h
, 
£ssi⁄
);

104 
public
 
ª£t
() {

105 
	gtimî
.
scheduÀ
(
this
, 
dñay
);

115 
synchr⁄ized
 
public
 
	$m≠C⁄ãxt
(
Såög
 
c⁄ãxtP©h
, 
Endpoöt
 
e
) {

116 
c⁄ãxtM≠
.
	`put
(
c⁄ãxtP©h
, 
e
);

117 
	}
}

122 
synchr⁄ized
 
public
 
	$ª£tTimî
(
Såög
 
c⁄ãxtP©h
,

123 
Såög
 
£ssi⁄
) {

124 i‡(
£ssi⁄
 !
nuŒ
) {

125 
Såög
 
uri
 = 
	`c⁄ˇt
(
c⁄ãxtP©h
, 
£ssi⁄
);

127 
Sessi⁄TimîTask
 
t
 = 
zkSessi⁄Timîs
.
	`ªmove
(
uri
);

128 
t
.
	`ˇn˚l
();

130 
zkSessi⁄Timîs
.
	`put
(
uri
, 
√w
 
	`Sessi⁄TimîTask
(
t
));

132 
	}
}

137 
public
 
	$˛o£
(
Såög
 
c⁄ãxtP©h
) {

138 
	`˛o£
(
c⁄ãxtP©h
, 
nuŒ
);

139 
	}
}

144 
synchr⁄ized
 
public
 
	$˛o£
(
Såög
 
c⁄ãxtP©h
, Såög 
£ssi⁄
) {

145 
Såög
 
uri
 = 
	`c⁄ˇt
(
c⁄ãxtP©h
, 
£ssi⁄
);

147 
TimîTask
 
t
 = 
zkSessi⁄Timîs
.
	`ªmove
(
uri
);

148 i‡(
t
 !
nuŒ
) {

149 
t
.
	`ˇn˚l
();

152 
ZooKì≥r
 
zk
 = 
zkM≠
.
	`ªmove
(
uri
);

153 i‡(
zk
 =
nuŒ
) {

156 
åy
 {

157 
zk
.
	`˛o£
();

158 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

159 
LOG
.
	`îr‹
("I¡îru±ed whûê˛osög ZooKì≥∏c⁄√˘i⁄.", 
e
);

161 
	}
}

166 
synchr⁄ized
 
public
 
	$˛o£AŒ
() {

167 
Së
<
Såög
> 
£ssi⁄s
 = 
√w
 
TªeSë
<Såög>(
zkM≠
.
	`keySë
());

168 
Såög
 
key
 : 
£ssi⁄s
) {

169 
	`˛o£
(
key
);

171 
	}
}

176 
synchr⁄ized
 
public
 
boﬁón
 
	$isC⁄√˘ed
(
Såög
 
c⁄ãxtP©h
,

177 
Såög
 
£ssi⁄
) {

178  
zkM≠
.
	`c⁄èösKey
(
	`c⁄ˇt
(
c⁄ãxtP©h
, 
£ssi⁄
));

179 
	}
}

184 
public
 
ZooKì≥r
 
	$gëClõ¡
(
Såög
 
c⁄ãxtP©h
Ë
throws
 
IOEx˚±i⁄
 {

185  
	`gëClõ¡
(
c⁄ãxtP©h
, 
nuŒ
);

186 
	}
}

193 
public
 
ZooKì≥r
 
	$gëClõ¡
(
Såög
 
c⁄ãxtP©h
, Såög 
£ssi⁄
)

194 
throws
 
IOEx˚±i⁄
 {

195  
	`gëClõ¡
(
c⁄ãxtP©h
, 
£ssi⁄
, 5);

196 
	}
}

204 
synchr⁄ized
 
public
 
ZooKì≥r
 
	$gëClõ¡
(
Såög
 
c⁄ãxtP©h
,

205 
Såög
 
£ssi⁄
, 
expúeTime
Ë
throws
 
IOEx˚±i⁄
 {

206 
föÆ
 
Såög
 
c⁄√˘i⁄Id
 = 
	`c⁄ˇt
(
c⁄ãxtP©h
, 
£ssi⁄
);

208 
ZooKì≥r
 
zk
 = 
zkM≠
.
	`gë
(
c⁄√˘i⁄Id
);

209 i‡(
zk
 =
nuŒ
) {

211 i‡(
LOG
.
	`isInfoE«bÀd
()) {

212 
LOG
.
	`öfo
(
Såög
.
	`f‹m©
("creatingÇew "

213 + "c⁄√˘i⁄ f‹ : '%s'", 
c⁄√˘i⁄Id
));

215 
Endpoöt
 
e
 = 
c⁄ãxtM≠
.
	`gë
(
c⁄ãxtP©h
);

216 
zk
 = 
√w
 
	`ZooKì≥r
(
e
.
	`gëHo°P‹t
(), 30000,Çew 
	`MyW©chî
(

217 
c⁄√˘i⁄Id
));

219 
M≠
.
E¡ry
<
Såög
, Såög> 
p
 : 
e
.
	`gëZooKì≥rAuthInfo
().
	`íåySë
()) {

220 
zk
.
	`addAuthInfo
("dige°", 
Såög
.
	`f‹m©
("%s:%s", 
p
.
	`gëKey
(),

221 
p
.
	`gëVÆue
()).
	`gëByãs
());

224 
zkM≠
.
	`put
(
c⁄√˘i⁄Id
, 
zk
);

227 i‡(
£ssi⁄
 !
nuŒ
) {

228 
zkSessi⁄Timîs
.
	`put
(
c⁄√˘i⁄Id
, 
√w
 
	`Sessi⁄TimîTask
(

229 
expúeTime
, 
£ssi⁄
, 
c⁄ãxtP©h
, 
timî
));

232  
zk
;

233 
	}
}

235 
¥iv©e
 
Såög
 
	$c⁄ˇt
(
Såög
 
c⁄ãxtP©h
, Såög 
£ssi⁄
) {

236 i‡(
£ssi⁄
 !
nuŒ
) {

237  
Såög
.
	`f‹m©
("%s@%s", 
c⁄ãxtP©h
, 
£ssi⁄
);

239  
c⁄ãxtP©h
;

240 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/Credentials.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
public
 
˛ass
 
Cªdítüls
 
exãnds
 
	gHashM≠
<
	gSåög
, String> {

25 
public
 
Cªdítüls
 
joö
(Cªdítül†
a
, Cªdítül†
b
) {

26 
Cªdítüls
 
	gªsu…
 = 
√w
 Credentials();

27 
	gªsu…
.
putAŒ
(
a
);

28 
	gªsu…
.
putAŒ
(
b
);

29  
	gªsu…
;

32 
public
 
Cªdítüls
() {

33 
su≥r
();

36 
public
 
Cªdítüls
(
Såög
 
¸edítüls
) {

37 
su≥r
();

39 i‡(!
	g¸edítüls
.
åim
().
equÆs
("")) {

40 
	gSåög
[] 
	g∑πs
 = 
¸edítüls
.
•lô
(",");

41 
Såög
 
	gp
 : 
∑πs
) {

42 
Såög
[] 
u£rPass
 = 
p
.
•lô
(":");

43 
put
(
u£rPass
[0], userPass[1]);

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/Endpoint.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
;

21 
public
 cœs†
	cEndpoöt
 {

23 
¥iv©e
 
Såög
 
	mc⁄ãxt
;

24 
¥iv©e
 
Ho°P‹tSë
 
	mho°P‹t
;

25 
¥iv©e
 
Cªdítüls
 
	m¸edítüls
;

26 
¥iv©e
 
Cªdítüls
 
	mzookì≥rAuth
;

28 
public
 
	$Endpoöt
(
Såög
 
c⁄ãxt
, Såög 
ho°P‹tLi°
) {

29 
this
.
c⁄ãxt
 = context;

30 
this
.
ho°P‹t
 = 
√w
 
	`Ho°P‹tSë
(
ho°P‹tLi°
);

33 
public
 
Såög
 
	$gëC⁄ãxt
() {

34  
c⁄ãxt
;

35 
	}
}

37 
public
 
Såög
 
	$gëHo°P‹t
() {

38  
ho°P‹t
.
	`toSåög
();

39 
	}
}

41 
public
 
Cªdítüls
 
	$gëCªdítüls
() {

42  
¸edítüls
;

43 
	}
}

45 
public
 
	$£tCªdítüls
(
Såög
 
c
) {

46 
this
.
¸edítüls
 = 
√w
 
	`Cªdítüls
(
c
);

47 
	}
}

49 
public
 
	$£tZooKì≥rAuthInfo
(
Såög
 
dige°
) {

50 
zookì≥rAuth
 = 
√w
 
	`Cªdítüls
(
dige°
);

51 
	}
}

53 
public
 
föÆ
 
Cªdítüls
 
	$gëZooKì≥rAuthInfo
() {

54  
zookì≥rAuth
;

55 
	}
}

57 @
Ovîride


58 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
o
) {

59 
Endpoöt
 
e
 = (EndpoötË
o
;

60  
c⁄ãxt
.
	`equÆs
(
e
.context);

61 
	}
}

63 @
Ovîride


64 
public
 
	$hashCode
() {

65  
c⁄ãxt
.
	`hashCode
();

66 
	}
}

68 @
Ovîride


69 
public
 
Såög
 
	$toSåög
() {

70  
Såög
.
	`f‹m©
("<Endpoöà%†%s>", 
c⁄ãxt
, 
ho°P‹t
.
	`toSåög
());

71 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/HostPort.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
;

21 
public
 cœs†
	cHo°P‹t
 {

23 
¥iv©e
 
Såög
 
	mho°
;

24 
¥iv©e
 
	mp‹t
;

26 
public
 
	$Ho°P‹t
(
Såög
 
ho°P‹t
) {

27 
Såög
[] 
∑πs
 = 
ho°P‹t
.
	`•lô
(":");

28 
ho°
 = 
∑πs
[0];

29 
p‹t
 = 
I¡egî
.
	`∑r£I¡
(
∑πs
[1]);

32 
public
 
Såög
 
	$gëHo°
() {

33  
ho°
;

34 
	}
}

36 
public
 
	$gëP‹t
() {

37  
p‹t
;

38 
	}
}

40 @
Ovîride


41 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
o
) {

42 
Ho°P‹t
 
p
 = (Ho°P‹tË
o
;

43  
ho°
.
	`equÆs
(
p
.ho°Ë&& 
p‹t
 ==Ö.port;

44 
	}
}

46 @
Ovîride


47 
public
 
	$hashCode
() {

48  
Såög
.
	`f‹m©
("%s:%d", 
ho°
, 
p‹t
).
	`hashCode
();

49 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/HostPortSet.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

24 
public
 cœs†
	cHo°P‹tSë
 {

26 
¥iv©e
 
	mSë
<
	mHo°P‹t
> 
	mho°P‹tSë
 = 
√w
 
HashSë
<
Ho°P‹t
>();

27 
¥iv©e
 
Såög
 
	m‹igöÆ
;

29 
public
 
	$Ho°P‹tSë
(
Såög
 
ho°P‹tLi°
) {

30 
‹igöÆ
 = 
ho°P‹tLi°
;

32 
chroŸSèπ
 = 
ho°P‹tLi°
.
	`ödexOf
('/');

33 
Såög
 
ho°P‹tPaús
;

34 i‡(
chroŸSèπ
 != -1) {

35 
ho°P‹tPaús
 = 
ho°P‹tLi°
.
	`sub°rög
(0, 
chroŸSèπ
);

37 
ho°P‹tPaús
 = 
ho°P‹tLi°
;

40 
Såög
[] 
∑πs
 = 
ho°P‹tPaús
.
	`•lô
(",");

41 
Såög
 
p
 : 
∑πs
) {

42 
ho°P‹tSë
.
	`add
(
√w
 
	`Ho°P‹t
(
p
));

46 @
Ovîride


47 
public
 
Såög
 
	$toSåög
() {

48  
‹igöÆ
;

49 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/RestCfg.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

27 
public
 cœs†
	cRe°Cfg
 {

29 
¥iv©e
 
Pr›îtõs
 
	mcfg
 = 
√w
 Properties();

31 
¥iv©e
 
	mSë
<
	mEndpoöt
> 
	mídpoöts
 = 
√w
 
HashSë
<
Endpoöt
>();

32 
¥iv©e
 
Cªdítüls
 
	m¸edítüls
 = 
√w
 Credentials();

34 
public
 
	$Re°Cfg
(
Såög
 
ªsour˚
Ë
throws
 
IOEx˚±i⁄
 {

35 
	`this
(
Re°Cfg
.
˛ass
.
	`gëCœssLﬂdî
().
	`gëResour˚AsSåóm
(
ªsour˚
));

38 
public
 
	$Re°Cfg
(
I≈utSåóm
 
io
Ë
throws
 
IOEx˚±i⁄
 {

39 
cfg
.
	`lﬂd
(
io
);

40 
	`exåa˘Endpoöts
();

41 
	`exåa˘Cªdítüls
();

42 
	}
}

44 
¥iv©e
 
	$exåa˘Cªdítüls
() {

45 i‡(
cfg
.
	`c⁄èösKey
("rest.http.auth")) {

46 
¸edítüls
 = 
√w
 
	`Cªdítüls
(
cfg
.
	`gëPr›îty
("rest.http.auth", ""));

48 
	}
}

50 
¥iv©e
 
	$exåa˘Endpoöts
() {

51 
cou¡
 = 1;

52 
åue
) {

53 
Såög
 
e
 = 
cfg
.
	`gëPr›îty
(

54 
Såög
.
	`f‹m©
("ª°.ídpoöt.%d", 
cou¡
), 
nuŒ
);

55 i‡(
e
 =
nuŒ
) {

59 
Såög
[] 
∑πs
 = 
e
.
	`•lô
(";");

60 i‡(
∑πs
.
Àngth
 != 2) {

61 
cou¡
++;

64 
Endpoöt
 
poöt
 = 
√w
 
	`Endpoöt
(
∑πs
[0],Öarts[1]);

66 
Såög
 
c
 = 
cfg
.
	`gëPr›îty
(Såög.
	`f‹m©
(

67 "ª°.ídpoöt.%d.hâp.auth", 
cou¡
), "");

68 
poöt
.
	`£tCªdítüls
(
c
);

70 
Såög
 
dige°
 = 
cfg
.
	`gëPr›îty
(Såög.
	`f‹m©
(

71 "ª°.ídpoöt.%d.zk.dige°", 
cou¡
), "");

72 
poöt
.
	`£tZooKì≥rAuthInfo
(
dige°
);

74 
ídpoöts
.
	`add
(
poöt
);

75 
cou¡
++;

77 
	}
}

79 
public
 
	$gëP‹t
() {

80  
I¡egî
.
	`∑r£I¡
(
cfg
.
	`gëPr›îty
("rest.port", "9998"));

81 
	}
}

83 
public
 
boﬁón
 
	$u£SSL
() {

84  
Boﬁón
.
	`vÆueOf
(
cfg
.
	`gëPr›îty
("rest.ssl", "false"));

85 
	}
}

87 
public
 
föÆ
 
	gSë
<
	gEndpoöt
> 
	$gëEndpoöts
() {

88  
ídpoöts
;

89 
	}
}

91 
public
 
föÆ
 
Cªdítüls
 
	$gëCªdítüls
() {

92  
¸edítüls
;

93 
	}
}

95 
public
 
Såög
 
	$gëJKS
() {

96  
cfg
.
	`gëPr›îty
("rest.ssl.jks");

97 
	}
}

99 
public
 
Såög
 
	$gëJKS
(
Såög
 
def
) {

100  
cfg
.
	`gëPr›îty
("ª°.s¶.jks", 
def
);

101 
	}
}

103 
public
 
Såög
 
	$gëJKSPassw‹d
() {

104  
cfg
.
	`gëPr›îty
("rest.ssl.jks.pass");

105 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/filters/HTTPBasicAuth.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gfûãrs
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãr
;

24 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãrChaö
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gFûãrC⁄fig
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtEx˚±i⁄
;

27 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtReque°
;

28 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	gSîvÀtRe•⁄£
;

29 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

30 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtRe•⁄£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gCªdítüls
;

34 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	gc‹e
.
	gutû
.
	gBa£64
;

36 
public
 cœs†
	cHTTPBasicAuth
 
im∂emíts
 
	mFûãr
 {

38 
¥iv©e
 
Cªdítüls
 
	m¸edítüls
;

40 
public
 
	$HTTPBasicAuth
(
Cªdítüls
 
c
) {

41 
¸edítüls
 = 
c
;

44 @
Ovîride


45 
public
 
	$doFûãr
(
SîvÀtReque°
 
ªq0
, 
SîvÀtRe•⁄£
 
ª•0
,

46 
FûãrChaö
 
chaö
Ë
throws
 
IOEx˚±i⁄
, 
SîvÀtEx˚±i⁄
 {

48 
HâpSîvÀtReque°
 
ªque°
 = (HâpSîvÀtReque°Ë
ªq0
;

49 
HâpSîvÀtRe•⁄£
 
ª•⁄£
 = (HâpSîvÀtRe•⁄£Ë
ª•0
;

51 
Såög
 
auth‹iz©i⁄
 = 
ªque°
.
	`gëHódî
("Authorization");

52 i‡(
auth‹iz©i⁄
 !
nuŒ
) {

53 
Såög
 
c
[] = 
	`∑r£Auth‹iz©i⁄
(
auth‹iz©i⁄
);

54 i‡(
c
 !
nuŒ
 && 
¸edítüls
.
	`c⁄èösKey
(c[0])

55 && 
¸edítüls
.
	`gë
(
c
[0]).
	`equÆs
(c[1])) {

56 
chaö
.
	`doFûãr
(
ªque°
, 
ª•⁄£
);

61 
ª•⁄£
.
	`£tHódî
("WWW-Authenticate", "BasicÑealm=\"Restricted\"");

62 
ª•⁄£
.
	`£ndEº‹
(401);

63 
	}
}

65 
¥iv©e
 
	gSåög
[] 
	$∑r£Auth‹iz©i⁄
(
Såög
 
auth‹iz©i⁄
) {

66 
Såög
 
∑πs
[] = 
auth‹iz©i⁄
.
	`•lô
(" ");

67 i‡(
∑πs
.
Àngth
 =2 &&Ö¨ts[0].
	`equÆsIgn‹eCa£
("Basic")) {

68 
Såög
 
u£rPass
 = 
Ba£64
.
	`ba£64Decode
(
∑πs
[1]);

70 
p
 = 
u£rPass
.
	`ödexOf
(":");

71 i‡(
p
 != -1) {

72  
√w
 
Såög
[] { 
u£rPass
.
	`sub°rög
(0, 
p
),

73 
u£rPass
.
	`sub°rög
(
p
 + 1) };

76  
nuŒ
;

77 
	}
}

79 @
Ovîride


80 
public
 
	$öô
(
FûãrC⁄fig
 
¨g0
Ë
throws
 
SîvÀtEx˚±i⁄
 {

81 
	}
}

83 @
Ovîride


84 
public
 
	$de°roy
() {

85 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZChildren.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlEÀmít
;

25 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlEÀmítWøµî
;

26 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

34 @
XmlRoŸEÀmít
(
«me
="child")

35 
public
 cœs†
	cZChûdªn
 {

36 
public
 
Såög
 
∑th
;

37 
public
 
Såög
 
	muri
;

39 
public
 
Såög
 
	mchûd_uri_ãm∂©e
;

40 @
XmlEÀmítWøµî
(
«me
="children")

41 @
XmlEÀmít
(
«me
="child")

42 
public
 
Li°
<
Såög
> 
chûdªn
;

44 
public
 
	$ZChûdªn
() {

46 
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

49 
public
 
	`ZChûdªn
(
Såög
 
∑th
, Såög 
uri
, Såög 
chûd_uri_ãm∂©e
,

50 
Li°
<
Såög
> 
chûdªn
)

52 
this
.
∑th
 =Öath;

53 
this
.
uri
 = uri;

54 
this
.
chûd_uri_ãm∂©e
 = child_uri_template;

55 i‡(
chûdªn
 !
nuŒ
) {

56 
this
.
chûdªn
 = children;

58 
this
.
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

60 
	}
}

62 @
Ovîride


63 
public
 
	$hashCode
() {

64  
∑th
.
	`hashCode
();

65 
	}
}

67 @
Ovîride


68 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

69 i‡(!(
obj
 
ö°™˚of
 
ZChûdªn
)) {

70  
Ál£
;

72 
ZChûdªn
 
o
 = (ZChûdªnË
obj
;

73  
∑th
.
	`equÆs
(
o
.∑thË&& 
chûdªn
.equals(o.children);

74 
	}
}

76 @
Ovîride


77 
public
 
Såög
 
	$toSåög
() {

78  "ZChûdªn(" + 
∑th
 + "," + 
chûdªn
 + ")";

79 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZChildrenJSON.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

32 @
XmlRoŸEÀmít
(
«me
="child")

33 
public
 cœs†
	cZChûdªnJSON
 {

34 
public
 
Såög
 
∑th
;

35 
public
 
Såög
 
	muri
;

37 
public
 
Såög
 
	mchûd_uri_ãm∂©e
;

38 
public
 
	mLi°
<
	mSåög
> 
	mchûdªn
;

40 
public
 
	$ZChûdªnJSON
() {

42 
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

45 
public
 
	`ZChûdªnJSON
(
Såög
 
∑th
, Såög 
uri
, Såög 
chûd_uri_ãm∂©e
,

46 
Li°
<
Såög
> 
chûdªn
)

48 
this
.
∑th
 =Öath;

49 
this
.
uri
 = uri;

50 
this
.
chûd_uri_ãm∂©e
 = child_uri_template;

51 i‡(
chûdªn
 !
nuŒ
) {

52 
this
.
chûdªn
 = children;

54 
this
.
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

56 
	}
}

58 @
Ovîride


59 
public
 
	$hashCode
() {

60  
∑th
.
	`hashCode
();

61 
	}
}

63 @
Ovîride


64 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

65 i‡(!(
obj
 
ö°™˚of
 
ZChûdªnJSON
)) {

66  
Ál£
;

68 
ZChûdªnJSON
 
o
 = (ZChûdªnJSONË
obj
;

69  
∑th
.
	`equÆs
(
o
.∑thË&& 
chûdªn
.equals(o.children);

70 
	}
}

72 @
Ovîride


73 
public
 
Såög
 
	$toSåög
() {

74  "ZChûdªnJSON(" + 
∑th
 + "," + 
chûdªn
 + ")";

75 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZError.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

27 @
XmlRoŸEÀmít
(
«me
="error")

28 
public
 cœs†
	cZEº‹
 {

29 
public
 
Såög
 
ªque°
;

30 
public
 
Såög
 
	mmesßge
;

32 
public
 
	$ZEº‹
(){

36 
public
 
	$ZEº‹
(
Såög
 
ªque°
, Såög 
mesßge
) {

37 
this
.
ªque°
 =Ñequest;

38 
this
.
mesßge
 = message;

39 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZPath.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

27 @
XmlRoŸEÀmít
(
«me
="path")

28 
public
 cœs†
	cZP©h
 {

29 
public
 
Såög
 
∑th
;

30 
public
 
Såög
 
	muri
;

32 
public
 
	$ZP©h
(){

36 
public
 
	$ZP©h
(
Såög
 
∑th
) {

37 
	`this
(
∑th
, 
nuŒ
);

38 
	}
}

40 
public
 
	$ZP©h
(
Såög
 
∑th
, Såög 
uri
) {

41 
this
.
∑th
 =Öath;

42 
this
.
uri
 = uri;

43 
	}
}

45 @
Ovîride


46 
public
 
	$hashCode
() {

47  
∑th
.
	`hashCode
();

48 
	}
}

50 @
Ovîride


51 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

52 i‡(!(
obj
 
ö°™˚of
 
ZP©h
)) {

53  
Ál£
;

55 
ZP©h
 
o
 = (ZP©hË
obj
;

56  
∑th
.
	`equÆs
(
o
.path);

57 
	}
}

59 @
Ovîride


60 
public
 
Såög
 
	$toSåög
() {

61  "ZP©h(" + 
∑th
 + ")";

62 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZSession.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

23 @
XmlRoŸEÀmít
(
«me
="session")

24 
public
 cœs†
	cZSessi⁄
 {

25 
public
 
Såög
 
id
;

26 
public
 
Såög
 
	muri
;

28 
public
 
	$ZSessi⁄
() {

32 
public
 
	$ZSessi⁄
(
Såög
 
id
, Såög 
uri
) {

33 
this
.
id
 = id;

34 
this
.
uri
 = uri;

35 
	}
}

37 @
Ovîride


38 
public
 
	$hashCode
() {

39  
id
.
	`hashCode
();

40 
	}
}

42 @
Ovîride


43 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

44 if(!(
obj
 
ö°™˚of
 
ZSessi⁄
)) {

45  
Ál£
;

47 
ZSessi⁄
 
s
 = (ZSessi⁄Ë
obj
;

48  
id
.
	`equÆs
(
s
.id);

49 
	}
}

51 @
Ovîride


52 
public
 
Såög
 
	$toSåög
() {

53  "ZSessi⁄(" + 
id
 +")";

54 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZStat.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
;

21 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	g™nŸ©i⁄
.
	gXmlRoŸEÀmít
;

27 @
XmlRoŸEÀmít
(
«me
="stat")

28 
public
 cœs†
	cZSèt
 {

29 
public
 
Såög
 
∑th
;

30 
public
 
Såög
 
	muri
;

31 
public
 
	mbyã
[] 
	md©a64
;

32 
public
 
Såög
 
	md©aUtf8
;

34 
public
 
	mczxid
;

35 
public
 
	mmzxid
;

36 
public
 
	m˘ime
;

37 
public
 
	mmtime
;

38 
public
 
	mvîsi⁄
;

39 
public
 
	mcvîsi⁄
;

40 
public
 
	mavîsi⁄
;

41 
public
 
	mïhemîÆOw√r
;

42 
public
 
	md©aLígth
;

43 
public
 
	mnumChûdªn
;

44 
public
 
	mpzxid
;

47 
public
 
	$ZSèt
(){

51 
public
 
	$ZSèt
(
Såög
 
∑th
, 
byã
[] 
d©a64
, Såög 
d©aUtf8
)

53 
this
.
∑th
 =Öath;

54 
this
.
d©a64
 = data64;

55 
this
.
d©aUtf8
 = dataUtf8;

56 
	}
}

58 
public
 
	$ZSèt
(
Såög
 
∑th
, Såög 
uri
, 
byã
[] 
d©a64
, Såög 
d©aUtf8
,

59 
czxid
, 
mzxid
, 
˘ime
, 
mtime
, 
vîsi⁄
,

60 
cvîsi⁄
, 
avîsi⁄
, 
ïhemîÆOw√r
, 
d©aLígth
,

61 
numChûdªn
, 
pzxid
)

63 
this
.
∑th
 =Öath;

64 
this
.
uri
 = uri;

65 
this
.
d©a64
 = data64;

66 
this
.
d©aUtf8
 = dataUtf8;

68 
this
.
czxid
 = czxid;

69 
this
.
mzxid
 = mzxid;

70 
this
.
˘ime
 = ctime;

71 
this
.
mtime
 = mtime;

72 
this
.
vîsi⁄
 = version;

73 
this
.
cvîsi⁄
 = cversion;

74 
this
.
avîsi⁄
 =áversion;

75 
this
.
ïhemîÆOw√r
 =ÉphemeralOwner;

76 
this
.
d©aLígth
 = dataLength;

77 
this
.
numChûdªn
 =ÇumChildren;

78 
this
.
pzxid
 =Özxid;

79 
	}
}

81 @
Ovîride


82 
public
 
	$hashCode
() {

83  
∑th
.
	`hashCode
();

84 
	}
}

91 @
Ovîride


92 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

93 i‡(!(
obj
 
ö°™˚of
 
ZSèt
)) {

94  
Ál£
;

96 
ZSèt
 
o
 = (ZSètË
obj
;

97  
	`toSåög
().
	`equÆs
(
o
.toString());

98 
	}
}

100 @
Ovîride


101 
public
 
Såög
 
	$toSåög
() {

102  "ZSèt(" + 
∑th
 + "," + "b64["

103 + (
d©a64
 =
nuŒ
 ?ÇuŒ : 
√w
 
	`Såög
(data64)) + "],"

104 + 
d©aUtf8
 + ")";

105 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/JAXBContextResolver.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gC⁄ãxtResﬁvî
;

26 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gProvidî
;

27 
imp‹t
 
	gjavax
.
	gxml
.
	gböd
.
	gJAXBC⁄ãxt
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZChûdªnJSON
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZP©h
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSèt
;

33 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	gjs⁄
.
	gJSONC⁄figuøti⁄
;

34 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	gjs⁄
.
	gJSONJAXBC⁄ãxt
;

40 @
	gProvidî


41 @
SuµªssW¨nögs
("unchecked")

42 
public
 
föÆ
 
˛ass
 
JAXBC⁄ãxtResﬁvî
 
im∂emíts
 
	gC⁄ãxtResﬁvî
<
	gJAXBC⁄ãxt
> {

43 
¥iv©e
 
föÆ
 
JAXBC⁄ãxt
 
	gc⁄ãxt
;

45 
¥iv©e
 
föÆ
 
	gSë
<
	gCœss
> 
	gty≥sSë
;

47 
public
 
JAXBC⁄ãxtResﬁvî
(Ë
throws
 
	gEx˚±i⁄
 {

48 
	gCœss
[] 
	gty≥sAº
 =

49 
√w
 
Cœss
[]{
ZP©h
.
˛ass
, 
ZSèt
.˛ass, 
ZChûdªnJSON
.class};

50 
	gty≥sSë
 = 
√w
 
HashSë
<
Cœss
>(
Aºays
.
asLi°
(
ty≥sAº
));

51 
	gc⁄ãxt
 = 
√w
 
JSONJAXBC⁄ãxt
(

52 
JSONC⁄figuøti⁄
.
m≠≥d
()

53 .
¨øys
("children")

54 .
n⁄Såögs
("czxid")

55 .
n⁄Såögs
("mzxid")

56 .
n⁄Såögs
("ctime")

57 .
n⁄Såögs
("mtime")

58 .
n⁄Såögs
("version")

59 .
n⁄Såögs
("cversion")

60 .
n⁄Såögs
("aversion")

61 .
n⁄Såögs
("ephemeralOwner")

62 .
n⁄Såögs
("dataLength")

63 .
n⁄Såögs
("numChildren")

64 .
n⁄Såögs
("pzxid")

65 .
buûd
(),

66 
ty≥sAº
);

69 
public
 
JAXBC⁄ãxt
 
gëC⁄ãxt
(
Cœss
<?> 
obje˘Ty≥
) {

70  (
	gty≥sSë
.
c⁄èös
(
obje˘Ty≥
)Ë? 
	gc⁄ãxt
 : 
nuŒ
;

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/KeeperExceptionMapper.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gC⁄ãxt
;

22 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gRe•⁄£
;

23 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gUriInfo
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gEx˚±i⁄M≠≥r
;

25 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gProvidî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZEº‹
;

34 @
Providî


35 
public
 
˛ass
 
Kì≥rEx˚±i⁄M≠≥r
 
im∂emíts
 
	gEx˚±i⁄M≠≥r
<
	gKì≥rEx˚±i⁄
> {

36 
¥iv©e
 
UriInfo
 
	gui
;

38 
public
 
Kì≥rEx˚±i⁄M≠≥r
(@
C⁄ãxt
 
UriInfo
 
ui
) {

39 
	gthis
.
	gui
 = 
ui
;

42 
public
 
Re•⁄£
 
toRe•⁄£
(
Kì≥rEx˚±i⁄
 
e
) {

43 
	gRe•⁄£
.
Sètus
 
	g°©us
;

44 
Såög
 
	gmesßge
;

46 
Såög
 
	g∑th
 = 
e
.
gëP©h
();

48 
	ge
.
code
()) {

49 
	gAUTHFAILED
:

50 
°©us
 = 
Re•⁄£
.
Sètus
.
UNAUTHORIZED
;

51 
	gmesßge
 = 
∑th
 + "Çotáuthorized";

53 
	gBADARGUMENTS
:

54 
°©us
 = 
Re•⁄£
.
Sètus
.
BAD_REQUEST
;

55 
	gmesßge
 = 
∑th
 + " badárguments";

57 
	gBADVERSION
:

58 
°©us
 = 
Re•⁄£
.
Sètus
.
PRECONDITION_FAILED
;

59 
	gmesßge
 = 
∑th
 + " bad version";

61 
	gINVALIDACL
:

62 
°©us
 = 
Re•⁄£
.
Sètus
.
BAD_REQUEST
;

63 
	gmesßge
 = 
∑th
 + " invalidácl";

65 
	gNODEEXISTS
:

66 
°©us
 = 
Re•⁄£
.
Sètus
.
CONFLICT
;

67 
	gmesßge
 = 
∑th
 + "álreadyÉxists";

69 
	gNONODE
:

70 
°©us
 = 
Re•⁄£
.
Sètus
.
NOT_FOUND
;

71 
	gmesßge
 = 
∑th
 + "Çot found";

73 
	gNOTEMPTY
:

74 
°©us
 = 
Re•⁄£
.
Sètus
.
CONFLICT
;

75 
	gmesßge
 = 
∑th
 + "ÇotÉmpty";

78 
°©us
 = 
Re•⁄£
.
Sètus
.
‰omSètusCode
(502);

79 
	gmesßge
 = "Eº‹Öro˚ssögÑeque° f‹ " + 
∑th


80 + " : " + 
e
.
gëMesßge
();

83  
	gRe•⁄£
.
°©us
(°©us).
ítôy
(

84 
√w
 
ZEº‹
(
ui
.
gëReque°Uri
().
toSåög
(), 
mesßge
)).
buûd
();

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/RuntimeExceptionMapper.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gWebAµliˇti⁄Ex˚±i⁄
;

22 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gC⁄ãxt
;

23 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gRe•⁄£
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gUriInfo
;

25 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gEx˚±i⁄M≠≥r
;

26 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gProvidî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZEº‹
;

33 @
Providî


34 
public
 
˛ass
 
Ru¡imeEx˚±i⁄M≠≥r


35 
im∂emíts
 
	gEx˚±i⁄M≠≥r
<
	gRu¡imeEx˚±i⁄
>

37 
¥iv©e
 
UriInfo
 
	gui
;

39 
public
 
Ru¡imeEx˚±i⁄M≠≥r
(@
C⁄ãxt
 
UriInfo
 
ui
) {

40 
	gthis
.
	gui
 = 
ui
;

43 
public
 
Re•⁄£
 
toRe•⁄£
(
Ru¡imeEx˚±i⁄
 
e
) {

45 i‡(
e
 
ö°™˚of
 
	gWebAµliˇti⁄Ex˚±i⁄
) {

46 
WebAµliˇti⁄Ex˚±i⁄
 
	gõ
 =(WebAµliˇti⁄Ex˚±i⁄Ë
e
;

47  
	gõ
.
gëRe•⁄£
();

50  
	gRe•⁄£
.
°©us
(
Re•⁄£
.
Sètus
.
INTERNAL_SERVER_ERROR
).
ítôy
(

51 
√w
 
ZEº‹
(
ui
.
gëReque°Uri
().
toSåög
(),

52 "Eº‹Öro˚ssögÑeque° duêtÿ" + 
e


53 )).
buûd
();

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/SessionsResource.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gURI
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gUUID
;

25 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

26 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gC⁄sumes
;

27 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gDELETE
;

28 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gDeÁu…VÆue
;

29 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gPOST
;

30 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gPUT
;

31 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gP©h
;

32 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gP©hP¨am
;

33 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gProdu˚s
;

34 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gQuîyP¨am
;

35 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gWebAµliˇti⁄Ex˚±i⁄
;

36 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gC⁄ãxt
;

37 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

38 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gRe•⁄£
;

39 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gUriInfo
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

42 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gZooKì≥rSîvi˚
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZEº‹
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSessi⁄
;

47 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	gjs⁄
.
	gJSONWôhPaddög
;

49 @
P©h
("sessions/v1/{session: .*}")

50 
public
 cœs†
	cSessi⁄sResour˚
 {

52 
¥iv©e
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sessi⁄sResour˚
.
˛ass
);

54 
¥iv©e
 
Såög
 
	mc⁄ãxtP©h
;

56 
public
 
Sessi⁄sResour˚
(@
C⁄ãxt
 
HâpSîvÀtReque°
 
ªque°
) {

57 
	mc⁄ãxtP©h
 = 
ªque°
.
gëC⁄ãxtP©h
();

58 i‡(
	mc⁄ãxtP©h
.
equÆs
("")) {

59 
	mc⁄ãxtP©h
 = "/";

63 @
	gPUT


64 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

65 
MedüTy≥
.
APPLICATION_XML
 })

66 @
	$C⁄sumes
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

67 
public
 
Re•⁄£
 
	`kìpAliveSessi⁄
(@
	`P©hP¨am
("£ssi⁄"Ë
Såög
 
£ssi⁄
,

68 @
C⁄ãxt
 
UriInfo
 
ui
, 
byã
[] 
d©a
) {

70 i‡(!
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
c⁄ãxtP©h
, 
£ssi⁄
)) {

71 
	`throwNŸFound
(
£ssi⁄
, 
ui
);

74 
ZooKì≥rSîvi˚
.
	`ª£tTimî
(
c⁄ãxtP©h
, 
£ssi⁄
);

75  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
OK
).
	`buûd
();

76 
	}
}

78 @
	gPOST


79 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

80 
MedüTy≥
.
APPLICATION_XML
 })

81 
public
 
Re•⁄£
 
¸óãSessi⁄
(@
QuîyP¨am
("›"Ë
Såög
 
›
,

82 @
DeÁu…VÆue
("5"Ë@
QuîyP¨am
("expúe"Ë
Såög
 
expúe
,

83 @
C⁄ãxt
 
UriInfo
 
ui
) {

84 i‡(!
	g›
.
equÆs
("create")) {

85 
throw
 
√w
 
WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
°©us
(

86 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
ítôy
(

87 
√w
 
ZEº‹
(
ui
.
gëReque°Uri
().
toSåög
(), "")).
buûd
());

90 
	gexpúeInSec⁄ds
;

91 
	gåy
 {

92 
	gexpúeInSec⁄ds
 = 
I¡egî
.
∑r£I¡
(
expúe
);

93 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

94 
throw
 
√w
 
WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
°©us
(

95 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
buûd
());

98 
Såög
 
	guuid
 = 
UUID
.
øndomUUID
().
toSåög
();

99 
	gZooKì≥rSîvi˚
.
isC⁄√˘ed
(
c⁄ãxtP©h
, 
uuid
)) {

100 
	guuid
 = 
UUID
.
øndomUUID
().
toSåög
();

104 
	gåy
 {

105 
	gZooKì≥rSîvi˚
.
gëClõ¡
(
c⁄ãxtP©h
, 
uuid
, 
expúeInSec⁄ds
);

106 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

107 
	gLOG
.
îr‹
("Faûed whûêåyögÅÿ¸óãáÇew sessi⁄", 
e
);

109 
throw
 
√w
 
WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
°©us
(

110 
Re•⁄£
.
Sètus
.
INTERNAL_SERVER_ERROR
).
buûd
());

113 
URI
 
	guri
 = 
ui
.
gëAbsﬁuãP©hBuûdî
().
∑th
(
uuid
).
buûd
();

114  
	gRe•⁄£
.
¸óãd
(
uri
).
ítôy
(

115 
√w
 
JSONWôhPaddög
“ew 
ZSessi⁄
(
uuid
, 
uri
.
toSåög
())))

116 .
buûd
();

119 @
	gDELETE


120 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

121 
MedüTy≥
.
APPLICATION_XML
, MedüTy≥.
APPLICATION_OCTET_STREAM
 })

122 
public
 
dñëeSessi⁄
(@
P©hP¨am
("£ssi⁄"Ë
Såög
 
£ssi⁄
,

123 @
C⁄ãxt
 
UriInfo
 
ui
) {

124 
	gZooKì≥rSîvi˚
.
˛o£
(
c⁄ãxtP©h
, 
£ssi⁄
);

127 
¥iv©e
 
	$throwNŸFound
(
Såög
 
£ssi⁄
, 
UriInfo
 
ui
)

128 
throws
 
WebAµliˇti⁄Ex˚±i⁄
 {

129 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

130 
Re•⁄£
.
Sètus
.
NOT_FOUND
).
	`ítôy
(

131 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
£ssi⁄


132 + "ÇŸ found")).
	`buûd
());

133 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/ZErrorWriter.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

24 
imp‹t
 
	gjava
.
	gœng
.
	g™nŸ©i⁄
.
	gA¬Ÿ©i⁄
;

25 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gTy≥
;

27 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gProdu˚s
;

28 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gWebAµliˇti⁄Ex˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

30 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMu…ivÆuedM≠
;

31 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gMesßgeBodyWrôî
;

32 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gext
.
	gProvidî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZEº‹
;

39 @
Produ˚s
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

40 @
Providî


41 
public
 
˛ass
 
ZEº‹Wrôî
 
im∂emíts
 
	gMesßgeBodyWrôî
<
	gZEº‹
> {

43 
public
 
gëSize
(
ZEº‹
 
t
, 
Cœss
<?> 
ty≥
, 
Ty≥
 
gíîicTy≥
,

44 
A¬Ÿ©i⁄
[] 
™nŸ©i⁄s
, 
MedüTy≥
 
medüTy≥
) {

48 
public
 
boﬁón
 
isWrôóbÀ
(
Cœss
<?> 
ty≥
, 
Ty≥
 
gíîicTy≥
,

49 
A¬Ÿ©i⁄
[] 
™nŸ©i⁄s
, 
MedüTy≥
 
medüTy≥
) {

50  
	gZEº‹
.
	g˛ass
.
isAssig«bÀFrom
(
ty≥
);

53 
public
 
wrôeTo
(
ZEº‹
 
t
, 
Cœss
<?> 
ty≥
, 
Ty≥
 
gíîicTy≥
,

54 
A¬Ÿ©i⁄
[] 
™nŸ©i⁄s
, 
MedüTy≥
 
medüTy≥
,

55 
Mu…ivÆuedM≠
<
Såög
, 
Obje˘
> 
hâpHódîs
,

56 
OuçutSåóm
 
os
)

57 
throws
 
	gIOEx˚±i⁄
, 
	gWebAµliˇti⁄Ex˚±i⁄


59 
PrötSåóm
 
	gp
 = 
√w
 PrötSåóm(
os
);

60 
	gp
.
¥öt
("Reque° " + 
t
.
ªque°
 + " faûed duêtÿ" +Å.
mesßge
);

61 
	gp
.
Êush
();

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/ZNodeResource.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gªsour˚s
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gURI
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjavax
.
	g£rvÀt
.
	ghâp
.
	gHâpSîvÀtReque°
;

27 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gC⁄sumes
;

28 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gDELETE
;

29 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gDeÁu…VÆue
;

30 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gGET
;

31 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gHEAD
;

32 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gPOST
;

33 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gPUT
;

34 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gP©h
;

35 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gP©hP¨am
;

36 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gProdu˚s
;

37 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gQuîyP¨am
;

38 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gWebAµliˇti⁄Ex˚±i⁄
;

39 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gC⁄ãxt
;

40 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

41 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gRe•⁄£
;

42 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gUriInfo
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gZooKì≥rSîvi˚
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZChûdªn
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZChûdªnJSON
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZEº‹
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZP©h
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSèt
;

56 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	gjs⁄
.
	gJSONWôhPaddög
;

62 @
P©h
("znodes/v1{path: /.*}")

63 
public
 cœs†
	cZNodeResour˚
 {

64 
¥iv©e
 
föÆ
 
ZooKì≥r
 
	mzk
;

66 
public
 
ZNodeResour˚
(@
DeÁu…VÆue
(""Ë@
QuîyP¨am
("£ssi⁄"Ë
Såög
 
£ssi⁄
,

67 @
C⁄ãxt
 
UriInfo
 
ui
,

68 @
C⁄ãxt
 
HâpSîvÀtReque°
 
ªque°


70 
throws
 
	mIOEx˚±i⁄
 {

72 
Såög
 
	mc⁄ãxtP©h
 = 
ªque°
.
gëC⁄ãxtP©h
();

73 i‡(
	mc⁄ãxtP©h
.
equÆs
("")) {

74 
	mc⁄ãxtP©h
 = "/";

76 i‡(
	m£ssi⁄
.
equÆs
("")) {

77 
	m£ssi⁄
 = 
nuŒ
;

78 } i‡(!
	mZooKì≥rSîvi˚
.
isC⁄√˘ed
(
c⁄ãxtP©h
, 
£ssi⁄
)) {

79 
throw
 
√w
 
WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
°©us
(

80 
Re•⁄£
.
Sètus
.
UNAUTHORIZED
).
buûd
());

82 
	mzk
 = 
ZooKì≥rSîvi˚
.
gëClõ¡
(
c⁄ãxtP©h
, 
£ssi⁄
);

85 
¥iv©e
 
	$ísuªP©hNŸNuŒ
(
Såög
 
∑th
) {

86 i‡(
∑th
 =
nuŒ
) {

87 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvÆidÖ©h \"" + 
∑th
 + "\"");

89 
	}
}

91 @
	gHEAD


92 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

93 
MedüTy≥
.
APPLICATION_XML
 })

94 
public
 
Re•⁄£
 
exi°sZNode
(@
P©hP¨am
("∑th"Ë
Såög
 
∑th
,

95 @
C⁄ãxt
 
UriInfo
 
ui
Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

96 
Sèt
 
	g°©
 = 
zk
.
exi°s
(
∑th
, 
Ál£
);

97 i‡(
	g°©
 =
nuŒ
) {

98 
throwNŸFound
(
∑th
, 
ui
);

100  
	gRe•⁄£
.
°©us
(
Re•⁄£
.
Sètus
.
OK
).
buûd
();

103 @
	gHEAD


104 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_OCTET_STREAM
 })

105 
public
 
Re•⁄£
 
exi°sZNodeAsO˘ë
(@
P©hP¨am
("∑th"Ë
Såög
 
∑th
,

106 @
C⁄ãxt
 
UriInfo
 
ui
Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

107 
Sèt
 
	g°©
 = 
zk
.
exi°s
(
∑th
, 
Ál£
);

108 i‡(
	g°©
 =
nuŒ
) {

109 
throwNŸFound
(
∑th
, 
ui
);

111  
	gRe•⁄£
.
°©us
(
Re•⁄£
.
Sètus
.
NO_CONTENT
).
buûd
();

122 @
	gGET


123 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript" })

124 
public
 
Re•⁄£
 
gëZNodeLi°JSON
(

125 @
P©hP¨am
("∑th"Ë
Såög
 
∑th
,

126 @
QuîyP¨am
("ˇŒback"Ë
Såög
 
ˇŒback
,

127 @
DeÁu…VÆue
("d©a"Ë@
QuîyP¨am
("võw"Ë
Såög
 
võw
,

128 @
DeÁu…VÆue
("ba£64"Ë@
QuîyP¨am
("d©af‹m©"Ë
Såög
 
d©af‹m©
,

129 @
C⁄ãxt
 
UriInfo
 
ui
Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

130  
gëZNodeLi°
(
åue
, 
∑th
, 
ˇŒback
, 
võw
, 
d©af‹m©
, 
ui
);

133 @
	gGET


134 @
	$Produ˚s
(
MedüTy≥
.
APPLICATION_XML
)

135 
public
 
Re•⁄£
 
	`gëZNodeLi°
(

136 @
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
,

137 @
	`QuîyP¨am
("ˇŒback"Ë
Såög
 
ˇŒback
,

138 @
	`DeÁu…VÆue
("d©a"Ë@
	`QuîyP¨am
("võw"Ë
Såög
 
võw
,

139 @
	`DeÁu…VÆue
("ba£64"Ë@
	`QuîyP¨am
("d©af‹m©"Ë
Såög
 
d©af‹m©
,

140 @
C⁄ãxt
 
UriInfo
 
ui
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

141  
	`gëZNodeLi°
(
Ál£
, 
∑th
, 
ˇŒback
, 
võw
, 
d©af‹m©
, 
ui
);

142 
	}
}

144 
¥iv©e
 
Re•⁄£
 
	$gëZNodeLi°
(
boﬁón
 
js⁄
, 
Såög
 
∑th
, Såög 
ˇŒback
,

145 
Såög
 
võw
, Såög 
d©af‹m©
, 
UriInfo
 
ui
)

146 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

147 
	`ísuªP©hNŸNuŒ
(
∑th
);

149 i‡(
võw
.
	`equÆs
("children")) {

150 
Li°
<
Såög
> 
chûdªn
 = 
√w
 
AºayLi°
<String>();

151 
Såög
 
chûd
 : 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
)) {

152 
chûdªn
.
	`add
(
chûd
);

155 
Obje˘
 
chûd
;

156 
Såög
 
chûdTem∂©e
 = 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
();

157 i‡(!
chûdTem∂©e
.
	`ídsWôh
("/")) {

158 
chûdTem∂©e
 += "/";

160 
chûdTem∂©e
 += "{child}";

161 i‡(
js⁄
) {

162 
chûd
 = 
√w
 
	`ZChûdªnJSON
(
∑th
,

163 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
(), 
chûdTem∂©e
,

164 
chûdªn
);

166 
chûd
 = 
√w
 
	`ZChûdªn
(
∑th
, 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
(),

167 
chûdTem∂©e
, 
chûdªn
);

169  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
OK
).
	`ítôy
(

170 
√w
 
	`JSONWôhPaddög
(
chûd
, 
ˇŒback
)).
	`buûd
();

172 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

173 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
∑th
, 
Ál£
, 
°©
);

175 
byã
[] 
d©a64
;

176 
Såög
 
d©aUtf8
;

177 i‡(
d©a
 =
nuŒ
) {

178 
d©a64
 = 
nuŒ
;

179 
d©aUtf8
 = 
nuŒ
;

180 } i‡(!
d©af‹m©
.
	`equÆs
("utf8")) {

181 
d©a64
 = 
d©a
;

182 
d©aUtf8
 = 
nuŒ
;

184 
d©a64
 = 
nuŒ
;

185 
d©aUtf8
 = 
√w
 
	`Såög
(
d©a
);

187 
ZSèt
 
z°©
 = 
√w
 
	`ZSèt
(
∑th
, 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
(),

188 
d©a64
, 
d©aUtf8
, 
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
(), stat

189 .
	`gëCtime
(), 
°©
.
	`gëMtime
(), sèt.
	`gëVîsi⁄
(),

190 
°©
.
	`gëCvîsi⁄
(), sèt.
	`gëAvîsi⁄
(), stat

191 .
	`gëEphemîÆOw√r
(), 
°©
.
	`gëD©aLígth
(), stat

192 .
	`gëNumChûdªn
(), 
°©
.
	`gëPzxid
());

194  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
OK
).
	`ítôy
(

195 
√w
 
	`JSONWôhPaddög
(
z°©
, 
ˇŒback
)).
	`buûd
();

197 
	}
}

199 @
	gGET


200 @
	$Produ˚s
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

201 
public
 
Re•⁄£
 
	`gëZNodeLi°AsO˘ë
(@
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
)

202 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

203 
	`ísuªP©hNŸNuŒ
(
∑th
);

205 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

206 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
∑th
, 
Ál£
, 
°©
);

208 i‡(
d©a
 =
nuŒ
) {

209  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
NO_CONTENT
).
	`buûd
();

211  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
OK
).
	`ítôy
(
d©a
).
	`buûd
();

213 
	}
}

215 @
	gPUT


216 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

217 
MedüTy≥
.
APPLICATION_XML
 })

218 @
	$C⁄sumes
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

219 
public
 
Re•⁄£
 
	`£tZNode
(

220 @
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
,

221 @
	`QuîyP¨am
("ˇŒback"Ë
Såög
 
ˇŒback
,

222 @
	`DeÁu…VÆue
("-1"Ë@
	`QuîyP¨am
("vîsi⁄"Ë
Såög
 
vîsi⁄P¨am
,

223 @
	`DeÁu…VÆue
("ba£64"Ë@
	`QuîyP¨am
("d©af‹m©"Ë
Såög
 
d©af‹m©
,

224 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("nuŒ"Ë
Såög
 
£tNuŒ
,

225 @
C⁄ãxt
 
UriInfo
 
ui
, 
byã
[] 
d©a
Ë
throws
 
I¡îru±edEx˚±i⁄
,

226 
Kì≥rEx˚±i⁄
 {

227 
	`ísuªP©hNŸNuŒ
(
∑th
);

229 
vîsi⁄
;

230 
åy
 {

231 
vîsi⁄
 = 
I¡egî
.
	`∑r£I¡
(
vîsi⁄P¨am
);

232 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

233 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

234 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
	`ítôy
(

235 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
∑th


236 + " bad vîsi⁄ " + 
vîsi⁄P¨am
)).
	`buûd
());

239 i‡(
£tNuŒ
.
	`equÆs
("true")) {

240 
d©a
 = 
nuŒ
;

243 
Sèt
 
°©
 = 
zk
.
	`£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
);

245 
ZSèt
 
z°©
 = 
√w
 
	`ZSèt
(
∑th
, 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
(), 
nuŒ
,

246 
nuŒ
, 
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
(), sèt.
	`gëCtime
(), stat

247 .
	`gëMtime
(), 
°©
.
	`gëVîsi⁄
(), sèt.
	`gëCvîsi⁄
(),

248 
°©
.
	`gëAvîsi⁄
(), sèt.
	`gëEphemîÆOw√r
(), stat

249 .
	`gëD©aLígth
(), 
°©
.
	`gëNumChûdªn
(), stat

250 .
	`gëPzxid
());

252  
Re•⁄£
.
	`°©us
(Re•⁄£.
Sètus
.
OK
).
	`ítôy
(

253 
√w
 
	`JSONWôhPaddög
(
z°©
, 
ˇŒback
)).
	`buûd
();

254 
	}
}

256 @
	gPUT


257 @
Produ˚s
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

258 @
	$C⁄sumes
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

259 
public
 
	`£tZNodeAsO˘ë
(@
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
,

260 @
	`DeÁu…VÆue
("-1"Ë@
	`QuîyP¨am
("vîsi⁄"Ë
Såög
 
vîsi⁄P¨am
,

261 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("nuŒ"Ë
Såög
 
£tNuŒ
,

262 @
C⁄ãxt
 
UriInfo
 
ui
, 
byã
[] 
d©a
Ë
throws
 
I¡îru±edEx˚±i⁄
,

263 
Kì≥rEx˚±i⁄
 {

264 
	`ísuªP©hNŸNuŒ
(
∑th
);

266 
vîsi⁄
;

267 
åy
 {

268 
vîsi⁄
 = 
I¡egî
.
	`∑r£I¡
(
vîsi⁄P¨am
);

269 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

270 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

271 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
	`ítôy
(

272 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
∑th


273 + " bad vîsi⁄ " + 
vîsi⁄P¨am
)).
	`buûd
());

276 i‡(
£tNuŒ
.
	`equÆs
("true")) {

277 
d©a
 = 
nuŒ
;

280 
zk
.
	`£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
);

281 
	}
}

283 @
	gPOST


284 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

285 
MedüTy≥
.
APPLICATION_XML
 })

286 @
	$C⁄sumes
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

287 
public
 
Re•⁄£
 
	`¸óãZNode
(

288 @
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
,

289 @
	`QuîyP¨am
("ˇŒback"Ë
Såög
 
ˇŒback
,

290 @
	`DeÁu…VÆue
("¸óã"Ë@
	`QuîyP¨am
("›"Ë
Såög
 
›
,

291 @
	`QuîyP¨am
("«me"Ë
Såög
 
«me
,

292 @
	`DeÁu…VÆue
("ba£64"Ë@
	`QuîyP¨am
("d©af‹m©"Ë
Såög
 
d©af‹m©
,

293 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("nuŒ"Ë
Såög
 
£tNuŒ
,

294 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("£quí˚"Ë
Såög
 
£quí˚
,

295 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("ïhemîÆ"Ë
Såög
 
ïhemîÆ
,

296 @
C⁄ãxt
 
UriInfo
 
ui
, 
byã
[] 
d©a
Ë
throws
 
I¡îru±edEx˚±i⁄
,

297 
Kì≥rEx˚±i⁄
 {

298 
	`ísuªP©hNŸNuŒ
(
∑th
);

300 i‡(
∑th
.
	`equÆs
("/")) {

301 
∑th
 +
«me
;

303 
∑th
 +"/" + 
«me
;

306 i‡(!
›
.
	`equÆs
("create")) {

307 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

308 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
	`ítôy
(

309 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
∑th


310 + " bad o≥øt⁄ " + 
›
)).
	`buûd
());

313 i‡(
£tNuŒ
.
	`equÆs
("true")) {

314 
d©a
 = 
nuŒ
;

317 
Cª©eMode
 
¸óãMode
;

318 i‡(
£quí˚
.
	`equÆs
("true")) {

319 i‡(
ïhemîÆ
.
	`equÆs
("false")) {

320 
¸óãMode
 = 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
;

322 
¸óãMode
 = 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
;

324 } i‡(
ïhemîÆ
.
	`equÆs
("false")) {

325 
¸óãMode
 = 
Cª©eMode
.
PERSISTENT
;

327 
¸óãMode
 = 
Cª©eMode
.
EPHEMERAL
;

330 
Såög
 
√wP©h
 = 
zk
.
	`¸óã
(
∑th
, 
d©a
, 
Ids
.
OPEN_ACL_UNSAFE
, 
¸óãMode
);

332 
URI
 
uri
 = 
ui
.
	`gëAbsﬁuãP©hBuûdî
().
	`∑th
(
√wP©h
).
	`buûd
();

334  
Re•⁄£
.
	`¸óãd
(
uri
).
	`ítôy
(

335 
√w
 
	`JSONWôhPaddög
“ew 
	`ZP©h
(
√wP©h
, 
ui
.
	`gëAbsﬁuãP©h
()

336 .
	`toSåög
()))).
	`buûd
();

337 
	}
}

339 @
	gPOST


340 @
Produ˚s
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

341 @
	$C⁄sumes
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

342 
public
 
Re•⁄£
 
	`¸óãZNodeAsO˘ë
(@
	`P©hP¨am
("∑th"Ë
Såög
 
∑th
,

343 @
	`DeÁu…VÆue
("¸óã"Ë@
	`QuîyP¨am
("›"Ë
Såög
 
›
,

344 @
	`QuîyP¨am
("«me"Ë
Såög
 
«me
,

345 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("nuŒ"Ë
Såög
 
£tNuŒ
,

346 @
	`DeÁu…VÆue
("Ál£"Ë@
	`QuîyP¨am
("£quí˚"Ë
Såög
 
£quí˚
,

347 @
C⁄ãxt
 
UriInfo
 
ui
, 
byã
[] 
d©a
Ë
throws
 
I¡îru±edEx˚±i⁄
,

348 
Kì≥rEx˚±i⁄
 {

349 
	`ísuªP©hNŸNuŒ
(
∑th
);

351 i‡(
∑th
.
	`equÆs
("/")) {

352 
∑th
 +
«me
;

354 
∑th
 +"/" + 
«me
;

357 i‡(!
›
.
	`equÆs
("create")) {

358 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

359 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
	`ítôy
(

360 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
∑th


361 + " bad o≥øt⁄ " + 
›
)).
	`buûd
());

364 i‡(
£tNuŒ
.
	`equÆs
("true")) {

365 
d©a
 = 
nuŒ
;

368 
Cª©eMode
 
¸óãMode
;

369 i‡(
£quí˚
.
	`equÆs
("true")) {

370 
¸óãMode
 = 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
;

372 
¸óãMode
 = 
Cª©eMode
.
PERSISTENT
;

375 
Såög
 
√wP©h
 = 
zk
.
	`¸óã
(
∑th
, 
d©a
, 
Ids
.
OPEN_ACL_UNSAFE
, 
¸óãMode
);

377 
URI
 
uri
 = 
ui
.
	`gëAbsﬁuãP©hBuûdî
().
	`∑th
(
√wP©h
).
	`buûd
();

379  
Re•⁄£
.
	`¸óãd
(
uri
).
	`ítôy
(

380 
√w
 
	`ZP©h
(
√wP©h
, 
ui
.
	`gëAbsﬁuãP©h
().
	`toSåög
())).
	`buûd
();

381 
	}
}

383 @
	gDELETE


384 @
Produ˚s
–{ 
MedüTy≥
.
APPLICATION_JSON
, "application/javascript",

385 
MedüTy≥
.
APPLICATION_XML
, MedüTy≥.
APPLICATION_OCTET_STREAM
 })

386 
public
 
dñëeZNode
(@
P©hP¨am
("∑th"Ë
Såög
 
∑th
,

387 @
DeÁu…VÆue
("-1"Ë@
QuîyP¨am
("vîsi⁄"Ë
Såög
 
vîsi⁄P¨am
,

388 @
C⁄ãxt
 
UriInfo
 
ui
Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

389 
ísuªP©hNŸNuŒ
(
∑th
);

391 
	gvîsi⁄
;

392 
	gåy
 {

393 
	gvîsi⁄
 = 
I¡egî
.
∑r£I¡
(
vîsi⁄P¨am
);

394 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

395 
throw
 
√w
 
WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
°©us
(

396 
Re•⁄£
.
Sètus
.
BAD_REQUEST
).
ítôy
(

397 
√w
 
ZEº‹
(
ui
.
gëReque°Uri
().
toSåög
(), 
∑th


398 + " bad vîsi⁄ " + 
vîsi⁄P¨am
)).
buûd
());

401 
	gzk
.
dñëe
(
∑th
, 
vîsi⁄
);

404 
¥iv©e
 
	$throwNŸFound
(
Såög
 
∑th
, 
UriInfo
 
ui
)

405 
throws
 
WebAµliˇti⁄Ex˚±i⁄
 {

406 
throw
 
√w
 
	`WebAµliˇti⁄Ex˚±i⁄
(
Re•⁄£
.
	`°©us
(

407 
Re•⁄£
.
Sètus
.
NOT_FOUND
).
	`ítôy
(

408 
√w
 
	`ZEº‹
(
ui
.
	`gëReque°Uri
().
	`toSåög
(), 
∑th
 + "Çot found"))

409 .
	`buûd
());

410 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/Base.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

23 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gSëTe°
.
	gMyW©chî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gcfg
.
	gRe°Cfg
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

35 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡
;

36 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

42 
public
 cœs†
	cBa£
 
exãnds
 
	mTe°Ca£
 {

43 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Ba£
.
˛ass
);

45 
¥Ÿe˘ed
 
föÆ
 
Såög
 
	mCONTEXT_PATH
 = "/zk";

46 
¥Ÿe˘ed
 
föÆ
 
	mGRIZZLY_PORT
 = 10104;

47 
¥Ÿe˘ed
 
föÆ
 
Såög
 
	mBASEURI
 = Såög.
f‹m©
(

48 "hâp://loˇlho°:%d%s", 
GRIZZLY_PORT
, 
CONTEXT_PATH
);

49 
¥Ÿe˘ed
 
föÆ
 
Såög
 
	mZKHOSTPORT
 = "localhost:22182";

50 
¥Ÿe˘ed
 
Clõ¡
 
	m˛õ¡
;

51 
¥Ÿe˘ed
 
WebResour˚
 
	mznode§
, 
	m£ssi⁄§
;

53 
¥Ÿe˘ed
 
ZooKì≥r
 
	mzk
;

55 
¥iv©e
 
Re°Maö
 
	mª°
;

57 @
Bef‹e


58 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

59 
su≥r
.
	`£tUp
();

61 
Re°Cfg
 
cfg
 = 
√w
 
	`Re°Cfg
“ew 
	`ByãAºayI≈utSåóm
(
Såög
.
	`f‹m©
(

64 
GRIZZLY_PORT
, 
CONTEXT_PATH
, 
ZKHOSTPORT
).
	`gëByãs
()));

66 
ª°
 = 
√w
 
	`Re°Maö
(
cfg
);

67 
ª°
.
	`°¨t
();

69 
zk
 = 
√w
 
	`ZooKì≥r
(
ZKHOSTPORT
, 30000,Çew 
	`MyW©chî
());

71 
˛õ¡
 = 
Clõ¡
.
	`¸óã
();

72 
znode§
 = 
˛õ¡
.
	`ªsour˚
(
BASEURI
).
	`∑th
("znodes/v1");

73 
£ssi⁄§
 = 
˛õ¡
.
	`ªsour˚
(
BASEURI
).
	`∑th
("sessions/v1/");

76 @
A·î


77 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

78 
su≥r
.
	`ã¨Down
();

80 
˛õ¡
.
	`de°roy
();

81 
zk
.
	`˛o£
();

82 
ª°
.
	`°›
();

83 
	}
}

85 
¥Ÿe˘ed
 
Såög
 
	$¸óãBa£ZNode
(Ë
throws
 
Ex˚±i⁄
 {

86 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ZKHOSTPORT
, 30000,Çew 
	`MyW©chî
());

88 
Såög
 
ba£Znode
 = 
zk
.
	`¸óã
("/ã°-", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

89 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

90 
zk
.
	`˛o£
();

92  
ba£Znode
;

93 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/CreateTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZP©h
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

37 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

38 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

39 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
.
	gBuûdî
;

46 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

47 
public
 cœs†
	cCª©eTe°
 
exãnds
 
Ba£
 {

48 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
Cª©eTe°
.
˛ass
);

50 
¥iv©e
 
Såög
 
ac˚±
;

51 
¥iv©e
 
Såög
 
∑th
;

52 
¥iv©e
 
Såög
 
«me
;

53 
¥iv©e
 
Såög
 
ícodög
;

54 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

55 
¥iv©e
 
ZP©h
 
ex≥˘edP©h
;

56 
¥iv©e
 
byã
[] 
d©a
;

57 
¥iv©e
 
boﬁón
 
£quí˚
;

59 
public
 ˛as†
	cMyW©chî
 
im∂emíts
 
W©chî
 {

60 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

65 @
P¨amëîs


66 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

67 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

69  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

70 {
MedüTy≥
.
APPLICATION_JSON
,

71 
ba£Znode
, "foo bar", "utf8",

72 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
,

73 
√w
 
	`ZP©h
(
ba£Znode
 + "/foÿb¨"), 
nuŒ
,

74 
Ál£
 },

75 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t1", "utf8",

76 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-t1"),

77 
nuŒ
, 
Ál£
 },

78 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t1", "utf8",

79 
Clõ¡Re•⁄£
.
Sètus
.
CONFLICT
, 
nuŒ
,ÇuŒ, 
Ál£
 },

80 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t2", "utf8",

81 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-t2"),

82 "".
	`gëByãs
(), 
Ál£
 },

83 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t2", "utf8",

84 
Clõ¡Re•⁄£
.
Sètus
.
CONFLICT
, 
nuŒ
,ÇuŒ, 
Ál£
 },

85 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t3", "utf8",

86 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-t3"),

87 "foo".
	`gëByãs
(), 
Ál£
 },

88 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t3", "utf8",

89 
Clõ¡Re•⁄£
.
Sètus
.
CONFLICT
, 
nuŒ
,ÇuŒ, 
Ál£
 },

90 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-t4", "base64",

91 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-t4"),

92 "foo".
	`gëByãs
(), 
Ál£
 },

93 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-", "utf8",

94 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-"), 
nuŒ
,

95 
åue
 },

96 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "c-", "utf8",

97 
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
√w
 
	`ZP©h
(
ba£Znode
 + "/c-"), 
nuŒ
,

98 
åue
 }

100 
	}
}

102 
public
 
	$Cª©eTe°
(
Såög
 
ac˚±
, Såög 
∑th
, Såög 
«me
, Såög 
ícodög
,

103 
Clõ¡Re•⁄£
.
Sètus
 
°©us
, 
ZP©h
 
ex≥˘edP©h
, 
byã
[] 
d©a
,

104 
boﬁón
 
£quí˚
)

106 
this
.
ac˚±
 =áccept;

107 
this
.
∑th
 =Öath;

108 
this
.
«me
 =Çame;

109 
this
.
ícodög
 =Éncoding;

110 
this
.
ex≥˘edSètus
 = 
°©us
;

111 
this
.
ex≥˘edP©h
 =ÉxpectedPath;

112 
this
.
d©a
 = data;

113 
this
.
£quí˚
 = sequence;

114 
	}
}

116 @
Te°


117 
public
 
	$ã°Cª©e
(Ë
throws
 
Ex˚±i⁄
 {

118 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

120 
WebResour˚
 
wr
 = 
znode§
.
	`∑th
(
∑th
).
	`quîyP¨am
("d©af‹m©", 
ícodög
)

121 .
	`quîyP¨am
("«me", 
«me
);

122 i‡(
d©a
 =
nuŒ
) {

123 
wr
 = wr.
	`quîyP¨am
("null", "true");

125 i‡(
£quí˚
) {

126 
wr
 = wr.
	`quîyP¨am
("sequence", "true");

129 
Buûdî
 
buûdî
 = 
wr
.
	`ac˚±
(
ac˚±
);

131 
Clõ¡Re•⁄£
 
¸
;

132 i‡(
d©a
 =
nuŒ
) {

133 
¸
 = 
buûdî
.
	`po°
(
Clõ¡Re•⁄£
.
˛ass
);

135 
¸
 = 
buûdî
.
	`po°
(
Clõ¡Re•⁄£
.
˛ass
, 
d©a
);

137 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

139 i‡(
ex≥˘edP©h
 =
nuŒ
) {

143 
ZP©h
 
z∑th
 = 
¸
.
	`gëE¡ôy
(ZP©h.
˛ass
);

144 i‡(
£quí˚
) {

145 
	`as£πTrue
(
z∑th
.
∑th
.
	`°¨tsWôh
(
ex≥˘edP©h
.path));

146 
	`as£πTrue
(
z∑th
.
uri
.
	`°¨tsWôh
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
()));

148 
	`as£πEquÆs
(
ex≥˘edP©h
, 
z∑th
);

149 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
(), 
z∑th
.
uri
);

153 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
z∑th
.
∑th
, 
Ál£
, 
√w
 
	`Sèt
());

154 i‡(
d©a
 =
nuŒ
 && 
this
.data ==Çull) {

156 } i‡(
d©a
 =
nuŒ
 || 
this
.data ==Çull) {

157 
	`as£πEquÆs
(
d©a
, 
this
.data);

159 
	`as£πTrue
(
√w
 
	`Såög
(
d©a
Ë+ " =" +Çew Såög(
this
.data),

160 
Aºays
.
	`equÆs
(
d©a
, 
this
.data));

162 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/DeleteTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

38 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

45 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

46 
public
 cœs†
	cDñëeTe°
 
exãnds
 
Ba£
 {

47 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
DñëeTe°
.
˛ass
);

49 
¥iv©e
 
Såög
 
z∑th
;

50 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

52 
public
 ˛as†
	cMyW©chî
 
im∂emíts
 
W©chî
 {

53 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

58 @
P¨amëîs


59 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

60 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

62  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

63 {
ba£Znode
, ba£Znode, 
Clõ¡Re•⁄£
.
Sètus
.
NO_CONTENT
 },

64 {
ba£Znode
, ba£Znode, 
Clõ¡Re•⁄£
.
Sètus
.
NO_CONTENT
 }

66 
	}
}

68 
public
 
	$DñëeTe°
(
Såög
 
∑th
, Såög 
z∑th
, 
Clõ¡Re•⁄£
.
Sètus
 
°©us
) {

69 
this
.
z∑th
 = zpath;

70 
this
.
ex≥˘edSètus
 = 
°©us
;

71 
	}
}

73 
public
 
	$vîify
(
Såög
 
ty≥
Ë
throws
 
Ex˚±i⁄
 {

74 i‡(
ex≥˘edSètus
 !
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
) {

75 
z∑th
 = 
zk
.
	`¸óã
(z∑th, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

76 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

79 
Clõ¡Re•⁄£
 
¸
 = 
znode§
.
	`∑th
(
z∑th
).
	`ac˚±
(
ty≥
).
	`ty≥
(type)

80 .
	`dñëe
(
Clõ¡Re•⁄£
.
˛ass
);

81 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

84 
Sèt
 
°©
 = 
zk
.
	`exi°s
(
z∑th
, 
Ál£
);

85 
	`as£πNuŒ
(
°©
);

86 
	}
}

88 @
Te°


89 
public
 
	$ã°Dñëe
(Ë
throws
 
Ex˚±i⁄
 {

90 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

91 
	`vîify
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
);

92 
	`vîify
(
MedüTy≥
.
APPLICATION_JSON
);

93 
	`vîify
(
MedüTy≥
.
APPLICATION_XML
);

94 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/ExistsTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

33 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

40 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

41 
public
 cœs†
	cExi°sTe°
 
exãnds
 
Ba£
 {

42 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
Exi°sTe°
.
˛ass
);

44 
¥iv©e
 
Såög
 
∑th
;

45 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

47 @
P¨amëîs


48 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

49 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

51  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

52 {
ba£Znode
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
 },

53 {
ba£Znode
 + "dkdk38383", 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
 }

57 
public
 
	$Exi°sTe°
(
Såög
 
∑th
, 
Clõ¡Re•⁄£
.
Sètus
 
°©us
) {

58 
this
.
∑th
 =Öath;

59 
this
.
ex≥˘edSètus
 = 
°©us
;

60 
	}
}

62 
¥iv©e
 
	$vîify
(
Såög
 
ty≥
) {

63 
Clõ¡Re•⁄£
 
¸
 = 
znode§
.
	`∑th
(
∑th
).
	`ac˚±
(
ty≥
).
	`ty≥
—y≥).
	`hód
();

64 i‡(
ty≥
.
	`equÆs
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
)

65 && 
ex≥˘edSètus
 =
Clõ¡Re•⁄£
.
Sètus
.
OK
) {

66 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
NO_CONTENT
,

67 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

69 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

71 
	}
}

73 @
Te°


74 
public
 
	$ã°Exi°s
(Ë
throws
 
Ex˚±i⁄
 {

75 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

76 
	`vîify
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
);

77 
	`vîify
(
MedüTy≥
.
APPLICATION_JSON
);

78 
	`vîify
(
MedüTy≥
.
APPLICATION_XML
);

79 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/GetChildrenTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZChûdªn
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZChûdªnJSON
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

39 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

46 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

47 
public
 cœs†
	cGëChûdªnTe°
 
exãnds
 
Ba£
 {

48 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
GëChûdªnTe°
.
˛ass
);

50 
¥iv©e
 
Såög
 
ac˚±
;

51 
¥iv©e
 
Såög
 
∑th
;

52 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

53 
¥iv©e
 
Såög
 
ex≥˘edP©h
;

54 
¥iv©e
 
Li°
<
Såög
> 
ex≥˘edChûdªn
;

56 @
P¨amëîs


57 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

58 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

59 
Såög
 
ba£Znode2
 = 
Ba£
.
	`¸óãBa£ZNode
();

60 
Såög
 
ba£Znode3
 = 
Ba£
.
	`¸óãBa£ZNode
();

61 
Såög
 
ba£Znode4
 = 
Ba£
.
	`¸óãBa£ZNode
();

62 
Såög
 
ba£Znode5
 = 
Ba£
.
	`¸óãBa£ZNode
();

63 
Såög
 
ba£Znode6
 = 
Ba£
.
	`¸óãBa£ZNode
();

65  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

66 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "abddkdkd",

67 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
,Çull },

68 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
 + "abddkdkd",

69 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
,Çull },

70 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

71 
ba£Znode
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {}) },

72 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

73 
ba£Znode
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {}) },

74 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

75 
ba£Znode
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1"}) },

76 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode4
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

77 
ba£Znode4
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1"}) },

78 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode2
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

79 
ba£Znode2
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1", "c2"}) },

80 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode5
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

81 
ba£Znode5
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1", "c2"}) },

82 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode3
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

83 
ba£Znode3
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1", "c2", "c3", "c4"}) },

84 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode6
, 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

85 
ba£Znode6
, 
Aºays
.
	`asLi°
(
√w
 
Såög
[] {"c1", "c2", "c3", "c4"}) }

90 
public
 
	`GëChûdªnTe°
(
Såög
 
ac˚±
, Såög 
∑th
, 
Clõ¡Re•⁄£
.
Sètus
 
°©us
,

91 
Såög
 
ex≥˘edP©h
, 
Li°
<Såög> 
ex≥˘edChûdªn
)

93 
this
.
ac˚±
 =áccept;

94 
this
.
∑th
 =Öath;

95 
this
.
ex≥˘edSètus
 = 
°©us
;

96 
this
.
ex≥˘edP©h
 =ÉxpectedPath;

97 
this
.
ex≥˘edChûdªn
 =ÉxpectedChildren;

98 
	}
}

100 @
Te°


101 
public
 
	$ã°GëChûdªn
(Ë
throws
 
Ex˚±i⁄
 {

102 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

104 i‡(
ex≥˘edChûdªn
 !
nuŒ
) {

105 
Såög
 
chûd
 : 
ex≥˘edChûdªn
) {

106 
zk
.
	`¸óã
(
ex≥˘edP©h
 + "/" + 
chûd
, 
nuŒ
,

107 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

111 
Clõ¡Re•⁄£
 
¸
 = 
znode§
.
	`∑th
(
∑th
).
	`quîyP¨am
("view", "children")

112 .
	`ac˚±
(
ac˚±
).
	`gë
(
Clõ¡Re•⁄£
.
˛ass
);

113 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

115 i‡(
ex≥˘edChûdªn
 =
nuŒ
) {

119 i‡(
ac˚±
.
	`equÆs
(
MedüTy≥
.
APPLICATION_JSON
)) {

120 
ZChûdªnJSON
 
zchûdªn
 = 
¸
.
	`gëE¡ôy
(ZChûdªnJSON.
˛ass
);

121 
CﬁÀ˘i⁄s
.
	`s‹t
(
ex≥˘edChûdªn
);

122 
CﬁÀ˘i⁄s
.
	`s‹t
(
zchûdªn
.
chûdªn
);

123 
	`as£πEquÆs
(
ex≥˘edChûdªn
, 
zchûdªn
.
chûdªn
);

124 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
(), 
zchûdªn
.
uri
);

125 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
() + "/{child}",

126 
zchûdªn
.
chûd_uri_ãm∂©e
);

127 } i‡(
ac˚±
.
	`equÆs
(
MedüTy≥
.
APPLICATION_XML
)) {

128 
ZChûdªn
 
zchûdªn
 = 
¸
.
	`gëE¡ôy
(ZChûdªn.
˛ass
);

129 
CﬁÀ˘i⁄s
.
	`s‹t
(
ex≥˘edChûdªn
);

130 
CﬁÀ˘i⁄s
.
	`s‹t
(
zchûdªn
.
chûdªn
);

131 
	`as£πEquÆs
(
ex≥˘edChûdªn
, 
zchûdªn
.
chûdªn
);

132 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
(), 
zchûdªn
.
uri
);

133 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
() + "/{child}",

134 
zchûdªn
.
chûd_uri_ãm∂©e
);

136 
	`Áû
("unknownácceptÅype");

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/GetTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSèt
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

34 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

41 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

42 
public
 cœs†
	cGëTe°
 
exãnds
 
Ba£
 {

43 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
GëTe°
.
˛ass
);

45 
¥iv©e
 
Såög
 
ac˚±
;

46 
¥iv©e
 
Såög
 
∑th
;

47 
¥iv©e
 
Såög
 
ícodög
;

48 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

49 
¥iv©e
 
ZSèt
 
ex≥˘edSèt
;

51 @
P¨amëîs


52 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

53 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

55  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

56 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "utf8",

57 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, 
nuŒ
,Çull) },

58 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "utf8",

59 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, 
nuŒ
, "") },

60 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "utf8",

61 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, 
nuŒ
, "foo") },

62 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "base64",

63 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, 
nuŒ
,Çull) },

64 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "base64",

65 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, "".
	`gëByãs
(), 
nuŒ
) },

66 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "base64",

67 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, "".
	`gëByãs
(), 
nuŒ
) },

68 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
, "base64",

69 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, "foo".
	`gëByãs
(), 
nuŒ
) },

70 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "abaddkdk", "utf8",

71 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
 },

72 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "abaddkdk", "base64",

73 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
 },

75 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
, "utf8",

76 
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
√w
 
	`ZSèt
(
ba£Znode
, 
nuŒ
, "foo") },

77 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
, "base64",

78 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

79 
√w
 
	`ZSèt
(
ba£Znode
, "foo".
	`gëByãs
(), 
nuŒ
) },

80 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
 + "abaddkdk", "utf8",

81 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
 },

82 {
MedüTy≥
.
APPLICATION_XML
, 
ba£Znode
 + "abaddkdk", "base64",

83 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
 }

88 
public
 
	$GëTe°
(
Såög
 
ac˚±
, Såög 
∑th
, Såög 
ícodög
,

89 
Clõ¡Re•⁄£
.
Sètus
 
°©us
, 
ZSèt
 
°©
)

91 
this
.
ac˚±
 =áccept;

92 
this
.
∑th
 =Öath;

93 
this
.
ícodög
 =Éncoding;

94 
this
.
ex≥˘edSètus
 = 
°©us
;

95 
this
.
ex≥˘edSèt
 = 
°©
;

96 
	}
}

98 @
Te°


99 
public
 
	$ã°Gë
(Ë
throws
 
Ex˚±i⁄
 {

100 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

102 i‡(
ex≥˘edSèt
 !
nuŒ
) {

103 i‡(
ex≥˘edSèt
.
d©a64
 !
nuŒ
 ||Éx≥˘edSèt.
d©aUtf8
 ==Çull) {

104 
zk
.
	`£tD©a
(
ex≥˘edSèt
.
∑th
,Éx≥˘edSèt.
d©a64
, -1);

106 
zk
.
	`£tD©a
(
ex≥˘edSèt
.
∑th
,

107 
ex≥˘edSèt
.
d©aUtf8
.
	`gëByãs
(), -1);

111 
Clõ¡Re•⁄£
 
¸
 = 
znode§
.
	`∑th
(
∑th
).
	`quîyP¨am
("d©af‹m©", 
ícodög
)

112 .
	`ac˚±
(
ac˚±
).
	`gë
(
Clõ¡Re•⁄£
.
˛ass
);

113 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

115 i‡(
ex≥˘edSèt
 =
nuŒ
) {

119 
ZSèt
 
z°©
 = 
¸
.
	`gëE¡ôy
(ZSèt.
˛ass
);

120 
	`as£πEquÆs
(
ex≥˘edSèt
, 
z°©
);

121 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
(), 
z°©
.
uri
);

122 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/RestTestSuite.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·îCœss
;

22 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹eCœss
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gSuôe
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gSuôe
.
	gSuôeCœs£s
;

27 @
RunWôh
(
Suôe
.
˛ass
)

28 @
SuôeCœs£s
({
WadlTe°
.
˛ass
, 
GëTe°
.˛ass, 
GëChûdªnTe°
.class,

29 
Cª©eTe°
.
˛ass
, 
SëTe°
.˛ass, 
Exi°sTe°
.˛ass, 
DñëeTe°
.class })

30 
public
 cœs†
	cRe°Te°Suôe
 {

32 @
Bef‹eCœss


33 
public
 
	$£tUp
() {

37 @
A·îCœss


38 
public
 
	$ã¨Down
() {

40 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/RootTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZP©h
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

32 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

33 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
.
	gBuûdî
;

40 
public
 cœs†
	cRoŸTe°
 
exãnds
 
	mBa£
 {

41 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
RoŸTe°
.
˛ass
);

43 @
Te°


44 
public
 
	$ã°Cª©e
(Ë
throws
 
Ex˚±i⁄
 {

45 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

47 
Såög
 
∑th
 = "/";

48 
Såög
 
«me
 = "roottest-create";

49 
byã
[] 
d©a
 = "foo".
	`gëByãs
();

51 
WebResour˚
 
wr
 = 
znode§
.
	`∑th
(
∑th
).
	`quîyP¨am
("dataformat", "utf8")

52 .
	`quîyP¨am
("«me", 
«me
);

53 
Buûdî
 
buûdî
 = 
wr
.
	`ac˚±
(
MedüTy≥
.
APPLICATION_JSON
);

55 
Clõ¡Re•⁄£
 
¸
;

56 
¸
 = 
buûdî
.
	`po°
(
Clõ¡Re•⁄£
.
˛ass
, 
d©a
);

57 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

59 
ZP©h
 
z∑th
 = 
¸
.
	`gëE¡ôy
(ZP©h.
˛ass
);

60 
	`as£πEquÆs
(
√w
 
	`ZP©h
(
∑th
 + 
«me
), 
z∑th
);

61 
	`as£πEquÆs
(
znode§
.
	`∑th
(
∑th
).
	`toSåög
(), 
z∑th
.
uri
);

64 
byã
[] 
rd©a
 = 
zk
.
	`gëD©a
(
z∑th
.
∑th
, 
Ál£
, 
√w
 
	`Sèt
());

65 
	`as£πTrue
(
√w
 
	`Såög
(
rd©a
Ë+ " =" +Çew Såög(
d©a
),

66 
Aºays
.
	`equÆs
(
rd©a
, 
d©a
));

68 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/SessionTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSessi⁄
;

31 
imp‹t
 
	g‹g
.
	gcodehaus
.
	gjëtis⁄
.
	gjs⁄
.
	gJSONEx˚±i⁄
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡
;

35 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

36 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

37 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
.
	gBuûdî
;

39 
public
 cœs†
	cSessi⁄Te°
 
exãnds
 
	mBa£
 {

40 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sessi⁄Te°
.
˛ass
);

42 
¥iv©e
 
ZSessi⁄
 
	$¸óãSessi⁄
() {

43  
	`¸óãSessi⁄
("30");

46 
¥iv©e
 
ZSessi⁄
 
	$¸óãSessi⁄
(
Såög
 
expúe
) {

47 
WebResour˚
 
wr
 = 
£ssi⁄§
.
	`quîyP¨am
("op", "create")

48 .
	`quîyP¨am
("expúe", 
expúe
);

49 
Buûdî
 
b
 = 
wr
.
	`ac˚±
(
MedüTy≥
.
APPLICATION_JSON
);

51 
Clõ¡Re•⁄£
 
¸
 = 
b
.
	`po°
(Clõ¡Re•⁄£.
˛ass
, 
nuŒ
);

52 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
¸


53 .
	`gëClõ¡Re•⁄£Sètus
());

55  
¸
.
	`gëE¡ôy
(
ZSessi⁄
.
˛ass
);

56 
	}
}

58 @
Te°


59 
public
 
	$ã°Cª©eNewSessi⁄
(Ë
throws
 
JSONEx˚±i⁄
 {

60 
ZSessi⁄
 
£ssi⁄
 = 
	`¸óãSessi⁄
();

61 
	`as£πEquÆs
(
£ssi⁄
.
id
.
	`Àngth
(), 36);

64 
	`as£πTrue
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

65 
	}
}

67 @
Te°


68 
public
 
	$ã°Sessi⁄Expúes
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

69 
ZSessi⁄
 
£ssi⁄
 = 
	`¸óãSessi⁄
("1");

72 
	`as£πTrue
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

75 
Thªad
.
	`¶ìp
(1500);

76 
	`as£πFÆ£
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

77 
	}
}

79 @
Te°


80 
public
 
	$ã°DñëeSessi⁄
() {

81 
ZSessi⁄
 
£ssi⁄
 = 
	`¸óãSessi⁄
("30");

83 
WebResour˚
 
wr
 = 
£ssi⁄§
.
	`∑th
(
£ssi⁄
.
id
);

84 
Buûdî
 
b
 = 
wr
.
	`ac˚±
(
MedüTy≥
.
APPLICATION_JSON
);

86 
	`as£πTrue
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

87 
Clõ¡Re•⁄£
 
¸
 = 
b
.
	`dñëe
(Clõ¡Re•⁄£.
˛ass
, 
nuŒ
);

88 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
NO_CONTENT
,

89 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

91 
	`as£πFÆ£
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

92 
	}
}

94 @
Te°


95 
public
 
	$ã°SídHóπbót
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

96 
ZSessi⁄
 
£ssi⁄
 = 
	`¸óãSessi⁄
("2");

98 
Thªad
.
	`¶ìp
(1000);

99 
WebResour˚
 
wr
 = 
£ssi⁄§
.
	`∑th
(
£ssi⁄
.
id
);

100 
Buûdî
 
b
 = 
wr
.
	`ac˚±
(
MedüTy≥
.
APPLICATION_JSON
);

102 
Clõ¡Re•⁄£
 
¸
 = 
b
.
	`put
(Clõ¡Re•⁄£.
˛ass
, 
nuŒ
);

103 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
OK
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

105 
Thªad
.
	`¶ìp
(1500);

106 
	`as£πTrue
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

108 
Thªad
.
	`¶ìp
(1000);

109 
	`as£πFÆ£
(
ZooKì≥rSîvi˚
.
	`isC⁄√˘ed
(
CONTEXT_PATH
, 
£ssi⁄
.
id
));

110 
	}
}

112 @
Te°


113 
public
 
	$ã°Cª©eEphemîÆZNode
()

114 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
 {

115 
ZSessi⁄
 
£ssi⁄
 = 
	`¸óãSessi⁄
("30");

117 
WebResour˚
 
wr
 = 
znode§
.
	`∑th
("/")

118 .
	`quîyP¨am
("op", "create")

119 .
	`quîyP¨am
("name", "ephemeral-test")

120 .
	`quîyP¨am
("ephemeral", "true")

121 .
	`quîyP¨am
("£ssi⁄", 
£ssi⁄
.
id
)

122 .
	`quîyP¨am
("null", "true");

124 
Buûdî
 
b
 = 
wr
.
	`ac˚±
(
MedüTy≥
.
APPLICATION_JSON
);

125 
Clõ¡Re•⁄£
 
¸
 = 
b
.
	`po°
(Clõ¡Re•⁄£.
˛ass
);

126 
	`as£πEquÆs
(
Clõ¡Re•⁄£
.
Sètus
.
CREATED
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

128 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

129 
zk
.
	`gëD©a
("/ïhemîÆ-ã°", 
Ál£
, 
°©
);

131 
ZooKì≥r
 
£ssi⁄ZK
 = 
ZooKì≥rSîvi˚
.
	`gëClõ¡
(
CONTEXT_PATH
, 
£ssi⁄
.
id
);

132 
	`as£πEquÆs
(
°©
.
	`gëEphemîÆOw√r
(), 
£ssi⁄ZK
.
	`gëSessi⁄Id
());

133 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/SetTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjavax
.
	gws
.
	grs
.
	gc‹e
.
	gMedüTy≥
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
.
	gjaxb
.
	gZSèt
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

39 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gClõ¡Re•⁄£
;

40 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

41 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
.
	gBuûdî
;

48 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

49 
public
 cœs†
	cSëTe°
 
exãnds
 
Ba£
 {

50 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
SëTe°
.
˛ass
);

52 
¥iv©e
 
Såög
 
ac˚±
;

53 
¥iv©e
 
Såög
 
∑th
;

54 
¥iv©e
 
Såög
 
ícodög
;

55 
¥iv©e
 
Clõ¡Re•⁄£
.
Sètus
 
ex≥˘edSètus
;

56 
¥iv©e
 
ZSèt
 
ex≥˘edSèt
;

57 
¥iv©e
 
byã
[] 
d©a
;

59 
public
 ˛as†
	cMyW©chî
 
im∂emíts
 
W©chî
 {

60 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

65 @
P¨amëîs


66 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
(Ë
throws
 
Ex˚±i⁄
 {

67 
Såög
 
ba£Znode
 = 
Ba£
.
	`¸óãBa£ZNode
();

69  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

70 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t1", "utf8",

71 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

72 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t1", 
nuŒ
,Çull),Çull },

73 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t2", "utf8",

74 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

75 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t2", 
nuŒ
,ÇuŒ),Çew 
byã
[0] },

76 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t3", "utf8",

77 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

78 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t3", 
nuŒ
,ÇuŒ), "foob¨".
	`gëByãs
() },

79 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t4", "base64",

80 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

81 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t4", 
nuŒ
,Çull),Çull },

82 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t5", "base64",

83 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

84 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t5", 
nuŒ
,ÇuŒ),Çew 
byã
[0] },

85 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/s-t6", "base64",

86 
Clõ¡Re•⁄£
.
Sètus
.
OK
,

87 
√w
 
	`ZSèt
(
ba£Znode
 + "/s-t6", 
nuŒ
,Çull),

88 "foob¨".
	`gëByãs
() },

89 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/dkdkdkd", "utf8",

90 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
,Çull },

91 {
MedüTy≥
.
APPLICATION_JSON
, 
ba£Znode
 + "/dkdkdkd", "base64",

92 
Clõ¡Re•⁄£
.
Sètus
.
NOT_FOUND
, 
nuŒ
,Çull },

94 
	}
}

96 
public
 
	$SëTe°
(
Såög
 
ac˚±
, Såög 
∑th
, Såög 
ícodög
,

97 
Clõ¡Re•⁄£
.
Sètus
 
°©us
, 
ZSèt
 
ex≥˘edSèt
, 
byã
[] 
d©a
)

99 
this
.
ac˚±
 =áccept;

100 
this
.
∑th
 =Öath;

101 
this
.
ícodög
 =Éncoding;

102 
this
.
ex≥˘edSètus
 = 
°©us
;

103 
this
.
ex≥˘edSèt
 =ÉxpectedStat;

104 
this
.
d©a
 = data;

105 
	}
}

107 @
Te°


108 
public
 
	$ã°Së
(Ë
throws
 
Ex˚±i⁄
 {

109 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

111 i‡(
ex≥˘edSèt
 !
nuŒ
) {

112 
zk
.
	`¸óã
(
ex≥˘edSèt
.
∑th
, "öôül".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

113 
Cª©eMode
.
PERSISTENT
);

116 
WebResour˚
 
wr
 = 
znode§
.
	`∑th
(
∑th
).
	`quîyP¨am
("d©af‹m©", 
ícodög
);

117 i‡(
d©a
 =
nuŒ
) {

118 
wr
 = wr.
	`quîyP¨am
("null", "true");

121 
Buûdî
 
buûdî
 = 
wr
.
	`ac˚±
(
ac˚±
)

122 .
	`ty≥
(
MedüTy≥
.
APPLICATION_OCTET_STREAM
);

124 
Clõ¡Re•⁄£
 
¸
;

125 i‡(
d©a
 =
nuŒ
) {

126 
¸
 = 
buûdî
.
	`put
(
Clõ¡Re•⁄£
.
˛ass
);

132 
¸
 = 
buûdî
.
	`put
(
Clõ¡Re•⁄£
.
˛ass
, 
√w
 
	`Såög
(
d©a
));

134 
	`as£πEquÆs
(
ex≥˘edSètus
, 
¸
.
	`gëClõ¡Re•⁄£Sètus
());

136 i‡(
ex≥˘edSèt
 =
nuŒ
) {

140 
ZSèt
 
z°©
 = 
¸
.
	`gëE¡ôy
(ZSèt.
˛ass
);

141 
	`as£πEquÆs
(
ex≥˘edSèt
, 
z°©
);

144 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
z°©
.
∑th
, 
Ál£
, 
√w
 
	`Sèt
());

145 i‡(
d©a
 =
nuŒ
 && 
this
.data ==Çull) {

147 } i‡(
d©a
 =
nuŒ
 || 
this
.data ==Çull) {

148 
	`Áû
((
d©a
 =
nuŒ
 ?ÇuŒ : 
√w
 
	`Såög
(data)) + " == "

149 + (
this
.
d©a
 =
nuŒ
 ?ÇuŒ : 
√w
 
	`Såög
(this.data)));

151 
	`as£πTrue
(
√w
 
	`Såög
(
d©a
Ë+ " =" +Çew Såög(
this
.data),

152 
Aºays
.
	`equÆs
(
d©a
, 
this
.data));

154 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/WadlTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gjî£y
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

25 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	g≠i
.
	g˛õ¡
.
	gWebResour˚
;

26 
imp‹t
 
	gcom
.
	gsun
.
	gjî£y
.
	gc‹e
.
	ghódî
.
	gMedüTy≥s
;

33 
public
 cœs†
	cWadlTe°
 
exãnds
 
	mBa£
 {

34 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
WadlTe°
.
˛ass
);

36 @
Te°


37 
public
 
	$ã°Aµliˇti⁄Wadl
() {

38 
WebResour˚
 
r
 = 
˛õ¡
.
	`ªsour˚
(
BASEURI
);

39 
Såög
 
£rvi˚Wadl
 = 
r
.
	`∑th
("application.wadl").

40 
	`ac˚±
(
MedüTy≥s
.
WADL
).
	`gë
(
Såög
.
˛ass
);

41 
	`as£πTrue
("Something wrong. Returned wadlÜengthÇot > 0.",

42 
£rvi˚Wadl
.
	`Àngth
() > 0);

44 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/blockingqueue.h

19 #i‚de‡
__BLOCKINGQUEUE_H__


20 
	#__BLOCKINGQUEUE_H__


	)

22 
	~<deque
>

24 
	~"muãx.h
"

26 
usög
 
«me•a˚
 
	g°d
;

27 
USING_ZKFUSE_NAMESPACE


29 
«me•a˚
 
	gzk
 {

37 
	gãm∂©e
 <
˛ass
 
	gE
>

38 ˛as†
	cBlockögQueue
 {

39 
	gpublic
:

47 
put
(
E
 
e
);

58 
E
 
èke
(
öt32_t
 
timeout
 = 0, 
boﬁ
 *
timedOut
 = 
NULL
);

65 
size
() const;

72 
boﬁ
 
em±y
() const;

74 
	g¥iv©e
:

80 
deque
<
E
> 
m_queue
;

85 
muèbÀ
 
	gzkfu£
::
Muãx
 
m_muãx
;

90 
muèbÀ
 
C⁄d
 
	gm_c⁄d
;

94 
	gãm∂©e
<
˛ass
 
	gE
>

95 
	gBlockögQueue
<
	gE
>::
	$size
() const {

96 
size
;

97 
m_muãx
.
	`Acquúe
();

98 
size
 = 
m_queue
.
	`size
();

99 
m_muãx
.
	`Rñó£
();

100  
size
;

101 
	}
}

103 
	gãm∂©e
<
˛ass
 
	gE
>

104 
boﬁ
 
	gBlockögQueue
<
	gE
>::
	$em±y
() const {

105 
boﬁ
 
isEm±y
;

106 
m_muãx
.
	`Acquúe
();

107 
isEm±y
 = 
m_queue
.
	`em±y
();

108 
m_muãx
.
	`Rñó£
();

109  
isEm±y
;

110 
	}
}

112 
	gãm∂©e
<
˛ass
 
	gE
>

113 
	gBlockögQueue
<
	gE
>::
	$put
(
E
 
e
) {

114 
m_muãx
.
	`Acquúe
();

115 
m_queue
.
	`push_back
–
e
 );

116 
m_c⁄d
.
	`Sig«l
();

117 
m_muãx
.
	`Rñó£
();

118 
	}
}

120 
	gãm∂©e
<
˛ass
 
	gE
>

121 
E
 
	gBlockögQueue
<
	gE
>::
	$èke
(
öt32_t
 
timeout
, 
boﬁ
 *
timedOut
) {

122 
m_muãx
.
	`Acquúe
();

123 
boﬁ
 
hasResu…
 = 
åue
;

124 
m_queue
.
	`em±y
()) {

125 i‡(
timeout
 <= 0) {

126 
m_c⁄d
.
	`Waô
–
m_muãx
 );

128 i‡(!
m_c⁄d
.
	`Waô
–
m_muãx
, 
timeout
 )) {

129 
hasResu…
 = 
Ál£
;

134 i‡(
hasResu…
) {

135 
E
 
e
 = 
m_queue
.
	`‰⁄t
();

136 
m_queue
.
	`p›_‰⁄t
();

137 
m_muãx
.
	`Rñó£
();

138 i‡(
timedOut
) {

139 *
timedOut
 = 
Ál£
;

141  
e
;

143 
m_muãx
.
	`Rñó£
();

144 i‡(
timedOut
) {

145 *
timedOut
 = 
åue
;

147  
	`E
();

149 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/event.h

19 #i‚de‡
__EVENT_H__


20 
	#__EVENT_H__


	)

22 
	~<°rög
>

23 
	~<£t
>

24 
	~<deque
>

25 
	~<Æg‹ôhm
>

26 #ifde‡
GCC4


27 
	~<å1/mem‹y
>

28 
usög
 
«me•a˚
 
	g°d
::
å1
;

30 
	~<boo°/sh¨ed_±r.hµ
>

31 
usög
 
«me•a˚
 
	gboo°
;

34 
	~"log.h
"

35 
	~"blockögqueue.h
"

36 
	~"muãx.h
"

37 
	~"thªad.h
"

39 
usög
 
«me•a˚
 
	g°d
;

40 
usög
 
«me•a˚
 
	gzk
;

42 
«me•a˚
 
	gzkfu£
 {

45 
	gãm∂©e
<
ty≥«me
 
	gE
>

46 
˛ass
 
	gEvítSour˚
;

52 
	gãm∂©e
<
ty≥«me
 
	gE
>

53 ˛as†
	cEvítLi°íî
 {

54 
	gpublic
:

63 
vútuÆ
 
evítRe˚ived
(c⁄° 
EvítSour˚
<
E
> &
sour˚
, c⁄° E &
e
) = 0;

74 
	gãm∂©e
<
ty≥«me
 
	gE
>

75 ˛as†
	cEvítSour˚
 {

76 
	gpublic
:

81 
£t
<
	tEvítLi°íî
<
	tE
> *> 
	tEvítLi°íîs
;

88 
addLi°íî
(
EvítLi°íî
<
E
> *
li°íî
) {

89 
	gm_li°íîs
.
ö£π
–
li°íî
 );

97 
ªmoveLi°íî
(
EvítLi°íî
<
E
> *
li°íî
) {

98 
	gm_li°íîs
.
îa£
–
li°íî
 );

104 
	gvútuÆ
 ~
EvítSour˚
() {}

106 
	g¥Ÿe˘ed
:

120 
fúeEvít
(c⁄° 
E
 &
evít
);

128 
vútuÆ
 
fúeEvít
(
EvítLi°íî
<
E
> *
li°íî
, c⁄° E &
evít
);

130 
	g¥iv©e
:

135 
EvítLi°íîs
 
m_li°íîs
;

142 ˛as†
	cAb°ø˘EvítWøµî
 {

143 
	gpublic
:

148 
vútuÆ
 ~
Ab°ø˘EvítWøµî
() {}

153 
vútuÆ
 *
gëWø≥e
() = 0;

159 
	gãm∂©e
<
ty≥«me
 
	gE
>

160 ˛as†
	cEvítWøµî
 : 
public
 
Ab°ø˘EvítWøµî
 {

161 
public
:

162 
EvítWøµî
(c⁄° 
E
 &
e
Ë: 
m_e
(e) {

164 *
gëWø≥e
() {

165  &
m_e
;

167 
	g¥iv©e
:

168 
E
 
m_e
;

174 ˛as†
	cGíîicEvít
 {

175 
	gpublic
:

180 
GíîicEvít
(Ë: 
m_ty≥
(0) {}

188 
GíîicEvít
(
ty≥
, 
Ab°ø˘EvítWøµî
 *
evítWøµî
) :

189 
m_ty≥
(
ty≥
), 
m_evítWøµî
(
evítWøµî
) {

197 
gëTy≥
(Ëc⁄° {  
	gm_ty≥
; }

204 *
gëEvít
(Ëc⁄° {  
	gm_evítWøµî
->
gëWø≥e
(); }

206 
	g¥iv©e
:

211 
m_ty≥
;

216 
	gsh¨ed_±r
<
	gAb°ø˘EvítWøµî
> 
	gm_evítWøµî
;

225 
	gãm∂©e
<
ty≥«me
 
	gE
, c⁄° 
	gty≥
>

226 
˛ass
 
	gEvítLi°íîAd≠ãr
 : 
public
 
vútuÆ
 
EvítLi°íî
<
E
>,

227 
public
 
vútuÆ
 
	gEvítSour˚
<
	gGíîicEvít
>

229 
	gpublic
:

236 
EvítLi°íîAd≠ãr
(
EvítSour˚
<
E
> &
evítSour˚
) {

237 
evítSour˚
.
addLi°íî
(
this
);

240 
evítRe˚ived
(c⁄° 
EvítSour˚
<
E
> &
sour˚
, c⁄° E &
e
) {

241 
Ab°ø˘EvítWøµî
 *
	gwøµî
 = 
√w
 
EvítWøµî
<
E
>(
e
);

242 
GíîicEvít
 
evít
(
ty≥
, 
wøµî
);

243 
fúeEvít
–
evít
 );

256 
	gãm∂©e
<
ty≥«me
 
	gE
>

257 
˛ass
 
	gSynchr⁄ousEvítAd≠ãr
 : 
public
 
EvítLi°íî
<
E
> {

258 
public
:

260 
evítRe˚ived
(c⁄° 
EvítSour˚
<
E
> &
sour˚
, c⁄° E &
e
) {

261 
	gm_queue
.
put
–
e
 );

270 
E
 
gëNextEvít
() {

271  
	gm_queue
.
èke
();

280 
boﬁ
 
hasEvíts
() const {

281  (
	gm_queue
.
em±y
(Ë? 
	gÁl£
 : 
åue
);

287 
	gvútuÆ
 ~
Synchr⁄ousEvítAd≠ãr
() {}

289 
	g¥iv©e
:

294 
BlockögQueue
<
E
> 
m_queue
;

301 
öt32_t
 
	tTimîId
;

306 
	gãm∂©e
<
ty≥«me
 
	gT
>

307 ˛as†
	cTimîEvít
 {

308 
	gpublic
:

317 
TimîEvít
(
TimîId
 
id
, 
öt64_t
 
Æ¨mTime
, c⁄° 
T
 &
u£rD©a
) :

318 
m_id
(
id
), 
m_Æ¨mTime
(
Æ¨mTime
), 
m_u£rD©a
(
u£rD©a
)

324 
TimîEvít
(Ë: 
m_id
(-1), 
m_Æ¨mTime
(-1) {}

331 
TimîId
 
gëID
(Ëc⁄° {  
	gm_id
; }

338 
öt64_t
 
gëAœrmTime
(Ëc⁄° {  
	gm_Æ¨mTime
; }

345 
T
 c⁄° &
gëU£rD©a
(Ëc⁄° {  
	gm_u£rD©a
; }

351 
boﬁ
 
	g›î©‹
<(c⁄° 
öt64_t
 
	gÆ¨mTime
) const {

352  
	gm_Æ¨mTime
 < 
	gÆ¨mTime
;

355 
	g¥iv©e
:

360 
TimîId
 
m_id
;

365 
öt64_t
 
	gm_Æ¨mTime
;

370 
T
 
	gm_u£rD©a
;

374 
	gãm∂©e
<
ty≥«me
 
	gT
>

375 
˛ass
 
	gTimî
 : 
public
 
EvítSour˚
<
TimîEvít
<
T
> > {

376 
public
:

381 
Timî
(Ë: 
m_cuºítEvítID
(0), 
m_ãrmö©ög
(
Ál£
) {

382 
	gm_w‹kîThªad
.
Cª©e
–*
this
, &
Timî
<
T
>::
£ndAœrms
 );

388 ~
Timî
() {

389 
	gm_ãrmö©ög
 = 
åue
;

390 
	gm_lock
.
nŸify
();

391 
	gm_w‹kîThªad
.
Joö
();

403 
TimîId
 
scheduÀA·î
(
öt64_t
 
timeFromNow
, c⁄° 
T
 &
u£rD©a
) {

404  
scheduÀAt
–
gëCuºítTimeMûlis
(Ë+ 
timeFromNow
, 
u£rD©a
 );

417 
TimîId
 
scheduÀAt
(
öt64_t
 
absTime
, c⁄° 
T
 &
u£rD©a
) {

418 
	gm_lock
.
lock
();

419 
ty≥«me
 
	gQueueTy≥
::
ôî©‹
 
pos
 =

420 
lowî_bound
–
m_queue
.
begö
(), m_queue.
íd
(), 
absTime
 );

421 
TimîId
 
	gid
 = 
m_cuºítEvítID
++;

422 
	gTimîEvít
<
	gT
> 
evít
(
id
, 
absTime
, 
u£rD©a
);

423 
	gm_queue
.
ö£π
–
pos
, 
evít
 );

424 
	gm_lock
.
nŸify
();

425 
	gm_lock
.
u∆ock
();

426  
	gid
;

434 
öt64_t
 
gëCuºítTimeMûlis
() {

435 
timevÆ
 
	gnow
;

436 
gëtimeofday
–&
now
, 
NULL
 );

437  
	gnow
.
	gtv_£c
 * 1000LL +Çow.
	gtv_u£c
 / 1000;

448 
boﬁ
 
ˇn˚lAœrm
(
TimîId
 
evítID
) {

449 
boﬁ
 
	gˇn˚Àd
 = 
Ál£
;

450 
	gm_lock
.
lock
();

451 
ty≥«me
 
	gQueueTy≥
::
ôî©‹
 
i
;

452 
	gi
 = 
m_queue
.
begö
(); i !m_queue.
íd
(); ++i) {

453 i‡(
	gevítID
 =
i
->
gëID
()) {

454 
m_queue
.
îa£
–
i
 );

455 
	gˇn˚Àd
 = 
åue
;

459 
	gm_lock
.
u∆ock
();

460  
	gˇn˚Àd
;

466 
£ndAœrms
() {

468 !
	gm_ãrmö©ög
) {

469 
	gm_lock
.
lock
();

471 i‡(
	gm_queue
.
em±y
()) {

473 
	gm_lock
.
waô
( 100 );

475 
boﬁ
 
	gfúe
 = 
Ál£
;

476 i‡(!
	gm_queue
.
em±y
()) {

478 
	gTimîEvít
<
	gT
> 
	gevít
 = 
m_queue
.
‰⁄t
();

480 
öt64_t
 
	gtimeToWaô
 =

481 
evít
.
gëAœrmTime
(Ë- 
gëCuºítTimeMûlis
();

482 i‡(
	gtimeToWaô
 <= 0) {

483 
m_queue
.
p›_‰⁄t
();

487 
	gfúe
 = 
åue
;

489 
	gm_lock
.
waô
–
timeToWaô
 );

491 
	gm_lock
.
u∆ock
();

492 i‡(
	gfúe
) {

493 
fúeEvít
–
evít
 );

496 
	gm_lock
.
u∆ock
();

501 
	g¥iv©e
:

506 
deque
<
	tTimîEvít
<
	tT
> > 
	tQueueTy≥
;

512 
TimîId
 
	gm_cuºítEvítID
;

517 
QueueTy≥
 
	gm_queue
;

522 
Lock
 
	gm_lock
;

527 
	gCXXThªad
<
	gTimî
<
	gT
> > 
	gm_w‹kîThªad
;

532 vﬁ©ûê
boﬁ
 
	gm_ãrmö©ög
;

536 
	gãm∂©e
<
ty≥«me
 
	gE
>

537 
	gEvítSour˚
<
	gE
>::
	$fúeEvít
(c⁄° 
E
 &
evít
) {

538 
ty≥«me
 
EvítLi°íîs
::
ôî©‹
 
i
 = 
m_li°íîs
.
	`begö
();

539 
i
 !
m_li°íîs
.
	`íd
();

540 ++
i
)

542 
	`fúeEvít
–*
i
, 
evít
 );

544 
	}
}

546 
	gãm∂©e
<
ty≥«me
 
	gE
>

547 
	gEvítSour˚
<
	gE
>::
fúeEvít
(
EvítLi°íî
<
E
> *
li°íî
, c⁄° E &
evít
) {

548 
	gli°íî
->
evítRe˚ived
–*
this
, 
evít
 );

	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/log.h

19 #i‚de‡
__LOG_H__


20 
	#__LOG_H__


	)

22 
	#ZKFUSE_NAMESPACE
 
zkfu£


	)

23 
	#START_ZKFUSE_NAMESPACE
 
«me•a˚
 
ZKFUSE_NAMESPACE
 {

	)

24 
	#END_ZKFUSE_NAMESPACE
 }

	)

25 
	#USING_ZKFUSE_NAMESPACE
 
usög
 
«me•a˚
 
ZKFUSE_NAMESPACE
;

	)

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<±hªad.h
>

31 
	~<log4cxx/loggî.h
>

32 
	~<log4cxx/¥›îtyc⁄figuøt‹.h
>

33 
	~<log4cxx/hñ≥rs/ex˚±i⁄.h
>

34 
usög
 
«me•a˚
 
	glog4cxx
;

35 
usög
 
«me•a˚
 
	glog4cxx
::
hñ≥rs
;

37 
	#PRINTIP
(
x
Ë((
uöt8_t
*)&x)[0], ((uint8_t*)&x)[1], \

38 ((
uöt8_t
*)&
x
)[2], ((uöt8_t*)&x)[3]

	)

40 
	#IPFMT
 "%u.%u.%u.%u"

	)

42 
	#DECLARE_LOGGER
(
v¨Name
) \

43 
LoggîPå
 
v¨Name
;

	)

45 
	#DEFINE_LOGGER
(
v¨Name
, 
logName
) \

46 
LoggîPå
 
v¨Name
 = 
Loggî
::
	`gëLoggî
–
logName
 );

	)

48 
	#MAX_BUFFER_SIZE
 20000

	)

50 
	#SPRINTF_LOG_MSG
(
buf„r
, 
fmt
, 
¨gs
...) \

51 
buf„r
[
MAX_BUFFER_SIZE
]; \

52 
	`¢¥ötf
–
buf„r
, 
MAX_BUFFER_SIZE
, 
fmt
, ##
¨gs
 );

	)

55 #ifde‡
LOG4CXX_TRACE


56 
	#LOG_TRACE
(
loggî
, 
fmt
, 
¨gs
...) \

57 i‡(
loggî
->
	`isTø˚E«bÀd
()) { \

58 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

59 
	`LOG4CXX_TRACE
–
loggî
, 
__tmp
 ); \

60 }

	)

62 
	#LOG_TRACE
(
loggî
, 
fmt
, 
¨gs
...) \

63 i‡(
loggî
->
	`isDebugE«bÀd
()) { \

64 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

65 
	`LOG4CXX_DEBUG
–
loggî
, 
__tmp
 ); \

66 }

	)

69 
	#LOG_DEBUG
(
loggî
, 
fmt
, 
¨gs
...) \

70 i‡(
loggî
->
	`isDebugE«bÀd
()) { \

71 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

72 
	`LOG4CXX_DEBUG
–
loggî
, 
__tmp
 ); \

73 }

	)

75 
	#LOG_INFO
(
loggî
, 
fmt
, 
¨gs
...) \

76 i‡(
loggî
->
	`isInfoE«bÀd
()) { \

77 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

78 
	`LOG4CXX_INFO
–
loggî
, 
__tmp
 ); \

79 }

	)

81 
	#LOG_WARN
(
loggî
, 
fmt
, 
¨gs
...) \

82 i‡(
loggî
->
	`isW¨nE«bÀd
()) { \

83 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

84 
	`LOG4CXX_WARN
–
loggî
, 
__tmp
 ); \

85 }

	)

87 
	#LOG_ERROR
(
loggî
, 
fmt
, 
¨gs
...) \

88 i‡(
loggî
->
	`isEº‹E«bÀd
()) { \

89 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

90 
	`LOG4CXX_ERROR
–
loggî
, 
__tmp
 ); \

91 }

	)

93 
	#LOG_FATAL
(
loggî
, 
fmt
, 
¨gs
...) \

94 i‡(
loggî
->
	`isF©ÆE«bÀd
()) { \

95 
	`SPRINTF_LOG_MSG
–
__tmp
, 
fmt
, ##
¨gs
 ); \

96 
	`LOG4CXX_FATAL
–
loggî
, 
__tmp
 ); \

97 }

	)

99 #ifde‡
DISABLE_TRACE


100 
	#TRACE
(
loggî
, 
x
)

	)

102 
	#TRACE
(
loggî
, 
x
) \

103 ˛as†
	cTø˚
 { \

104 
public
: \

105 
	$Tø˚
(c⁄° * 
p
Ë: 
	$_p
(
p
) { \

106 
	`LOG_TRACE
(
loggî
, "%†%∞E¡î", 
__PRETTY_FUNCTION__
, 
p
); \

108 ~
	$Tø˚
() { \

109 
	`LOG_TRACE
(
loggî
, "%†%∞Exô", 
__PRETTY_FUNCTION__
, 
_p
); \

110 
	}
} \

111 c⁄° * 
_p
; \

112 } 
	`åa˚Obj
(
x
);

	)

	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/mutex.h

19 #i‚de‡
__MUTEX_H__


20 
	#__MUTEX_H__


	)

22 
	~<±hªad.h
>

23 
	~<î∫o.h
>

24 
	~<sys/time.h
>

26 
	~"log.h
"

28 
START_ZKFUSE_NAMESPACE


30 
˛ass
 
	gC⁄d
;

32 ˛as†
	cMuãx
 {

33 
‰õnd
 
˛ass
 
	mC⁄d
;

34 
	mpublic
:

35 
	$Muãx
() {

36 
	`±hªad_muãx©å_öô
–&
m_muãxAâr
 );

37 
	`±hªad_muãx©å_£ây≥
–&
m_muãxAâr
, 
PTHREAD_MUTEX_RECURSIVE_NP
 );

38 
	`±hªad_muãx_öô
–&
muãx
, &
m_muãxAâr
 );

40 ~
	$Muãx
() {

41 
	`±hªad_muãx_de°roy
(&
muãx
);

42 
	`±hªad_muãx©å_de°roy
–&
m_muãxAâr
 );

43 
	}
}

44 
	$Acquúe
(Ë{ 
	`Lock
(); 
	}
}

45 
	$Rñó£
(Ë{ 
	`U∆ock
(); 
	}
}

46 
	$Lock
() {

47 
	`±hªad_muãx_lock
(&
muãx
);

48 
	}
}

49 
	$TryLock
() {

50  
	`±hªad_muãx_åylock
(&
muãx
);

51 
	}
}

52 
	$U∆ock
() {

53 
	`±hªad_muãx_u∆ock
(&
muãx
);

54 
	}
}

55 
	g¥iv©e
:

56 
±hªad_muãx_t
 
muãx
;

57 
±hªad_muãx©å_t
 
	gm_muãxAâr
;

60 ˛as†
	cAutoLock
 {

61 
	mpublic
:

62 
	$AutoLock
(
Muãx
& 
muãx
Ë: 
	$_muãx
(
muãx
) {

63 
muãx
.
	`Lock
();

65 ~
	$AutoLock
() {

66 
_muãx
.
	`U∆ock
();

67 
	}
}

68 
	g¥iv©e
:

69 
‰õnd
 
˛ass
 
AutoU∆ockTemp
;

70 
	gMuãx
& 
	g_muãx
;

73 ˛as†
	cAutoU∆ockTemp
 {

74 
	mpublic
:

75 
	$AutoU∆ockTemp
(
AutoLock
 & 
autoLock
Ë: 
	$_autoLock
(
autoLock
) {

76 
_autoLock
.
_muãx
.
	`U∆ock
();

78 ~
	$AutoU∆ockTemp
() {

79 
_autoLock
.
_muãx
.
	`Lock
();

80 
	}
}

81 
	g¥iv©e
:

82 
AutoLock
 & 
_autoLock
;

85 ˛as†
	cC⁄d
 {

86 
	mpublic
:

87 
	$C⁄d
() {

88 
±hªad_c⁄d©å_t
 
©å
;

89 
boﬁ
 
öôed
 = 
Ál£
;

90 if(!
öôed
) {

91 
öôed
 = 
åue
;

92 
	`±hªad_c⁄d©å_öô
(&
©å
);

94 
	`±hªad_c⁄d_öô
(&
_c⁄d
, &
©å
);

96 ~
	$C⁄d
() {

97 
	`±hªad_c⁄d_de°roy
(&
_c⁄d
);

98 
	}
}

100 
	$Waô
(
Muãx
& 
muãx
) {

101 
	`±hªad_c⁄d_waô
(&
_c⁄d
, &
muãx
.mutex);

102 
	}
}

104 
boﬁ
 
	$Waô
(
Muãx
& 
muãx
, 
timeout
) {

105 
timevÆ
 
now
;

106 
	`gëtimeofday
–&
now
, 
NULL
 );

107 
time•ec
 
ab°ime
;

108 
öt64_t
 
mi¸oSecs
 = 
now
.
tv_£c
 * 1000000LL +Çow.
tv_u£c
;

109 
mi¸oSecs
 +
timeout
 * 1000;

110 
ab°ime
.
tv_£c
 = 
mi¸oSecs
 / 1000000LL;

111 
ab°ime
.
tv_n£c
 = (
mi¸oSecs
 % 1000000LL) * 1000;

112 i‡(
	`±hªad_c⁄d_timedwaô
(&
_c⁄d
, &
muãx
.muãx, &
ab°ime
Ë=
ETIMEDOUT
) {

113  
Ál£
;

115  
åue
;

117 
	}
}

119 
	$Sig«l
() {

120 
	`±hªad_c⁄d_sig«l
(&
_c⁄d
);

121 
	}
}

123 
	g¥iv©e
:

124 
±hªad_c⁄d_t
 
_c⁄d
;

130 ˛as†
	cLock
 {

131 
	mpublic
:

133 
	$lock
() {

134 
m_muãx
.
	`Lock
();

137 
	$u∆ock
() {

138 
m_muãx
.
	`U∆ock
();

139 
	}
}

141 
	$waô
() {

142 
m_c⁄d
.
	`Waô
–
m_muãx
 );

143 
	}
}

145 
boﬁ
 
	$waô
(
timeout
) {

146  
m_c⁄d
.
	`Waô
–
m_muãx
, 
timeout
 );

147 
	}
}

149 
	$nŸify
() {

150 
m_c⁄d
.
	`Sig«l
();

151 
	}
}

153 
	g¥iv©e
:

158 
Muãx
 
m_muãx
;

163 
C⁄d
 
	gm_c⁄d
;

166 
	gEND_ZKFUSE_NAMESPACE


	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/thread.h

19 #i‚de‡
__THREAD_H__


20 
	#__THREAD_H__


	)

22 
	~<î∫o.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

25 
	~<±hªad.h
>

27 
	~"log.h
"

29 
START_ZKFUSE_NAMESPACE


31 ˛as†
	cThªad
 {

32 
	mpublic
:

33 c⁄° 
size_t
 
deÁu…SèckSize
 = 1024 * 1024;

34 * (*
	tThªadFunc
) (*);

35 
	$Thªad
(
size_t
 
°ackSize
 = 
deÁu…SèckSize
)

36 : 
	`_°ackSize
(
°ackSize
), 
	`_˘x
(
NULL
), 
	$_func
(
NULL
)

38 
	`mem£t
–&
mThªad
, 0, (mThread) );

40 ~
	$Thªad
(Ë{ 
	}
}

42 
Cª©e
(* 
˘x
, 
ThªadFunc
 
func
);

43 
	$Joö
() {

46 i‡(
_func
 !
NULL
) {

47 
	`±hªad_joö
(
mThªad
, 0);

49 
	}
}

50 
	g¥iv©e
:

51 
±hªad_t
 
mThªad
;

52 *
	g_˘x
;

53 
ThªadFunc
 
	g_func
;

54 
size_t
 
	g_°ackSize
;

58 
	gãm∂©e
<
ty≥«me
 
	gT
>

59 
	sThªadC⁄ãxt
 {

60 (
	mT
::*
	tFuncPå
) ();

61 
ThªadC⁄ãxt
(
T
& 
˘x
, 
FuncPå
 
func
Ë: 
_˘x
(˘x), 
_func
(func) {}

62 
run
() {

63 (
	m_˘x
.*
	m_func
)();

65 
	mT
& 
	m_˘x
;

66 
FuncPå
 
	m_func
;

69 
	gãm∂©e
<
ty≥«me
 
	gT
>

70 * 
	$ThªadExec
(*
obj
) {

71 
ThªadC⁄ãxt
<
T
>* 
tc
 = (ThªadC⁄ãxt<T>*)(
obj
);

72 
	`as£π
(
tc
 != 0);

73 
tc
->
	`run
();

75 
	}
}

77 
	gãm∂©e
 <
ty≥«me
 
	gT
>

78 ˛as†
	cCXXThªad
 : 
public
 
Thªad
 {

79 
public
:

80 (
T
::*
	tFuncPå
) ();

81 
CXXThªad
(
size_t
 
°ackSize
 = 
Thªad
::
deÁu…SèckSize
)

82 : 
Thªad
(
°ackSize
), 
	$˘x
(0) {}

83 ~
	$CXXThªad
(Ë{ i‡(
˘x
Ë
dñëe
 ctx; 
	}
}

85 
	$Cª©e
(
T
& 
obj
, 
FuncPå
 
func
) {

86 
	`as£π
(
˘x
 == 0);

87 
˘x
 = 
√w
 
ThªadC⁄ãxt
<
T
>(
obj
, 
func
);

88 
Thªad
::
	`Cª©e
(
˘x
, 
ThªadExec
<
T
>);

89 
	}
}

91 
	g¥iv©e
:

92 
ThªadC⁄ãxt
<
T
>* 
˘x
;

96 
	gEND_ZKFUSE_NAMESPACE


	@/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/zkadapter.h

19 #i‚de‡
__ZKADAPTER_H__


20 
	#__ZKADAPTER_H__


	)

22 
	~<°rög
>

23 
	~<ve˘‹
>

24 
	~<m≠
>

27 
	~"zookì≥r.h
"

30 
	~"log.h
"

31 
	~"muãx.h
"

32 
	~"thªad.h
"

33 
	~"blockögqueue.h
"

34 
	~"evít.h
"

36 
usög
 
«me•a˚
 
°d
;

37 
usög
 
«me•a˚
 
	gzkfu£
;

39 
«me•a˚
 
	gzk
 {

44 ˛as†
	cZooKì≥rEx˚±i⁄
 :

45 
public
 
°d
::
ex˚±i⁄


47 
public
:

54 
ZooKì≥rEx˚±i⁄
(c⁄° 
°rög
 &
msg
) :

55 
m_mesßge
(
msg
), 
m_zkEº‹Code
(0)

64 
ZooKì≥rEx˚±i⁄
(c⁄° 
°rög
 &
msg
, 
îr‹Code
) :

65 
m_zkEº‹Code
(
îr‹Code
)

67 
tmp
[100];

68 
•rötf
–
tmp
, " (ZKÉº‹ code: %d)", 
îr‹Code
 );

69 
	gm_mesßge
 = 
msg
 + 
tmp
;

75 ~
ZooKì≥rEx˚±i⁄
(Ë
throw
() {}

80 c⁄° *
wh©
(Ëc⁄° 
throw
() {

81  
	gm_mesßge
.
c_°r
();

87 
gëZKEº‹Code
() const {

88  
	gm_zkEº‹Code
;

91 
	g¥iv©e
:

96 
°rög
 
m_mesßge
;

101 
	gm_zkEº‹Code
;

108 ˛as†
	cZooKì≥rC⁄fig


110 
	gpublic
:

120 
ZooKì≥rC⁄fig
(c⁄° 
°rög
 &
ho°s
,

121 
Àa£Timeout
,

122 
boﬁ
 
autoRec⁄√˘
 = 
åue
,

123 
c⁄√˘Timeout
 = 15000) :

124 
m_ho°s
(
ho°s
), 
m_Àa£Timeout
(
Àa£Timeout
),

125 
m_autoRec⁄√˘
(
autoRec⁄√˘
), 
m_c⁄√˘Timeout
(
c⁄√˘Timeout
) {}

130 
°rög
 
gëHo°s
(Ëc⁄° {  
	gm_ho°s
; }

135 
gëLó£Timeout
(Ëc⁄° {  
	gm_Àa£Timeout
; }

141 
boﬁ
 
gëAutoRec⁄√˘
(Ëc⁄° {  
	gm_autoRec⁄√˘
; }

148 
gëC⁄√˘Timeout
(Ëc⁄° {  
	gm_c⁄√˘Timeout
; }

150 
	g¥iv©e
:

155 c⁄° 
°rög
 
m_ho°s
;

160 c⁄° 
	gm_Àa£Timeout
;

166 c⁄° 
boﬁ
 
	gm_autoRec⁄√˘
;

172 c⁄° 
	gm_c⁄√˘Timeout
;

179 ˛as†
	cZKW©chîEvít


181 
	gpublic
:

186 *
	tC⁄ãxtTy≥
;

196 
ZKW©chîEvít
() :

197 
m_ty≥
(-1), 
m_°©e
(-1), 
m_∑th
(""), 
mp_c⁄ãxt
(
NULL
) {}

207 
ZKW©chîEvít
(
ty≥
, 
°©e
, c⁄° 
°rög
 &
∑th
,

208 
C⁄ãxtTy≥
 
c⁄ãxt
 = 
NULL
) :

209 
m_ty≥
(
ty≥
), 
m_°©e
(
°©e
), 
m_∑th
(
∑th
), 
mp_c⁄ãxt
(
c⁄ãxt
) {}

211 
gëTy≥
(Ëc⁄° {  
	gm_ty≥
; }

212 
gëSèã
(Ëc⁄° {  
	gm_°©e
; }

213 
°rög
 c⁄° &
gëP©h
(Ëc⁄° {  
	gm_∑th
; }

214 
C⁄ãxtTy≥
 
gëC⁄ãxt
(Ëc⁄° {  
	gmp_c⁄ãxt
; }

216 
boﬁ
 
	g›î©‹
==(c⁄° 
ZKW©chîEvít
 &
we
) const {

217  
m_ty≥
 =
we
.m_ty≥ && 
m_°©e
 == we.m_state

218 && 
m_∑th
 =
we
.m_∑th && 
mp_c⁄ãxt
 == we.mp_context;

221 
	g¥iv©e
:

228 c⁄° 
m_ty≥
;

236 c⁄° 
	gm_°©e
;

242 c⁄° 
°rög
 
	gm_∑th
;

247 
C⁄ãxtTy≥
 
	gmp_c⁄ãxt
;

254 
	gEvítSour˚
<
	tZKW©chîEvít
> 
	tZKEvítSour˚
;

259 
	gEvítLi°íî
<
	tZKW©chîEvít
> 
	tZKEvítLi°íî
;

264 ˛as†
	cZooKì≥rAd≠ãr


265 : 
public
 
ZKEvítSour˚


267 
public
:

271 
‰õnd
 
zkW©chî
(
zh™dÀ_t
 *, , , c⁄° *, *
w©chîCtx
);

276 *
	tC⁄ãxtTy≥
;

281 
	gm≠
<
	tZKEvítLi°íî
 *, 
	tC⁄ãxtTy≥
> 
	tLi°íî2C⁄ãxt
;

286 
	gm≠
<
	t°rög
, 
	tLi°íî2C⁄ãxt
> 
	tP©h2Li°íî2C⁄ãxt
;

292 
	eAd≠ãrSèã
 {

294 
	gAS_DISCONNECTED
 = 0,

296 
	gAS_CONNECTING
,

298 
	gAS_CONNECTED
,

300 
	gAS_SESSION_EXPIRED


318 
ZooKì≥rAd≠ãr
(
ZooKì≥rC⁄fig
 
c⁄fig
,

319 
ZKEvítLi°íî
 *
li°íî
 = 
NULL
,

320 
boﬁ
 
e°ablishC⁄√˘i⁄
 = 
Ál£
)

321 
throw
(
ZooKì≥rEx˚±i⁄
);

326 ~
ZooKì≥rAd≠ãr
();

331 c⁄° 
	gZooKì≥rC⁄fig
 &
gëZooKì≥rC⁄fig
() const {

332  
	gm_zkC⁄fig
;

342 
ªc⁄√˘
(Ë
throw
(
ZooKì≥rEx˚±i⁄
);

347 
disc⁄√˘
();

362 
boﬁ
 
¸óãNode
(c⁄° 
°rög
 &
∑th
,

363 c⁄° 
°rög
 &
vÆue
 = "",

364 
Êags
 = 0,

365 
boﬁ
 
¸óãAn˚°‹s
 = 
åue
)

366 
throw
(
ZooKì≥rEx˚±i⁄
);

383 
öt64_t
 
¸óãSequí˚
(c⁄° 
°rög
 &
∑th
,

384 c⁄° 
°rög
 &
vÆue
 = "",

385 
Êags
 = 0,

386 
boﬁ
 
¸óãAn˚°‹s
 = 
åue
)

387 
throw
(
ZooKì≥rEx˚±i⁄
);

402 
boﬁ
 
dñëeNode
(c⁄° 
°rög
 &
∑th
, boﬁ 
ªcursive
 = 
Ál£
, 
vîsi⁄
 = -1)

403 
throw
(
ZooKì≥rEx˚±i⁄
);

420 
boﬁ
 
nodeExi°s
(c⁄° 
°rög
 &
∑th
,

421 
ZKEvítLi°íî
 *
li°íî
 = 
NULL
,

422 *
c⁄ãxt
 = 
NULL
,

423 
Sèt
 *
°©
 = 
NULL
)

424 
throw
(
ZooKì≥rEx˚±i⁄
);

440 
gëNodeChûdªn
(
ve˘‹
<
°rög
> &
chûdªn
,

441 c⁄° 
°rög
 &
∑th
,

442 
ZKEvítLi°íî
 *
li°íî
 = 
NULL
,

443 *
c⁄ãxt
 = 
NULL
)

444 
throw
(
ZooKì≥rEx˚±i⁄
);

461 
°rög
 
gëNodeD©a
(c⁄° såög &
∑th
,

462 
ZKEvítLi°íî
 *
li°íî
 = 
NULL
,

463 *
c⁄ãxt
 = 
NULL
,

464 
Sèt
 *
°©
 = 
NULL
)

465 
throw
(
ZooKì≥rEx˚±i⁄
);

478 
£tNodeD©a
(c⁄° 
°rög
 &
∑th
, c⁄° såög &
vÆue
, 
vîsi⁄
 = -1)

479 
throw
(
ZooKì≥rEx˚±i⁄
);

489 
vÆid©eP©h
(c⁄° 
°rög
 &
∑th
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

497 
Ad≠ãrSèã
 
gëSèã
() const {

498  
	gm_°©e
;

501 
	g¥iv©e
:

506 
	eW©chabÀMëhod
 {

507 
NODE_EXISTS
 = 0,

508 
	gGET_NODE_CHILDREN
,

509 
	gGET_NODE_DATA


529 
boﬁ
 
¸óãNode
(c⁄° 
°rög
 &
∑th
,

530 c⁄° 
°rög
 &
vÆue
,

531 
Êags
,

532 
boﬁ
 
¸óãAn˚°‹s
,

533 
°rög
 &
¸óãdP©h
)

534 
throw
(
ZooKì≥rEx˚±i⁄
);

539 
h™dÀEvít
(
ty≥
, 
°©e
, c⁄° 
°rög
 &
∑th
);

546 
h™dÀEvít
(
ty≥
, 
°©e
, c⁄° 
°rög
 &
∑th
,

547 c⁄° 
Li°íî2C⁄ãxt
 &
li°íîs
);

552 
íqueueEvít
(
ty≥
, 
°©e
, c⁄° 
°rög
 &
∑th
);

557 
¥o˚ssEvíts
();

562 
¥o˚ssU£rEvíts
();

573 
ªgi°îC⁄ãxt
(
W©chabÀMëhod
 
mëhod
, c⁄° 
°rög
 &
∑th
,

574 
ZKEvítLi°íî
 *
li°íî
, 
C⁄ãxtTy≥
 
c⁄ãxt
);

587 
Li°íî2C⁄ãxt
 
födAndRemoveLi°íîC⁄ãxt
(
W©chabÀMëhod
 
mëhod
,

588 c⁄° 
°rög
 &
∑th
);

596 
£tSèã
(
Ad≠ãrSèã
 
√wSèã
);

605 
waôU¡ûC⁄√˘ed
()

606 
throw
(
ZooKì≥rEx˚±i⁄
);

615 
vîifyC⁄√˘i⁄
(Ë
throw
(
ZooKì≥rEx˚±i⁄
);

623 
gëRemaöögC⁄√˘Timeout
() {

624  
	gm_ªmaöögC⁄√˘Timeout
;

630 
ª£tRemaöögC⁄√˘Timeout
() {

631 
	gm_ªmaöögC⁄√˘Timeout
 = 
m_zkC⁄fig
.
gëC⁄√˘Timeout
();

639 
waôedF‹C⁄√˘
(
time
) {

640 
	gm_ªmaöögC⁄√˘Timeout
 -
time
;

643 
	g¥iv©e
:

648 
zkfu£
::
Muãx
 
m_zkC⁄ãxtsMuãx
;

656 
	gm≠
<, 
	gP©h2Li°íî2C⁄ãxt
> 
	gm_zkC⁄ãxts
;

661 c⁄° 
ZooKì≥rC⁄fig
 
	gm_zkC⁄fig
;

666 
zh™dÀ_t
 *
	gmp_zkH™dÀ
;

671 
	gBlockögQueue
<
	gZKW©chîEvít
> 
	gm_evíts
;

677 
	gBlockögQueue
<
	gZKW©chîEvít
> 
	gm_u£rEvíts
;

682 
	gCXXThªad
<
	gZooKì≥rAd≠ãr
> 
	gm_evítDi•©chî
;

687 
	gCXXThªad
<
	gZooKì≥rAd≠ãr
> 
	gm_u£rEvítDi•©chî
;

692 vﬁ©ûê
boﬁ
 
	gm_ãrmö©ög
;

697 vﬁ©ûê
boﬁ
 
	gm_c⁄√˘ed
;

702 
Ad≠ãrSèã
 
	gm_°©e
;

707 
Lock
 
	gm_°©eLock
;

712 
	gm_ªmaöögC⁄√˘Timeout
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zkperl/build/check_zk_version.c

20 
	~<°dio.h
>

21 
	~<zookì≥r/zookì≥r_vîsi⁄.h
>

23 
	~"check_zk_vîsi⁄.h
"

25 
	$maö
() {

26 
	`¥ötf
("%d.%d.%d\n", 
ZOO_MAJOR_VERSION
, 
ZOO_MINOR_VERSION
, 
ZOO_PATCH_VERSION
);

28 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zkperl/build/check_zk_version.h

21 #i‡!
deföed
(
ZOO_MAJOR_VERSION
) || ZOO_MAJOR_VERSION != 3 || \

22 !
deföed
(
ZOO_MINOR_VERSION
Ë|| 
	gZOO_MINOR_VERSION
 < 1 || \

23 !
deföed
(
ZOO_PATCH_VERSION
) || \

24 (
	gZOO_MINOR_VERSION
 =1 && 
ZOO_PATCH_VERSION
 < 1)

	@/home/pig/zookeeper-3.4.5/src/contrib/zkpython/src/c/pyzk_docstrings.h

19 #i‚de‡
PYZK_DOCSTRINGS_H


20 
	#PYZK_DOCSTRINGS_H


	)

22 c⁄° 
	gpyzk_a¸óã_doc
[] =

56 c⁄° 
	gpyzk_˛õ¡_id_doc
[] =

60 c⁄° 
	gpyzk_°©e_doc
[] =

64 c⁄° 
	gpyzk_adñëe_doc
[] =

87 c⁄° 
	gpyzk_´xi°s_doc
[] =

111 c⁄° 
	gpyzk_agë_doc
[] =

133 c⁄° 
	gpyzk_a£t_doc
[] =

162 c⁄° 
	gpyzk_agë_chûdªn_doc
[] =

187 c⁄° 
	gpyzk_async_doc
[] =

204 c⁄° 
	gpyzk_agë_a˛_doc
[] =

224 c⁄° 
	gpyzk_a£t_a˛_doc
[] =

245 c⁄° 
	gpyzk_zîr‹_doc
[] =

253 c⁄° 
	gpyzk_add_auth_doc
[] =

281 c⁄° 
	gpyzk_is_uƒecovîabÀ_doc
[] =

292 c⁄° 
	gpyzk_£t_debug_Àvñ_doc
[] =

301 c⁄° 
	gpyzk_£t_log_°ªam_doc
[] =

313 c⁄° 
	gpyzk_dëîmöi°ic_c⁄n_‹dî_doc
[] =

327 c⁄° 
	gpyzk_¸óã_doc
[] =

361 c⁄° 
	gpyzk_dñëe_doc
[] =

385 c⁄° 
	gpyzk_exi°s_doc
[] =

409 c⁄° 
	gpyzk_gë_chûdªn_doc
[] =

430 c⁄° 
	gpyzk_£t_doc
[] =

457 c⁄° 
	gpyzk_gë_a˛_doc
[] =

475 c⁄° 
	gpyzk_£t_a˛_doc
[] =

496 c⁄° 
	gpyzk_˛o£_doc
[] =

519 c⁄° 
	gpyzk_£t2_doc
[] =

545 c⁄° 
	gpyzk_öô_doc
[] =

571 c⁄° 
	gpyzk_gë_doc
[] =

	@/home/pig/zookeeper-3.4.5/src/contrib/zkpython/src/c/zookeeper.c

19 
	~<Pyth⁄.h
>

20 
	~<zookì≥r.h
>

21 
	~<as£π.h
>

25 
PyObje˘
 *
	gZooKì≥rEx˚±i⁄
 = 
NULL
;

26 
PyObje˘
 *
	gSy°emEº‹Ex˚±i⁄
;

27 
PyObje˘
 *
	gRu¡imeInc⁄si°ícyEx˚±i⁄
;

28 
PyObje˘
 *
	gD©aInc⁄si°ícyEx˚±i⁄
;

29 
PyObje˘
 *
	gC⁄√˘i⁄LossEx˚±i⁄
;

30 
PyObje˘
 *
	gM¨shÆlögEº‹Ex˚±i⁄
;

31 
PyObje˘
 *
	gUnim∂emíãdEx˚±i⁄
;

32 
PyObje˘
 *
	gO≥øti⁄TimeoutEx˚±i⁄
;

33 
PyObje˘
 *
	gBadArgumítsEx˚±i⁄
;

34 
PyObje˘
 *
	gInvÆidSèãEx˚±i⁄
;

36 
PyObje˘
 *
	gApiEº‹Ex˚±i⁄
;

37 
PyObje˘
 *
	gNoNodeEx˚±i⁄
;

38 
PyObje˘
 *
	gNoAuthEx˚±i⁄
;

39 
PyObje˘
 *
	gNodeExi°sEx˚±i⁄
;

40 
PyObje˘
 *
	gBadVîsi⁄Ex˚±i⁄
;

41 
PyObje˘
 *
	gNoChûdªnF‹EphemîÆsEx˚±i⁄
;

42 
PyObje˘
 *
	gNŸEm±yEx˚±i⁄
;

43 
PyObje˘
 *
	gSessi⁄ExpúedEx˚±i⁄
;

44 
PyObje˘
 *
	gSessi⁄MovedEx˚±i⁄
;

45 
PyObje˘
 *
	gInvÆidCÆlbackEx˚±i⁄
;

46 
PyObje˘
 *
	gInvÆidACLEx˚±i⁄
;

47 
PyObje˘
 *
	gAuthFaûedEx˚±i⁄
;

48 
PyObje˘
 *
	gClosögEx˚±i⁄
;

49 
PyObje˘
 *
	gNŸhögEx˚±i⁄
;

51 
PyObje˘
 *
	$îr_to_ex˚±i⁄
(
îrcode
) {

52 
îrcode
) {

53 
ZSYSTEMERROR
:

54  
Sy°emEº‹Ex˚±i⁄
;

55 
ZRUNTIMEINCONSISTENCY
:

56  
Ru¡imeInc⁄si°ícyEx˚±i⁄
;

57 
ZDATAINCONSISTENCY
:

58  
D©aInc⁄si°ícyEx˚±i⁄
;

59 
ZCONNECTIONLOSS
:

60  
C⁄√˘i⁄LossEx˚±i⁄
;

61 
ZMARSHALLINGERROR
:

62  
M¨shÆlögEº‹Ex˚±i⁄
;

63 
ZUNIMPLEMENTED
:

64  
Unim∂emíãdEx˚±i⁄
;

65 
ZOPERATIONTIMEOUT
:

66  
O≥øti⁄TimeoutEx˚±i⁄
;

67 
ZBADARGUMENTS
:

68  
BadArgumítsEx˚±i⁄
;

69 
ZINVALIDSTATE
:

70  
InvÆidSèãEx˚±i⁄
;

71 
ZAPIERROR
:

72  
ApiEº‹Ex˚±i⁄
;

73 
ZNONODE
:

74  
NoNodeEx˚±i⁄
;

75 
ZNOAUTH
:

76  
NoAuthEx˚±i⁄
;

77 
ZBADVERSION
:

78  
BadVîsi⁄Ex˚±i⁄
;

79 
ZNOCHILDRENFOREPHEMERALS
:

80  
NoChûdªnF‹EphemîÆsEx˚±i⁄
;

81 
ZNODEEXISTS
:

82  
NodeExi°sEx˚±i⁄
;

83 
ZINVALIDACL
:

84  
InvÆidACLEx˚±i⁄
;

85 
ZAUTHFAILED
:

86  
AuthFaûedEx˚±i⁄
;

87 
ZNOTEMPTY
:

88  
NŸEm±yEx˚±i⁄
;

89 
ZSESSIONEXPIRED
:

90  
Sessi⁄ExpúedEx˚±i⁄
;

91 
ZINVALIDCALLBACK
:

92  
InvÆidCÆlbackEx˚±i⁄
;

93 
ZSESSIONMOVED
:

94  
Sessi⁄MovedEx˚±i⁄
;

95 
ZOK
:

97  
NULL
;

99 
	}
}

102 
	#CHECK_ZHANDLE
(
z
Ëi‡–(zË< 0 || (zË>
num_zh™dÀs
) { \

103 
	`PyEº_SëSåög
–
ZooKì≥rEx˚±i⁄
, "zhandle out ofÑange" ); \

104  
NULL
; \

105 } i‡–
zh™dÀs
[(
z
)] =
NULL
 ) { \

106 
	`PyEº_SëSåög
(
ZooKì≥rEx˚±i⁄
, "zhandleálready freed"); \

107  
NULL
; \

108 }

	)

114 
	mzh™dÀ
;

115 
PyObje˘
 *
	mˇŒback
;

116 
	m≥rm™ít
;

117 }
	tpyw©chî_t
;

122 
pyw©chî_t
 **
	gw©chîs
;

127 
zh™dÀ_t
** 
	gzh™dÀs
 = 
NULL
;

128 
	gnum_zh™dÀs
 = 0;

129 
	gmax_zh™dÀs
 = 0;

130 
	#REAL_MAX_ZHANDLES
 32768

	)

138 
	$öô_zh™dÀs
(
num
) {

139 
zh™dÀs
 = 
	`mÆloc
((
zh™dÀ_t
*)*
num
);

140 
w©chîs
 = 
	`mÆloc
((
pyw©chî_t
*)*
num
);

141 i‡(
zh™dÀs
 =
NULL
 || 
w©chîs
 == NULL) {

144 
max_zh™dÀs
 = 
num
;

145 
num_zh™dÀs
 = 0;

146 
	`mem£t
(
zh™dÀs
, 0, (
zh™dÀ_t
*)*
max_zh™dÀs
);

148 
	}
}

158 
	$ªsize_zh™dÀs
() {

159 
zh™dÀ_t
 **
tmp
 = 
zh™dÀs
;

160 
pyw©chî_t
 ** 
wtmp
 = 
w©chîs
;

161 i‡(
max_zh™dÀs
 >
REAL_MAX_ZHANDLES
 >> 1) {

164 
max_zh™dÀs
 *= 2;

165 
zh™dÀs
 = 
	`mÆloc
((
zh™dÀ_t
*)*
max_zh™dÀs
);

166 i‡(
zh™dÀs
 =
NULL
) {

167 
	`PyEº_SëSåög
(
PyExc_Mem‹yEº‹
, "malloc forÇew zhandles failed");

170 
	`mem£t
(
zh™dÀs
, 0, (
zh™dÀ_t
*)*
max_zh™dÀs
);

171 
	`mem˝y
(
zh™dÀs
, 
tmp
, (
zh™dÀ_t
*)*
max_zh™dÀs
/2);

173 
w©chîs
 = 
	`mÆloc
((
pyw©chî_t
*)*
max_zh™dÀs
);

174 i‡(
w©chîs
 =
NULL
) {

175 
	`PyEº_SëSåög
(
PyExc_Mem‹yEº‹
, "malloc forÇew watchers failed");

178 
	`mem£t
(
w©chîs
, 0, (
pyw©chî_t
*)*
max_zh™dÀs
);

179 
	`mem˝y
(
w©chîs
, 
wtmp
, (
pyw©chî_t
*)*
max_zh™dÀs
/2);

181 
	`‰ì
(
wtmp
);

182 
	`‰ì
(
tmp
);

184 
	}
}

191 
	$√xt_zh™dÀ
() {

192 
i
 = 0;

193 
i
=0;i<
max_zh™dÀs
;++i) {

194 i‡(
zh™dÀs
[
i
] =
NULL
) {

195 
num_zh™dÀs
++;

196  
i
;

201 
	}
}

211 
pyw©chî_t
 *
	$¸óã_pyw©chî
(
zh
, 
PyObje˘
* 
cb
, 
≥rm™ít
)

213 
pyw©chî_t
 *
ªt
 = (pyw©chî_t*)
	`ˇŒoc
((pywatcher_t),1);

214 i‡(
ªt
 =
NULL
) {

215 
	`PyEº_SëSåög
(
PyExc_Mem‹yEº‹
, "calloc failed in create_pywatcher");

216  
NULL
;

218 
	`Py_INCREF
(
cb
);

219 
ªt
->
zh™dÀ
 = 
zh
;Ñë->
ˇŒback
 = 
cb
;Ñë->
≥rm™ít
 =Öermanent;

220  
ªt
;

221 
	}
}

225 
	$‰ì_pyw©chî
(
pyw©chî_t
 *
pw
)

227 i‡(
pw
 =
NULL
) {

230 
	`Py_DECREF
(
pw
->
ˇŒback
);

232 
	`‰ì
(
pw
);

233 
	}
}

238 
PyObje˘
 *
	$buûd_°©
–c⁄° 
Sèt
 *
°©
 )

240 i‡(
°©
 =
NULL
) {

241 
	`Py_INCREF
(
Py_N⁄e
);

242  
Py_N⁄e
;

244  
	`Py_BuûdVÆue
( "{s:K, s:K, s:K, s:K,"

247 "czxid", 
°©
->
czxid
,

248 "mzxid", 
°©
->
mzxid
,

249 "˘ime", 
°©
->
˘ime
,

250 "mtime", 
°©
->
mtime
,

251 "vîsi⁄", 
°©
->
vîsi⁄
,

252 "cvîsi⁄", 
°©
->
cvîsi⁄
,

253 "avîsi⁄", 
°©
->
avîsi⁄
,

254 "ïhemîÆOw√r", 
°©
->
ïhemîÆOw√r
,

255 "d©aLígth", 
°©
->
d©aLígth
,

256 "numChûdªn", 
°©
->
numChûdªn
,

257 "pzxid", 
°©
->
pzxid
 );

258 
	}
}

263 
PyObje˘
 *
	$buûd_°rög_ve˘‹
(c⁄° 
Såög_ve˘‹
 *
sv
)

265 
PyObje˘
 *
ªt
;

266 i‡(!
sv
) {

267  
	`PyLi°_New
(0);

270 
ªt
 = 
	`PyLi°_New
(
sv
->
cou¡
);

271 i‡(
ªt
) {

272 
i
;

273 
i
=0;i<
sv
->
cou¡
;++i) {

274 
PyObje˘
 *
s
 = 
	`PySåög_FromSåög
(
sv
->
d©a
[
i
]);

275 i‡(!
s
) {

276 i‡(
ªt
 !
Py_N⁄e
) {

277 
	`Py_DECREF
(
ªt
);

279 
ªt
 = 
NULL
;

282 
	`PyLi°_SëIãm
(
ªt
, 
i
, 
s
);

285  
ªt
;

286 
	}
}

290 
	$check_is_a˛
(
PyObje˘
 *
o
) {

291 
i
;

292 
PyObje˘
 *
íåy
;

293 i‡(
o
 =
NULL
) {

296 i‡(!
	`PyLi°_Check
(
o
)) {

299 
i
=0;i<
	`PyLi°_Size
(
o
);++i) {

300 
PyObje˘
 *
ñemít
 = 
	`PyLi°_GëIãm
(
o
,
i
);

301 i‡(!
	`PyDi˘_Check
(
ñemít
)) {

304 
íåy
 = 
	`PyDi˘_GëIãmSåög
–
ñemít
, "perms" );

305 i‡(
íåy
 =
NULL
) {

309 
íåy
 = 
	`PyDi˘_GëIãmSåög
–
ñemít
, "scheme" );

310 i‡(
íåy
 =
NULL
) {

314 
íåy
 = 
	`PyDi˘_GëIãmSåög
–
ñemít
, "id" );

315 i‡(
íåy
 =
NULL
) {

321 
	}
}

324 
	#CHECK_ACLS
(
o
Ëi‡(
	`check_is_a˛
(o) == 0) { \

325 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
ZINVALIDACL
), 
	`zîr‹
(ZINVALIDACL)); \

326  
NULL
; \

327 }

	)

333 
PyObje˘
 *
	$buûd_a˛s
–c⁄° 
ACL_ve˘‹
 *
a˛s
 )

335 i‡(
a˛s
 =
NULL
) {

336  
	`PyLi°_New
(0);

339 
PyObje˘
 *
ªt
 = 
	`PyLi°_New
(
a˛s
->
cou¡
);

340 
i
;

341 
i
=0;i<
a˛s
->
cou¡
;++i) {

342 
PyObje˘
 *
a˛
 = 
	`Py_BuûdVÆue
( "{s:i, s:s, s:s}",

343 "≥rms", 
a˛s
->
d©a
[
i
].
≥rms
,

344 "scheme", 
a˛s
->
d©a
[
i
].
id
.
scheme
,

345 "id", 
a˛s
->
d©a
[
i
].
id
.id );

346 
	`PyLi°_SëIãm
(
ªt
, 
i
, 
a˛
);

348  
ªt
;

349 
	}
}

353 
	$∑r£_a˛s
(
ACL_ve˘‹
 *
a˛s
, 
PyObje˘
 *
pya˛s
)

355 
PyObje˘
 *
a
;

356 
i
;

357 i‡(
a˛s
 =
NULL
 || 
pya˛s
 == NULL) {

358 
	`PyEº_SëSåög
(
PyExc_VÆueEº‹
, "acls orÖyacls NULL inÖarse_acls");

362 
a˛s
->
cou¡
 = 
	`PyLi°_Size
–
pya˛s
 );

365 i‡(
	`PyLi°_Check
(
pya˛s
) == 0) {

366 
	`PyEº_SëSåög
(
InvÆidACLEx˚±i⁄
, "List of ACLsÑequired inÖarse_acls");

370 
a˛s
->
d©a
 = (
ACL
 *)
	`ˇŒoc
◊˛s->
cou¡
, (ACL));

371 i‡(
a˛s
->
d©a
 =
NULL
) {

372 
	`PyEº_SëSåög
(
PyExc_Mem‹yEº‹
, "calloc failed inÖarse_acls");

376 
i
=0;i<
a˛s
->
cou¡
;++i) {

377 
a
 = 
	`PyLi°_GëIãm
(
pya˛s
, 
i
);

379 
PyObje˘
 *
≥rms
 = 
	`PyDi˘_GëIãmSåög
–
a
, "perms" );

380 
a˛s
->
d©a
[
i
].
≥rms
 = (
öt32_t
)(
	`PyI¡_AsL⁄g
(perms));

381 
a˛s
->
d©a
[
i
].
id
.id = 
	`°rdup
–
	`PySåög_AsSåög
–
	`PyDi˘_GëIãmSåög
–
a
, "id" ) ) );

382 
a˛s
->
d©a
[
i
].
id
.
scheme
 = 
	`°rdup
–
	`PySåög_AsSåög
–
	`PyDi˘_GëIãmSåög
–
a
, "scheme" ) ) );

385 
	}
}

389 
	$‰ì_a˛s
–
ACL_ve˘‹
 *
a˛s
 )

391 i‡(
a˛s
 =
NULL
) {

394 
i
;

395 
i
=0;i<
a˛s
->
cou¡
;++i) {

396 
	`‰ì
(
a˛s
->
d©a
[
i
].
id
.id);

397 
	`‰ì
(
a˛s
->
d©a
[
i
].
id
.
scheme
);

399 
	`‰ì
(
a˛s
->
d©a
);

400 
	}
}

421 
	$w©chî_di•©ch
(
zh™dÀ_t
 *
zzh
, 
ty≥
, 
°©e
,

422 c⁄° *
∑th
, *
c⁄ãxt
)

424 
PyGILSèã_STATE
 
g°©e
;

425 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
c⁄ãxt
;

426 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

427 i‡(
ˇŒback
 =
NULL
) {

429 
msg
[256];

430 
	`•rötf
(
msg
, "pyw©chî: %d %∞%d", 
pyw
->
zh™dÀ
,Öyw->
ˇŒback
,Öyw->
≥rm™ít
);

431 
	`PyEº_SëSåög
(
PyExc_VÆueEº‹
, 
msg
);

435 
g°©e
 = 
	`PyGILSèã_Ensuª
();

436 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,i,s)", 
pyw
->
zh™dÀ
,
ty≥
, 
°©e
, 
∑th
);

437 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
) {

438 
	`PyEº_Pröt
();

440 
	`Py_DECREF
(
¨gli°
);

441 i‡(
pyw
->
≥rm™ít
 =0 && (
ty≥
 !
ZOO_SESSION_EVENT
 || 
°©e
 < 0)) {

442 
	`‰ì_pyw©chî
(
pyw
);

444 
	`PyGILSèã_Rñó£
(
g°©e
);

445 
	}
}

451 
	$void_com∂ëi⁄_di•©ch
(
rc
, c⁄° *
d©a
)

453 
PyGILSèã_STATE
 
g°©e
;

454 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

455 i‡(
pyw
 =
NULL
)

457 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

458 
g°©e
 = 
	`PyGILSèã_Ensuª
();

459 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i)", 
pyw
->
zh™dÀ
, 
rc
);

460 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
)

461 
	`PyEº_Pröt
();

462 
	`Py_DECREF
(
¨gli°
);

463 
	`‰ì_pyw©chî
(
pyw
);

464 
	`PyGILSèã_Rñó£
(
g°©e
);

465 
	}
}

469 
	$°©_com∂ëi⁄_di•©ch
(
rc
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
)

471 
PyGILSèã_STATE
 
g°©e
;

472 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

473 i‡(
pyw
 =
NULL
)

475 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

476 
g°©e
 = 
	`PyGILSèã_Ensuª
();

477 
PyObje˘
 *
py°©
 = 
	`buûd_°©
(
°©
);

478 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,O)", 
pyw
->
zh™dÀ
,
rc
, 
py°©
);

479 
	`Py_DECREF
(
py°©
);

480 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
)

481 
	`PyEº_Pröt
();

482 
	`Py_DECREF
(
¨gli°
);

483 
	`‰ì_pyw©chî
(
pyw
);

484 
	`PyGILSèã_Rñó£
(
g°©e
);

485 
	}
}

490 
	$d©a_com∂ëi⁄_di•©ch
(
rc
, c⁄° *
vÆue
, 
vÆue_Àn
, c⁄° 
Sèt
 *
°©
, c⁄° *
d©a
)

492 
PyGILSèã_STATE
 
g°©e
;

493 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

494 i‡(
pyw
 =
NULL
)

496 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

497 
g°©e
 = 
	`PyGILSèã_Ensuª
();

498 
PyObje˘
 *
py°©
 = 
	`buûd_°©
(
°©
);

499 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,s#,O)", 
pyw
->
zh™dÀ
,
rc
, 
vÆue
,
vÆue_Àn
, 
py°©
);

500 
	`Py_DECREF
(
py°©
);

502 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
)

503 
	`PyEº_Pröt
();

504 
	`Py_DECREF
(
¨gli°
);

505 
	`‰ì_pyw©chî
(
pyw
);

506 
	`PyGILSèã_Rñó£
(
g°©e
);

507 
	}
}

511 
	$°rögs_com∂ëi⁄_di•©ch
(
rc
, c⁄° 
Såög_ve˘‹
 *
°rögs
, c⁄° *
d©a
)

513 
PyGILSèã_STATE
 
g°©e
;

514 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

515 i‡(
pyw
 =
NULL
)

517 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

518 
g°©e
 = 
	`PyGILSèã_Ensuª
();

519 
PyObje˘
 *
py°rögs
 = 
	`buûd_°rög_ve˘‹
(
°rögs
);

520 i‡(
py°rögs
)

522 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,O)", 
pyw
->
zh™dÀ
, 
rc
, 
py°rögs
);

523 i‡(
¨gli°
 =
NULL
 || 
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
,árglist) == NULL)

524 
	`PyEº_Pröt
();

525 
	`Py_DECREF
(
¨gli°
);

528 
	`PyEº_Pröt
();

529 
	`Py_DECREF
(
py°rögs
);

530 
	`‰ì_pyw©chî
(
pyw
);

531 
	`PyGILSèã_Rñó£
(
g°©e
);

532 
	}
}

536 
	$°rög_com∂ëi⁄_di•©ch
(
rc
, c⁄° *
vÆue
, c⁄° *
d©a
)

538 
PyGILSèã_STATE
 
g°©e
;

539 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

540 i‡(
pyw
 =
NULL
) {

543 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

544 
g°©e
 = 
	`PyGILSèã_Ensuª
();

545 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,s)", 
pyw
->
zh™dÀ
,
rc
, 
vÆue
);

546 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
)

547 
	`PyEº_Pröt
();

548 
	`Py_DECREF
(
¨gli°
);

549 
	`‰ì_pyw©chî
(
pyw
);

550 
	`PyGILSèã_Rñó£
(
g°©e
);

551 
	}
}

555 
	$a˛_com∂ëi⁄_di•©ch
(
rc
, 
ACL_ve˘‹
 *
a˛
, 
Sèt
 *
°©
, c⁄° *
d©a
)

557 
PyGILSèã_STATE
 
g°©e
;

558 
pyw©chî_t
 *
pyw
 = (pyw©chî_t*)
d©a
;

559 i‡(
pyw
 =
NULL
) {

562 
PyObje˘
 *
ˇŒback
 = 
pyw
->callback;

563 
g°©e
 = 
	`PyGILSèã_Ensuª
();

564 
PyObje˘
 *
py°©
 = 
	`buûd_°©
(
°©
);

565 
PyObje˘
 *
pya˛s
 = 
	`buûd_a˛s
(
a˛
);

566 
PyObje˘
 *
¨gli°
 = 
	`Py_BuûdVÆue
("(i,i,O,O)", 
pyw
->
zh™dÀ
,
rc
, 
pya˛s
, 
py°©
);

568 
	`Py_DECREF
(
py°©
);

569 
	`Py_DECREF
(
pya˛s
);

571 i‡(
	`PyObje˘_CÆlObje˘
((
PyObje˘
*)
ˇŒback
, 
¨gli°
Ë=
NULL
) {

572 
	`PyEº_Pröt
();

574 
	`Py_DECREF
(
¨gli°
);

575 
	`‰ì_pyw©chî
(
pyw
);

576 
	`PyGILSèã_Rñó£
(
g°©e
);

577 
	}
}

583 
PyObje˘
 *
	$pyzookì≥r_öô
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

585 c⁄° *
ho°
;

586 
PyObje˘
 *
w©chî‚
 = 
Py_N⁄e
;

587 
ªcv_timeout
 = 10000;

589 
˛õ¡id_t
 
cid
;

590 
cid
.
˛õ¡_id
 = -1;

591 c⁄° *
∑sswd
;

592 
h™dÀ
 = 
	`√xt_zh™dÀ
();

593 i‡(
h™dÀ
 == -1) {

594 i‡(
	`ªsize_zh™dÀs
() == 0) {

595  
NULL
;

597 
h™dÀ
 = 
	`√xt_zh™dÀ
();

600 i‡(
h™dÀ
 == -1) {

601 
	`PyEº_SëSåög
(
ZooKì≥rEx˚±i⁄
,"Couldn't findá free zhandle, something is very wrong");

602  
NULL
;

605 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "s|Oi(Ls)", &
ho°
, &
w©chî‚
, &
ªcv_timeout
, &
cid
.
˛õ¡_id
, &
∑sswd
))

606  
NULL
;

608 i‡(
cid
.
˛õ¡_id
 != -1) {

609 
	`°∫˝y
(
cid
.
∑sswd
,Öasswd, 16*());

611 
pyw©chî_t
 *
pyw
 = 
NULL
;

612 i‡(
w©chî‚
 !
Py_N⁄e
) {

613 
pyw
 = 
	`¸óã_pyw©chî
(
h™dÀ
, 
w©chî‚
,1);

614 i‡(
pyw
 =
NULL
) {

615  
NULL
;

618 
w©chîs
[
h™dÀ
] = 
pyw
;

619 
zh™dÀ_t
 *
zh
 = 
	`zookì≥r_öô
–
ho°
, 
w©chî‚
 !
Py_N⁄e
 ? 
w©chî_di•©ch
 : 
NULL
,

620 
ªcv_timeout
, 
cid
.
˛õ¡_id
 == -1 ? 0 : &cid,

621 
pyw
,

624 i‡(
zh
 =
NULL
)

626 
	`PyEº_SëSåög
–
ZooKì≥rEx˚±i⁄
, "CouldÇot internally obtain zookeeper handle" );

627  
NULL
;

630 
zh™dÀs
[
h™dÀ
] = 
zh
;

631  
	`Py_BuûdVÆue
–"i", 
h™dÀ
);

632 
	}
}

640 
PyObje˘
 *
	$pyzoo_a¸óã
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

642 
zkhid
; *
∑th
; *
vÆue
; 
vÆuñí
;

643 
ACL_ve˘‹
 
a˛
; 
Êags
 = 0;

644 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

645 
PyObje˘
 *
pya˛s
 = 
Py_N⁄e
;

646 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#O|iO", &
zkhid
, &
∑th
,

647 &
vÆue
, &
vÆuñí
, &
pya˛s
, &
Êags
,

648 &
com∂ëi⁄_ˇŒback
)) {

649  
NULL
;

651 
	`CHECK_ZHANDLE
(
zkhid
);

652 
	`CHECK_ACLS
(
pya˛s
);

653 i‡(
	`∑r£_a˛s
(&
a˛
, 
pya˛s
) == 0) {

654  
NULL
;

656 *
pyw
 = 
NULL
;

657 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

658 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

659 i‡(
pyw
 =
NULL
) {

660  
NULL
;

663 
îr
 = 
	`zoo_a¸óã
–
zh™dÀs
[
zkhid
],

664 
∑th
,

665 
vÆue
,

666 
vÆuñí
,

667 
pya˛s
 =
Py_N⁄e
 ? 
NULL
 : &
a˛
,

668 
Êags
,

669 
°rög_com∂ëi⁄_di•©ch
,

670 
pyw
);

671 
	`‰ì_a˛s
(&
a˛
);

672 i‡(
îr
 !
ZOK
)

674 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

675  
NULL
;

677  
	`Py_BuûdVÆue
("i", 
îr
);

678 
	}
}

681 
PyObje˘
 *
	$pyzoo_adñëe
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

683 
zkhid
; *
∑th
; 
vîsi⁄
 = -1;

684 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

685 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|iO", &
zkhid
, &
∑th
, &
vîsi⁄
, &
com∂ëi⁄_ˇŒback
))

686  
NULL
;

687 
	`CHECK_ZHANDLE
(
zkhid
);

689 *
pyw
 = 
NULL
;

690 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

691 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

692 i‡(
pyw
 =
NULL
) {

693  
NULL
;

697 
îr
 = 
	`zoo_adñëe
–
zh™dÀs
[
zkhid
],

698 
∑th
,

699 
vîsi⁄
,

700 
void_com∂ëi⁄_di•©ch
,

701 
pyw
);

703 i‡(
îr
 !
ZOK
) {

704 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

705  
NULL
;

707  
	`Py_BuûdVÆue
("i", 
îr
);

708 
	}
}

711 
PyObje˘
 *
	$pyzoo_´xi°s
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

713 
zkhid
; *
∑th
;

714 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

715 
PyObje˘
 *
exi°s_w©ch
 = 
Py_N⁄e
;

716 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|OO", &
zkhid
, &
∑th
,

717 &
exi°s_w©ch
, &
com∂ëi⁄_ˇŒback
))

718  
NULL
;

719 
	`CHECK_ZHANDLE
(
zkhid
);

720 *
comp_pyw
 = 
NULL
;

721 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

722 
comp_pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

723 i‡(
comp_pyw
 =
NULL
) {

724  
NULL
;

727 *
exi°_pyw
 = 
NULL
;

728 i‡(
exi°s_w©ch
 !
Py_N⁄e
) {

729 
exi°_pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
exi°s_w©ch
, 0);

730 i‡(
exi°_pyw
 =
NULL
) {

731  
NULL
;

735 
îr
 = 
	`zoo_awexi°s
–
zh™dÀs
[
zkhid
],

736 
∑th
,

737 
exi°s_w©ch
 !
Py_N⁄e
 ? 
w©chî_di•©ch
 : 
NULL
,

738 
exi°_pyw
,

739 
°©_com∂ëi⁄_di•©ch
,

740 
comp_pyw
);

742 i‡(
îr
 !
ZOK
)

744 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

745  
NULL
;

747  
	`Py_BuûdVÆue
("i", 
îr
);;

748 
	}
}

751 
PyObje˘
 *
	$pyzoo_agë
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

753 
zkhid
; *
∑th
;

754 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

755 
PyObje˘
 *
gë_w©ch
 = 
Py_N⁄e
;

756 *
comp_pw
 = 
NULL
;

757 *
w©ch_pw
 = 
NULL
;

759 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|OO", &
zkhid
, &
∑th
,

760 &
gë_w©ch
, &
com∂ëi⁄_ˇŒback
)) {

761  
NULL
;

764 
	`CHECK_ZHANDLE
(
zkhid
);

766 i‡(
gë_w©ch
 !
Py_N⁄e
) {

767 i‡((
w©ch_pw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
gë_w©ch
, 0)Ë=
NULL
) {

768  
NULL
;

772 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

773 i‡((
comp_pw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0)Ë=
NULL
) {

774  
NULL
;

778 
îr
 = 
	`zoo_awgë
–
zh™dÀs
[
zkhid
],

779 
∑th
,

780 
gë_w©ch
 !
Py_N⁄e
 ? 
w©chî_di•©ch
 : 
NULL
,

781 
w©ch_pw
,

782 
d©a_com∂ëi⁄_di•©ch
,

783 
comp_pw
);

785 i‡(
îr
 !
ZOK
) {

786 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

787  
NULL
;

789  
	`Py_BuûdVÆue
("i", 
îr
);

790 
	}
}

793 
PyObje˘
 *
	$pyzoo_a£t
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

795 
zkhid
; *
∑th
; *
buf„r
; 
buÊí
; 
vîsi⁄
=-1;

796 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

797 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#|iO", &
zkhid
, &
∑th
, &
buf„r
, &
buÊí
, &
vîsi⁄
, &
com∂ëi⁄_ˇŒback
))

798  
NULL
;

799 
	`CHECK_ZHANDLE
(
zkhid
);

800 *
pyw
 = 
NULL
;

801 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

802 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

803 i‡(
pyw
 =
NULL
) {

804  
NULL
;

807 
îr
 = 
	`zoo_a£t
–
zh™dÀs
[
zkhid
],

808 
∑th
,

809 
buf„r
,

810 
buÊí
,

811 
vîsi⁄
,

812 
°©_com∂ëi⁄_di•©ch
,

813 
pyw
);

815 i‡(
îr
 !
ZOK
) {

816 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

817  
NULL
;

819  
	`Py_BuûdVÆue
("i", 
îr
);

820 
	}
}

823 
PyObje˘
 *
	$pyzoo_agë_chûdªn
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

825 
zkhid
; *
∑th
;

826 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

827 
PyObje˘
 *
gë_w©ch
;

828 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|OO", &
zkhid
, &
∑th
,

829 &
gë_w©ch
, &
com∂ëi⁄_ˇŒback
))

830  
NULL
;

831 
	`CHECK_ZHANDLE
(
zkhid
);

833 *
gë_pyw
 = 
NULL
;

834 i‡(
gë_w©ch
 !
Py_N⁄e
) {

835 
gë_pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
gë_w©ch
, 0);

836 i‡(
gë_pyw
 =
NULL
) {

837  
NULL
;

841 *
pyw
 = 
NULL
;

842 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

843 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

844 i‡(
pyw
 =
NULL
) {

845  
NULL
;

849 
îr
 = 
	`zoo_awgë_chûdªn
–
zh™dÀs
[
zkhid
],

850 
∑th
,

851 
gë_w©ch
 !
Py_N⁄e
 ? 
w©chî_di•©ch
 : 
NULL
,

852 
gë_pyw
,

853 
°rögs_com∂ëi⁄_di•©ch
,

854 
pyw
);

855 i‡(
îr
 !
ZOK
) {

856 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

857  
NULL
;

859  
	`Py_BuûdVÆue
("i", 
îr
);;

860 
	}
}

863 
PyObje˘
 *
	$pyzoo_async
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

865 
zkhid
; *
∑th
;

866 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

867 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|O", &
zkhid
, &
∑th
,

868 &
com∂ëi⁄_ˇŒback
)) {

869  
NULL
;

871 
	`CHECK_ZHANDLE
(
zkhid
);

873 *
pyw
 = 
NULL
;

874 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

875 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

876 i‡(
pyw
 =
NULL
) {

877  
NULL
;

881 
îr
 = 
	`zoo_async
–
zh™dÀs
[
zkhid
],

882 
∑th
,

883 
°rög_com∂ëi⁄_di•©ch
,

884 
pyw
);

886 i‡(
îr
 !
ZOK
) {

887 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

888  
NULL
;

890  
	`Py_BuûdVÆue
("i", 
îr
);;

891 
	}
}

894 
PyObje˘
 *
	$pyzoo_agë_a˛
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

896 
zkhid
; *
∑th
;

897 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
;

898 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|O", &
zkhid
, &
∑th
,

899 &
com∂ëi⁄_ˇŒback
)) {

900  
NULL
;

902 
	`CHECK_ZHANDLE
(
zkhid
);

904 *
pyw
 = 
NULL
;

905 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

906 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

907 i‡(
pyw
 =
NULL
) {

908  
NULL
;

912 
îr
 = 
	`zoo_agë_a˛
–
zh™dÀs
[
zkhid
],

913 
∑th
,

914 
a˛_com∂ëi⁄_di•©ch
,

915 
pyw
);

916 i‡(
îr
 !
ZOK
) {

917 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

918  
NULL
;

920  
	`Py_BuûdVÆue
("i", 
îr
);;

921 
	}
}

924 
PyObje˘
 *
	$pyzoo_a£t_a˛
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

926 
zkhid
; *
∑th
; 
vîsi⁄
;

927 
PyObje˘
 *
com∂ëi⁄_ˇŒback
 = 
Py_N⁄e
, *
pya˛
;

928 
ACL_ve˘‹
 
a˛v
;

929 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "isiO|O", &
zkhid
, &
∑th
, &
vîsi⁄
,

930 &
pya˛
, &
com∂ëi⁄_ˇŒback
)) {

931  
NULL
;

933 
	`CHECK_ZHANDLE
(
zkhid
);

934 
	`CHECK_ACLS
(
pya˛
);

935 i‡(
	`∑r£_a˛s
(&
a˛v
, 
pya˛
) == 0) {

936  
NULL
;

939 *
pyw
 = 
NULL
;

940 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

941 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

942 i‡(
pyw
 =
NULL
) {

943  
NULL
;

947 
îr
 = 
	`zoo_a£t_a˛
–
zh™dÀs
[
zkhid
],

948 
∑th
,

949 
vîsi⁄
,

950 &
a˛v
,

951 
void_com∂ëi⁄_di•©ch
,

952 
pyw
);

953 
	`‰ì_a˛s
(&
a˛v
);

954 i‡(
îr
 !
ZOK
) {

955 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

956  
NULL
;

958  
	`Py_BuûdVÆue
("i", 
îr
);;

959 
	}
}

962 
PyObje˘
 *
	$pyzoo_add_auth
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

964 
zkhid
;

965 *
scheme
, *
˚π
;

966 
˚πLí
;

967 
PyObje˘
 *
com∂ëi⁄_ˇŒback
;

969 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#O", &
zkhid
, &
scheme
, &
˚π
, &
˚πLí
,

970 &
com∂ëi⁄_ˇŒback
)) {

971  
NULL
;

973 
	`CHECK_ZHANDLE
(
zkhid
);

975 *
pyw
 = 
NULL
;

976 i‡(
com∂ëi⁄_ˇŒback
 !
Py_N⁄e
) {

977 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
com∂ëi⁄_ˇŒback
, 0);

978 i‡(
pyw
 =
NULL
) {

979  
NULL
;

983 
îr
 = 
	`zoo_add_auth
–
zh™dÀs
[
zkhid
],

984 
scheme
,

985 
˚π
,

986 
˚πLí
,

987 
void_com∂ëi⁄_di•©ch
,

988 
pyw
);

989 i‡(
îr
 !
ZOK
) {

990 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

991  
NULL
;

993  
	`Py_BuûdVÆue
("i", 
îr
);

994 
	}
}

1001 
PyObje˘
 *
	$pyzoo_¸óã
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1003 *
∑th
;

1004 
zkhid
;

1005 * 
vÆues
;

1006 
vÆuñí
;

1007 
PyObje˘
 *
a˛
 = 
NULL
;

1008 
Êags
 = 0;

1009 
ªÆbuf
[256];

1010 c⁄° 
maxbuf_Àn
 = 256;

1011 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#O|i",&
zkhid
, &
∑th
, &
vÆues
, &
vÆuñí
,&
a˛
,&
Êags
))

1012  
NULL
;

1013 
	`CHECK_ZHANDLE
(
zkhid
);

1014 
ACL_ve˘‹
 
a˛v
;

1015 
	`CHECK_ACLS
(
a˛
);

1016 i‡(
	`∑r£_a˛s
(&
a˛v
,
a˛
) == 0) {

1017  
NULL
;

1019 
zh™dÀ_t
 *
zh
 = 
zh™dÀs
[
zkhid
];

1020 
îr
 = 
	`zoo_¸óã
(
zh
, 
∑th
, 
vÆues
, 
vÆuñí
, &
a˛v
, 
Êags
, 
ªÆbuf
, 
maxbuf_Àn
);

1021 
	`‰ì_a˛s
(&
a˛v
);

1022 i‡(
îr
 !
ZOK
) {

1023 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1024  
NULL
;

1027  
	`Py_BuûdVÆue
("s", 
ªÆbuf
);

1028 
	}
}

1031 
PyObje˘
 *
	$pyzoo_dñëe
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1033 
zkhid
;

1034 *
∑th
;

1035 
vîsi⁄
 = -1;

1036 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|i",&
zkhid
,&
∑th
,&
vîsi⁄
))

1037  
NULL
;

1038 
	`CHECK_ZHANDLE
(
zkhid
);

1039 
zh™dÀ_t
 *
zh
 = 
zh™dÀs
[
zkhid
];

1040 
îr
 = 
	`zoo_dñëe
(
zh
, 
∑th
, 
vîsi⁄
);

1041 i‡(
îr
 !
ZOK
) {

1042 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1043  
NULL
;

1045  
	`Py_BuûdVÆue
("i", 
îr
);

1046 
	}
}

1050 
PyObje˘
 *
	$pyzoo_exi°s
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1052 
zkhid
; *
∑th
; 
PyObje˘
 *
w©chî‚
 = 
Py_N⁄e
;

1053 
Sèt
 
°©
;

1054 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|O", &
zkhid
, &
∑th
, &
w©chî‚
)) {

1055  
NULL
;

1057 
	`CHECK_ZHANDLE
(
zkhid
);

1058 
zh™dÀ_t
 *
zh
 = 
zh™dÀs
[
zkhid
];

1059 
pyw©chî_t
 *
pw
 = 
NULL
;

1060 *
ˇŒback
 = 
NULL
;

1061 i‡(
w©chî‚
 !
Py_N⁄e
) {

1062 
pw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
w©chî‚
,0);

1063 
ˇŒback
 = 
w©chî_di•©ch
;

1064 i‡(
pw
 =
NULL
) {

1065  
NULL
;

1068 
îr
 = 
	`zoo_wexi°s
(
zh
, 
∑th
, 
ˇŒback
, 
pw
, &
°©
);

1069 i‡(
îr
 !
ZOK
 &&Éº !
ZNONODE
) {

1070 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1071 
	`‰ì_pyw©chî
(
pw
);

1072  
NULL
;

1074 i‡(
îr
 =
ZNONODE
) {

1075 
	`Py_INCREF
(
Py_N⁄e
);

1076  
Py_N⁄e
;

1078  
	`buûd_°©
(&
°©
);

1079 
	}
}

1083 
PyObje˘
 *
	$pyzoo_gë_chûdªn
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1085 
zkhid
;

1086 *
∑th
;

1087 
PyObje˘
 *
w©chî‚
 = 
Py_N⁄e
;

1088 
Såög_ve˘‹
 
°rögs
;

1089 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|O", &
zkhid
, &
∑th
, &
w©chî‚
)) {

1090  
NULL
;

1092 
	`CHECK_ZHANDLE
(
zkhid
);

1093 
pyw©chî_t
 *
pw
 = 
NULL
;

1094 *
ˇŒback
 = 
NULL
;

1095 i‡(
w©chî‚
 !
Py_N⁄e
) {

1096 
pw
 = 
	`¸óã_pyw©chî
–
zkhid
, 
w©chî‚
, 0 );

1097 
ˇŒback
 = 
w©chî_di•©ch
;

1098 i‡(
pw
 =
NULL
) {

1099  
NULL
;

1102 
îr
 = 
	`zoo_wgë_chûdªn
(
zh™dÀs
[
zkhid
], 
∑th
,

1103 
ˇŒback
,

1104 
pw
, &
°rögs
 );

1106 i‡(
îr
 !
ZOK
) {

1107 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1108 
	`‰ì_pyw©chî
(
pw
);

1109  
NULL
;

1112 
PyObje˘
 *
ªt
 = 
	`buûd_°rög_ve˘‹
(&
°rögs
);

1113 
	`dóŒoˇã_Såög_ve˘‹
(&
°rögs
);

1114  
ªt
;

1115 
	}
}

1118 
PyObje˘
 *
	$pyzoo_£t
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1120 
zkhid
;

1121 *
∑th
;

1122 *
buf„r
;

1123 
buÊí
;

1124 
vîsi⁄
 = -1;

1125 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#|i", &
zkhid
, &
∑th
, &
buf„r
, &
buÊí
,

1126 &
vîsi⁄
)) {

1127  
NULL
;

1129 
	`CHECK_ZHANDLE
(
zkhid
);

1131 
îr
 = 
	`zoo_£t
(
zh™dÀs
[
zkhid
], 
∑th
, 
buf„r
, 
buÊí
, 
vîsi⁄
);

1132 i‡(
îr
 !
ZOK
) {

1133 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1134  
NULL
;

1137  
	`Py_BuûdVÆue
("i", 
îr
);

1138 
	}
}

1141 
PyObje˘
 *
	$pyzoo_£t2
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1143 
zkhid
;

1144 *
∑th
;

1145 *
buf„r
;

1146 
buÊí
;

1147 
vîsi⁄
 = -1;

1148 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iss#|i", &
zkhid
, &
∑th
, &
buf„r
, &
buÊí
,

1149 &
vîsi⁄
)) {

1150  
NULL
;

1152 
	`CHECK_ZHANDLE
(
zkhid
);

1153 
Sèt
 
°©
;

1154 
îr
 = 
	`zoo_£t2
(
zh™dÀs
[
zkhid
], 
∑th
, 
buf„r
, 
buÊí
, 
vîsi⁄
, &
°©
);

1155 i‡(
îr
 !
ZOK
) {

1156 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1157  
NULL
;

1160  
	`buûd_°©
(&
°©
);

1161 
	}
}

1167 
	#GET_BUFFER_SIZE
 1024*1024

	)

1173 
PyObje˘
 *
	$pyzoo_gë
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1175 
zkhid
;

1176 *
∑th
;

1177 *
buf„r
;

1178 
buf„r_Àn
=
GET_BUFFER_SIZE
;

1179 
Sèt
 
°©
;

1180 
PyObje˘
 *
w©chî‚
 = 
Py_N⁄e
;

1181 
pyw©chî_t
 *
pw
 = 
NULL
;

1182 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is|Oi", &
zkhid
, &
∑th
, &
w©chî‚
, &
buf„r_Àn
)) {

1183  
NULL
;

1185 
	`CHECK_ZHANDLE
(
zkhid
);

1186 i‡(
w©chî‚
 !
Py_N⁄e
) {

1187 
pw
 = 
	`¸óã_pyw©chî
–
zkhid
, 
w©chî‚
,0 );

1188 i‡(
pw
 =
NULL
) {

1189  
NULL
;

1192 
buf„r
 = 
	`mÆloc
(()*
buf„r_Àn
);

1193 i‡(
buf„r
 =
NULL
) {

1194 
	`‰ì_pyw©chî
(
pw
);

1195 
	`PyEº_SëSåög
(
PyExc_Mem‹yEº‹
, "buffer couldÇot beállocated inÖyzoo_get");

1196  
NULL
;

1199 
îr
 = 
	`zoo_wgë
(
zh™dÀs
[
zkhid
], 
∑th
,

1200 
w©chî‚
 !
Py_N⁄e
 ? 
w©chî_di•©ch
 : 
NULL
,

1201 
pw
, 
buf„r
,

1202 &
buf„r_Àn
, &
°©
);

1204 i‡(
îr
 !
ZOK
) {

1205 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1206 
	`‰ì_pyw©chî
(
pw
);

1207 
	`‰ì
(
buf„r
);

1208  
NULL
;

1211 
PyObje˘
 *
°©_di˘
 = 
	`buûd_°©
–&
°©
 );

1212 
PyObje˘
 *
ªt
 = 
	`Py_BuûdVÆue
–"(s#,N)", 
buf„r
,
buf„r_Àn
, 
°©_di˘
 );

1213 
	`‰ì
(
buf„r
);

1215  
ªt
;

1216 
	}
}

1219 
PyObje˘
 *
	$pyzoo_gë_a˛
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1221 
zkhid
;

1222 *
∑th
;

1223 
ACL_ve˘‹
 
a˛
;

1224 
Sèt
 
°©
;

1225 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "is", &
zkhid
, &
∑th
))

1226  
NULL
;

1227 
	`CHECK_ZHANDLE
(
zkhid
);

1228 
îr
 = 
	`zoo_gë_a˛
–
zh™dÀs
[
zkhid
], 
∑th
, &
a˛
, &
°©
 );

1229 i‡(
îr
 !
ZOK
) {

1230 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1231  
NULL
;

1233 
PyObje˘
 *
py°©
 = 
	`buûd_°©
–&
°©
 );

1234 
PyObje˘
 *
a˛s
 = 
	`buûd_a˛s
–&
a˛
 );

1235 
PyObje˘
 *
ªt
 = 
	`Py_BuûdVÆue
–"(O,O)", 
py°©
, 
a˛s
 );

1236 
	`Py_DECREF
(
py°©
);

1237 
	`Py_DECREF
(
a˛s
);

1238  
ªt
;

1239 
	}
}

1242 
PyObje˘
 *
	$pyzoo_£t_a˛
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1244 
zkhid
;

1245 *
∑th
;

1246 
vîsi⁄
;

1247 
PyObje˘
 *
pya˛s
;

1248 
ACL_ve˘‹
 
a˛
;

1249 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "isiO", &
zkhid
, &
∑th
, &
vîsi⁄
, &
pya˛s
)) {

1250  
NULL
;

1252 
	`CHECK_ZHANDLE
(
zkhid
);

1253 i‡(
	`∑r£_a˛s
(&
a˛
, 
pya˛s
) == 0) {

1254  
NULL
;

1256 
îr
 = 
	`zoo_£t_a˛
(
zh™dÀs
[
zkhid
], 
∑th
, 
vîsi⁄
, &
a˛
 );

1257 
	`‰ì_a˛s
(&
a˛
);

1258 i‡(
îr
 !
ZOK
) {

1259 
	`PyEº_SëSåög
(
	`îr_to_ex˚±i⁄
(
îr
), 
	`zîr‹
(err));

1260  
NULL
;

1262  
	`Py_BuûdVÆue
("i", 
îr
);;

1263 
	}
}

1270 
PyObje˘
 *
	$pyzoo_˛o£
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1272 
zkhid
, 
ªt
;

1273 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "i", &
zkhid
)) {

1274  
NULL
;

1276 
	`CHECK_ZHANDLE
(
zkhid
);

1277 
zh™dÀ_t
 *
h™dÀ
 = 
zh™dÀs
[
zkhid
];

1278 
Py_BEGIN_ALLOW_THREADS


1279 
ªt
 = 
	`zookì≥r_˛o£
(
h™dÀ
);

1280 
Py_END_ALLOW_THREADS


1281 
zh™dÀs
[
zkhid
] = 
NULL
;

1282  
	`Py_BuûdVÆue
("i", 
ªt
);

1283 
	}
}

1286 
PyObje˘
 *
	$pyzoo_˛õ¡_id
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1288 
zkhid
;

1289 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "i", &
zkhid
)) {

1290  
NULL
;

1292 
	`CHECK_ZHANDLE
(
zkhid
);

1293 c⁄° 
˛õ¡id_t
 *
cid
 = 
	`zoo_˛õ¡_id
(
zh™dÀs
[
zkhid
]);

1294  
	`Py_BuûdVÆue
("(L,s)", 
cid
->
˛õ¡_id
, cid->
∑sswd
);

1295 
	}
}

1299 
PyObje˘
 *
	$pyzoo_gë_c⁄ãxt
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1301 
zkhid
;

1302 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "i", &
zkhid
))

1303  
NULL
;

1304 
	`CHECK_ZHANDLE
(
zkhid
);

1305 
PyObje˘
 *
c⁄ãxt
 = 
NULL
;

1306 
c⁄ãxt
 = (
PyObje˘
*)
	`zoo_gë_c⁄ãxt
(
zh™dÀs
[
zkhid
]);

1307 i‡(
c⁄ãxt
)  context;

1308 
	`Py_INCREF
(
Py_N⁄e
);

1309  
Py_N⁄e
;

1310 
	}
}

1314 
PyObje˘
 *
	$pyzoo_£t_c⁄ãxt
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1316 
zkhid
;

1317 
PyObje˘
 *
c⁄ãxt
;

1318 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iO", &
zkhid
, &
c⁄ãxt
)) {

1319  
NULL
;

1321 
	`CHECK_ZHANDLE
(
zkhid
);

1322 
PyObje˘
 *
py_c⁄ãxt
 = (PyObje˘*)
	`zoo_gë_c⁄ãxt
(
zh™dÀs
[
zkhid
]);

1323 i‡(
py_c⁄ãxt
 !
NULL
 &&Öy_c⁄ãxà!
Py_N⁄e
) {

1324 
	`Py_DECREF
(
py_c⁄ãxt
);

1326 
	`Py_INCREF
(
c⁄ãxt
);

1327 
	`zoo_£t_c⁄ãxt
(
zh™dÀs
[
zkhid
], (*)
c⁄ãxt
);

1328 
	`Py_INCREF
(
Py_N⁄e
);

1329  
Py_N⁄e
;

1330 
	}
}

1338 
PyObje˘
 *
	$pyzoo_£t_w©chî
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1340 
zkhid
;

1341 
PyObje˘
 *
w©chî‚
;

1342 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "iO", &
zkhid
, &
w©chî‚
)) {

1343  
NULL
;

1345 
	`CHECK_ZHANDLE
(
zkhid
);

1346 
pyw©chî_t
 *
pyw
 = 
w©chîs
[
zkhid
];

1347 i‡(
pyw
 !
NULL
) {

1348 
	`‰ì_pyw©chî
–
pyw
 );

1352 
pyw
 = 
	`¸óã_pyw©chî
(
zkhid
, 
w©chî‚
,1);

1353 i‡(
pyw
 =
NULL
) {

1354  
NULL
;

1356 
w©chîs
[
zkhid
] = 
pyw
;

1357 
	`zoo_£t_w©chî
(
zh™dÀs
[
zkhid
], 
w©chî_di•©ch
);

1358 
	`zoo_£t_c⁄ãxt
(
zh™dÀs
[
zkhid
], 
pyw
);

1359 
	`Py_INCREF
(
Py_N⁄e
);

1360  
Py_N⁄e
;

1361 
	}
}

1365 
PyObje˘
 *
	$pyzoo_°©e
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1367 
zkhid
;

1368 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
,"i",&
zkhid
)) {

1369  
NULL
;

1371 
	`CHECK_ZHANDLE
(
zkhid
);

1372 
°©e
 = 
	`zoo_°©e
(
zh™dÀs
[
zkhid
]);

1373  
	`Py_BuûdVÆue
("i",
°©e
);

1374 
	}
}

1378 
PyObje˘
 *
	$pyzîr‹
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1380 
rc
;

1381 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
,"i", &
rc
))

1382  
NULL
;

1383  
	`Py_BuûdVÆue
("s", 
	`zîr‹
(
rc
));

1384 
	}
}

1387 
PyObje˘
 *
	$pyzoo_ªcv_timeout
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1389 
zkhid
;

1390 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
,"i",&
zkhid
))

1391  
NULL
;

1392 
	`CHECK_ZHANDLE
(
zkhid
);

1393 
ªcv_timeout
 = 
	`zoo_ªcv_timeout
(
zh™dÀs
[
zkhid
]);

1394  
	`Py_BuûdVÆue
("i",
ªcv_timeout
);

1395 
	}
}

1398 
PyObje˘
 *
	$pyis_uƒecovîabÀ
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1400 
zkhid
;

1401 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
,"i",&
zkhid
))

1402  
NULL
;

1403 
	`CHECK_ZHANDLE
(
zkhid
);

1404 
ªt
 = 
	`is_uƒecovîabÀ
(
zh™dÀs
[
zkhid
]);

1405 i‡(
ªt
 =
ZINVALIDSTATE
)

1406 
Py_RETURN_TRUE
;

1407 
Py_RETURN_FALSE
;

1408 
	}
}

1411 
PyObje˘
 *
	$pyzoo_£t_debug_Àvñ
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1413 
logÀvñ
;

1414 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "i", &
logÀvñ
))

1415  
NULL
;

1416 
	`zoo_£t_debug_Àvñ
((
ZooLogLevñ
)
logÀvñ
);

1417 
	`Py_INCREF
(
Py_N⁄e
);

1418  
Py_N⁄e
;

1419 
	}
}

1421 
PyObje˘
 *
	glog_°ªam
 = 
NULL
;

1424 
PyObje˘
 *
	$pyzoo_£t_log_°ªam
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1426 
PyObje˘
 *
py°ªam
 = 
NULL
;

1427 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
,"O",&
py°ªam
)) {

1428 
	`PyEº_SëSåög
(
PyExc_VÆueEº‹
, "Must supplyá Python objectÅo set_log_stream");

1429  
NULL
;

1431 i‡(!
	`PyFûe_Check
(
py°ªam
)) {

1432 
	`PyEº_SëSåög
(
PyExc_VÆueEº‹
, "Must supplyá file objectÅo set_log_stream");

1433  
NULL
;

1436 i‡(
log_°ªam
 !
NULL
) {

1437 
	`Py_DECREF
(
log_°ªam
);

1440 
log_°ªam
 = 
py°ªam
;

1441 
	`Py_INCREF
(
log_°ªam
);

1442 
	`zoo_£t_log_°ªam
(
	`PyFûe_AsFûe
(
log_°ªam
));

1444 
	`Py_INCREF
(
Py_N⁄e
);

1445  
Py_N⁄e
;

1446 
	}
}

1449 
PyObje˘
 *
	$pyzoo_dëîmöi°ic_c⁄n_‹dî
(
PyObje˘
 *
£lf
, PyObje˘ *
¨gs
)

1451 
yesOrNo
;

1452 i‡(!
	`PyArg_P¨£Tu∂e
(
¨gs
, "i",&
yesOrNo
))

1453  
NULL
;

1454 
	`zoo_dëîmöi°ic_c⁄n_‹dî
–
yesOrNo
 );

1455 
	`Py_INCREF
(
Py_N⁄e
);

1456  
Py_N⁄e
;

1457 
	}
}

1463 
	~"pyzk_doc°rögs.h
"

1465 
PyMëhodDef
 
	gZooKì≥rMëhods
[] = {

1466 {"öô", 
pyzookì≥r_öô
, 
METH_VARARGS
, 
pyzk_öô_doc
 },

1467 {"¸óã",
pyzoo_¸óã
, 
METH_VARARGS
, 
pyzk_¸óã_doc
 },

1468 {"dñëe",
pyzoo_dñëe
, 
METH_VARARGS
, 
pyzk_dñëe_doc
 },

1469 {"gë_chûdªn", 
pyzoo_gë_chûdªn
, 
METH_VARARGS
, 
pyzk_gë_chûdªn_doc
 },

1470 {"£t", 
pyzoo_£t
, 
METH_VARARGS
, 
pyzk_£t_doc
 },

1471 {"£t2", 
pyzoo_£t2
, 
METH_VARARGS
, 
pyzk_£t2_doc
 },

1472 {"gë",
pyzoo_gë
, 
METH_VARARGS
, 
pyzk_gë_doc
 },

1473 {"exi°s",
pyzoo_exi°s
, 
METH_VARARGS
, 
pyzk_exi°s_doc
 },

1474 {"gë_a˛", 
pyzoo_gë_a˛
, 
METH_VARARGS
, 
pyzk_gë_a˛_doc
 },

1475 {"£t_a˛", 
pyzoo_£t_a˛
, 
METH_VARARGS
, 
pyzk_£t_a˛_doc
 },

1476 {"˛o£", 
pyzoo_˛o£
, 
METH_VARARGS
, 
pyzk_˛o£_doc
 },

1477 {"˛õ¡_id", 
pyzoo_˛õ¡_id
, 
METH_VARARGS
, 
pyzk_˛õ¡_id_doc
 },

1478 {"£t_w©chî", 
pyzoo_£t_w©chî
, 
METH_VARARGS
 },

1479 {"°©e", 
pyzoo_°©e
, 
METH_VARARGS
, 
pyzk_°©e_doc
 },

1480 {"ªcv_timeout",
pyzoo_ªcv_timeout
, 
METH_VARARGS
 },

1481 {"is_uƒecovîabÀ",
pyis_uƒecovîabÀ
, 
METH_VARARGS
, 
pyzk_is_uƒecovîabÀ_doc
 },

1482 {"£t_debug_Àvñ",
pyzoo_£t_debug_Àvñ
, 
METH_VARARGS
, 
pyzk_£t_debug_Àvñ_doc
 },

1483 {"£t_log_°ªam",
pyzoo_£t_log_°ªam
, 
METH_VARARGS
, 
pyzk_£t_log_°ªam_doc
 },

1484 {"dëîmöi°ic_c⁄n_‹dî",
pyzoo_dëîmöi°ic_c⁄n_‹dî
, 
METH_VARARGS
, 
pyzk_dëîmöi°ic_c⁄n_‹dî_doc
 },

1485 {"a¸óã", 
pyzoo_a¸óã
, 
METH_VARARGS
, 
pyzk_a¸óã_doc
 },

1486 {"adñëe", 
pyzoo_adñëe
, 
METH_VARARGS
,
pyzk_adñëe_doc
 },

1487 {"´xi°s", 
pyzoo_´xi°s
, 
METH_VARARGS
,
pyzk_´xi°s_doc
 },

1488 {"agë", 
pyzoo_agë
, 
METH_VARARGS
, 
pyzk_agë_doc
 },

1489 {"a£t", 
pyzoo_a£t
, 
METH_VARARGS
, 
pyzk_a£t_doc
 },

1490 {"agë_chûdªn", 
pyzoo_agë_chûdªn
, 
METH_VARARGS
, 
pyzk_agë_chûdªn_doc
 },

1491 {"async", 
pyzoo_async
, 
METH_VARARGS
, 
pyzk_async_doc
 },

1492 {"agë_a˛", 
pyzoo_agë_a˛
, 
METH_VARARGS
, 
pyzk_agë_a˛_doc
 },

1493 {"a£t_a˛", 
pyzoo_a£t_a˛
, 
METH_VARARGS
, 
pyzk_a£t_a˛_doc
 },

1494 {"zîr‹", 
pyzîr‹
, 
METH_VARARGS
, 
pyzk_zîr‹_doc
 },

1495 {"add_auth", 
pyzoo_add_auth
, 
METH_VARARGS
, 
pyzk_add_auth_doc
 },

1501 {
NULL
, NULL}

1504 
	#ADD_INTCONSTANT
(
x
Ë
	`PyModuÀ_AddI¡C⁄°™t
(
moduÀ
, #x, 
ZOO_
##x)

	)

1505 
	#ADD_INTCONSTANTZ
(
x
Ë
	`PyModuÀ_AddI¡C⁄°™t
(
moduÀ
, #x, 
Z
##x)

	)

1507 
	#ADD_EXCEPTION
(
x
Ëx = 
	`PyEº_NewEx˚±i⁄
("zookì≥r."#x, 
ZooKì≥rEx˚±i⁄
, 
NULL
); \

1508 
	`Py_INCREF
(
x
); \

1509 
	`PyModuÀ_AddObje˘
(
moduÀ
, #x, 
x
);

	)

1512 
PyMODINIT_FUNC
 
	$öôzookì≥r
() {

1513 
	`PyEvÆ_InôThªads
();

1514 
PyObje˘
 *
moduÀ
 = 
	`Py_InôModuÀ
("zookì≥r", 
ZooKì≥rMëhods
 );

1515 i‡(
	`öô_zh™dÀs
(32) == 0) {

1519 
ZooKì≥rEx˚±i⁄
 = 
	`PyEº_NewEx˚±i⁄
("zookeeper.ZooKeeperException",

1520 
PyExc_Ex˚±i⁄
,

1521 
NULL
);

1523 
	`PyModuÀ_AddObje˘
(
moduÀ
, "ZooKì≥rEx˚±i⁄", 
ZooKì≥rEx˚±i⁄
);

1524 
	`Py_INCREF
(
ZooKì≥rEx˚±i⁄
);

1526 
size
 = 10;

1527 
vîsi⁄_°r
[
size
];

1528 
	`¢¥ötf
(
vîsi⁄_°r
, 
size
, "%i.%i.%i", 
ZOO_MAJOR_VERSION
, 
ZOO_MINOR_VERSION
, 
ZOO_PATCH_VERSION
);

1530 
	`PyModuÀ_AddSåögC⁄°™t
(
moduÀ
, "__vîsi⁄__", 
vîsi⁄_°r
);

1532 
	`ADD_INTCONSTANT
(
PERM_READ
);

1533 
	`ADD_INTCONSTANT
(
PERM_WRITE
);

1534 
	`ADD_INTCONSTANT
(
PERM_CREATE
);

1535 
	`ADD_INTCONSTANT
(
PERM_DELETE
);

1536 
	`ADD_INTCONSTANT
(
PERM_ALL
);

1537 
	`ADD_INTCONSTANT
(
PERM_ADMIN
);

1539 
	`ADD_INTCONSTANT
(
EPHEMERAL
);

1540 
	`ADD_INTCONSTANT
(
SEQUENCE
);

1542 
	`ADD_INTCONSTANT
(
EXPIRED_SESSION_STATE
);

1543 
	`ADD_INTCONSTANT
(
AUTH_FAILED_STATE
);

1544 
	`ADD_INTCONSTANT
(
CONNECTING_STATE
);

1545 
	`ADD_INTCONSTANT
(
ASSOCIATING_STATE
);

1546 
	`ADD_INTCONSTANT
(
CONNECTED_STATE
);

1548 
	`ADD_INTCONSTANT
(
CREATED_EVENT
);

1549 
	`ADD_INTCONSTANT
(
DELETED_EVENT
);

1550 
	`ADD_INTCONSTANT
(
CHANGED_EVENT
);

1551 
	`ADD_INTCONSTANT
(
CHILD_EVENT
);

1552 
	`ADD_INTCONSTANT
(
SESSION_EVENT
);

1553 
	`ADD_INTCONSTANT
(
NOTWATCHING_EVENT
);

1555 
	`ADD_INTCONSTANT
(
LOG_LEVEL_ERROR
);

1556 
	`ADD_INTCONSTANT
(
LOG_LEVEL_WARN
);

1557 
	`ADD_INTCONSTANT
(
LOG_LEVEL_INFO
);

1558 
	`ADD_INTCONSTANT
(
LOG_LEVEL_DEBUG
);

1560 
	`ADD_INTCONSTANTZ
(
SYSTEMERROR
);

1561 
	`ADD_INTCONSTANTZ
(
RUNTIMEINCONSISTENCY
);

1562 
	`ADD_INTCONSTANTZ
(
DATAINCONSISTENCY
);

1563 
	`ADD_INTCONSTANTZ
(
CONNECTIONLOSS
);

1564 
	`ADD_INTCONSTANTZ
(
MARSHALLINGERROR
);

1565 
	`ADD_INTCONSTANTZ
(
UNIMPLEMENTED
);

1566 
	`ADD_INTCONSTANTZ
(
OPERATIONTIMEOUT
);

1567 
	`ADD_INTCONSTANTZ
(
BADARGUMENTS
);

1568 
	`ADD_INTCONSTANTZ
(
INVALIDSTATE
);

1570 
	`ADD_EXCEPTION
(
Sy°emEº‹Ex˚±i⁄
);

1571 
	`ADD_EXCEPTION
(
Ru¡imeInc⁄si°ícyEx˚±i⁄
);

1572 
	`ADD_EXCEPTION
(
D©aInc⁄si°ícyEx˚±i⁄
);

1573 
	`ADD_EXCEPTION
(
C⁄√˘i⁄LossEx˚±i⁄
);

1574 
	`ADD_EXCEPTION
(
M¨shÆlögEº‹Ex˚±i⁄
);

1575 
	`ADD_EXCEPTION
(
Unim∂emíãdEx˚±i⁄
);

1576 
	`ADD_EXCEPTION
(
O≥øti⁄TimeoutEx˚±i⁄
);

1577 
	`ADD_EXCEPTION
(
BadArgumítsEx˚±i⁄
);

1578 
	`ADD_EXCEPTION
(
InvÆidSèãEx˚±i⁄
);

1580 
	`ADD_INTCONSTANTZ
(
OK
);

1581 
	`ADD_INTCONSTANTZ
(
APIERROR
);

1582 
	`ADD_INTCONSTANTZ
(
NONODE
);

1583 
	`ADD_INTCONSTANTZ
(
NOAUTH
);

1584 
	`ADD_INTCONSTANTZ
(
BADVERSION
);

1585 
	`ADD_INTCONSTANTZ
(
NOCHILDRENFOREPHEMERALS
);

1586 
	`ADD_INTCONSTANTZ
(
NODEEXISTS
);

1587 
	`ADD_INTCONSTANTZ
(
NOTEMPTY
);

1588 
	`ADD_INTCONSTANTZ
(
SESSIONEXPIRED
);

1589 
	`ADD_INTCONSTANTZ
(
INVALIDCALLBACK
);

1590 
	`ADD_INTCONSTANTZ
(
INVALIDACL
);

1591 
	`ADD_INTCONSTANTZ
(
AUTHFAILED
);

1592 
	`ADD_INTCONSTANTZ
(
CLOSING
);

1593 
	`ADD_INTCONSTANTZ
(
NOTHING
);

1594 
	`ADD_INTCONSTANTZ
(
SESSIONMOVED
);

1596 
	`ADD_EXCEPTION
(
ApiEº‹Ex˚±i⁄
);

1597 
	`ADD_EXCEPTION
(
NoNodeEx˚±i⁄
);

1598 
	`ADD_EXCEPTION
(
NoAuthEx˚±i⁄
);

1599 
	`ADD_EXCEPTION
(
BadVîsi⁄Ex˚±i⁄
);

1600 
	`ADD_EXCEPTION
(
NoChûdªnF‹EphemîÆsEx˚±i⁄
);

1601 
	`ADD_EXCEPTION
(
NodeExi°sEx˚±i⁄
);

1602 
	`ADD_EXCEPTION
(
NŸEm±yEx˚±i⁄
);

1603 
	`ADD_EXCEPTION
(
Sessi⁄ExpúedEx˚±i⁄
);

1604 
	`ADD_EXCEPTION
(
InvÆidCÆlbackEx˚±i⁄
);

1605 
	`ADD_EXCEPTION
(
InvÆidACLEx˚±i⁄
);

1606 
	`ADD_EXCEPTION
(
AuthFaûedEx˚±i⁄
);

1607 
	`ADD_EXCEPTION
(
ClosögEx˚±i⁄
);

1608 
	`ADD_EXCEPTION
(
NŸhögEx˚±i⁄
);

1609 
	`ADD_EXCEPTION
(
Sessi⁄MovedEx˚±i⁄
);

1610 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/SimpleTree.h

19 #i‚de‡
__SIMPLE_TREE_H__


20 
	#__SIMPLE_TREE_H__


	)

22 
	~<ve˘‹
>

23 
	~<boo°/sh¨ed_±r.hµ
>

25 
«me•a˚
 
	gzkåìutû


27 
usög
 
	g°d
::
ve˘‹
;

32 
	gãm∂©e
 < 
˛ass
 
	gKeyTy≥
, cœs†
	gD©aTy≥
 > cœs†
	cSim∂eTªeNode


34 
	g¥iv©e
:

38 
boo°
::
	tsh¨ed_±r
< 
	tSim∂eTªeNode
< 
	tKeyTy≥
, 
	tD©aTy≥
 > > 
	tSim∂eTªeNodeS±r
;

40 
	gpublic
:

46 
Sim∂eTªeNode
 (
boﬁ
 
isRoŸ
=
Ál£
Ë: 
isRoŸ_
(isRoot)

56 
Sim∂eTªeNode
 (c⁄° 
KeyTy≥
& 
key
, 
boﬁ
 
isRoŸ
=
Ál£
) :

57 
isRoŸ_
(
isRoŸ
), 
key_
(
key
)

68 
Sim∂eTªeNode
 (c⁄° 
KeyTy≥
& 
key
, c⁄° 
D©aTy≥
& 
vÆ
, 
boﬁ
 
isRoŸ
=
Ál£
) :

69 
isRoŸ_
(
isRoŸ
), 
key_
(
key
), 
vÆ_
(
vÆ
)

76 ~
Sim∂eTªeNode
 (Ë
throw
() {}

83 
addChûd
 (c⁄° 
Sim∂eTªeNodeS±r
 
node
Ë{ 
	gchûdªn_
.
push_back
 (node); }

90 
£tKey
 (c⁄° 
KeyTy≥
& 
key
Ë{ 
	gkey_
 = key; }

97 
£tD©a
 (c⁄° 
D©aTy≥
& 
vÆ
Ë{ 
	gvÆ_
 = val; }

104 
KeyTy≥
 
gëKey
 (Ëc⁄° {  
	gkey_
; }

111 
D©aTy≥
 
gëD©a
 (Ëc⁄° {  
	gvÆ_
; }

119 
Sim∂eTªeNodeS±r
 
gëChûd
 (
idx
Ëc⁄° {  
	gchûdªn_
[idx]; }

126 
numChûdªn
 (Ëc⁄° {  
	gchûdªn_
.
size
(); }

133 
boﬁ
 
isRoŸ
 (Ëc⁄° {  
	gisRoŸ_
; }

140 
boﬁ
 
isLóf
 (Ëc⁄° {  !
numChûdªn
(); }

142 
	g¥iv©e
:

143 
boﬁ
 
isRoŸ_
;

144 
KeyTy≥
 
	gkey_
;

145 
D©aTy≥
 
	gvÆ_
;

146 
	gve˘‹
< 
	gSim∂eTªeNodeS±r
 > 
	gchûdªn_
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/ZkAdaptor.h

19 #i‚de‡
__ZK_ADAPTER_H__


20 
	#__ZK_ADAPTER_H__


	)

22 
	~<°rög
>

23 
	~<ve˘‹
>

26 
	~"zookì≥r.h
"

29 
«me•a˚
 
zkåìutû


31 
usög
 
°d
::
°rög
;

32 
usög
 
°d
::
ve˘‹
;

37 ˛as†
	cZooKì≥rEx˚±i⁄
 : 
public
 
°d
::
ex˚±i⁄


39 
public
:

46 
ZooKì≥rEx˚±i⁄
(c⁄° 
°rög
& 
msg
) :

47 
m_mesßge
(
msg
),

48 
m_zkEº‹Code
(0) {}

56 
ZooKì≥rEx˚±i⁄
(c⁄° 
°rög
 &
msg
, 
îr‹Code
) :

57 
m_zkEº‹Code
(
îr‹Code
)

59 
tmp
[100];

60 
•rötf
–
tmp
, " (ZKÉº‹ code: %d)", 
îr‹Code
 );

61 
m_mesßge
 = 
msg
 + 
tmp
;

67 ~
ZooKì≥rEx˚±i⁄
(Ë
throw
() {}

72 c⁄° *
wh©
(Ëc⁄° 
throw
()

74  
m_mesßge
.
c_°r
();

80 
gëZKEº‹Code
() const

82  
m_zkEº‹Code
;

85 
¥iv©e
:

90 
°rög
 
m_mesßge
;

95 
m_zkEº‹Code
;

102 ˛as†
	cZooKì≥rC⁄fig


104 
public
:

114 
ZooKì≥rC⁄fig
(c⁄° 
°rög
 &
ho°s
,

115 
Àa£Timeout
,

116 
boﬁ
 
autoRec⁄√˘
 = 
åue
,

117 
c⁄√˘Timeout
 = 15000)

118 : 
m_ho°s
(
ho°s
),

119 
m_Àa£Timeout
(
Àa£Timeout
),

120 
m_autoRec⁄√˘
(
autoRec⁄√˘
),

121 
m_c⁄√˘Timeout
(
c⁄√˘Timeout
) {}

126 
°rög
 
gëHo°s
(Ëc⁄° {  
m_ho°s
; }

131 
gëLó£Timeout
(Ëc⁄° {  
m_Àa£Timeout
; }

137 
boﬁ
 
gëAutoRec⁄√˘
(Ëc⁄° {  
m_autoRec⁄√˘
; }

144 
gëC⁄√˘Timeout
(Ëc⁄° {  
m_c⁄√˘Timeout
; }

146 
¥iv©e
:

151 c⁄° 
°rög
 
m_ho°s
;

156 c⁄° 
m_Àa£Timeout
;

162 c⁄° 
boﬁ
 
m_autoRec⁄√˘
;

168 c⁄° 
m_c⁄√˘Timeout
;

174 ˛as†
	cZooKì≥rAd≠ãr


176 
public
:

187 
ZooKì≥rAd≠ãr
(
ZooKì≥rC⁄fig
 
c⁄fig
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

192 ~
ZooKì≥rAd≠ãr
();

197 c⁄° 
ZooKì≥rC⁄fig
 &
gëZooKì≥rC⁄fig
(Ëc⁄° {  
m_zkC⁄fig
; }

206 
ªc⁄√˘
(Ë
throw
(
ZooKì≥rEx˚±i⁄
);

211 
disc⁄√˘
();

226 
boﬁ
 
¸óãNode
(c⁄° 
°rög
 &
∑th
,

227 c⁄° 
°rög
 &
vÆue
 = "",

228 
Êags
 = 0,

229 
boﬁ
 
¸óãAn˚°‹s
 = 
åue
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

244 
boﬁ
 
dñëeNode
(c⁄° 
°rög
 &
∑th
,

245 
boﬁ
 
ªcursive
 = 
Ál£
,

246 
vîsi⁄
 = -1Ë
throw
(
ZooKì≥rEx˚±i⁄
);

255 
ve˘‹
<
°rög
> 
gëNodeChûdªn
–c⁄° såög &
∑th
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

264 
boﬁ
 
nodeExi°s
(c⁄° 
°rög
 &
∑th
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

274 
°rög
 
gëNodeD©a
(c⁄° såög &
∑th
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

287 
£tNodeD©a
(c⁄° 
°rög
 &
∑th
,

288 c⁄° 
°rög
 &
vÆue
,

289 
vîsi⁄
 = -1Ë
throw
(
ZooKì≥rEx˚±i⁄
);

299 
vÆid©eP©h
(c⁄° 
°rög
 &
∑th
Ë
throw
(
ZooKì≥rEx˚±i⁄
);

301 
¥iv©e
:

310 
vîifyC⁄√˘i⁄
(Ë
throw
(
ZooKì≥rEx˚±i⁄
);

312 
¥iv©e
:

317 c⁄° 
ZooKì≥rC⁄fig
 
m_zkC⁄fig
;

322 
zh™dÀ_t
 *
mp_zkH™dÀ
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/ZkTreeUtil.h

19 #i‚de‡
__ZK_TREE_UTIL_H__


20 
	#__ZK_TREE_UTIL_H__


	)

22 
	~<libxml/∑r£r.h
>

23 
	~<libxml/åì.h
>

24 
	~"Sim∂eTªe.h
"

25 
	~"ZkAd≠t‹.h
"

27 
«me•a˚
 
	gzkåìutû


30 
	#ZKTREEUTIL_INF
 1000000000

	)

34 
	sZkNodeD©a


39 
°rög
 
	gvÆue
;

45 
boﬁ
 
	gign‹eUpd©e
;

53 
ZkNodeD©a
 (c⁄° 
°rög
& 
vÆ
, 
boﬁ
 
ign‹e
=
Ál£
)

54 : 
vÆue
 (
vÆ
), 
ign‹eUpd©e
 (
ign‹e
) {}

61 
ZkNodeD©a
 (
boﬁ
 
ign‹e
=
Ál£
)

62 : 
ign‹eUpd©e
 (
ign‹e
) {}

68 
	gSim∂eTªeNode
< 
	t°rög
, 
	tZkNodeD©a
 > 
	tZkTªeNode
;

73 
	gboo°
::
	tsh¨ed_±r
< 
	tZkTªeNode
 > 
	tZkTªeNodeS±r
;

78 
	gboo°
::
	tsh¨ed_±r
< 
	tZooKì≥rAd≠ãr
 > 
	tZooKì≥rAd≠ãrS±r
;

87 
	sZkA˘i⁄


92 
	eZkA˘i⁄Ty≥


94 
	gNONE
,

95 
	gCREATE
,

96 
	gDELETE
,

97 
	gVALUE
,

103 
ZkA˘i⁄Ty≥
 
	ga˘i⁄
;

108 
°rög
 
	gkey
;

113 
°rög
 
	g√wvÆ
;

118 
°rög
 
	gﬁdvÆ
;

123 
ZkA˘i⁄
 ()

124 : 
a˘i⁄
 (
ZkA˘i⁄
::
NONE
) {}

132 
ZkA˘i⁄
 (
ZkA˘i⁄Ty≥
 
a˘
, c⁄° 
°rög
& 
k
)

133 : 
a˘i⁄
(
a˘
),

134 
key
(
k
) {}

143 
ZkA˘i⁄
 (
ZkA˘i⁄Ty≥
 
a˘
, c⁄° 
°rög
& 
k
, c⁄° såög& 
v
)

144 : 
a˘i⁄
(
a˘
),

145 
key
(
k
),

146 
√wvÆ
(
v
) {}

156 
ZkA˘i⁄
 (
ZkA˘i⁄Ty≥
 
a˘
, c⁄° 
°rög
& 
k
, c⁄° såög& 
nv
, c⁄° såög& 
ov
)

157 : 
a˘i⁄
 (
a˘
),

158 
key
(
k
),

159 
√wvÆ
(
nv
),

160 
ﬁdvÆ
(
ov
) {}

169 ˛as†
	cZkTªeUtû


171 
	gpublic
:

175 
	eZkA˘i⁄ExecuãFœg


177 
NONE
 = 0,

178 
	gPRINT
 = 1,

179 
	gEXECUTE
 = 2,

180 
	gINTERACTIVE
 = 5,

183 
	gpublic
:

190 
ZooKì≥rAd≠ãrS±r
 
gë_zkH™dÀ
 (c⁄° 
°rög
& 
zkHo°s
);

193 
	gpublic
:

197 
ZkTªeUtû
 (Ë: 
lﬂded_
(
Ál£
) {}

206 
lﬂdZkTªe
 (c⁄° 
°rög
& 
zkHo°s
, c⁄° såög& 
∑th
="/", 
boﬁ
 
f‹˚
=
Ál£
);

214 
lﬂdZkTªeXml
 (c⁄° 
°rög
& 
zkXmlC⁄fig
, 
boﬁ
 
f‹˚
=
Ál£
);

223 
wrôeZkTªe
 (c⁄° 
°rög
& 
zkHo°s
, c⁄° såög& 
∑th
="/", 
boﬁ
 
f‹˚
=
Ál£
) const;

231 
dumpZkTªe
 (
boﬁ
 
xml
=
Ál£
, 
dïth
=
ZKTREEUTIL_INF
) const;

241 
	gve˘‹
< 
	gZkA˘i⁄
 > 
diffZkTªe
 (c⁄° 
°rög
& 
zkHo°s
, c⁄° såög& 
∑th
="/") const;

251 
execuãZkA˘i⁄s
 (c⁄° 
°rög
& 
zkHo°s
,

252 c⁄° 
ve˘‹
< 
ZkA˘i⁄
 >& 
zkA˘i⁄s
,

253 
execFœgs
) const;

255 
	g¥iv©e
:

257 
ZkTªeNodeS±r
 
zkRoŸS±r_
;

258 
boﬁ
 
	glﬂded_
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/ZooInspector.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gWödowAd≠ãr
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gWödowEvít
;

23 
imp‹t
 
	gjavax
.
	gswög
.
	gJFøme
;

24 
imp‹t
 
	gjavax
.
	gswög
.
	gJO±i⁄P™e
;

25 
imp‹t
 
	gjavax
.
	gswög
.
	gUIM™agî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gZooIn•e˘‹P™ñ
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹M™agîIm∂
;

34 
public
 cœs†
	cZooIn•e˘‹
 {

40 
public
 
	$maö
(
Såög
[] 
¨gs
) {

41 
åy
 {

42 
UIM™agî
.
	`£tLookAndFìl
(UIM™agî.
	`gëSy°emLookAndFìlCœssName
());

43 
JFøme
 
‰ame
 = 
√w
 
	`JFøme
("ZooInspector");

44 
‰ame
.
	`£tDeÁu…Clo£O≥øti⁄
(
JFøme
.
EXIT_ON_CLOSE
);

45 
föÆ
 
ZooIn•e˘‹P™ñ
 
zooIn•e˘‹P™ñ
 = 
√w
 
	`ZooIn•e˘‹P™ñ
(

46 
√w
 
	`ZooIn•e˘‹M™agîIm∂
());

47 
‰ame
.
	`addWödowLi°íî
(
√w
 
	`WödowAd≠ãr
() {

48 @
Ovîride


49 
public
 
	`wödowClo£d
(
WödowEvít
 
e
) {

50 
su≥r
.
	`wödowClo£d
(
e
);

51 
zooIn•e˘‹P™ñ
.
	`disc⁄√˘
(
åue
);

55 
‰ame
.
	`£tC⁄ã¡P™e
(
zooIn•e˘‹P™ñ
);

56 
‰ame
.
	`£tSize
(1024, 768);

57 
‰ame
.
	`£tVisibÀ
(
åue
);

58 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

59 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

60 "Eº‹ occuºedÜﬂdög ZooIn•e˘‹", 
e
);

61 
JO±i⁄P™e
.
	`showMesßgeDülog
(
nuŒ
,

62 "ZooIn•e˘‹ faûedÅÿ°¨t: " + 
e
.
	`gëMesßge
(), "Error",

63 
JO±i⁄P™e
.
ERROR_MESSAGE
);

66 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/encryption/BasicDataEncryptionManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gí¸y±i⁄
;

23 
public
 cœs†
	cBasicD©aEn¸y±i⁄M™agî
 
im∂emíts
 
	mD©aEn¸y±i⁄M™agî
 {

32 
public
 
Såög
 
	$de¸y±D©a
(
byã
[] 
í¸y±ed
Ë
throws
 
Ex˚±i⁄
 {

33  
√w
 
	`Såög
(
í¸y±ed
);

43 
public
 
byã
[] 
	$í¸y±D©a
(
Såög
 
d©a
Ë
throws
 
Ex˚±i⁄
 {

44 i‡(
d©a
 =
nuŒ
) {

45  
√w
 
byã
[0];

47  
d©a
.
	`gëByãs
();

48 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/encryption/DataEncryptionManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gí¸y±i⁄
;

23 
public
 
öãrÁ˚
 
	gD©aEn¸y±i⁄M™agî
 {

30 
public
 
	gbyã
[] 
í¸y±D©a
(
Såög
 
d©a
Ë
throws
 
	gEx˚±i⁄
;

38 
public
 
Såög
 
de¸y±D©a
(
byã
[] 
í¸y±ed
Ë
throws
 
	gEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/NodeViewersChangeListener.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
.
	gZooIn•e˘‹NodeVõwî
;

27 
public
 
öãrÁ˚
 
	gNodeVõwîsCh™geLi°íî
 {

36 
public
 
nodeVõwîsCh™ged
(
Li°
<
ZooIn•e˘‹NodeVõwî
> 
√wVõwîs
);

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorAboutDialog.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gDimísi⁄
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gFlowLayout
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gFøme
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

25 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjavax
.
	gswög
.
	gJBuâ⁄
;

29 
imp‹t
 
	gjavax
.
	gswög
.
	gJDülog
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gJEdô‹P™e
;

31 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

38 
public
 cœs†
	cZooIn•e˘‹AboutDülog
 
exãnds
 
	mJDülog
 {

43 
public
 
	$ZooIn•e˘‹AboutDülog
(
Føme
 
‰ame
) {

44 
	`su≥r
(
‰ame
);

45 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

46 
this
.
	`£tIc⁄Image
(
ZooIn•e˘‹Ic⁄Resour˚s
.
	`gëInf‹m©i⁄Ic⁄
()

47 .
	`gëImage
());

48 
this
.
	`£tTôÀ
("About ZooInspector");

49 
this
.
	`£tModÆ
(
åue
);

50 
this
.
	`£tAlwaysOnT›
(
åue
);

51 
this
.
	`£tResizabÀ
(
Ál£
);

52 
JP™ñ
 
∑√l
 = 
√w
 
	`JP™ñ
();

53 
∑√l
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

54 
JEdô‹P™e
 
aboutP™e
 = 
√w
 
	`JEdô‹P™e
();

55 
aboutP™e
.
	`£tEdôabÀ
(
Ál£
);

56 
aboutP™e
.
	`£tO∑que
(
Ál£
);

57 
java
.
√t
.
URL
 
aboutURL
 = 
ZooIn•e˘‹AboutDülog
.
˛ass


58 .
	`gëResour˚
("about.html");

59 
åy
 {

60 
aboutP™e
.
	`£tPage
(
aboutURL
);

61 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

62 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

63 "Eº‹Üﬂdögábout.html, fûêmay bêc‹ru±", 
e
);

65 
∑√l
.
	`add
(
aboutP™e
, 
B‹dîLayout
.
CENTER
);

66 
∑√l
.
	`£tPª„ºedSize
(
√w
 
	`Dimísi⁄
(600, 200));

67 
JP™ñ
 
buâ⁄sP™ñ
 = 
√w
 
	`JP™ñ
();

68 
buâ⁄sP™ñ
.
	`£tLayout
(
√w
 
	`FlowLayout
(
FlowLayout
.
CENTER
, 10, 10));

69 
JBuâ⁄
 
okBuâ⁄
 = 
√w
 
	`JBuâ⁄
("OK");

70 
okBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

71 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

72 
ZooIn•e˘‹AboutDülog
.
this
.
	`di•o£
();

75 
buâ⁄sP™ñ
.
	`add
(
okBuâ⁄
);

76 
this
.
	`add
(
∑√l
, 
B‹dîLayout
.
CENTER
);

77 
this
.
	`add
(
buâ⁄sP™ñ
, 
B‹dîLayout
.
SOUTH
);

78 
this
.
	`∑ck
();

80 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorConnectionPropertiesDialog.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagC⁄°øöts
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagLayout
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gIn£ts
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

25 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

27 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

35 
imp‹t
 
	gjavax
.
	gswög
.
	gJBuâ⁄
;

36 
imp‹t
 
	gjavax
.
	gswög
.
	gJComboBox
;

37 
imp‹t
 
	gjavax
.
	gswög
.
	gJComp⁄ít
;

38 
imp‹t
 
	gjavax
.
	gswög
.
	gJDülog
;

39 
imp‹t
 
	gjavax
.
	gswög
.
	gJFûeChoo£r
;

40 
imp‹t
 
	gjavax
.
	gswög
.
	gJLabñ
;

41 
imp‹t
 
	gjavax
.
	gswög
.
	gJO±i⁄P™e
;

42 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

43 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextFõld
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gPaú
;

52 
public
 cœs†
	cZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
 
exãnds
 
	mJDülog
 {

54 
¥iv©e
 
föÆ
 
	mHashM≠
<
	mSåög
, 
	mJComp⁄ít
> 
	mcomp⁄íts
;

66 
public
 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
(

67 
Pr›îtõs
 
œ°C⁄√˘i⁄Pr›s
,

68 
Paú
<
M≠
<
Såög
, 
Li°
<Såög>>, M≠<Såög, Såög>> 
c⁄√˘i⁄Pr›îtõsTem∂©eAndLabñs
,

69 
föÆ
 
ZooIn•e˘‹P™ñ
 
zooIn•e˘‹P™ñ
) {

70 
föÆ
 
	mM≠
<
	mSåög
, 
	mLi°
<Såög>> 
	mc⁄√˘i⁄Pr›îtõsTem∂©e
 = 
c⁄√˘i⁄Pr›îtõsTem∂©eAndLabñs


71 .
gëKey
();

72 
föÆ
 
	mM≠
<
	mSåög
, Såög> 
	mc⁄√˘i⁄Pr›îtõsLabñs
 = 
c⁄√˘i⁄Pr›îtõsTem∂©eAndLabñs


73 .
gëVÆue
();

74 
	mthis
.
£tLayout
(
√w
 
B‹dîLayout
());

75 
	mthis
.
£tTôÀ
("Connection Settings");

76 
	mthis
.
£tModÆ
(
åue
);

77 
	mthis
.
£tAlwaysOnT›
(
åue
);

78 
	mthis
.
£tResizabÀ
(
Ál£
);

79 
föÆ
 
JP™ñ
 
	m›ti⁄s
 = 
√w
 JPanel();

80 
föÆ
 
JFûeChoo£r
 
	mfûeChoo£r
 = 
√w
 JFileChooser();

81 
	m›ti⁄s
.
£tLayout
(
√w
 
GridBagLayout
());

82 
	mi
 = 0;

83 
	mcomp⁄íts
 = 
√w
 
HashM≠
<
Såög
, 
	mJComp⁄ít
>();

84 
	mE¡ry
<
	mSåög
, 
	mLi°
<Såög>> 
	míåy
 : 
c⁄√˘i⁄Pr›îtõsTem∂©e


85 .
íåySë
()) {

86 
rowPos
 = 2 * 
i
 + 1;

87 
JLabñ
 
	mœbñ
 = 
√w
 JLabñ(
c⁄√˘i⁄Pr›îtõsLabñs
.
gë
(
íåy


88 .
gëKey
()));

89 
GridBagC⁄°øöts
 
	mc1
 = 
√w
 GridBagConstraints();

90 
	mc1
.
	mgridx
 = 0;

91 
	mc1
.
	mgridy
 = 
rowPos
;

92 
	mc1
.
	mgridwidth
 = 1;

93 
	mc1
.
	mgridheight
 = 1;

94 
	mc1
.
	mweightx
 = 0;

95 
	mc1
.
	mweighty
 = 0;

96 
	mc1
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

97 
	mc1
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

98 
	mc1
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

99 
	mc1
.
	mùadx
 = 0;

100 
	mc1
.
	mùady
 = 0;

101 
	m›ti⁄s
.
add
(
œbñ
, 
c1
);

102 i‡(
	míåy
.
gëVÆue
().
size
() == 0) {

103 
JTextFõld
 
ãxt
 = 
√w
 JTextField();

104 
GridBagC⁄°øöts
 
	mc2
 = 
√w
 GridBagConstraints();

105 
	mc2
.
	mgridx
 = 2;

106 
	mc2
.
	mgridy
 = 
rowPos
;

107 
	mc2
.
	mgridwidth
 = 1;

108 
	mc2
.
	mgridheight
 = 1;

109 
	mc2
.
	mweightx
 = 0;

110 
	mc2
.
	mweighty
 = 0;

111 
	mc2
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

112 
	mc2
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

113 
	mc2
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

114 
	mc2
.
	mùadx
 = 0;

115 
	mc2
.
	mùady
 = 0;

116 
	m›ti⁄s
.
add
(
ãxt
, 
c2
);

117 
	mcomp⁄íts
.
put
(
íåy
.
gëKey
(), 
ãxt
);

118 } i‡(
	míåy
.
gëVÆue
().
size
() == 1) {

119 
JTextFõld
 
ãxt
 = 
√w
 JTextFõld(
íåy
.
gëVÆue
().
gë
(0));

120 
GridBagC⁄°øöts
 
	mc2
 = 
√w
 GridBagConstraints();

121 
	mc2
.
	mgridx
 = 2;

122 
	mc2
.
	mgridy
 = 
rowPos
;

123 
	mc2
.
	mgridwidth
 = 1;

124 
	mc2
.
	mgridheight
 = 1;

125 
	mc2
.
	mweightx
 = 0;

126 
	mc2
.
	mweighty
 = 0;

127 
	mc2
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

128 
	mc2
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

129 
	mc2
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

130 
	mc2
.
	mùadx
 = 0;

131 
	mc2
.
	mùady
 = 0;

132 
	m›ti⁄s
.
add
(
ãxt
, 
c2
);

133 
	mcomp⁄íts
.
put
(
íåy
.
gëKey
(), 
ãxt
);

135 
	mLi°
<
	mSåög
> 
	mli°
 = 
íåy
.
gëVÆue
();

136 
JComboBox
 
	mcombo
 = 
√w
 JComboBox(
li°
.
toAºay
“ew 
Såög
[list

137 .
size
()]));

138 
	mcombo
.
£tSñe˘edIãm
(
li°
.
gë
(0));

139 
GridBagC⁄°øöts
 
	mc2
 = 
√w
 GridBagConstraints();

140 
	mc2
.
	mgridx
 = 2;

141 
	mc2
.
	mgridy
 = 
rowPos
;

142 
	mc2
.
	mgridwidth
 = 1;

143 
	mc2
.
	mgridheight
 = 1;

144 
	mc2
.
	mweightx
 = 0;

145 
	mc2
.
	mweighty
 = 0;

146 
	mc2
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

147 
	mc2
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

148 
	mc2
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

149 
	mc2
.
	mùadx
 = 0;

150 
	mc2
.
	mùady
 = 0;

151 
	m›ti⁄s
.
add
(
combo
, 
c2
);

152 
	mcomp⁄íts
.
put
(
íåy
.
gëKey
(), 
combo
);

154 
	mi
++;

156 
lﬂdC⁄√˘i⁄Pr›s
(
œ°C⁄√˘i⁄Pr›s
);

157 
JP™ñ
 
	mbuâ⁄sP™ñ
 = 
√w
 JPanel();

158 
	mbuâ⁄sP™ñ
.
£tLayout
(
√w
 
GridBagLayout
());

159 
JBuâ⁄
 
	mlﬂdPr›sFûeBuâ⁄
 = 
√w
 JButton("Load from file");

160 
	mlﬂdPr›sFûeBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

162 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

163 
ªsu…
 = 
fûeChoo£r


164 .
showO≥nDülog
(
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
.
this
);

165 i‡(
ªsu…
 =
JFûeChoo£r
.
APPROVE_OPTION
) {

166 
Fûe
 
¥›sFûeP©h
 = 
fûeChoo£r
.
gëSñe˘edFûe
();

167 
Pr›îtõs
 
¥›s
 = 
√w
 Properties();

168 
åy
 {

169 
FûeRódî
 
ªadî
 = 
√w
 FûeRódî(
¥›sFûeP©h
);

170 
åy
 {

171 
¥›s
.
lﬂd
(
ªadî
);

172 
lﬂdC⁄√˘i⁄Pr›s
(
¥›s
);

173 } 
föÆly
 {

174 
ªadî
.
˛o£
();

176 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

177 
LoggîFa˘‹y


178 .
gëLoggî
()

179 .
îr‹
(

181 
ex
);

182 
JO±i⁄P™e


183 .
showMesßgeDülog
(

184 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
.
this
,

186 "Eº‹", 
JO±i⁄P™e
.
ERROR_MESSAGE
);

188 
›ti⁄s
.
ªvÆid©e
();

189 
›ti⁄s
.
ª∑öt
();

194 
GridBagC⁄°øöts
 
	mc3
 = 
√w
 GridBagConstraints();

195 
	mc3
.
	mgridx
 = 0;

196 
	mc3
.
	mgridy
 = 0;

197 
	mc3
.
	mgridwidth
 = 1;

198 
	mc3
.
	mgridheight
 = 1;

199 
	mc3
.
	mweightx
 = 0;

200 
	mc3
.
	mweighty
 = 1;

201 
	mc3
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
SOUTHWEST
;

202 
	mc3
.
	mfûl
 = 
GridBagC⁄°øöts
.
NONE
;

203 
	mc3
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

204 
	mc3
.
	mùadx
 = 0;

205 
	mc3
.
	mùady
 = 0;

206 
	mbuâ⁄sP™ñ
.
add
(
lﬂdPr›sFûeBuâ⁄
, 
c3
);

207 
JBuâ⁄
 
	mßveDeÁu…Pr›sFûeBuâ⁄
 = 
√w
 JButton("Set As Default");

208 
	mßveDeÁu…Pr›sFûeBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

210 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

212 
Pr›îtõs
 
c⁄√˘i⁄Pr›s
 = 
gëC⁄√˘i⁄Pr›s
();

213 
åy
 {

214 
zooIn•e˘‹P™ñ


215 .
£tdeÁu…C⁄√˘i⁄Pr›s
(
c⁄√˘i⁄Pr›s
);

216 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

217 
LoggîFa˘‹y


218 .
gëLoggî
()

219 .
îr‹
(

221 
ex
);

222 
JO±i⁄P™e


223 .
showMesßgeDülog
(

224 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
.
this
,

226 "Eº‹", 
JO±i⁄P™e
.
ERROR_MESSAGE
);

230 
GridBagC⁄°øöts
 
	mc6
 = 
√w
 GridBagConstraints();

231 
	mc6
.
	mgridx
 = 1;

232 
	mc6
.
	mgridy
 = 0;

233 
	mc6
.
	mgridwidth
 = 1;

234 
	mc6
.
	mgridheight
 = 1;

235 
	mc6
.
	mweightx
 = 1;

236 
	mc6
.
	mweighty
 = 1;

237 
	mc6
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
SOUTHWEST
;

238 
	mc6
.
	mfûl
 = 
GridBagC⁄°øöts
.
NONE
;

239 
	mc6
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

240 
	mc6
.
	mùadx
 = 0;

241 
	mc6
.
	mùady
 = 0;

242 
	mbuâ⁄sP™ñ
.
add
(
ßveDeÁu…Pr›sFûeBuâ⁄
, 
c6
);

243 
JBuâ⁄
 
	mokBuâ⁄
 = 
√w
 JButton("OK");

244 
	mokBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

246 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

247 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
.
this
.
di•o£
();

248 
Pr›îtõs
 
c⁄√˘i⁄Pr›s
 = 
gëC⁄√˘i⁄Pr›s
();

249 
zooIn•e˘‹P™ñ
.
c⁄√˘
(
c⁄√˘i⁄Pr›s
);

252 
GridBagC⁄°øöts
 
	mc4
 = 
√w
 GridBagConstraints();

253 
	mc4
.
	mgridx
 = 2;

254 
	mc4
.
	mgridy
 = 0;

255 
	mc4
.
	mgridwidth
 = 1;

256 
	mc4
.
	mgridheight
 = 1;

257 
	mc4
.
	mweightx
 = 0;

258 
	mc4
.
	mweighty
 = 1;

259 
	mc4
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
SOUTH
;

260 
	mc4
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

261 
	mc4
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

262 
	mc4
.
	mùadx
 = 0;

263 
	mc4
.
	mùady
 = 0;

264 
	mbuâ⁄sP™ñ
.
add
(
okBuâ⁄
, 
c4
);

265 
JBuâ⁄
 
	mˇn˚lBuâ⁄
 = 
√w
 JButton("Cancel");

266 
	mˇn˚lBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

268 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

269 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
.
this
.
di•o£
();

272 
GridBagC⁄°øöts
 
	mc5
 = 
√w
 GridBagConstraints();

273 
	mc5
.
	mgridx
 = 3;

274 
	mc5
.
	mgridy
 = 0;

275 
	mc5
.
	mgridwidth
 = 1;

276 
	mc5
.
	mgridheight
 = 1;

277 
	mc5
.
	mweightx
 = 0;

278 
	mc5
.
	mweighty
 = 1;

279 
	mc5
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
SOUTH
;

280 
	mc5
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

281 
	mc5
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

282 
	mc5
.
	mùadx
 = 0;

283 
	mc5
.
	mùady
 = 0;

284 
	mbuâ⁄sP™ñ
.
add
(
ˇn˚lBuâ⁄
, 
c5
);

285 
	mthis
.
add
(
›ti⁄s
, 
B‹dîLayout
.
CENTER
);

286 
	mthis
.
add
(
buâ⁄sP™ñ
, 
B‹dîLayout
.
SOUTH
);

287 
	mthis
.
∑ck
();

290 
¥iv©e
 
	$lﬂdC⁄√˘i⁄Pr›s
(
Pr›îtõs
 
¥›s
) {

291 i‡(
¥›s
 !
nuŒ
) {

292 
Obje˘
 
key
 : 
¥›s
.
	`keySë
()) {

293 
Såög
 
¥›sKey
 = (SåögË
key
;

294 i‡(
comp⁄íts
.
	`c⁄èösKey
(
¥›sKey
)) {

295 
JComp⁄ít
 
comp⁄ít
 = 
comp⁄íts
.
	`gë
(
¥›sKey
);

296 
Såög
 
vÆue
 = 
¥›s
.
	`gëPr›îty
(
¥›sKey
);

297 i‡(
comp⁄ít
 
ö°™˚of
 
JTextFõld
) {

298 ((
JTextFõld
Ë
comp⁄ít
).
	`£tText
(
vÆue
);

299 } i‡(
comp⁄ít
 
ö°™˚of
 
JComboBox
) {

300 ((
JComboBox
Ë
comp⁄ít
).
	`£tSñe˘edIãm
(
vÆue
);

305 
	}
}

307 
¥iv©e
 
Pr›îtõs
 
	$gëC⁄√˘i⁄Pr›s
() {

308 
Pr›îtõs
 
c⁄√˘i⁄Pr›s
 = 
√w
 
	`Pr›îtõs
();

309 
E¡ry
<
Såög
, 
JComp⁄ít
> 
íåy
 : 
comp⁄íts
.
	`íåySë
()) {

310 
Såög
 
vÆue
 = 
nuŒ
;

311 
JComp⁄ít
 
comp⁄ít
 = 
íåy
.
	`gëVÆue
();

312 i‡(
comp⁄ít
 
ö°™˚of
 
JTextFõld
) {

313 
vÆue
 = ((
JTextFõld
Ë
comp⁄ít
).
	`gëText
();

314 } i‡(
comp⁄ít
 
ö°™˚of
 
JComboBox
) {

315 
vÆue
 = ((
JComboBox
Ë
comp⁄ít
).
	`gëSñe˘edIãm
().
	`toSåög
();

317 
c⁄√˘i⁄Pr›s
.
	`put
(
íåy
.
	`gëKey
(), 
vÆue
);

319  
c⁄√˘i⁄Pr›s
;

320 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorIconResources.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjavax
.
	gswög
.
	gImageIc⁄
;

26 
public
 cœs†
	cZooIn•e˘‹Ic⁄Resour˚s
 {

31 
public
 
ImageIc⁄
 
	$gëTªeLófIc⁄
() {

32  
√w
 
	`ImageIc⁄
("icons/file_obj.gif");

38 
public
 
ImageIc⁄
 
	$gëTªeO≥nIc⁄
() {

39  
√w
 
	`ImageIc⁄
("icons/fldr_obj.gif");

40 
	}
}

45 
public
 
ImageIc⁄
 
	$gëTªeClo£dIc⁄
() {

46  
√w
 
	`ImageIc⁄
("icons/fldr_obj.gif");

47 
	}
}

52 
public
 
ImageIc⁄
 
	$gëC⁄√˘Ic⁄
() {

53  
√w
 
	`ImageIc⁄
("icons/launch_run.gif");

54 
	}
}

59 
public
 
ImageIc⁄
 
	$gëDisc⁄√˘Ic⁄
() {

60  
√w
 
	`ImageIc⁄
("icons/launch_stop.gif");

61 
	}
}

66 
public
 
ImageIc⁄
 
	$gëSaveIc⁄
() {

67  
√w
 
	`ImageIc⁄
("icons/save_edit.gif");

68 
	}
}

73 
public
 
ImageIc⁄
 
	$gëAddNodeIc⁄
() {

74  
√w
 
	`ImageIc⁄
("icons/new_con.gif");

75 
	}
}

80 
public
 
ImageIc⁄
 
	$gëDñëeNodeIc⁄
() {

81  
√w
 
	`ImageIc⁄
("icons/trash.gif");

82 
	}
}

87 
public
 
ImageIc⁄
 
	$gëRe‰eshIc⁄
() {

88  
√w
 
	`ImageIc⁄
("icons/refresh.gif");

89 
	}
}

94 
public
 
ImageIc⁄
 
	$gëInf‹m©i⁄Ic⁄
() {

95  
√w
 
	`ImageIc⁄
("icons/info_obj.gif");

96 
	}
}

101 
public
 
ImageIc⁄
 
	$gëCh™geNodeVõwîsIc⁄
() {

102  
√w
 
	`ImageIc⁄
("icons/edtsrclkup_co.gif");

103 
	}
}

108 
public
 
ImageIc⁄
 
	$gëUpIc⁄
() {

109  
√w
 
	`ImageIc⁄
("icons/search_prev.gif");

110 
	}
}

115 
public
 
ImageIc⁄
 
	$gëDownIc⁄
() {

116  
√w
 
	`ImageIc⁄
("icons/search_next.gif");

117 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorNodeViewersDialog.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gComp⁄ít
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gFlowLayout
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gFøme
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagC⁄°øöts
;

25 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagLayout
;

26 
imp‹t
 
	gjava
.
	gawt
.
	gIn£ts
;

27 
imp‹t
 
	gjava
.
	gawt
.
	gd©©øns„r
.
	gTøns„øbÀ
;

28 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

29 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

30 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

31 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

36 
imp‹t
 
	gjavax
.
	gswög
.
	gDeÁu…Li°CñlRídîî
;

37 
imp‹t
 
	gjavax
.
	gswög
.
	gDeÁu…Li°Modñ
;

38 
imp‹t
 
	gjavax
.
	gswög
.
	gDr›Mode
;

39 
imp‹t
 
	gjavax
.
	gswög
.
	gJBuâ⁄
;

40 
imp‹t
 
	gjavax
.
	gswög
.
	gJComp⁄ít
;

41 
imp‹t
 
	gjavax
.
	gswög
.
	gJDülog
;

42 
imp‹t
 
	gjavax
.
	gswög
.
	gJFûeChoo£r
;

43 
imp‹t
 
	gjavax
.
	gswög
.
	gJLabñ
;

44 
imp‹t
 
	gjavax
.
	gswög
.
	gJLi°
;

45 
imp‹t
 
	gjavax
.
	gswög
.
	gJO±i⁄P™e
;

46 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

47 
imp‹t
 
	gjavax
.
	gswög
.
	gJS¸ﬁlP™e
;

48 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextFõld
;

49 
imp‹t
 
	gjavax
.
	gswög
.
	gLi°Sñe˘i⁄Modñ
;

50 
imp‹t
 
	gjavax
.
	gswög
.
	gTøns„rH™dÀr
;

51 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gLi°Sñe˘i⁄Evít
;

52 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gLi°Sñe˘i⁄Li°íî
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
.
	gZooIn•e˘‹NodeVõwî
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹M™agî
;

62 
public
 cœs†
	cZooIn•e˘‹NodeVõwîsDülog
 
exãnds
 
JDülog
 
im∂emíts


63 
	mLi°Sñe˘i⁄Li°íî
 {

65 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mupBuâ⁄
;

66 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mdownBuâ⁄
;

67 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mªmoveBuâ⁄
;

68 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	maddBuâ⁄
;

69 
¥iv©e
 
föÆ
 
JLi°
 
	mvõwîsLi°
;

70 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mßveFûeBuâ⁄
;

71 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mlﬂdFûeBuâ⁄
;

72 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	m£tDeÁu…sBuâ⁄
;

73 
¥iv©e
 
föÆ
 
JFûeChoo£r
 
	mfûeChoo£r
 = 
√w
 JFûeChoo£r“ew 
Fûe
("."));

87 
public
 
ZooIn•e˘‹NodeVõwîsDülog
(
Føme
 
‰ame
,

88 
föÆ
 
Li°
<
ZooIn•e˘‹NodeVõwî
> 
cuºítVõwîs
,

89 
föÆ
 
CﬁÀ˘i⁄
<
NodeVõwîsCh™geLi°íî
> 
li°íîs
,

90 
föÆ
 
ZooIn•e˘‹M™agî
 
m™agî
) {

91 
su≥r
(
‰ame
);

92 
föÆ
 
	mLi°
<
	mZooIn•e˘‹NodeVõwî
> 
	m√wVõwîs
 = 
√w
 
AºayLi°
<
ZooIn•e˘‹NodeVõwî
>(

93 
cuºítVõwîs
);

94 
	mthis
.
£tLayout
(
√w
 
B‹dîLayout
());

95 
	mthis
.
£tIc⁄Image
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëCh™geNodeVõwîsIc⁄
()

96 .
gëImage
());

97 
	mthis
.
£tTôÀ
("About ZooInspector");

98 
	mthis
.
£tModÆ
(
åue
);

99 
	mthis
.
£tAlwaysOnT›
(
åue
);

100 
	mthis
.
£tResizabÀ
(
åue
);

101 
föÆ
 
JP™ñ
 
	m∑√l
 = 
√w
 JPanel();

102 
	m∑√l
.
£tLayout
(
√w
 
GridBagLayout
());

103 
	mvõwîsLi°
 = 
√w
 
JLi°
();

104 
DeÁu…Li°Modñ
 
	mmodñ
 = 
√w
 DefaultListModel();

105 
ZooIn•e˘‹NodeVõwî
 
	mvõwî
 : 
√wVõwîs
) {

106 
modñ
.
addEÀmít
(
võwî
);

108 
	mvõwîsLi°
.
£tModñ
(
modñ
);

109 
	mvõwîsLi°
.
£tCñlRídîî
(
√w
 
DeÁu…Li°CñlRídîî
() {

110 @
Ovîride


111 
public
 
Comp⁄ít
 
gëLi°CñlRídîîComp⁄ít
(
JLi°
 
li°
,

112 
Obje˘
 
vÆue
, 
ödex
, 
boﬁón
 
isSñe˘ed
,

113 
boﬁón
 
˚ŒHasFocus
) {

114 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
vÆue
;

115 
JLabñ
 
œbñ
 = (JLabñË
su≥r
.
gëLi°CñlRídîîComp⁄ít
(

116 
li°
, 
vÆue
, 
ödex
, 
isSñe˘ed
, 
˚ŒHasFocus
);

117 
œbñ
.
£tText
(
võwî
.
gëTôÀ
());

118  
œbñ
;

121 
	mvõwîsLi°
.
£tDr›Mode
(
Dr›Mode
.
INSERT
);

122 
	mvõwîsLi°
.
íabÀI≈utMëhods
(
åue
);

123 
	mvõwîsLi°
.
£tDøgE«bÀd
(
åue
);

124 
	mvõwîsLi°
.
£tSñe˘i⁄Mode
(
Li°Sñe˘i⁄Modñ
.
SINGLE_SELECTION
);

125 
	mvõwîsLi°
.
gëSñe˘i⁄Modñ
().
addLi°Sñe˘i⁄Li°íî
(
this
);

126 
	mvõwîsLi°
.
£tTøns„rH™dÀr
(
√w
 
Tøns„rH™dÀr
() {

128 @
Ovîride


129 
public
 
boﬁón
 
ˇnImp‹t
(
Tøns„rH™dÀr
.
Tøns„rSuµ‹t
 
öfo
) {

131 i‡(!
öfo


132 .
isD©aFœv‹Suµ‹ãd
(
ZooIn•e˘‹NodeVõwî
.
nodeVõwîD©aFœv‹
)) {

133  
Ál£
;

136 
JLi°
.
Dr›Loˇti⁄
 
dl
 = (JLi°.Dr›Loˇti⁄Ë
öfo


137 .
gëDr›Loˇti⁄
();

138 i‡(
dl
.
gëIndex
() == -1) {

139  
Ál£
;

141  
åue
;

144 @
Ovîride


145 
public
 
boﬁón
 
imp‹tD©a
(
Tøns„rH™dÀr
.
Tøns„rSuµ‹t
 
öfo
) {

146 
JLi°
.
Dr›Loˇti⁄
 
dl
 = (JLi°.Dr›Loˇti⁄Ë
öfo


147 .
gëDr›Loˇti⁄
();

148 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


149 .
gëModñ
();

150 
ödex
 = 
dl
.
gëIndex
();

151 
boﬁón
 
ö£π
 = 
dl
.
isIn£π
();

153 
Tøns„øbÀ
 
t
 = 
öfo
.
gëTøns„øbÀ
();

154 
Såög
 
d©a
;

155 
åy
 {

156 
d©a
 = (
Såög
Ë
t


157 .
gëTøns„rD©a
(
ZooIn•e˘‹NodeVõwî
.
nodeVõwîD©aFœv‹
);

158 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

159  
Ál£
;

161 
åy
 {

162 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
Cœss


163 .
f‹Name
(
d©a
).
√wIn°™˚
();

164 i‡(
li°Modñ
.
c⁄èös
(
võwî
)) {

165 
li°Modñ
.
ªmoveEÀmít
(
võwî
);

167 i‡(
ö£π
) {

168 
li°Modñ
.
add
(
ödex
, 
võwî
);

170 
li°Modñ
.
£t
(
ödex
, 
võwî
);

172  
åue
;

173 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

174 
LoggîFa˘‹y
.
gëLoggî
().
îr‹
(

175 "Eº‹ in°™tütög cœss: " + 
d©a
, 
e
);

176  
Ál£
;

181 @
Ovîride


182 
public
 
gëSour˚A˘i⁄s
(
JComp⁄ít
 
c
) {

183  
MOVE
;

186 @
Ovîride


187 
¥Ÿe˘ed
 
Tøns„øbÀ
 
¸óãTøns„øbÀ
(
JComp⁄ít
 
c
) {

188 
JLi°
 
li°
 = (JLi°Ë
c
;

189 
ZooIn•e˘‹NodeVõwî
 
vÆue
 = (ZooIn•e˘‹NodeVõwîË
li°


190 .
gëSñe˘edVÆue
();

191  
vÆue
;

194 
JS¸ﬁlP™e
 
	ms¸ﬁÀr
 = 
√w
 JS¸ﬁlP™e(
võwîsLi°
);

195 
GridBagC⁄°øöts
 
	mc1
 = 
√w
 GridBagConstraints();

196 
	mc1
.
	mgridx
 = 0;

197 
	mc1
.
	mgridy
 = 0;

198 
	mc1
.
	mgridwidth
 = 3;

199 
	mc1
.
	mgridheight
 = 3;

200 
	mc1
.
	mweightx
 = 0;

201 
	mc1
.
	mweighty
 = 1;

202 
	mc1
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
CENTER
;

203 
	mc1
.
	mfûl
 = 
GridBagC⁄°øöts
.
BOTH
;

204 
	mc1
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

205 
	mc1
.
	mùadx
 = 0;

206 
	mc1
.
	mùady
 = 0;

207 
	m∑√l
.
add
(
s¸ﬁÀr
, 
c1
);

208 
	mupBuâ⁄
 = 
√w
 
JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëUpIc⁄
());

209 
	mdownBuâ⁄
 = 
√w
 
JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëDownIc⁄
());

210 
	mªmoveBuâ⁄
 = 
√w
 
JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


211 .
gëDñëeNodeIc⁄
());

212 
	maddBuâ⁄
 = 
√w
 
JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëAddNodeIc⁄
());

213 
	mupBuâ⁄
.
£tE«bÀd
(
Ál£
);

214 
	mdownBuâ⁄
.
£tE«bÀd
(
Ál£
);

215 
	mªmoveBuâ⁄
.
£tE«bÀd
(
Ál£
);

216 
	maddBuâ⁄
.
£tE«bÀd
(
åue
);

217 
	mupBuâ⁄
.
£tToﬁTùText
("Move currently selectedÇode viewer up");

218 
	mdownBuâ⁄
.
£tToﬁTùText
("Move currently selectedÇode viewer down");

219 
	mªmoveBuâ⁄
.
£tToﬁTùText
("Remove currently selectedÇode viewer");

220 
	maddBuâ⁄
.
£tToﬁTùText
("AddÇode viewer");

221 
föÆ
 
JTextFõld
 
	m√wVõwîTextFõld
 = 
√w
 JTextField();

222 
GridBagC⁄°øöts
 
	mc2
 = 
√w
 GridBagConstraints();

223 
	mc2
.
	mgridx
 = 3;

224 
	mc2
.
	mgridy
 = 0;

225 
	mc2
.
	mgridwidth
 = 1;

226 
	mc2
.
	mgridheight
 = 1;

227 
	mc2
.
	mweightx
 = 0;

228 
	mc2
.
	mweighty
 = 0;

229 
	mc2
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
NORTH
;

230 
	mc2
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

231 
	mc2
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

232 
	mc2
.
	mùadx
 = 0;

233 
	mc2
.
	mùady
 = 0;

234 
	m∑√l
.
add
(
upBuâ⁄
, 
c2
);

235 
GridBagC⁄°øöts
 
	mc3
 = 
√w
 GridBagConstraints();

236 
	mc3
.
	mgridx
 = 3;

237 
	mc3
.
	mgridy
 = 2;

238 
	mc3
.
	mgridwidth
 = 1;

239 
	mc3
.
	mgridheight
 = 1;

240 
	mc3
.
	mweightx
 = 0;

241 
	mc3
.
	mweighty
 = 0;

242 
	mc3
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
NORTH
;

243 
	mc3
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

244 
	mc3
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

245 
	mc3
.
	mùadx
 = 0;

246 
	mc3
.
	mùady
 = 0;

247 
	m∑√l
.
add
(
downBuâ⁄
, 
c3
);

248 
GridBagC⁄°øöts
 
	mc4
 = 
√w
 GridBagConstraints();

249 
	mc4
.
	mgridx
 = 3;

250 
	mc4
.
	mgridy
 = 1;

251 
	mc4
.
	mgridwidth
 = 1;

252 
	mc4
.
	mgridheight
 = 1;

253 
	mc4
.
	mweightx
 = 0;

254 
	mc4
.
	mweighty
 = 0;

255 
	mc4
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
NORTH
;

256 
	mc4
.
	mfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

257 
	mc4
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

258 
	mc4
.
	mùadx
 = 0;

259 
	mc4
.
	mùady
 = 0;

260 
	m∑√l
.
add
(
ªmoveBuâ⁄
, 
c4
);

261 
GridBagC⁄°øöts
 
	mc5
 = 
√w
 GridBagConstraints();

262 
	mc5
.
	mgridx
 = 0;

263 
	mc5
.
	mgridy
 = 3;

264 
	mc5
.
	mgridwidth
 = 3;

265 
	mc5
.
	mgridheight
 = 1;

266 
	mc5
.
	mweightx
 = 0;

267 
	mc5
.
	mweighty
 = 0;

268 
	mc5
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
CENTER
;

269 
	mc5
.
	mfûl
 = 
GridBagC⁄°øöts
.
BOTH
;

270 
	mc5
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

271 
	mc5
.
	mùadx
 = 0;

272 
	mc5
.
	mùady
 = 0;

273 
	m∑√l
.
add
(
√wVõwîTextFõld
, 
c5
);

274 
GridBagC⁄°øöts
 
	mc6
 = 
√w
 GridBagConstraints();

275 
	mc6
.
	mgridx
 = 3;

276 
	mc6
.
	mgridy
 = 3;

277 
	mc6
.
	mgridwidth
 = 1;

278 
	mc6
.
	mgridheight
 = 1;

279 
	mc6
.
	mweightx
 = 0;

280 
	mc6
.
	mweighty
 = 0;

281 
	mc6
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
CENTER
;

282 
	mc6
.
	mfûl
 = 
GridBagC⁄°øöts
.
BOTH
;

283 
	mc6
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

284 
	mc6
.
	mùadx
 = 0;

285 
	mc6
.
	mùady
 = 0;

286 
	m∑√l
.
add
(
addBuâ⁄
, 
c6
);

287 
	mupBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

289 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

290 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


291 .
gëModñ
();

292 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
võwîsLi°


293 .
gëSñe˘edVÆue
();

294 
ödex
 = 
võwîsLi°
.
gëSñe˘edIndex
();

295 i‡(
li°Modñ
.
c⁄èös
(
võwî
)) {

296 
li°Modñ
.
ªmoveEÀmítAt
(
ödex
);

297 
li°Modñ
.
ö£πEÀmítAt
(
võwî
, 
ödex
 - 1);

298 
võwîsLi°
.
£tSñe˘edVÆue
(
võwî
, 
åue
);

302 
	mdownBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

304 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

305 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


306 .
gëModñ
();

307 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
võwîsLi°


308 .
gëSñe˘edVÆue
();

309 
ödex
 = 
võwîsLi°
.
gëSñe˘edIndex
();

310 i‡(
li°Modñ
.
c⁄èös
(
võwî
)) {

311 
li°Modñ
.
ªmoveEÀmítAt
(
ödex
);

312 
li°Modñ
.
ö£πEÀmítAt
(
võwî
, 
ödex
 + 1);

313 
võwîsLi°
.
£tSñe˘edVÆue
(
võwî
, 
åue
);

317 
	mªmoveBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

319 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

320 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


321 .
gëModñ
();

322 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
võwîsLi°


323 .
gëSñe˘edVÆue
();

324 
ödex
 = 
võwîsLi°
.
gëSñe˘edIndex
();

325 i‡(
li°Modñ
.
c⁄èös
(
võwî
)) {

326 
li°Modñ
.
ªmoveEÀmít
(
võwî
);

327 
võwîsLi°


328 .
£tSñe˘edIndex
(
ödex
 =
li°Modñ
.
size
() ? index - 1

329 : 
ödex
);

333 
	maddBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

335 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

336 
Såög
 
˛assName
 = 
√wVõwîTextFõld
.
gëText
();

337 i‡(
˛assName
 =
nuŒ
 || cœssName.
Àngth
() == 0) {

338 
JO±i⁄P™e


339 .
showMesßgeDülog
(

340 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

342 "I≈uàEº‹", 
JO±i⁄P™e
.
ERROR_MESSAGE
);

344 
åy
 {

345 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


346 .
gëModñ
();

347 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
Cœss


348 .
f‹Name
(
˛assName
).
√wIn°™˚
();

349 i‡(
li°Modñ
.
c⁄èös
(
võwî
)) {

350 
JO±i⁄P™e


351 .
showMesßgeDülog
(

352 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

355 
JO±i⁄P™e
.
ERROR_MESSAGE
);

357 
li°Modñ
.
addEÀmít
(
võwî
);

359 } 
ˇtch
 (
Ex˚±i⁄
 
ex
) {

360 
LoggîFa˘‹y


361 .
gëLoggî
()

362 .
îr‹
(

364 
ex
);

365 
JO±i⁄P™e
.
showMesßgeDülog
(

366 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

368 + 
ex
.
gëMesßge
(), "Error",

369 
JO±i⁄P™e
.
ERROR_MESSAGE
);

374 
	mßveFûeBuâ⁄
 = 
√w
 
JBuâ⁄
("Save");

375 
	mlﬂdFûeBuâ⁄
 = 
√w
 
JBuâ⁄
("Load");

376 
	m£tDeÁu…sBuâ⁄
 = 
√w
 
JBuâ⁄
("Set As Defaults");

377 
	mßveFûeBuâ⁄


378 .
£tToﬁTùText
("Save currentÇode viewer configurationÅo file");

379 
	mlﬂdFûeBuâ⁄


380 .
£tToﬁTùText
("LoadÇode viewer configuration frm file");

381 
	m£tDeÁu…sBuâ⁄


382 .
£tToﬁTùText
("Set current configurationásd defaults");

383 
GridBagC⁄°øöts
 
	mc7
 = 
√w
 GridBagConstraints();

384 
	mc7
.
	mgridx
 = 0;

385 
	mc7
.
	mgridy
 = 4;

386 
	mc7
.
	mgridwidth
 = 1;

387 
	mc7
.
	mgridheight
 = 1;

388 
	mc7
.
	mweightx
 = 1;

389 
	mc7
.
	mweighty
 = 0;

390 
	mc7
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

391 
	mc7
.
	mfûl
 = 
GridBagC⁄°øöts
.
VERTICAL
;

392 
	mc7
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

393 
	mc7
.
	mùadx
 = 0;

394 
	mc7
.
	mùady
 = 0;

395 
	m∑√l
.
add
(
ßveFûeBuâ⁄
, 
c7
);

396 
GridBagC⁄°øöts
 
	mc8
 = 
√w
 GridBagConstraints();

397 
	mc8
.
	mgridx
 = 1;

398 
	mc8
.
	mgridy
 = 4;

399 
	mc8
.
	mgridwidth
 = 1;

400 
	mc8
.
	mgridheight
 = 1;

401 
	mc8
.
	mweightx
 = 0;

402 
	mc8
.
	mweighty
 = 0;

403 
	mc8
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

404 
	mc8
.
	mfûl
 = 
GridBagC⁄°øöts
.
VERTICAL
;

405 
	mc8
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

406 
	mc8
.
	mùadx
 = 0;

407 
	mc8
.
	mùady
 = 0;

408 
	m∑√l
.
add
(
lﬂdFûeBuâ⁄
, 
c8
);

409 
GridBagC⁄°øöts
 
	mc9
 = 
√w
 GridBagConstraints();

410 
	mc9
.
	mgridx
 = 2;

411 
	mc9
.
	mgridy
 = 4;

412 
	mc9
.
	mgridwidth
 = 1;

413 
	mc9
.
	mgridheight
 = 1;

414 
	mc9
.
	mweightx
 = 0;

415 
	mc9
.
	mweighty
 = 0;

416 
	mc9
.
	m™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

417 
	mc9
.
	mfûl
 = 
GridBagC⁄°øöts
.
VERTICAL
;

418 
	mc9
.
	mö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

419 
	mc9
.
	mùadx
 = 0;

420 
	mc9
.
	mùady
 = 0;

421 
	m∑√l
.
add
(
£tDeÁu…sBuâ⁄
, 
c9
);

422 
	mßveFûeBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

424 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

425 
ªsu…
 = 
fûeChoo£r


426 .
showSaveDülog
(
ZooIn•e˘‹NodeVõwîsDülog
.
this
);

427 i‡(
ªsu…
 =
JFûeChoo£r
.
APPROVE_OPTION
) {

428 
Fûe
 
£À˘edFûe
 = 
fûeChoo£r
.
gëSñe˘edFûe
();

429 
™swî
 = 
JO±i⁄P™e
.
YES_OPTION
;

430 i‡(
£À˘edFûe
.
exi°s
()) {

431 
™swî
 = 
JO±i⁄P™e


432 .
showC⁄fúmDülog
(

433 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

436 
JO±i⁄P™e
.
YES_NO_OPTION
,

437 
JO±i⁄P™e
.
WARNING_MESSAGE
);

439 i‡(
™swî
 =
JO±i⁄P™e
.
YES_OPTION
) {

440 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


441 .
gëModñ
();

442 
Li°
<
Såög
> 
nodeVõwîsCœssNames
 = 
√w
 
AºayLi°
<String>();

443 
Obje˘
[] 
modñC⁄ã¡s
 = 
li°Modñ
.
toAºay
();

444 
Obje˘
 
o
 : 
modñC⁄ã¡s
) {

445 
nodeVõwîsCœssNames


446 .
add
(((
ZooIn•e˘‹NodeVõwî
Ë
o
)

447 .
gëCœss
().
gëC™⁄iˇlName
());

449 
åy
 {

450 
m™agî
.
ßveNodeVõwîsFûe
(
£À˘edFûe
,

451 
nodeVõwîsCœssNames
);

452 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

453 
LoggîFa˘‹y


454 .
gëLoggî
()

455 .
îr‹
(

457 
ex
);

458 
JO±i⁄P™e
.
showMesßgeDülog
(

459 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

461 + 
ex
.
gëMesßge
(), "Error",

462 
JO±i⁄P™e
.
ERROR_MESSAGE
);

468 
	mlﬂdFûeBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

470 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

471 
ªsu…
 = 
fûeChoo£r


472 .
showO≥nDülog
(
ZooIn•e˘‹NodeVõwîsDülog
.
this
);

473 i‡(
ªsu…
 =
JFûeChoo£r
.
APPROVE_OPTION
) {

474 
åy
 {

475 
Li°
<
Såög
> 
nodeVõwîsCœssNames
 = 
m™agî


476 .
lﬂdNodeVõwîsFûe
(
fûeChoo£r


477 .
gëSñe˘edFûe
());

478 
Li°
<
ZooIn•e˘‹NodeVõwî
> 
nodeVõwîs
 = 
√w
 
AºayLi°
<ZooInspectorNodeViewer>();

479 
Såög
 
nodeVõwîsCœssName
 : 
nodeVõwîsCœssNames
) {

480 
ZooIn•e˘‹NodeVõwî
 
võwî
 = (ZooIn•e˘‹NodeVõwîË
Cœss


481 .
f‹Name
(
nodeVõwîsCœssName
)

482 .
√wIn°™˚
();

483 
nodeVõwîs
.
add
(
võwî
);

485 
DeÁu…Li°Modñ
 
modñ
 = 
√w
 DefaultListModel();

486 
ZooIn•e˘‹NodeVõwî
 
võwî
 : 
nodeVõwîs
) {

487 
modñ
.
addEÀmít
(
võwî
);

489 
võwîsLi°
.
£tModñ
(
modñ
);

490 
∑√l
.
ªvÆid©e
();

491 
∑√l
.
ª∑öt
();

492 } 
ˇtch
 (
Ex˚±i⁄
 
ex
) {

493 
LoggîFa˘‹y


494 .
gëLoggî
()

495 .
îr‹
(

497 
ex
);

498 
JO±i⁄P™e
.
showMesßgeDülog
(

499 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

501 + 
ex
.
gëMesßge
(), "Error",

502 
JO±i⁄P™e
.
ERROR_MESSAGE
);

507 
	m£tDeÁu…sBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

509 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

510 
™swî
 = 
JO±i⁄P™e


511 .
showC⁄fúmDülog
(

512 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

515 
JO±i⁄P™e
.
YES_NO_OPTION
,

516 
JO±i⁄P™e
.
WARNING_MESSAGE
);

517 i‡(
™swî
 =
JO±i⁄P™e
.
YES_OPTION
) {

518 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


519 .
gëModñ
();

520 
Li°
<
Såög
> 
nodeVõwîsCœssNames
 = 
√w
 
AºayLi°
<String>();

521 
Obje˘
[] 
modñC⁄ã¡s
 = 
li°Modñ
.
toAºay
();

522 
Obje˘
 
o
 : 
modñC⁄ã¡s
) {

523 
nodeVõwîsCœssNames
.
add
(((
ZooIn•e˘‹NodeVõwî
Ë
o
)

524 .
gëCœss
().
gëC™⁄iˇlName
());

526 
åy
 {

527 
m™agî


528 .
£tDeÁu…NodeVõwîC⁄figuøti⁄
(
nodeVõwîsCœssNames
);

529 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

530 
LoggîFa˘‹y


531 .
gëLoggî
()

532 .
îr‹
(

534 
ex
);

535 
JO±i⁄P™e
.
showMesßgeDülog
(

536 
ZooIn•e˘‹NodeVõwîsDülog
.
this
,

538 + 
ex
.
gëMesßge
(), "Error",

539 
JO±i⁄P™e
.
ERROR_MESSAGE
);

545 
JP™ñ
 
	mbuâ⁄sP™ñ
 = 
√w
 JPanel();

546 
	mbuâ⁄sP™ñ
.
£tLayout
(
√w
 
FlowLayout
(FlowLayout.
CENTER
, 10, 10));

547 
JBuâ⁄
 
	mokBuâ⁄
 = 
√w
 JButton("OK");

548 
	mokBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

549 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

550 
ZooIn•e˘‹NodeVõwîsDülog
.
this
.
di•o£
();

551 
DeÁu…Li°Modñ
 
li°Modñ
 = (DeÁu…Li°ModñË
võwîsLi°


552 .
gëModñ
();

553 
√wVõwîs
.
˛ór
();

554 
Obje˘
[] 
modñC⁄ã¡s
 = 
li°Modñ
.
toAºay
();

555 
Obje˘
 
o
 : 
modñC⁄ã¡s
) {

556 
√wVõwîs
.
add
((
ZooIn•e˘‹NodeVõwî
Ë
o
);

558 
cuºítVõwîs
.
˛ór
();

559 
cuºítVõwîs
.
addAŒ
(
√wVõwîs
);

560 
NodeVõwîsCh™geLi°íî
 
li°íî
 : 
li°íîs
) {

561 
li°íî
.
nodeVõwîsCh™ged
(
cuºítVõwîs
);

565 
	mbuâ⁄sP™ñ
.
add
(
okBuâ⁄
);

566 
JBuâ⁄
 
	mˇn˚lBuâ⁄
 = 
√w
 JButton("Cancel");

567 
	mˇn˚lBuâ⁄
.
addA˘i⁄Li°íî
(
√w
 
A˘i⁄Li°íî
() {

568 
public
 
a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

569 
ZooIn•e˘‹NodeVõwîsDülog
.
this
.
di•o£
();

572 
	mbuâ⁄sP™ñ
.
add
(
ˇn˚lBuâ⁄
);

573 
	mthis
.
add
(
∑√l
, 
B‹dîLayout
.
CENTER
);

574 
	mthis
.
add
(
buâ⁄sP™ñ
, 
B‹dîLayout
.
SOUTH
);

575 
	mthis
.
∑ck
();

585 
public
 
	$vÆueCh™ged
(
Li°Sñe˘i⁄Evít
 
e
) {

586 
ödex
 = 
võwîsLi°
.
	`gëSñe˘edIndex
();

587 i‡(
ödex
 == -1) {

588 
ªmoveBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

589 
upBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

590 
downBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

592 
ªmoveBuâ⁄
.
	`£tE«bÀd
(
åue
);

593 i‡(
ödex
 == 0) {

594 
upBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

596 
upBuâ⁄
.
	`£tE«bÀd
(
åue
);

598 i‡(
ödex
 =((
DeÁu…Li°Modñ
Ë
võwîsLi°
.
	`gëModñ
()).
	`gëSize
()) {

599 
downBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

601 
downBuâ⁄
.
	`£tE«bÀd
(
åue
);

604 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorNodeViewersPanel.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

25 
imp‹t
 
	gjavax
.
	gswög
.
	gJTabbedP™e
;

26 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gCh™geEvít
;

27 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gCh™geLi°íî
;

28 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gTªeSñe˘i⁄Evít
;

29 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gTªeSñe˘i⁄Li°íî
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gTªeP©h
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
.
	gZooIn•e˘‹NodeVõwî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹M™agî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹NodeM™agî
;

39 
public
 
˛ass
 
ZooIn•e˘‹NodeVõwîsP™ñ
 
exãnds
 
JP™ñ
 
im∂emíts


40 
	gTªeSñe˘i⁄Li°íî
, 
	gCh™geLi°íî
 {

42 
¥iv©e
 
föÆ
 
	gLi°
<
	gZooIn•e˘‹NodeVõwî
> 
	gnodeVeiwîs
 = 
√w
 
AºayLi°
<
ZooIn•e˘‹NodeVõwî
>();

43 
¥iv©e
 
föÆ
 
	gLi°
<
	gBoﬁón
> 
	g√edsRñﬂd
 = 
√w
 
AºayLi°
<
Boﬁón
>();

44 
¥iv©e
 
föÆ
 
JTabbedP™e
 
	gèbbedP™e
;

45 
¥iv©e
 
föÆ
 
	gLi°
<
	gSåög
> 
	g£À˘edNodes
 = 
√w
 
AºayLi°
<
Såög
>();

46 
¥iv©e
 
föÆ
 
ZooIn•e˘‹NodeM™agî
 
	gzooIn•e˘‹M™agî
;

54 
public
 
ZooIn•e˘‹NodeVõwîsP™ñ
(

55 
ZooIn•e˘‹NodeM™agî
 
zooIn•e˘‹M™agî
,

56 
Li°
<
ZooIn•e˘‹NodeVõwî
> 
nodeVeiwîs
) {

57 
	gthis
.
	gzooIn•e˘‹M™agî
 = 
zooIn•e˘‹M™agî
;

58 
	gthis
.
£tLayout
(
√w
 
B‹dîLayout
());

59 
	gèbbedP™e
 = 
√w
 
JTabbedP™e
(JTabbedP™e.
TOP
,

60 
JTabbedP™e
.
WRAP_TAB_LAYOUT
);

61 
£tNodeVõwîs
(
nodeVeiwîs
);

62 
	gèbbedP™e
.
addCh™geLi°íî
(
this
);

63 
	gthis
.
add
(
èbbedP™e
, 
B‹dîLayout
.
CENTER
);

64 
ªlﬂdSñe˘edVõwî
();

71 
public
 
£tNodeVõwîs
(
Li°
<
ZooIn•e˘‹NodeVõwî
> 
nodeVõwîs
) {

72 
	gthis
.
	gnodeVeiwîs
.
˛ór
();

73 
	gthis
.
	gnodeVeiwîs
.
addAŒ
(
nodeVõwîs
);

74 
	g√edsRñﬂd
.
˛ór
();

75 
	gèbbedP™e
.
ªmoveAŒ
();

76 
ZooIn•e˘‹NodeVõwî
 
	gnodeVõwî
 : 
nodeVeiwîs
) {

77 
nodeVõwî
.
£tZooIn•e˘‹M™agî
(
zooIn•e˘‹M™agî
);

78 
	g√edsRñﬂd
.
add
(
åue
);

79 
	gèbbedP™e
.
add
(
nodeVõwî
.
gëTôÀ
(),ÇodeViewer);

81 
	gthis
.
ªvÆid©e
();

82 
	gthis
.
ª∑öt
();

85 
¥iv©e
 
ªlﬂdSñe˘edVõwî
() {

86 
	gödex
 = 
this
.
èbbedP™e
.
gëSñe˘edIndex
();

87 i‡(
	gödex
 !-1 && 
this
.
√edsRñﬂd
.
gë
(
ödex
)) {

88 
ZooIn•e˘‹NodeVõwî
 
võwî
 = 
this
.
nodeVeiwîs
.
gë
(
ödex
);

89 
	gvõwî
.
nodeSñe˘i⁄Ch™ged
(
£À˘edNodes
);

90 
	gthis
.
	g√edsRñﬂd
.
£t
(
ödex
, 
Ál£
);

101 
public
 
vÆueCh™ged
(
TªeSñe˘i⁄Evít
 
e
) {

102 
	gTªeP©h
[] 
	g∑ths
 = 
e
.
gëP©hs
();

103 
	g£À˘edNodes
.
˛ór
();

104 
TªeP©h
 
	g∑th
 : 
∑ths
) {

105 
boﬁón
 
≠≥nded
 = 
Ál£
;

106 
SåögBuûdî
 
	gsb
 = 
√w
 StringBuilder();

107 
	gObje˘
[] 
	g∑thAºay
 = 
∑th
.
gëP©h
();

108 
Obje˘
 
	go
 : 
∑thAºay
) {

109 i‡(
o
 !
nuŒ
) {

110 
Såög
 
nodeName
 = 
o
.
toSåög
();

111 i‡(
	gnodeName
 !
nuŒ
) {

112 i‡(
nodeName
.
Àngth
() > 0) {

113 
≠≥nded
 = 
åue
;

114 
	gsb
.
≠≥nd
("/");

115 
	gsb
.
≠≥nd
(
o
.
toSåög
());

120 i‡(
	g≠≥nded
) {

121 
	g£À˘edNodes
.
add
(
sb
.
toSåög
());

124 
	gi
 = 0; i < 
	g√edsRñﬂd
.
size
(); i++) {

125 
	gthis
.
	g√edsRñﬂd
.
£t
(
i
, 
åue
);

127 
ªlﬂdSñe˘edVõwî
();

137 
public
 
°©eCh™ged
(
Ch™geEvít
 
e
) {

138 
ªlﬂdSñe˘edVõwî
();

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorPanel.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecuti⁄Ex˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	gswög
.
	gJBuâ⁄
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gJO±i⁄P™e
;

31 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

32 
imp‹t
 
	gjavax
.
	gswög
.
	gJS¸ﬁlP™e
;

33 
imp‹t
 
	gjavax
.
	gswög
.
	gJS∂ôP™e
;

34 
imp‹t
 
	gjavax
.
	gswög
.
	gJToﬁB¨
;

35 
imp‹t
 
	gjavax
.
	gswög
.
	gSwögW‹kî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
.
	gZooIn•e˘‹NodeVõwî
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹M™agî
;

44 
public
 cœs†
	cZooIn•e˘‹P™ñ
 
exãnds
 
JP™ñ
 
im∂emíts


45 
	mNodeVõwîsCh™geLi°íî
 {

46 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mª‰eshBuâ⁄
;

47 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mdisc⁄√˘Buâ⁄
;

48 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mc⁄√˘Buâ⁄
;

49 
¥iv©e
 
föÆ
 
ZooIn•e˘‹NodeVõwîsP™ñ
 
	mnodeVõwîsP™ñ
;

50 
¥iv©e
 
föÆ
 
ZooIn•e˘‹TªeVõwî
 
	måìVõwî
;

51 
¥iv©e
 
föÆ
 
ZooIn•e˘‹M™agî
 
	mzooIn•e˘‹M™agî
;

52 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	maddNodeBuâ⁄
;

53 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mdñëeNodeBuâ⁄
;

54 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	mnodeVõwîsBuâ⁄
;

55 
¥iv©e
 
föÆ
 
JBuâ⁄
 
	maboutBuâ⁄
;

56 
¥iv©e
 
föÆ
 
	mLi°
<
	mNodeVõwîsCh™geLi°íî
> 
	mli°íîs
 = 
√w
 
AºayLi°
<
NodeVõwîsCh™geLi°íî
>();

58 
	mli°íîs
.
add
(
this
);

65 
public
 
	$ZooIn•e˘‹P™ñ
(
föÆ
 
ZooIn•e˘‹M™agî
 
zooIn•e˘‹M™agî
) {

66 
this
.
zooIn•e˘‹M™agî
 = zooInspectorManager;

67 
föÆ
 
AºayLi°
<
ZooIn•e˘‹NodeVõwî
> 
nodeVõwîs
 = 
√w
 ArrayList<ZooInspectorNodeViewer>();

68 
åy
 {

69 
Li°
<
Såög
> 
deÁu…NodeVõwîsCœssNames
 = 
this
.
zooIn•e˘‹M™agî


70 .
	`gëDeÁu…NodeVõwîC⁄figuøti⁄
();

71 
Såög
 
˛assName
 : 
deÁu…NodeVõwîsCœssNames
) {

72 
nodeVõwîs
.
	`add
((
ZooIn•e˘‹NodeVõwî
Ë
Cœss
.
	`f‹Name
(

73 
˛assName
).
	`√wIn°™˚
());

75 } 
	`ˇtch
 (
Ex˚±i⁄
 
ex
) {

76 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

77 "Eº‹Üﬂdög deÁu…Çodêvõwîs.", 
ex
);

78 
JO±i⁄P™e
.
	`showMesßgeDülog
(
ZooIn•e˘‹P™ñ
.
this
,

79 "Eº‹Üﬂdög deÁu…Çodêvõwîs: " + 
ex
.
	`gëMesßge
(),

80 "Eº‹", 
JO±i⁄P™e
.
ERROR_MESSAGE
);

82 
nodeVõwîsP™ñ
 = 
√w
 
	`ZooIn•e˘‹NodeVõwîsP™ñ
(

83 
zooIn•e˘‹M™agî
, 
nodeVõwîs
);

84 
åìVõwî
 = 
√w
 
	`ZooIn•e˘‹TªeVõwî
(
zooIn•e˘‹M™agî
,

85 
nodeVõwîsP™ñ
);

86 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

87 
JToﬁB¨
 
toﬁb¨
 = 
√w
 
	`JToﬁB¨
();

88 
toﬁb¨
.
	`£tFlﬂèbÀ
(
Ál£
);

89 
c⁄√˘Buâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
	`gëC⁄√˘Ic⁄
());

90 
disc⁄√˘Buâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


91 .
	`gëDisc⁄√˘Ic⁄
());

92 
ª‰eshBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
	`gëRe‰eshIc⁄
());

93 
addNodeBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
	`gëAddNodeIc⁄
());

94 
dñëeNodeBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


95 .
	`gëDñëeNodeIc⁄
());

96 
nodeVõwîsBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


97 .
	`gëCh™geNodeVõwîsIc⁄
());

98 
aboutBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


99 .
	`gëInf‹m©i⁄Ic⁄
());

100 
toﬁb¨
.
	`add
(
c⁄√˘Buâ⁄
);

101 
toﬁb¨
.
	`add
(
disc⁄√˘Buâ⁄
);

102 
toﬁb¨
.
	`add
(
ª‰eshBuâ⁄
);

103 
toﬁb¨
.
	`add
(
addNodeBuâ⁄
);

104 
toﬁb¨
.
	`add
(
dñëeNodeBuâ⁄
);

105 
toﬁb¨
.
	`add
(
nodeVõwîsBuâ⁄
);

106 
toﬁb¨
.
	`add
(
aboutBuâ⁄
);

107 
aboutBuâ⁄
.
	`£tE«bÀd
(
åue
);

108 
c⁄√˘Buâ⁄
.
	`£tE«bÀd
(
åue
);

109 
disc⁄√˘Buâ⁄
.
	`£tE«bÀd
(
Ál£
);

110 
ª‰eshBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

111 
addNodeBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

112 
dñëeNodeBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

113 
nodeVõwîsBuâ⁄
.
	`£tE«bÀd
(
åue
);

114 
nodeVõwîsBuâ⁄
.
	`£tToﬁTùText
("Change Node Viewers");

115 
aboutBuâ⁄
.
	`£tToﬁTùText
("About ZooInspector");

116 
c⁄√˘Buâ⁄
.
	`£tToﬁTùText
("Connect");

117 
disc⁄√˘Buâ⁄
.
	`£tToﬁTùText
("Disconnect");

118 
ª‰eshBuâ⁄
.
	`£tToﬁTùText
("Refresh");

119 
addNodeBuâ⁄
.
	`£tToﬁTùText
("Add Node");

120 
dñëeNodeBuâ⁄
.
	`£tToﬁTùText
("Delete Node");

121 
c⁄√˘Buâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

122 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

123 
ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
 
zi˝d
 = 
√w
 
	`ZooIn•e˘‹C⁄√˘i⁄Pr›îtõsDülog
(

124 
zooIn•e˘‹M™agî
.
	`gëLa°C⁄√˘i⁄Pr›s
(),

125 
zooIn•e˘‹M™agî
.
	`gëC⁄√˘i⁄Pr›îtõsTem∂©e
(),

126 
ZooIn•e˘‹P™ñ
.
this
);

127 
zi˝d
.
	`£tVisibÀ
(
åue
);

130 
disc⁄√˘Buâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

131 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

132 
	`disc⁄√˘
();

135 
ª‰eshBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

136 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

137 
åìVõwî
.
	`ª‰eshVõw
();

140 
addNodeBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

141 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

142 
föÆ
 
Li°
<
Såög
> 
£À˘edNodes
 = 
åìVõwî


143 .
	`gëSñe˘edNodes
();

144 i‡(
£À˘edNodes
.
	`size
() == 1) {

145 
föÆ
 
Såög
 
nodeName
 = 
JO±i⁄P™e
.
	`showI≈utDülog
(

146 
ZooIn•e˘‹P™ñ
.
this
,

148 "Cª©êNode", 
JO±i⁄P™e
.
INFORMATION_MESSAGE
);

149 i‡(
nodeName
 !
nuŒ
 &&ÇodeName.
	`Àngth
() > 0) {

150 
SwögW‹kî
<
Boﬁón
, 
Void
> 
w‹kî
 = 
√w
 SwingWorker<Boolean, Void>() {

152 @
Ovîride


153 
¥Ÿe˘ed
 
Boﬁón
 
	`doInBackground
(Ë
throws
 
Ex˚±i⁄
 {

154  
ZooIn•e˘‹P™ñ
.
this
.
zooIn•e˘‹M™agî


155 .
	`¸óãNode
(
£À˘edNodes
.
	`gë
(0),

156 
nodeName
);

159 @
Ovîride


160 
¥Ÿe˘ed
 
	`d⁄e
() {

161 
åìVõwî
.
	`ª‰eshVõw
();

164 
w‹kî
.
	`execuã
();

167 
JO±i⁄P™e
.
	`showMesßgeDülog
(
ZooIn•e˘‹P™ñ
.
this
,

172 
dñëeNodeBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

173 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

174 
föÆ
 
Li°
<
Såög
> 
£À˘edNodes
 = 
åìVõwî


175 .
	`gëSñe˘edNodes
();

176 i‡(
£À˘edNodes
.
	`size
() == 0) {

177 
JO±i⁄P™e
.
	`showMesßgeDülog
(
ZooIn•e˘‹P™ñ
.
this
,

180 
™swî
 = 
JO±i⁄P™e
.
	`showC⁄fúmDülog
(

181 
ZooIn•e˘‹P™ñ
.
this
,

184 "C⁄fúm Dñëe", 
JO±i⁄P™e
.
YES_NO_OPTION
,

185 
JO±i⁄P™e
.
WARNING_MESSAGE
);

186 i‡(
™swî
 =
JO±i⁄P™e
.
YES_OPTION
) {

187 
SwögW‹kî
<
Boﬁón
, 
Void
> 
w‹kî
 = 
√w
 SwingWorker<Boolean, Void>() {

189 @
Ovîride


190 
¥Ÿe˘ed
 
Boﬁón
 
	`doInBackground
(Ë
throws
 
Ex˚±i⁄
 {

191 
Såög
 
nodeP©h
 : 
£À˘edNodes
) {

192 
ZooIn•e˘‹P™ñ
.
this
.
zooIn•e˘‹M™agî


193 .
	`dñëeNode
(
nodeP©h
);

195  
åue
;

198 @
Ovîride


199 
¥Ÿe˘ed
 
	`d⁄e
() {

200 
åìVõwî
.
	`ª‰eshVõw
();

203 
w‹kî
.
	`execuã
();

208 
nodeVõwîsBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

210 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

211 
ZooIn•e˘‹NodeVõwîsDülog
 
nvd
 = 
√w
 
	`ZooIn•e˘‹NodeVõwîsDülog
(

212 
JO±i⁄P™e
.
	`gëRoŸFøme
(), 
nodeVõwîs
, 
li°íîs
,

213 
zooIn•e˘‹M™agî
);

214 
nvd
.
	`£tVisibÀ
(
åue
);

217 
aboutBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

218 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

219 
ZooIn•e˘‹AboutDülog
 
zi˝d
 = 
√w
 
	`ZooIn•e˘‹AboutDülog
(

220 
JO±i⁄P™e
.
	`gëRoŸFøme
());

221 
zi˝d
.
	`£tVisibÀ
(
åue
);

224 
JS¸ﬁlP™e
 
åìS¸ﬁÀr
 = 
√w
 
	`JS¸ﬁlP™e
(
åìVõwî
);

225 
JS∂ôP™e
 
•lôP™e
 = 
√w
 
	`JS∂ôP™e
(JS∂ôP™e.
HORIZONTAL_SPLIT
,

226 
åìS¸ﬁÀr
, 
nodeVõwîsP™ñ
);

227 
•lôP™e
.
	`£tResizeWeight
(0.25);

228 
this
.
	`add
(
•lôP™e
, 
B‹dîLayout
.
CENTER
);

229 
this
.
	`add
(
toﬁb¨
, 
B‹dîLayout
.
NORTH
);

230 
	}
}

237 
public
 
	$c⁄√˘
(
föÆ
 
Pr›îtõs
 
c⁄√˘i⁄Pr›s
) {

238 
SwögW‹kî
<
Boﬁón
, 
Void
> 
w‹kî
 = 
√w
 SwingWorker<Boolean, Void>() {

240 @
Ovîride


241 
¥Ÿe˘ed
 
Boﬁón
 
	`doInBackground
(Ë
throws
 
Ex˚±i⁄
 {

242 
zooIn•e˘‹M™agî
.
	`£tLa°C⁄√˘i⁄Pr›s
(
c⁄√˘i⁄Pr›s
);

243  
zooIn•e˘‹M™agî
.
	`c⁄√˘
(
c⁄√˘i⁄Pr›s
);

246 @
Ovîride


247 
¥Ÿe˘ed
 
	`d⁄e
() {

248 
åy
 {

249 i‡(
	`gë
()) {

250 
åìVõwî
.
	`ª‰eshVõw
();

251 
c⁄√˘Buâ⁄
.
	`£tE«bÀd
(
Ál£
);

252 
disc⁄√˘Buâ⁄
.
	`£tE«bÀd
(
åue
);

253 
ª‰eshBuâ⁄
.
	`£tE«bÀd
(
åue
);

254 
addNodeBuâ⁄
.
	`£tE«bÀd
(
åue
);

255 
dñëeNodeBuâ⁄
.
	`£tE«bÀd
(
åue
);

257 
JO±i⁄P™e
.
	`showMesßgeDülog
(
ZooIn•e˘‹P™ñ
.
this
,

259 
JO±i⁄P™e
.
ERROR_MESSAGE
);

261 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

262 
LoggîFa˘‹y


263 .
	`gëLoggî
()

264 .
	`îr‹
(

266 
e
);

267 } 
	`ˇtch
 (
Executi⁄Ex˚±i⁄
 
e
) {

268 
LoggîFa˘‹y


269 .
	`gëLoggî
()

270 .
	`îr‹
(

272 
e
);

277 
w‹kî
.
	`execuã
();

278 
	}
}

283 
public
 
	$disc⁄√˘
() {

284 
	`disc⁄√˘
(
Ál£
);

285 
	}
}

292 
public
 
	$disc⁄√˘
(
boﬁón
 
waô
) {

293 
SwögW‹kî
<
Boﬁón
, 
Void
> 
w‹kî
 = 
√w
 SwingWorker<Boolean, Void>() {

295 @
Ovîride


296 
¥Ÿe˘ed
 
Boﬁón
 
	`doInBackground
(Ë
throws
 
Ex˚±i⁄
 {

297  
ZooIn•e˘‹P™ñ
.
this
.
zooIn•e˘‹M™agî
.
	`disc⁄√˘
();

300 @
Ovîride


301 
¥Ÿe˘ed
 
	`d⁄e
() {

302 
åy
 {

303 i‡(
	`gë
()) {

304 
åìVõwî
.
	`˛órVõw
();

305 
c⁄√˘Buâ⁄
.
	`£tE«bÀd
(
åue
);

306 
disc⁄√˘Buâ⁄
.
	`£tE«bÀd
(
Ál£
);

307 
ª‰eshBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

308 
addNodeBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

309 
dñëeNodeBuâ⁄
.
	`£tE«bÀd
(
Ál£
);

311 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

312 
LoggîFa˘‹y


313 .
	`gëLoggî
()

314 .
	`îr‹
(

316 
e
);

317 } 
	`ˇtch
 (
Executi⁄Ex˚±i⁄
 
e
) {

318 
LoggîFa˘‹y


319 .
	`gëLoggî
()

320 .
	`îr‹
(

322 
e
);

327 
w‹kî
.
	`execuã
();

328 i‡(
waô
) {

329 !
w‹kî
.
	`isD⁄e
()) {

330 
åy
 {

331 
Thªad
.
	`¶ìp
(100);

332 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

333 
LoggîFa˘‹y


334 .
	`gëLoggî
()

335 .
	`îr‹
(

337 
e
);

341 
	}
}

349 
public
 
nodeVõwîsCh™ged
(
Li°
<
ZooIn•e˘‹NodeVõwî
> 
√wVõwîs
) {

350 
	gthis
.
	gnodeVõwîsP™ñ
.
£tNodeVõwîs
(
√wVõwîs
);

357 
public
 
	$£tdeÁu…C⁄√˘i⁄Pr›s
(
Pr›îtõs
 
c⁄√˘i⁄Pr›s
)

358 
throws
 
IOEx˚±i⁄
 {

359 
this
.
zooIn•e˘‹M™agî
.
	`ßveDeÁu…C⁄√˘i⁄Fûe
(
c⁄√˘i⁄Pr›s
);

360 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorTreeViewer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gCﬁ‹
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gMou£Ad≠ãr
;

25 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gMou£Evít
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gEnumî©i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashSë
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

34 
imp‹t
 
	gjavax
.
	gswög
.
	gJMíuIãm
;

35 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

36 
imp‹t
 
	gjavax
.
	gswög
.
	gJP›upMíu
;

37 
imp‹t
 
	gjavax
.
	gswög
.
	gJTªe
;

38 
imp‹t
 
	gjavax
.
	gswög
.
	gSwögW‹kî
;

39 
imp‹t
 
	gjavax
.
	gswög
.
	gevít
.
	gTªeSñe˘i⁄Li°íî
;

40 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gDeÁu…MuèbÀTªeNode
;

41 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gDeÁu…TªeCñlRídîî
;

42 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gDeÁu…TªeModñ
;

43 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gTªeNode
;

44 
imp‹t
 
	gjavax
.
	gswög
.
	gåì
.
	gTªeP©h
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gNodeLi°íî
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹M™agî
;

49 
imp‹t
 
	gcom
.
	gnôido
.
	gutûs
.
	gtﬂ°î
.
	gTﬂ°î
;

55 
public
 cœs†
	cZooIn•e˘‹TªeVõwî
 
exãnds
 
JP™ñ
 
im∂emíts
 
	mNodeLi°íî
 {

56 
¥iv©e
 
föÆ
 
ZooIn•e˘‹M™agî
 
	mzooIn•e˘‹M™agî
;

57 
¥iv©e
 
föÆ
 
JTªe
 
	måì
;

58 
¥iv©e
 
föÆ
 
Tﬂ°î
 
	mtﬂ°îM™agî
;

67 
public
 
	$ZooIn•e˘‹TªeVõwî
(

68 
föÆ
 
ZooIn•e˘‹M™agî
 
zooIn•e˘‹M™agî
,

69 
TªeSñe˘i⁄Li°íî
 
li°íî
) {

70 
this
.
zooIn•e˘‹M™agî
 = zooInspectorManager;

71 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

72 
föÆ
 
JP›upMíu
 
p›upMíu
 = 
√w
 
	`JP›upMíu
();

73 
föÆ
 
JMíuIãm
 
addNŸify
 = 
√w
 
	`JMíuIãm
("Add Change Notification");

74 
this
.
tﬂ°îM™agî
 = 
√w
 
	`Tﬂ°î
();

75 
this
.
tﬂ°îM™agî
.
	`£tB‹dîCﬁ‹
(
Cﬁ‹
.
BLACK
);

76 
this
.
tﬂ°îM™agî
.
	`£tMesßgeCﬁ‹
(
Cﬁ‹
.
BLACK
);

77 
this
.
tﬂ°îM™agî
.
	`£tTﬂ°îCﬁ‹
(
Cﬁ‹
.
WHITE
);

78 
addNŸify
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

79 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

80 
Li°
<
Såög
> 
£À˘edNodes
 = 
	`gëSñe˘edNodes
();

81 
zooIn•e˘‹M™agî
.
	`addW©chîs
(
£À˘edNodes
,

82 
ZooIn•e˘‹TªeVõwî
.
this
);

85 
föÆ
 
JMíuIãm
 
ªmoveNŸify
 = 
√w
 
	`JMíuIãm
(

87 
ªmoveNŸify
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

88 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

89 
Li°
<
Såög
> 
£À˘edNodes
 = 
	`gëSñe˘edNodes
();

90 
zooIn•e˘‹M™agî
.
	`ªmoveW©chîs
(
£À˘edNodes
);

93 
åì
 = 
√w
 
	`JTªe
“ew 
	`DeÁu…MuèbÀTªeNode
());

94 
åì
.
	`£tCñlRídîî
(
√w
 
	`ZooIn•e˘‹TªeCñlRídîî
());

95 
åì
.
	`£tEdôabÀ
(
Ál£
);

96 
åì
.
	`gëSñe˘i⁄Modñ
().
	`addTªeSñe˘i⁄Li°íî
(
li°íî
);

97 
åì
.
	`addMou£Li°íî
(
√w
 
	`Mou£Ad≠ãr
() {

98 @
Ovîride


99 
public
 
	`mou£Clicked
(
Mou£Evít
 
e
) {

100 i‡(
e
.
	`isP›upTriggî
(Ë||É.
	`gëBuâ⁄
(Ë=
Mou£Evít
.
BUTTON3
) {

104 
p›upMíu
.
	`ªmoveAŒ
();

105 
p›upMíu
.
	`add
(
addNŸify
);

106 
p›upMíu
.
	`add
(
ªmoveNŸify
);

107 
p›upMíu
.
	`show
(
ZooIn•e˘‹TªeVõwî
.
this
, 
e
.
	`gëX
(),É

108 .
	`gëY
());

112 
this
.
	`add
(
åì
, 
B‹dîLayout
.
CENTER
);

118 
public
 
	$ª‰eshVõw
() {

119 
föÆ
 
Së
<
TªeP©h
> 
ex∑ndedNodes
 = 
√w
 
LökedHashSë
<TreePath>();

120 
rowCou¡
 = 
åì
.
	`gëRowCou¡
();

121 
i
 = 0; i < 
rowCou¡
; i++) {

122 
TªeP©h
 
∑th
 = 
åì
.
	`gëP©hF‹Row
(
i
);

123 i‡(
åì
.
	`isEx∑nded
(
∑th
)) {

124 
ex∑ndedNodes
.
	`add
(
∑th
);

127 
föÆ
 
TªeP©h
[] 
£À˘edNodes
 = 
åì
.
	`gëSñe˘i⁄P©hs
();

128 
SwögW‹kî
<
Boﬁón
, 
Void
> 
w‹kî
 = 
√w
 SwingWorker<Boolean, Void>() {

130 @
Ovîride


131 
¥Ÿe˘ed
 
Boﬁón
 
	`doInBackground
(Ë
throws
 
Ex˚±i⁄
 {

132 
åì
.
	`£tModñ
(
√w
 
	`DeÁu…TªeModñ
“ew 
	`ZooIn•e˘‹TªeNode
(

133 "/", 
nuŒ
)));

134  
åue
;

137 @
Ovîride


138 
¥Ÿe˘ed
 
	`d⁄e
() {

139 
TªeP©h
 
∑th
 : 
ex∑ndedNodes
) {

140 
åì
.
	`ex∑ndP©h
(
∑th
);

142 
åì
.
	`gëSñe˘i⁄Modñ
().
	`£tSñe˘i⁄P©hs
(
£À˘edNodes
);

145 
w‹kî
.
	`execuã
();

146 
	}
}

151 
public
 
	$˛órVõw
() {

152 
åì
.
	`£tModñ
(
√w
 
	`DeÁu…TªeModñ
“ew 
	`DeÁu…MuèbÀTªeNode
()));

153 
	}
}

159 
¥iv©e
 ˛as†
	cZooIn•e˘‹TªeCñlRídîî
 
exãnds


160 
	gDeÁu…TªeCñlRídîî
 {

161 
public
 
ZooIn•e˘‹TªeCñlRídîî
() {

162 
£tLófIc⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëTªeLófIc⁄
());

163 
£tO≥nIc⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëTªeO≥nIc⁄
());

164 
£tClo£dIc⁄
(
ZooIn•e˘‹Ic⁄Resour˚s
.
gëTªeClo£dIc⁄
());

172 
¥iv©e
 cœs†
	cZooIn•e˘‹TªeNode
 
im∂emíts
 
	gTªeNode
 {

173 
¥iv©e
 
föÆ
 
Såög
 
	gnodeP©h
;

174 
¥iv©e
 
föÆ
 
Såög
 
	gnodeName
;

175 
¥iv©e
 
föÆ
 
ZooIn•e˘‹TªeNode
 
	g∑ª¡
;

177 
public
 
ZooIn•e˘‹TªeNode
(
Såög
 
nodeP©h
, ZooIn•e˘‹TªeNodê
∑ª¡
) {

178 
	gthis
.
	g∑ª¡
 = 
∑ª¡
;

179 
	gthis
.
	gnodeP©h
 = 
nodeP©h
;

180 
	gödex
 = 
nodeP©h
.
œ°IndexOf
("/");

181 i‡(
	gödex
 == -1) {

182 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
("InvalidÇodeÖath"

183 + 
nodeP©h
);

185 
	gthis
.
	gnodeName
 = 
nodeP©h
.
sub°rög
(
ödex
 + 1);

193 
public
 
	gEnumî©i⁄
<
	gTªeNode
> 
chûdªn
() {

194 
	gLi°
<
	gSåög
> 
	gchûdªn
 = 
zooIn•e˘‹M™agî


195 .
gëChûdªn
(
this
.
nodeP©h
);

196 
	gCﬁÀ˘i⁄s
.
s‹t
(
chûdªn
);

197 
	gLi°
<
	gTªeNode
> 
	gªtu∫Chûdªn
 = 
√w
 
AºayLi°
<
TªeNode
>();

198 
Såög
 
	gchûd
 : 
chûdªn
) {

199 
ªtu∫Chûdªn
.
add
(
√w
 
ZooIn•e˘‹TªeNode
((
this
.
nodeP©h


200 .
equÆs
("/"Ë? "" : 
this
.
nodeP©h
)

201 + "/" + 
chûd
, 
this
));

203  
	gCﬁÀ˘i⁄s
.
íumî©i⁄
(
ªtu∫Chûdªn
);

211 
public
 
boﬁón
 
gëAŒowsChûdªn
() {

212  
	gzooIn•e˘‹M™agî
.
isAŒowsChûdªn
(
this
.
nodeP©h
);

220 
public
 
TªeNode
 
gëChûdAt
(
chûdIndex
) {

221 
Såög
 
	gchûd
 = 
zooIn•e˘‹M™agî
.
gëNodeChûd
(
this
.
nodeP©h
,

222 
chûdIndex
);

223 i‡(
	gchûd
 !
nuŒ
) {

224  
√w
 
ZooIn•e˘‹TªeNode
((
this
.
nodeP©h
.
equÆs
("/") ? ""

225 : 
this
.
nodeP©h
)

226 + "/" + 
chûd
, 
this
);

228  
	gnuŒ
;

236 
public
 
gëChûdCou¡
() {

237  
	gzooIn•e˘‹M™agî
.
gëNumChûdªn
(
this
.
nodeP©h
);

245 
public
 
gëIndex
(
TªeNode
 
node
) {

246  
	gzooIn•e˘‹M™agî
.
gëNodeIndex
(
this
.
nodeP©h
);

254 
public
 
TªeNode
 
gëP¨ít
() {

255  
	gthis
.
	g∑ª¡
;

263 
public
 
boﬁón
 
isLóf
() {

264  !
	gzooIn•e˘‹M™agî
.
hasChûdªn
(
this
.
nodeP©h
);

267 @
Ovîride


268 
public
 
Såög
 
toSåög
() {

269  
	gthis
.
	gnodeName
;

272 @
Ovîride


273 
public
 
hashCode
() {

274 
föÆ
 
	g¥ime
 = 31;

275 
	gªsu…
 = 1;

276 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + 
gëOuãrTy≥
().
hashCode
();

277 
	gªsu…
 = 
¥ime
 * 
ªsu…


278 + ((
nodeP©h
 =
nuŒ
Ë? 0 :ÇodeP©h.
hashCode
());

279 
	gªsu…
 = 
¥ime
 * 
ªsu…


280 + ((
∑ª¡
 =
nuŒ
Ë? 0 :Ö¨ít.
hashCode
());

281  
	gªsu…
;

284 @
Ovîride


285 
public
 
boﬁón
 
equÆs
(
Obje˘
 
obj
) {

286 i‡(
	gthis
 =
obj
)

287  
åue
;

288 i‡(
	gobj
 =
nuŒ
)

289  
Ál£
;

290 i‡(
gëCœss
(Ë!
obj
.getClass())

291  
Ál£
;

292 
ZooIn•e˘‹TªeNode
 
	gŸhî
 = (ZooIn•e˘‹TªeNodeË
obj
;

293 i‡(!
gëOuãrTy≥
().
equÆs
(
Ÿhî
.getOuterType()))

294  
	gÁl£
;

295 i‡(
	gnodeP©h
 =
nuŒ
) {

296 i‡(
Ÿhî
.
nodeP©h
 !
nuŒ
)

297  
Ál£
;

298 } i‡(!
	gnodeP©h
.
equÆs
(
Ÿhî
.
nodeP©h
))

299  
	gÁl£
;

300 i‡(
	g∑ª¡
 =
nuŒ
) {

301 i‡(
Ÿhî
.
∑ª¡
 !
nuŒ
)

302  
Ál£
;

303 } i‡(!
	g∑ª¡
.
equÆs
(
Ÿhî
.
∑ª¡
))

304  
	gÁl£
;

305  
	gåue
;

308 
¥iv©e
 
ZooIn•e˘‹TªeVõwî
 
gëOuãrTy≥
() {

309  
	gZooIn•e˘‹TªeVõwî
.
	gthis
;

317 
public
 
	gLi°
<
	gSåög
> 
	$gëSñe˘edNodes
() {

318 
TªeP©h
[] 
∑ths
 = 
åì
.
	`gëSñe˘i⁄P©hs
();

319 
Li°
<
Såög
> 
£À˘edNodes
 = 
√w
 
AºayLi°
<String>();

320 i‡(
∑ths
 !
nuŒ
) {

321 
TªeP©h
 
∑th
 : 
∑ths
) {

322 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

323 
Obje˘
[] 
∑thAºay
 = 
∑th
.
	`gëP©h
();

324 
Obje˘
 
o
 : 
∑thAºay
) {

325 
Såög
 
nodeName
 = 
o
.
	`toSåög
();

326 i‡(
nodeName
.
	`Àngth
() > 0) {

327 
sb
.
	`≠≥nd
("/");

328 
sb
.
	`≠≥nd
(
o
.
	`toSåög
());

331 
£À˘edNodes
.
	`add
(
sb
.
	`toSåög
());

334  
£À˘edNodes
;

335 
	}
}

344 
public
 
¥o˚ssEvít
(
Såög
 
nodeP©h
, Såög 
evítTy≥
,

345 
M≠
<
Såög
, Såög> 
evítInfo
) {

346 
SåögBuûdî
 
	gsb
 = 
√w
 StringBuilder();

347 
	gsb
.
≠≥nd
("Node: ");

348 
	gsb
.
≠≥nd
(
nodeP©h
);

349 
	gsb
.
≠≥nd
("\nEvent: ");

350 
	gsb
.
≠≥nd
(
evítTy≥
);

351 i‡(
	gevítInfo
 !
nuŒ
) {

352 
M≠
.
E¡ry
<
Såög
, Såög> 
íåy
 : 
evítInfo
.
íåySë
()) {

353 
sb
.
≠≥nd
("\n");

354 
	gsb
.
≠≥nd
(
íåy
.
gëKey
());

355 
	gsb
.
≠≥nd
(": ");

356 
	gsb
.
≠≥nd
(
íåy
.
gëVÆue
());

359 
	gthis
.
	gtﬂ°îM™agî
.
showTﬂ°î
(
ZooIn•e˘‹Ic⁄Resour˚s


360 .
gëInf‹m©i⁄Ic⁄
(), 
sb
.
toSåög
());

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerACL.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gCﬁ‹
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagC⁄°øöts
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagLayout
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gIn£ts
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecuti⁄Ex˚±i⁄
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gB‹dîFa˘‹y
;

31 
imp‹t
 
	gjavax
.
	gswög
.
	gJLabñ
;

32 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

33 
imp‹t
 
	gjavax
.
	gswög
.
	gJS¸ﬁlP™e
;

34 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextFõld
;

35 
imp‹t
 
	gjavax
.
	gswög
.
	gSwögW‹kî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹NodeM™agî
;

43 
public
 cœs†
	cNodeVõwîACL
 
exãnds
 
	mZooIn•e˘‹NodeVõwî
 {

44 
¥iv©e
 
ZooIn•e˘‹NodeM™agî
 
	mzooIn•e˘‹M™agî
;

45 
¥iv©e
 
föÆ
 
JP™ñ
 
	ma˛D©aP™ñ
;

46 
¥iv©e
 
Såög
 
	m£À˘edNode
;

51 
public
 
	$NodeVõwîACL
() {

52 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

53 
this
.
a˛D©aP™ñ
 = 
√w
 
	`JP™ñ
();

54 
this
.
a˛D©aP™ñ
.
	`£tBackground
(
Cﬁ‹
.
WHITE
);

55 
JS¸ﬁlP™e
 
s¸ﬁÀr
 = 
√w
 
	`JS¸ﬁlP™e
(
this
.
a˛D©aP™ñ
);

56 
this
.
	`add
(
s¸ﬁÀr
, 
B‹dîLayout
.
CENTER
);

66 @
Ovîride


67 
public
 
Såög
 
	$gëTôÀ
() {

69 
	}
}

78 @
Ovîride


79 
public
 
nodeSñe˘i⁄Ch™ged
(
Li°
<
Såög
> 
£À˘edNodes
) {

80 
	gthis
.
	ga˛D©aP™ñ
.
ªmoveAŒ
();

81 i‡(
	g£À˘edNodes
.
size
() > 0) {

82 
	gthis
.
	g£À˘edNode
 = 
£À˘edNodes
.
gë
(0);

83 
	gSwögW‹kî
<
	gLi°
<
	gM≠
<
	gSåög
, Såög>>, 
	gVoid
> 
	gw‹kî
 = 
√w
 
SwögW‹kî
<
Li°
<
M≠
<
Såög
, String>>, Void>() {

85 @
Ovîride


86 
¥Ÿe˘ed
 
	gLi°
<
	gM≠
<
	gSåög
, Såög>> 
doInBackground
()

87 
throws
 
	gEx˚±i⁄
 {

88  
	gNodeVõwîACL
.
	gthis
.
	gzooIn•e˘‹M™agî


89 .
gëACLs
(
NodeVõwîACL
.
this
.
£À˘edNode
);

92 @
Ovîride


93 
¥Ÿe˘ed
 
d⁄e
() {

94 
	gLi°
<
	gM≠
<
	gSåög
, Såög>> 
	ga˛s
 = 
nuŒ
;

95 
	gåy
 {

96 
	ga˛s
 = 
gë
();

97 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

98 
	ga˛s
 = 
√w
 
AºayLi°
<
M≠
<
Såög
, 
	gSåög
>>();

99 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

101 + 
NodeVõwîACL
.
this
.
£À˘edNode
, 
e
);

102 } 
ˇtch
 (
Executi⁄Ex˚±i⁄
 
e
) {

103 
	ga˛s
 = 
√w
 
AºayLi°
<
M≠
<
Såög
, 
	gSåög
>>();

104 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

106 + 
NodeVõwîACL
.
this
.
£À˘edNode
, 
e
);

108 
	ga˛D©aP™ñ
.
£tLayout
(
√w
 
GridBagLayout
());

109 
	gj
 = 0;

110 
	gM≠
<
	gSåög
, Såög> 
	gd©a
 : 
a˛s
) {

111 
rowPos
 = 2 * 
j
 + 1;

112 
JP™ñ
 
	ga˛P™ñ
 = 
√w
 JPanel();

113 
	ga˛P™ñ
.
£tB‹dî
(
B‹dîFa˘‹y


114 .
¸óãLöeB‹dî
(
Cﬁ‹
.
BLACK
));

115 
	ga˛P™ñ
.
£tBackground
(
Cﬁ‹
.
WHITE
);

116 
	ga˛P™ñ
.
£tLayout
(
√w
 
GridBagLayout
());

117 
	gi
 = 0;

118 
	gM≠
.
	gE¡ry
<
	gSåög
, Såög> 
	gíåy
 : 
d©a
.
íåySë
()) {

119 
rowPosACL
 = 2 * 
i
 + 1;

120 
JLabñ
 
	gœbñ
 = 
√w
 JLabñ(
íåy
.
gëKey
());

121 
JTextFõld
 
	gãxt
 = 
√w
 JTextFõld(
íåy
.
gëVÆue
());

122 
	gãxt
.
£tEdôabÀ
(
Ál£
);

123 
GridBagC⁄°øöts
 
	gc1
 = 
√w
 GridBagConstraints();

124 
	gc1
.
	ggridx
 = 1;

125 
	gc1
.
	ggridy
 = 
rowPosACL
;

126 
	gc1
.
	ggridwidth
 = 1;

127 
	gc1
.
	ggridheight
 = 1;

128 
	gc1
.
	gweightx
 = 0;

129 
	gc1
.
	gweighty
 = 0;

130 
	gc1
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
NORTHWEST
;

131 
	gc1
.
	gfûl
 = 
GridBagC⁄°øöts
.
BOTH
;

132 
	gc1
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

133 
	gc1
.
	gùadx
 = 0;

134 
	gc1
.
	gùady
 = 0;

135 
	ga˛P™ñ
.
add
(
œbñ
, 
c1
);

136 
GridBagC⁄°øöts
 
	gc2
 = 
√w
 GridBagConstraints();

137 
	gc2
.
	ggridx
 = 3;

138 
	gc2
.
	ggridy
 = 
rowPosACL
;

139 
	gc2
.
	ggridwidth
 = 1;

140 
	gc2
.
	ggridheight
 = 1;

141 
	gc2
.
	gweightx
 = 0;

142 
	gc2
.
	gweighty
 = 0;

143 
	gc2
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
NORTHWEST
;

144 
	gc2
.
	gfûl
 = 
GridBagC⁄°øöts
.
BOTH
;

145 
	gc2
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

146 
	gc2
.
	gùadx
 = 0;

147 
	gc2
.
	gùady
 = 0;

148 
	ga˛P™ñ
.
add
(
ãxt
, 
c2
);

149 
	gi
++;

151 
GridBagC⁄°øöts
 
	gc
 = 
√w
 GridBagConstraints();

152 
	gc
.
	ggridx
 = 1;

153 
	gc
.
	ggridy
 = 
rowPos
;

154 
	gc
.
	ggridwidth
 = 1;

155 
	gc
.
	ggridheight
 = 1;

156 
	gc
.
	gweightx
 = 1;

157 
	gc
.
	gweighty
 = 1;

158 
	gc
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
NORTHWEST
;

159 
	gc
.
	gfûl
 = 
GridBagC⁄°øöts
.
NONE
;

160 
	gc
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

161 
	gc
.
	gùadx
 = 0;

162 
	gc
.
	gùady
 = 0;

163 
	ga˛D©aP™ñ
.
add
(
a˛P™ñ
, 
c
);

165 
	gNodeVõwîACL
.
	gthis
.
	ga˛D©aP™ñ
.
ªvÆid©e
();

166 
	gNodeVõwîACL
.
	gthis
.
	ga˛D©aP™ñ
.
ª∑öt
();

169 
	gw‹kî
.
execuã
();

181 @
Ovîride


182 
public
 
	$£tZooIn•e˘‹M™agî
(

183 
ZooIn•e˘‹NodeM™agî
 
zooIn•e˘‹M™agî
) {

184 
this
.
zooIn•e˘‹M™agî
 = zooInspectorManager;

185 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerData.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Evít
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gevít
.
	gA˘i⁄Li°íî
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecuti⁄Ex˚±i⁄
;

26 
imp‹t
 
	gjavax
.
	gswög
.
	gJBuâ⁄
;

27 
imp‹t
 
	gjavax
.
	gswög
.
	gJO±i⁄P™e
;

28 
imp‹t
 
	gjavax
.
	gswög
.
	gJS¸ﬁlP™e
;

29 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextP™e
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gJToﬁB¨
;

31 
imp‹t
 
	gjavax
.
	gswög
.
	gSwögW‹kî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gZooIn•e˘‹Ic⁄Resour˚s
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹NodeM™agî
;

40 
public
 cœs†
	cNodeVõwîD©a
 
exãnds
 
	mZooIn•e˘‹NodeVõwî
 {

41 
¥iv©e
 
ZooIn•e˘‹NodeM™agî
 
	mzooIn•e˘‹M™agî
;

42 
¥iv©e
 
föÆ
 
JTextP™e
 
	md©aAªa
;

43 
¥iv©e
 
föÆ
 
JToﬁB¨
 
	mtoﬁb¨
;

44 
¥iv©e
 
Såög
 
	m£À˘edNode
;

49 
public
 
	$NodeVõwîD©a
() {

50 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

51 
this
.
d©aAªa
 = 
√w
 
	`JTextP™e
();

52 
this
.
toﬁb¨
 = 
√w
 
	`JToﬁB¨
();

53 
this
.
toﬁb¨
.
	`£tFlﬂèbÀ
(
Ál£
);

54 
JS¸ﬁlP™e
 
s¸ﬁÀr
 = 
√w
 
	`JS¸ﬁlP™e
(
this
.
d©aAªa
);

55 
s¸ﬁÀr


56 .
	`£tH‹iz⁄èlS¸ﬁlB¨Pﬁicy
(
JS¸ﬁlP™e
.
HORIZONTAL_SCROLLBAR_NEVER
);

57 
this
.
	`add
(
s¸ﬁÀr
, 
B‹dîLayout
.
CENTER
);

58 
this
.
	`add
—his.
toﬁb¨
, 
B‹dîLayout
.
NORTH
);

59 
JBuâ⁄
 
ßveBuâ⁄
 = 
√w
 
	`JBuâ⁄
(
ZooIn•e˘‹Ic⁄Resour˚s


60 .
	`gëSaveIc⁄
());

61 
ßveBuâ⁄
.
	`addA˘i⁄Li°íî
(
√w
 
	`A˘i⁄Li°íî
() {

63 
public
 
	`a˘i⁄Pîf‹med
(
A˘i⁄Evít
 
e
) {

64 i‡(
£À˘edNode
 !
nuŒ
) {

65 i‡(
JO±i⁄P™e
.
	`showC⁄fúmDülog
(
NodeVõwîD©a
.
this
,

68 "C⁄fúm Save", 
JO±i⁄P™e
.
YES_NO_OPTION
,

69 
JO±i⁄P™e
.
WARNING_MESSAGE
Ë=JO±i⁄P™e.
YES_OPTION
) {

70 
zooIn•e˘‹M™agî
.
	`£tD©a
(
£À˘edNode
, 
d©aAªa


71 .
	`gëText
());

76 
this
.
toﬁb¨
.
	`add
(
ßveBuâ⁄
);

87 @
Ovîride


88 
public
 
Såög
 
	$gëTôÀ
() {

90 
	}
}

99 @
Ovîride


100 
public
 
nodeSñe˘i⁄Ch™ged
(
Li°
<
Såög
> 
£À˘edNodes
) {

101 i‡(
	g£À˘edNodes
.
size
() > 0) {

102 
	gthis
.
	g£À˘edNode
 = 
£À˘edNodes
.
gë
(0);

103 
	gSwögW‹kî
<
	gSåög
, 
	gVoid
> 
	gw‹kî
 = 
√w
 
SwögW‹kî
<
Såög
, Void>() {

105 @
Ovîride


106 
¥Ÿe˘ed
 
Såög
 
doInBackground
(Ë
throws
 
	gEx˚±i⁄
 {

107  
	gNodeVõwîD©a
.
	gthis
.
	gzooIn•e˘‹M™agî


108 .
gëD©a
(
NodeVõwîD©a
.
this
.
£À˘edNode
);

111 @
Ovîride


112 
¥Ÿe˘ed
 
d⁄e
() {

113 
Såög
 
	gd©a
 = "";

114 
	gåy
 {

115 
	gd©a
 = 
gë
();

116 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

117 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

119 + 
NodeVõwîD©a
.
this
.
£À˘edNode
, 
e
);

120 } 
ˇtch
 (
Executi⁄Ex˚±i⁄
 
e
) {

121 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

123 + 
NodeVõwîD©a
.
this
.
£À˘edNode
, 
e
);

125 
	gNodeVõwîD©a
.
	gthis
.
	gd©aAªa
.
£tText
(
d©a
);

128 
	gw‹kî
.
execuã
();

140 @
Ovîride


141 
public
 
	$£tZooIn•e˘‹M™agî
(

142 
ZooIn•e˘‹NodeM™agî
 
zooIn•e˘‹M™agî
) {

143 
this
.
zooIn•e˘‹M™agî
 = zooInspectorManager;

144 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerMetaData.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gB‹dîLayout
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gCﬁ‹
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagC⁄°øöts
;

23 
imp‹t
 
	gjava
.
	gawt
.
	gGridBagLayout
;

24 
imp‹t
 
	gjava
.
	gawt
.
	gIn£ts
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecuti⁄Ex˚±i⁄
;

30 
imp‹t
 
	gjavax
.
	gswög
.
	gJLabñ
;

31 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

32 
imp‹t
 
	gjavax
.
	gswög
.
	gJS¸ﬁlP™e
;

33 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextFõld
;

34 
imp‹t
 
	gjavax
.
	gswög
.
	gSwögW‹kî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹NodeM™agî
;

45 
public
 cœs†
	cNodeVõwîMëaD©a
 
exãnds
 
	mZooIn•e˘‹NodeVõwî
 {

46 
¥iv©e
 
ZooIn•e˘‹NodeM™agî
 
	mzooIn•e˘‹M™agî
;

47 
¥iv©e
 
föÆ
 
JP™ñ
 
	mmëaD©aP™ñ
;

48 
¥iv©e
 
Såög
 
	m£À˘edNode
;

53 
public
 
	$NodeVõwîMëaD©a
() {

54 
this
.
	`£tLayout
(
√w
 
	`B‹dîLayout
());

55 
this
.
mëaD©aP™ñ
 = 
√w
 
	`JP™ñ
();

56 
this
.
mëaD©aP™ñ
.
	`£tBackground
(
Cﬁ‹
.
WHITE
);

57 
JS¸ﬁlP™e
 
s¸ﬁÀr
 = 
√w
 
	`JS¸ﬁlP™e
(
this
.
mëaD©aP™ñ
);

58 
this
.
	`add
(
s¸ﬁÀr
, 
B‹dîLayout
.
CENTER
);

68 @
Ovîride


69 
public
 
Såög
 
	$gëTôÀ
() {

71 
	}
}

80 @
Ovîride


81 
public
 
nodeSñe˘i⁄Ch™ged
(
Li°
<
Såög
> 
£À˘edNodes
) {

82 
	gthis
.
	gmëaD©aP™ñ
.
ªmoveAŒ
();

83 i‡(
	g£À˘edNodes
.
size
() > 0) {

84 
	gthis
.
	g£À˘edNode
 = 
£À˘edNodes
.
gë
(0);

85 
	gSwögW‹kî
<
	gM≠
<
	gSåög
, Såög>, 
	gVoid
> 
	gw‹kî
 = 
√w
 
SwögW‹kî
<
M≠
<
Såög
, String>, Void>() {

87 @
Ovîride


88 
¥Ÿe˘ed
 
	gM≠
<
	gSåög
, Såög> 
doInBackground
(Ë
throws
 
	gEx˚±i⁄
 {

89  
	gNodeVõwîMëaD©a
.
	gthis
.
	gzooIn•e˘‹M™agî


90 .
gëNodeMëa
(
NodeVõwîMëaD©a
.
this
.
£À˘edNode
);

93 @
Ovîride


94 
¥Ÿe˘ed
 
d⁄e
() {

95 
	gM≠
<
	gSåög
, Såög> 
	gd©a
 = 
nuŒ
;

96 
	gåy
 {

97 
	gd©a
 = 
gë
();

98 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

99 
	gd©a
 = 
√w
 
HashM≠
<
Såög
, 
	gSåög
>();

100 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

102 + 
NodeVõwîMëaD©a
.
this
.
£À˘edNode
,

103 
e
);

104 } 
ˇtch
 (
Executi⁄Ex˚±i⁄
 
e
) {

105 
	gd©a
 = 
√w
 
HashM≠
<
Såög
, 
	gSåög
>();

106 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

108 + 
NodeVõwîMëaD©a
.
this
.
£À˘edNode
,

109 
e
);

111 
	gNodeVõwîMëaD©a
.
	gthis
.
	gmëaD©aP™ñ


112 .
£tLayout
(
√w
 
GridBagLayout
());

113 
JP™ñ
 
	göfoP™ñ
 = 
√w
 JPanel();

114 
	göfoP™ñ
.
£tBackground
(
Cﬁ‹
.
WHITE
);

115 
	göfoP™ñ
.
£tLayout
(
√w
 
GridBagLayout
());

116 
	gi
 = 0;

117 
	growPos
 = 0;

118 
	gM≠
.
	gE¡ry
<
	gSåög
, Såög> 
	gíåy
 : 
d©a
.
íåySë
()) {

119 
rowPos
 = 2 * 
i
 + 1;

120 
JLabñ
 
	gœbñ
 = 
√w
 JLabñ(
íåy
.
gëKey
());

121 
JTextFõld
 
	gãxt
 = 
√w
 JTextFõld(
íåy
.
gëVÆue
());

122 
	gãxt
.
£tEdôabÀ
(
Ál£
);

123 
GridBagC⁄°øöts
 
	gc1
 = 
√w
 GridBagConstraints();

124 
	gc1
.
	ggridx
 = 0;

125 
	gc1
.
	ggridy
 = 
rowPos
;

126 
	gc1
.
	ggridwidth
 = 1;

127 
	gc1
.
	ggridheight
 = 1;

128 
	gc1
.
	gweightx
 = 0;

129 
	gc1
.
	gweighty
 = 0;

130 
	gc1
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

131 
	gc1
.
	gfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

132 
	gc1
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

133 
	gc1
.
	gùadx
 = 0;

134 
	gc1
.
	gùady
 = 0;

135 
	göfoP™ñ
.
add
(
œbñ
, 
c1
);

136 
GridBagC⁄°øöts
 
	gc2
 = 
√w
 GridBagConstraints();

137 
	gc2
.
	ggridx
 = 2;

138 
	gc2
.
	ggridy
 = 
rowPos
;

139 
	gc2
.
	ggridwidth
 = 1;

140 
	gc2
.
	ggridheight
 = 1;

141 
	gc2
.
	gweightx
 = 0;

142 
	gc2
.
	gweighty
 = 0;

143 
	gc2
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
WEST
;

144 
	gc2
.
	gfûl
 = 
GridBagC⁄°øöts
.
HORIZONTAL
;

145 
	gc2
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

146 
	gc2
.
	gùadx
 = 0;

147 
	gc2
.
	gùady
 = 0;

148 
	göfoP™ñ
.
add
(
ãxt
, 
c2
);

149 
	gi
++;

151 
GridBagC⁄°øöts
 
	gc
 = 
√w
 GridBagConstraints();

152 
	gc
.
	ggridx
 = 1;

153 
	gc
.
	ggridy
 = 
rowPos
;

154 
	gc
.
	ggridwidth
 = 1;

155 
	gc
.
	ggridheight
 = 1;

156 
	gc
.
	gweightx
 = 1;

157 
	gc
.
	gweighty
 = 1;

158 
	gc
.
	g™ch‹
 = 
GridBagC⁄°øöts
.
NORTHWEST
;

159 
	gc
.
	gfûl
 = 
GridBagC⁄°øöts
.
NONE
;

160 
	gc
.
	gö£ts
 = 
√w
 
In£ts
(5, 5, 5, 5);

161 
	gc
.
	gùadx
 = 0;

162 
	gc
.
	gùady
 = 0;

163 
	gNodeVõwîMëaD©a
.
	gthis
.
	gmëaD©aP™ñ
.
add
(
öfoP™ñ
, 
c
);

164 
	gNodeVõwîMëaD©a
.
	gthis
.
	gmëaD©aP™ñ
.
ªvÆid©e
();

165 
	gNodeVõwîMëaD©a
.
	gthis
.
	gmëaD©aP™ñ
.
ª∑öt
();

168 
	gw‹kî
.
execuã
();

180 @
Ovîride


181 
public
 
	$£tZooIn•e˘‹M™agî
(

182 
ZooIn•e˘‹NodeM™agî
 
zooIn•e˘‹M™agî
) {

183 
this
.
zooIn•e˘‹M™agî
 = zooInspectorManager;

184 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/ZooInspectorNodeViewer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	ggui
.
	gnodevõwî
;

20 
imp‹t
 
	gjava
.
	gawt
.
	gd©©øns„r
.
	gD©aFœv‹
;

21 
imp‹t
 
	gjava
.
	gawt
.
	gd©©øns„r
.
	gTøns„øbÀ
;

22 
imp‹t
 
	gjava
.
	gawt
.
	gd©©øns„r
.
	gUnsuµ‹ãdFœv‹Ex˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjavax
.
	gswög
.
	gJP™ñ
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
.
	gZooIn•e˘‹NodeM™agî
;

34 
public
 
ab°ø˘
 cœs†
	cZooIn•e˘‹NodeVõwî
 
exãnds
 
JP™ñ
 
im∂emíts


35 
	mTøns„øbÀ
 {

40 
public
 
föÆ
 
D©aFœv‹
 
	mnodeVõwîD©aFœv‹
 = 
√w
 DataFlavor(

41 
ZooIn•e˘‹NodeVõwî
.
˛ass
, "nodeviewer");

46 
public
 
ab°ø˘
 
£tZooIn•e˘‹M™agî
(

47 
ZooIn•e˘‹NodeM™agî
 
zooIn•e˘‹M™agî
);

56 
public
 
ab°ø˘
 
nodeSñe˘i⁄Ch™ged
(
Li°
<
Såög
> 
£À˘edNodes
);

62 
public
 
ab°ø˘
 
Såög
 
gëTôÀ
();

71 
public
 
Obje˘
 
	$gëTøns„rD©a
(
D©aFœv‹
 
Êav‹
)

72 
throws
 
Unsuµ‹ãdFœv‹Ex˚±i⁄
, 
IOEx˚±i⁄
 {

73 i‡(
Êav‹
.
	`equÆs
(
nodeVõwîD©aFœv‹
)) {

74  
this
.
	`gëCœss
().
	`gëC™⁄iˇlName
();

76  
nuŒ
;

85 
public
 
D©aFœv‹
[] 
	$gëTøns„rD©aFœv‹s
() {

86  
√w
 
D©aFœv‹
[] { 
nodeVõwîD©aFœv‹
 };

87 
	}
}

95 
public
 
boﬁón
 
	$isD©aFœv‹Suµ‹ãd
(
D©aFœv‹
 
Êav‹
) {

96  
Êav‹
.
	`equÆs
(
nodeVõwîD©aFœv‹
);

97 
	}
}

104 @
Ovîride


105 
public
 
	$hashCode
() {

106 
föÆ
 
¥ime
 = 31;

107 
ªsu…
 = 1;

108 
ªsu…
 = 
¥ime
 *Ñesult

109 + ((
	`gëTôÀ
(Ë=
nuŒ
Ë? 0 : gëTôÀ().
	`hashCode
());

110  
ªsu…
;

111 
	}
}

118 @
Ovîride


119 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

120 i‡(
this
 =
obj
)

121  
åue
;

122 i‡(
obj
 =
nuŒ
)

123  
Ál£
;

124 i‡(
	`gëCœss
(Ë!
obj
.getClass())

125  
Ál£
;

126 
ZooIn•e˘‹NodeVõwî
 
Ÿhî
 = (ZooIn•e˘‹NodeVõwîË
obj
;

127 i‡(
	`gëCœss
().
	`gëC™⁄iˇlName
(Ë!
Ÿhî
.getClass()

128 .
	`gëC™⁄iˇlName
()) {

129  
Ál£
;

131 i‡(
	`gëTôÀ
(Ë=
nuŒ
) {

132 i‡(
Ÿhî
.
	`gëTôÀ
(Ë!
nuŒ
)

133  
Ál£
;

134 } i‡(!
	`gëTôÀ
().
	`equÆs
(
Ÿhî
.getTitle()))

135  
Ál£
;

136  
åue
;

137 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/logger/LoggerFactory.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
;

24 
public
 cœs†
	cLoggîFa˘‹y


26 
¥iv©e
 
föÆ
 
	m‹g
.
	m¶f4j
.
Loggî
 
	mloggî
 = 
‹g
.
¶f4j
.
LoggîFa˘‹y
.
gëLoggî
("org.apache.zookeeper.inspector");

31 
public
 
	m‹g
.
	m¶f4j
.
Loggî
 
	$gëLoggî
()

33  
loggî
;

36 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/NodeListener.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

25 
public
 
öãrÁ˚
 
	gNodeLi°íî
 {

35 
public
 
¥o˚ssEvít
(
Såög
 
nodeP©h
, Såög 
evítTy≥
,

36 
M≠
<
Såög
, Såög> 
evítInfo
);

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/Pair.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

26 
public
 
˛ass
 
	gPaú
<
	gK
, 
	gV
> {

27 
¥iv©e
 
K
 
	gkey
;

28 
¥iv©e
 
V
 
	gvÆue
;

34 
public
 
Paú
(
K
 
key
, 
V
 
vÆue
) {

35 
	gthis
.
	gkey
 = 
key
;

36 
	gthis
.
	gvÆue
 = 
vÆue
;

42 
public
 
Paú
() {

49 
public
 
K
 
gëKey
() {

50  
	gkey
;

56 
public
 
£tKey
(
K
 
key
) {

57 
	gthis
.
	gkey
 = 
key
;

63 
public
 
V
 
gëVÆue
() {

64  
	gvÆue
;

70 
public
 
£tVÆue
(
V
 
vÆue
) {

71 
	gthis
.
	gvÆue
 = 
vÆue
;

74 @
Ovîride


75 
public
 
Såög
 
toSåög
() {

76  "Paú [" + 
	gkey
 + ", " + 
	gvÆue
 + "]";

84 @
Ovîride


85 
public
 
hashCode
() {

86 
föÆ
 
	g¥ime
 = 31;

87 
	gªsu…
 = 1;

88 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ((
key
 =
nuŒ
Ë? 0 : key.
hashCode
());

89 
	gªsu…
 = 
¥ime
 * 
ªsu…
 + ((
vÆue
 =
nuŒ
Ë? 0 : vÆue.
hashCode
());

90  
	gªsu…
;

98 @
Ovîride


99 
public
 
boﬁón
 
equÆs
(
Obje˘
 
obj
) {

100 i‡(
	gthis
 =
obj
)

101  
åue
;

102 i‡(
	gobj
 =
nuŒ
)

103  
Ál£
;

104 i‡(
gëCœss
(Ë!
obj
.getClass())

105  
Ál£
;

106 
	gPaú
<?, ?> 
	gŸhî
 = (
Paú
<?, ?>Ë
	gobj
;

107 i‡(
	gkey
 =
nuŒ
) {

108 i‡(
Ÿhî
.
key
 !
nuŒ
)

109  
Ál£
;

110 } i‡(!
	gkey
.
equÆs
(
Ÿhî
.
key
))

111  
	gÁl£
;

112 i‡(
	gvÆue
 =
nuŒ
) {

113 i‡(
Ÿhî
.
vÆue
 !
nuŒ
)

114  
Ál£
;

115 } i‡(!
	gvÆue
.
equÆs
(
Ÿhî
.
vÆue
))

116  
	gÁl£
;

117  
	gåue
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

27 
imp‹t
 
	gjavax
.
	gswög
.
	gJComboBox
;

28 
imp‹t
 
	gjavax
.
	gswög
.
	gJTextFõld
;

34 
public
 
öãrÁ˚
 
ZooIn•e˘‹M™agî
 
exãnds
 
	gZooIn•e˘‹NodeM™agî
,

35 
	gZooIn•e˘‹NodeTªeM™agî
 {

41 
public
 
boﬁón
 
c⁄√˘
(
Pr›îtõs
 
c⁄√˘i⁄Pr›s
);

46 
public
 
boﬁón
 
disc⁄√˘
();

61 
public
 
	gPaú
<
	gM≠
<
	gSåög
, 
	gLi°
<Såög>>, M≠<Såög, Såög>> 
gëC⁄√˘i⁄Pr›îtõsTem∂©e
();

69 
public
 
addW©chîs
(
CﬁÀ˘i⁄
<
Såög
> 
£À˘edNodes
,

70 
NodeLi°íî
 
nodeLi°íî
);

76 
public
 
ªmoveW©chîs
(
CﬁÀ˘i⁄
<
Såög
> 
£À˘edNodes
);

87 
public
 
	gLi°
<
	gSåög
> 
lﬂdNodeVõwîsFûe
(
Fûe
 
£À˘edFûe
)

88 
throws
 
	gIOEx˚±i⁄
;

98 
public
 
ßveNodeVõwîsFûe
(
Fûe
 
£À˘edFûe
,

99 
Li°
<
Såög
> 
nodeVõwîsCœssNames
Ë
throws
 
	gIOEx˚±i⁄
;

107 
public
 
£tDeÁu…NodeVõwîC⁄figuøti⁄
(

108 
Li°
<
Såög
> 
nodeVõwîsCœssNames
Ë
throws
 
	gIOEx˚±i⁄
;

116 
	gLi°
<
	gSåög
> 
gëDeÁu…NodeVõwîC⁄figuøti⁄
(Ë
throws
 
	gIOEx˚±i⁄
;

123 
public
 
£tLa°C⁄√˘i⁄Pr›s
(
Pr›îtõs
 
c⁄√˘i⁄Pr›s
);

129 
public
 
Pr›îtõs
 
gëLa°C⁄√˘i⁄Pr›s
();

137 
public
 
ßveDeÁu…C⁄√˘i⁄Fûe
(
Pr›îtõs
 
¥›s
Ë
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManagerImpl.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

20 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdWrôî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gPîms
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gí¸y±i⁄
.
	gBasicD©aEn¸y±i⁄M™agî
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gí¸y±i⁄
.
	gD©aEn¸y±i⁄M™agî
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªåy
.
	gZooKì≥rRëry
;

55 
public
 cœs†
	cZooIn•e˘‹M™agîIm∂
 
im∂emíts
 
	mZooIn•e˘‹M™agî
 {

56 
¥iv©e
 
föÆ
 
Såög
 
	mA_VERSION
 = "ACL Version";

57 
¥iv©e
 
föÆ
 
Såög
 
	mC_TIME
 = "Creation Time";

58 
¥iv©e
 
föÆ
 
Såög
 
	mC_VERSION
 = "Children Version";

59 
¥iv©e
 
föÆ
 
Såög
 
	mCZXID
 = "Creation ID";

60 
¥iv©e
 
föÆ
 
Såög
 
	mDATA_LENGTH
 = "Data Length";

61 
¥iv©e
 
föÆ
 
Såög
 
	mEPHEMERAL_OWNER
 = "Ephemeral Owner";

62 
¥iv©e
 
föÆ
 
Såög
 
	mM_TIME
 = "Last Modified Time";

63 
¥iv©e
 
föÆ
 
Såög
 
	mMZXID
 = "Modified ID";

64 
¥iv©e
 
föÆ
 
Såög
 
	mNUM_CHILDREN
 = "Number of Children";

65 
¥iv©e
 
föÆ
 
Såög
 
	mPZXID
 = "Node ID";

66 
¥iv©e
 
föÆ
 
Såög
 
	mVERSION
 = "Data Version";

67 
¥iv©e
 
föÆ
 
Såög
 
	mACL_PERMS
 = "Permissions";

68 
¥iv©e
 
föÆ
 
Såög
 
	mACL_SCHEME
 = "Scheme";

69 
¥iv©e
 
föÆ
 
Såög
 
	mACL_ID
 = "Id";

70 
¥iv©e
 
föÆ
 
Såög
 
	mSESSION_STATE
 = "Session State";

71 
¥iv©e
 
föÆ
 
Såög
 
	mSESSION_ID
 = "Session ID";

75 
public
 
föÆ
 
Såög
 
	mCONNECT_STRING
 = "hosts";

79 
public
 
föÆ
 
Såög
 
	mSESSION_TIMEOUT
 = "timeout";

84 
public
 
föÆ
 
Såög
 
	mDATA_ENCRYPTION_MANAGER
 = "encryptionManager";

86 
¥iv©e
 
föÆ
 
Fûe
 
	mdeÁu…NodeVõwîsFûe
 = 
√w
 File(

88 
¥iv©e
 
föÆ
 
Fûe
 
	mdeÁu…C⁄√˘i⁄Fûe
 = 
√w
 File(

91 
¥iv©e
 
D©aEn¸y±i⁄M™agî
 
	mí¸y±i⁄M™agî
;

92 
¥iv©e
 
Såög
 
	mc⁄√˘Såög
;

93 
¥iv©e
 
	m£ssi⁄Timeout
;

94 
¥iv©e
 
ZooKì≥r
 
	mzooKì≥r
;

95 
¥iv©e
 
föÆ
 
	mM≠
<
	mSåög
, 
	mNodeW©chî
> 
	mw©chîs
 = 
√w
 
HashM≠
<
Såög
, NodeWatcher>();

96 
¥Ÿe˘ed
 
boﬁón
 
	mc⁄√˘ed
 = 
åue
;

97 
¥iv©e
 
Pr›îtõs
 
	mœ°C⁄√˘i⁄Pr›s
;

98 
¥iv©e
 
Såög
 
	mdeÁu…En¸y±i⁄M™agî
;

99 
¥iv©e
 
Såög
 
	mdeÁu…Timeout
;

100 
¥iv©e
 
Såög
 
	mdeÁu…Ho°s
;

107 
public
 
	$ZooIn•e˘‹M™agîIm∂
(Ë
throws
 
IOEx˚±i⁄
 {

108 
	`lﬂdDeÁu…C⁄√˘i⁄Fûe
();

118 
public
 
boﬁón
 
	$c⁄√˘
(
Pr›îtõs
 
c⁄√˘i⁄Pr›s
) {

119 
åy
 {

120 i‡(
this
.
zooKì≥r
 =
nuŒ
) {

121 
Såög
 
c⁄√˘Såög
 = 
c⁄√˘i⁄Pr›s


122 .
	`gëPr›îty
(
CONNECT_STRING
);

123 
Såög
 
£ssi⁄Timeout
 = 
c⁄√˘i⁄Pr›s


124 .
	`gëPr›îty
(
SESSION_TIMEOUT
);

125 
Såög
 
í¸y±i⁄M™agî
 = 
c⁄√˘i⁄Pr›s


126 .
	`gëPr›îty
(
DATA_ENCRYPTION_MANAGER
);

127 i‡(
c⁄√˘Såög
 =
nuŒ
 || 
£ssi⁄Timeout
 ==Çull) {

128 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

131 i‡(
í¸y±i⁄M™agî
 =
nuŒ
) {

132 
this
.
í¸y±i⁄M™agî
 = 
√w
 
	`BasicD©aEn¸y±i⁄M™agî
();

134 
Cœss
<?> 
˛azz
 = Cœss.
	`f‹Name
(
í¸y±i⁄M™agî
);

136 i‡(
Aºays
.
	`asLi°
(
˛azz
.
	`gëI¡îÁ˚s
()).
	`c⁄èös
(

137 
D©aEn¸y±i⁄M™agî
.
˛ass
)) {

138 
this
.
í¸y±i⁄M™agî
 = (
D©aEn¸y±i⁄M™agî
Ë
Cœss


139 .
	`f‹Name
(
í¸y±i⁄M™agî
).
	`√wIn°™˚
();

141 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

145 
this
.
c⁄√˘Såög
 = connectString;

146 
this
.
£ssi⁄Timeout
 = 
I¡egî
.
	`vÆueOf
(sessionTimeout);

147 
this
.
zooKì≥r
 = 
√w
 
	`ZooKì≥rRëry
(
c⁄√˘Såög
, 
I¡egî


148 .
	`vÆueOf
(
£ssi⁄Timeout
), 
√w
 
	`W©chî
() {

150 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

151 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
Expúed
) {

152 
c⁄√˘ed
 = 
Ál£
;

156 ((
ZooKì≥rRëry
Ë
this
.
zooKì≥r
).
	`£tRëryLimô
(10);

157 
c⁄√˘ed
 = ((
ZooKì≥rRëry
Ë
this
.
zooKì≥r
).
	`ã°C⁄√˘i⁄
();

158  
c⁄√˘ed
;

160 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

161 
e
.
	`¥ötSèckTø˚
();

163 
c⁄√˘ed
 = 
Ál£
;

164  
c⁄√˘ed
;

165 
	}
}

173 
public
 
boﬁón
 
	$disc⁄√˘
() {

174 
åy
 {

175 i‡(
this
.
zooKì≥r
 !
nuŒ
) {

176 
this
.
zooKì≥r
.
	`˛o£
();

177 
this
.
zooKì≥r
 = 
nuŒ
;

178 
c⁄√˘ed
 = 
Ál£
;

179 
	`ªmoveW©chîs
(
this
.
w©chîs
.
	`keySë
());

180  
åue
;

182 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

183 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

185 
e
);

187  
Ál£
;

188 
	}
}

196 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
nodeP©h
) {

197 i‡(
c⁄√˘ed
) {

198 
åy
 {

200  
zooKì≥r
.
	`gëChûdªn
(
nodeP©h
, 
Ál£
);

201 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

202 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

204 + 
nodeP©h
, 
e
);

207  
nuŒ
;

209 
	}
}

218 
public
 
Såög
 
	$gëD©a
(
Såög
 
nodeP©h
) {

219 i‡(
c⁄√˘ed
) {

220 
åy
 {

221 i‡(
nodeP©h
.
	`Àngth
() == 0) {

222 
nodeP©h
 = "/";

224 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

225 i‡(
s
 !
nuŒ
) {

226  
this
.
í¸y±i⁄M™agî
.
	`de¸y±D©a
(
zooKì≥r


227 .
	`gëD©a
(
nodeP©h
, 
Ál£
, 
s
));

229 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

230 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

231 "Eº‹ occuºed gëtög d©®f‹Çode: " + 
nodeP©h
, 
e
);

234  
nuŒ
;

235 
	}
}

243 
public
 
Såög
 
	$gëNodeChûd
(
Såög
 
nodeP©h
, 
chûdIndex
) {

244 i‡(
c⁄√˘ed
) {

245 
åy
 {

246 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

247 i‡(
s
 !
nuŒ
) {

248  
this
.
zooKì≥r
.
	`gëChûdªn
(
nodeP©h
, 
Ál£
).
	`gë
(

249 
chûdIndex
);

251 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

252 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

253 "Eº‹ occuºedÑërõvög chûd " + 
chûdIndex


254 + " o‡node: " + 
nodeP©h
, 
e
);

257  
nuŒ
;

258 
	}
}

266 
public
 
	$gëNodeIndex
(
Såög
 
nodeP©h
) {

267 i‡(
c⁄√˘ed
) {

268 
ödex
 = 
nodeP©h
.
	`œ°IndexOf
("/");

269 i‡(
ödex
 == -1

270 || (!
nodeP©h
.
	`equÆs
("/"Ë&&ÇodeP©h.
	`ch¨At
(nodePath

271 .
	`Àngth
() - 1) == '/')) {

272 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvalidÇodeÖath: "

273 + 
nodeP©h
);

275 
Såög
 
∑ª¡P©h
 = 
nodeP©h
.
	`sub°rög
(0, 
ödex
);

276 
Såög
 
chûd
 = 
nodeP©h
.
	`sub°rög
(
ödex
 + 1);

277 i‡(
∑ª¡P©h
 !
nuŒ
 &&Ö¨ítP©h.
	`Àngth
() > 0) {

278 
Li°
<
Såög
> 
chûdªn
 = 
this
.
	`gëChûdªn
(
∑ª¡P©h
);

279 i‡(
chûdªn
 !
nuŒ
) {

280  
chûdªn
.
	`ödexOf
(
chûd
);

285 
	}
}

294 
public
 
	gLi°
<
	gM≠
<
	gSåög
, Såög>> 
	$gëACLs
(
Såög
 
nodeP©h
) {

295 
Li°
<
M≠
<
Såög
, Såög>> 
ªtu∫ACLs
 = 
√w
 
AºayLi°
<Map<String, String>>();

296 i‡(
c⁄√˘ed
) {

297 
åy
 {

298 i‡(
nodeP©h
.
	`Àngth
() == 0) {

299 
nodeP©h
 = "/";

301 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

302 i‡(
s
 !
nuŒ
) {

303 
Li°
<
ACL
> 
a˛s
 = 
zooKì≥r
.
	`gëACL
(
nodeP©h
, 
s
);

304 
ACL
 
a˛
 : 
a˛s
) {

305 
M≠
<
Såög
, Såög> 
a˛M≠
 = 
√w
 
LökedHashM≠
<String, String>();

306 
a˛M≠
.
	`put
(
ACL_SCHEME
, 
a˛
.
	`gëId
().
	`gëScheme
());

307 
a˛M≠
.
	`put
(
ACL_ID
, 
a˛
.
	`gëId
().getId());

308 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

309 
≥rms
 = 
a˛
.
	`gëPîms
();

310 
boﬁón
 
addedPîm
 = 
Ál£
;

311 i‡((
≥rms
 & 
Pîms
.
READ
) == Perms.READ) {

312 
sb
.
	`≠≥nd
("Read");

313 
addedPîm
 = 
åue
;

315 i‡(
addedPîm
) {

316 
sb
.
	`≠≥nd
(", ");

318 i‡((
≥rms
 & 
Pîms
.
WRITE
) == Perms.WRITE) {

319 
sb
.
	`≠≥nd
("Write");

320 
addedPîm
 = 
åue
;

322 i‡(
addedPîm
) {

323 
sb
.
	`≠≥nd
(", ");

325 i‡((
≥rms
 & 
Pîms
.
CREATE
) == Perms.CREATE) {

326 
sb
.
	`≠≥nd
("Create");

327 
addedPîm
 = 
åue
;

329 i‡(
addedPîm
) {

330 
sb
.
	`≠≥nd
(", ");

332 i‡((
≥rms
 & 
Pîms
.
DELETE
) == Perms.DELETE) {

333 
sb
.
	`≠≥nd
("Delete");

334 
addedPîm
 = 
åue
;

336 i‡(
addedPîm
) {

337 
sb
.
	`≠≥nd
(", ");

339 i‡((
≥rms
 & 
Pîms
.
ADMIN
) == Perms.ADMIN) {

340 
sb
.
	`≠≥nd
("Admin");

341 
addedPîm
 = 
åue
;

343 
a˛M≠
.
	`put
(
ACL_PERMS
, 
sb
.
	`toSåög
());

344 
ªtu∫ACLs
.
	`add
(
a˛M≠
);

347 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

348 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

349 "Eº‹ occuºedÑërõvög ACL†o‡node: " + 
nodeP©h
,

350 
e
);

351 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

352 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

353 "Eº‹ occuºedÑërõvög ACL†o‡node: " + 
nodeP©h
,

354 
e
);

357  
ªtu∫ACLs
;

358 
	}
}

366 
public
 
	gM≠
<
	gSåög
, Såög> 
	$gëNodeMëa
(
Såög
 
nodeP©h
) {

367 
M≠
<
Såög
, Såög> 
nodeMëa
 = 
√w
 
LökedHashM≠
<String, String>();

368 i‡(
c⁄√˘ed
) {

369 
åy
 {

370 i‡(
nodeP©h
.
	`Àngth
() == 0) {

371 
nodeP©h
 = "/";

373 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

374 i‡(
s
 !
nuŒ
) {

375 
nodeMëa
.
	`put
(
A_VERSION
, 
Såög
.
	`vÆueOf
(
s
.
	`gëAvîsi⁄
()));

376 
nodeMëa
.
	`put
(
C_TIME
, 
Såög
.
	`vÆueOf
(
s
.
	`gëCtime
()));

377 
nodeMëa
.
	`put
(
C_VERSION
, 
Såög
.
	`vÆueOf
(
s
.
	`gëCvîsi⁄
()));

378 
nodeMëa
.
	`put
(
CZXID
, 
Såög
.
	`vÆueOf
(
s
.
	`gëCzxid
()));

379 
nodeMëa


380 .
	`put
(
DATA_LENGTH
, 
Såög
.
	`vÆueOf
(
s
.
	`gëD©aLígth
()));

381 
nodeMëa
.
	`put
(
EPHEMERAL_OWNER
, 
Såög
.
	`vÆueOf
(
s


382 .
	`gëEphemîÆOw√r
()));

383 
nodeMëa
.
	`put
(
M_TIME
, 
Såög
.
	`vÆueOf
(
s
.
	`gëMtime
()));

384 
nodeMëa
.
	`put
(
MZXID
, 
Såög
.
	`vÆueOf
(
s
.
	`gëMzxid
()));

385 
nodeMëa
.
	`put
(
NUM_CHILDREN
, 
Såög
.
	`vÆueOf
(
s


386 .
	`gëNumChûdªn
()));

387 
nodeMëa
.
	`put
(
PZXID
, 
Såög
.
	`vÆueOf
(
s
.
	`gëPzxid
()));

388 
nodeMëa
.
	`put
(
VERSION
, 
Såög
.
	`vÆueOf
(
s
.
	`gëVîsi⁄
()));

390 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

391 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

393 + 
nodeP©h
, 
e
);

396  
nodeMëa
;

397 
	}
}

405 
public
 
	$gëNumChûdªn
(
Såög
 
nodeP©h
) {

406 i‡(
c⁄√˘ed
) {

407 
åy
 {

408 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

409 i‡(
s
 !
nuŒ
) {

410  
s
.
	`gëNumChûdªn
();

412 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

413 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

415 + 
nodeP©h
, 
e
);

419 
	}
}

427 
public
 
boﬁón
 
	$hasChûdªn
(
Såög
 
nodeP©h
) {

428  
	`gëNumChûdªn
(
nodeP©h
) > 0;

429 
	}
}

437 
public
 
boﬁón
 
	$isAŒowsChûdªn
(
Såög
 
nodeP©h
) {

438 i‡(
c⁄√˘ed
) {

439 
åy
 {

440 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

441 i‡(
s
 !
nuŒ
) {

442  
s
.
	`gëEphemîÆOw√r
() == 0;

444 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

445 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

447 + 
nodeP©h
, 
e
);

450  
Ál£
;

451 
	}
}

459 
public
 
	gM≠
<
	gSåög
, Såög> 
	$gëSessi⁄Mëa
() {

460 
M≠
<
Såög
, Såög> 
£ssi⁄Mëa
 = 
√w
 
LökedHashM≠
<String, String>();

461 
åy
 {

462 i‡(
zooKì≥r
 !
nuŒ
) {

464 
£ssi⁄Mëa
.
	`put
(
SESSION_ID
, 
Såög
.
	`vÆueOf
(
zooKì≥r


465 .
	`gëSessi⁄Id
()));

466 
£ssi⁄Mëa
.
	`put
(
SESSION_STATE
, 
Såög
.
	`vÆueOf
(
zooKì≥r


467 .
	`gëSèã
().
	`toSåög
()));

468 
£ssi⁄Mëa
.
	`put
(
CONNECT_STRING
, 
this
.
c⁄√˘Såög
);

469 
£ssi⁄Mëa
.
	`put
(
SESSION_TIMEOUT
, 
Såög


470 .
	`vÆueOf
(
this
.
£ssi⁄Timeout
));

472 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

473 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

474 "Eº‹ occuºedÑërõvög sessi⁄ më®d©a.", 
e
);

476  
£ssi⁄Mëa
;

477 
	}
}

486 
public
 
boﬁón
 
	$¸óãNode
(
Såög
 
∑ª¡
, Såög 
nodeName
) {

487 i‡(
c⁄√˘ed
) {

488 
åy
 {

489 
Såög
[] 
nodeEÀmíts
 = 
nodeName
.
	`•lô
("/");

490 
Såög
 
nodeEÀmít
 : 
nodeEÀmíts
) {

491 
Såög
 
node
 = 
∑ª¡
 + "/" + 
nodeEÀmít
;

492 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
node
, 
Ál£
);

493 i‡(
s
 =
nuŒ
) {

494 
zooKì≥r
.
	`¸óã
(
node
, 
this
.
í¸y±i⁄M™agî


495 .
	`í¸y±D©a
(
nuŒ
), 
Ids
.
OPEN_ACL_UNSAFE
,

496 
Cª©eMode
.
PERSISTENT
);

497 
∑ª¡
 = 
node
;

500  
åue
;

501 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

502 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

503 "Eº‹ occuºed cª©ögÇode: " + 
∑ª¡
 + "/"

504 + 
nodeName
, 
e
);

507  
Ál£
;

508 
	}
}

517 
public
 
boﬁón
 
	$dñëeNode
(
Såög
 
nodeP©h
) {

518 i‡(
c⁄√˘ed
) {

519 
åy
 {

520 
Sèt
 
s
 = 
zooKì≥r
.
	`exi°s
(
nodeP©h
, 
Ál£
);

521 i‡(
s
 !
nuŒ
) {

522 
Li°
<
Såög
> 
chûdªn
 = 
zooKì≥r
.
	`gëChûdªn
(
nodeP©h
,

523 
Ál£
);

524 
Såög
 
chûd
 : 
chûdªn
) {

525 
Såög
 
node
 = 
nodeP©h
 + "/" + 
chûd
;

526 
	`dñëeNode
(
node
);

528 
zooKì≥r
.
	`dñëe
(
nodeP©h
, -1);

530  
åue
;

531 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

532 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

533 "Eº‹ occuºed dñëögÇode: " + 
nodeP©h
, 
e
);

536  
Ál£
;

537 
	}
}

546 
public
 
boﬁón
 
	$£tD©a
(
Såög
 
nodeP©h
, Såög 
d©a
) {

547 i‡(
c⁄√˘ed
) {

548 
åy
 {

549 
zooKì≥r
.
	`£tD©a
(
nodeP©h
, 
this
.
í¸y±i⁄M™agî


550 .
	`í¸y±D©a
(
d©a
), -1);

551  
åue
;

552 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

553 
LoggîFa˘‹y
.
	`gëLoggî
().
	`îr‹
(

554 "Eº‹ occuºed sëtög d©®f‹Çode: " + 
nodeP©h
, 
e
);

557  
Ál£
;

558 
	}
}

566 
public
 
	gPaú
<
	gM≠
<
	gSåög
, 
	gLi°
<Såög>>, M≠<Såög, Såög>> 
	$gëC⁄√˘i⁄Pr›îtõsTem∂©e
() {

567 
M≠
<
Såög
, 
Li°
<Såög>> 
ãm∂©e
 = 
√w
 
LökedHashM≠
<String, List<String>>();

568 
ãm∂©e
.
	`put
(
CONNECT_STRING
, 
Aºays


569 .
	`asLi°
(
√w
 
Såög
[] { 
deÁu…Ho°s
 }));

570 
ãm∂©e
.
	`put
(
SESSION_TIMEOUT
, 
Aºays


571 .
	`asLi°
(
√w
 
Såög
[] { 
deÁu…Timeout
 }));

572 
ãm∂©e
.
	`put
(
DATA_ENCRYPTION_MANAGER
, 
Aºays


573 .
	`asLi°
(
√w
 
Såög
[] { 
deÁu…En¸y±i⁄M™agî
 }));

574 
M≠
<
Såög
, Såög> 
œbñs
 = 
√w
 
LökedHashM≠
<String, String>();

575 
œbñs
.
	`put
(
CONNECT_STRING
, "Connect String");

576 
œbñs
.
	`put
(
SESSION_TIMEOUT
, "Session Timeout");

577 
œbñs
.
	`put
(
DATA_ENCRYPTION_MANAGER
, "Data Encryption Manager");

578  
√w
 
Paú
<
M≠
<
Såög
, 
Li°
<String>>, Map<String, String>>(

579 
ãm∂©e
, 
œbñs
);

580 
	}
}

590 
public
 
addW©chîs
(
CﬁÀ˘i⁄
<
Såög
> 
£À˘edNodes
,

591 
NodeLi°íî
 
nodeLi°íî
) {

594 i‡(
	gc⁄√˘ed
) {

595 
Såög
 
	gnode
 : 
£À˘edNodes
) {

596 i‡(!
w©chîs
.
c⁄èösKey
(
node
)) {

597 
åy
 {

598 
w©chîs
.
put
(
node
, 
√w
 
NodeW©chî
“ode, 
nodeLi°íî
,

599 
zooKì≥r
));

600 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

601 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

603 + 
node
, 
e
);

617 
public
 
ªmoveW©chîs
(
CﬁÀ˘i⁄
<
Såög
> 
£À˘edNodes
) {

620 i‡(
	gc⁄√˘ed
) {

621 
Såög
 
	gnode
 : 
£À˘edNodes
) {

622 i‡(
w©chîs
.
c⁄èösKey
(
node
)) {

623 
NodeW©chî
 
w©chî
 = 
w©chîs
.
ªmove
(
node
);

624 i‡(
	gw©chî
 !
nuŒ
) {

625 
w©chî
.
°›
();

636 
public
 cœs†
	cNodeW©chî
 
im∂emíts
 
	gW©chî
 {

638 
¥iv©e
 
föÆ
 
Såög
 
	gnodeP©h
;

639 
¥iv©e
 
föÆ
 
NodeLi°íî
 
	gnodeLi°íî
;

640 
¥iv©e
 
föÆ
 
ZooKì≥r
 
	gzookì≥r
;

641 
¥iv©e
 
boﬁón
 
	g˛o£d
 = 
Ál£
;

653 
public
 
NodeW©chî
(
Såög
 
nodeP©h
, 
NodeLi°íî
 
nodeLi°íî
,

654 
ZooKì≥r
 
zookì≥r
Ë
throws
 
	gKì≥rEx˚±i⁄
,

655 
	gI¡îru±edEx˚±i⁄
 {

656 
	gthis
.
	gnodeP©h
 = 
nodeP©h
;

657 
	gthis
.
	gnodeLi°íî
 = 
nodeLi°íî
;

658 
	gthis
.
	gzookì≥r
 = 
zookì≥r
;

659 
Sèt
 
	gs
 = 
zooKì≥r
.
exi°s
(
nodeP©h
, 
this
);

660 i‡(
	gs
 !
nuŒ
) {

661 
zookì≥r
.
gëChûdªn
(
nodeP©h
, 
this
);

665 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

666 i‡(!
	g˛o£d
) {

667 
	gåy
 {

668 i‡(
	gevít
.
gëTy≥
(Ë!
EvítTy≥
.
NodeDñëed
) {

670 
Sèt
 
s
 = 
zooKì≥r
.
exi°s
(
nodeP©h
, 
this
);

671 i‡(
	gs
 !
nuŒ
) {

672 
zookì≥r
.
gëChûdªn
(
nodeP©h
, 
this
);

675 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

676 
	gLoggîFa˘‹y
.
gëLoggî
().
îr‹
(

678 + 
nodeP©h
, 
e
);

680 
	gnodeLi°íî
.
¥o˚ssEvít
(
evít
.
gëP©h
(),Évít.
gëTy≥
()

681 .
«me
(), 
nuŒ
);

688 
public
 
°›
() {

689 
	gthis
.
	g˛o£d
 = 
åue
;

700 
public
 
	gLi°
<
	gSåög
> 
	$lﬂdNodeVõwîsFûe
(
Fûe
 
£À˘edFûe
)

701 
throws
 
IOEx˚±i⁄
 {

702 
Li°
<
Såög
> 
ªsu…
 = 
√w
 
AºayLi°
<String>();

703 i‡(
deÁu…NodeVõwîsFûe
.
	`exi°s
()) {

704 
FûeRódî
 
ªadî
 = 
√w
 
	`FûeRódî
(
£À˘edFûe
);

705 
åy
 {

706 
Buf„ªdRódî
 
buff
 = 
√w
 
	`Buf„ªdRódî
(
ªadî
);

707 
åy
 {

708 
buff
.
	`ªady
()) {

709 
Såög
 
löe
 = 
buff
.
	`ªadLöe
();

710 i‡(
löe
 !
nuŒ
 &&Üöe.
	`Àngth
() > 0) {

711 
ªsu…
.
	`add
(
löe
);

714 } 
föÆly
 {

715 
buff
.
	`˛o£
();

717 } 
föÆly
 {

718 
ªadî
.
	`˛o£
();

721  
ªsu…
;

722 
	}
}

724 
¥iv©e
 
	$lﬂdDeÁu…C⁄√˘i⁄Fûe
(Ë
throws
 
IOEx˚±i⁄
 {

725 i‡(
deÁu…C⁄√˘i⁄Fûe
.
	`exi°s
()) {

726 
Pr›îtõs
 
¥›s
 = 
√w
 
	`Pr›îtõs
();

728 
FûeRódî
 
ªadî
 = 
√w
 
	`FûeRódî
(
deÁu…C⁄√˘i⁄Fûe
);

729 
åy
 {

730 
¥›s
.
	`lﬂd
(
ªadî
);

731 } 
föÆly
 {

732 
ªadî
.
	`˛o£
();

734 
deÁu…En¸y±i⁄M™agî
 = 
¥›s


735 .
	`gëPr›îty
(
DATA_ENCRYPTION_MANAGER
Ë=
nuŒ
 ? "org.apache.zookeeper.inspector.encryption.BasicDataEncryptionManager"

736 : 
¥›s
.
	`gëPr›îty
(
DATA_ENCRYPTION_MANAGER
);

737 
deÁu…Timeout
 = 
¥›s
.
	`gëPr›îty
(
SESSION_TIMEOUT
Ë=
nuŒ
 ? "5000"

738 : 
¥›s
.
	`gëPr›îty
(
SESSION_TIMEOUT
);

739 
deÁu…Ho°s
 = 
¥›s
.
	`gëPr›îty
(
CONNECT_STRING
Ë=
nuŒ
 ? "localhost:2181"

740 : 
¥›s
.
	`gëPr›îty
(
CONNECT_STRING
);

742 
deÁu…En¸y±i⁄M™agî
 = "org.apache.zookeeper.inspector.encryption.BasicDataEncryptionManager";

743 
deÁu…Timeout
 = "5000";

744 
deÁu…Ho°s
 = "localhost:2181";

746 
	}
}

754 
public
 
	$ßveDeÁu…C⁄√˘i⁄Fûe
(
Pr›îtõs
 
¥›s
Ë
throws
 
IOEx˚±i⁄
 {

755 
Fûe
 
deÁu…Dú
 = 
deÁu…C⁄√˘i⁄Fûe
.
	`gëP¨ítFûe
();

756 i‡(!
deÁu…Dú
.
	`exi°s
()) {

757 i‡(!
deÁu…Dú
.
	`mkdús
()) {

758 
throw
 
√w
 
	`IOEx˚±i⁄
(

760 + 
deÁu…Dú
.
	`gëAbsﬁuãP©h
());

763 i‡(!
deÁu…C⁄√˘i⁄Fûe
.
	`exi°s
()) {

764 i‡(!
deÁu…C⁄√˘i⁄Fûe
.
	`¸óãNewFûe
()) {

765 
throw
 
√w
 
	`IOEx˚±i⁄
(

767 + 
deÁu…C⁄√˘i⁄Fûe
.
	`gëAbsﬁuãP©h
());

770 
FûeWrôî
 
wrôî
 = 
√w
 
	`FûeWrôî
(
deÁu…C⁄√˘i⁄Fûe
);

771 
åy
 {

772 
¥›s
.
	`°‹e
(
wrôî
, "Default connection for ZooInspector");

773 } 
föÆly
 {

774 
wrôî
.
	`˛o£
();

776 
	}
}

784 
public
 
ßveNodeVõwîsFûe
(
Fûe
 
£À˘edFûe
,

785 
Li°
<
Såög
> 
nodeVõwîsCœssNames
Ë
throws
 
	gIOEx˚±i⁄
 {

786 i‡(!
	g£À˘edFûe
.
exi°s
()) {

787 i‡(!
	g£À˘edFûe
.
¸óãNewFûe
()) {

788 
throw
 
√w
 
IOEx˚±i⁄
(

790 + 
£À˘edFûe
.
gëAbsﬁuãP©h
());

793 
FûeWrôî
 
	gwrôî
 = 
√w
 FûeWrôî(
£À˘edFûe
);

794 
	gåy
 {

795 
Buf„ªdWrôî
 
	gbuff
 = 
√w
 Buf„ªdWrôî(
wrôî
);

796 
	gåy
 {

797 
Såög
 
	gnodeVõwîsCœssName
 : 
nodeVõwîsCœssNames
) {

798 
buff
.
≠≥nd
(
nodeVõwîsCœssName
);

799 
	gbuff
.
≠≥nd
("\n");

801 } 
	gföÆly
 {

802 
	gbuff
.
Êush
();

803 
	gbuff
.
˛o£
();

805 } 
	gföÆly
 {

806 
	gwrôî
.
˛o£
();

816 
public
 
£tDeÁu…NodeVõwîC⁄figuøti⁄
(

817 
Li°
<
Såög
> 
nodeVõwîsCœssNames
Ë
throws
 
	gIOEx˚±i⁄
 {

818 
Fûe
 
	gdeÁu…Dú
 = 
deÁu…NodeVõwîsFûe
.
gëP¨ítFûe
();

819 i‡(!
	gdeÁu…Dú
.
exi°s
()) {

820 i‡(!
	gdeÁu…Dú
.
mkdús
()) {

821 
throw
 
√w
 
IOEx˚±i⁄
(

823 + 
deÁu…Dú
.
gëAbsﬁuãP©h
());

826 
ßveNodeVõwîsFûe
(
deÁu…NodeVõwîsFûe
, 
nodeVõwîsCœssNames
);

829 
public
 
	gLi°
<
	gSåög
> 
	$gëDeÁu…NodeVõwîC⁄figuøti⁄
(Ë
throws
 
IOEx˚±i⁄
 {

830  
	`lﬂdNodeVõwîsFûe
(
deÁu…NodeVõwîsFûe
);

831 
	}
}

839 
public
 
Pr›îtõs
 
	$gëLa°C⁄√˘i⁄Pr›s
() {

840  
this
.
œ°C⁄√˘i⁄Pr›s
;

841 
	}
}

849 
public
 
	$£tLa°C⁄√˘i⁄Pr›s
(
Pr›îtõs
 
c⁄√˘i⁄Pr›s
) {

850 
this
.
œ°C⁄√˘i⁄Pr›s
 = 
c⁄√˘i⁄Pr›s
;

851 
	}
}

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorNodeManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

24 
public
 
öãrÁ˚
 
ZooIn•e˘‹NodeM™agî
 
exãnds
 
	gZooIn•e˘‹RódO∆yM™agî
 {

32 
public
 
boﬁón
 
£tD©a
(
Såög
 
nodeP©h
, Såög 
d©a
);

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorNodeTreeManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

24 
public
 
öãrÁ˚
 
ZooIn•e˘‹NodeTªeM™agî
 
exãnds


25 
	gZooIn•e˘‹RódO∆yM™agî
 {

34 
public
 
ab°ø˘
 
boﬁón
 
¸óãNode
(
Såög
 
∑ª¡
, Såög 
nodeName
);

41 
public
 
ab°ø˘
 
boﬁón
 
dñëeNode
(
Såög
 
nodeP©h
);

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorReadOnlyManager.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gm™agî
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

27 
public
 
öãrÁ˚
 
	gZooIn•e˘‹RódO∆yM™agî
 {

34 
public
 
ab°ø˘
 
Såög
 
gëD©a
(Såög 
nodeP©h
);

41 
public
 
ab°ø˘
 
	gM≠
<
	gSåög
, Såög> 
gëNodeMëa
(
Såög
 
nodeP©h
);

48 
public
 
ab°ø˘
 
	gLi°
<
	gM≠
<
	gSåög
, Såög>> 
gëACLs
(
Såög
 
nodeP©h
);

53 
public
 
ab°ø˘
 
	gM≠
<
	gSåög
, Såög> 
gëSessi⁄Mëa
();

60 
public
 
ab°ø˘
 
boﬁón
 
hasChûdªn
(
Såög
 
nodeP©h
);

67 
public
 
ab°ø˘
 
gëNodeIndex
(
Såög
 
nodeP©h
);

74 
public
 
ab°ø˘
 
gëNumChûdªn
(
Såög
 
nodeP©h
);

83 
public
 
ab°ø˘
 
Såög
 
gëNodeChûd
(Såög 
nodeP©h
, 
chûdIndex
);

90 
public
 
ab°ø˘
 
boﬁón
 
isAŒowsChûdªn
(
Såög
 
nodeP©h
);

97 
public
 
ab°ø˘
 
	gLi°
<
	gSåög
> 
gëChûdªn
(
Såög
 
nodeP©h
);

	@/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/retry/ZooKeeperRetry.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªåy
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gö•e˘‹
.
	gloggî
.
	gLoggîFa˘‹y
;

36 
public
 cœs†
	cZooKì≥rRëry
 
exãnds
 
	mZooKì≥r
 {

38 
¥iv©e
 
boﬁón
 
	m˛o£d
 = 
Ál£
;

39 
¥iv©e
 
föÆ
 
W©chî
 
	mw©chî
;

40 
¥iv©e
 
	mlimô
 = -1;

48 
public
 
	$ZooKì≥rRëry
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
,

49 
W©chî
 
w©chî
Ë
throws
 
IOEx˚±i⁄
 {

50 
	`su≥r
(
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
w©chî
);

51 
this
.
w©chî
 = watcher;

62 
public
 
	$ZooKì≥rRëry
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
,

63 
W©chî
 
w©chî
, 
£ssi⁄Id
, 
byã
[] 
£ssi⁄Passwd
)

64 
throws
 
IOEx˚±i⁄
 {

65 
	`su≥r
(
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
w©chî
, 
£ssi⁄Id
, 
£ssi⁄Passwd
);

66 
this
.
w©chî
 = watcher;

67 
	}
}

69 @
Ovîride


70 
public
 
synchr⁄ized
 
	$˛o£
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

71 
this
.
˛o£d
 = 
åue
;

72 
su≥r
.
	`˛o£
();

73 
	}
}

75 @
Ovîride


76 
public
 
Såög
 
¸óã
(Såög 
∑th
, 
byã
[] 
d©a
, 
Li°
<
ACL
> 
a˛
,

77 
Cª©eMode
 
¸óãMode
Ë
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

78 
	gcou¡
 = 0;

80 
	gåy
 {

81  
	gsu≥r
.
¸óã
(
∑th
, 
d©a
, 
a˛
, 
¸óãMode
);

82 } 
ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

83 
	gLoggîFa˘‹y
.
gëLoggî
().
w¨n
(

85 i‡(
exi°s
(
∑th
, 
Ál£
Ë!
nuŒ
) {

86  
∑th
;

88 } 
ˇtch
 (
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
e
) {

89  
	g∑th
;

91 } !
	g˛o£d
 && (
	glimô
 =-1 || 
cou¡
++ < 
limô
));

92  
	gnuŒ
;

95 @
Ovîride


96 
public
 
	$dñëe
(
Såög
 
∑th
, 
vîsi⁄
Ë
throws
 
I¡îru±edEx˚±i⁄
,

97 
Kì≥rEx˚±i⁄
 {

98 
cou¡
 = 0;

100 
åy
 {

101 
su≥r
.
	`dñëe
(
∑th
, 
vîsi⁄
);

102 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

103 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

105 i‡(
	`exi°s
(
∑th
, 
Ál£
Ë=
nuŒ
) {

108 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

111 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

112 
	}
}

114 @
Ovîride


115 
public
 
Sèt
 
	$exi°s
(
Såög
 
∑th
, 
boﬁón
 
w©ch
Ë
throws
 
Kì≥rEx˚±i⁄
,

116 
I¡îru±edEx˚±i⁄
 {

117 
cou¡
 = 0;

119 
åy
 {

120  
su≥r
.
	`exi°s
(
∑th
, 
w©ch
 ? 
w©chî
 : 
nuŒ
);

121 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

122 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

125 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

126  
nuŒ
;

127 
	}
}

129 @
Ovîride


130 
public
 
Sèt
 
	$exi°s
(
Såög
 
∑th
, 
W©chî
 
w©chî
Ë
throws
 
Kì≥rEx˚±i⁄
,

131 
I¡îru±edEx˚±i⁄
 {

132 
cou¡
 = 0;

134 
åy
 {

135  
su≥r
.
	`exi°s
(
∑th
, 
w©chî
);

136 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

137 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

140 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

141  
nuŒ
;

142 
	}
}

144 @
Ovîride


145 
public
 
	gLi°
<
	gACL
> 
	$gëACL
(
Såög
 
∑th
, 
Sèt
 
°©
Ë
throws
 
Kì≥rEx˚±i⁄
,

146 
I¡îru±edEx˚±i⁄
 {

147 
cou¡
 = 0;

149 
åy
 {

150  
su≥r
.
	`gëACL
(
∑th
, 
°©
);

151 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

152 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

155 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

156  
nuŒ
;

157 
	}
}

159 @
Ovîride


160 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
boﬁón
 
w©ch
)

161 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

162 
cou¡
 = 0;

164 
åy
 {

165  
su≥r
.
	`gëChûdªn
(
∑th
, 
w©ch
 ? 
w©chî
 : 
nuŒ
);

166 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

167 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

170 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

171  
√w
 
AºayLi°
<
Såög
>();

172 
	}
}

174 @
Ovîride


175 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
W©chî
 
w©chî
)

176 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

177 
cou¡
 = 0;

179 
åy
 {

180  
su≥r
.
	`gëChûdªn
(
∑th
, 
w©chî
);

181 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

182 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

185 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

186  
√w
 
AºayLi°
<
Såög
>();

187 
	}
}

189 @
Ovîride


190 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
Sèt
 
°©
)

191 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

192 
cou¡
 = 0;

194 
åy
 {

195  
su≥r
.
	`gëD©a
(
∑th
, 
w©ch
 ? 
w©chî
 : 
nuŒ
, 
°©
);

196 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

197 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

200 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

201  
nuŒ
;

202 
	}
}

204 @
Ovîride


205 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
W©chî
 
w©chî
, 
Sèt
 
°©
)

206 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

207 
cou¡
 = 0;

209 
åy
 {

210  
su≥r
.
	`gëD©a
(
∑th
, 
w©chî
, 
°©
);

211 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

212 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

215 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

216  
nuŒ
;

217 
	}
}

219 @
Ovîride


220 
public
 
Sèt
 
£tACL
(
Såög
 
∑th
, 
Li°
<
ACL
> 
a˛
, 
vîsi⁄
)

221 
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

222 
	gcou¡
 = 0;

224 
	gåy
 {

225  
	gsu≥r
.
£tACL
(
∑th
, 
a˛
, 
vîsi⁄
);

226 } 
ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

227 
	gLoggîFa˘‹y
.
gëLoggî
().
w¨n
(

229 
Sèt
 
	gs
 = 
exi°s
(
∑th
, 
Ál£
);

230 i‡(
	gs
 !
nuŒ
) {

231 i‡(
gëACL
(
∑th
, 
s
).
equÆs
(
a˛
)) {

232  
s
;

235  
	gnuŒ
;

238 } !
	g˛o£d
 && (
	glimô
 =-1 || 
cou¡
++ < 
limô
));

239  
	gnuŒ
;

242 @
Ovîride


243 
public
 
Sèt
 
	$£tD©a
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
vîsi⁄
)

244 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

245 
cou¡
 = 0;

247 
åy
 {

248  
su≥r
.
	`£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
);

249 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

250 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

252 
Sèt
 
s
 = 
	`exi°s
(
∑th
, 
Ál£
);

253 i‡(
s
 !
nuŒ
) {

254 i‡(
	`gëD©a
(
∑th
, 
Ál£
, 
s
Ë=
d©a
) {

255  
s
;

258  
nuŒ
;

261 } !
˛o£d
 && (
limô
 =-1 || 
cou¡
++ <Üimit));

262  
nuŒ
;

263 
	}
}

268 
public
 
	$£tRëryLimô
(
limô
) {

269 
this
.
limô
 =Üimit;

270 
	}
}

275 
public
 
boﬁón
 
	$ã°C⁄√˘i⁄
() {

276 
cou¡
 = 0;

278 
åy
 {

279  
su≥r
.
	`exi°s
("/", 
nuŒ
) !=Çull;

280 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

281 
LoggîFa˘‹y
.
	`gëLoggî
().
	`w¨n
(

284 } 
cou¡
++ < 5);

285  
Ál£
;

286 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/ACL.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cACL
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m≥rms
;

25 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Id
 
	mid
;

26 
public
 
	$ACL
() {

28 
public
 
	$ACL
(

29 
≥rms
,

30 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
 
id
) {

31 
this
.
≥rms
=perms;

32 
this
.
id
=id;

33 
	}
}

34 
public
 
	$gëPîms
() {

35  
≥rms
;

36 
	}
}

37 
public
 
	$£tPîms
(
m_
) {

38 
≥rms
=
m_
;

39 
	}
}

40 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Id
 
	$gëId
() {

41  
id
;

42 
	}
}

43 
public
 
	$£tId
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
 
m_
) {

44 
id
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeI¡
(
≥rms
,"perms");

49 
a_
.
	`wrôeRec‹d
(
id
,"id");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
≥rms
=
a_
.
	`ªadI¡
("perms");

55 
id

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Id
();

56 
a_
.
	`ªadRec‹d
(
id
,"id");

57 
a_
.
	`ídRec‹d
(
èg
);

58 
	}
}

59 
public
 
Såög
 
	$toSåög
() {

60 
åy
 {

61 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

62 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

63 
CsvOuçutArchive
 
a_
 =

64 
√w
 
	`CsvOuçutArchive
(
s
);

65 
a_
.
	`°¨tRec‹d
(
this
,"");

66 
a_
.
	`wrôeI¡
(
≥rms
,"perms");

67 
a_
.
	`wrôeRec‹d
(
id
,"id");

68 
a_
.
	`ídRec‹d
(
this
,"");

69  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

70 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

71 
ex
.
	`¥ötSèckTø˚
();

74 
	}
}

75 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

76 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

77 
	`£rülize
(
¨chive
, "");

78 
	}
}

79 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

80 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

81 
	`de£rülize
(
¨chive
, "");

82 
	}
}

83 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

84 i‡(!(
≥î_
 
ö°™˚of
 
ACL
)) {

85 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

87 
ACL
 
≥î
 = (ACLË
≥î_
;

88 
ªt
 = 0;

89 
ªt
 = (
≥rms
 =
≥î
.perms)? 0 :((perms<peer.perms)?-1:1);

90 i‡(
ªt
 != 0) Ñet;

91 
ªt
 = 
id
.
	`com∑ªTo
(
≥î
.id);

92 i‡(
ªt
 != 0) Ñet;

93  
ªt
;

94 
	}
}

95 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

96 i‡(!(
≥î_
 
ö°™˚of
 
ACL
)) {

97  
Ál£
;

99 i‡(
≥î_
 =
this
) {

100  
åue
;

102 
ACL
 
≥î
 = (ACLË
≥î_
;

103 
boﬁón
 
ªt
 = 
Ál£
;

104 
ªt
 = (
≥rms
==
≥î
.perms);

105 i‡(!
ªt
) Ñet;

106 
ªt
 = 
id
.
	`equÆs
(
≥î
.id);

107 i‡(!
ªt
) Ñet;

108  
ªt
;

109 
	}
}

110 
public
 
	$hashCode
() {

111 
ªsu…
 = 17;

112 
ªt
;

113 
ªt
 = ()
≥rms
;

114 
ªsu…
 = 37*ªsu… + 
ªt
;

115 
ªt
 = 
id
.
	`hashCode
();

116 
ªsu…
 = 37*ªsu… + 
ªt
;

117  
ªsu…
;

118 
	}
}

119 
public
 
Såög
 
	$sig«tuª
() {

121 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/Id.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cId
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	mscheme
;

25 
¥iv©e
 
Såög
 
	mid
;

26 
public
 
	$Id
() {

28 
public
 
	$Id
(

29 
Såög
 
scheme
,

30 
Såög
 
id
) {

31 
this
.
scheme
=scheme;

32 
this
.
id
=id;

33 
	}
}

34 
public
 
Såög
 
	$gëScheme
() {

35  
scheme
;

36 
	}
}

37 
public
 
	$£tScheme
(
Såög
 
m_
) {

38 
scheme
=
m_
;

39 
	}
}

40 
public
 
Såög
 
	$gëId
() {

41  
id
;

42 
	}
}

43 
public
 
	$£tId
(
Såög
 
m_
) {

44 
id
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
scheme
,"scheme");

49 
a_
.
	`wrôeSåög
(
id
,"id");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
scheme
=
a_
.
	`ªadSåög
("scheme");

55 
id
=
a_
.
	`ªadSåög
("id");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
scheme
,"scheme");

66 
a_
.
	`wrôeSåög
(
id
,"id");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
Id
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
Id
 
≥î
 = (IdË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
scheme
.
	`com∑ªTo
(
≥î
.scheme);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = 
id
.
	`com∑ªTo
(
≥î
.id);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
Id
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
Id
 
≥î
 = (IdË
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
scheme
.
	`equÆs
(
≥î
.scheme);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = 
id
.
	`equÆs
(
≥î
.id);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
scheme
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = 
id
.
	`hashCode
();

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/Stat.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSèt
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mczxid
;

25 
¥iv©e
 
	mmzxid
;

26 
¥iv©e
 
	m˘ime
;

27 
¥iv©e
 
	mmtime
;

28 
¥iv©e
 
	mvîsi⁄
;

29 
¥iv©e
 
	mcvîsi⁄
;

30 
¥iv©e
 
	mavîsi⁄
;

31 
¥iv©e
 
	mïhemîÆOw√r
;

32 
¥iv©e
 
	md©aLígth
;

33 
¥iv©e
 
	mnumChûdªn
;

34 
¥iv©e
 
	mpzxid
;

35 
public
 
	$Sèt
() {

37 
public
 
	$Sèt
(

38 
czxid
,

39 
mzxid
,

40 
˘ime
,

41 
mtime
,

42 
vîsi⁄
,

43 
cvîsi⁄
,

44 
avîsi⁄
,

45 
ïhemîÆOw√r
,

46 
d©aLígth
,

47 
numChûdªn
,

48 
pzxid
) {

49 
this
.
czxid
=czxid;

50 
this
.
mzxid
=mzxid;

51 
this
.
˘ime
=ctime;

52 
this
.
mtime
=mtime;

53 
this
.
vîsi⁄
=version;

54 
this
.
cvîsi⁄
=cversion;

55 
this
.
avîsi⁄
=aversion;

56 
this
.
ïhemîÆOw√r
=ephemeralOwner;

57 
this
.
d©aLígth
=dataLength;

58 
this
.
numChûdªn
=numChildren;

59 
this
.
pzxid
=pzxid;

60 
	}
}

61 
public
 
	$gëCzxid
() {

62  
czxid
;

63 
	}
}

64 
public
 
	$£tCzxid
(
m_
) {

65 
czxid
=
m_
;

66 
	}
}

67 
public
 
	$gëMzxid
() {

68  
mzxid
;

69 
	}
}

70 
public
 
	$£tMzxid
(
m_
) {

71 
mzxid
=
m_
;

72 
	}
}

73 
public
 
	$gëCtime
() {

74  
˘ime
;

75 
	}
}

76 
public
 
	$£tCtime
(
m_
) {

77 
˘ime
=
m_
;

78 
	}
}

79 
public
 
	$gëMtime
() {

80  
mtime
;

81 
	}
}

82 
public
 
	$£tMtime
(
m_
) {

83 
mtime
=
m_
;

84 
	}
}

85 
public
 
	$gëVîsi⁄
() {

86  
vîsi⁄
;

87 
	}
}

88 
public
 
	$£tVîsi⁄
(
m_
) {

89 
vîsi⁄
=
m_
;

90 
	}
}

91 
public
 
	$gëCvîsi⁄
() {

92  
cvîsi⁄
;

93 
	}
}

94 
public
 
	$£tCvîsi⁄
(
m_
) {

95 
cvîsi⁄
=
m_
;

96 
	}
}

97 
public
 
	$gëAvîsi⁄
() {

98  
avîsi⁄
;

99 
	}
}

100 
public
 
	$£tAvîsi⁄
(
m_
) {

101 
avîsi⁄
=
m_
;

102 
	}
}

103 
public
 
	$gëEphemîÆOw√r
() {

104  
ïhemîÆOw√r
;

105 
	}
}

106 
public
 
	$£tEphemîÆOw√r
(
m_
) {

107 
ïhemîÆOw√r
=
m_
;

108 
	}
}

109 
public
 
	$gëD©aLígth
() {

110  
d©aLígth
;

111 
	}
}

112 
public
 
	$£tD©aLígth
(
m_
) {

113 
d©aLígth
=
m_
;

114 
	}
}

115 
public
 
	$gëNumChûdªn
() {

116  
numChûdªn
;

117 
	}
}

118 
public
 
	$£tNumChûdªn
(
m_
) {

119 
numChûdªn
=
m_
;

120 
	}
}

121 
public
 
	$gëPzxid
() {

122  
pzxid
;

123 
	}
}

124 
public
 
	$£tPzxid
(
m_
) {

125 
pzxid
=
m_
;

126 
	}
}

127 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

128 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

129 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

130 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

131 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

132 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

133 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

134 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

135 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

136 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

137 
a_
.
	`wrôeI¡
(
d©aLígth
,"dataLength");

138 
a_
.
	`wrôeI¡
(
numChûdªn
,"numChildren");

139 
a_
.
	`wrôeL⁄g
(
pzxid
,"pzxid");

140 
a_
.
	`ídRec‹d
(
this
,
èg
);

141 
	}
}

142 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

143 
a_
.
	`°¨tRec‹d
(
èg
);

144 
czxid
=
a_
.
	`ªadL⁄g
("czxid");

145 
mzxid
=
a_
.
	`ªadL⁄g
("mzxid");

146 
˘ime
=
a_
.
	`ªadL⁄g
("ctime");

147 
mtime
=
a_
.
	`ªadL⁄g
("mtime");

148 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

149 
cvîsi⁄
=
a_
.
	`ªadI¡
("cversion");

150 
avîsi⁄
=
a_
.
	`ªadI¡
("aversion");

151 
ïhemîÆOw√r
=
a_
.
	`ªadL⁄g
("ephemeralOwner");

152 
d©aLígth
=
a_
.
	`ªadI¡
("dataLength");

153 
numChûdªn
=
a_
.
	`ªadI¡
("numChildren");

154 
pzxid
=
a_
.
	`ªadL⁄g
("pzxid");

155 
a_
.
	`ídRec‹d
(
èg
);

156 
	}
}

157 
public
 
Såög
 
	$toSåög
() {

158 
åy
 {

159 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

160 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

161 
CsvOuçutArchive
 
a_
 =

162 
√w
 
	`CsvOuçutArchive
(
s
);

163 
a_
.
	`°¨tRec‹d
(
this
,"");

164 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

165 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

166 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

167 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

168 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

169 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

170 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

171 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

172 
a_
.
	`wrôeI¡
(
d©aLígth
,"dataLength");

173 
a_
.
	`wrôeI¡
(
numChûdªn
,"numChildren");

174 
a_
.
	`wrôeL⁄g
(
pzxid
,"pzxid");

175 
a_
.
	`ídRec‹d
(
this
,"");

176  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

177 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

178 
ex
.
	`¥ötSèckTø˚
();

181 
	}
}

182 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

183 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

184 
	`£rülize
(
¨chive
, "");

185 
	}
}

186 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

187 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

188 
	`de£rülize
(
¨chive
, "");

189 
	}
}

190 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

191 i‡(!(
≥î_
 
ö°™˚of
 
Sèt
)) {

192 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

194 
Sèt
 
≥î
 = (SètË
≥î_
;

195 
ªt
 = 0;

196 
ªt
 = (
czxid
 =
≥î
.czxid)? 0 :((czxid<peer.czxid)?-1:1);

197 i‡(
ªt
 != 0) Ñet;

198 
ªt
 = (
mzxid
 =
≥î
.mzxid)? 0 :((mzxid<peer.mzxid)?-1:1);

199 i‡(
ªt
 != 0) Ñet;

200 
ªt
 = (
˘ime
 =
≥î
.ctime)? 0 :((ctime<peer.ctime)?-1:1);

201 i‡(
ªt
 != 0) Ñet;

202 
ªt
 = (
mtime
 =
≥î
.mtime)? 0 :((mtime<peer.mtime)?-1:1);

203 i‡(
ªt
 != 0) Ñet;

204 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

205 i‡(
ªt
 != 0) Ñet;

206 
ªt
 = (
cvîsi⁄
 =
≥î
.cversion)? 0 :((cversion<peer.cversion)?-1:1);

207 i‡(
ªt
 != 0) Ñet;

208 
ªt
 = (
avîsi⁄
 =
≥î
.aversion)? 0 :((aversion<peer.aversion)?-1:1);

209 i‡(
ªt
 != 0) Ñet;

210 
ªt
 = (
ïhemîÆOw√r
 =
≥î
.ephemeralOwner)? 0 :((ephemeralOwner<peer.ephemeralOwner)?-1:1);

211 i‡(
ªt
 != 0) Ñet;

212 
ªt
 = (
d©aLígth
 =
≥î
.dataLength)? 0 :((dataLength<peer.dataLength)?-1:1);

213 i‡(
ªt
 != 0) Ñet;

214 
ªt
 = (
numChûdªn
 =
≥î
.numChildren)? 0 :((numChildren<peer.numChildren)?-1:1);

215 i‡(
ªt
 != 0) Ñet;

216 
ªt
 = (
pzxid
 =
≥î
.pzxid)? 0 :((pzxid<peer.pzxid)?-1:1);

217 i‡(
ªt
 != 0) Ñet;

218  
ªt
;

219 
	}
}

220 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

221 i‡(!(
≥î_
 
ö°™˚of
 
Sèt
)) {

222  
Ál£
;

224 i‡(
≥î_
 =
this
) {

225  
åue
;

227 
Sèt
 
≥î
 = (SètË
≥î_
;

228 
boﬁón
 
ªt
 = 
Ál£
;

229 
ªt
 = (
czxid
==
≥î
.czxid);

230 i‡(!
ªt
) Ñet;

231 
ªt
 = (
mzxid
==
≥î
.mzxid);

232 i‡(!
ªt
) Ñet;

233 
ªt
 = (
˘ime
==
≥î
.ctime);

234 i‡(!
ªt
) Ñet;

235 
ªt
 = (
mtime
==
≥î
.mtime);

236 i‡(!
ªt
) Ñet;

237 
ªt
 = (
vîsi⁄
==
≥î
.version);

238 i‡(!
ªt
) Ñet;

239 
ªt
 = (
cvîsi⁄
==
≥î
.cversion);

240 i‡(!
ªt
) Ñet;

241 
ªt
 = (
avîsi⁄
==
≥î
.aversion);

242 i‡(!
ªt
) Ñet;

243 
ªt
 = (
ïhemîÆOw√r
==
≥î
.ephemeralOwner);

244 i‡(!
ªt
) Ñet;

245 
ªt
 = (
d©aLígth
==
≥î
.dataLength);

246 i‡(!
ªt
) Ñet;

247 
ªt
 = (
numChûdªn
==
≥î
.numChildren);

248 i‡(!
ªt
) Ñet;

249 
ªt
 = (
pzxid
==
≥î
.pzxid);

250 i‡(!
ªt
) Ñet;

251  
ªt
;

252 
	}
}

253 
public
 
	$hashCode
() {

254 
ªsu…
 = 17;

255 
ªt
;

256 
ªt
 = (Ë(
czxid
^(czxid>>>32));

257 
ªsu…
 = 37*ªsu… + 
ªt
;

258 
ªt
 = (Ë(
mzxid
^(mzxid>>>32));

259 
ªsu…
 = 37*ªsu… + 
ªt
;

260 
ªt
 = (Ë(
˘ime
^(ctime>>>32));

261 
ªsu…
 = 37*ªsu… + 
ªt
;

262 
ªt
 = (Ë(
mtime
^(mtime>>>32));

263 
ªsu…
 = 37*ªsu… + 
ªt
;

264 
ªt
 = ()
vîsi⁄
;

265 
ªsu…
 = 37*ªsu… + 
ªt
;

266 
ªt
 = ()
cvîsi⁄
;

267 
ªsu…
 = 37*ªsu… + 
ªt
;

268 
ªt
 = ()
avîsi⁄
;

269 
ªsu…
 = 37*ªsu… + 
ªt
;

270 
ªt
 = (Ë(
ïhemîÆOw√r
^(ephemeralOwner>>>32));

271 
ªsu…
 = 37*ªsu… + 
ªt
;

272 
ªt
 = ()
d©aLígth
;

273 
ªsu…
 = 37*ªsu… + 
ªt
;

274 
ªt
 = ()
numChûdªn
;

275 
ªsu…
 = 37*ªsu… + 
ªt
;

276 
ªt
 = (Ë(
pzxid
^(pzxid>>>32));

277 
ªsu…
 = 37*ªsu… + 
ªt
;

278  
ªsu…
;

279 
	}
}

280 
public
 
Såög
 
	$sig«tuª
() {

282 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/StatPersisted.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSètPîsi°ed
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mczxid
;

25 
¥iv©e
 
	mmzxid
;

26 
¥iv©e
 
	m˘ime
;

27 
¥iv©e
 
	mmtime
;

28 
¥iv©e
 
	mvîsi⁄
;

29 
¥iv©e
 
	mcvîsi⁄
;

30 
¥iv©e
 
	mavîsi⁄
;

31 
¥iv©e
 
	mïhemîÆOw√r
;

32 
¥iv©e
 
	mpzxid
;

33 
public
 
	$SètPîsi°ed
() {

35 
public
 
	$SètPîsi°ed
(

36 
czxid
,

37 
mzxid
,

38 
˘ime
,

39 
mtime
,

40 
vîsi⁄
,

41 
cvîsi⁄
,

42 
avîsi⁄
,

43 
ïhemîÆOw√r
,

44 
pzxid
) {

45 
this
.
czxid
=czxid;

46 
this
.
mzxid
=mzxid;

47 
this
.
˘ime
=ctime;

48 
this
.
mtime
=mtime;

49 
this
.
vîsi⁄
=version;

50 
this
.
cvîsi⁄
=cversion;

51 
this
.
avîsi⁄
=aversion;

52 
this
.
ïhemîÆOw√r
=ephemeralOwner;

53 
this
.
pzxid
=pzxid;

54 
	}
}

55 
public
 
	$gëCzxid
() {

56  
czxid
;

57 
	}
}

58 
public
 
	$£tCzxid
(
m_
) {

59 
czxid
=
m_
;

60 
	}
}

61 
public
 
	$gëMzxid
() {

62  
mzxid
;

63 
	}
}

64 
public
 
	$£tMzxid
(
m_
) {

65 
mzxid
=
m_
;

66 
	}
}

67 
public
 
	$gëCtime
() {

68  
˘ime
;

69 
	}
}

70 
public
 
	$£tCtime
(
m_
) {

71 
˘ime
=
m_
;

72 
	}
}

73 
public
 
	$gëMtime
() {

74  
mtime
;

75 
	}
}

76 
public
 
	$£tMtime
(
m_
) {

77 
mtime
=
m_
;

78 
	}
}

79 
public
 
	$gëVîsi⁄
() {

80  
vîsi⁄
;

81 
	}
}

82 
public
 
	$£tVîsi⁄
(
m_
) {

83 
vîsi⁄
=
m_
;

84 
	}
}

85 
public
 
	$gëCvîsi⁄
() {

86  
cvîsi⁄
;

87 
	}
}

88 
public
 
	$£tCvîsi⁄
(
m_
) {

89 
cvîsi⁄
=
m_
;

90 
	}
}

91 
public
 
	$gëAvîsi⁄
() {

92  
avîsi⁄
;

93 
	}
}

94 
public
 
	$£tAvîsi⁄
(
m_
) {

95 
avîsi⁄
=
m_
;

96 
	}
}

97 
public
 
	$gëEphemîÆOw√r
() {

98  
ïhemîÆOw√r
;

99 
	}
}

100 
public
 
	$£tEphemîÆOw√r
(
m_
) {

101 
ïhemîÆOw√r
=
m_
;

102 
	}
}

103 
public
 
	$gëPzxid
() {

104  
pzxid
;

105 
	}
}

106 
public
 
	$£tPzxid
(
m_
) {

107 
pzxid
=
m_
;

108 
	}
}

109 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

110 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

111 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

112 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

113 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

114 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

115 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

116 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

117 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

118 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

119 
a_
.
	`wrôeL⁄g
(
pzxid
,"pzxid");

120 
a_
.
	`ídRec‹d
(
this
,
èg
);

121 
	}
}

122 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

123 
a_
.
	`°¨tRec‹d
(
èg
);

124 
czxid
=
a_
.
	`ªadL⁄g
("czxid");

125 
mzxid
=
a_
.
	`ªadL⁄g
("mzxid");

126 
˘ime
=
a_
.
	`ªadL⁄g
("ctime");

127 
mtime
=
a_
.
	`ªadL⁄g
("mtime");

128 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

129 
cvîsi⁄
=
a_
.
	`ªadI¡
("cversion");

130 
avîsi⁄
=
a_
.
	`ªadI¡
("aversion");

131 
ïhemîÆOw√r
=
a_
.
	`ªadL⁄g
("ephemeralOwner");

132 
pzxid
=
a_
.
	`ªadL⁄g
("pzxid");

133 
a_
.
	`ídRec‹d
(
èg
);

134 
	}
}

135 
public
 
Såög
 
	$toSåög
() {

136 
åy
 {

137 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

138 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

139 
CsvOuçutArchive
 
a_
 =

140 
√w
 
	`CsvOuçutArchive
(
s
);

141 
a_
.
	`°¨tRec‹d
(
this
,"");

142 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

143 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

144 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

145 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

146 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

147 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

148 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

149 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

150 
a_
.
	`wrôeL⁄g
(
pzxid
,"pzxid");

151 
a_
.
	`ídRec‹d
(
this
,"");

152  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

153 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

154 
ex
.
	`¥ötSèckTø˚
();

157 
	}
}

158 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

159 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

160 
	`£rülize
(
¨chive
, "");

161 
	}
}

162 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

163 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

164 
	`de£rülize
(
¨chive
, "");

165 
	}
}

166 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

167 i‡(!(
≥î_
 
ö°™˚of
 
SètPîsi°ed
)) {

168 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

170 
SètPîsi°ed
 
≥î
 = (SètPîsi°edË
≥î_
;

171 
ªt
 = 0;

172 
ªt
 = (
czxid
 =
≥î
.czxid)? 0 :((czxid<peer.czxid)?-1:1);

173 i‡(
ªt
 != 0) Ñet;

174 
ªt
 = (
mzxid
 =
≥î
.mzxid)? 0 :((mzxid<peer.mzxid)?-1:1);

175 i‡(
ªt
 != 0) Ñet;

176 
ªt
 = (
˘ime
 =
≥î
.ctime)? 0 :((ctime<peer.ctime)?-1:1);

177 i‡(
ªt
 != 0) Ñet;

178 
ªt
 = (
mtime
 =
≥î
.mtime)? 0 :((mtime<peer.mtime)?-1:1);

179 i‡(
ªt
 != 0) Ñet;

180 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

181 i‡(
ªt
 != 0) Ñet;

182 
ªt
 = (
cvîsi⁄
 =
≥î
.cversion)? 0 :((cversion<peer.cversion)?-1:1);

183 i‡(
ªt
 != 0) Ñet;

184 
ªt
 = (
avîsi⁄
 =
≥î
.aversion)? 0 :((aversion<peer.aversion)?-1:1);

185 i‡(
ªt
 != 0) Ñet;

186 
ªt
 = (
ïhemîÆOw√r
 =
≥î
.ephemeralOwner)? 0 :((ephemeralOwner<peer.ephemeralOwner)?-1:1);

187 i‡(
ªt
 != 0) Ñet;

188 
ªt
 = (
pzxid
 =
≥î
.pzxid)? 0 :((pzxid<peer.pzxid)?-1:1);

189 i‡(
ªt
 != 0) Ñet;

190  
ªt
;

191 
	}
}

192 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

193 i‡(!(
≥î_
 
ö°™˚of
 
SètPîsi°ed
)) {

194  
Ál£
;

196 i‡(
≥î_
 =
this
) {

197  
åue
;

199 
SètPîsi°ed
 
≥î
 = (SètPîsi°edË
≥î_
;

200 
boﬁón
 
ªt
 = 
Ál£
;

201 
ªt
 = (
czxid
==
≥î
.czxid);

202 i‡(!
ªt
) Ñet;

203 
ªt
 = (
mzxid
==
≥î
.mzxid);

204 i‡(!
ªt
) Ñet;

205 
ªt
 = (
˘ime
==
≥î
.ctime);

206 i‡(!
ªt
) Ñet;

207 
ªt
 = (
mtime
==
≥î
.mtime);

208 i‡(!
ªt
) Ñet;

209 
ªt
 = (
vîsi⁄
==
≥î
.version);

210 i‡(!
ªt
) Ñet;

211 
ªt
 = (
cvîsi⁄
==
≥î
.cversion);

212 i‡(!
ªt
) Ñet;

213 
ªt
 = (
avîsi⁄
==
≥î
.aversion);

214 i‡(!
ªt
) Ñet;

215 
ªt
 = (
ïhemîÆOw√r
==
≥î
.ephemeralOwner);

216 i‡(!
ªt
) Ñet;

217 
ªt
 = (
pzxid
==
≥î
.pzxid);

218 i‡(!
ªt
) Ñet;

219  
ªt
;

220 
	}
}

221 
public
 
	$hashCode
() {

222 
ªsu…
 = 17;

223 
ªt
;

224 
ªt
 = (Ë(
czxid
^(czxid>>>32));

225 
ªsu…
 = 37*ªsu… + 
ªt
;

226 
ªt
 = (Ë(
mzxid
^(mzxid>>>32));

227 
ªsu…
 = 37*ªsu… + 
ªt
;

228 
ªt
 = (Ë(
˘ime
^(ctime>>>32));

229 
ªsu…
 = 37*ªsu… + 
ªt
;

230 
ªt
 = (Ë(
mtime
^(mtime>>>32));

231 
ªsu…
 = 37*ªsu… + 
ªt
;

232 
ªt
 = ()
vîsi⁄
;

233 
ªsu…
 = 37*ªsu… + 
ªt
;

234 
ªt
 = ()
cvîsi⁄
;

235 
ªsu…
 = 37*ªsu… + 
ªt
;

236 
ªt
 = ()
avîsi⁄
;

237 
ªsu…
 = 37*ªsu… + 
ªt
;

238 
ªt
 = (Ë(
ïhemîÆOw√r
^(ephemeralOwner>>>32));

239 
ªsu…
 = 37*ªsu… + 
ªt
;

240 
ªt
 = (Ë(
pzxid
^(pzxid>>>32));

241 
ªsu…
 = 37*ªsu… + 
ªt
;

242  
ªsu…
;

243 
	}
}

244 
public
 
Såög
 
	$sig«tuª
() {

246 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/StatPersistedV1.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSètPîsi°edV1
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mczxid
;

25 
¥iv©e
 
	mmzxid
;

26 
¥iv©e
 
	m˘ime
;

27 
¥iv©e
 
	mmtime
;

28 
¥iv©e
 
	mvîsi⁄
;

29 
¥iv©e
 
	mcvîsi⁄
;

30 
¥iv©e
 
	mavîsi⁄
;

31 
¥iv©e
 
	mïhemîÆOw√r
;

32 
public
 
	$SètPîsi°edV1
() {

34 
public
 
	$SètPîsi°edV1
(

35 
czxid
,

36 
mzxid
,

37 
˘ime
,

38 
mtime
,

39 
vîsi⁄
,

40 
cvîsi⁄
,

41 
avîsi⁄
,

42 
ïhemîÆOw√r
) {

43 
this
.
czxid
=czxid;

44 
this
.
mzxid
=mzxid;

45 
this
.
˘ime
=ctime;

46 
this
.
mtime
=mtime;

47 
this
.
vîsi⁄
=version;

48 
this
.
cvîsi⁄
=cversion;

49 
this
.
avîsi⁄
=aversion;

50 
this
.
ïhemîÆOw√r
=ephemeralOwner;

51 
	}
}

52 
public
 
	$gëCzxid
() {

53  
czxid
;

54 
	}
}

55 
public
 
	$£tCzxid
(
m_
) {

56 
czxid
=
m_
;

57 
	}
}

58 
public
 
	$gëMzxid
() {

59  
mzxid
;

60 
	}
}

61 
public
 
	$£tMzxid
(
m_
) {

62 
mzxid
=
m_
;

63 
	}
}

64 
public
 
	$gëCtime
() {

65  
˘ime
;

66 
	}
}

67 
public
 
	$£tCtime
(
m_
) {

68 
˘ime
=
m_
;

69 
	}
}

70 
public
 
	$gëMtime
() {

71  
mtime
;

72 
	}
}

73 
public
 
	$£tMtime
(
m_
) {

74 
mtime
=
m_
;

75 
	}
}

76 
public
 
	$gëVîsi⁄
() {

77  
vîsi⁄
;

78 
	}
}

79 
public
 
	$£tVîsi⁄
(
m_
) {

80 
vîsi⁄
=
m_
;

81 
	}
}

82 
public
 
	$gëCvîsi⁄
() {

83  
cvîsi⁄
;

84 
	}
}

85 
public
 
	$£tCvîsi⁄
(
m_
) {

86 
cvîsi⁄
=
m_
;

87 
	}
}

88 
public
 
	$gëAvîsi⁄
() {

89  
avîsi⁄
;

90 
	}
}

91 
public
 
	$£tAvîsi⁄
(
m_
) {

92 
avîsi⁄
=
m_
;

93 
	}
}

94 
public
 
	$gëEphemîÆOw√r
() {

95  
ïhemîÆOw√r
;

96 
	}
}

97 
public
 
	$£tEphemîÆOw√r
(
m_
) {

98 
ïhemîÆOw√r
=
m_
;

99 
	}
}

100 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

101 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

102 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

103 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

104 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

105 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

106 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

107 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

108 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

109 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

110 
a_
.
	`ídRec‹d
(
this
,
èg
);

111 
	}
}

112 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

113 
a_
.
	`°¨tRec‹d
(
èg
);

114 
czxid
=
a_
.
	`ªadL⁄g
("czxid");

115 
mzxid
=
a_
.
	`ªadL⁄g
("mzxid");

116 
˘ime
=
a_
.
	`ªadL⁄g
("ctime");

117 
mtime
=
a_
.
	`ªadL⁄g
("mtime");

118 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

119 
cvîsi⁄
=
a_
.
	`ªadI¡
("cversion");

120 
avîsi⁄
=
a_
.
	`ªadI¡
("aversion");

121 
ïhemîÆOw√r
=
a_
.
	`ªadL⁄g
("ephemeralOwner");

122 
a_
.
	`ídRec‹d
(
èg
);

123 
	}
}

124 
public
 
Såög
 
	$toSåög
() {

125 
åy
 {

126 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

127 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

128 
CsvOuçutArchive
 
a_
 =

129 
√w
 
	`CsvOuçutArchive
(
s
);

130 
a_
.
	`°¨tRec‹d
(
this
,"");

131 
a_
.
	`wrôeL⁄g
(
czxid
,"czxid");

132 
a_
.
	`wrôeL⁄g
(
mzxid
,"mzxid");

133 
a_
.
	`wrôeL⁄g
(
˘ime
,"ctime");

134 
a_
.
	`wrôeL⁄g
(
mtime
,"mtime");

135 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

136 
a_
.
	`wrôeI¡
(
cvîsi⁄
,"cversion");

137 
a_
.
	`wrôeI¡
(
avîsi⁄
,"aversion");

138 
a_
.
	`wrôeL⁄g
(
ïhemîÆOw√r
,"ephemeralOwner");

139 
a_
.
	`ídRec‹d
(
this
,"");

140  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

141 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

142 
ex
.
	`¥ötSèckTø˚
();

145 
	}
}

146 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

147 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

148 
	`£rülize
(
¨chive
, "");

149 
	}
}

150 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

151 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

152 
	`de£rülize
(
¨chive
, "");

153 
	}
}

154 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

155 i‡(!(
≥î_
 
ö°™˚of
 
SètPîsi°edV1
)) {

156 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

158 
SètPîsi°edV1
 
≥î
 = (SètPîsi°edV1Ë
≥î_
;

159 
ªt
 = 0;

160 
ªt
 = (
czxid
 =
≥î
.czxid)? 0 :((czxid<peer.czxid)?-1:1);

161 i‡(
ªt
 != 0) Ñet;

162 
ªt
 = (
mzxid
 =
≥î
.mzxid)? 0 :((mzxid<peer.mzxid)?-1:1);

163 i‡(
ªt
 != 0) Ñet;

164 
ªt
 = (
˘ime
 =
≥î
.ctime)? 0 :((ctime<peer.ctime)?-1:1);

165 i‡(
ªt
 != 0) Ñet;

166 
ªt
 = (
mtime
 =
≥î
.mtime)? 0 :((mtime<peer.mtime)?-1:1);

167 i‡(
ªt
 != 0) Ñet;

168 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

169 i‡(
ªt
 != 0) Ñet;

170 
ªt
 = (
cvîsi⁄
 =
≥î
.cversion)? 0 :((cversion<peer.cversion)?-1:1);

171 i‡(
ªt
 != 0) Ñet;

172 
ªt
 = (
avîsi⁄
 =
≥î
.aversion)? 0 :((aversion<peer.aversion)?-1:1);

173 i‡(
ªt
 != 0) Ñet;

174 
ªt
 = (
ïhemîÆOw√r
 =
≥î
.ephemeralOwner)? 0 :((ephemeralOwner<peer.ephemeralOwner)?-1:1);

175 i‡(
ªt
 != 0) Ñet;

176  
ªt
;

177 
	}
}

178 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

179 i‡(!(
≥î_
 
ö°™˚of
 
SètPîsi°edV1
)) {

180  
Ál£
;

182 i‡(
≥î_
 =
this
) {

183  
åue
;

185 
SètPîsi°edV1
 
≥î
 = (SètPîsi°edV1Ë
≥î_
;

186 
boﬁón
 
ªt
 = 
Ál£
;

187 
ªt
 = (
czxid
==
≥î
.czxid);

188 i‡(!
ªt
) Ñet;

189 
ªt
 = (
mzxid
==
≥î
.mzxid);

190 i‡(!
ªt
) Ñet;

191 
ªt
 = (
˘ime
==
≥î
.ctime);

192 i‡(!
ªt
) Ñet;

193 
ªt
 = (
mtime
==
≥î
.mtime);

194 i‡(!
ªt
) Ñet;

195 
ªt
 = (
vîsi⁄
==
≥î
.version);

196 i‡(!
ªt
) Ñet;

197 
ªt
 = (
cvîsi⁄
==
≥î
.cversion);

198 i‡(!
ªt
) Ñet;

199 
ªt
 = (
avîsi⁄
==
≥î
.aversion);

200 i‡(!
ªt
) Ñet;

201 
ªt
 = (
ïhemîÆOw√r
==
≥î
.ephemeralOwner);

202 i‡(!
ªt
) Ñet;

203  
ªt
;

204 
	}
}

205 
public
 
	$hashCode
() {

206 
ªsu…
 = 17;

207 
ªt
;

208 
ªt
 = (Ë(
czxid
^(czxid>>>32));

209 
ªsu…
 = 37*ªsu… + 
ªt
;

210 
ªt
 = (Ë(
mzxid
^(mzxid>>>32));

211 
ªsu…
 = 37*ªsu… + 
ªt
;

212 
ªt
 = (Ë(
˘ime
^(ctime>>>32));

213 
ªsu…
 = 37*ªsu… + 
ªt
;

214 
ªt
 = (Ë(
mtime
^(mtime>>>32));

215 
ªsu…
 = 37*ªsu… + 
ªt
;

216 
ªt
 = ()
vîsi⁄
;

217 
ªsu…
 = 37*ªsu… + 
ªt
;

218 
ªt
 = ()
cvîsi⁄
;

219 
ªsu…
 = 37*ªsu… + 
ªt
;

220 
ªt
 = ()
avîsi⁄
;

221 
ªsu…
 = 37*ªsu… + 
ªt
;

222 
ªt
 = (Ë(
ïhemîÆOw√r
^(ephemeralOwner>>>32));

223 
ªsu…
 = 37*ªsu… + 
ªt
;

224  
ªsu…
;

225 
	}
}

226 
public
 
Såög
 
	$sig«tuª
() {

228 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/AuthPacket.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cAuthPackë
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mty≥
;

25 
¥iv©e
 
Såög
 
	mscheme
;

26 
¥iv©e
 
	mbyã
[] 
	mauth
;

27 
public
 
	$AuthPackë
() {

29 
public
 
	$AuthPackë
(

30 
ty≥
,

31 
Såög
 
scheme
,

32 
byã
[] 
auth
) {

33 
this
.
ty≥
=type;

34 
this
.
scheme
=scheme;

35 
this
.
auth
=auth;

36 
	}
}

37 
public
 
	$gëTy≥
() {

38  
ty≥
;

39 
	}
}

40 
public
 
	$£tTy≥
(
m_
) {

41 
ty≥
=
m_
;

42 
	}
}

43 
public
 
Såög
 
	$gëScheme
() {

44  
scheme
;

45 
	}
}

46 
public
 
	$£tScheme
(
Såög
 
m_
) {

47 
scheme
=
m_
;

48 
	}
}

49 
public
 
	gbyã
[] 
	$gëAuth
() {

50  
auth
;

51 
	}
}

52 
public
 
	$£tAuth
(
byã
[] 
m_
) {

53 
auth
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeI¡
(
ty≥
,"type");

58 
a_
.
	`wrôeSåög
(
scheme
,"scheme");

59 
a_
.
	`wrôeBuf„r
(
auth
,"auth");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
ty≥
=
a_
.
	`ªadI¡
("type");

65 
scheme
=
a_
.
	`ªadSåög
("scheme");

66 
auth
=
a_
.
	`ªadBuf„r
("auth");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeI¡
(
ty≥
,"type");

77 
a_
.
	`wrôeSåög
(
scheme
,"scheme");

78 
a_
.
	`wrôeBuf„r
(
auth
,"auth");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
AuthPackë
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
AuthPackë
 
≥î
 = (AuthPackëË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

101 i‡(
ªt
 != 0) Ñet;

102 
ªt
 = 
scheme
.
	`com∑ªTo
(
≥î
.scheme);

103 i‡(
ªt
 != 0) Ñet;

105 
byã
[] 
my
 = 
auth
;

106 
byã
[] 
ur
 = 
≥î
.
auth
;

107 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

109 i‡(
ªt
 != 0) Ñet;

110  
ªt
;

111 
	}
}

112 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

113 i‡(!(
≥î_
 
ö°™˚of
 
AuthPackë
)) {

114  
Ál£
;

116 i‡(
≥î_
 =
this
) {

117  
åue
;

119 
AuthPackë
 
≥î
 = (AuthPackëË
≥î_
;

120 
boﬁón
 
ªt
 = 
Ál£
;

121 
ªt
 = (
ty≥
==
≥î
.type);

122 i‡(!
ªt
) Ñet;

123 
ªt
 = 
scheme
.
	`equÆs
(
≥î
.scheme);

124 i‡(!
ªt
) Ñet;

125 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
auth
,
≥î
.auth);

126 i‡(!
ªt
) Ñet;

127  
ªt
;

128 
	}
}

129 
public
 
	$hashCode
() {

130 
ªsu…
 = 17;

131 
ªt
;

132 
ªt
 = ()
ty≥
;

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134 
ªt
 = 
scheme
.
	`hashCode
();

135 
ªsu…
 = 37*ªsu… + 
ªt
;

136 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
auth
).
	`hashCode
();

137 
ªsu…
 = 37*ªsu… + 
ªt
;

138  
ªsu…
;

139 
	}
}

140 
public
 
Såög
 
	$sig«tuª
() {

142 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CheckVersionRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCheckVîsi⁄Reque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mvîsi⁄
;

26 
public
 
	$CheckVîsi⁄Reque°
() {

28 
public
 
	$CheckVîsi⁄Reque°
(

29 
Såög
 
∑th
,

30 
vîsi⁄
) {

31 
this
.
∑th
=path;

32 
this
.
vîsi⁄
=version;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
	$gëVîsi⁄
() {

41  
vîsi⁄
;

42 
	}
}

43 
public
 
	$£tVîsi⁄
(
m_
) {

44 
vîsi⁄
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
CheckVîsi⁄Reque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
CheckVîsi⁄Reque°
 
≥î
 = (CheckVîsi⁄Reque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
CheckVîsi⁄Reque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
CheckVîsi⁄Reque°
 
≥î
 = (CheckVîsi⁄Reque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
vîsi⁄
==
≥î
.version);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
vîsi⁄
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ConnectRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cC⁄√˘Reque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m¥ŸocﬁVîsi⁄
;

25 
¥iv©e
 
	mœ°ZxidSìn
;

26 
¥iv©e
 
	mtimeOut
;

27 
¥iv©e
 
	m£ssi⁄Id
;

28 
¥iv©e
 
	mbyã
[] 
	m∑sswd
;

29 
public
 
	$C⁄√˘Reque°
() {

31 
public
 
	$C⁄√˘Reque°
(

32 
¥ŸocﬁVîsi⁄
,

33 
œ°ZxidSìn
,

34 
timeOut
,

35 
£ssi⁄Id
,

36 
byã
[] 
∑sswd
) {

37 
this
.
¥ŸocﬁVîsi⁄
=protocolVersion;

38 
this
.
œ°ZxidSìn
=lastZxidSeen;

39 
this
.
timeOut
=timeOut;

40 
this
.
£ssi⁄Id
=sessionId;

41 
this
.
∑sswd
=passwd;

42 
	}
}

43 
public
 
	$gëPrŸocﬁVîsi⁄
() {

44  
¥ŸocﬁVîsi⁄
;

45 
	}
}

46 
public
 
	$£tPrŸocﬁVîsi⁄
(
m_
) {

47 
¥ŸocﬁVîsi⁄
=
m_
;

48 
	}
}

49 
public
 
	$gëLa°ZxidSìn
() {

50  
œ°ZxidSìn
;

51 
	}
}

52 
public
 
	$£tLa°ZxidSìn
(
m_
) {

53 
œ°ZxidSìn
=
m_
;

54 
	}
}

55 
public
 
	$gëTimeOut
() {

56  
timeOut
;

57 
	}
}

58 
public
 
	$£tTimeOut
(
m_
) {

59 
timeOut
=
m_
;

60 
	}
}

61 
public
 
	$gëSessi⁄Id
() {

62  
£ssi⁄Id
;

63 
	}
}

64 
public
 
	$£tSessi⁄Id
(
m_
) {

65 
£ssi⁄Id
=
m_
;

66 
	}
}

67 
public
 
	gbyã
[] 
	$gëPasswd
() {

68  
∑sswd
;

69 
	}
}

70 
public
 
	$£tPasswd
(
byã
[] 
m_
) {

71 
∑sswd
=
m_
;

72 
	}
}

73 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

74 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

75 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

76 
a_
.
	`wrôeL⁄g
(
œ°ZxidSìn
,"lastZxidSeen");

77 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

78 
a_
.
	`wrôeL⁄g
(
£ssi⁄Id
,"sessionId");

79 
a_
.
	`wrôeBuf„r
(
∑sswd
,"passwd");

80 
a_
.
	`ídRec‹d
(
this
,
èg
);

81 
	}
}

82 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

83 
a_
.
	`°¨tRec‹d
(
èg
);

84 
¥ŸocﬁVîsi⁄
=
a_
.
	`ªadI¡
("protocolVersion");

85 
œ°ZxidSìn
=
a_
.
	`ªadL⁄g
("lastZxidSeen");

86 
timeOut
=
a_
.
	`ªadI¡
("timeOut");

87 
£ssi⁄Id
=
a_
.
	`ªadL⁄g
("sessionId");

88 
∑sswd
=
a_
.
	`ªadBuf„r
("passwd");

89 
a_
.
	`ídRec‹d
(
èg
);

90 
	}
}

91 
public
 
Såög
 
	$toSåög
() {

92 
åy
 {

93 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

94 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

95 
CsvOuçutArchive
 
a_
 =

96 
√w
 
	`CsvOuçutArchive
(
s
);

97 
a_
.
	`°¨tRec‹d
(
this
,"");

98 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

99 
a_
.
	`wrôeL⁄g
(
œ°ZxidSìn
,"lastZxidSeen");

100 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

101 
a_
.
	`wrôeL⁄g
(
£ssi⁄Id
,"sessionId");

102 
a_
.
	`wrôeBuf„r
(
∑sswd
,"passwd");

103 
a_
.
	`ídRec‹d
(
this
,"");

104  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

105 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

106 
ex
.
	`¥ötSèckTø˚
();

109 
	}
}

110 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

111 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

112 
	`£rülize
(
¨chive
, "");

113 
	}
}

114 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

115 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

116 
	`de£rülize
(
¨chive
, "");

117 
	}
}

118 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

119 i‡(!(
≥î_
 
ö°™˚of
 
C⁄√˘Reque°
)) {

120 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

122 
C⁄√˘Reque°
 
≥î
 = (C⁄√˘Reque°Ë
≥î_
;

123 
ªt
 = 0;

124 
ªt
 = (
¥ŸocﬁVîsi⁄
 =
≥î
.protocolVersion)? 0 :((protocolVersion<peer.protocolVersion)?-1:1);

125 i‡(
ªt
 != 0) Ñet;

126 
ªt
 = (
œ°ZxidSìn
 =
≥î
.lastZxidSeen)? 0 :((lastZxidSeen<peer.lastZxidSeen)?-1:1);

127 i‡(
ªt
 != 0) Ñet;

128 
ªt
 = (
timeOut
 =
≥î
.timeOut)? 0 :((timeOut<peer.timeOut)?-1:1);

129 i‡(
ªt
 != 0) Ñet;

130 
ªt
 = (
£ssi⁄Id
 =
≥î
.sessionId)? 0 :((sessionId<peer.sessionId)?-1:1);

131 i‡(
ªt
 != 0) Ñet;

133 
byã
[] 
my
 = 
∑sswd
;

134 
byã
[] 
ur
 = 
≥î
.
∑sswd
;

135 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

137 i‡(
ªt
 != 0) Ñet;

138  
ªt
;

139 
	}
}

140 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

141 i‡(!(
≥î_
 
ö°™˚of
 
C⁄√˘Reque°
)) {

142  
Ál£
;

144 i‡(
≥î_
 =
this
) {

145  
åue
;

147 
C⁄√˘Reque°
 
≥î
 = (C⁄√˘Reque°Ë
≥î_
;

148 
boﬁón
 
ªt
 = 
Ál£
;

149 
ªt
 = (
¥ŸocﬁVîsi⁄
==
≥î
.protocolVersion);

150 i‡(!
ªt
) Ñet;

151 
ªt
 = (
œ°ZxidSìn
==
≥î
.lastZxidSeen);

152 i‡(!
ªt
) Ñet;

153 
ªt
 = (
timeOut
==
≥î
.timeOut);

154 i‡(!
ªt
) Ñet;

155 
ªt
 = (
£ssi⁄Id
==
≥î
.sessionId);

156 i‡(!
ªt
) Ñet;

157 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
∑sswd
,
≥î
.passwd);

158 i‡(!
ªt
) Ñet;

159  
ªt
;

160 
	}
}

161 
public
 
	$hashCode
() {

162 
ªsu…
 = 17;

163 
ªt
;

164 
ªt
 = ()
¥ŸocﬁVîsi⁄
;

165 
ªsu…
 = 37*ªsu… + 
ªt
;

166 
ªt
 = (Ë(
œ°ZxidSìn
^(lastZxidSeen>>>32));

167 
ªsu…
 = 37*ªsu… + 
ªt
;

168 
ªt
 = ()
timeOut
;

169 
ªsu…
 = 37*ªsu… + 
ªt
;

170 
ªt
 = (Ë(
£ssi⁄Id
^(sessionId>>>32));

171 
ªsu…
 = 37*ªsu… + 
ªt
;

172 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
∑sswd
).
	`hashCode
();

173 
ªsu…
 = 37*ªsu… + 
ªt
;

174  
ªsu…
;

175 
	}
}

176 
public
 
Såög
 
	$sig«tuª
() {

178 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ConnectResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cC⁄√˘Re•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m¥ŸocﬁVîsi⁄
;

25 
¥iv©e
 
	mtimeOut
;

26 
¥iv©e
 
	m£ssi⁄Id
;

27 
¥iv©e
 
	mbyã
[] 
	m∑sswd
;

28 
public
 
	$C⁄√˘Re•⁄£
() {

30 
public
 
	$C⁄√˘Re•⁄£
(

31 
¥ŸocﬁVîsi⁄
,

32 
timeOut
,

33 
£ssi⁄Id
,

34 
byã
[] 
∑sswd
) {

35 
this
.
¥ŸocﬁVîsi⁄
=protocolVersion;

36 
this
.
timeOut
=timeOut;

37 
this
.
£ssi⁄Id
=sessionId;

38 
this
.
∑sswd
=passwd;

39 
	}
}

40 
public
 
	$gëPrŸocﬁVîsi⁄
() {

41  
¥ŸocﬁVîsi⁄
;

42 
	}
}

43 
public
 
	$£tPrŸocﬁVîsi⁄
(
m_
) {

44 
¥ŸocﬁVîsi⁄
=
m_
;

45 
	}
}

46 
public
 
	$gëTimeOut
() {

47  
timeOut
;

48 
	}
}

49 
public
 
	$£tTimeOut
(
m_
) {

50 
timeOut
=
m_
;

51 
	}
}

52 
public
 
	$gëSessi⁄Id
() {

53  
£ssi⁄Id
;

54 
	}
}

55 
public
 
	$£tSessi⁄Id
(
m_
) {

56 
£ssi⁄Id
=
m_
;

57 
	}
}

58 
public
 
	gbyã
[] 
	$gëPasswd
() {

59  
∑sswd
;

60 
	}
}

61 
public
 
	$£tPasswd
(
byã
[] 
m_
) {

62 
∑sswd
=
m_
;

63 
	}
}

64 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

65 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

66 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

67 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

68 
a_
.
	`wrôeL⁄g
(
£ssi⁄Id
,"sessionId");

69 
a_
.
	`wrôeBuf„r
(
∑sswd
,"passwd");

70 
a_
.
	`ídRec‹d
(
this
,
èg
);

71 
	}
}

72 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

73 
a_
.
	`°¨tRec‹d
(
èg
);

74 
¥ŸocﬁVîsi⁄
=
a_
.
	`ªadI¡
("protocolVersion");

75 
timeOut
=
a_
.
	`ªadI¡
("timeOut");

76 
£ssi⁄Id
=
a_
.
	`ªadL⁄g
("sessionId");

77 
∑sswd
=
a_
.
	`ªadBuf„r
("passwd");

78 
a_
.
	`ídRec‹d
(
èg
);

79 
	}
}

80 
public
 
Såög
 
	$toSåög
() {

81 
åy
 {

82 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

83 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

84 
CsvOuçutArchive
 
a_
 =

85 
√w
 
	`CsvOuçutArchive
(
s
);

86 
a_
.
	`°¨tRec‹d
(
this
,"");

87 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

88 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

89 
a_
.
	`wrôeL⁄g
(
£ssi⁄Id
,"sessionId");

90 
a_
.
	`wrôeBuf„r
(
∑sswd
,"passwd");

91 
a_
.
	`ídRec‹d
(
this
,"");

92  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

93 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

94 
ex
.
	`¥ötSèckTø˚
();

97 
	}
}

98 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

99 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

100 
	`£rülize
(
¨chive
, "");

101 
	}
}

102 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

103 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

104 
	`de£rülize
(
¨chive
, "");

105 
	}
}

106 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

107 i‡(!(
≥î_
 
ö°™˚of
 
C⁄√˘Re•⁄£
)) {

108 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

110 
C⁄√˘Re•⁄£
 
≥î
 = (C⁄√˘Re•⁄£Ë
≥î_
;

111 
ªt
 = 0;

112 
ªt
 = (
¥ŸocﬁVîsi⁄
 =
≥î
.protocolVersion)? 0 :((protocolVersion<peer.protocolVersion)?-1:1);

113 i‡(
ªt
 != 0) Ñet;

114 
ªt
 = (
timeOut
 =
≥î
.timeOut)? 0 :((timeOut<peer.timeOut)?-1:1);

115 i‡(
ªt
 != 0) Ñet;

116 
ªt
 = (
£ssi⁄Id
 =
≥î
.sessionId)? 0 :((sessionId<peer.sessionId)?-1:1);

117 i‡(
ªt
 != 0) Ñet;

119 
byã
[] 
my
 = 
∑sswd
;

120 
byã
[] 
ur
 = 
≥î
.
∑sswd
;

121 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

123 i‡(
ªt
 != 0) Ñet;

124  
ªt
;

125 
	}
}

126 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

127 i‡(!(
≥î_
 
ö°™˚of
 
C⁄√˘Re•⁄£
)) {

128  
Ál£
;

130 i‡(
≥î_
 =
this
) {

131  
åue
;

133 
C⁄√˘Re•⁄£
 
≥î
 = (C⁄√˘Re•⁄£Ë
≥î_
;

134 
boﬁón
 
ªt
 = 
Ál£
;

135 
ªt
 = (
¥ŸocﬁVîsi⁄
==
≥î
.protocolVersion);

136 i‡(!
ªt
) Ñet;

137 
ªt
 = (
timeOut
==
≥î
.timeOut);

138 i‡(!
ªt
) Ñet;

139 
ªt
 = (
£ssi⁄Id
==
≥î
.sessionId);

140 i‡(!
ªt
) Ñet;

141 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
∑sswd
,
≥î
.passwd);

142 i‡(!
ªt
) Ñet;

143  
ªt
;

144 
	}
}

145 
public
 
	$hashCode
() {

146 
ªsu…
 = 17;

147 
ªt
;

148 
ªt
 = ()
¥ŸocﬁVîsi⁄
;

149 
ªsu…
 = 37*ªsu… + 
ªt
;

150 
ªt
 = ()
timeOut
;

151 
ªsu…
 = 37*ªsu… + 
ªt
;

152 
ªt
 = (Ë(
£ssi⁄Id
^(sessionId>>>32));

153 
ªsu…
 = 37*ªsu… + 
ªt
;

154 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
∑sswd
).
	`hashCode
();

155 
ªsu…
 = 37*ªsu… + 
ªt
;

156  
ªsu…
;

157 
	}
}

158 
public
 
Såög
 
	$sig«tuª
() {

160 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CreateRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCª©eReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

27 
¥iv©e
 
	mÊags
;

28 
public
 
	$Cª©eReque°
() {

30 
public
 
	`Cª©eReque°
(

31 
Såög
 
∑th
,

32 
byã
[] 
d©a
,

33 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

34 
Êags
) {

35 
this
.
∑th
=path;

36 
this
.
d©a
=data;

37 
this
.
a˛
=acl;

38 
this
.
Êags
=flags;

39 
	}
}

40 
public
 
Såög
 
	$gëP©h
() {

41  
∑th
;

42 
	}
}

43 
public
 
	$£tP©h
(
Såög
 
m_
) {

44 
∑th
=
m_
;

45 
	}
}

46 
public
 
	gbyã
[] 
	$gëD©a
() {

47  
d©a
;

48 
	}
}

49 
public
 
	$£tD©a
(
byã
[] 
m_
) {

50 
d©a
=
m_
;

51 
	}
}

52 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

53  
a˛
;

54 
	}
}

55 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

56 
	ga˛
=
m_
;

58 
public
 
	$gëFœgs
() {

59  
Êags
;

60 
	}
}

61 
public
 
	$£tFœgs
(
m_
) {

62 
Êags
=
m_
;

63 
	}
}

64 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

65 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

66 
a_
.
	`wrôeSåög
(
∑th
,"path");

67 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

69 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

70 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

71 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

72 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

73 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

76 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

78 
a_
.
	`wrôeI¡
(
Êags
,"flags");

79 
a_
.
	`ídRec‹d
(
this
,
èg
);

80 
	}
}

81 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

82 
a_
.
	`°¨tRec‹d
(
èg
);

83 
∑th
=
a_
.
	`ªadSåög
("path");

84 
d©a
=
a_
.
	`ªadBuf„r
("data");

86 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

87 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

88 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

89 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

90 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

91 
a_
.
	`ªadRec‹d
(
e1
,"e1");

92 
a˛
.
	`add
(
e1
);

95 
a_
.
	`ídVe˘‹
("acl");

97 
Êags
=
a_
.
	`ªadI¡
("flags");

98 
a_
.
	`ídRec‹d
(
èg
);

99 
	}
}

100 
public
 
Såög
 
	$toSåög
() {

101 
åy
 {

102 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

103 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

104 
CsvOuçutArchive
 
a_
 =

105 
√w
 
	`CsvOuçutArchive
(
s
);

106 
a_
.
	`°¨tRec‹d
(
this
,"");

107 
a_
.
	`wrôeSåög
(
∑th
,"path");

108 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

110 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

111 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

112 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

113 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

114 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

117 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

119 
a_
.
	`wrôeI¡
(
Êags
,"flags");

120 
a_
.
	`ídRec‹d
(
this
,"");

121  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

122 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

123 
ex
.
	`¥ötSèckTø˚
();

126 
	}
}

127 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

128 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

129 
	`£rülize
(
¨chive
, "");

130 
	}
}

131 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

132 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

133 
	`de£rülize
(
¨chive
, "");

134 
	}
}

135 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

136 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing CreateRequest is unimplemented");

137 
	}
}

138 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

139 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eReque°
)) {

140  
Ál£
;

142 i‡(
≥î_
 =
this
) {

143  
åue
;

145 
Cª©eReque°
 
≥î
 = (Cª©eReque°Ë
≥î_
;

146 
boﬁón
 
ªt
 = 
Ál£
;

147 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

148 i‡(!
ªt
) Ñet;

149 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

150 i‡(!
ªt
) Ñet;

151 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

152 i‡(!
ªt
) Ñet;

153 
ªt
 = (
Êags
==
≥î
.flags);

154 i‡(!
ªt
) Ñet;

155  
ªt
;

156 
	}
}

157 
public
 
	$hashCode
() {

158 
ªsu…
 = 17;

159 
ªt
;

160 
ªt
 = 
∑th
.
	`hashCode
();

161 
ªsu…
 = 37*ªsu… + 
ªt
;

162 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

163 
ªsu…
 = 37*ªsu… + 
ªt
;

164 
ªt
 = 
a˛
.
	`hashCode
();

165 
ªsu…
 = 37*ªsu… + 
ªt
;

166 
ªt
 = ()
Êags
;

167 
ªsu…
 = 37*ªsu… + 
ªt
;

168  
ªsu…
;

169 
	}
}

170 
public
 
Såög
 
	$sig«tuª
() {

172 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CreateResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCª©eRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$Cª©eRe•⁄£
() {

27 
public
 
	$Cª©eRe•⁄£
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eRe•⁄£
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
Cª©eRe•⁄£
 
≥î
 = (Cª©eRe•⁄£Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eRe•⁄£
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
Cª©eRe•⁄£
 
≥î
 = (Cª©eRe•⁄£Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/DeleteRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cDñëeReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mvîsi⁄
;

26 
public
 
	$DñëeReque°
() {

28 
public
 
	$DñëeReque°
(

29 
Såög
 
∑th
,

30 
vîsi⁄
) {

31 
this
.
∑th
=path;

32 
this
.
vîsi⁄
=version;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
	$gëVîsi⁄
() {

41  
vîsi⁄
;

42 
	}
}

43 
public
 
	$£tVîsi⁄
(
m_
) {

44 
vîsi⁄
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
DñëeReque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
DñëeReque°
 
≥î
 = (DñëeReque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
DñëeReque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
DñëeReque°
 
≥î
 = (DñëeReque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
vîsi⁄
==
≥î
.version);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
vîsi⁄
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ErrorResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cEº‹Re•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mîr
;

25 
public
 
	$Eº‹Re•⁄£
() {

27 
public
 
	$Eº‹Re•⁄£
(

28 
îr
) {

29 
this
.
îr
=err;

30 
	}
}

31 
public
 
	$gëEº
() {

32  
îr
;

33 
	}
}

34 
public
 
	$£tEº
(
m_
) {

35 
îr
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeI¡
(
îr
,"err");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
îr
=
a_
.
	`ªadI¡
("err");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeI¡
(
îr
,"err");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
Eº‹Re•⁄£
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
Eº‹Re•⁄£
 
≥î
 = (Eº‹Re•⁄£Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = (
îr
 =
≥î
.err)? 0 :((err<peer.err)?-1:1);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
Eº‹Re•⁄£
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
Eº‹Re•⁄£
 
≥î
 = (Eº‹Re•⁄£Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = (
îr
==
≥î
.err);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = ()
îr
;

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ExistsRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cExi°sReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
boﬁón
 
	mw©ch
;

26 
public
 
	$Exi°sReque°
() {

28 
public
 
	$Exi°sReque°
(

29 
Såög
 
∑th
,

30 
boﬁón
 
w©ch
) {

31 
this
.
∑th
=path;

32 
this
.
w©ch
=watch;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
boﬁón
 
	$gëW©ch
() {

41  
w©ch
;

42 
	}
}

43 
public
 
	$£tW©ch
(
boﬁón
 
m_
) {

44 
w©ch
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
w©ch
=
a_
.
	`ªadBoﬁ
("watch");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
Exi°sReque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
Exi°sReque°
 
≥î
 = (Exi°sReque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
w©ch
 =
≥î
.watch)? 0 : (watch?1:-1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
Exi°sReque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
Exi°sReque°
 
≥î
 = (Exi°sReque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
w©ch
==
≥î
.watch);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = (
w©ch
)?0:1;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ExistsResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cExi°sRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

25 
public
 
	$Exi°sRe•⁄£
() {

27 
public
 
	$Exi°sRe•⁄£
(

28 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

29 
this
.
°©
=stat;

30 
	}
}

31 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

32  
°©
;

33 
	}
}

34 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

35 
°©
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

45 
a_
.
	`ªadRec‹d
(
°©
,"stat");

46 
a_
.
	`ídRec‹d
(
èg
);

47 
	}
}

48 
public
 
Såög
 
	$toSåög
() {

49 
åy
 {

50 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

51 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

52 
CsvOuçutArchive
 
a_
 =

53 
√w
 
	`CsvOuçutArchive
(
s
);

54 
a_
.
	`°¨tRec‹d
(
this
,"");

55 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

56 
a_
.
	`ídRec‹d
(
this
,"");

57  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

58 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

59 
ex
.
	`¥ötSèckTø˚
();

62 
	}
}

63 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

64 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

65 
	`£rülize
(
¨chive
, "");

66 
	}
}

67 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

68 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

69 
	`de£rülize
(
¨chive
, "");

70 
	}
}

71 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

72 i‡(!(
≥î_
 
ö°™˚of
 
Exi°sRe•⁄£
)) {

73 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

75 
Exi°sRe•⁄£
 
≥î
 = (Exi°sRe•⁄£Ë
≥î_
;

76 
ªt
 = 0;

77 
ªt
 = 
°©
.
	`com∑ªTo
(
≥î
.stat);

78 i‡(
ªt
 != 0) Ñet;

79  
ªt
;

80 
	}
}

81 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

82 i‡(!(
≥î_
 
ö°™˚of
 
Exi°sRe•⁄£
)) {

83  
Ál£
;

85 i‡(
≥î_
 =
this
) {

86  
åue
;

88 
Exi°sRe•⁄£
 
≥î
 = (Exi°sRe•⁄£Ë
≥î_
;

89 
boﬁón
 
ªt
 = 
Ál£
;

90 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

91 i‡(!
ªt
) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
	$hashCode
() {

95 
ªsu…
 = 17;

96 
ªt
;

97 
ªt
 = 
°©
.
	`hashCode
();

98 
ªsu…
 = 37*ªsu… + 
ªt
;

99  
ªsu…
;

100 
	}
}

101 
public
 
Såög
 
	$sig«tuª
() {

103 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetACLRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëACLReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$GëACLReque°
() {

27 
public
 
	$GëACLReque°
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
GëACLReque°
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
GëACLReque°
 
≥î
 = (GëACLReque°Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
GëACLReque°
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
GëACLReque°
 
≥î
 = (GëACLReque°Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetACLResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëACLRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

25 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

26 
public
 
	$GëACLRe•⁄£
() {

28 
public
 
	`GëACLRe•⁄£
(

29 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

30 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

31 
this
.
a˛
=acl;

32 
this
.
°©
=stat;

33 
	}
}

34 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

35  
a˛
;

36 
	}
}

37 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

38 
	ga˛
=
m_
;

40 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

41  
°©
;

42 
	}
}

43 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

44 
°©
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

49 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

50 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

51 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

52 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

53 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

56 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

58 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

59 
a_
.
	`ídRec‹d
(
this
,
èg
);

60 
	}
}

61 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

62 
a_
.
	`°¨tRec‹d
(
èg
);

64 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

65 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

66 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

67 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

68 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

69 
a_
.
	`ªadRec‹d
(
e1
,"e1");

70 
a˛
.
	`add
(
e1
);

73 
a_
.
	`ídVe˘‹
("acl");

75 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

76 
a_
.
	`ªadRec‹d
(
°©
,"stat");

77 
a_
.
	`ídRec‹d
(
èg
);

78 
	}
}

79 
public
 
Såög
 
	$toSåög
() {

80 
åy
 {

81 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

82 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

83 
CsvOuçutArchive
 
a_
 =

84 
√w
 
	`CsvOuçutArchive
(
s
);

85 
a_
.
	`°¨tRec‹d
(
this
,"");

87 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

88 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

89 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

90 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

91 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

94 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

96 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

97 
a_
.
	`ídRec‹d
(
this
,"");

98  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

99 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

100 
ex
.
	`¥ötSèckTø˚
();

103 
	}
}

104 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

105 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

106 
	`£rülize
(
¨chive
, "");

107 
	}
}

108 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

109 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

110 
	`de£rülize
(
¨chive
, "");

111 
	}
}

112 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

113 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing GetACLResponse is unimplemented");

114 
	}
}

115 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

116 i‡(!(
≥î_
 
ö°™˚of
 
GëACLRe•⁄£
)) {

117  
Ál£
;

119 i‡(
≥î_
 =
this
) {

120  
åue
;

122 
GëACLRe•⁄£
 
≥î
 = (GëACLRe•⁄£Ë
≥î_
;

123 
boﬁón
 
ªt
 = 
Ál£
;

124 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

125 i‡(!
ªt
) Ñet;

126 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

127 i‡(!
ªt
) Ñet;

128  
ªt
;

129 
	}
}

130 
public
 
	$hashCode
() {

131 
ªsu…
 = 17;

132 
ªt
;

133 
ªt
 = 
a˛
.
	`hashCode
();

134 
ªsu…
 = 37*ªsu… + 
ªt
;

135 
ªt
 = 
°©
.
	`hashCode
();

136 
ªsu…
 = 37*ªsu… + 
ªt
;

137  
ªsu…
;

138 
	}
}

139 
public
 
Såög
 
	$sig«tuª
() {

141 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildren2Request.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëChûdªn2Reque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
boﬁón
 
	mw©ch
;

26 
public
 
	$GëChûdªn2Reque°
() {

28 
public
 
	$GëChûdªn2Reque°
(

29 
Såög
 
∑th
,

30 
boﬁón
 
w©ch
) {

31 
this
.
∑th
=path;

32 
this
.
w©ch
=watch;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
boﬁón
 
	$gëW©ch
() {

41  
w©ch
;

42 
	}
}

43 
public
 
	$£tW©ch
(
boﬁón
 
m_
) {

44 
w©ch
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
w©ch
=
a_
.
	`ªadBoﬁ
("watch");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªn2Reque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
GëChûdªn2Reque°
 
≥î
 = (GëChûdªn2Reque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
w©ch
 =
≥î
.watch)? 0 : (watch?1:-1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªn2Reque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
GëChûdªn2Reque°
 
≥î
 = (GëChûdªn2Reque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
w©ch
==
≥î
.watch);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = (
w©ch
)?0:1;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildren2Response.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëChûdªn2Re•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	mSåög
> 
	mchûdªn
;

25 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

26 
public
 
	$GëChûdªn2Re•⁄£
() {

28 
public
 
	`GëChûdªn2Re•⁄£
(

29 
java
.
utû
.
Li°
<
Såög
> 
chûdªn
,

30 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

31 
this
.
chûdªn
=children;

32 
this
.
°©
=stat;

33 
	}
}

34 
public
 
	gjava
.
	gutû
.
	gLi°
<
	gSåög
> 
	$gëChûdªn
() {

35  
chûdªn
;

36 
	}
}

37 
public
 
£tChûdªn
(
java
.
utû
.
Li°
<
Såög
> 
m_
) {

38 
	gchûdªn
=
m_
;

40 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

41  
°©
;

42 
	}
}

43 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

44 
°©
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

49 
a_
.
	`°¨tVe˘‹
(
chûdªn
,"children");

50 i‡(
chûdªn
!
nuŒ
Ë{ 
Àn1
 = chûdªn.
	`size
();

51 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

52 
Såög
 
e1
 = (SåögË
chûdªn
.
	`gë
(
vidx1
);

53 
a_
.
	`wrôeSåög
(
e1
,"e1");

56 
a_
.
	`ídVe˘‹
(
chûdªn
,"children");

58 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

59 
a_
.
	`ídRec‹d
(
this
,
èg
);

60 
	}
}

61 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

62 
a_
.
	`°¨tRec‹d
(
èg
);

64 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("children");

65 i‡(
vidx1
!
nuŒ
Ë{ 
chûdªn
=
√w
 
java
.
utû
.
AºayLi°
<
Såög
>();

66 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

67 
Såög
 
e1
;

68 
e1
=
a_
.
	`ªadSåög
("e1");

69 
chûdªn
.
	`add
(
e1
);

72 
a_
.
	`ídVe˘‹
("children");

74 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

75 
a_
.
	`ªadRec‹d
(
°©
,"stat");

76 
a_
.
	`ídRec‹d
(
èg
);

77 
	}
}

78 
public
 
Såög
 
	$toSåög
() {

79 
åy
 {

80 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

81 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

82 
CsvOuçutArchive
 
a_
 =

83 
√w
 
	`CsvOuçutArchive
(
s
);

84 
a_
.
	`°¨tRec‹d
(
this
,"");

86 
a_
.
	`°¨tVe˘‹
(
chûdªn
,"children");

87 i‡(
chûdªn
!
nuŒ
Ë{ 
Àn1
 = chûdªn.
	`size
();

88 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

89 
Såög
 
e1
 = (SåögË
chûdªn
.
	`gë
(
vidx1
);

90 
a_
.
	`wrôeSåög
(
e1
,"e1");

93 
a_
.
	`ídVe˘‹
(
chûdªn
,"children");

95 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

96 
a_
.
	`ídRec‹d
(
this
,"");

97  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

98 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

99 
ex
.
	`¥ötSèckTø˚
();

102 
	}
}

103 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

104 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

105 
	`£rülize
(
¨chive
, "");

106 
	}
}

107 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

108 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

109 
	`de£rülize
(
¨chive
, "");

110 
	}
}

111 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

112 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing GetChildren2Response is unimplemented");

113 
	}
}

114 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

115 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªn2Re•⁄£
)) {

116  
Ál£
;

118 i‡(
≥î_
 =
this
) {

119  
åue
;

121 
GëChûdªn2Re•⁄£
 
≥î
 = (GëChûdªn2Re•⁄£Ë
≥î_
;

122 
boﬁón
 
ªt
 = 
Ál£
;

123 
ªt
 = 
chûdªn
.
	`equÆs
(
≥î
.children);

124 i‡(!
ªt
) Ñet;

125 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

126 i‡(!
ªt
) Ñet;

127  
ªt
;

128 
	}
}

129 
public
 
	$hashCode
() {

130 
ªsu…
 = 17;

131 
ªt
;

132 
ªt
 = 
chûdªn
.
	`hashCode
();

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134 
ªt
 = 
°©
.
	`hashCode
();

135 
ªsu…
 = 37*ªsu… + 
ªt
;

136  
ªsu…
;

137 
	}
}

138 
public
 
Såög
 
	$sig«tuª
() {

140 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildrenRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëChûdªnReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
boﬁón
 
	mw©ch
;

26 
public
 
	$GëChûdªnReque°
() {

28 
public
 
	$GëChûdªnReque°
(

29 
Såög
 
∑th
,

30 
boﬁón
 
w©ch
) {

31 
this
.
∑th
=path;

32 
this
.
w©ch
=watch;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
boﬁón
 
	$gëW©ch
() {

41  
w©ch
;

42 
	}
}

43 
public
 
	$£tW©ch
(
boﬁón
 
m_
) {

44 
w©ch
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
w©ch
=
a_
.
	`ªadBoﬁ
("watch");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªnReque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
GëChûdªnReque°
 
≥î
 = (GëChûdªnReque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
w©ch
 =
≥î
.watch)? 0 : (watch?1:-1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªnReque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
GëChûdªnReque°
 
≥î
 = (GëChûdªnReque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
w©ch
==
≥î
.watch);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = (
w©ch
)?0:1;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildrenResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëChûdªnRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	mSåög
> 
	mchûdªn
;

25 
public
 
	$GëChûdªnRe•⁄£
() {

27 
public
 
	`GëChûdªnRe•⁄£
(

28 
java
.
utû
.
Li°
<
Såög
> 
chûdªn
) {

29 
this
.
chûdªn
=children;

30 
	}
}

31 
public
 
	gjava
.
	gutû
.
	gLi°
<
	gSåög
> 
	$gëChûdªn
() {

32  
chûdªn
;

33 
	}
}

34 
public
 
£tChûdªn
(
java
.
utû
.
Li°
<
Såög
> 
m_
) {

35 
	gchûdªn
=
m_
;

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

40 
a_
.
	`°¨tVe˘‹
(
chûdªn
,"children");

41 i‡(
chûdªn
!
nuŒ
Ë{ 
Àn1
 = chûdªn.
	`size
();

42 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

43 
Såög
 
e1
 = (SåögË
chûdªn
.
	`gë
(
vidx1
);

44 
a_
.
	`wrôeSåög
(
e1
,"e1");

47 
a_
.
	`ídVe˘‹
(
chûdªn
,"children");

49 
a_
.
	`ídRec‹d
(
this
,
èg
);

50 
	}
}

51 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

52 
a_
.
	`°¨tRec‹d
(
èg
);

54 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("children");

55 i‡(
vidx1
!
nuŒ
Ë{ 
chûdªn
=
√w
 
java
.
utû
.
AºayLi°
<
Såög
>();

56 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

57 
Såög
 
e1
;

58 
e1
=
a_
.
	`ªadSåög
("e1");

59 
chûdªn
.
	`add
(
e1
);

62 
a_
.
	`ídVe˘‹
("children");

64 
a_
.
	`ídRec‹d
(
èg
);

65 
	}
}

66 
public
 
Såög
 
	$toSåög
() {

67 
åy
 {

68 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

69 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

70 
CsvOuçutArchive
 
a_
 =

71 
√w
 
	`CsvOuçutArchive
(
s
);

72 
a_
.
	`°¨tRec‹d
(
this
,"");

74 
a_
.
	`°¨tVe˘‹
(
chûdªn
,"children");

75 i‡(
chûdªn
!
nuŒ
Ë{ 
Àn1
 = chûdªn.
	`size
();

76 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

77 
Såög
 
e1
 = (SåögË
chûdªn
.
	`gë
(
vidx1
);

78 
a_
.
	`wrôeSåög
(
e1
,"e1");

81 
a_
.
	`ídVe˘‹
(
chûdªn
,"children");

83 
a_
.
	`ídRec‹d
(
this
,"");

84  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

85 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

86 
ex
.
	`¥ötSèckTø˚
();

89 
	}
}

90 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

92 
	`£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

95 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

96 
	`de£rülize
(
¨chive
, "");

97 
	}
}

98 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

99 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing GetChildrenResponse is unimplemented");

100 
	}
}

101 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

102 i‡(!(
≥î_
 
ö°™˚of
 
GëChûdªnRe•⁄£
)) {

103  
Ál£
;

105 i‡(
≥î_
 =
this
) {

106  
åue
;

108 
GëChûdªnRe•⁄£
 
≥î
 = (GëChûdªnRe•⁄£Ë
≥î_
;

109 
boﬁón
 
ªt
 = 
Ál£
;

110 
ªt
 = 
chûdªn
.
	`equÆs
(
≥î
.children);

111 i‡(!
ªt
) Ñet;

112  
ªt
;

113 
	}
}

114 
public
 
	$hashCode
() {

115 
ªsu…
 = 17;

116 
ªt
;

117 
ªt
 = 
chûdªn
.
	`hashCode
();

118 
ªsu…
 = 37*ªsu… + 
ªt
;

119  
ªsu…
;

120 
	}
}

121 
public
 
Såög
 
	$sig«tuª
() {

123 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetDataRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëD©aReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
boﬁón
 
	mw©ch
;

26 
public
 
	$GëD©aReque°
() {

28 
public
 
	$GëD©aReque°
(

29 
Såög
 
∑th
,

30 
boﬁón
 
w©ch
) {

31 
this
.
∑th
=path;

32 
this
.
w©ch
=watch;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
boﬁón
 
	$gëW©ch
() {

41  
w©ch
;

42 
	}
}

43 
public
 
	$£tW©ch
(
boﬁón
 
m_
) {

44 
w©ch
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
w©ch
=
a_
.
	`ªadBoﬁ
("watch");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeBoﬁ
(
w©ch
,"watch");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
GëD©aReque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
GëD©aReque°
 
≥î
 = (GëD©aReque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
w©ch
 =
≥î
.watch)? 0 : (watch?1:-1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
GëD©aReque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
GëD©aReque°
 
≥î
 = (GëD©aReque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
w©ch
==
≥î
.watch);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = (
w©ch
)?0:1;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetDataResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëD©aRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mbyã
[] 
	md©a
;

25 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

26 
public
 
	$GëD©aRe•⁄£
() {

28 
public
 
	$GëD©aRe•⁄£
(

29 
byã
[] 
d©a
,

30 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

31 
this
.
d©a
=data;

32 
this
.
°©
=stat;

33 
	}
}

34 
public
 
	gbyã
[] 
	$gëD©a
() {

35  
d©a
;

36 
	}
}

37 
public
 
	$£tD©a
(
byã
[] 
m_
) {

38 
d©a
=
m_
;

39 
	}
}

40 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

41  
°©
;

42 
	}
}

43 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

44 
°©
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

49 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
d©a
=
a_
.
	`ªadBuf„r
("data");

55 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

56 
a_
.
	`ªadRec‹d
(
°©
,"stat");

57 
a_
.
	`ídRec‹d
(
èg
);

58 
	}
}

59 
public
 
Såög
 
	$toSåög
() {

60 
åy
 {

61 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

62 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

63 
CsvOuçutArchive
 
a_
 =

64 
√w
 
	`CsvOuçutArchive
(
s
);

65 
a_
.
	`°¨tRec‹d
(
this
,"");

66 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

67 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

68 
a_
.
	`ídRec‹d
(
this
,"");

69  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

70 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

71 
ex
.
	`¥ötSèckTø˚
();

74 
	}
}

75 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

76 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

77 
	`£rülize
(
¨chive
, "");

78 
	}
}

79 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

80 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

81 
	`de£rülize
(
¨chive
, "");

82 
	}
}

83 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

84 i‡(!(
≥î_
 
ö°™˚of
 
GëD©aRe•⁄£
)) {

85 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

87 
GëD©aRe•⁄£
 
≥î
 = (GëD©aRe•⁄£Ë
≥î_
;

88 
ªt
 = 0;

90 
byã
[] 
my
 = 
d©a
;

91 
byã
[] 
ur
 = 
≥î
.
d©a
;

92 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

94 i‡(
ªt
 != 0) Ñet;

95 
ªt
 = 
°©
.
	`com∑ªTo
(
≥î
.stat);

96 i‡(
ªt
 != 0) Ñet;

97  
ªt
;

98 
	}
}

99 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

100 i‡(!(
≥î_
 
ö°™˚of
 
GëD©aRe•⁄£
)) {

101  
Ál£
;

103 i‡(
≥î_
 =
this
) {

104  
åue
;

106 
GëD©aRe•⁄£
 
≥î
 = (GëD©aRe•⁄£Ë
≥î_
;

107 
boﬁón
 
ªt
 = 
Ál£
;

108 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

109 i‡(!
ªt
) Ñet;

110 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

111 i‡(!
ªt
) Ñet;

112  
ªt
;

113 
	}
}

114 
public
 
	$hashCode
() {

115 
ªsu…
 = 17;

116 
ªt
;

117 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

118 
ªsu…
 = 37*ªsu… + 
ªt
;

119 
ªt
 = 
°©
.
	`hashCode
();

120 
ªsu…
 = 37*ªsu… + 
ªt
;

121  
ªsu…
;

122 
	}
}

123 
public
 
Såög
 
	$sig«tuª
() {

125 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetMaxChildrenRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëMaxChûdªnReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$GëMaxChûdªnReque°
() {

27 
public
 
	$GëMaxChûdªnReque°
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
GëMaxChûdªnReque°
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
GëMaxChûdªnReque°
 
≥î
 = (GëMaxChûdªnReque°Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
GëMaxChûdªnReque°
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
GëMaxChûdªnReque°
 
≥î
 = (GëMaxChûdªnReque°Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetMaxChildrenResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëMaxChûdªnRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mmax
;

25 
public
 
	$GëMaxChûdªnRe•⁄£
() {

27 
public
 
	$GëMaxChûdªnRe•⁄£
(

28 
max
) {

29 
this
.
max
=max;

30 
	}
}

31 
public
 
	$gëMax
() {

32  
max
;

33 
	}
}

34 
public
 
	$£tMax
(
m_
) {

35 
max
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeI¡
(
max
,"max");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
max
=
a_
.
	`ªadI¡
("max");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeI¡
(
max
,"max");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
GëMaxChûdªnRe•⁄£
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
GëMaxChûdªnRe•⁄£
 
≥î
 = (GëMaxChûdªnRe•⁄£Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = (
max
 =
≥î
.max)? 0 :((max<peer.max)?-1:1);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
GëMaxChûdªnRe•⁄£
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
GëMaxChûdªnRe•⁄£
 
≥î
 = (GëMaxChûdªnRe•⁄£Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = (
max
==
≥î
.max);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = ()
max
;

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetSASLRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cGëSASLReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mbyã
[] 
	mtokí
;

25 
public
 
	$GëSASLReque°
() {

27 
public
 
	$GëSASLReque°
(

28 
byã
[] 
tokí
) {

29 
this
.
tokí
=token;

30 
	}
}

31 
public
 
	gbyã
[] 
	$gëTokí
() {

32  
tokí
;

33 
	}
}

34 
public
 
	$£tTokí
(
byã
[] 
m_
) {

35 
tokí
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
tokí
=
a_
.
	`ªadBuf„r
("token");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
GëSASLReque°
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
GëSASLReque°
 
≥î
 = (GëSASLReque°Ë
≥î_
;

75 
ªt
 = 0;

77 
byã
[] 
my
 = 
tokí
;

78 
byã
[] 
ur
 = 
≥î
.
tokí
;

79 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

81 i‡(
ªt
 != 0) Ñet;

82  
ªt
;

83 
	}
}

84 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

85 i‡(!(
≥î_
 
ö°™˚of
 
GëSASLReque°
)) {

86  
Ál£
;

88 i‡(
≥î_
 =
this
) {

89  
åue
;

91 
GëSASLReque°
 
≥î
 = (GëSASLReque°Ë
≥î_
;

92 
boﬁón
 
ªt
 = 
Ál£
;

93 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
tokí
,
≥î
.token);

94 i‡(!
ªt
) Ñet;

95  
ªt
;

96 
	}
}

97 
public
 
	$hashCode
() {

98 
ªsu…
 = 17;

99 
ªt
;

100 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
tokí
).
	`hashCode
();

101 
ªsu…
 = 37*ªsu… + 
ªt
;

102  
ªsu…
;

103 
	}
}

104 
public
 
Såög
 
	$sig«tuª
() {

106 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/MultiHeader.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cMu…iHódî
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mty≥
;

25 
¥iv©e
 
boﬁón
 
	md⁄e
;

26 
¥iv©e
 
	mîr
;

27 
public
 
	$Mu…iHódî
() {

29 
public
 
	$Mu…iHódî
(

30 
ty≥
,

31 
boﬁón
 
d⁄e
,

32 
îr
) {

33 
this
.
ty≥
=type;

34 
this
.
d⁄e
=done;

35 
this
.
îr
=err;

36 
	}
}

37 
public
 
	$gëTy≥
() {

38  
ty≥
;

39 
	}
}

40 
public
 
	$£tTy≥
(
m_
) {

41 
ty≥
=
m_
;

42 
	}
}

43 
public
 
boﬁón
 
	$gëD⁄e
() {

44  
d⁄e
;

45 
	}
}

46 
public
 
	$£tD⁄e
(
boﬁón
 
m_
) {

47 
d⁄e
=
m_
;

48 
	}
}

49 
public
 
	$gëEº
() {

50  
îr
;

51 
	}
}

52 
public
 
	$£tEº
(
m_
) {

53 
îr
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeI¡
(
ty≥
,"type");

58 
a_
.
	`wrôeBoﬁ
(
d⁄e
,"done");

59 
a_
.
	`wrôeI¡
(
îr
,"err");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
ty≥
=
a_
.
	`ªadI¡
("type");

65 
d⁄e
=
a_
.
	`ªadBoﬁ
("done");

66 
îr
=
a_
.
	`ªadI¡
("err");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeI¡
(
ty≥
,"type");

77 
a_
.
	`wrôeBoﬁ
(
d⁄e
,"done");

78 
a_
.
	`wrôeI¡
(
îr
,"err");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
Mu…iHódî
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
Mu…iHódî
 
≥î
 = (Mu…iHódîË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

101 i‡(
ªt
 != 0) Ñet;

102 
ªt
 = (
d⁄e
 =
≥î
.done)? 0 : (done?1:-1);

103 i‡(
ªt
 != 0) Ñet;

104 
ªt
 = (
îr
 =
≥î
.err)? 0 :((err<peer.err)?-1:1);

105 i‡(
ªt
 != 0) Ñet;

106  
ªt
;

107 
	}
}

108 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

109 i‡(!(
≥î_
 
ö°™˚of
 
Mu…iHódî
)) {

110  
Ál£
;

112 i‡(
≥î_
 =
this
) {

113  
åue
;

115 
Mu…iHódî
 
≥î
 = (Mu…iHódîË
≥î_
;

116 
boﬁón
 
ªt
 = 
Ál£
;

117 
ªt
 = (
ty≥
==
≥î
.type);

118 i‡(!
ªt
) Ñet;

119 
ªt
 = (
d⁄e
==
≥î
.done);

120 i‡(!
ªt
) Ñet;

121 
ªt
 = (
îr
==
≥î
.err);

122 i‡(!
ªt
) Ñet;

123  
ªt
;

124 
	}
}

125 
public
 
	$hashCode
() {

126 
ªsu…
 = 17;

127 
ªt
;

128 
ªt
 = ()
ty≥
;

129 
ªsu…
 = 37*ªsu… + 
ªt
;

130 
ªt
 = (
d⁄e
)?0:1;

131 
ªsu…
 = 37*ªsu… + 
ªt
;

132 
ªt
 = ()
îr
;

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134  
ªsu…
;

135 
	}
}

136 
public
 
Såög
 
	$sig«tuª
() {

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ReplyHeader.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cRïlyHódî
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mxid
;

25 
¥iv©e
 
	mzxid
;

26 
¥iv©e
 
	mîr
;

27 
public
 
	$RïlyHódî
() {

29 
public
 
	$RïlyHódî
(

30 
xid
,

31 
zxid
,

32 
îr
) {

33 
this
.
xid
=xid;

34 
this
.
zxid
=zxid;

35 
this
.
îr
=err;

36 
	}
}

37 
public
 
	$gëXid
() {

38  
xid
;

39 
	}
}

40 
public
 
	$£tXid
(
m_
) {

41 
xid
=
m_
;

42 
	}
}

43 
public
 
	$gëZxid
() {

44  
zxid
;

45 
	}
}

46 
public
 
	$£tZxid
(
m_
) {

47 
zxid
=
m_
;

48 
	}
}

49 
public
 
	$gëEº
() {

50  
îr
;

51 
	}
}

52 
public
 
	$£tEº
(
m_
) {

53 
îr
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeI¡
(
xid
,"xid");

58 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

59 
a_
.
	`wrôeI¡
(
îr
,"err");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
xid
=
a_
.
	`ªadI¡
("xid");

65 
zxid
=
a_
.
	`ªadL⁄g
("zxid");

66 
îr
=
a_
.
	`ªadI¡
("err");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeI¡
(
xid
,"xid");

77 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

78 
a_
.
	`wrôeI¡
(
îr
,"err");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
RïlyHódî
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
RïlyHódî
 
≥î
 = (RïlyHódîË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = (
xid
 =
≥î
.xid)? 0 :((xid<peer.xid)?-1:1);

101 i‡(
ªt
 != 0) Ñet;

102 
ªt
 = (
zxid
 =
≥î
.zxid)? 0 :((zxid<peer.zxid)?-1:1);

103 i‡(
ªt
 != 0) Ñet;

104 
ªt
 = (
îr
 =
≥î
.err)? 0 :((err<peer.err)?-1:1);

105 i‡(
ªt
 != 0) Ñet;

106  
ªt
;

107 
	}
}

108 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

109 i‡(!(
≥î_
 
ö°™˚of
 
RïlyHódî
)) {

110  
Ál£
;

112 i‡(
≥î_
 =
this
) {

113  
åue
;

115 
RïlyHódî
 
≥î
 = (RïlyHódîË
≥î_
;

116 
boﬁón
 
ªt
 = 
Ál£
;

117 
ªt
 = (
xid
==
≥î
.xid);

118 i‡(!
ªt
) Ñet;

119 
ªt
 = (
zxid
==
≥î
.zxid);

120 i‡(!
ªt
) Ñet;

121 
ªt
 = (
îr
==
≥î
.err);

122 i‡(!
ªt
) Ñet;

123  
ªt
;

124 
	}
}

125 
public
 
	$hashCode
() {

126 
ªsu…
 = 17;

127 
ªt
;

128 
ªt
 = ()
xid
;

129 
ªsu…
 = 37*ªsu… + 
ªt
;

130 
ªt
 = (Ë(
zxid
^(zxid>>>32));

131 
ªsu…
 = 37*ªsu… + 
ªt
;

132 
ªt
 = ()
îr
;

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134  
ªsu…
;

135 
	}
}

136 
public
 
Såög
 
	$sig«tuª
() {

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/RequestHeader.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cReque°Hódî
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mxid
;

25 
¥iv©e
 
	mty≥
;

26 
public
 
	$Reque°Hódî
() {

28 
public
 
	$Reque°Hódî
(

29 
xid
,

30 
ty≥
) {

31 
this
.
xid
=xid;

32 
this
.
ty≥
=type;

33 
	}
}

34 
public
 
	$gëXid
() {

35  
xid
;

36 
	}
}

37 
public
 
	$£tXid
(
m_
) {

38 
xid
=
m_
;

39 
	}
}

40 
public
 
	$gëTy≥
() {

41  
ty≥
;

42 
	}
}

43 
public
 
	$£tTy≥
(
m_
) {

44 
ty≥
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeI¡
(
xid
,"xid");

49 
a_
.
	`wrôeI¡
(
ty≥
,"type");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
xid
=
a_
.
	`ªadI¡
("xid");

55 
ty≥
=
a_
.
	`ªadI¡
("type");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeI¡
(
xid
,"xid");

66 
a_
.
	`wrôeI¡
(
ty≥
,"type");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
Reque°Hódî
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
Reque°Hódî
 
≥î
 = (Reque°HódîË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = (
xid
 =
≥î
.xid)? 0 :((xid<peer.xid)?-1:1);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
Reque°Hódî
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
Reque°Hódî
 
≥î
 = (Reque°HódîË
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = (
xid
==
≥î
.xid);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
ty≥
==
≥î
.type);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = ()
xid
;

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
ty≥
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetACLRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëACLReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

26 
¥iv©e
 
	mvîsi⁄
;

27 
public
 
	$SëACLReque°
() {

29 
public
 
	`SëACLReque°
(

30 
Såög
 
∑th
,

31 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

32 
vîsi⁄
) {

33 
this
.
∑th
=path;

34 
this
.
a˛
=acl;

35 
this
.
vîsi⁄
=version;

36 
	}
}

37 
public
 
Såög
 
	$gëP©h
() {

38  
∑th
;

39 
	}
}

40 
public
 
	$£tP©h
(
Såög
 
m_
) {

41 
∑th
=
m_
;

42 
	}
}

43 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

44  
a˛
;

45 
	}
}

46 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

47 
	ga˛
=
m_
;

49 
public
 
	$gëVîsi⁄
() {

50  
vîsi⁄
;

51 
	}
}

52 
public
 
	$£tVîsi⁄
(
m_
) {

53 
vîsi⁄
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeSåög
(
∑th
,"path");

59 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

60 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

61 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

62 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

63 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

66 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

68 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

69 
a_
.
	`ídRec‹d
(
this
,
èg
);

70 
	}
}

71 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

72 
a_
.
	`°¨tRec‹d
(
èg
);

73 
∑th
=
a_
.
	`ªadSåög
("path");

75 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

76 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

77 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

78 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

79 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

80 
a_
.
	`ªadRec‹d
(
e1
,"e1");

81 
a˛
.
	`add
(
e1
);

84 
a_
.
	`ídVe˘‹
("acl");

86 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

87 
a_
.
	`ídRec‹d
(
èg
);

88 
	}
}

89 
public
 
Såög
 
	$toSåög
() {

90 
åy
 {

91 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

92 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

93 
CsvOuçutArchive
 
a_
 =

94 
√w
 
	`CsvOuçutArchive
(
s
);

95 
a_
.
	`°¨tRec‹d
(
this
,"");

96 
a_
.
	`wrôeSåög
(
∑th
,"path");

98 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

99 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

100 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

101 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

102 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

105 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

107 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

108 
a_
.
	`ídRec‹d
(
this
,"");

109  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

110 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

111 
ex
.
	`¥ötSèckTø˚
();

114 
	}
}

115 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

116 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

117 
	`£rülize
(
¨chive
, "");

118 
	}
}

119 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

120 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

121 
	`de£rülize
(
¨chive
, "");

122 
	}
}

123 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

124 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing SetACLRequest is unimplemented");

125 
	}
}

126 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

127 i‡(!(
≥î_
 
ö°™˚of
 
SëACLReque°
)) {

128  
Ál£
;

130 i‡(
≥î_
 =
this
) {

131  
åue
;

133 
SëACLReque°
 
≥î
 = (SëACLReque°Ë
≥î_
;

134 
boﬁón
 
ªt
 = 
Ál£
;

135 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

136 i‡(!
ªt
) Ñet;

137 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

138 i‡(!
ªt
) Ñet;

139 
ªt
 = (
vîsi⁄
==
≥î
.version);

140 i‡(!
ªt
) Ñet;

141  
ªt
;

142 
	}
}

143 
public
 
	$hashCode
() {

144 
ªsu…
 = 17;

145 
ªt
;

146 
ªt
 = 
∑th
.
	`hashCode
();

147 
ªsu…
 = 37*ªsu… + 
ªt
;

148 
ªt
 = 
a˛
.
	`hashCode
();

149 
ªsu…
 = 37*ªsu… + 
ªt
;

150 
ªt
 = ()
vîsi⁄
;

151 
ªsu…
 = 37*ªsu… + 
ªt
;

152  
ªsu…
;

153 
	}
}

154 
public
 
Såög
 
	$sig«tuª
() {

156 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetACLResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëACLRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

25 
public
 
	$SëACLRe•⁄£
() {

27 
public
 
	$SëACLRe•⁄£
(

28 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

29 
this
.
°©
=stat;

30 
	}
}

31 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

32  
°©
;

33 
	}
}

34 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

35 
°©
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

45 
a_
.
	`ªadRec‹d
(
°©
,"stat");

46 
a_
.
	`ídRec‹d
(
èg
);

47 
	}
}

48 
public
 
Såög
 
	$toSåög
() {

49 
åy
 {

50 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

51 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

52 
CsvOuçutArchive
 
a_
 =

53 
√w
 
	`CsvOuçutArchive
(
s
);

54 
a_
.
	`°¨tRec‹d
(
this
,"");

55 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

56 
a_
.
	`ídRec‹d
(
this
,"");

57  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

58 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

59 
ex
.
	`¥ötSèckTø˚
();

62 
	}
}

63 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

64 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

65 
	`£rülize
(
¨chive
, "");

66 
	}
}

67 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

68 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

69 
	`de£rülize
(
¨chive
, "");

70 
	}
}

71 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

72 i‡(!(
≥î_
 
ö°™˚of
 
SëACLRe•⁄£
)) {

73 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

75 
SëACLRe•⁄£
 
≥î
 = (SëACLRe•⁄£Ë
≥î_
;

76 
ªt
 = 0;

77 
ªt
 = 
°©
.
	`com∑ªTo
(
≥î
.stat);

78 i‡(
ªt
 != 0) Ñet;

79  
ªt
;

80 
	}
}

81 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

82 i‡(!(
≥î_
 
ö°™˚of
 
SëACLRe•⁄£
)) {

83  
Ál£
;

85 i‡(
≥î_
 =
this
) {

86  
åue
;

88 
SëACLRe•⁄£
 
≥î
 = (SëACLRe•⁄£Ë
≥î_
;

89 
boﬁón
 
ªt
 = 
Ál£
;

90 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

91 i‡(!
ªt
) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
	$hashCode
() {

95 
ªsu…
 = 17;

96 
ªt
;

97 
ªt
 = 
°©
.
	`hashCode
();

98 
ªsu…
 = 37*ªsu… + 
ªt
;

99  
ªsu…
;

100 
	}
}

101 
public
 
Såög
 
	$sig«tuª
() {

103 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetDataRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëD©aReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
¥iv©e
 
	mvîsi⁄
;

27 
public
 
	$SëD©aReque°
() {

29 
public
 
	$SëD©aReque°
(

30 
Såög
 
∑th
,

31 
byã
[] 
d©a
,

32 
vîsi⁄
) {

33 
this
.
∑th
=path;

34 
this
.
d©a
=data;

35 
this
.
vîsi⁄
=version;

36 
	}
}

37 
public
 
Såög
 
	$gëP©h
() {

38  
∑th
;

39 
	}
}

40 
public
 
	$£tP©h
(
Såög
 
m_
) {

41 
∑th
=
m_
;

42 
	}
}

43 
public
 
	gbyã
[] 
	$gëD©a
() {

44  
d©a
;

45 
	}
}

46 
public
 
	$£tD©a
(
byã
[] 
m_
) {

47 
d©a
=
m_
;

48 
	}
}

49 
public
 
	$gëVîsi⁄
() {

50  
vîsi⁄
;

51 
	}
}

52 
public
 
	$£tVîsi⁄
(
m_
) {

53 
vîsi⁄
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeSåög
(
∑th
,"path");

58 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

59 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
∑th
=
a_
.
	`ªadSåög
("path");

65 
d©a
=
a_
.
	`ªadBuf„r
("data");

66 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeSåög
(
∑th
,"path");

77 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

78 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aReque°
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
SëD©aReque°
 
≥î
 = (SëD©aReque°Ë
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

101 i‡(
ªt
 != 0) Ñet;

103 
byã
[] 
my
 = 
d©a
;

104 
byã
[] 
ur
 = 
≥î
.
d©a
;

105 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

107 i‡(
ªt
 != 0) Ñet;

108 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

109 i‡(
ªt
 != 0) Ñet;

110  
ªt
;

111 
	}
}

112 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

113 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aReque°
)) {

114  
Ál£
;

116 i‡(
≥î_
 =
this
) {

117  
åue
;

119 
SëD©aReque°
 
≥î
 = (SëD©aReque°Ë
≥î_
;

120 
boﬁón
 
ªt
 = 
Ál£
;

121 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

122 i‡(!
ªt
) Ñet;

123 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

124 i‡(!
ªt
) Ñet;

125 
ªt
 = (
vîsi⁄
==
≥î
.version);

126 i‡(!
ªt
) Ñet;

127  
ªt
;

128 
	}
}

129 
public
 
	$hashCode
() {

130 
ªsu…
 = 17;

131 
ªt
;

132 
ªt
 = 
∑th
.
	`hashCode
();

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

135 
ªsu…
 = 37*ªsu… + 
ªt
;

136 
ªt
 = ()
vîsi⁄
;

137 
ªsu…
 = 37*ªsu… + 
ªt
;

138  
ªsu…
;

139 
	}
}

140 
public
 
Såög
 
	$sig«tuª
() {

142 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetDataResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëD©aRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
Sèt
 
	m°©
;

25 
public
 
	$SëD©aRe•⁄£
() {

27 
public
 
	$SëD©aRe•⁄£
(

28 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
°©
) {

29 
this
.
°©
=stat;

30 
	}
}

31 
public
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
Sèt
 
	$gëSèt
() {

32  
°©
;

33 
	}
}

34 
public
 
	$£tSèt
(
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Sèt
 
m_
) {

35 
°©
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
°©

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Sèt
();

45 
a_
.
	`ªadRec‹d
(
°©
,"stat");

46 
a_
.
	`ídRec‹d
(
èg
);

47 
	}
}

48 
public
 
Såög
 
	$toSåög
() {

49 
åy
 {

50 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

51 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

52 
CsvOuçutArchive
 
a_
 =

53 
√w
 
	`CsvOuçutArchive
(
s
);

54 
a_
.
	`°¨tRec‹d
(
this
,"");

55 
a_
.
	`wrôeRec‹d
(
°©
,"stat");

56 
a_
.
	`ídRec‹d
(
this
,"");

57  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

58 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

59 
ex
.
	`¥ötSèckTø˚
();

62 
	}
}

63 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

64 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

65 
	`£rülize
(
¨chive
, "");

66 
	}
}

67 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

68 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

69 
	`de£rülize
(
¨chive
, "");

70 
	}
}

71 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

72 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aRe•⁄£
)) {

73 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

75 
SëD©aRe•⁄£
 
≥î
 = (SëD©aRe•⁄£Ë
≥î_
;

76 
ªt
 = 0;

77 
ªt
 = 
°©
.
	`com∑ªTo
(
≥î
.stat);

78 i‡(
ªt
 != 0) Ñet;

79  
ªt
;

80 
	}
}

81 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

82 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aRe•⁄£
)) {

83  
Ál£
;

85 i‡(
≥î_
 =
this
) {

86  
åue
;

88 
SëD©aRe•⁄£
 
≥î
 = (SëD©aRe•⁄£Ë
≥î_
;

89 
boﬁón
 
ªt
 = 
Ál£
;

90 
ªt
 = 
°©
.
	`equÆs
(
≥î
.stat);

91 i‡(!
ªt
) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
	$hashCode
() {

95 
ªsu…
 = 17;

96 
ªt
;

97 
ªt
 = 
°©
.
	`hashCode
();

98 
ªsu…
 = 37*ªsu… + 
ªt
;

99  
ªsu…
;

100 
	}
}

101 
public
 
Såög
 
	$sig«tuª
() {

103 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetMaxChildrenRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëMaxChûdªnReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mmax
;

26 
public
 
	$SëMaxChûdªnReque°
() {

28 
public
 
	$SëMaxChûdªnReque°
(

29 
Såög
 
∑th
,

30 
max
) {

31 
this
.
∑th
=path;

32 
this
.
max
=max;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
	$gëMax
() {

41  
max
;

42 
	}
}

43 
public
 
	$£tMax
(
m_
) {

44 
max
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeI¡
(
max
,"max");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
max
=
a_
.
	`ªadI¡
("max");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeI¡
(
max
,"max");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
SëMaxChûdªnReque°
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
SëMaxChûdªnReque°
 
≥î
 = (SëMaxChûdªnReque°Ë
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
max
 =
≥î
.max)? 0 :((max<peer.max)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
SëMaxChûdªnReque°
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
SëMaxChûdªnReque°
 
≥î
 = (SëMaxChûdªnReque°Ë
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
max
==
≥î
.max);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
max
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetSASLRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëSASLReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mbyã
[] 
	mtokí
;

25 
public
 
	$SëSASLReque°
() {

27 
public
 
	$SëSASLReque°
(

28 
byã
[] 
tokí
) {

29 
this
.
tokí
=token;

30 
	}
}

31 
public
 
	gbyã
[] 
	$gëTokí
() {

32  
tokí
;

33 
	}
}

34 
public
 
	$£tTokí
(
byã
[] 
m_
) {

35 
tokí
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
tokí
=
a_
.
	`ªadBuf„r
("token");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
SëSASLReque°
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
SëSASLReque°
 
≥î
 = (SëSASLReque°Ë
≥î_
;

75 
ªt
 = 0;

77 
byã
[] 
my
 = 
tokí
;

78 
byã
[] 
ur
 = 
≥î
.
tokí
;

79 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

81 i‡(
ªt
 != 0) Ñet;

82  
ªt
;

83 
	}
}

84 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

85 i‡(!(
≥î_
 
ö°™˚of
 
SëSASLReque°
)) {

86  
Ál£
;

88 i‡(
≥î_
 =
this
) {

89  
åue
;

91 
SëSASLReque°
 
≥î
 = (SëSASLReque°Ë
≥î_
;

92 
boﬁón
 
ªt
 = 
Ál£
;

93 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
tokí
,
≥î
.token);

94 i‡(!
ªt
) Ñet;

95  
ªt
;

96 
	}
}

97 
public
 
	$hashCode
() {

98 
ªsu…
 = 17;

99 
ªt
;

100 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
tokí
).
	`hashCode
();

101 
ªsu…
 = 37*ªsu… + 
ªt
;

102  
ªsu…
;

103 
	}
}

104 
public
 
Såög
 
	$sig«tuª
() {

106 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetSASLResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëSASLRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mbyã
[] 
	mtokí
;

25 
public
 
	$SëSASLRe•⁄£
() {

27 
public
 
	$SëSASLRe•⁄£
(

28 
byã
[] 
tokí
) {

29 
this
.
tokí
=token;

30 
	}
}

31 
public
 
	gbyã
[] 
	$gëTokí
() {

32  
tokí
;

33 
	}
}

34 
public
 
	$£tTokí
(
byã
[] 
m_
) {

35 
tokí
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
tokí
=
a_
.
	`ªadBuf„r
("token");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeBuf„r
(
tokí
,"token");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
SëSASLRe•⁄£
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
SëSASLRe•⁄£
 
≥î
 = (SëSASLRe•⁄£Ë
≥î_
;

75 
ªt
 = 0;

77 
byã
[] 
my
 = 
tokí
;

78 
byã
[] 
ur
 = 
≥î
.
tokí
;

79 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

81 i‡(
ªt
 != 0) Ñet;

82  
ªt
;

83 
	}
}

84 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

85 i‡(!(
≥î_
 
ö°™˚of
 
SëSASLRe•⁄£
)) {

86  
Ál£
;

88 i‡(
≥î_
 =
this
) {

89  
åue
;

91 
SëSASLRe•⁄£
 
≥î
 = (SëSASLRe•⁄£Ë
≥î_
;

92 
boﬁón
 
ªt
 = 
Ál£
;

93 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
tokí
,
≥î
.token);

94 i‡(!
ªt
) Ñet;

95  
ªt
;

96 
	}
}

97 
public
 
	$hashCode
() {

98 
ªsu…
 = 17;

99 
ªt
;

100 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
tokí
).
	`hashCode
();

101 
ªsu…
 = 37*ªsu… + 
ªt
;

102  
ªsu…
;

103 
	}
}

104 
public
 
Såög
 
	$sig«tuª
() {

106 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetWatches.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëW©ches
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mªœtiveZxid
;

25 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	mSåög
> 
	md©aW©ches
;

26 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	mSåög
> 
	mexi°W©ches
;

27 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	mSåög
> 
	mchûdW©ches
;

28 
public
 
	$SëW©ches
() {

30 
public
 
	`SëW©ches
(

31 
ªœtiveZxid
,

32 
java
.
utû
.
Li°
<
Såög
> 
d©aW©ches
,

33 
java
.
utû
.
Li°
<
Såög
> 
exi°W©ches
,

34 
java
.
utû
.
Li°
<
Såög
> 
chûdW©ches
) {

35 
this
.
ªœtiveZxid
=relativeZxid;

36 
this
.
d©aW©ches
=dataWatches;

37 
this
.
exi°W©ches
=existWatches;

38 
this
.
chûdW©ches
=childWatches;

39 
	}
}

40 
public
 
	$gëRñ©iveZxid
() {

41  
ªœtiveZxid
;

42 
	}
}

43 
public
 
	$£tRñ©iveZxid
(
m_
) {

44 
ªœtiveZxid
=
m_
;

45 
	}
}

46 
public
 
	gjava
.
	gutû
.
	gLi°
<
	gSåög
> 
	$gëD©aW©ches
() {

47  
d©aW©ches
;

48 
	}
}

49 
public
 
£tD©aW©ches
(
java
.
utû
.
Li°
<
Såög
> 
m_
) {

50 
	gd©aW©ches
=
m_
;

52 
public
 
	gjava
.
	gutû
.
	gLi°
<
	gSåög
> 
	$gëExi°W©ches
() {

53  
exi°W©ches
;

54 
	}
}

55 
public
 
£tExi°W©ches
(
java
.
utû
.
Li°
<
Såög
> 
m_
) {

56 
	gexi°W©ches
=
m_
;

58 
public
 
	gjava
.
	gutû
.
	gLi°
<
	gSåög
> 
	$gëChûdW©ches
() {

59  
chûdW©ches
;

60 
	}
}

61 
public
 
£tChûdW©ches
(
java
.
utû
.
Li°
<
Såög
> 
m_
) {

62 
	gchûdW©ches
=
m_
;

64 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

65 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

66 
a_
.
	`wrôeL⁄g
(
ªœtiveZxid
,"relativeZxid");

68 
a_
.
	`°¨tVe˘‹
(
d©aW©ches
,"dataWatches");

69 i‡(
d©aW©ches
!
nuŒ
Ë{ 
Àn1
 = d©aW©ches.
	`size
();

70 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

71 
Såög
 
e1
 = (SåögË
d©aW©ches
.
	`gë
(
vidx1
);

72 
a_
.
	`wrôeSåög
(
e1
,"e1");

75 
a_
.
	`ídVe˘‹
(
d©aW©ches
,"dataWatches");

78 
a_
.
	`°¨tVe˘‹
(
exi°W©ches
,"existWatches");

79 i‡(
exi°W©ches
!
nuŒ
Ë{ 
Àn1
 =Éxi°W©ches.
	`size
();

80 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

81 
Såög
 
e1
 = (SåögË
exi°W©ches
.
	`gë
(
vidx1
);

82 
a_
.
	`wrôeSåög
(
e1
,"e1");

85 
a_
.
	`ídVe˘‹
(
exi°W©ches
,"existWatches");

88 
a_
.
	`°¨tVe˘‹
(
chûdW©ches
,"childWatches");

89 i‡(
chûdW©ches
!
nuŒ
Ë{ 
Àn1
 = chûdW©ches.
	`size
();

90 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

91 
Såög
 
e1
 = (SåögË
chûdW©ches
.
	`gë
(
vidx1
);

92 
a_
.
	`wrôeSåög
(
e1
,"e1");

95 
a_
.
	`ídVe˘‹
(
chûdW©ches
,"childWatches");

97 
a_
.
	`ídRec‹d
(
this
,
èg
);

98 
	}
}

99 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

100 
a_
.
	`°¨tRec‹d
(
èg
);

101 
ªœtiveZxid
=
a_
.
	`ªadL⁄g
("relativeZxid");

103 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("dataWatches");

104 i‡(
vidx1
!
nuŒ
Ë{ 
d©aW©ches
=
√w
 
java
.
utû
.
AºayLi°
<
Såög
>();

105 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

106 
Såög
 
e1
;

107 
e1
=
a_
.
	`ªadSåög
("e1");

108 
d©aW©ches
.
	`add
(
e1
);

111 
a_
.
	`ídVe˘‹
("dataWatches");

114 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("existWatches");

115 i‡(
vidx1
!
nuŒ
Ë{ 
exi°W©ches
=
√w
 
java
.
utû
.
AºayLi°
<
Såög
>();

116 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

117 
Såög
 
e1
;

118 
e1
=
a_
.
	`ªadSåög
("e1");

119 
exi°W©ches
.
	`add
(
e1
);

122 
a_
.
	`ídVe˘‹
("existWatches");

125 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("childWatches");

126 i‡(
vidx1
!
nuŒ
Ë{ 
chûdW©ches
=
√w
 
java
.
utû
.
AºayLi°
<
Såög
>();

127 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

128 
Såög
 
e1
;

129 
e1
=
a_
.
	`ªadSåög
("e1");

130 
chûdW©ches
.
	`add
(
e1
);

133 
a_
.
	`ídVe˘‹
("childWatches");

135 
a_
.
	`ídRec‹d
(
èg
);

136 
	}
}

137 
public
 
Såög
 
	$toSåög
() {

138 
åy
 {

139 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

140 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

141 
CsvOuçutArchive
 
a_
 =

142 
√w
 
	`CsvOuçutArchive
(
s
);

143 
a_
.
	`°¨tRec‹d
(
this
,"");

144 
a_
.
	`wrôeL⁄g
(
ªœtiveZxid
,"relativeZxid");

146 
a_
.
	`°¨tVe˘‹
(
d©aW©ches
,"dataWatches");

147 i‡(
d©aW©ches
!
nuŒ
Ë{ 
Àn1
 = d©aW©ches.
	`size
();

148 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

149 
Såög
 
e1
 = (SåögË
d©aW©ches
.
	`gë
(
vidx1
);

150 
a_
.
	`wrôeSåög
(
e1
,"e1");

153 
a_
.
	`ídVe˘‹
(
d©aW©ches
,"dataWatches");

156 
a_
.
	`°¨tVe˘‹
(
exi°W©ches
,"existWatches");

157 i‡(
exi°W©ches
!
nuŒ
Ë{ 
Àn1
 =Éxi°W©ches.
	`size
();

158 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

159 
Såög
 
e1
 = (SåögË
exi°W©ches
.
	`gë
(
vidx1
);

160 
a_
.
	`wrôeSåög
(
e1
,"e1");

163 
a_
.
	`ídVe˘‹
(
exi°W©ches
,"existWatches");

166 
a_
.
	`°¨tVe˘‹
(
chûdW©ches
,"childWatches");

167 i‡(
chûdW©ches
!
nuŒ
Ë{ 
Àn1
 = chûdW©ches.
	`size
();

168 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

169 
Såög
 
e1
 = (SåögË
chûdW©ches
.
	`gë
(
vidx1
);

170 
a_
.
	`wrôeSåög
(
e1
,"e1");

173 
a_
.
	`ídVe˘‹
(
chûdW©ches
,"childWatches");

175 
a_
.
	`ídRec‹d
(
this
,"");

176  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

177 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

178 
ex
.
	`¥ötSèckTø˚
();

181 
	}
}

182 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

183 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

184 
	`£rülize
(
¨chive
, "");

185 
	}
}

186 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

187 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

188 
	`de£rülize
(
¨chive
, "");

189 
	}
}

190 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

191 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing SetWatches is unimplemented");

192 
	}
}

193 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

194 i‡(!(
≥î_
 
ö°™˚of
 
SëW©ches
)) {

195  
Ál£
;

197 i‡(
≥î_
 =
this
) {

198  
åue
;

200 
SëW©ches
 
≥î
 = (SëW©chesË
≥î_
;

201 
boﬁón
 
ªt
 = 
Ál£
;

202 
ªt
 = (
ªœtiveZxid
==
≥î
.relativeZxid);

203 i‡(!
ªt
) Ñet;

204 
ªt
 = 
d©aW©ches
.
	`equÆs
(
≥î
.dataWatches);

205 i‡(!
ªt
) Ñet;

206 
ªt
 = 
exi°W©ches
.
	`equÆs
(
≥î
.existWatches);

207 i‡(!
ªt
) Ñet;

208 
ªt
 = 
chûdW©ches
.
	`equÆs
(
≥î
.childWatches);

209 i‡(!
ªt
) Ñet;

210  
ªt
;

211 
	}
}

212 
public
 
	$hashCode
() {

213 
ªsu…
 = 17;

214 
ªt
;

215 
ªt
 = (Ë(
ªœtiveZxid
^(relativeZxid>>>32));

216 
ªsu…
 = 37*ªsu… + 
ªt
;

217 
ªt
 = 
d©aW©ches
.
	`hashCode
();

218 
ªsu…
 = 37*ªsu… + 
ªt
;

219 
ªt
 = 
exi°W©ches
.
	`hashCode
();

220 
ªsu…
 = 37*ªsu… + 
ªt
;

221 
ªt
 = 
chûdW©ches
.
	`hashCode
();

222 
ªsu…
 = 37*ªsu… + 
ªt
;

223  
ªsu…
;

224 
	}
}

225 
public
 
Såög
 
	$sig«tuª
() {

227 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SyncRequest.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSyncReque°
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$SyncReque°
() {

27 
public
 
	$SyncReque°
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
SyncReque°
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
SyncReque°
 
≥î
 = (SyncReque°Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
SyncReque°
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
SyncReque°
 
≥î
 = (SyncReque°Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SyncResponse.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSyncRe•⁄£
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$SyncRe•⁄£
() {

27 
public
 
	$SyncRe•⁄£
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
SyncRe•⁄£
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
SyncRe•⁄£
 
≥î
 = (SyncRe•⁄£Ë
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
SyncRe•⁄£
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
SyncRe•⁄£
 
≥î
 = (SyncRe•⁄£Ë
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/WatcherEvent.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cW©chîEvít
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mty≥
;

25 
¥iv©e
 
	m°©e
;

26 
¥iv©e
 
Såög
 
	m∑th
;

27 
public
 
	$W©chîEvít
() {

29 
public
 
	$W©chîEvít
(

30 
ty≥
,

31 
°©e
,

32 
Såög
 
∑th
) {

33 
this
.
ty≥
=type;

34 
this
.
°©e
=state;

35 
this
.
∑th
=path;

36 
	}
}

37 
public
 
	$gëTy≥
() {

38  
ty≥
;

39 
	}
}

40 
public
 
	$£tTy≥
(
m_
) {

41 
ty≥
=
m_
;

42 
	}
}

43 
public
 
	$gëSèã
() {

44  
°©e
;

45 
	}
}

46 
public
 
	$£tSèã
(
m_
) {

47 
°©e
=
m_
;

48 
	}
}

49 
public
 
Såög
 
	$gëP©h
() {

50  
∑th
;

51 
	}
}

52 
public
 
	$£tP©h
(
Såög
 
m_
) {

53 
∑th
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeI¡
(
ty≥
,"type");

58 
a_
.
	`wrôeI¡
(
°©e
,"state");

59 
a_
.
	`wrôeSåög
(
∑th
,"path");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
ty≥
=
a_
.
	`ªadI¡
("type");

65 
°©e
=
a_
.
	`ªadI¡
("state");

66 
∑th
=
a_
.
	`ªadSåög
("path");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeI¡
(
ty≥
,"type");

77 
a_
.
	`wrôeI¡
(
°©e
,"state");

78 
a_
.
	`wrôeSåög
(
∑th
,"path");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
W©chîEvít
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
W©chîEvít
 
≥î
 = (W©chîEvítË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

101 i‡(
ªt
 != 0) Ñet;

102 
ªt
 = (
°©e
 =
≥î
.state)? 0 :((state<peer.state)?-1:1);

103 i‡(
ªt
 != 0) Ñet;

104 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

105 i‡(
ªt
 != 0) Ñet;

106  
ªt
;

107 
	}
}

108 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

109 i‡(!(
≥î_
 
ö°™˚of
 
W©chîEvít
)) {

110  
Ál£
;

112 i‡(
≥î_
 =
this
) {

113  
åue
;

115 
W©chîEvít
 
≥î
 = (W©chîEvítË
≥î_
;

116 
boﬁón
 
ªt
 = 
Ál£
;

117 
ªt
 = (
ty≥
==
≥î
.type);

118 i‡(!
ªt
) Ñet;

119 
ªt
 = (
°©e
==
≥î
.state);

120 i‡(!
ªt
) Ñet;

121 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

122 i‡(!
ªt
) Ñet;

123  
ªt
;

124 
	}
}

125 
public
 
	$hashCode
() {

126 
ªsu…
 = 17;

127 
ªt
;

128 
ªt
 = ()
ty≥
;

129 
ªsu…
 = 37*ªsu… + 
ªt
;

130 
ªt
 = ()
°©e
;

131 
ªsu…
 = 37*ªsu… + 
ªt
;

132 
ªt
 = 
∑th
.
	`hashCode
();

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134  
ªsu…
;

135 
	}
}

136 
public
 
Såög
 
	$sig«tuª
() {

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/persistence/FileHeader.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cFûeHódî
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mmagic
;

25 
¥iv©e
 
	mvîsi⁄
;

26 
¥iv©e
 
	mdbid
;

27 
public
 
	$FûeHódî
() {

29 
public
 
	$FûeHódî
(

30 
magic
,

31 
vîsi⁄
,

32 
dbid
) {

33 
this
.
magic
=magic;

34 
this
.
vîsi⁄
=version;

35 
this
.
dbid
=dbid;

36 
	}
}

37 
public
 
	$gëMagic
() {

38  
magic
;

39 
	}
}

40 
public
 
	$£tMagic
(
m_
) {

41 
magic
=
m_
;

42 
	}
}

43 
public
 
	$gëVîsi⁄
() {

44  
vîsi⁄
;

45 
	}
}

46 
public
 
	$£tVîsi⁄
(
m_
) {

47 
vîsi⁄
=
m_
;

48 
	}
}

49 
public
 
	$gëDbid
() {

50  
dbid
;

51 
	}
}

52 
public
 
	$£tDbid
(
m_
) {

53 
dbid
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeI¡
(
magic
,"magic");

58 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

59 
a_
.
	`wrôeL⁄g
(
dbid
,"dbid");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
magic
=
a_
.
	`ªadI¡
("magic");

65 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

66 
dbid
=
a_
.
	`ªadL⁄g
("dbid");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeI¡
(
magic
,"magic");

77 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

78 
a_
.
	`wrôeL⁄g
(
dbid
,"dbid");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
FûeHódî
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
FûeHódî
 
≥î
 = (FûeHódîË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = (
magic
 =
≥î
.magic)? 0 :((magic<peer.magic)?-1:1);

101 i‡(
ªt
 != 0) Ñet;

102 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

103 i‡(
ªt
 != 0) Ñet;

104 
ªt
 = (
dbid
 =
≥î
.dbid)? 0 :((dbid<peer.dbid)?-1:1);

105 i‡(
ªt
 != 0) Ñet;

106  
ªt
;

107 
	}
}

108 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

109 i‡(!(
≥î_
 
ö°™˚of
 
FûeHódî
)) {

110  
Ál£
;

112 i‡(
≥î_
 =
this
) {

113  
åue
;

115 
FûeHódî
 
≥î
 = (FûeHódîË
≥î_
;

116 
boﬁón
 
ªt
 = 
Ál£
;

117 
ªt
 = (
magic
==
≥î
.magic);

118 i‡(!
ªt
) Ñet;

119 
ªt
 = (
vîsi⁄
==
≥î
.version);

120 i‡(!
ªt
) Ñet;

121 
ªt
 = (
dbid
==
≥î
.dbid);

122 i‡(!
ªt
) Ñet;

123  
ªt
;

124 
	}
}

125 
public
 
	$hashCode
() {

126 
ªsu…
 = 17;

127 
ªt
;

128 
ªt
 = ()
magic
;

129 
ªsu…
 = 37*ªsu… + 
ªt
;

130 
ªt
 = ()
vîsi⁄
;

131 
ªsu…
 = 37*ªsu… + 
ªt
;

132 
ªt
 = (Ë(
dbid
^(dbid>>>32));

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134  
ªsu…
;

135 
	}
}

136 
public
 
Såög
 
	$sig«tuª
() {

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/quorum/LearnerInfo.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cLó∫îInfo
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m£rvîid
;

25 
¥iv©e
 
	m¥ŸocﬁVîsi⁄
;

26 
public
 
	$Ló∫îInfo
() {

28 
public
 
	$Ló∫îInfo
(

29 
£rvîid
,

30 
¥ŸocﬁVîsi⁄
) {

31 
this
.
£rvîid
=serverid;

32 
this
.
¥ŸocﬁVîsi⁄
=protocolVersion;

33 
	}
}

34 
public
 
	$gëSîvîid
() {

35  
£rvîid
;

36 
	}
}

37 
public
 
	$£tSîvîid
(
m_
) {

38 
£rvîid
=
m_
;

39 
	}
}

40 
public
 
	$gëPrŸocﬁVîsi⁄
() {

41  
¥ŸocﬁVîsi⁄
;

42 
	}
}

43 
public
 
	$£tPrŸocﬁVîsi⁄
(
m_
) {

44 
¥ŸocﬁVîsi⁄
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeL⁄g
(
£rvîid
,"serverid");

49 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
£rvîid
=
a_
.
	`ªadL⁄g
("serverid");

55 
¥ŸocﬁVîsi⁄
=
a_
.
	`ªadI¡
("protocolVersion");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeL⁄g
(
£rvîid
,"serverid");

66 
a_
.
	`wrôeI¡
(
¥ŸocﬁVîsi⁄
,"protocolVersion");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
Ló∫îInfo
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
Ló∫îInfo
 
≥î
 = (Ló∫îInfoË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = (
£rvîid
 =
≥î
.serverid)? 0 :((serverid<peer.serverid)?-1:1);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
¥ŸocﬁVîsi⁄
 =
≥î
.protocolVersion)? 0 :((protocolVersion<peer.protocolVersion)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
Ló∫îInfo
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
Ló∫îInfo
 
≥î
 = (Ló∫îInfoË
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = (
£rvîid
==
≥î
.serverid);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
¥ŸocﬁVîsi⁄
==
≥î
.protocolVersion);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = (Ë(
£rvîid
^(serverid>>>32));

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
¥ŸocﬁVîsi⁄
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/quorum/QuorumPacket.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cQu‹umPackë
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mty≥
;

25 
¥iv©e
 
	mzxid
;

26 
¥iv©e
 
	mbyã
[] 
	md©a
;

27 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mId
> 
	mauthöfo
;

28 
public
 
	$Qu‹umPackë
() {

30 
public
 
	`Qu‹umPackë
(

31 
ty≥
,

32 
zxid
,

33 
byã
[] 
d©a
,

34 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
> 
authöfo
) {

35 
this
.
ty≥
=type;

36 
this
.
zxid
=zxid;

37 
this
.
d©a
=data;

38 
this
.
authöfo
=authinfo;

39 
	}
}

40 
public
 
	$gëTy≥
() {

41  
ty≥
;

42 
	}
}

43 
public
 
	$£tTy≥
(
m_
) {

44 
ty≥
=
m_
;

45 
	}
}

46 
public
 
	$gëZxid
() {

47  
zxid
;

48 
	}
}

49 
public
 
	$£tZxid
(
m_
) {

50 
zxid
=
m_
;

51 
	}
}

52 
public
 
	gbyã
[] 
	$gëD©a
() {

53  
d©a
;

54 
	}
}

55 
public
 
	$£tD©a
(
byã
[] 
m_
) {

56 
d©a
=
m_
;

57 
	}
}

58 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
> 
	$gëAuthöfo
() {

59  
authöfo
;

60 
	}
}

61 
public
 
£tAuthöfo
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
> 
m_
) {

62 
	gauthöfo
=
m_
;

64 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

65 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

66 
a_
.
	`wrôeI¡
(
ty≥
,"type");

67 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

68 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

70 
a_
.
	`°¨tVe˘‹
(
authöfo
,"authinfo");

71 i‡(
authöfo
!
nuŒ
Ë{ 
Àn1
 =áuthöfo.
	`size
();

72 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

73 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
 
e1
 = (‹g.≠ache.zookì≥r.d©a.IdË
authöfo
.
	`gë
(
vidx1
);

74 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

77 
a_
.
	`ídVe˘‹
(
authöfo
,"authinfo");

79 
a_
.
	`ídRec‹d
(
this
,
èg
);

80 
	}
}

81 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

82 
a_
.
	`°¨tRec‹d
(
èg
);

83 
ty≥
=
a_
.
	`ªadI¡
("type");

84 
zxid
=
a_
.
	`ªadL⁄g
("zxid");

85 
d©a
=
a_
.
	`ªadBuf„r
("data");

87 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("authinfo");

88 i‡(
vidx1
!
nuŒ
Ë{ 
authöfo
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
>();

89 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

90 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
 
e1
;

91 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`Id
();

92 
a_
.
	`ªadRec‹d
(
e1
,"e1");

93 
authöfo
.
	`add
(
e1
);

96 
a_
.
	`ídVe˘‹
("authinfo");

98 
a_
.
	`ídRec‹d
(
èg
);

99 
	}
}

100 
public
 
Såög
 
	$toSåög
() {

101 
åy
 {

102 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

103 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

104 
CsvOuçutArchive
 
a_
 =

105 
√w
 
	`CsvOuçutArchive
(
s
);

106 
a_
.
	`°¨tRec‹d
(
this
,"");

107 
a_
.
	`wrôeI¡
(
ty≥
,"type");

108 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

109 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

111 
a_
.
	`°¨tVe˘‹
(
authöfo
,"authinfo");

112 i‡(
authöfo
!
nuŒ
Ë{ 
Àn1
 =áuthöfo.
	`size
();

113 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

114 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
Id
 
e1
 = (‹g.≠ache.zookì≥r.d©a.IdË
authöfo
.
	`gë
(
vidx1
);

115 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

118 
a_
.
	`ídVe˘‹
(
authöfo
,"authinfo");

120 
a_
.
	`ídRec‹d
(
this
,"");

121  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

122 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

123 
ex
.
	`¥ötSèckTø˚
();

126 
	}
}

127 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

128 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

129 
	`£rülize
(
¨chive
, "");

130 
	}
}

131 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

132 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

133 
	`de£rülize
(
¨chive
, "");

134 
	}
}

135 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

136 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing QuorumPacket is unimplemented");

137 
	}
}

138 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

139 i‡(!(
≥î_
 
ö°™˚of
 
Qu‹umPackë
)) {

140  
Ál£
;

142 i‡(
≥î_
 =
this
) {

143  
åue
;

145 
Qu‹umPackë
 
≥î
 = (Qu‹umPackëË
≥î_
;

146 
boﬁón
 
ªt
 = 
Ál£
;

147 
ªt
 = (
ty≥
==
≥î
.type);

148 i‡(!
ªt
) Ñet;

149 
ªt
 = (
zxid
==
≥î
.zxid);

150 i‡(!
ªt
) Ñet;

151 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

152 i‡(!
ªt
) Ñet;

153 
ªt
 = 
authöfo
.
	`equÆs
(
≥î
.authinfo);

154 i‡(!
ªt
) Ñet;

155  
ªt
;

156 
	}
}

157 
public
 
	$hashCode
() {

158 
ªsu…
 = 17;

159 
ªt
;

160 
ªt
 = ()
ty≥
;

161 
ªsu…
 = 37*ªsu… + 
ªt
;

162 
ªt
 = (Ë(
zxid
^(zxid>>>32));

163 
ªsu…
 = 37*ªsu… + 
ªt
;

164 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

165 
ªsu…
 = 37*ªsu… + 
ªt
;

166 
ªt
 = 
authöfo
.
	`hashCode
();

167 
ªsu…
 = 37*ªsu… + 
ªt
;

168  
ªsu…
;

169 
	}
}

170 
public
 
Såög
 
	$sig«tuª
() {

172 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CheckVersionTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCheckVîsi⁄Txn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mvîsi⁄
;

26 
public
 
	$CheckVîsi⁄Txn
() {

28 
public
 
	$CheckVîsi⁄Txn
(

29 
Såög
 
∑th
,

30 
vîsi⁄
) {

31 
this
.
∑th
=path;

32 
this
.
vîsi⁄
=version;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
	$gëVîsi⁄
() {

41  
vîsi⁄
;

42 
	}
}

43 
public
 
	$£tVîsi⁄
(
m_
) {

44 
vîsi⁄
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
CheckVîsi⁄Txn
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
CheckVîsi⁄Txn
 
≥î
 = (CheckVîsi⁄TxnË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
CheckVîsi⁄Txn
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
CheckVîsi⁄Txn
 
≥î
 = (CheckVîsi⁄TxnË
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
vîsi⁄
==
≥î
.version);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
vîsi⁄
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateSessionTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCª©eSessi⁄Txn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mtimeOut
;

25 
public
 
	$Cª©eSessi⁄Txn
() {

27 
public
 
	$Cª©eSessi⁄Txn
(

28 
timeOut
) {

29 
this
.
timeOut
=timeOut;

30 
	}
}

31 
public
 
	$gëTimeOut
() {

32  
timeOut
;

33 
	}
}

34 
public
 
	$£tTimeOut
(
m_
) {

35 
timeOut
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
timeOut
=
a_
.
	`ªadI¡
("timeOut");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeI¡
(
timeOut
,"timeOut");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eSessi⁄Txn
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
Cª©eSessi⁄Txn
 
≥î
 = (Cª©eSessi⁄TxnË
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = (
timeOut
 =
≥î
.timeOut)? 0 :((timeOut<peer.timeOut)?-1:1);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eSessi⁄Txn
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
Cª©eSessi⁄Txn
 
≥î
 = (Cª©eSessi⁄TxnË
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = (
timeOut
==
≥î
.timeOut);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = ()
timeOut
;

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCª©eTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

27 
¥iv©e
 
boﬁón
 
	mïhemîÆ
;

28 
¥iv©e
 
	m∑ª¡CVîsi⁄
;

29 
public
 
	$Cª©eTxn
() {

31 
public
 
	`Cª©eTxn
(

32 
Såög
 
∑th
,

33 
byã
[] 
d©a
,

34 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

35 
boﬁón
 
ïhemîÆ
,

36 
∑ª¡CVîsi⁄
) {

37 
this
.
∑th
=path;

38 
this
.
d©a
=data;

39 
this
.
a˛
=acl;

40 
this
.
ïhemîÆ
=ephemeral;

41 
this
.
∑ª¡CVîsi⁄
=parentCVersion;

42 
	}
}

43 
public
 
Såög
 
	$gëP©h
() {

44  
∑th
;

45 
	}
}

46 
public
 
	$£tP©h
(
Såög
 
m_
) {

47 
∑th
=
m_
;

48 
	}
}

49 
public
 
	gbyã
[] 
	$gëD©a
() {

50  
d©a
;

51 
	}
}

52 
public
 
	$£tD©a
(
byã
[] 
m_
) {

53 
d©a
=
m_
;

54 
	}
}

55 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

56  
a˛
;

57 
	}
}

58 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

59 
	ga˛
=
m_
;

61 
public
 
boﬁón
 
	$gëEphemîÆ
() {

62  
ïhemîÆ
;

63 
	}
}

64 
public
 
	$£tEphemîÆ
(
boﬁón
 
m_
) {

65 
ïhemîÆ
=
m_
;

66 
	}
}

67 
public
 
	$gëP¨ítCVîsi⁄
() {

68  
∑ª¡CVîsi⁄
;

69 
	}
}

70 
public
 
	$£tP¨ítCVîsi⁄
(
m_
) {

71 
∑ª¡CVîsi⁄
=
m_
;

72 
	}
}

73 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

74 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

75 
a_
.
	`wrôeSåög
(
∑th
,"path");

76 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

78 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

79 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

80 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

81 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

82 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

85 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

87 
a_
.
	`wrôeBoﬁ
(
ïhemîÆ
,"ephemeral");

88 
a_
.
	`wrôeI¡
(
∑ª¡CVîsi⁄
,"parentCVersion");

89 
a_
.
	`ídRec‹d
(
this
,
èg
);

90 
	}
}

91 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

92 
a_
.
	`°¨tRec‹d
(
èg
);

93 
∑th
=
a_
.
	`ªadSåög
("path");

94 
d©a
=
a_
.
	`ªadBuf„r
("data");

96 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

97 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

98 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

99 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

100 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

101 
a_
.
	`ªadRec‹d
(
e1
,"e1");

102 
a˛
.
	`add
(
e1
);

105 
a_
.
	`ídVe˘‹
("acl");

107 
ïhemîÆ
=
a_
.
	`ªadBoﬁ
("ephemeral");

108 
∑ª¡CVîsi⁄
=
a_
.
	`ªadI¡
("parentCVersion");

109 
a_
.
	`ídRec‹d
(
èg
);

110 
	}
}

111 
public
 
Såög
 
	$toSåög
() {

112 
åy
 {

113 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

114 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

115 
CsvOuçutArchive
 
a_
 =

116 
√w
 
	`CsvOuçutArchive
(
s
);

117 
a_
.
	`°¨tRec‹d
(
this
,"");

118 
a_
.
	`wrôeSåög
(
∑th
,"path");

119 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

121 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

122 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

123 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

124 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

125 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

128 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

130 
a_
.
	`wrôeBoﬁ
(
ïhemîÆ
,"ephemeral");

131 
a_
.
	`wrôeI¡
(
∑ª¡CVîsi⁄
,"parentCVersion");

132 
a_
.
	`ídRec‹d
(
this
,"");

133  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

134 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

135 
ex
.
	`¥ötSèckTø˚
();

138 
	}
}

139 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

140 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

141 
	`£rülize
(
¨chive
, "");

142 
	}
}

143 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

144 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

145 
	`de£rülize
(
¨chive
, "");

146 
	}
}

147 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

148 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing CreateTxn is unimplemented");

149 
	}
}

150 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

151 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eTxn
)) {

152  
Ál£
;

154 i‡(
≥î_
 =
this
) {

155  
åue
;

157 
Cª©eTxn
 
≥î
 = (Cª©eTxnË
≥î_
;

158 
boﬁón
 
ªt
 = 
Ál£
;

159 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

160 i‡(!
ªt
) Ñet;

161 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

162 i‡(!
ªt
) Ñet;

163 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

164 i‡(!
ªt
) Ñet;

165 
ªt
 = (
ïhemîÆ
==
≥î
.ephemeral);

166 i‡(!
ªt
) Ñet;

167 
ªt
 = (
∑ª¡CVîsi⁄
==
≥î
.parentCVersion);

168 i‡(!
ªt
) Ñet;

169  
ªt
;

170 
	}
}

171 
public
 
	$hashCode
() {

172 
ªsu…
 = 17;

173 
ªt
;

174 
ªt
 = 
∑th
.
	`hashCode
();

175 
ªsu…
 = 37*ªsu… + 
ªt
;

176 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

177 
ªsu…
 = 37*ªsu… + 
ªt
;

178 
ªt
 = 
a˛
.
	`hashCode
();

179 
ªsu…
 = 37*ªsu… + 
ªt
;

180 
ªt
 = (
ïhemîÆ
)?0:1;

181 
ªsu…
 = 37*ªsu… + 
ªt
;

182 
ªt
 = ()
∑ª¡CVîsi⁄
;

183 
ªsu…
 = 37*ªsu… + 
ªt
;

184  
ªsu…
;

185 
	}
}

186 
public
 
Såög
 
	$sig«tuª
() {

188 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateTxnV0.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cCª©eTxnV0
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

27 
¥iv©e
 
boﬁón
 
	mïhemîÆ
;

28 
public
 
	$Cª©eTxnV0
() {

30 
public
 
	`Cª©eTxnV0
(

31 
Såög
 
∑th
,

32 
byã
[] 
d©a
,

33 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

34 
boﬁón
 
ïhemîÆ
) {

35 
this
.
∑th
=path;

36 
this
.
d©a
=data;

37 
this
.
a˛
=acl;

38 
this
.
ïhemîÆ
=ephemeral;

39 
	}
}

40 
public
 
Såög
 
	$gëP©h
() {

41  
∑th
;

42 
	}
}

43 
public
 
	$£tP©h
(
Såög
 
m_
) {

44 
∑th
=
m_
;

45 
	}
}

46 
public
 
	gbyã
[] 
	$gëD©a
() {

47  
d©a
;

48 
	}
}

49 
public
 
	$£tD©a
(
byã
[] 
m_
) {

50 
d©a
=
m_
;

51 
	}
}

52 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

53  
a˛
;

54 
	}
}

55 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

56 
	ga˛
=
m_
;

58 
public
 
boﬁón
 
	$gëEphemîÆ
() {

59  
ïhemîÆ
;

60 
	}
}

61 
public
 
	$£tEphemîÆ
(
boﬁón
 
m_
) {

62 
ïhemîÆ
=
m_
;

63 
	}
}

64 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

65 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

66 
a_
.
	`wrôeSåög
(
∑th
,"path");

67 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

69 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

70 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

71 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

72 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

73 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

76 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

78 
a_
.
	`wrôeBoﬁ
(
ïhemîÆ
,"ephemeral");

79 
a_
.
	`ídRec‹d
(
this
,
èg
);

80 
	}
}

81 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

82 
a_
.
	`°¨tRec‹d
(
èg
);

83 
∑th
=
a_
.
	`ªadSåög
("path");

84 
d©a
=
a_
.
	`ªadBuf„r
("data");

86 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

87 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

88 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

89 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

90 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

91 
a_
.
	`ªadRec‹d
(
e1
,"e1");

92 
a˛
.
	`add
(
e1
);

95 
a_
.
	`ídVe˘‹
("acl");

97 
ïhemîÆ
=
a_
.
	`ªadBoﬁ
("ephemeral");

98 
a_
.
	`ídRec‹d
(
èg
);

99 
	}
}

100 
public
 
Såög
 
	$toSåög
() {

101 
åy
 {

102 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

103 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

104 
CsvOuçutArchive
 
a_
 =

105 
√w
 
	`CsvOuçutArchive
(
s
);

106 
a_
.
	`°¨tRec‹d
(
this
,"");

107 
a_
.
	`wrôeSåög
(
∑th
,"path");

108 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

110 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

111 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

112 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

113 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

114 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

117 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

119 
a_
.
	`wrôeBoﬁ
(
ïhemîÆ
,"ephemeral");

120 
a_
.
	`ídRec‹d
(
this
,"");

121  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

122 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

123 
ex
.
	`¥ötSèckTø˚
();

126 
	}
}

127 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

128 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

129 
	`£rülize
(
¨chive
, "");

130 
	}
}

131 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

132 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

133 
	`de£rülize
(
¨chive
, "");

134 
	}
}

135 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

136 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing CreateTxnV0 is unimplemented");

137 
	}
}

138 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

139 i‡(!(
≥î_
 
ö°™˚of
 
Cª©eTxnV0
)) {

140  
Ál£
;

142 i‡(
≥î_
 =
this
) {

143  
åue
;

145 
Cª©eTxnV0
 
≥î
 = (Cª©eTxnV0Ë
≥î_
;

146 
boﬁón
 
ªt
 = 
Ál£
;

147 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

148 i‡(!
ªt
) Ñet;

149 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

150 i‡(!
ªt
) Ñet;

151 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

152 i‡(!
ªt
) Ñet;

153 
ªt
 = (
ïhemîÆ
==
≥î
.ephemeral);

154 i‡(!
ªt
) Ñet;

155  
ªt
;

156 
	}
}

157 
public
 
	$hashCode
() {

158 
ªsu…
 = 17;

159 
ªt
;

160 
ªt
 = 
∑th
.
	`hashCode
();

161 
ªsu…
 = 37*ªsu… + 
ªt
;

162 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

163 
ªsu…
 = 37*ªsu… + 
ªt
;

164 
ªt
 = 
a˛
.
	`hashCode
();

165 
ªsu…
 = 37*ªsu… + 
ªt
;

166 
ªt
 = (
ïhemîÆ
)?0:1;

167 
ªsu…
 = 37*ªsu… + 
ªt
;

168  
ªsu…
;

169 
	}
}

170 
public
 
Såög
 
	$sig«tuª
() {

172 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/DeleteTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cDñëeTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
public
 
	$DñëeTxn
() {

27 
public
 
	$DñëeTxn
(

28 
Såög
 
∑th
) {

29 
this
.
∑th
=path;

30 
	}
}

31 
public
 
Såög
 
	$gëP©h
() {

32  
∑th
;

33 
	}
}

34 
public
 
	$£tP©h
(
Såög
 
m_
) {

35 
∑th
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeSåög
(
∑th
,"path");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
∑th
=
a_
.
	`ªadSåög
("path");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeSåög
(
∑th
,"path");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
DñëeTxn
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
DñëeTxn
 
≥î
 = (DñëeTxnË
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
DñëeTxn
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
DñëeTxn
 
≥î
 = (DñëeTxnË
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = 
∑th
.
	`hashCode
();

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/ErrorTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cEº‹Txn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mîr
;

25 
public
 
	$Eº‹Txn
() {

27 
public
 
	$Eº‹Txn
(

28 
îr
) {

29 
this
.
îr
=err;

30 
	}
}

31 
public
 
	$gëEº
() {

32  
îr
;

33 
	}
}

34 
public
 
	$£tEº
(
m_
) {

35 
îr
=
m_
;

36 
	}
}

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

39 
a_
.
	`wrôeI¡
(
îr
,"err");

40 
a_
.
	`ídRec‹d
(
this
,
èg
);

41 
	}
}

42 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

43 
a_
.
	`°¨tRec‹d
(
èg
);

44 
îr
=
a_
.
	`ªadI¡
("err");

45 
a_
.
	`ídRec‹d
(
èg
);

46 
	}
}

47 
public
 
Såög
 
	$toSåög
() {

48 
åy
 {

49 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

50 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

51 
CsvOuçutArchive
 
a_
 =

52 
√w
 
	`CsvOuçutArchive
(
s
);

53 
a_
.
	`°¨tRec‹d
(
this
,"");

54 
a_
.
	`wrôeI¡
(
îr
,"err");

55 
a_
.
	`ídRec‹d
(
this
,"");

56  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

57 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

58 
ex
.
	`¥ötSèckTø˚
();

61 
	}
}

62 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

63 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

64 
	`£rülize
(
¨chive
, "");

65 
	}
}

66 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

67 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

68 
	`de£rülize
(
¨chive
, "");

69 
	}
}

70 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

71 i‡(!(
≥î_
 
ö°™˚of
 
Eº‹Txn
)) {

72 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

74 
Eº‹Txn
 
≥î
 = (Eº‹TxnË
≥î_
;

75 
ªt
 = 0;

76 
ªt
 = (
îr
 =
≥î
.err)? 0 :((err<peer.err)?-1:1);

77 i‡(
ªt
 != 0) Ñet;

78  
ªt
;

79 
	}
}

80 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

81 i‡(!(
≥î_
 
ö°™˚of
 
Eº‹Txn
)) {

82  
Ál£
;

84 i‡(
≥î_
 =
this
) {

85  
åue
;

87 
Eº‹Txn
 
≥î
 = (Eº‹TxnË
≥î_
;

88 
boﬁón
 
ªt
 = 
Ál£
;

89 
ªt
 = (
îr
==
≥î
.err);

90 i‡(!
ªt
) Ñet;

91  
ªt
;

92 
	}
}

93 
public
 
	$hashCode
() {

94 
ªsu…
 = 17;

95 
ªt
;

96 
ªt
 = ()
îr
;

97 
ªsu…
 = 37*ªsu… + 
ªt
;

98  
ªsu…
;

99 
	}
}

100 
public
 
Såög
 
	$sig«tuª
() {

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/MultiTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cMu…iTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	mtxn
.
	mTxn
> 
	mtxns
;

25 
public
 
	$Mu…iTxn
() {

27 
public
 
	`Mu…iTxn
(

28 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
> 
txns
) {

29 
this
.
txns
=txns;

30 
	}
}

31 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxn
> 
	$gëTxns
() {

32  
txns
;

33 
	}
}

34 
public
 
£tTxns
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
> 
m_
) {

35 
	gtxns
=
m_
;

37 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

38 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

40 
a_
.
	`°¨tVe˘‹
(
txns
,"txns");

41 i‡(
txns
!
nuŒ
Ë{ 
Àn1
 =Åxns.
	`size
();

42 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

43 
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
 
e1
 = (‹g.≠ache.zookì≥r.txn.TxnË
txns
.
	`gë
(
vidx1
);

44 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

47 
a_
.
	`ídVe˘‹
(
txns
,"txns");

49 
a_
.
	`ídRec‹d
(
this
,
èg
);

50 
	}
}

51 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

52 
a_
.
	`°¨tRec‹d
(
èg
);

54 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("txns");

55 i‡(
vidx1
!
nuŒ
Ë{ 
txns
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
>();

56 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

57 
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
 
e1
;

58 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
txn
.
	`Txn
();

59 
a_
.
	`ªadRec‹d
(
e1
,"e1");

60 
txns
.
	`add
(
e1
);

63 
a_
.
	`ídVe˘‹
("txns");

65 
a_
.
	`ídRec‹d
(
èg
);

66 
	}
}

67 
public
 
Såög
 
	$toSåög
() {

68 
åy
 {

69 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

70 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

71 
CsvOuçutArchive
 
a_
 =

72 
√w
 
	`CsvOuçutArchive
(
s
);

73 
a_
.
	`°¨tRec‹d
(
this
,"");

75 
a_
.
	`°¨tVe˘‹
(
txns
,"txns");

76 i‡(
txns
!
nuŒ
Ë{ 
Àn1
 =Åxns.
	`size
();

77 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

78 
‹g
.
≠ache
.
zookì≥r
.
txn
.
Txn
 
e1
 = (‹g.≠ache.zookì≥r.txn.TxnË
txns
.
	`gë
(
vidx1
);

79 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

82 
a_
.
	`ídVe˘‹
(
txns
,"txns");

84 
a_
.
	`ídRec‹d
(
this
,"");

85  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

86 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

87 
ex
.
	`¥ötSèckTø˚
();

90 
	}
}

91 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

92 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

93 
	`£rülize
(
¨chive
, "");

94 
	}
}

95 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

96 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

97 
	`de£rülize
(
¨chive
, "");

98 
	}
}

99 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

100 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing MultiTxn is unimplemented");

101 
	}
}

102 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

103 i‡(!(
≥î_
 
ö°™˚of
 
Mu…iTxn
)) {

104  
Ál£
;

106 i‡(
≥î_
 =
this
) {

107  
åue
;

109 
Mu…iTxn
 
≥î
 = (Mu…iTxnË
≥î_
;

110 
boﬁón
 
ªt
 = 
Ál£
;

111 
ªt
 = 
txns
.
	`equÆs
(
≥î
.txns);

112 i‡(!
ªt
) Ñet;

113  
ªt
;

114 
	}
}

115 
public
 
	$hashCode
() {

116 
ªsu…
 = 17;

117 
ªt
;

118 
ªt
 = 
txns
.
	`hashCode
();

119 
ªsu…
 = 37*ªsu… + 
ªt
;

120  
ªsu…
;

121 
	}
}

122 
public
 
Såög
 
	$sig«tuª
() {

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetACLTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëACLTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mjava
.
	mutû
.
	mLi°
<
	m‹g
.
	m≠ache
.
	mzookì≥r
.
	md©a
.
	mACL
> 
	ma˛
;

26 
¥iv©e
 
	mvîsi⁄
;

27 
public
 
	$SëACLTxn
() {

29 
public
 
	`SëACLTxn
(

30 
Såög
 
∑th
,

31 
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
a˛
,

32 
vîsi⁄
) {

33 
this
.
∑th
=path;

34 
this
.
a˛
=acl;

35 
this
.
vîsi⁄
=version;

36 
	}
}

37 
public
 
Såög
 
	$gëP©h
() {

38  
∑th
;

39 
	}
}

40 
public
 
	$£tP©h
(
Såög
 
m_
) {

41 
∑th
=
m_
;

42 
	}
}

43 
public
 
	gjava
.
	gutû
.
	gLi°
<
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
> 
	$gëA˛
() {

44  
a˛
;

45 
	}
}

46 
public
 
£tA˛
(
java
.
utû
.
Li°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
> 
m_
) {

47 
	ga˛
=
m_
;

49 
public
 
	$gëVîsi⁄
() {

50  
vîsi⁄
;

51 
	}
}

52 
public
 
	$£tVîsi⁄
(
m_
) {

53 
vîsi⁄
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeSåög
(
∑th
,"path");

59 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

60 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

61 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

62 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

63 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

66 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

68 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

69 
a_
.
	`ídRec‹d
(
this
,
èg
);

70 
	}
}

71 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

72 
a_
.
	`°¨tRec‹d
(
èg
);

73 
∑th
=
a_
.
	`ªadSåög
("path");

75 
Index
 
vidx1
 = 
a_
.
	`°¨tVe˘‹
("acl");

76 i‡(
vidx1
!
nuŒ
Ë{ 
a˛
=
√w
 
java
.
utû
.
AºayLi°
<
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
>();

77 ; !
vidx1
.
	`d⁄e
(); vidx1.
	`ö¸
()) {

78 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
;

79 
e1

√w
 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
	`ACL
();

80 
a_
.
	`ªadRec‹d
(
e1
,"e1");

81 
a˛
.
	`add
(
e1
);

84 
a_
.
	`ídVe˘‹
("acl");

86 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

87 
a_
.
	`ídRec‹d
(
èg
);

88 
	}
}

89 
public
 
Såög
 
	$toSåög
() {

90 
åy
 {

91 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

92 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

93 
CsvOuçutArchive
 
a_
 =

94 
√w
 
	`CsvOuçutArchive
(
s
);

95 
a_
.
	`°¨tRec‹d
(
this
,"");

96 
a_
.
	`wrôeSåög
(
∑th
,"path");

98 
a_
.
	`°¨tVe˘‹
(
a˛
,"acl");

99 i‡(
a˛
!
nuŒ
Ë{ 
Àn1
 =á˛.
	`size
();

100 
vidx1
 = 0; vidx1<
Àn1
; vidx1++) {

101 
‹g
.
≠ache
.
zookì≥r
.
d©a
.
ACL
 
e1
 = (‹g.≠ache.zookì≥r.d©a.ACLË
a˛
.
	`gë
(
vidx1
);

102 
a_
.
	`wrôeRec‹d
(
e1
,"e1");

105 
a_
.
	`ídVe˘‹
(
a˛
,"acl");

107 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

108 
a_
.
	`ídRec‹d
(
this
,"");

109  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

110 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

111 
ex
.
	`¥ötSèckTø˚
();

114 
	}
}

115 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

116 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

117 
	`£rülize
(
¨chive
, "");

118 
	}
}

119 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

120 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

121 
	`de£rülize
(
¨chive
, "");

122 
	}
}

123 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

124 
throw
 
√w
 
	`Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("comparing SetACLTxn is unimplemented");

125 
	}
}

126 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

127 i‡(!(
≥î_
 
ö°™˚of
 
SëACLTxn
)) {

128  
Ál£
;

130 i‡(
≥î_
 =
this
) {

131  
åue
;

133 
SëACLTxn
 
≥î
 = (SëACLTxnË
≥î_
;

134 
boﬁón
 
ªt
 = 
Ál£
;

135 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

136 i‡(!
ªt
) Ñet;

137 
ªt
 = 
a˛
.
	`equÆs
(
≥î
.acl);

138 i‡(!
ªt
) Ñet;

139 
ªt
 = (
vîsi⁄
==
≥î
.version);

140 i‡(!
ªt
) Ñet;

141  
ªt
;

142 
	}
}

143 
public
 
	$hashCode
() {

144 
ªsu…
 = 17;

145 
ªt
;

146 
ªt
 = 
∑th
.
	`hashCode
();

147 
ªsu…
 = 37*ªsu… + 
ªt
;

148 
ªt
 = 
a˛
.
	`hashCode
();

149 
ªsu…
 = 37*ªsu… + 
ªt
;

150 
ªt
 = ()
vîsi⁄
;

151 
ªsu…
 = 37*ªsu… + 
ªt
;

152  
ªsu…
;

153 
	}
}

154 
public
 
Såög
 
	$sig«tuª
() {

156 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetDataTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëD©aTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
¥iv©e
 
	mvîsi⁄
;

27 
public
 
	$SëD©aTxn
() {

29 
public
 
	$SëD©aTxn
(

30 
Såög
 
∑th
,

31 
byã
[] 
d©a
,

32 
vîsi⁄
) {

33 
this
.
∑th
=path;

34 
this
.
d©a
=data;

35 
this
.
vîsi⁄
=version;

36 
	}
}

37 
public
 
Såög
 
	$gëP©h
() {

38  
∑th
;

39 
	}
}

40 
public
 
	$£tP©h
(
Såög
 
m_
) {

41 
∑th
=
m_
;

42 
	}
}

43 
public
 
	gbyã
[] 
	$gëD©a
() {

44  
d©a
;

45 
	}
}

46 
public
 
	$£tD©a
(
byã
[] 
m_
) {

47 
d©a
=
m_
;

48 
	}
}

49 
public
 
	$gëVîsi⁄
() {

50  
vîsi⁄
;

51 
	}
}

52 
public
 
	$£tVîsi⁄
(
m_
) {

53 
vîsi⁄
=
m_
;

54 
	}
}

55 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

56 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

57 
a_
.
	`wrôeSåög
(
∑th
,"path");

58 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

59 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

60 
a_
.
	`ídRec‹d
(
this
,
èg
);

61 
	}
}

62 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

63 
a_
.
	`°¨tRec‹d
(
èg
);

64 
∑th
=
a_
.
	`ªadSåög
("path");

65 
d©a
=
a_
.
	`ªadBuf„r
("data");

66 
vîsi⁄
=
a_
.
	`ªadI¡
("version");

67 
a_
.
	`ídRec‹d
(
èg
);

68 
	}
}

69 
public
 
Såög
 
	$toSåög
() {

70 
åy
 {

71 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

72 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

73 
CsvOuçutArchive
 
a_
 =

74 
√w
 
	`CsvOuçutArchive
(
s
);

75 
a_
.
	`°¨tRec‹d
(
this
,"");

76 
a_
.
	`wrôeSåög
(
∑th
,"path");

77 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

78 
a_
.
	`wrôeI¡
(
vîsi⁄
,"version");

79 
a_
.
	`ídRec‹d
(
this
,"");

80  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

81 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

82 
ex
.
	`¥ötSèckTø˚
();

85 
	}
}

86 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

87 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

88 
	`£rülize
(
¨chive
, "");

89 
	}
}

90 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

91 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

92 
	`de£rülize
(
¨chive
, "");

93 
	}
}

94 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

95 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aTxn
)) {

96 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

98 
SëD©aTxn
 
≥î
 = (SëD©aTxnË
≥î_
;

99 
ªt
 = 0;

100 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

101 i‡(
ªt
 != 0) Ñet;

103 
byã
[] 
my
 = 
d©a
;

104 
byã
[] 
ur
 = 
≥î
.
d©a
;

105 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

107 i‡(
ªt
 != 0) Ñet;

108 
ªt
 = (
vîsi⁄
 =
≥î
.version)? 0 :((version<peer.version)?-1:1);

109 i‡(
ªt
 != 0) Ñet;

110  
ªt
;

111 
	}
}

112 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

113 i‡(!(
≥î_
 
ö°™˚of
 
SëD©aTxn
)) {

114  
Ál£
;

116 i‡(
≥î_
 =
this
) {

117  
åue
;

119 
SëD©aTxn
 
≥î
 = (SëD©aTxnË
≥î_
;

120 
boﬁón
 
ªt
 = 
Ál£
;

121 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

122 i‡(!
ªt
) Ñet;

123 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

124 i‡(!
ªt
) Ñet;

125 
ªt
 = (
vîsi⁄
==
≥î
.version);

126 i‡(!
ªt
) Ñet;

127  
ªt
;

128 
	}
}

129 
public
 
	$hashCode
() {

130 
ªsu…
 = 17;

131 
ªt
;

132 
ªt
 = 
∑th
.
	`hashCode
();

133 
ªsu…
 = 37*ªsu… + 
ªt
;

134 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

135 
ªsu…
 = 37*ªsu… + 
ªt
;

136 
ªt
 = ()
vîsi⁄
;

137 
ªsu…
 = 37*ªsu… + 
ªt
;

138  
ªsu…
;

139 
	}
}

140 
public
 
Såög
 
	$sig«tuª
() {

142 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetMaxChildrenTxn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cSëMaxChûdªnTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
Såög
 
	m∑th
;

25 
¥iv©e
 
	mmax
;

26 
public
 
	$SëMaxChûdªnTxn
() {

28 
public
 
	$SëMaxChûdªnTxn
(

29 
Såög
 
∑th
,

30 
max
) {

31 
this
.
∑th
=path;

32 
this
.
max
=max;

33 
	}
}

34 
public
 
Såög
 
	$gëP©h
() {

35  
∑th
;

36 
	}
}

37 
public
 
	$£tP©h
(
Såög
 
m_
) {

38 
∑th
=
m_
;

39 
	}
}

40 
public
 
	$gëMax
() {

41  
max
;

42 
	}
}

43 
public
 
	$£tMax
(
m_
) {

44 
max
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeSåög
(
∑th
,"path");

49 
a_
.
	`wrôeI¡
(
max
,"max");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
∑th
=
a_
.
	`ªadSåög
("path");

55 
max
=
a_
.
	`ªadI¡
("max");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeSåög
(
∑th
,"path");

66 
a_
.
	`wrôeI¡
(
max
,"max");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
SëMaxChûdªnTxn
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
SëMaxChûdªnTxn
 
≥î
 = (SëMaxChûdªnTxnË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = 
∑th
.
	`com∑ªTo
(
≥î
.path);

89 i‡(
ªt
 != 0) Ñet;

90 
ªt
 = (
max
 =
≥î
.max)? 0 :((max<peer.max)?-1:1);

91 i‡(
ªt
 != 0) Ñet;

92  
ªt
;

93 
	}
}

94 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

95 i‡(!(
≥î_
 
ö°™˚of
 
SëMaxChûdªnTxn
)) {

96  
Ál£
;

98 i‡(
≥î_
 =
this
) {

99  
åue
;

101 
SëMaxChûdªnTxn
 
≥î
 = (SëMaxChûdªnTxnË
≥î_
;

102 
boﬁón
 
ªt
 = 
Ál£
;

103 
ªt
 = 
∑th
.
	`equÆs
(
≥î
.path);

104 i‡(!
ªt
) Ñet;

105 
ªt
 = (
max
==
≥î
.max);

106 i‡(!
ªt
) Ñet;

107  
ªt
;

108 
	}
}

109 
public
 
	$hashCode
() {

110 
ªsu…
 = 17;

111 
ªt
;

112 
ªt
 = 
∑th
.
	`hashCode
();

113 
ªsu…
 = 37*ªsu… + 
ªt
;

114 
ªt
 = ()
max
;

115 
ªsu…
 = 37*ªsu… + 
ªt
;

116  
ªsu…
;

117 
	}
}

118 
public
 
Såög
 
	$sig«tuª
() {

120 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/Txn.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cTxn
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	mty≥
;

25 
¥iv©e
 
	mbyã
[] 
	md©a
;

26 
public
 
	$Txn
() {

28 
public
 
	$Txn
(

29 
ty≥
,

30 
byã
[] 
d©a
) {

31 
this
.
ty≥
=type;

32 
this
.
d©a
=data;

33 
	}
}

34 
public
 
	$gëTy≥
() {

35  
ty≥
;

36 
	}
}

37 
public
 
	$£tTy≥
(
m_
) {

38 
ty≥
=
m_
;

39 
	}
}

40 
public
 
	gbyã
[] 
	$gëD©a
() {

41  
d©a
;

42 
	}
}

43 
public
 
	$£tD©a
(
byã
[] 
m_
) {

44 
d©a
=
m_
;

45 
	}
}

46 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

47 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

48 
a_
.
	`wrôeI¡
(
ty≥
,"type");

49 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

50 
a_
.
	`ídRec‹d
(
this
,
èg
);

51 
	}
}

52 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

53 
a_
.
	`°¨tRec‹d
(
èg
);

54 
ty≥
=
a_
.
	`ªadI¡
("type");

55 
d©a
=
a_
.
	`ªadBuf„r
("data");

56 
a_
.
	`ídRec‹d
(
èg
);

57 
	}
}

58 
public
 
Såög
 
	$toSåög
() {

59 
åy
 {

60 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

61 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

62 
CsvOuçutArchive
 
a_
 =

63 
√w
 
	`CsvOuçutArchive
(
s
);

64 
a_
.
	`°¨tRec‹d
(
this
,"");

65 
a_
.
	`wrôeI¡
(
ty≥
,"type");

66 
a_
.
	`wrôeBuf„r
(
d©a
,"data");

67 
a_
.
	`ídRec‹d
(
this
,"");

68  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

69 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73 
	}
}

74 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

75 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

76 
	`£rülize
(
¨chive
, "");

77 
	}
}

78 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

79 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

80 
	`de£rülize
(
¨chive
, "");

81 
	}
}

82 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

83 i‡(!(
≥î_
 
ö°™˚of
 
Txn
)) {

84 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

86 
Txn
 
≥î
 = (TxnË
≥î_
;

87 
ªt
 = 0;

88 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

89 i‡(
ªt
 != 0) Ñet;

91 
byã
[] 
my
 = 
d©a
;

92 
byã
[] 
ur
 = 
≥î
.
d©a
;

93 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`com∑ªByãs
(
my
,0,my.
Àngth
,
ur
,0,ur.length);

95 i‡(
ªt
 != 0) Ñet;

96  
ªt
;

97 
	}
}

98 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

99 i‡(!(
≥î_
 
ö°™˚of
 
Txn
)) {

100  
Ál£
;

102 i‡(
≥î_
 =
this
) {

103  
åue
;

105 
Txn
 
≥î
 = (TxnË
≥î_
;

106 
boﬁón
 
ªt
 = 
Ál£
;

107 
ªt
 = (
ty≥
==
≥î
.type);

108 i‡(!
ªt
) Ñet;

109 
ªt
 = 
‹g
.
≠ache
.
juã
.
Utûs
.
	`bufEquÆs
(
d©a
,
≥î
.data);

110 i‡(!
ªt
) Ñet;

111  
ªt
;

112 
	}
}

113 
public
 
	$hashCode
() {

114 
ªsu…
 = 17;

115 
ªt
;

116 
ªt
 = ()
ty≥
;

117 
ªsu…
 = 37*ªsu… + 
ªt
;

118 
ªt
 = 
java
.
utû
.
Aºays
.
	`toSåög
(
d©a
).
	`hashCode
();

119 
ªsu…
 = 37*ªsu… + 
ªt
;

120  
ªsu…
;

121 
	}
}

122 
public
 
Såög
 
	$sig«tuª
() {

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/TxnHeader.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.*;

23 
public
 cœs†
	cTxnHódî
 
im∂emíts
 
	mRec‹d
 {

24 
¥iv©e
 
	m˛õ¡Id
;

25 
¥iv©e
 
	mcxid
;

26 
¥iv©e
 
	mzxid
;

27 
¥iv©e
 
	mtime
;

28 
¥iv©e
 
	mty≥
;

29 
public
 
	$TxnHódî
() {

31 
public
 
	$TxnHódî
(

32 
˛õ¡Id
,

33 
cxid
,

34 
zxid
,

35 
time
,

36 
ty≥
) {

37 
this
.
˛õ¡Id
=clientId;

38 
this
.
cxid
=cxid;

39 
this
.
zxid
=zxid;

40 
this
.
time
=time;

41 
this
.
ty≥
=type;

42 
	}
}

43 
public
 
	$gëClõ¡Id
() {

44  
˛õ¡Id
;

45 
	}
}

46 
public
 
	$£tClõ¡Id
(
m_
) {

47 
˛õ¡Id
=
m_
;

48 
	}
}

49 
public
 
	$gëCxid
() {

50  
cxid
;

51 
	}
}

52 
public
 
	$£tCxid
(
m_
) {

53 
cxid
=
m_
;

54 
	}
}

55 
public
 
	$gëZxid
() {

56  
zxid
;

57 
	}
}

58 
public
 
	$£tZxid
(
m_
) {

59 
zxid
=
m_
;

60 
	}
}

61 
public
 
	$gëTime
() {

62  
time
;

63 
	}
}

64 
public
 
	$£tTime
(
m_
) {

65 
time
=
m_
;

66 
	}
}

67 
public
 
	$gëTy≥
() {

68  
ty≥
;

69 
	}
}

70 
public
 
	$£tTy≥
(
m_
) {

71 
ty≥
=
m_
;

72 
	}
}

73 
public
 
	$£rülize
(
OuçutArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

74 
a_
.
	`°¨tRec‹d
(
this
,
èg
);

75 
a_
.
	`wrôeL⁄g
(
˛õ¡Id
,"clientId");

76 
a_
.
	`wrôeI¡
(
cxid
,"cxid");

77 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

78 
a_
.
	`wrôeL⁄g
(
time
,"time");

79 
a_
.
	`wrôeI¡
(
ty≥
,"type");

80 
a_
.
	`ídRec‹d
(
this
,
èg
);

81 
	}
}

82 
public
 
	$de£rülize
(
I≈utArchive
 
a_
, 
Såög
 
èg
Ë
throws
 
java
.
io
.
IOEx˚±i⁄
 {

83 
a_
.
	`°¨tRec‹d
(
èg
);

84 
˛õ¡Id
=
a_
.
	`ªadL⁄g
("clientId");

85 
cxid
=
a_
.
	`ªadI¡
("cxid");

86 
zxid
=
a_
.
	`ªadL⁄g
("zxid");

87 
time
=
a_
.
	`ªadL⁄g
("time");

88 
ty≥
=
a_
.
	`ªadI¡
("type");

89 
a_
.
	`ídRec‹d
(
èg
);

90 
	}
}

91 
public
 
Såög
 
	$toSåög
() {

92 
åy
 {

93 
java
.
io
.
ByãAºayOuçutSåóm
 
s
 =

94 
√w
 
java
.
io
.
	`ByãAºayOuçutSåóm
();

95 
CsvOuçutArchive
 
a_
 =

96 
√w
 
	`CsvOuçutArchive
(
s
);

97 
a_
.
	`°¨tRec‹d
(
this
,"");

98 
a_
.
	`wrôeL⁄g
(
˛õ¡Id
,"clientId");

99 
a_
.
	`wrôeI¡
(
cxid
,"cxid");

100 
a_
.
	`wrôeL⁄g
(
zxid
,"zxid");

101 
a_
.
	`wrôeL⁄g
(
time
,"time");

102 
a_
.
	`wrôeI¡
(
ty≥
,"type");

103 
a_
.
	`ídRec‹d
(
this
,"");

104  
√w
 
	`Såög
(
s
.
	`toByãAºay
(), "UTF-8");

105 } 
	`ˇtch
 (
ThrowabÀ
 
ex
) {

106 
ex
.
	`¥ötSèckTø˚
();

109 
	}
}

110 
public
 
	$wrôe
(
java
.
io
.
D©aOuçut
 
out
Ë
throws
 java.io.
IOEx˚±i⁄
 {

111 
Bö¨yOuçutArchive
 
¨chive
 = 
√w
 
	`Bö¨yOuçutArchive
(
out
);

112 
	`£rülize
(
¨chive
, "");

113 
	}
}

114 
public
 
	$ªadFõlds
(
java
.
io
.
D©aI≈ut
 
ö
Ë
throws
 java.io.
IOEx˚±i⁄
 {

115 
Bö¨yI≈utArchive
 
¨chive
 = 
√w
 
	`Bö¨yI≈utArchive
(
ö
);

116 
	`de£rülize
(
¨chive
, "");

117 
	}
}

118 
public
 
	$com∑ªTo
 (
Obje˘
 
≥î_
Ë
throws
 
CœssCa°Ex˚±i⁄
 {

119 i‡(!(
≥î_
 
ö°™˚of
 
TxnHódî
)) {

120 
throw
 
√w
 
	`CœssCa°Ex˚±i⁄
("Comparing differentÅypes ofÑecords.");

122 
TxnHódî
 
≥î
 = (TxnHódîË
≥î_
;

123 
ªt
 = 0;

124 
ªt
 = (
˛õ¡Id
 =
≥î
.clientId)? 0 :((clientId<peer.clientId)?-1:1);

125 i‡(
ªt
 != 0) Ñet;

126 
ªt
 = (
cxid
 =
≥î
.cxid)? 0 :((cxid<peer.cxid)?-1:1);

127 i‡(
ªt
 != 0) Ñet;

128 
ªt
 = (
zxid
 =
≥î
.zxid)? 0 :((zxid<peer.zxid)?-1:1);

129 i‡(
ªt
 != 0) Ñet;

130 
ªt
 = (
time
 =
≥î
.time)? 0 :((time<peer.time)?-1:1);

131 i‡(
ªt
 != 0) Ñet;

132 
ªt
 = (
ty≥
 =
≥î
.type)? 0 :((type<peer.type)?-1:1);

133 i‡(
ªt
 != 0) Ñet;

134  
ªt
;

135 
	}
}

136 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
≥î_
) {

137 i‡(!(
≥î_
 
ö°™˚of
 
TxnHódî
)) {

138  
Ál£
;

140 i‡(
≥î_
 =
this
) {

141  
åue
;

143 
TxnHódî
 
≥î
 = (TxnHódîË
≥î_
;

144 
boﬁón
 
ªt
 = 
Ál£
;

145 
ªt
 = (
˛õ¡Id
==
≥î
.clientId);

146 i‡(!
ªt
) Ñet;

147 
ªt
 = (
cxid
==
≥î
.cxid);

148 i‡(!
ªt
) Ñet;

149 
ªt
 = (
zxid
==
≥î
.zxid);

150 i‡(!
ªt
) Ñet;

151 
ªt
 = (
time
==
≥î
.time);

152 i‡(!
ªt
) Ñet;

153 
ªt
 = (
ty≥
==
≥î
.type);

154 i‡(!
ªt
) Ñet;

155  
ªt
;

156 
	}
}

157 
public
 
	$hashCode
() {

158 
ªsu…
 = 17;

159 
ªt
;

160 
ªt
 = (Ë(
˛õ¡Id
^(clientId>>>32));

161 
ªsu…
 = 37*ªsu… + 
ªt
;

162 
ªt
 = ()
cxid
;

163 
ªsu…
 = 37*ªsu… + 
ªt
;

164 
ªt
 = (Ë(
zxid
^(zxid>>>32));

165 
ªsu…
 = 37*ªsu… + 
ªt
;

166 
ªt
 = (Ë(
time
^(time>>>32));

167 
ªsu…
 = 37*ªsu… + 
ªt
;

168 
ªt
 = ()
ty≥
;

169 
ªsu…
 = 37*ªsu… + 
ªt
;

170  
ªsu…
;

171 
	}
}

172 
public
 
Såög
 
	$sig«tuª
() {

174 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/version/Info.java

21 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gvîsi⁄
;

23 
public
 
öãrÁ˚
 
	gInfo
 {

24 
public
 
föÆ
 
	gMAJOR
=3;

25 
public
 
föÆ
 
	gMINOR
=4;

26 
public
 
föÆ
 
	gMICRO
=5;

27 
public
 
föÆ
 
Såög
 
	gQUALIFIER
=
nuŒ
;

28 
public
 
föÆ
 
	gREVISION
=-1;

29 
public
 
föÆ
 
Såög
 
	gBUILD_DATE
="10/09/2013 01:29 GMT";

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/BinaryInputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈ut
;

22 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

29 
public
 cœs†
	cBö¨yI≈utArchive
 
im∂emíts
 
	mI≈utArchive
 {

31 
¥iv©e
 
D©aI≈ut
 
	mö
;

33 
public
 
Bö¨yI≈utArchive
 
	$gëArchive
(
I≈utSåóm
 
°rm
) {

34  
√w
 
	`Bö¨yI≈utArchive
“ew 
	`D©aI≈utSåóm
(
°rm
));

37 
¥iv©e
 cœs†
	cBö¨yIndex
 
im∂emíts
 
Index
 {

38 
¥iv©e
 
√Àms
;

39 
	`Bö¨yIndex
(
√Àms
) {

40 
this
.
√Àms
 =Çelems;

42 
public
 
boﬁón
 
	`d⁄e
() {

43  (
√Àms
 <= 0);

45 
public
 
	`ö¸
() {

46 
√Àms
--;

48 
	}
}

50 
public
 
	$Bö¨yI≈utArchive
(
D©aI≈ut
 
ö
) {

51 
this
.
ö
 = in;

52 
	}
}

54 
public
 
byã
 
	$ªadByã
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

55  
ö
.
	`ªadByã
();

56 
	}
}

58 
public
 
boﬁón
 
	$ªadBoﬁ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

59  
ö
.
	`ªadBoﬁón
();

60 
	}
}

62 
public
 
	$ªadI¡
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

63  
ö
.
	`ªadI¡
();

64 
	}
}

66 
public
 
	$ªadL⁄g
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

67  
ö
.
	`ªadL⁄g
();

68 
	}
}

70 
public
 
	$ªadFlﬂt
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

71  
ö
.
	`ªadFlﬂt
();

72 
	}
}

74 
public
 
	$ªadDoubÀ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

75  
ö
.
	`ªadDoubÀ
();

76 
	}
}

78 
public
 
Såög
 
	$ªadSåög
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

79 
Àn
 = 
ö
.
	`ªadI¡
();

80 i‡(
Àn
 =-1Ë 
nuŒ
;

81 
byã
 
b
[] = 
√w
 byã[
Àn
];

82 
ö
.
	`ªadFuŒy
(
b
);

83  
√w
 
	`Såög
(
b
, "UTF8");

84 
	}
}

86 
public
 
föÆ
 
	gmaxBuf„r
 = 
dëîmöeMaxBuf„r
();

87 
¥iv©e
 
	$dëîmöeMaxBuf„r
() {

88 
Såög
 
maxBuf„rSåög
 = 
Sy°em
.
	`gëPr›îty
("jute.maxbuffer");

89 
åy
 {

90  
I¡egî
.
	`∑r£I¡
(
maxBuf„rSåög
);

91 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

95 
	}
}

96 
public
 
	gbyã
[] 
	$ªadBuf„r
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

97 
Àn
 = 
	`ªadI¡
(
èg
);

98 i‡(
Àn
 =-1Ë 
nuŒ
;

99 i‡(
Àn
 < 0 ||Üí > 
maxBuf„r
) {

100 
throw
 
√w
 
	`IOEx˚±i⁄
("Uƒós⁄abÀÜígth = " + 
Àn
);

102 
byã
[] 
¨r
 = 
√w
 byã[
Àn
];

103 
ö
.
	`ªadFuŒy
(
¨r
);

104  
¨r
;

105 
	}
}

107 
public
 
	$ªadRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

108 
r
.
	`de£rülize
(
this
, 
èg
);

109 
	}
}

111 
public
 
	$°¨tRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

113 
public
 
	$ídRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

115 
public
 
Index
 
	$°¨tVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

116 
Àn
 = 
	`ªadI¡
(
èg
);

117 i‡(
Àn
 == -1) {

118  
nuŒ
;

120  
√w
 
	`Bö¨yIndex
(
Àn
);

121 
	}
}

123 
public
 
	$ídVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

125 
public
 
Index
 
	$°¨tM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

126  
√w
 
	`Bö¨yIndex
(
	`ªadI¡
(
èg
));

127 
	}
}

129 
public
 
	$ídM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/BinaryOutputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçut
;

22 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gTªeM≠
;

32 
public
 cœs†
	cBö¨yOuçutArchive
 
im∂emíts
 
	mOuçutArchive
 {

33 
¥iv©e
 
ByãBuf„r
 
	mbb
 = ByãBuf„r.
Æloˇã
(1024);

35 
¥iv©e
 
D©aOuçut
 
	mout
;

37 
public
 
Bö¨yOuçutArchive
 
	$gëArchive
(
OuçutSåóm
 
°rm
) {

38  
√w
 
	`Bö¨yOuçutArchive
“ew 
	`D©aOuçutSåóm
(
°rm
));

42 
public
 
	$Bö¨yOuçutArchive
(
D©aOuçut
 
out
) {

43 
this
.
out
 = out;

44 
	}
}

46 
public
 
	$wrôeByã
(
byã
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

47 
out
.
	`wrôeByã
(
b
);

48 
	}
}

50 
public
 
	$wrôeBoﬁ
(
boﬁón
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

51 
out
.
	`wrôeBoﬁón
(
b
);

52 
	}
}

54 
public
 
	$wrôeI¡
(
i
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

55 
out
.
	`wrôeI¡
(
i
);

56 
	}
}

58 
public
 
	$wrôeL⁄g
(
l
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

59 
out
.
	`wrôeL⁄g
(
l
);

60 
	}
}

62 
public
 
	$wrôeFlﬂt
(
f
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

63 
out
.
	`wrôeFlﬂt
(
f
);

64 
	}
}

66 
public
 
	$wrôeDoubÀ
(
d
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

67 
out
.
	`wrôeDoubÀ
(
d
);

68 
	}
}

76 
föÆ
 
¥iv©e
 
ByãBuf„r
 
	$°rögToByãBuf„r
(
Ch¨Sequí˚
 
s
) {

77 
bb
.
	`˛ór
();

78 
föÆ
 
Àn
 = 
s
.
	`Àngth
();

79 
i
 = 0; i < 
Àn
; i++) {

80 i‡(
bb
.
	`ªmaöög
() < 3) {

81 
ByãBuf„r
 
n
 = ByãBuf„r.
	`Æloˇã
(
bb
.
	`ˇ∑côy
() << 1);

82 
bb
.
	`Êù
();

83 
n
.
	`put
(
bb
);

84 
bb
 = 
n
;

86 
c
 = 
s
.
	`ch¨At
(
i
);

87 i‡(
c
 < 0x80) {

88 
bb
.
	`put
((
byã
Ë
c
);

89 } i‡(
c
 < 0x800) {

90 
bb
.
	`put
((
byã
Ë(0xc0 | (
c
 >> 6)));

91 
bb
.
	`put
((
byã
Ë(0x80 | (
c
 & 0x3f)));

93 
bb
.
	`put
((
byã
Ë(0xe0 | (
c
 >> 12)));

94 
bb
.
	`put
((
byã
Ë(0x80 | ((
c
 >> 6) & 0x3f)));

95 
bb
.
	`put
((
byã
Ë(0x80 | (
c
 & 0x3f)));

98 
bb
.
	`Êù
();

99  
bb
;

100 
	}
}

102 
public
 
	$wrôeSåög
(
Såög
 
s
, Såög 
èg
Ë
throws
 
IOEx˚±i⁄
 {

103 i‡(
s
 =
nuŒ
) {

104 
	`wrôeI¡
(-1, "len");

107 
ByãBuf„r
 
bb
 = 
	`°rögToByãBuf„r
(
s
);

108 
	`wrôeI¡
(
bb
.
	`ªmaöög
(), "len");

109 
out
.
	`wrôe
(
bb
.
	`¨øy
(), bb.
	`posôi⁄
(), bb.
	`limô
());

110 
	}
}

112 
public
 
	$wrôeBuf„r
(
byã
 
b¨r
[], 
Såög
 
èg
)

113 
throws
 
IOEx˚±i⁄
 {

114 i‡(
b¨r
 =
nuŒ
) {

115 
out
.
	`wrôeI¡
(-1);

118 
out
.
	`wrôeI¡
(
b¨r
.
Àngth
);

119 
out
.
	`wrôe
(
b¨r
);

120 
	}
}

122 
public
 
	$wrôeRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

123 
r
.
	`£rülize
(
this
, 
èg
);

124 
	}
}

126 
public
 
	$°¨tRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

128 
public
 
	$ídRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

130 
public
 
	$°¨tVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

131 i‡(
v
 =
nuŒ
) {

132 
	`wrôeI¡
(-1, 
èg
);

135 
	`wrôeI¡
(
v
.
	`size
(), 
èg
);

136 
	}
}

138 
public
 
	$ídVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

140 
public
 
	$°¨tM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

141 
	`wrôeI¡
(
v
.
	`size
(), 
èg
);

142 
	}
}

144 
public
 
	$ídM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/CsvInputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPushbackRódî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gUnsuµ‹ãdEncodögEx˚±i⁄
;

30 ˛as†
	cCsvI≈utArchive
 
im∂emíts
 
	mI≈utArchive
 {

32 
¥iv©e
 
PushbackRódî
 
	m°ªam
;

34 
¥iv©e
 cœs†
	cCsvIndex
 
im∂emíts
 
	mIndex
 {

35 
public
 
boﬁón
 
d⁄e
() {

36 
	mc
 = '\0';

37 
	måy
 {

38 
	mc
 = (Ë
°ªam
.
ªad
();

39 
	m°ªam
.
uƒód
(
c
);

40 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

42  (
	mc
 ='}'Ë? 
åue
 : 
Ál£
;

44 
public
 
ö¸
() {}

47 
¥iv©e
 
	$throwEx˚±i⁄OnEº‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

48 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

49 
	}
}

51 
¥iv©e
 
Såög
 
	$ªadFõld
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

52 
åy
 {

53 
SåögBuûdî
 
buf
 = 
√w
 
	`SåögBuûdî
();

54 
åue
) {

55 
c
 = (Ë
°ªam
.
	`ªad
();

56 
c
) {

58  
buf
.
	`toSåög
();

62 
°ªam
.
	`uƒód
(
c
);

63  
buf
.
	`toSåög
();

65 
buf
.
	`≠≥nd
(
c
);

68 } 
	`ˇtch
 (
IOEx˚±i⁄
 
ex
) {

69 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹Ñódög "+
èg
);

71 
	}
}

73 
CsvI≈utArchive
 
	$gëArchive
(
I≈utSåóm
 
°rm
)

74 
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
 {

75  
√w
 
	`CsvI≈utArchive
(
°rm
);

76 
	}
}

79 
public
 
	$CsvI≈utArchive
(
I≈utSåóm
 
ö
)

80 
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
 {

81 
°ªam
 = 
√w
 
	`PushbackRódî
“ew 
	`I≈utSåómRódî
(
ö
, "UTF-8"));

82 
	}
}

84 
public
 
byã
 
	$ªadByã
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

85  (
byã
Ë
	`ªadL⁄g
(
èg
);

86 
	}
}

88 
public
 
boﬁón
 
	$ªadBoﬁ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

89 
Såög
 
svÆ
 = 
	`ªadFõld
(
èg
);

90  "T".
	`equÆs
(
svÆ
Ë? 
åue
 : 
Ál£
;

91 
	}
}

93 
public
 
	$ªadI¡
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

94  (Ë
	`ªadL⁄g
(
èg
);

95 
	}
}

97 
public
 
	$ªadL⁄g
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

98 
Såög
 
svÆ
 = 
	`ªadFõld
(
èg
);

99 
åy
 {

100 
lvÆ
 = 
L⁄g
.
	`∑r£L⁄g
(
svÆ
);

101  
lvÆ
;

102 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
ex
) {

103 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

105 
	}
}

107 
public
 
	$ªadFlﬂt
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

108  (Ë
	`ªadDoubÀ
(
èg
);

109 
	}
}

111 
public
 
	$ªadDoubÀ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

112 
Såög
 
svÆ
 = 
	`ªadFõld
(
èg
);

113 
åy
 {

114 
dvÆ
 = 
DoubÀ
.
	`∑r£DoubÀ
(
svÆ
);

115  
dvÆ
;

116 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
ex
) {

117 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

119 
	}
}

121 
public
 
Såög
 
	$ªadSåög
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

122 
Såög
 
svÆ
 = 
	`ªadFõld
(
èg
);

123  
Utûs
.
	`‰omCSVSåög
(
svÆ
);

125 
	}
}

127 
public
 
	gbyã
[] 
	$ªadBuf„r
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

128 
Såög
 
svÆ
 = 
	`ªadFõld
(
èg
);

129  
Utûs
.
	`‰omCSVBuf„r
(
svÆ
);

130 
	}
}

132 
public
 
	$ªadRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

133 
r
.
	`de£rülize
(
this
, 
èg
);

134 
	}
}

136 
public
 
	$°¨tRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

137 i‡(
èg
 !
nuŒ
 && !"".
	`equÆs
(tag)) {

138 
c1
 = (Ë
°ªam
.
	`ªad
();

139 
c2
 = (Ë
°ªam
.
	`ªad
();

140 i‡(
c1
 !'s' || 
c2
 != '{') {

141 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

144 
	}
}

146 
public
 
	$ídRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

147 
c
 = (Ë
°ªam
.
	`ªad
();

148 i‡(
èg
 =
nuŒ
 || "".
	`equÆs
(tag)) {

149 i‡(
c
 != '\n' && c != '\r') {

150 
throw
 
√w
 
	`IOEx˚±i⁄
("Error deserializingÑecord.");

156 i‡(
c
 != '}') {

157 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

159 
c
 = (Ë
°ªam
.
	`ªad
();

160 i‡(
c
 != ',') {

161 
°ªam
.
	`uƒód
(
c
);

165 
	}
}

167 
public
 
Index
 
	$°¨tVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

168 
c1
 = (Ë
°ªam
.
	`ªad
();

169 
c2
 = (Ë
°ªam
.
	`ªad
();

170 i‡(
c1
 !'v' || 
c2
 != '{') {

171 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

173  
√w
 
	`CsvIndex
();

174 
	}
}

176 
public
 
	$ídVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

177 
c
 = (Ë
°ªam
.
	`ªad
();

178 i‡(
c
 != '}') {

179 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

181 
c
 = (Ë
°ªam
.
	`ªad
();

182 i‡(
c
 != ',') {

183 
°ªam
.
	`uƒód
(
c
);

186 
	}
}

188 
public
 
Index
 
	$°¨tM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

189 
c1
 = (Ë
°ªam
.
	`ªad
();

190 
c2
 = (Ë
°ªam
.
	`ªad
();

191 i‡(
c1
 !'m' || 
c2
 != '{') {

192 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

194  
√w
 
	`CsvIndex
();

195 
	}
}

197 
public
 
	$ídM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

198 
c
 = (Ë
°ªam
.
	`ªad
();

199 i‡(
c
 != '}') {

200 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
);

202 
c
 = (Ë
°ªam
.
	`ªad
();

203 i‡(
c
 != ',') {

204 
°ªam
.
	`uƒód
(
c
);

207 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/CsvOutputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gUnsuµ‹ãdEncodögEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gTªeM≠
;

31 
public
 cœs†
	cCsvOuçutArchive
 
im∂emíts
 
	mOuçutArchive
 {

33 
¥iv©e
 
PrötSåóm
 
	m°ªam
;

34 
¥iv©e
 
boﬁón
 
	misFú°
 = 
åue
;

36 
CsvOuçutArchive
 
	$gëArchive
(
OuçutSåóm
 
°rm
)

37 
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
 {

38  
√w
 
	`CsvOuçutArchive
(
°rm
);

41 
¥iv©e
 
	$throwEx˚±i⁄OnEº‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

42 i‡(
°ªam
.
	`checkEº‹
()) {

43 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ sîülizög "+
èg
);

45 
	}
}

47 
¥iv©e
 
	$¥ötCommaU∆essFú°
() {

48 i‡(!
isFú°
) {

49 
°ªam
.
	`¥öt
(",");

51 
isFú°
 = 
Ál£
;

52 
	}
}

55 
public
 
	$CsvOuçutArchive
(
OuçutSåóm
 
out
)

56 
throws
 
Unsuµ‹ãdEncodögEx˚±i⁄
 {

57 
°ªam
 = 
√w
 
	`PrötSåóm
(
out
, 
åue
, "UTF-8");

58 
	}
}

60 
public
 
	$wrôeByã
(
byã
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

61 
	`wrôeL⁄g
(()
b
, 
èg
);

62 
	}
}

64 
public
 
	$wrôeBoﬁ
(
boﬁón
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

65 
	`¥ötCommaU∆essFú°
();

66 
Såög
 
vÆ
 = 
b
 ? "T" : "F";

67 
°ªam
.
	`¥öt
(
vÆ
);

68 
	`throwEx˚±i⁄OnEº‹
(
èg
);

69 
	}
}

71 
public
 
	$wrôeI¡
(
i
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

72 
	`wrôeL⁄g
(()
i
, 
èg
);

73 
	}
}

75 
public
 
	$wrôeL⁄g
(
l
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

76 
	`¥ötCommaU∆essFú°
();

77 
°ªam
.
	`¥öt
(
l
);

78 
	`throwEx˚±i⁄OnEº‹
(
èg
);

79 
	}
}

81 
public
 
	$wrôeFlﬂt
(
f
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

82 
	`wrôeDoubÀ
(()
f
, 
èg
);

83 
	}
}

85 
public
 
	$wrôeDoubÀ
(
d
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

86 
	`¥ötCommaU∆essFú°
();

87 
°ªam
.
	`¥öt
(
d
);

88 
	`throwEx˚±i⁄OnEº‹
(
èg
);

89 
	}
}

91 
public
 
	$wrôeSåög
(
Såög
 
s
, Såög 
èg
Ë
throws
 
IOEx˚±i⁄
 {

92 
	`¥ötCommaU∆essFú°
();

93 
°ªam
.
	`¥öt
(
Utûs
.
	`toCSVSåög
(
s
));

94 
	`throwEx˚±i⁄OnEº‹
(
èg
);

95 
	}
}

97 
public
 
	$wrôeBuf„r
(
byã
 
buf
[], 
Såög
 
èg
)

98 
throws
 
IOEx˚±i⁄
 {

99 
	`¥ötCommaU∆essFú°
();

100 
°ªam
.
	`¥öt
(
Utûs
.
	`toCSVBuf„r
(
buf
));

101 
	`throwEx˚±i⁄OnEº‹
(
èg
);

102 
	}
}

104 
public
 
	$wrôeRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

105 i‡(
r
 =
nuŒ
) {

108 
r
.
	`£rülize
(
this
, 
èg
);

109 
	}
}

111 
public
 
	$°¨tRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

112 i‡(
èg
 !
nuŒ
 && !"".
	`equÆs
(tag)) {

113 
	`¥ötCommaU∆essFú°
();

114 
°ªam
.
	`¥öt
("s{");

115 
isFú°
 = 
åue
;

117 
	}
}

119 
public
 
	$ídRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

120 i‡(
èg
 =
nuŒ
 || "".
	`equÆs
(tag)) {

121 
°ªam
.
	`¥öt
("\n");

122 
isFú°
 = 
åue
;

124 
°ªam
.
	`¥öt
("}");

125 
isFú°
 = 
Ál£
;

127 
	}
}

129 
public
 
	$°¨tVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

130 
	`¥ötCommaU∆essFú°
();

131 
°ªam
.
	`¥öt
("v{");

132 
isFú°
 = 
åue
;

133 
	}
}

135 
public
 
	$ídVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

136 
°ªam
.
	`¥öt
("}");

137 
isFú°
 = 
Ál£
;

138 
	}
}

140 
public
 
	$°¨tM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

141 
	`¥ötCommaU∆essFú°
();

142 
°ªam
.
	`¥öt
("m{");

143 
isFú°
 = 
åue
;

144 
	}
}

146 
public
 
	$ídM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

147 
°ªam
.
	`¥öt
("}");

148 
isFú°
 = 
Ál£
;

149 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Index.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

35 
public
 
öãrÁ˚
 
	gIndex
 {

36 
public
 
boﬁón
 
d⁄e
();

37 
public
 
ö¸
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/InputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
public
 
öãrÁ˚
 
	gI≈utArchive
 {

28 
public
 
byã
 
ªadByã
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

29 
public
 
boﬁón
 
ªadBoﬁ
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

30 
public
 
ªadI¡
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

31 
public
 
ªadL⁄g
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

32 
public
 
ªadFlﬂt
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

33 
public
 
ªadDoubÀ
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

34 
public
 
Såög
 
ªadSåög
(Såög 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

35 
public
 
	gbyã
[] 
ªadBuf„r
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

36 
public
 
ªadRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

37 
public
 
°¨tRec‹d
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

38 
public
 
ídRec‹d
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

39 
public
 
Index
 
°¨tVe˘‹
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

40 
public
 
ídVe˘‹
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

41 
public
 
Index
 
°¨tM≠
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

42 
public
 
ídM≠
(
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/OutputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gTªeM≠
;

29 
public
 
öãrÁ˚
 
	gOuçutArchive
 {

30 
public
 
wrôeByã
(
byã
 
b
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

31 
public
 
wrôeBoﬁ
(
boﬁón
 
b
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

32 
public
 
wrôeI¡
(
i
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

33 
public
 
wrôeL⁄g
(
l
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

34 
public
 
wrôeFlﬂt
(
f
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

35 
public
 
wrôeDoubÀ
(
d
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

36 
public
 
wrôeSåög
(
Såög
 
s
, Såög 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

37 
public
 
wrôeBuf„r
(
byã
 
buf
[], 
Såög
 
èg
)

38 
throws
 
	gIOEx˚±i⁄
;

39 
public
 
wrôeRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

40 
public
 
°¨tRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

41 
public
 
ídRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

42 
public
 
°¨tVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

43 
public
 
ídVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

44 
public
 
°¨tM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

45 
public
 
ídM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Record.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
public
 
öãrÁ˚
 
	gRec‹d
 {

28 
public
 
£rülize
(
OuçutArchive
 
¨chive
, 
Såög
 
èg
)

29 
throws
 
	gIOEx˚±i⁄
;

30 
public
 
de£rülize
(
I≈utArchive
 
¨chive
, 
Såög
 
èg
)

31 
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/RecordReader.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gInvoˇti⁄T¨gëEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gMëhod
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

32 
public
 cœs†
	cRec‹dRódî
 {

34 
¥iv©e
 
I≈utArchive
 
	m¨chive
;

36 
¥iv©e
 
HashM≠
 
	m¨chiveFa˘‹y
;

39 
	m¨chiveFa˘‹y
 = 
√w
 
HashM≠
();

40 
	mCœss
[] 
	m∑øms
 = { 
I≈utSåóm
.
˛ass
 };

41 
	måy
 {

42 
	m¨chiveFa˘‹y
.
put
("binary",

43 
Bö¨yI≈utArchive
.
˛ass
.
gëDe˛¨edMëhod
(

44 "gëArchive", 
∑øms
));

45 
	m¨chiveFa˘‹y
.
put
("csv",

46 
CsvI≈utArchive
.
˛ass
.
gëDe˛¨edMëhod
(

47 "gëArchive", 
∑øms
));

48 
	m¨chiveFa˘‹y
.
put
("xml",

49 
XmlI≈utArchive
.
˛ass
.
gëDe˛¨edMëhod
(

50 "gëArchive", 
∑øms
));

51 } 
ˇtch
 (
SecurôyEx˚±i⁄
 
ex
) {

52 
	mex
.
¥ötSèckTø˚
();

53 } 
ˇtch
 (
NoSuchMëhodEx˚±i⁄
 
ex
) {

54 
	mex
.
¥ötSèckTø˚
();

58 
¥iv©e
 
I≈utArchive
 
	$¸óãArchive
(
I≈utSåóm
 
ö
, 
Såög
 
f‹m©
)

59 
throws
 
IOEx˚±i⁄
 {

60 
Mëhod
 
Á˘‹y
 = (MëhodË
¨chiveFa˘‹y
.
	`gë
(
f‹m©
);

61 i‡(
Á˘‹y
 !
nuŒ
) {

62 
Obje˘
[] 
∑øms
 = { 
ö
 };

63 
åy
 {

64  (
I≈utArchive
Ë
Á˘‹y
.
	`övoke
(
nuŒ
, 
∑øms
);

65 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
ex
) {

66 
ex
.
	`¥ötSèckTø˚
();

67 } 
	`ˇtch
 (
Invoˇti⁄T¨gëEx˚±i⁄
 
ex
) {

68 
ex
.
	`¥ötSèckTø˚
();

69 } 
	`ˇtch
 (
IŒegÆAc˚ssEx˚±i⁄
 
ex
) {

70 
ex
.
	`¥ötSèckTø˚
();

73  
nuŒ
;

74 
	}
}

80 
public
 
	$Rec‹dRódî
(
I≈utSåóm
 
ö
, 
Såög
 
f‹m©
)

81 
throws
 
IOEx˚±i⁄
 {

82 
¨chive
 = 
	`¸óãArchive
(
ö
, 
f‹m©
);

83 
	}
}

89 
public
 
	$ªad
(
Rec‹d
 
r
Ë
throws
 
IOEx˚±i⁄
 {

90 
r
.
	`de£rülize
(
¨chive
, "");

91 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/RecordWriter.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gUnsuµ‹ãdEncodögEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gInvoˇti⁄T¨gëEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gMëhod
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

33 
public
 cœs†
	cRec‹dWrôî
 {

35 
¥iv©e
 
OuçutArchive
 
	m¨chive
;

37 
¥iv©e
 
OuçutArchive
 
	$gëBö¨yArchive
(
OuçutSåóm
 
out
) {

38  
√w
 
	`Bö¨yOuçutArchive
“ew 
	`D©aOuçutSåóm
(
out
));

41 
¥iv©e
 
OuçutArchive
 
	$gëCsvArchive
(
OuçutSåóm
 
out
)

42 
throws
 
IOEx˚±i⁄
 {

43 
åy
 {

44  
√w
 
	`CsvOuçutArchive
(
out
);

45 } 
	`ˇtch
 (
Unsuµ‹ãdEncodögEx˚±i⁄
 
ex
) {

46 
throw
 
√w
 
	`IOEx˚±i⁄
("UnsupportedÉncoding UTF-8");

48 
	}
}

50 
¥iv©e
 
OuçutArchive
 
	$gëXmlArchive
(
OuçutSåóm
 
out
)

51 
throws
 
IOEx˚±i⁄
 {

52  
√w
 
	`XmlOuçutArchive
(
out
);

53 
	}
}

55 
HashM≠
 
	$c⁄°ru˘Fa˘‹y
() {

56 
HashM≠
 
Á˘‹y
 = 
√w
 
	`HashM≠
();

57 
Cœss
[] 
∑øms
 = { 
OuçutSåóm
.
˛ass
 };

58 
åy
 {

59 
Á˘‹y
.
	`put
("binary",

60 
Bö¨yOuçutArchive
.
˛ass
.
	`gëDe˛¨edMëhod
(

61 "gëArchive", 
∑øms
));

62 
Á˘‹y
.
	`put
("csv",

63 
CsvOuçutArchive
.
˛ass
.
	`gëDe˛¨edMëhod
(

64 "gëArchive", 
∑øms
));

65 
Á˘‹y
.
	`put
("xml",

66 
XmlOuçutArchive
.
˛ass
.
	`gëDe˛¨edMëhod
(

67 "gëArchive", 
∑øms
));

68 } 
	`ˇtch
 (
SecurôyEx˚±i⁄
 
ex
) {

69 
ex
.
	`¥ötSèckTø˚
();

70 } 
	`ˇtch
 (
NoSuchMëhodEx˚±i⁄
 
ex
) {

71 
ex
.
	`¥ötSèckTø˚
();

73  
Á˘‹y
;

74 
	}
}

76 
¥iv©e
 
HashM≠
 
	g¨chiveFa˘‹y
 = 
c⁄°ru˘Fa˘‹y
();

78 
¥iv©e
 
OuçutArchive
 
	$¸óãArchive
(
OuçutSåóm
 
out
,

79 
Såög
 
f‹m©
)

80 
throws
 
IOEx˚±i⁄
 {

81 
Mëhod
 
Á˘‹y
 = (MëhodË
¨chiveFa˘‹y
.
	`gë
(
f‹m©
);

82 i‡(
Á˘‹y
 !
nuŒ
) {

83 
Obje˘
[] 
∑øms
 = { 
out
 };

84 
åy
 {

85  (
OuçutArchive
Ë
Á˘‹y
.
	`övoke
(
nuŒ
, 
∑øms
);

86 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
ex
) {

87 
ex
.
	`¥ötSèckTø˚
();

88 } 
	`ˇtch
 (
Invoˇti⁄T¨gëEx˚±i⁄
 
ex
) {

89 
ex
.
	`¥ötSèckTø˚
();

90 } 
	`ˇtch
 (
IŒegÆAc˚ssEx˚±i⁄
 
ex
) {

91 
ex
.
	`¥ötSèckTø˚
();

94  
nuŒ
;

95 
	}
}

101 
public
 
	$Rec‹dWrôî
(
OuçutSåóm
 
out
, 
Såög
 
f‹m©
)

102 
throws
 
IOEx˚±i⁄
 {

103 
¨chive
 = 
	`¸óãArchive
(
out
, 
f‹m©
);

104 
	}
}

110 
public
 
	$wrôe
(
Rec‹d
 
r
Ë
throws
 
IOEx˚±i⁄
 {

111 
r
.
	`£rülize
(
¨chive
, "");

112 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Utils.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
public
 cœs†
	cUtûs
 {

30 
¥iv©e
 
	$Utûs
() {

31 
	`su≥r
();

41 
public
 
boﬁón
 
	$bufEquÆs
(
byã
 
⁄óºay
[], byã 
twﬂºay
[] ) {

42 i‡(
⁄óºay
 =
twﬂºay
Ë 
åue
;

43 
boﬁón
 
ªt
 = (
⁄óºay
.
Àngth
 =
twﬂºay
.length);

44 i‡(!
ªt
) {

45  
ªt
;

47 
idx
 = 0; idx < 
⁄óºay
.
Àngth
; idx++) {

48 i‡(
⁄óºay
[
idx
] !
twﬂºay
[idx]) {

49  
Ál£
;

52  
åue
;

53 
	}
}

55 
¥iv©e
 
föÆ
 [] 
	ghexch¨s
 = { '0', '1', '2', '3', '4', '5',

63 
Såög
 
	$toXMLSåög
(
Såög
 
s
) {

64 i‡(
s
 =
nuŒ
)

67 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

68 
idx
 = 0; idx < 
s
.
	`Àngth
(); idx++) {

69 
ch
 = 
s
.
	`ch¨At
(
idx
);

70 i‡(
ch
 == '<') {

71 
sb
.
	`≠≥nd
("&lt;");

72 } i‡(
ch
 == '&') {

73 
sb
.
	`≠≥nd
("&amp;");

74 } i‡(
ch
 == '%') {

75 
sb
.
	`≠≥nd
("%25");

76 } i‡(
ch
 < 0x20) {

77 
sb
.
	`≠≥nd
("%");

78 
sb
.
	`≠≥nd
(
hexch¨s
[
ch
/16]);

79 
sb
.
	`≠≥nd
(
hexch¨s
[
ch
%16]);

81 
sb
.
	`≠≥nd
(
ch
);

84  
sb
.
	`toSåög
();

85 
	}
}

87 
¥iv©e
 
	$h2c
(
ch
) {

88 i‡(
ch
 >= '0' && ch <= '9') {

89  
ch
 - '0';

90 } i‡(
ch
 >= 'A' && ch <= 'F') {

91  
ch
 - 'A';

92 } i‡(
ch
 >= 'a' && ch <= 'f') {

93  
ch
 - 'a';

96 
	}
}

103 
Såög
 
	$‰omXMLSåög
(
Såög
 
s
) {

104 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

105 
idx
 = 0; idx < 
s
.
	`Àngth
();) {

106 
ch
 = 
s
.
	`ch¨At
(
idx
++);

107 i‡(
ch
 == '%') {

108 
ch1
 = 
s
.
	`ch¨At
(
idx
++);

109 
ch2
 = 
s
.
	`ch¨At
(
idx
++);

110 
ªs
 = ()(
	`h2c
(
ch1
)*16 + h2c(
ch2
));

111 
sb
.
	`≠≥nd
(
ªs
);

113 
sb
.
	`≠≥nd
(
ch
);

117  
sb
.
	`toSåög
();

118 
	}
}

125 
Såög
 
	$toCSVSåög
(
Såög
 
s
) {

126 i‡(
s
 =
nuŒ
)

129 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
(
s
.
	`Àngth
()+1);

130 
sb
.
	`≠≥nd
('\'');

131 
Àn
 = 
s
.
	`Àngth
();

132 
i
 = 0; i < 
Àn
; i++) {

133 
c
 = 
s
.
	`ch¨At
(
i
);

134 
c
) {

136 
sb
.
	`≠≥nd
("%00");

139 
sb
.
	`≠≥nd
("%0A");

142 
sb
.
	`≠≥nd
("%0D");

145 
sb
.
	`≠≥nd
("%2C");

148 
sb
.
	`≠≥nd
("%7D");

151 
sb
.
	`≠≥nd
("%25");

154 
sb
.
	`≠≥nd
(
c
);

157  
sb
.
	`toSåög
();

158 
	}
}

166 
Såög
 
	$‰omCSVSåög
(
Såög
 
s
Ë
throws
 
IOEx˚±i⁄
 {

167 i‡(
s
.
	`ch¨At
(0) != '\'') {

168 
throw
 
√w
 
	`IOEx˚±i⁄
("Error deserializing string.");

170 
Àn
 = 
s
.
	`Àngth
();

171 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
(
Àn
-1);

172 
i
 = 1; i < 
Àn
; i++) {

173 
c
 = 
s
.
	`ch¨At
(
i
);

174 i‡(
c
 == '%') {

175 
ch1
 = 
s
.
	`ch¨At
(
i
+1);

176 
ch2
 = 
s
.
	`ch¨At
(
i
+2);

177 
i
 += 2;

178 i‡(
ch1
 ='0' && 
ch2
 ='0'Ë{ 
sb
.
	`≠≥nd
('\0'); }

179 i‡(
ch1
 ='0' && 
ch2
 ='A'Ë{ 
sb
.
	`≠≥nd
('\n'); }

180 i‡(
ch1
 ='0' && 
ch2
 ='D'Ë{ 
sb
.
	`≠≥nd
('\r'); }

181 i‡(
ch1
 ='2' && 
ch2
 ='C'Ë{ 
sb
.
	`≠≥nd
(','); }

182 i‡(
ch1
 ='7' && 
ch2
 ='D'Ë{ 
sb
.
	`≠≥nd
('}'); }

183 i‡(
ch1
 ='2' && 
ch2
 ='5'Ë{ 
sb
.
	`≠≥nd
('%'); }

184 {
throw
 
√w
 
	`IOEx˚±i⁄
("Error deserializing string.");}

186 
sb
.
	`≠≥nd
(
c
);

189  
sb
.
	`toSåög
();

190 
	}
}

197 
Såög
 
	$toXMLBuf„r
(
byã
 
b¨r
[]) {

198 i‡(
b¨r
 =
nuŒ
 || b¨r.
Àngth
 == 0) {

201 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
(2*
b¨r
.
Àngth
);

202 
idx
 = 0; idx < 
b¨r
.
Àngth
; idx++) {

203 
sb
.
	`≠≥nd
(
I¡egî
.
	`toHexSåög
(
b¨r
[
idx
]));

205  
sb
.
	`toSåög
();

206 
	}
}

214 
	gbyã
[] 
	$‰omXMLBuf„r
(
Såög
 
s
)

215 
throws
 
IOEx˚±i⁄
 {

216 
ByãAºayOuçutSåóm
 
°ªam
 = 
√w
 
	`ByãAºayOuçutSåóm
();

217 i‡(
s
.
	`Àngth
(Ë=0Ë{  
°ªam
.
	`toByãAºay
(); }

218 
bÀn
 = 
s
.
	`Àngth
()/2;

219 
byã
[] 
b¨r
 = 
√w
 byã[
bÀn
];

220 
idx
 = 0; idx < 
bÀn
; idx++) {

221 
c1
 = 
s
.
	`ch¨At
(2*
idx
);

222 
c2
 = 
s
.
	`ch¨At
(2*
idx
+1);

223 
b¨r
[
idx
] = 
Byã
.
	`∑r£Byã
(""+
c1
+
c2
, 16);

225 
°ªam
.
	`wrôe
(
b¨r
);

226  
°ªam
.
	`toByãAºay
();

227 
	}
}

234 
Såög
 
	$toCSVBuf„r
(
byã
 
b¨r
[]) {

235 i‡(
b¨r
 =
nuŒ
 || b¨r.
Àngth
 == 0) {

238 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
(
b¨r
.
Àngth
 + 1);

239 
sb
.
	`≠≥nd
('#');

240 
idx
 = 0; idx < 
b¨r
.
Àngth
; idx++) {

241 
sb
.
	`≠≥nd
(
I¡egî
.
	`toHexSåög
(
b¨r
[
idx
]));

243  
sb
.
	`toSåög
();

244 
	}
}

253 
	gbyã
[] 
	$‰omCSVBuf„r
(
Såög
 
s
)

254 
throws
 
IOEx˚±i⁄
 {

255 i‡(
s
.
	`ch¨At
(0) != '#') {

256 
throw
 
√w
 
	`IOEx˚±i⁄
("Error deserializing buffer.");

258 
ByãAºayOuçutSåóm
 
°ªam
 = 
√w
 
	`ByãAºayOuçutSåóm
();

259 i‡(
s
.
	`Àngth
(Ë=1Ë{  
°ªam
.
	`toByãAºay
(); }

260 
bÀn
 = (
s
.
	`Àngth
()-1)/2;

261 
byã
[] 
b¨r
 = 
√w
 byã[
bÀn
];

262 
idx
 = 0; idx < 
bÀn
; idx++) {

263 
c1
 = 
s
.
	`ch¨At
(2*
idx
+1);

264 
c2
 = 
s
.
	`ch¨At
(2*
idx
+2);

265 
b¨r
[
idx
] = 
Byã
.
	`∑r£Byã
(""+
c1
+
c2
, 16);

267 
°ªam
.
	`wrôe
(
b¨r
);

268  
°ªam
.
	`toByãAºay
();

269 
	}
}

270 
public
 
	$com∑ªByãs
(
byã
 
b1
[], 
off1
, 
Àn1
, byã 
b2
[], 
off2
, 
Àn2
) {

271 
i
;

272 
i
=0; i < 
Àn1
 && i < 
Àn2
; i++) {

273 i‡(
b1
[
off1
+
i
] !
b2
[
off2
+i]) {

274  
b1
[
off1
+
i
] < 
b2
[
off2
+1] ? -1 : 1;

277 i‡(
Àn1
 !
Àn2
) {

278  
Àn1
 < 
Àn2
 ? -1 : 1;

281 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/XmlInputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjavax
.
	gxml
.
	g∑r£rs
.
	gP¨£rC⁄figuøti⁄Ex˚±i⁄
;

26 
imp‹t
 
	gjavax
.
	gxml
.
	g∑r£rs
.
	gSAXP¨£r
;

27 
imp‹t
 
	gjavax
.
	gxml
.
	g∑r£rs
.
	gSAXP¨£rFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	gxml
.
	gßx
.
	gAâribuãs
;

30 
imp‹t
 
	g‹g
.
	gxml
.
	gßx
.
	gSAXEx˚±i⁄
;

31 
imp‹t
 
	g‹g
.
	gxml
.
	gßx
.
	ghñ≥rs
.
	gDeÁu…H™dÀr
;

35 ˛as†
	cXmlI≈utArchive
 
im∂emíts
 
	mI≈utArchive
 {

37 
¥iv©e
 cœs†
	cVÆue
 {

38 
¥iv©e
 
Såög
 
	mty≥
;

39 
¥iv©e
 
SåögBuf„r
 
	msb
;

41 
public
 
VÆue
(
Såög
 
t
) {

42 
	mty≥
 = 
t
;

43 
	msb
 = 
√w
 
SåögBuf„r
();

45 
public
 
addCh¨s
([] 
buf
, 
off£t
, 
Àn
) {

46 
	msb
.
≠≥nd
(
buf
, 
off£t
, 
Àn
);

48 
public
 
Såög
 
gëVÆue
(Ë{  
	msb
.
toSåög
(); }

49 
public
 
Såög
 
gëTy≥
(Ë{  
	mty≥
; }

52 
¥iv©e
 ˛as†
	cXMLP¨£r
 
exãnds
 
	gDeÁu…H™dÀr
 {

53 
¥iv©e
 
boﬁón
 
	gch¨sVÆid
 = 
Ál£
;

55 
¥iv©e
 
	gAºayLi°
<
	gVÆue
> 
	gvÆLi°
;

57 
¥iv©e
 
XMLP¨£r
(
AºayLi°
<
VÆue
> 
vli°
) {

58 
	gvÆLi°
 = 
vli°
;

61 
public
 
°¨tDocumít
(Ë
throws
 
	gSAXEx˚±i⁄
 {}

63 
public
 
ídDocumít
(Ë
throws
 
	gSAXEx˚±i⁄
 {}

65 
public
 
°¨tEÀmít
(
Såög
 
ns
,

66 
Såög
 
¢ame
,

67 
Såög
 
q«me
,

68 
Aâribuãs
 
©ås
Ë
throws
 
	gSAXEx˚±i⁄
 {

69 
	gch¨sVÆid
 = 
Ál£
;

70 i‡("boﬁón".
equÆs
(
q«me
) ||

71 "i4".
equÆs
(
q«me
) ||

72 "öt".
equÆs
(
q«me
) ||

73 "°rög".
equÆs
(
q«me
) ||

74 "doubÀ".
equÆs
(
q«me
) ||

75 "ex:i1".
equÆs
(
q«me
) ||

76 "ex:i8".
equÆs
(
q«me
) ||

77 "ex:Êﬂt".
equÆs
(
q«me
)) {

78 
	gch¨sVÆid
 = 
åue
;

79 
	gvÆLi°
.
add
(
√w
 
VÆue
(
q«me
));

80 } i‡("°ru˘".
equÆs
(
q«me
) ||

81 "¨øy".
equÆs
(
q«me
)) {

82 
	gvÆLi°
.
add
(
√w
 
VÆue
(
q«me
));

86 
public
 
ídEÀmít
(
Såög
 
ns
,

87 
Såög
 
¢ame
,

88 
Såög
 
q«me
Ë
throws
 
	gSAXEx˚±i⁄
 {

89 
	gch¨sVÆid
 = 
Ál£
;

90 i‡("°ru˘".
equÆs
(
q«me
) ||

91 "¨øy".
equÆs
(
q«me
)) {

92 
	gvÆLi°
.
add
(
√w
 
VÆue
("/"+
q«me
));

96 
public
 
ch¨a˘îs
(
buf
[], 
off£t
, 
Àn
)

97 
throws
 
	gSAXEx˚±i⁄
 {

98 i‡(
	gch¨sVÆid
) {

99 
VÆue
 
	gv
 = 
vÆLi°
.
gë
(vÆLi°.
size
()-1);

100 
	gv
.
addCh¨s
(
buf
, 
off£t
,
Àn
);

106 
¥iv©e
 cœs†
	cXmlIndex
 
im∂emíts
 
	gIndex
 {

107 
public
 
boﬁón
 
d⁄e
() {

108 
VÆue
 
	gv
 = 
vÆLi°
.
gë
(
vIdx
);

109 i‡("/¨øy".
equÆs
(
v
.
gëTy≥
())) {

110 
	gvÆLi°
.
£t
(
vIdx
, 
nuŒ
);

111 
	gvIdx
++;

112  
	gåue
;

114  
	gÁl£
;

117 
public
 
ö¸
() {}

120 
¥iv©e
 
	gAºayLi°
<
	gVÆue
> 
	gvÆLi°
;

121 
¥iv©e
 
	gvLí
;

122 
¥iv©e
 
	gvIdx
;

124 
¥iv©e
 
VÆue
 
	$√xt
(Ë
throws
 
IOEx˚±i⁄
 {

125 i‡(
vIdx
 < 
vLí
) {

126 
VÆue
 
v
 = 
vÆLi°
.
	`gë
(
vIdx
);

127 
vÆLi°
.
	`£t
(
vIdx
, 
nuŒ
);

128 
vIdx
++;

129  
v
;

131 
throw
 
√w
 
	`IOEx˚±i⁄
("Error in deserialization.");

133 
	}
}

135 
XmlI≈utArchive
 
	$gëArchive
(
I≈utSåóm
 
°rm
)

136 
throws
 
P¨£rC⁄figuøti⁄Ex˚±i⁄
, 
SAXEx˚±i⁄
, 
IOEx˚±i⁄
 {

137  
√w
 
	`XmlI≈utArchive
(
°rm
);

138 
	}
}

141 
public
 
	$XmlI≈utArchive
(
I≈utSåóm
 
ö
)

142 
throws
 
P¨£rC⁄figuøti⁄Ex˚±i⁄
, 
SAXEx˚±i⁄
, 
IOEx˚±i⁄
 {

143 
vÆLi°
 = 
√w
 
AºayLi°
<
VÆue
>();

144 
DeÁu…H™dÀr
 
h™dÀr
 = 
√w
 
	`XMLP¨£r
(
vÆLi°
);

145 
SAXP¨£rFa˘‹y
 
Á˘‹y
 = SAXP¨£rFa˘‹y.
	`√wIn°™˚
();

146 
SAXP¨£r
 
∑r£r
 = 
Á˘‹y
.
	`√wSAXP¨£r
();

147 
∑r£r
.
	`∑r£
(
ö
, 
h™dÀr
);

148 
vLí
 = 
vÆLi°
.
	`size
();

149 
vIdx
 = 0;

150 
	}
}

152 
public
 
byã
 
	$ªadByã
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

153 
VÆue
 
v
 = 
	`√xt
();

154 i‡(!"ex:i1".
	`equÆs
(
v
.
	`gëTy≥
())) {

155 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

157  
Byã
.
	`∑r£Byã
(
v
.
	`gëVÆue
());

158 
	}
}

160 
public
 
boﬁón
 
	$ªadBoﬁ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

161 
VÆue
 
v
 = 
	`√xt
();

162 i‡(!"boﬁón".
	`equÆs
(
v
.
	`gëTy≥
())) {

163 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

165  "1".
	`equÆs
(
v
.
	`gëVÆue
());

166 
	}
}

168 
public
 
	$ªadI¡
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

169 
VÆue
 
v
 = 
	`√xt
();

170 i‡(!"i4".
	`equÆs
(
v
.
	`gëTy≥
()) &&

171 !"öt".
	`equÆs
(
v
.
	`gëTy≥
())) {

172 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

174  
I¡egî
.
	`∑r£I¡
(
v
.
	`gëVÆue
());

175 
	}
}

177 
public
 
	$ªadL⁄g
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

178 
VÆue
 
v
 = 
	`√xt
();

179 i‡(!"ex:i8".
	`equÆs
(
v
.
	`gëTy≥
())) {

180 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

182  
L⁄g
.
	`∑r£L⁄g
(
v
.
	`gëVÆue
());

183 
	}
}

185 
public
 
	$ªadFlﬂt
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

186 
VÆue
 
v
 = 
	`√xt
();

187 i‡(!"ex:Êﬂt".
	`equÆs
(
v
.
	`gëTy≥
())) {

188 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

190  
Flﬂt
.
	`∑r£Flﬂt
(
v
.
	`gëVÆue
());

191 
	}
}

193 
public
 
	$ªadDoubÀ
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

194 
VÆue
 
v
 = 
	`√xt
();

195 i‡(!"doubÀ".
	`equÆs
(
v
.
	`gëTy≥
())) {

196 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

198  
DoubÀ
.
	`∑r£DoubÀ
(
v
.
	`gëVÆue
());

199 
	}
}

201 
public
 
Såög
 
	$ªadSåög
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

202 
VÆue
 
v
 = 
	`√xt
();

203 i‡(!"°rög".
	`equÆs
(
v
.
	`gëTy≥
())) {

204 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

206  
Utûs
.
	`‰omXMLSåög
(
v
.
	`gëVÆue
());

207 
	}
}

209 
public
 
	gbyã
[] 
	$ªadBuf„r
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

210 
VÆue
 
v
 = 
	`√xt
();

211 i‡(!"°rög".
	`equÆs
(
v
.
	`gëTy≥
())) {

212 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

214  
Utûs
.
	`‰omXMLBuf„r
(
v
.
	`gëVÆue
());

215 
	}
}

217 
public
 
	$ªadRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

218 
r
.
	`de£rülize
(
this
, 
èg
);

219 
	}
}

221 
public
 
	$°¨tRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

222 
VÆue
 
v
 = 
	`√xt
();

223 i‡(!"°ru˘".
	`equÆs
(
v
.
	`gëTy≥
())) {

224 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

226 
	}
}

228 
public
 
	$ídRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

229 
VÆue
 
v
 = 
	`√xt
();

230 i‡(!"/°ru˘".
	`equÆs
(
v
.
	`gëTy≥
())) {

231 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

233 
	}
}

235 
public
 
Index
 
	$°¨tVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

236 
VÆue
 
v
 = 
	`√xt
();

237 i‡(!"¨øy".
	`equÆs
(
v
.
	`gëTy≥
())) {

238 
throw
 
√w
 
	`IOEx˚±i⁄
("Eº‹ de£rülizög "+
èg
+".");

240  
√w
 
	`XmlIndex
();

241 
	}
}

243 
public
 
	$ídVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {
	}
}

245 
public
 
Index
 
	$°¨tM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

246  
	`°¨tVe˘‹
(
èg
);

247 
	}
}

249 
public
 
	$ídM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 { 
	`ídVe˘‹
—ag); 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/XmlOutputArchive.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gSèck
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gTªeM≠
;

31 ˛as†
	cXmlOuçutArchive
 
im∂emíts
 
	mOuçutArchive
 {

33 
¥iv©e
 
PrötSåóm
 
	m°ªam
;

35 
¥iv©e
 
	mödít
 = 0;

37 
¥iv©e
 
	mSèck
<
	mSåög
> 
	mcompoundSèck
;

39 
¥iv©e
 
	$putIndít
() {

40 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
("");

41 
idx
 = 0; idx < 
ödít
; idx++) {

42 
sb
.
	`≠≥nd
(" ");

44 
°ªam
.
	`¥öt
(
sb
.
	`toSåög
());

47 
¥iv©e
 
	$addIndít
() {

48 
ödít
++;

49 
	}
}

51 
¥iv©e
 
	$˛o£Indít
() {

52 
ödít
--;

53 
	}
}

55 
¥iv©e
 
	$¥ötBegöEnvñ›e
(
Såög
 
èg
) {

56 i‡(!
compoundSèck
.
	`em±y
()) {

57 
Såög
 
s
 = 
compoundSèck
.
	`≥ek
();

58 i‡("°ru˘".
	`equÆs
(
s
)) {

59 
	`putIndít
();

60 
°ªam
.
	`¥öt
("<member>\n");

61 
	`addIndít
();

62 
	`putIndít
();

63 
°ªam
.
	`¥öt
("<«me>"+
èg
+"</name>\n");

64 
	`putIndít
();

65 
°ªam
.
	`¥öt
("<value>");

66 } i‡("ve˘‹".
	`equÆs
(
s
)) {

67 
°ªam
.
	`¥öt
("<value>");

68 } i‡("m≠".
	`equÆs
(
s
)) {

69 
°ªam
.
	`¥öt
("<value>");

72 
°ªam
.
	`¥öt
("<value>");

74 
	}
}

76 
¥iv©e
 
	$¥ötEndEnvñ›e
(
Såög
 
èg
) {

77 i‡(!
compoundSèck
.
	`em±y
()) {

78 
Såög
 
s
 = 
compoundSèck
.
	`≥ek
();

79 i‡("°ru˘".
	`equÆs
(
s
)) {

80 
°ªam
.
	`¥öt
("</value>\n");

81 
	`˛o£Indít
();

82 
	`putIndít
();

83 
°ªam
.
	`¥öt
("</member>\n");

84 } i‡("ve˘‹".
	`equÆs
(
s
)) {

85 
°ªam
.
	`¥öt
("</value>\n");

86 } i‡("m≠".
	`equÆs
(
s
)) {

87 
°ªam
.
	`¥öt
("</value>\n");

90 
°ªam
.
	`¥öt
("</value>\n");

92 
	}
}

94 
¥iv©e
 
	$ösideVe˘‹
(
Såög
 
èg
) {

95 
	`¥ötBegöEnvñ›e
(
èg
);

96 
compoundSèck
.
	`push
("vector");

97 
	}
}

99 
¥iv©e
 
	$outsideVe˘‹
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

100 
Såög
 
s
 = 
compoundSèck
.
	`p›
();

101 i‡(!"ve˘‹".
	`equÆs
(
s
)) {

102 
throw
 
√w
 
	`IOEx˚±i⁄
("Error serializing vector.");

104 
	`¥ötEndEnvñ›e
(
èg
);

105 
	}
}

107 
¥iv©e
 
	$ösideM≠
(
Såög
 
èg
) {

108 
	`¥ötBegöEnvñ›e
(
èg
);

109 
compoundSèck
.
	`push
("map");

110 
	}
}

112 
¥iv©e
 
	$outsideM≠
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

113 
Såög
 
s
 = 
compoundSèck
.
	`p›
();

114 i‡(!"m≠".
	`equÆs
(
s
)) {

115 
throw
 
√w
 
	`IOEx˚±i⁄
("Error serializing map.");

117 
	`¥ötEndEnvñ›e
(
èg
);

118 
	}
}

120 
¥iv©e
 
	$ösideRec‹d
(
Såög
 
èg
) {

121 
	`¥ötBegöEnvñ›e
(
èg
);

122 
compoundSèck
.
	`push
("struct");

123 
	}
}

125 
¥iv©e
 
	$outsideRec‹d
(
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

126 
Såög
 
s
 = 
compoundSèck
.
	`p›
();

127 i‡(!"°ru˘".
	`equÆs
(
s
)) {

128 
throw
 
√w
 
	`IOEx˚±i⁄
("Error serializingÑecord.");

130 
	`¥ötEndEnvñ›e
(
èg
);

131 
	}
}

133 
XmlOuçutArchive
 
	$gëArchive
(
OuçutSåóm
 
°rm
) {

134  
√w
 
	`XmlOuçutArchive
(
°rm
);

135 
	}
}

138 
public
 
	$XmlOuçutArchive
(
OuçutSåóm
 
out
) {

139 
°ªam
 = 
√w
 
	`PrötSåóm
(
out
);

140 
compoundSèck
 = 
√w
 
Sèck
<
Såög
>();

141 
	}
}

143 
public
 
	$wrôeByã
(
byã
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

144 
	`¥ötBegöEnvñ›e
(
èg
);

145 
°ªam
.
	`¥öt
("<ex:i1>");

146 
°ªam
.
	`¥öt
(
Byã
.
	`toSåög
(
b
));

147 
°ªam
.
	`¥öt
("</ex:i1>");

148 
	`¥ötEndEnvñ›e
(
èg
);

149 
	}
}

151 
public
 
	$wrôeBoﬁ
(
boﬁón
 
b
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

152 
	`¥ötBegöEnvñ›e
(
èg
);

153 
°ªam
.
	`¥öt
("<boolean>");

154 
°ªam
.
	`¥öt
(
b
 ? "1" : "0");

155 
°ªam
.
	`¥öt
("</boolean>");

156 
	`¥ötEndEnvñ›e
(
èg
);

157 
	}
}

159 
public
 
	$wrôeI¡
(
i
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

160 
	`¥ötBegöEnvñ›e
(
èg
);

161 
°ªam
.
	`¥öt
("<i4>");

162 
°ªam
.
	`¥öt
(
I¡egî
.
	`toSåög
(
i
));

163 
°ªam
.
	`¥öt
("</i4>");

164 
	`¥ötEndEnvñ›e
(
èg
);

165 
	}
}

167 
public
 
	$wrôeL⁄g
(
l
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

168 
	`¥ötBegöEnvñ›e
(
èg
);

169 
°ªam
.
	`¥öt
("<ex:i8>");

170 
°ªam
.
	`¥öt
(
L⁄g
.
	`toSåög
(
l
));

171 
°ªam
.
	`¥öt
("</ex:i8>");

172 
	`¥ötEndEnvñ›e
(
èg
);

173 
	}
}

175 
public
 
	$wrôeFlﬂt
(
f
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

176 
	`¥ötBegöEnvñ›e
(
èg
);

177 
°ªam
.
	`¥öt
("<ex:float>");

178 
°ªam
.
	`¥öt
(
Flﬂt
.
	`toSåög
(
f
));

179 
°ªam
.
	`¥öt
("</ex:float>");

180 
	`¥ötEndEnvñ›e
(
èg
);

181 
	}
}

183 
public
 
	$wrôeDoubÀ
(
d
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

184 
	`¥ötBegöEnvñ›e
(
èg
);

185 
°ªam
.
	`¥öt
("<double>");

186 
°ªam
.
	`¥öt
(
DoubÀ
.
	`toSåög
(
d
));

187 
°ªam
.
	`¥öt
("</double>");

188 
	`¥ötEndEnvñ›e
(
èg
);

189 
	}
}

191 
public
 
	$wrôeSåög
(
Såög
 
s
, Såög 
èg
Ë
throws
 
IOEx˚±i⁄
 {

192 
	`¥ötBegöEnvñ›e
(
èg
);

193 
°ªam
.
	`¥öt
("<string>");

194 
°ªam
.
	`¥öt
(
Utûs
.
	`toXMLSåög
(
s
));

195 
°ªam
.
	`¥öt
("</string>");

196 
	`¥ötEndEnvñ›e
(
èg
);

197 
	}
}

199 
public
 
	$wrôeBuf„r
(
byã
 
buf
[], 
Såög
 
èg
)

200 
throws
 
IOEx˚±i⁄
 {

201 
	`¥ötBegöEnvñ›e
(
èg
);

202 
°ªam
.
	`¥öt
("<string>");

203 
°ªam
.
	`¥öt
(
Utûs
.
	`toXMLBuf„r
(
buf
));

204 
°ªam
.
	`¥öt
("</string>");

205 
	`¥ötEndEnvñ›e
(
èg
);

206 
	}
}

208 
public
 
	$wrôeRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

209 
r
.
	`£rülize
(
this
, 
èg
);

210 
	}
}

212 
public
 
	$°¨tRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

213 
	`ösideRec‹d
(
èg
);

214 
°ªam
.
	`¥öt
("<struct>\n");

215 
	`addIndít
();

216 
	}
}

218 
public
 
	$ídRec‹d
(
Rec‹d
 
r
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

219 
	`˛o£Indít
();

220 
	`putIndít
();

221 
°ªam
.
	`¥öt
("</struct>");

222 
	`outsideRec‹d
(
èg
);

223 
	}
}

225 
public
 
	$°¨tVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

226 
	`ösideVe˘‹
(
èg
);

227 
°ªam
.
	`¥öt
("<array>\n");

228 
	`addIndít
();

229 
	}
}

231 
public
 
	$ídVe˘‹
(
Li°
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

232 
	`˛o£Indít
();

233 
	`putIndít
();

234 
°ªam
.
	`¥öt
("</array>");

235 
	`outsideVe˘‹
(
èg
);

236 
	}
}

238 
public
 
	$°¨tM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

239 
	`ösideM≠
(
èg
);

240 
°ªam
.
	`¥öt
("<array>\n");

241 
	`addIndít
();

242 
	}
}

244 
public
 
	$ídM≠
(
TªeM≠
 
v
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

245 
	`˛o£Indít
();

246 
	`putIndít
();

247 
°ªam
.
	`¥öt
("</array>");

248 
	`outsideM≠
(
èg
);

249 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CGenerator.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

30 ˛as†
	cCGíî©‹
 {

31 
¥iv©e
 
Såög
 
	mmName
;

32 
¥iv©e
 
	mAºayLi°
<
	mJFûe
> 
	mmIn˛Fûes
;

33 
¥iv©e
 
	mAºayLi°
<
	mJRec‹d
> 
	mmRecLi°
;

34 
¥iv©e
 
föÆ
 
Fûe
 
	mouçutDúe˘‹y
;

43 
CGíî©‹
(
Såög
 
«me
, 
AºayLi°
<
JFûe
> 
ûi°
, AºayLi°<
JRec‹d
> 
æi°
,

44 
Fûe
 
ouçutDúe˘‹y
)

46 
	mthis
.
	mouçutDúe˘‹y
 = 
ouçutDúe˘‹y
;

47 
	mmName
 = (
√w
 
Fûe
(
«me
)).
gëName
();

48 
	mmIn˛Fûes
 = 
ûi°
;

49 
	mmRecLi°
 = 
æi°
;

57 
	$gíCode
(Ë
throws
 
IOEx˚±i⁄
 {

58 i‡(!
ouçutDúe˘‹y
.
	`exi°s
()) {

59 i‡(!
ouçutDúe˘‹y
.
	`mkdús
()) {

60 
throw
 
√w
 
	`IOEx˚±i⁄
("unableÅo create output directory "

61 + 
ouçutDúe˘‹y
);

64 
FûeWrôî
 
c
 = 
√w
 
	`FûeWrôî
“ew 
	`Fûe
(
ouçutDúe˘‹y
, 
mName
+".c"));

65 
FûeWrôî
 
h
 = 
√w
 
	`FûeWrôî
“ew 
	`Fûe
(
ouçutDúe˘‹y
, 
mName
+".h"));

67 
h
.
	`wrôe
("/**\n");

68 
h
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

69 
h
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

70 
h
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

71 
h
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

72 
h
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

73 
h
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

74 
h
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

75 
h
.
	`wrôe
("*\n");

76 
h
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

77 
h
.
	`wrôe
("*\n");

78 
h
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

79 
h
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

80 
h
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

81 
h
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

82 
h
.
	`wrôe
("*Üimitations underÅhe License.\n");

83 
h
.
	`wrôe
("*/\n");

84 
h
.
	`wrôe
("\n");

86 
c
.
	`wrôe
("/**\n");

87 
c
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

88 
c
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

89 
c
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

90 
c
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

91 
c
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

92 
c
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

93 
c
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

94 
c
.
	`wrôe
("*\n");

95 
c
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

96 
c
.
	`wrôe
("*\n");

97 
c
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

98 
c
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

99 
c
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

100 
c
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

101 
c
.
	`wrôe
("*Üimitations underÅhe License.\n");

102 
c
.
	`wrôe
("*/\n");

103 
c
.
	`wrôe
("\n");

105 
h
.
	`wrôe
("#i‚de‡__"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

106 
h
.
	`wrôe
("#deföê__"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

108 
h
.
	`wrôe
("#include \"recordio.h\"\n");

109 
Iãøt‹
<
JFûe
> 
i
 = 
mIn˛Fûes
.
	`ôî©‹
(); i.
	`hasNext
();) {

110 
JFûe
 
f
 = 
i
.
	`√xt
();

111 
h
.
	`wrôe
("#ö˛udê\""+
f
.
	`gëName
()+".h\"\n");

114 
h
.
	`wrôe
("\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n");

116 
c
.
	`wrôe
("#include <stdlib.h>\n");

117 
c
.
	`wrôe
("#ö˛udê\""+
mName
+".h\"\n\n");

119 
Iãøt‹
<
JRec‹d
> 
i
 = 
mRecLi°
.
	`ôî©‹
(); i.
	`hasNext
();) {

120 
JRec‹d
 
jr
 = 
i
.
	`√xt
();

121 
jr
.
	`gíCCode
(
h
, 
c
);

124 
h
.
	`wrôe
("\n#ifdef __cplusplus\n}\n#endif\n\n");

125 
h
.
	`wrôe
("#ídi‡//"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

127 
h
.
	`˛o£
();

128 
c
.
	`˛o£
();

129 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CSharpGenerator.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
public
 cœs†
	cCSh¨pGíî©‹
 {

26 
¥iv©e
 
	mAºayLi°
<
	mJRec‹d
> 
	mmRecLi°
;

27 
¥iv©e
 
föÆ
 
Fûe
 
	mouçutDúe˘‹y
;

36 
CSh¨pGíî©‹
(
Såög
 
«me
, 
AºayLi°
<
JFûe
> 
ûi°
, AºayLi°<
JRec‹d
> 
æi°
,

37 
Fûe
 
ouçutDúe˘‹y
)

39 
	mthis
.
	mouçutDúe˘‹y
 = 
ouçutDúe˘‹y
;

40 
	mmRecLi°
 = 
æi°
;

48 
	$gíCode
(Ë
throws
 
IOEx˚±i⁄
 {

49 
JRec‹d
 
ªc
 : 
mRecLi°
) {

50 
ªc
.
	`gíCsh¨pCode
(
ouçutDúe˘‹y
);

52 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CppGenerator.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

30 ˛as†
	cCµGíî©‹
 {

31 
¥iv©e
 
Såög
 
	mmName
;

32 
¥iv©e
 
	mAºayLi°
<
	mJFûe
> 
	mmIn˛Fûes
;

33 
¥iv©e
 
	mAºayLi°
<
	mJRec‹d
> 
	mmRecLi°
;

34 
¥iv©e
 
föÆ
 
Fûe
 
	mouçutDúe˘‹y
;

43 
CµGíî©‹
(
Såög
 
«me
, 
AºayLi°
<
JFûe
> 
ûi°
, AºayLi°<
JRec‹d
> 
æi°
,

44 
Fûe
 
ouçutDúe˘‹y
)

46 
	mthis
.
	mouçutDúe˘‹y
 = 
ouçutDúe˘‹y
;

47 
	mmName
 = (
√w
 
Fûe
(
«me
)).
gëName
();

48 
	mmIn˛Fûes
 = 
ûi°
;

49 
	mmRecLi°
 = 
æi°
;

57 
	$gíCode
(Ë
throws
 
IOEx˚±i⁄
 {

58 i‡(!
ouçutDúe˘‹y
.
	`exi°s
()) {

59 i‡(!
ouçutDúe˘‹y
.
	`mkdús
()) {

60 
throw
 
√w
 
	`IOEx˚±i⁄
("unableÅo create output directory "

61 + 
ouçutDúe˘‹y
);

64 
FûeWrôî
 
cc
 = 
√w
 
	`FûeWrôî
“ew 
	`Fûe
(
ouçutDúe˘‹y
, 
mName
+".cc"));

65 
FûeWrôî
 
hh
 = 
√w
 
	`FûeWrôî
“ew 
	`Fûe
(
ouçutDúe˘‹y
, 
mName
+".hh"));

67 
hh
.
	`wrôe
("/**\n");

68 
hh
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

69 
hh
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

70 
hh
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

71 
hh
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

72 
hh
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

73 
hh
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

74 
hh
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

75 
hh
.
	`wrôe
("*\n");

76 
hh
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

77 
hh
.
	`wrôe
("*\n");

78 
hh
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

79 
hh
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

80 
hh
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

81 
hh
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

82 
hh
.
	`wrôe
("*Üimitations underÅhe License.\n");

83 
hh
.
	`wrôe
("*/\n");

84 
hh
.
	`wrôe
("\n");

86 
cc
.
	`wrôe
("/**\n");

87 
cc
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

88 
cc
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

89 
cc
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

90 
cc
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

91 
cc
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

92 
cc
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

93 
cc
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

94 
cc
.
	`wrôe
("*\n");

95 
cc
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

96 
cc
.
	`wrôe
("*\n");

97 
cc
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

98 
cc
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

99 
cc
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

100 
cc
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

101 
cc
.
	`wrôe
("*Üimitations underÅhe License.\n");

102 
cc
.
	`wrôe
("*/\n");

103 
cc
.
	`wrôe
("\n");

105 
hh
.
	`wrôe
("#i‚de‡__"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

106 
hh
.
	`wrôe
("#deföê__"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

108 
hh
.
	`wrôe
("#include \"recordio.hh\"\n");

109 
Iãøt‹
<
JFûe
> 
i
 = 
mIn˛Fûes
.
	`ôî©‹
(); i.
	`hasNext
();) {

110 
JFûe
 
f
 = 
i
.
	`√xt
();

111 
hh
.
	`wrôe
("#ö˛udê\""+
f
.
	`gëName
()+".hh\"\n");

113 
cc
.
	`wrôe
("#ö˛udê\""+
mName
+".hh\"\n");

115 
Iãøt‹
<
JRec‹d
> 
i
 = 
mRecLi°
.
	`ôî©‹
(); i.
	`hasNext
();) {

116 
JRec‹d
 
jr
 = 
i
.
	`√xt
();

117 
jr
.
	`gíCµCode
(
hh
, 
cc
);

120 
hh
.
	`wrôe
("#ídi‡//"+
mName
.
	`toUµîCa£
().
	`ª∂a˚
('.','_')+"__\n");

122 
hh
.
	`˛o£
();

123 
cc
.
	`˛o£
();

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JBoolean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJBoﬁón
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JBoﬁón
() {

28 
	`su≥r
("int32_t", "bool", "bool", "boolean", "Bool", "Boolean", "bool", "toBoolean");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

35 
public
 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

36  "Ñë = ("+
‚ame
+" ==Öeer."+fname+")? 0 : ("+fname+"?1:-1);\n";

37 
	}
}

39 
public
 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

40  "Ñë = ("+
‚ame
+")?0:1;\n";

41 
	}
}

43 
Såög
 
	$gíCsh¨pHashCode
(
Såög
 
‚ame
) {

44  "Ñë = ("+
	`ˇpôÆize
(
‚ame
)+")?0:1;\n";

45 
	}
}

47 
Såög
 
	$gíCsh¨pCom∑ªTo
(
Såög
 
«me
) {

48  "Ñë = ("+
	`ˇpôÆize
(
«me
)+" ==Öeer."+capitalize(name)+")? 0 : ("+capitalize(name)+"?1:-1);\n";

49 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JBuffer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJBuf„r
 
exãnds
 
	mJCompTy≥
 {

27 
public
 
	$JBuf„r
() {

28 
	`su≥r
("struct buffer", " ::std::string", "byte[]", "byte[]", "Buffer", "byte[]", "byte[]");

31 
public
 
Såög
 
	$gíCµGëSë
(
Såög
 
‚ame
, 
fIdx
) {

32 
Såög
 
cgëFunc
 = " vútuÆ c⁄° "+
	`gëCµTy≥
()+"& gë"+
‚ame
+"() const {\n";

33 
cgëFunc
 +"Ñëu∫ m"+
‚ame
+";\n";

34 
cgëFunc
 += " }\n";

35 
Såög
 
gëFunc
 = " vútuÆ "+
	`gëCµTy≥
()+"& gë"+
‚ame
+"() {\n";

36 
gëFunc
 +" bs_.£t("+
fIdx
+");ªtu∫ m"+
‚ame
+";\n";

37 
gëFunc
 += " }\n";

38  
cgëFunc
 + 
gëFunc
;

39 
	}
}

41 
public
 
Såög
 
	$gëSig«tuª
() {

43 
	}
}

45 
public
 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

46 
Såög
 
ªt
 = "";

47 i‡(
de˛
) {

48 
ªt
 = " byã[] "+
‚ame
+";\n";

50  
ªt
 + " "+
‚ame
+"˜_.ªadBuf„r(\""+
èg
+"\");\n";

51 
	}
}

53 
public
 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

54  "á_.wrôeBuf„r("+
‚ame
+",\""+
èg
+"\");\n";

55 
	}
}

57 
public
 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
, Såög 
Ÿhî
) {

58 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

59 
sb
.
	`≠≥nd
(" {\n");

60 
sb
.
	`≠≥nd
(" byã[] my = "+
‚ame
+";\n");

61 
sb
.
	`≠≥nd
(" byã[] u∏"+
Ÿhî
+";\n");

62 
sb
.
	`≠≥nd
("Ñet = org.apache.jute.Utils.compareBytes(my,0,my.length,ur,0,ur.length);\n");

63 
sb
.
	`≠≥nd
(" }\n");

64  
sb
.
	`toSåög
();

65 
	}
}

67 
public
 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

68  
	`gíJavaCom∑ªTo
(
‚ame
, "peer."+fname);

69 
	}
}

70 
public
 
Såög
 
	$gíJavaCom∑ªToWøµî
(
Såög
 
‚ame
, Såög 
Ÿhî
) {

71  " "+
	`gíJavaCom∑ªTo
(
‚ame
, 
Ÿhî
);

72 
	}
}

74 
public
 
Såög
 
	$gíJavaEquÆs
(
Såög
 
‚ame
, Såög 
≥î
) {

75  "Ñë = org.≠ache.juã.Utûs.bufEquÆs("+
‚ame
+","+
≥î
+");\n";

76 
	}
}

78 
public
 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

79  "Ñë = java.utû.Aºays.toSåög("+
‚ame
+").hashCode();\n";

80 
	}
}

82 
public
 
Såög
 
	$gíJavaSluΩByãs
(
Såög
 
b
, Såög 
s
, Såög 
l
) {

83 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

84 
sb
.
	`≠≥nd
(" {\n");

85 
sb
.
	`≠≥nd
(" i¡ i = org.≠ache.juã.Utûs.ªadVI¡("+
b
+", "+
s
+");\n");

86 
sb
.
	`≠≥nd
(" int z = WritableUtils.getVIntSize(i);\n");

87 
sb
.
	`≠≥nd
(" "+
s
+" +z+i; "+
l
+" -= (z+i);\n");

88 
sb
.
	`≠≥nd
(" }\n");

89  
sb
.
	`toSåög
();

90 
	}
}

92 
public
 
Såög
 
	$gíJavaCom∑ªByãs
() {

93 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

94 
sb
.
	`≠≥nd
(" {\n");

95 
sb
.
	`≠≥nd
(" int i1 = org.apache.jute.Utils.readVInt(b1, s1);\n");

96 
sb
.
	`≠≥nd
(" int i2 = org.apache.jute.Utils.readVInt(b2, s2);\n");

97 
sb
.
	`≠≥nd
(" int z1 = WritableUtils.getVIntSize(i1);\n");

98 
sb
.
	`≠≥nd
(" int z2 = WritableUtils.getVIntSize(i2);\n");

99 
sb
.
	`≠≥nd
(" s1+=z1; s2+=z2;Ü1-=z1;Ü2-=z2;\n");

100 
sb
.
	`≠≥nd
(" intÑ1 = org.apache.jute.Utils.compareBytes(b1,s1,l1,b2,s2,l2);\n");

101 
sb
.
	`≠≥nd
(" if (r1 != 0) {Ñeturn (r1<0)?-1:0; }\n");

102 
sb
.
	`≠≥nd
(" s1+=i1; s2+=i2;Ü1-=i1;Ü1-=i2;\n");

103 
sb
.
	`≠≥nd
(" }\n");

104  
sb
.
	`toSåög
();

105 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JByte.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJByã
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JByã
() {

28 
	`su≥r
("char", "int8_t", "byte", "byte", "Byte", "Byte", "byte", "toByte");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JCompType.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

25 
ab°ø˘
 cœs†
	cJCompTy≥
 
exãnds
 
	mJTy≥
 {

28 
	$JCompTy≥
(
Såög
 
cTy≥
, Såög 
˝pTy≥
, Såög 
csh¨pTy≥
, Såög 
javaTy≥
, Såög 
suffix
, Såög 
wøµî
, Såög 
csh¨pWøµî
) {

29 
	`su≥r
(
cTy≥
, 
˝pTy≥
, 
csh¨pTy≥
, 
javaTy≥
, 
suffix
, 
wøµî
, 
csh¨pWøµî
, 
nuŒ
);

32 
Såög
 
	$gíCµGëSë
(
Såög
 
‚ame
, 
fIdx
) {

33 
Såög
 
cgëFunc
 = " vútuÆ c⁄° "+
	`gëCµTy≥
()+"& gë"+
‚ame
+"() const {\n";

34 
cgëFunc
 +"Ñëu∫ m"+
‚ame
+";\n";

35 
cgëFunc
 += " }\n";

36 
Såög
 
gëFunc
 = " vútuÆ "+
	`gëCµTy≥
()+"& gë"+
‚ame
+"() {\n";

37 
gëFunc
 +" bs_.£t("+
fIdx
+");ªtu∫ m"+
‚ame
+";\n";

38 
gëFunc
 += " }\n";

39  
cgëFunc
 + 
gëFunc
;

40 
	}
}

42 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

43  "Ñë = "+
‚ame
+".compareTo(peer."+fname+");\n";

44 
	}
}

46 
Såög
 
	$gíJavaEquÆs
(
Såög
 
‚ame
, Såög 
≥î
) {

47  "Ñë = "+
‚ame
+".equÆs("+
≥î
+");\n";

48 
	}
}

50 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

51  "Ñë = "+
‚ame
+".hashCode();\n";

52 
	}
}

54 
Såög
 
	$gíCsh¨pHashCode
(
Såög
 
‚ame
) {

55  "Ñë = "+
	`ˇpôÆize
(
‚ame
)+".GetHashCode();\n";

56 
	}
}

58 
Såög
 
	$gíCsh¨pEquÆs
(
Såög
 
«me
, Såög 
≥î
) {

59 
Såög
[] 
≥îS∂ô
 = 
≥î
.
	`•lô
("\\.");

60  "Ñë = "+
	`ˇpôÆize
(
«me
)+".EquÆs("+
≥îS∂ô
[0] + "." + capitalize(peerSplit[1]) + ");\n";

61 
	}
}

63 
Såög
 
	$gíCsh¨pCom∑ªTo
(
Såög
 
«me
) {

64  "Ñë = "+
	`ˇpôÆize
(
«me
)+".CompareTo(peer."+capitalize(name)+");\n";

65 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JDouble.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJDoubÀ
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JDoubÀ
() {

28 
	`su≥r
("double", "double", "double", "double", "Double", "Double", "double", "toDouble");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

35 
public
 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

36 
Såög
 
tmp
 = "DoubÀ.doubÀToL⁄gBôs("+
‚ame
+")";

37  "Ñë = (öt)("+
tmp
+"^("+tmp+">>>32));\n";

38 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JField.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJFõld
 {

25 
¥iv©e
 
JTy≥
 
	mmTy≥
;

26 
¥iv©e
 
Såög
 
	mmName
;

30 
public
 
	$JFõld
(
JTy≥
 
ty≥
, 
Såög
 
«me
) {

31 
mTy≥
 = 
ty≥
;

32 
mName
 = 
«me
;

35 
public
 
Såög
 
	$gëSig«tuª
() {

36  
mTy≥
.
	`gëSig«tuª
();

37 
	}
}

39 
public
 
Såög
 
	$gíCµDe˛
() {

40  
mTy≥
.
	`gíCµDe˛
(
mName
);

41 
	}
}

43 
public
 
Såög
 
	$gíCDe˛
() {

44  
mTy≥
.
	`gíCDe˛
(
mName
);

45 
	}
}

47 
public
 
Såög
 
	$gíCsh¨pDe˛
() {

48  
mTy≥
.
	`gíCsh¨pDe˛
(
mName
);

49 
	}
}

51 
public
 
Såög
 
	$gíCsh¨pC⁄°ru˘‹P¨am
(
Såög
 
‚ame
) {

52  
mTy≥
.
	`gíCsh¨pC⁄°ru˘‹P¨am
(
‚ame
);

53 
	}
}

55 
public
 
Såög
 
	$gíJavaDe˛
() {

56  
mTy≥
.
	`gíJavaDe˛
(
mName
);

57 
	}
}

59 
public
 
Såög
 
	$gíJavaC⁄°ru˘‹P¨am
(
Såög
 
‚ame
) {

60  
mTy≥
.
	`gíJavaC⁄°ru˘‹P¨am
(
‚ame
);

61 
	}
}

63 
public
 
Såög
 
	$gëName
() {

64  
mName
;

65 
	}
}

67 
public
 
Såög
 
	$gëCsh¨pName
() {

68  "Id".
	`equÆs
(
mName
) ? "ZKId" : mName;

69 
	}
}

71 
public
 
Såög
 
	$gëTag
() {

72  
mName
;

73 
	}
}

75 
public
 
JTy≥
 
	$gëTy≥
() {

76  
mTy≥
;

77 
	}
}

79 
public
 
Såög
 
	$gíCµGëSë
(
fIdx
) {

80  
mTy≥
.
	`gíCµGëSë
(
mName
, 
fIdx
);

81 
	}
}

83 
public
 
Såög
 
	$gíCsh¨pC⁄°ru˘‹Së
(
Såög
 
‚ame
) {

84  
mTy≥
.
	`gíCsh¨pC⁄°ru˘‹Së
(
mName
, 
‚ame
);

85 
	}
}

87 
public
 
Såög
 
	$gíCsh¨pGëSë
(
fIdx
) {

88  
mTy≥
.
	`gíCsh¨pGëSë
(
	`gëCsh¨pName
(), 
fIdx
);

89 
	}
}

91 
public
 
Såög
 
	$gíCsh¨pWrôeMëhodName
() {

92  
mTy≥
.
	`gíCsh¨pWrôeMëhod
(
	`gëCsh¨pName
(), 
	`gëTag
());

93 
	}
}

95 
public
 
Såög
 
	$gíCsh¨pRódMëhodName
() {

96  
mTy≥
.
	`gíCsh¨pRódMëhod
(
	`gëCsh¨pName
(), 
	`gëTag
());

97 
	}
}

99 
public
 
Såög
 
	$gíCsh¨pCom∑ªTo
() {

100  
mTy≥
.
	`gíCsh¨pCom∑ªTo
(
	`gëCsh¨pName
());

101 
	}
}

103 
public
 
Såög
 
	$gíCsh¨pEquÆs
() {

104  
mTy≥
.
	`gíCsh¨pEquÆs
(
	`gëCsh¨pName
(), "peer."+getCsharpName());

105 
	}
}

107 
public
 
Såög
 
	$gíCsh¨pHashCode
() {

108  
mTy≥
.
	`gíCsh¨pHashCode
(
	`gëCsh¨pName
());

109 
	}
}

112 
public
 
Såög
 
	$gíJavaGëSë
(
fIdx
) {

113  
mTy≥
.
	`gíJavaGëSë
(
mName
, 
fIdx
);

114 
	}
}

116 
public
 
Såög
 
	$gíJavaWrôeMëhodName
() {

117  
mTy≥
.
	`gíJavaWrôeMëhod
(
	`gëName
(), 
	`gëTag
());

118 
	}
}

120 
public
 
Såög
 
	$gíJavaRódMëhodName
() {

121  
mTy≥
.
	`gíJavaRódMëhod
(
	`gëName
(), 
	`gëTag
());

122 
	}
}

124 
public
 
Såög
 
	$gíJavaCom∑ªTo
() {

125  
mTy≥
.
	`gíJavaCom∑ªTo
(
	`gëName
());

126 
	}
}

128 
public
 
Såög
 
	$gíJavaEquÆs
() {

129  
mTy≥
.
	`gíJavaEquÆs
(
	`gëName
(), "peer."+getName());

130 
	}
}

132 
public
 
Såög
 
	$gíJavaHashCode
() {

133  
mTy≥
.
	`gíJavaHashCode
(
	`gëName
());

134 
	}
}

136 
public
 
Såög
 
	$gíJavaC⁄°ru˘‹Së
(
Såög
 
‚ame
) {

137  
mTy≥
.
	`gíJavaC⁄°ru˘‹Së
(
mName
, 
‚ame
);

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JFile.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

31 
public
 cœs†
	cJFûe
 {

33 
¥iv©e
 
Såög
 
	mmName
;

34 
¥iv©e
 
	mAºayLi°
<
	mJFûe
> 
	mmIn˛Fûes
;

35 
¥iv©e
 
	mAºayLi°
<
	mJRec‹d
> 
	mmRec‹ds
;

43 
public
 
JFûe
(
Såög
 
«me
, 
AºayLi°
<JFûe> 
ö˛Fûes
,

44 
AºayLi°
<
JRec‹d
> 
ªcLi°
)

46 
	mmName
 = 
«me
;

47 
	mmIn˛Fûes
 = 
ö˛Fûes
;

48 
	mmRec‹ds
 = 
ªcLi°
;

52 
Såög
 
	$gëName
() {

53 
idx
 = 
mName
.
	`œ°IndexOf
('/');

54  (
idx
 > 0Ë? 
mName
.
	`sub°rög
(idx) : mName;

55 
	}
}

61 
public
 
	$gíCode
(
Såög
 
œnguage
, 
Fûe
 
ouçutDúe˘‹y
)

62 
throws
 
IOEx˚±i⁄


64 i‡("c++".
	`equÆs
(
œnguage
)) {

65 
CµGíî©‹
 
gí
 = 
√w
 
	`CµGíî©‹
(
mName
, 
mIn˛Fûes
, 
mRec‹ds
,

66 
ouçutDúe˘‹y
);

67 
gí
.
	`gíCode
();

68 } i‡("java".
	`equÆs
(
œnguage
)) {

69 
JavaGíî©‹
 
gí
 = 
√w
 
	`JavaGíî©‹
(
mName
, 
mIn˛Fûes
, 
mRec‹ds
,

70 
ouçutDúe˘‹y
);

71 
gí
.
	`gíCode
();

72 } i‡("c".
	`equÆs
(
œnguage
)) {

73 
CGíî©‹
 
gí
 = 
√w
 
	`CGíî©‹
(
mName
, 
mIn˛Fûes
, 
mRec‹ds
,

74 
ouçutDúe˘‹y
);

75 
gí
.
	`gíCode
();

76 } i‡("csh¨p".
	`equÆs
(
œnguage
)) {

77 
CSh¨pGíî©‹
 
gí
 = 
√w
 
	`CSh¨pGíî©‹
(
mName
, 
mIn˛Fûes
, 
mRec‹ds
,

78 
ouçutDúe˘‹y
);

79 
gí
.
	`gíCode
();

81 
throw
 
√w
 
	`IOEx˚±i⁄
("C™¬ŸÑecognizêœnguage:" + 
œnguage
);

83 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JFloat.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJFlﬂt
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JFlﬂt
() {

28 
	`su≥r
("float", "float", "float", "float", "Float", "Float", "float", "toFloat");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

35 
public
 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

36  "Ñë = Flﬂt.ÊﬂtToI¡Bôs("+
‚ame
+");\n";

37 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JInt.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJI¡
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JI¡
() {

28 
	`su≥r
("int32_t", "int32_t", "int", "int", "Int", "Integer", "int", "toInt");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JLong.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJL⁄g
 
exãnds
 
	mJTy≥
 {

27 
public
 
	$JL⁄g
() {

28 
	`su≥r
("int64_t", "int64_t", "long", "long", "Long", "Long", "long", "toLong");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

35 
public
 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

36  "Ñë = (ötË("+
‚ame
+"^("+fname+">>>32));\n";

37 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JMap.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJM≠
 
exãnds
 
	mJCompTy≥
 {

26 
¥iv©e
 
	mÀvñ
 = 0;

28 
¥iv©e
 
Såög
 
	$gëLevñ
(Ë{  
I¡egî
.
	`toSåög
(
Àvñ
); }

30 
¥iv©e
 
	$ö¸Levñ
(Ë{ 
Àvñ
++; 
	}
}

32 
¥iv©e
 
	$de¸Levñ
(Ë{ 
Àvñ
--; 
	}
}

34 
¥iv©e
 
Såög
 
	$gëId
(
Såög
 
id
Ë{  id+
	`gëLevñ
(); 
	}
}

36 
¥iv©e
 
JTy≥
 
	gmKey
;

37 
¥iv©e
 
JTy≥
 
	gmVÆue
;

40 
public
 
	$JM≠
(
JTy≥
 
t1
, JTy≥ 
t2
) {

41 
	`su≥r
("#îr‹", " ::°d::m≠<"+
t1
.
	`gëCµTy≥
()+","+
t2
.getCppType()+">",

43 
mKey
 = 
t1
;

44 
mVÆue
 = 
t2
;

45 
	}
}

47 
public
 
Såög
 
	$gëSig«tuª
() {

48  "{" + 
mKey
.
	`gëSig«tuª
(Ë+ 
mVÆue
.getSignature() +"}";

49 
	}
}

51 
public
 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

53 + 
‚ame
 + " is unimplemented\");\n";

54 
	}
}

56 
public
 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

57 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

58 i‡(
de˛
) {

59 
ªt
.
	`≠≥nd
(" java.utû.TªeM≠ "+
‚ame
+";\n");

61 
ªt
.
	`≠≥nd
(" {\n");

62 
	`ö¸Levñ
();

63 
ªt
.
	`≠≥nd
(" org.≠ache.juã.Index "+
	`gëId
("midx")+" =á_.°¨tM≠(\""+
èg
+"\");\n");

64 
ªt
.
	`≠≥nd
(" "+
‚ame
+"=new java.util.TreeMap();\n");

65 
ªt
.
	`≠≥nd
(" f‹ (; !"+
	`gëId
("midx")+".done(); "+getId("midx")+".incr()) {\n");

66 
ªt
.
	`≠≥nd
(
mKey
.
	`gíJavaRódWøµî
(
	`gëId
("k"),gëId("k"),
åue
));

67 
ªt
.
	`≠≥nd
(
mVÆue
.
	`gíJavaRódWøµî
(
	`gëId
("v"),gëId("v"),
åue
));

68 
ªt
.
	`≠≥nd
(" "+
‚ame
+".put("+
	`gëId
("k")+","+getId("v")+");\n");

69 
ªt
.
	`≠≥nd
(" }\n");

70 
ªt
.
	`≠≥nd
("á_.ídM≠(\""+
èg
+"\");\n");

71 
	`de¸Levñ
();

72 
ªt
.
	`≠≥nd
(" }\n");

73  
ªt
.
	`toSåög
();

74 
	}
}

76 
public
 
Såög
 
	$gíJavaRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

77  
	`gíJavaRódWøµî
(
‚ame
, 
èg
, 
Ál£
);

78 
	}
}

80 
public
 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

81 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
(" {\n");

82 
	`ö¸Levñ
();

83 
ªt
.
	`≠≥nd
("á_.°¨tM≠("+
‚ame
+",\""+
èg
+"\");\n");

84 
ªt
.
	`≠≥nd
(" java.utû.Së "+
	`gëId
("es")+" = "+
‚ame
+".entrySet();\n");

85 
ªt
.
	`≠≥nd
(" f‹(java.utû.Iãøt‹ "+
	`gëId
("midx")+" = "+getId("es")+".iterator(); "+getId("midx")+".hasNext(); ) {\n");

86 
ªt
.
	`≠≥nd
(" java.utû.M≠.E¡ry "+
	`gëId
("me")+" = (java.util.Map.Entry) "+getId("midx")+".next();\n");

87 
ªt
.
	`≠≥nd
(" "+
mKey
.
	`gëJavaWøµîTy≥
()+" "+
	`gëId
("k")+" = ("+mKey.getJavaWrapperType()+") "+getId("me")+".getKey();\n");

88 
ªt
.
	`≠≥nd
(" "+
mVÆue
.
	`gëJavaWøµîTy≥
()+" "+
	`gëId
("v")+" = ("+mValue.getJavaWrapperType()+") "+getId("me")+".getValue();\n");

89 
ªt
.
	`≠≥nd
(
mKey
.
	`gíJavaWrôeWøµî
(
	`gëId
("k"),getId("k")));

90 
ªt
.
	`≠≥nd
(
mVÆue
.
	`gíJavaWrôeWøµî
(
	`gëId
("v"),getId("v")));

91 
ªt
.
	`≠≥nd
(" }\n");

92 
ªt
.
	`≠≥nd
("á_.ídM≠("+
‚ame
+",\""+
èg
+"\");\n");

93 
ªt
.
	`≠≥nd
(" }\n");

94 
	`de¸Levñ
();

95  
ªt
.
	`toSåög
();

96 
	}
}

98 
public
 
Såög
 
	$gíJavaWrôeMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

99  
	`gíJavaWrôeWøµî
(
‚ame
, 
èg
);

100 
	}
}

102 
public
 
Såög
 
	$gíCsh¨pWrôeWøµî
(
Såög
 
‚ame
, 
èg
) {

103 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
(" {\n");

104 
	`ö¸Levñ
();

105 
ªt
.
	`≠≥nd
("á_.SèπM≠("+
‚ame
+",\""+
èg
+"\");\n");

106 
ªt
.
	`≠≥nd
(" java.utû.Së "+
	`gëId
("es")+" = "+
‚ame
+".entrySet();\n");

107 
ªt
.
	`≠≥nd
(" f‹(java.utû.Iãøt‹ "+
	`gëId
("midx")+" = "+getId("es")+".iterator(); "+getId("midx")+".hasNext(); ) {\n");

108 
ªt
.
	`≠≥nd
(" java.utû.M≠.E¡ry "+
	`gëId
("me")+" = (java.util.Map.Entry) "+getId("midx")+".next();\n");

109 
ªt
.
	`≠≥nd
(" "+
mKey
.
	`gëCsh¨pWøµîTy≥
()+" "+
	`gëId
("k")+" = ("+mKey.getCsharpWrapperType()+") "+getId("me")+".getKey();\n");

110 
ªt
.
	`≠≥nd
(" "+
mVÆue
.
	`gëCsh¨pWøµîTy≥
()+" "+
	`gëId
("v")+" = ("+mValue.getCsharpWrapperType()+") "+getId("me")+".getValue();\n");

111 
ªt
.
	`≠≥nd
(
mKey
.
	`gíCsh¨pWrôeWøµî
(
	`gëId
("k"),getId("k")));

112 
ªt
.
	`≠≥nd
(
mVÆue
.
	`gíCsh¨pWrôeWøµî
(
	`gëId
("v"),getId("v")));

113 
ªt
.
	`≠≥nd
(" }\n");

114 
ªt
.
	`≠≥nd
("á_.EndM≠("+
‚ame
+",\""+
èg
+"\");\n");

115 
ªt
.
	`≠≥nd
(" }\n");

116 
	`de¸Levñ
();

117  
ªt
.
	`toSåög
();

118 
	}
}

120 
Såög
 
	$gíCsh¨pWrôeMëhod
(
Såög
 
‚ame
, 
èg
) {

121  
	`gíCsh¨pWrôeWøµî
(
‚ame
, 
èg
);

122 
	}
}

124 
public
 
Såög
 
	$gíCsh¨pRódWøµî
(
Såög
 
‚ame
, 
èg
, 
boﬁón
 
de˛
) {

125 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

126 i‡(
de˛
) {

127 
ªt
.
	`≠≥nd
(" Sy°em.CﬁÀ˘i⁄s.S‹ãdDi˘i⁄¨y<°rög,°rög> "+
	`ˇpôÆize
(
‚ame
)+";\n");

129 
ªt
.
	`≠≥nd
(" {\n");

130 
	`ö¸Levñ
();

131 
ªt
.
	`≠≥nd
(" Org.A∑che.Juã.IIndex "+
	`gëId
("midx")+" =á_.SèπM≠(\""+
èg
+"\");\n");

132 
ªt
.
	`≠≥nd
(" "+
‚ame
+"=Çew System.Collections.SortedDictionary<string,string>();\n");

133 
ªt
.
	`≠≥nd
(" f‹ (; !"+
	`gëId
("midx")+".done(); "+getId("midx")+".incr()) {\n");

134 
ªt
.
	`≠≥nd
(
mKey
.
	`gíCsh¨pRódWøµî
(
	`gëId
("k"),gëId("k"),
åue
));

135 
ªt
.
	`≠≥nd
(
mVÆue
.
	`gíCsh¨pRódWøµî
(
	`gëId
("v"),gëId("v"),
åue
));

136 
ªt
.
	`≠≥nd
(" "+
‚ame
+".Add("+
	`gëId
("k")+","+getId("v")+");\n");

137 
ªt
.
	`≠≥nd
(" }\n");

138 
ªt
.
	`≠≥nd
("á_.EndM≠(\""+
èg
+"\");\n");

139 
	`de¸Levñ
();

140 
ªt
.
	`≠≥nd
(" }\n");

141  
ªt
.
	`toSåög
();

142 
	}
}

146 
Såög
 
	$gíCsh¨pRódMëhod
(
Såög
 
‚ame
, 
èg
) {

147  
	`gíCsh¨pRódWøµî
(
‚ame
, 
èg
, 
Ál£
);

148 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JRecord.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

31 
public
 cœs†
	cJRec‹d
 
exãnds
 
	mJCompTy≥
 {

33 
¥iv©e
 
Såög
 
	mmFQName
;

34 
¥iv©e
 
Såög
 
	mmName
;

35 
¥iv©e
 
Såög
 
	mmModuÀ
;

36 
¥iv©e
 
	mAºayLi°
<
	mJFõld
> 
	mmFõlds
;

41 
public
 
JRec‹d
(
Såög
 
«me
, 
AºayLi°
<
JFõld
> 
Êi°
) {

42 
su≥r
("°ru˘ " + 
«me
.
sub°rög
“ame.
œ°IndexOf
('.')+1),

43 
«me
.
ª∂a˚AŒ
("\\.","::"), 
gëCsh¨pFQName
(name),Çame, "Record",Çame, getCsharpFQName("IRecord"));

44 
	mmFQName
 = 
«me
;

45 
	midx
 = 
«me
.
œ°IndexOf
('.');

46 
	mmName
 = 
«me
.
sub°rög
(
idx
+1);

47 
	mmModuÀ
 = 
«me
.
sub°rög
(0, 
idx
);

48 
	mmFõlds
 = 
Êi°
;

51 
public
 
Såög
 
	$gëName
() {

52  
mName
;

53 
	}
}

55 
public
 
Såög
 
	$gëCsh¨pName
() {

56  "Id".
	`equÆs
(
mName
) ? "ZKId" : mName;

57 
	}
}

59 
public
 
Såög
 
	$gëJavaFQName
() {

60  
mFQName
;

61 
	}
}

63 
public
 
Såög
 
	$gëCµFQName
() {

64  
mFQName
.
	`ª∂a˚AŒ
("\\.", "::");

65 
	}
}

67 
public
 
Såög
 
	$gëJavaPackage
() {

68  
mModuÀ
;

69 
	}
}

71 
public
 
Såög
 
	$gëCµNameS∑˚
() {

72  
mModuÀ
.
	`ª∂a˚AŒ
("\\.", "::");

73 
	}
}

75 
public
 
Såög
 
	$gëCsh¨pNameS∑˚
() {

76 
Såög
[] 
∑πs
 = 
mModuÀ
.
	`•lô
("\\.");

77 
SåögBuf„r
 
«me•a˚
 = 
√w
 
	`SåögBuf„r
();

78 
i
 = 0; i < 
∑πs
.
Àngth
; i++) {

79 
Såög
 
ˇpôÆized
 = 
∑πs
[
i
].
	`sub°rög
(0, 1).
	`toUµîCa£
(Ë+Ö¨ts[i].sub°rög(1).
	`toLowîCa£
();

80 
«me•a˚
.
	`≠≥nd
(
ˇpôÆized
);

81 i‡(
i
 !
∑πs
.
Àngth
 - 1Ë
«me•a˚
.
	`≠≥nd
(".");

83  
«me•a˚
.
	`toSåög
();

84 
	}
}

86 
public
 
	gAºayLi°
<
	gJFõld
> 
	$gëFõlds
() {

87  
mFõlds
;

88 
	}
}

90 
public
 
Såög
 
	$gëSig«tuª
() {

91 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

92 
sb
.
	`≠≥nd
("L").≠≥nd(
mName
).append("(");

93 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
();) {

94 
Såög
 
s
 = 
i
.
	`√xt
().
	`gëSig«tuª
();

95 
sb
.
	`≠≥nd
(
s
);

97 
sb
.
	`≠≥nd
(")");

98  
sb
.
	`toSåög
();

99 
	}
}

101 
public
 
Såög
 
	$gíCµDe˛
(
Såög
 
‚ame
) {

102  " "+ 
	`gëCµNameS∑˚
(Ë+ "::" + 
mName
+" m"+
‚ame
+";\n";

103 
	}
}

105 
public
 
Såög
 
	$gíJavaRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

106  
	`gíJavaRódWøµî
(
‚ame
, 
èg
, 
Ál£
);

107 
	}
}

109 
public
 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

110 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

111 i‡(
de˛
) {

112 
ªt
.
	`≠≥nd
(" "+
	`gëJavaFQName
()+" "+
‚ame
+";\n");

114 
ªt
.
	`≠≥nd
(" "+
‚ame
+"√w "+
	`gëJavaFQName
()+"();\n");

115 
ªt
.
	`≠≥nd
("á_.ªadRec‹d("+
‚ame
+",\""+
èg
+"\");\n");

116  
ªt
.
	`toSåög
();

117 
	}
}

119 
public
 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

120  "á_.wrôeRec‹d("+
‚ame
+",\""+
èg
+"\");\n";

121 
	}
}

123 
Såög
 
	$gíCsh¨pRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

125  
	`gíCsh¨pRódWøµî
(
	`ˇpôÆize
(
‚ame
), 
èg
, 
Ál£
);

126 
	}
}

128 
public
 
Såög
 
	$gíCsh¨pRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

129 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

130 i‡(
de˛
) {

131 
ªt
.
	`≠≥nd
(" "+
	`gëCsh¨pFQName
(
mFQName
)+" "+
‚ame
+";\n");

133 
ªt
.
	`≠≥nd
(" "+
‚ame
+"√w "+
	`gëCsh¨pFQName
(
mFQName
)+"();\n");

134 
ªt
.
	`≠≥nd
("á_.RódRec‹d("+
‚ame
+",\""+
èg
+"\");\n");

135  
ªt
.
	`toSåög
();

136 
	}
}

138 
public
 
Såög
 
	$gíCsh¨pWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

139  "á_.WrôeRec‹d("+
‚ame
+",\""+
èg
+"\");\n";

140 
	}
}

142 
	gHashM≠
<
	gSåög
, Såög> 
	gve˘‹Såu˘s
 = 
√w
 
HashM≠
<
Såög
, String>();

143 
public
 
	$gíCCode
(
FûeWrôî
 
h
, FûeWrôî 
c
Ë
throws
 
IOEx˚±i⁄
 {

144 
JFõld
 
f
 : 
mFõlds
) {

145 i‡(
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JVe˘‹
) {

146 
JVe˘‹
 
jv
 = (JVe˘‹)
f
.
	`gëTy≥
();

147 
JTy≥
 
jvTy≥
 = 
jv
.
	`gëEÀmítTy≥
();

148 
Såög
 
°ru˘_«me
 = 
JVe˘‹
.
	`exåa˘Ve˘‹Name
(
jvTy≥
);

149 i‡(
ve˘‹Såu˘s
.
	`gë
(
°ru˘_«me
Ë=
nuŒ
) {

150 
ve˘‹Såu˘s
.
	`put
(
°ru˘_«me
, struct_name);

151 
h
.
	`wrôe
("°ru˘ " + 
°ru˘_«me
 + " {\¿ i¡32_àcou¡;\n" + 
jv
.
	`gëEÀmítTy≥
().
	`gíCDe˛
("*data") + "\n};\n");

152 
h
.
	`wrôe
("öà£rülize_" + 
°ru˘_«me
 + "(struct oarchive *out, const char *tag, struct " + struct_name + " *v);\n");

153 
h
.
	`wrôe
("öàde£rülize_" + 
°ru˘_«me
 + "(struct iarchive *in, const char *tag, struct " + struct_name + " *v);\n");

154 
h
.
	`wrôe
("öàÆloˇã_" + 
°ru˘_«me
 + "(struct " + struct_name + " *v, int32_tÜen);\n");

155 
h
.
	`wrôe
("öàdóŒoˇã_" + 
°ru˘_«me
 + "(struct " + struct_name + " *v);\n");

156 
c
.
	`wrôe
("öàÆloˇã_" + 
°ru˘_«me
 + "(struct " + struct_name + " *v, int32_tÜen) {\n");

157 
c
.
	`wrôe
(" if (!len) {\n");

158 
c
.
	`wrôe
(" v->count = 0;\n");

159 
c
.
	`wrôe
(" v->data = 0;\n");

160 
c
.
	`wrôe
(" }Élse {\n");

161 
c
.
	`wrôe
(" v->count =Üen;\n");

162 
c
.
	`wrôe
(" v->data = calloc(sizeof(*v->data),Üen);\n");

163 
c
.
	`wrôe
(" }\n");

164 
c
.
	`wrôe
("Ñeturn 0;\n");

165 
c
.
	`wrôe
("}\n");

166 
c
.
	`wrôe
("öàdóŒoˇã_" + 
°ru˘_«me
 + "(struct " + struct_name + " *v) {\n");

167 
c
.
	`wrôe
(" if (v->data) {\n");

168 
c
.
	`wrôe
(" int32_t i;\n");

169 
c
.
	`wrôe
(" for(i=0;i<v->count; i++) {\n");

170 
c
.
	`wrôe
(" dóŒoˇã_"+
JRec‹d
.
	`exåa˘MëhodSuffix
(
jvTy≥
)+"(&v->data[i]);\n");

171 
c
.
	`wrôe
(" }\n");

172 
c
.
	`wrôe
(" free(v->data);\n");

173 
c
.
	`wrôe
(" v->data = 0;\n");

174 
c
.
	`wrôe
(" }\n");

175 
c
.
	`wrôe
("Ñeturn 0;\n");

176 
c
.
	`wrôe
("}\n");

177 
c
.
	`wrôe
("öà£rülize_" + 
°ru˘_«me
 + "(struct oarchive *out, const char *tag, struct " + struct_name + " *v)\n");

178 
c
.
	`wrôe
("{\n");

179 
c
.
	`wrôe
(" int32_t count = v->count;\n");

180 
c
.
	`wrôe
(" intÑc = 0;\n");

181 
c
.
	`wrôe
(" int32_t i;\n");

182 
c
.
	`wrôe
("Ñc = out->start_vector(out,Åag, &count);\n");

183 
c
.
	`wrôe
(" for(i=0;i<v->count;i++) {\n");

184 
	`gíSîülize
(
c
, 
jvTy≥
, "data", "data[i]");

185 
c
.
	`wrôe
(" }\n");

186 
c
.
	`wrôe
("Ñc =Ñc ?Ñc : out->end_vector(out,Åag);\n");

187 
c
.
	`wrôe
("ÑeturnÑc;\n");

188 
c
.
	`wrôe
("}\n");

189 
c
.
	`wrôe
("öàde£rülize_" + 
°ru˘_«me
 + "(struct iarchive *in, const char *tag, struct " + struct_name + " *v)\n");

190 
c
.
	`wrôe
("{\n");

191 
c
.
	`wrôe
(" intÑc = 0;\n");

192 
c
.
	`wrôe
(" int32_t i;\n");

193 
c
.
	`wrôe
("Ñc = in->start_vector(in,Åag, &v->count);\n");

194 
c
.
	`wrôe
(" v->data = calloc(v->count, sizeof(*v->data));\n");

195 
c
.
	`wrôe
(" for(i=0;i<v->count;i++) {\n");

196 
	`gíDe£rülize
(
c
, 
jvTy≥
, "value", "data[i]");

197 
c
.
	`wrôe
(" }\n");

198 
c
.
	`wrôe
("Ñc = in->end_vector(in,Åag);\n");

199 
c
.
	`wrôe
("ÑeturnÑc;\n");

200 
c
.
	`wrôe
("}\n");

205 
Såög
 
ªc_«me
 = 
	`gëName
();

206 
h
.
	`wrôe
("°ru˘ " + 
ªc_«me
 + " {\n");

207 
JFõld
 
f
 : 
mFõlds
) {

208 
h
.
	`wrôe
(
f
.
	`gíCDe˛
());

210 
h
.
	`wrôe
("};\n");

211 
h
.
	`wrôe
("öà£rülize_" + 
ªc_«me
 + "(struct oarchive *out, const char *tag, struct " +Ñec_name + " *v);\n");

212 
h
.
	`wrôe
("öàde£rülize_" + 
ªc_«me
 + "(struct iarchive *in, const char *tag, struct " +Ñec_name + "*v);\n");

213 
h
.
	`wrôe
("void dóŒoˇã_" + 
ªc_«me
 + "(struct " +Ñec_name + "*);\n");

214 
c
.
	`wrôe
("öà£rülize_" + 
ªc_«me
 + "(struct oarchive *out, const char *tag, struct " +Ñec_name + " *v)");

215 
c
.
	`wrôe
("{\n");

216 
c
.
	`wrôe
(" intÑc;\n");

217 
c
.
	`wrôe
("Ñc = out->start_record(out,Åag);\n");

218 
JFõld
 
f
 : 
mFõlds
) {

219 
	`gíSîülize
(
c
, 
f
.
	`gëTy≥
(), f.
	`gëTag
(), f.
	`gëName
());

221 
c
.
	`wrôe
("Ñc =Ñc ?Ñc : out->end_record(out,Åag);\n");

222 
c
.
	`wrôe
("ÑeturnÑc;\n");

223 
c
.
	`wrôe
("}\n");

224 
c
.
	`wrôe
("öàde£rülize_" + 
ªc_«me
 + "(struct iarchive *in, const char *tag, struct " +Ñec_name + "*v)");

225 
c
.
	`wrôe
("{\n");

226 
c
.
	`wrôe
(" intÑc;\n");

227 
c
.
	`wrôe
("Ñc = in->start_record(in,Åag);\n");

228 
JFõld
 
f
 : 
mFõlds
) {

229 
	`gíDe£rülize
(
c
, 
f
.
	`gëTy≥
(), f.
	`gëTag
(), f.
	`gëName
());

231 
c
.
	`wrôe
("Ñc =Ñc ?Ñc : in->end_record(in,Åag);\n");

232 
c
.
	`wrôe
("ÑeturnÑc;\n");

233 
c
.
	`wrôe
("}\n");

234 
c
.
	`wrôe
("void dóŒoˇã_" + 
ªc_«me
 + "(struct " +Ñec_name + "*v)");

235 
c
.
	`wrôe
("{\n");

236 
JFõld
 
f
 : 
mFõlds
) {

237 i‡(
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JRec‹d
) {

238 
c
.
	`wrôe
(" dóŒoˇã_" + 
	`exåa˘Såu˘Name
(
f
.
	`gëTy≥
()Ë+ "(&v->" + f.
	`gëName
() + ");\n");

239 } i‡(
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JVe˘‹
) {

240 
JVe˘‹
 
vt
 = (JVe˘‹)
f
.
	`gëTy≥
();

241 
c
.
	`wrôe
(" dóŒoˇã_" + 
JVe˘‹
.
	`exåa˘Ve˘‹Name
(
vt
.
	`gëEÀmítTy≥
())+ "(&v->"+
f
.
	`gëName
()+");\n");

242 } i‡(
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JCompTy≥
) {

243 
c
.
	`wrôe
(" dóŒoˇã_" + 
	`exåa˘MëhodSuffix
(
f
.
	`gëTy≥
()Ë+ "(&v->"+f.
	`gëName
()+");\n");

246 
c
.
	`wrôe
("}\n");

247 
	}
}

249 
¥iv©e
 
	$gíSîülize
(
FûeWrôî
 
c
, 
JTy≥
 
ty≥
, 
Såög
 
èg
, Såög 
«me
Ë
throws
 
IOEx˚±i⁄
 {

250 i‡(
ty≥
 
ö°™˚of
 
JRec‹d
) {

251 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: sîülize_" + 
	`exåa˘Såu˘Name
(
ty≥
Ë+ "(out, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

252 } i‡(
ty≥
 
ö°™˚of
 
JVe˘‹
) {

253 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: sîülize_" + 
JVe˘‹
.
	`exåa˘Ve˘‹Name
(((JVe˘‹)
ty≥
).
	`gëEÀmítTy≥
()Ë+ "(out, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

255 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: out->£rülize_" + 
	`exåa˘MëhodSuffix
(
ty≥
Ë+ "(out, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

257 
	}
}

259 
¥iv©e
 
	$gíDe£rülize
(
FûeWrôî
 
c
, 
JTy≥
 
ty≥
, 
Såög
 
èg
, Såög 
«me
Ë
throws
 
IOEx˚±i⁄
 {

260 i‡(
ty≥
 
ö°™˚of
 
JRec‹d
) {

261 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: de£rülize_" + 
	`exåa˘Såu˘Name
(
ty≥
Ë+ "(ö, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

262 } i‡(
ty≥
 
ö°™˚of
 
JVe˘‹
) {

263 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: de£rülize_" + 
JVe˘‹
.
	`exåa˘Ve˘‹Name
(((JVe˘‹)
ty≥
).
	`gëEÀmítTy≥
()Ë+ "(ö, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

265 
c
.
	`wrôe
("Ñ¯r¯?Ñ¯: in->de£rülize_" + 
	`exåa˘MëhodSuffix
(
ty≥
Ë+ "(ö, \"" + 
èg
 + "\", &v->" + 
«me
 + ");\n");

267 
	}
}

269 
Såög
 
	$exåa˘MëhodSuffix
(
JTy≥
 
t
) {

270 i‡(
t
 
ö°™˚of
 
JRec‹d
) {

271  
	`exåa˘Såu˘Name
(
t
);

273  
t
.
	`gëMëhodSuffix
();

274 
	}
}

276 
¥iv©e
 
Såög
 
	$exåa˘Såu˘Name
(
JTy≥
 
t
) {

277 
Såög
 
ty≥
 = 
t
.
	`gëCTy≥
();

278 i‡(!
ty≥
.
	`°¨tsWôh
("struct ")) Åype;

279  
ty≥
.
	`sub°rög
("°ru˘ ".
	`Àngth
());

280 
	}
}

282 
public
 
	$gíCµCode
(
FûeWrôî
 
hh
, FûeWrôî 
cc
)

283 
throws
 
IOEx˚±i⁄
 {

284 
Såög
[] 
ns
 = 
	`gëCµNameS∑˚
().
	`•lô
("::");

285 
i
 = 0; i < 
ns
.
Àngth
; i++) {

286 
hh
.
	`wrôe
("«me•a˚ "+
ns
[
i
]+" {\n");

289 
hh
.
	`wrôe
("˛as†"+
	`gëName
()+" :Öublic ::hadoop::Record {\n");

290 
hh
.
	`wrôe
("private:\n");

292 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
();) {

293 
JFõld
 
jf
 = 
i
.
	`√xt
();

294 
hh
.
	`wrôe
(
jf
.
	`gíCµDe˛
());

296 
hh
.
	`wrôe
(" muèbÀ std::bô£t<"+
mFõlds
.
	`size
()+"> bs_;\n");

297 
hh
.
	`wrôe
("public:\n");

298 
hh
.
	`wrôe
(" virtual void serialize(::hadoop::OArchive&á_, const char*Åag) const;\n");

299 
hh
.
	`wrôe
(" virtual void deserialize(::hadoop::IArchive&á_, const char*Åag);\n");

300 
hh
.
	`wrôe
(" virtual const ::std::string&Åype() const;\n");

301 
hh
.
	`wrôe
(" virtual const ::std::string& signature() const;\n");

302 
hh
.
	`wrôe
(" virtual bool validate() const;\n");

303 
hh
.
	`wrôe
(" vútuÆ boﬁ o≥øt‹<(c⁄° "+
	`gëName
()+"&Öeer_) const;\n");

304 
hh
.
	`wrôe
(" vútuÆ boﬁ o≥øt‹==(c⁄° "+
	`gëName
()+"&Öeer_) const;\n");

305 
hh
.
	`wrôe
(" vútuÆ ~"+
	`gëName
()+"() {};\n");

306 
fIdx
 = 0;

307 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

308 
JFõld
 
jf
 = 
i
.
	`√xt
();

309 
hh
.
	`wrôe
(
jf
.
	`gíCµGëSë
(
fIdx
));

311 
hh
.
	`wrôe
("}; //ÉndÑec‹d "+
	`gëName
()+"\n");

312 
i
=
ns
.
Àngth
-1; i>=0; i--) {

313 
hh
.
	`wrôe
("} //ÉndÇame•a˚ "+
ns
[
i
]+"\n");

315 
cc
.
	`wrôe
("void "+
	`gëCµFQName
()+"::serialize(::hadoop::OArchive&á_, const char*Åag) const {\n");

316 
cc
.
	`wrôe
(" if (!validate())ÅhrowÇew ::hadoop::IOException(\"All fieldsÇot set.\");\n");

317 
cc
.
	`wrôe
("á_.startRecord(*this,tag);\n");

318 
fIdx
 = 0;

319 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

320 
JFõld
 
jf
 = 
i
.
	`√xt
();

321 
Såög
 
«me
 = 
jf
.
	`gëName
();

322 i‡(
jf
.
	`gëTy≥
(Ë
ö°™˚of
 
JBuf„r
) {

323 
cc
.
	`wrôe
("á_.£rülize(m"+
«me
+",m"+«me+".Àngth(),\""+
jf
.
	`gëTag
()+"\");\n");

325 
cc
.
	`wrôe
("á_.£rülize(m"+
«me
+",\""+
jf
.
	`gëTag
()+"\");\n");

327 
cc
.
	`wrôe
(" bs_.ª£t("+
fIdx
+");\n");

329 
cc
.
	`wrôe
("á_.endRecord(*this,tag);\n");

330 
cc
.
	`wrôe
("Ñeturn;\n");

331 
cc
.
	`wrôe
("}\n");

333 
cc
.
	`wrôe
("void "+
	`gëCµFQName
()+"::deserialize(::hadoop::IArchive&á_, const char*Åag) {\n");

334 
cc
.
	`wrôe
("á_.startRecord(*this,tag);\n");

335 
fIdx
 = 0;

336 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

337 
JFõld
 
jf
 = 
i
.
	`√xt
();

338 
Såög
 
«me
 = 
jf
.
	`gëName
();

339 i‡(
jf
.
	`gëTy≥
(Ë
ö°™˚of
 
JBuf„r
) {

340 
cc
.
	`wrôe
(" { size_àÀn=0;á_.de£rülize(m"+
«me
+",Àn,\""+
jf
.
	`gëTag
()+"\");}\n");

342 
cc
.
	`wrôe
("á_.de£rülize(m"+
«me
+",\""+
jf
.
	`gëTag
()+"\");\n");

344 
cc
.
	`wrôe
(" bs_.£t("+
fIdx
+");\n");

346 
cc
.
	`wrôe
("á_.endRecord(*this,tag);\n");

347 
cc
.
	`wrôe
("Ñeturn;\n");

348 
cc
.
	`wrôe
("}\n");

350 
cc
.
	`wrôe
("boﬁ "+
	`gëCµFQName
()+"::validate() const {\n");

351 
cc
.
	`wrôe
(" if (bs_.size() != bs_.count())Ñeturn false;\n");

352 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

353 
JFõld
 
jf
 = (JFõldË
i
.
	`√xt
();

354 
JTy≥
 
ty≥
 = 
jf
.
	`gëTy≥
();

355 i‡(
ty≥
 
ö°™˚of
 
JRec‹d
) {

356 
cc
.
	`wrôe
(" i‡(!m"+
jf
.
	`gëName
()+".validate())Ñeturn false;\n");

359 
cc
.
	`wrôe
("ÑeturnÅrue;\n");

360 
cc
.
	`wrôe
("}\n");

362 
cc
.
	`wrôe
("boﬁ "+
	`gëCµFQName
()+"::operator< (const "+getCppFQName()+"&Öeer_) const {\n");

363 
cc
.
	`wrôe
("Ñeturn (1\n");

364 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
();) {

365 
JFõld
 
jf
 = 
i
.
	`√xt
();

366 
Såög
 
«me
 = 
jf
.
	`gëName
();

367 
cc
.
	`wrôe
(" && (m"+
«me
+" <Öeer_.m"+name+")\n");

369 
cc
.
	`wrôe
(" );\n");

370 
cc
.
	`wrôe
("}\n");

372 
cc
.
	`wrôe
("boﬁ "+
	`gëCµFQName
()+"::operator== (const "+getCppFQName()+"&Öeer_) const {\n");

373 
cc
.
	`wrôe
("Ñeturn (1\n");

374 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
();) {

375 
JFõld
 
jf
 = 
i
.
	`√xt
();

376 
Såög
 
«me
 = 
jf
.
	`gëName
();

377 
cc
.
	`wrôe
(" && (m"+
«me
+" ==Öeer_.m"+name+")\n");

379 
cc
.
	`wrôe
(" );\n");

380 
cc
.
	`wrôe
("}\n");

382 
cc
.
	`wrôe
("c⁄° ::°d::°rög&"+
	`gëCµFQName
()+"::type() const {\n");

383 
cc
.
	`wrôe
(" sèti¯c⁄° ::°d::°rögÅy≥_(\""+
mName
+"\");\n");

384 
cc
.
	`wrôe
("ÑeturnÅype_;\n");

385 
cc
.
	`wrôe
("}\n");

387 
cc
.
	`wrôe
("c⁄° ::°d::°rög&"+
	`gëCµFQName
()+"::signature() const {\n");

388 
cc
.
	`wrôe
(" sèti¯c⁄° ::°d::°rög sig_(\""+
	`gëSig«tuª
()+"\");\n");

389 
cc
.
	`wrôe
("Ñeturn sig_;\n");

390 
cc
.
	`wrôe
("}\n");

392 
	}
}

394 
public
 
	$gíJavaCode
(
Fûe
 
ouçutDúe˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

395 
Såög
 
pkg
 = 
	`gëJavaPackage
();

396 
Såög
 
pkg∑th
 = 
pkg
.
	`ª∂a˚AŒ
("\\.", "/");

397 
Fûe
 
pkgdú
 = 
√w
 
	`Fûe
(
ouçutDúe˘‹y
, 
pkg∑th
);

398 i‡(!
pkgdú
.
	`exi°s
()) {

400 i‡(!
pkgdú
.
	`mkdús
()) {

401 
throw
 
√w
 
	`IOEx˚±i⁄
("C™¬Ÿ cª©êdúe˘‹y: " + 
pkg∑th
);

403 } i‡(!
pkgdú
.
	`isDúe˘‹y
()) {

404 
throw
 
√w
 
	`IOEx˚±i⁄
(
pkg∑th
 + " isÇotá directory.");

406 
Fûe
 
jfûe
 = 
√w
 
	`Fûe
(
pkgdú
, 
	`gëName
()+".java");

407 
FûeWrôî
 
jj
 = 
√w
 
	`FûeWrôî
(
jfûe
);

408 
jj
.
	`wrôe
("// File generated by hadoopÑecord compiler. DoÇotÉdit.\n");

409 
jj
.
	`wrôe
("/**\n");

410 
jj
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

411 
jj
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

412 
jj
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

413 
jj
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

414 
jj
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

415 
jj
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

416 
jj
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

417 
jj
.
	`wrôe
("*\n");

418 
jj
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

419 
jj
.
	`wrôe
("*\n");

420 
jj
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

421 
jj
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

422 
jj
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

423 
jj
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

424 
jj
.
	`wrôe
("*Üimitations underÅhe License.\n");

425 
jj
.
	`wrôe
("*/\n");

426 
jj
.
	`wrôe
("\n");

427 
jj
.
	`wrôe
("∑ckagê"+
	`gëJavaPackage
()+";\n\n");

428 
jj
.
	`wrôe
("import org.apache.jute.*;\n");

429 
jj
.
	`wrôe
("publi¯˛as†"+
	`gëName
()+" implements Record {\n");

430 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
();) {

431 
JFõld
 
jf
 = 
i
.
	`√xt
();

432 
jj
.
	`wrôe
(
jf
.
	`gíJavaDe˛
());

434 
jj
.
	`wrôe
("Öubli¯"+
	`gëName
()+"() {\n");

435 
jj
.
	`wrôe
(" }\n");

437 
jj
.
	`wrôe
("Öubli¯"+
	`gëName
()+"(\n");

438 
fIdx
 = 0;

439 
fLí
 = 
mFõlds
.
	`size
();

440 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

441 
JFõld
 
jf
 = 
i
.
	`√xt
();

442 
jj
.
	`wrôe
(
jf
.
	`gíJavaC⁄°ru˘‹P¨am
(jf.
	`gëName
()));

443 
jj
.
	`wrôe
((
fLí
-1 =
fIdx
)?"":",\n");

445 
jj
.
	`wrôe
(") {\n");

446 
fIdx
 = 0;

447 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

448 
JFõld
 
jf
 = 
i
.
	`√xt
();

449 
jj
.
	`wrôe
(
jf
.
	`gíJavaC⁄°ru˘‹Së
(jf.
	`gëName
()));

451 
jj
.
	`wrôe
(" }\n");

452 
fIdx
 = 0;

453 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

454 
JFõld
 
jf
 = 
i
.
	`√xt
();

455 
jj
.
	`wrôe
(
jf
.
	`gíJavaGëSë
(
fIdx
));

457 
jj
.
	`wrôe
("Öublic void serialize(OutputArchiveá_, StringÅag)Åhrows java.io.IOException {\n");

458 
jj
.
	`wrôe
("á_.startRecord(this,tag);\n");

459 
fIdx
 = 0;

460 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

461 
JFõld
 
jf
 = 
i
.
	`√xt
();

462 
jj
.
	`wrôe
(
jf
.
	`gíJavaWrôeMëhodName
());

464 
jj
.
	`wrôe
("á_.endRecord(this,tag);\n");

465 
jj
.
	`wrôe
(" }\n");

467 
jj
.
	`wrôe
("Öublic void deserialize(InputArchiveá_, StringÅag)Åhrows java.io.IOException {\n");

468 
jj
.
	`wrôe
("á_.startRecord(tag);\n");

469 
fIdx
 = 0;

470 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

471 
JFõld
 
jf
 = 
i
.
	`√xt
();

472 
jj
.
	`wrôe
(
jf
.
	`gíJavaRódMëhodName
());

474 
jj
.
	`wrôe
("á_.endRecord(tag);\n");

475 
jj
.
	`wrôe
("}\n");

477 
jj
.
	`wrôe
("Öublic StringÅoString() {\n");

478 
jj
.
	`wrôe
("Åry {\n");

479 
jj
.
	`wrôe
(" java.io.ByteArrayOutputStream s =\n");

480 
jj
.
	`wrôe
("Çew java.io.ByteArrayOutputStream();\n");

481 
jj
.
	`wrôe
(" CsvOutputArchiveá_ = \n");

482 
jj
.
	`wrôe
("Çew CsvOutputArchive(s);\n");

483 
jj
.
	`wrôe
("á_.startRecord(this,\"\");\n");

484 
fIdx
 = 0;

485 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

486 
JFõld
 
jf
 = 
i
.
	`√xt
();

487 
jj
.
	`wrôe
(
jf
.
	`gíJavaWrôeMëhodName
());

489 
jj
.
	`wrôe
("á_.endRecord(this,\"\");\n");

490 
jj
.
	`wrôe
("ÑeturnÇew String(s.toByteArray(), \"UTF-8\");\n");

491 
jj
.
	`wrôe
(" } catch (ThrowableÉx) {\n");

492 
jj
.
	`wrôe
("Éx.printStackTrace();\n");

493 
jj
.
	`wrôe
(" }\n");

494 
jj
.
	`wrôe
("Ñeturn \"ERROR\";\n");

495 
jj
.
	`wrôe
(" }\n");

497 
jj
.
	`wrôe
("Öublic void write(java.io.DataOutput out)Åhrows java.io.IOException {\n");

498 
jj
.
	`wrôe
(" BinaryOutputArchiveárchive =Çew BinaryOutputArchive(out);\n");

499 
jj
.
	`wrôe
(" serialize(archive, \"\");\n");

500 
jj
.
	`wrôe
(" }\n");

502 
jj
.
	`wrôe
("Öublic voidÑeadFields(java.io.DataInput in)Åhrows java.io.IOException {\n");

503 
jj
.
	`wrôe
(" BinaryInputArchiveárchive =Çew BinaryInputArchive(in);\n");

504 
jj
.
	`wrôe
(" deserialize(archive, \"\");\n");

505 
jj
.
	`wrôe
(" }\n");

507 
jj
.
	`wrôe
("Öublic int compareTo (ObjectÖeer_)Åhrows ClassCastException {\n");

508 
boﬁón
 
unim∂emíãd
 = 
Ál£
;

509 
JFõld
 
f
 : 
mFõlds
) {

510 i‡((
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JM≠
)

511 || (
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JVe˘‹
))

513 
unim∂emíãd
 = 
åue
;

516 i‡(
unim∂emíãd
) {

517 
jj
.
	`wrôe
("ÅhrowÇew UnsupportedOperationException(\"comparing "

518 + 
	`gëName
() + " is unimplemented\");\n");

520 
jj
.
	`wrôe
(" i‡(!’ìr_ in°™˚o‡"+
	`gëName
()+")) {\n");

521 
jj
.
	`wrôe
("ÅhrowÇew ClassCastException(\"Comparing differentÅypes ofÑecords.\");\n");

522 
jj
.
	`wrôe
(" }\n");

523 
jj
.
	`wrôe
(" "+
	`gëName
()+"Öeer = ("+getName()+")Öeer_;\n");

524 
jj
.
	`wrôe
(" intÑet = 0;\n");

525 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

526 
JFõld
 
jf
 = 
i
.
	`√xt
();

527 
jj
.
	`wrôe
(
jf
.
	`gíJavaCom∑ªTo
());

528 
jj
.
	`wrôe
(" if (ret != 0)ÑeturnÑet;\n");

530 
jj
.
	`wrôe
("ÑeturnÑet;\n");

532 
jj
.
	`wrôe
(" }\n");

534 
jj
.
	`wrôe
("Öublic booleanÉquals(ObjectÖeer_) {\n");

535 
jj
.
	`wrôe
(" i‡(!’ìr_ in°™˚o‡"+
	`gëName
()+")) {\n");

536 
jj
.
	`wrôe
("Ñeturn false;\n");

537 
jj
.
	`wrôe
(" }\n");

538 
jj
.
	`wrôe
(" if (peer_ ==Åhis) {\n");

539 
jj
.
	`wrôe
("ÑeturnÅrue;\n");

540 
jj
.
	`wrôe
(" }\n");

541 
jj
.
	`wrôe
(" "+
	`gëName
()+"Öeer = ("+getName()+")Öeer_;\n");

542 
jj
.
	`wrôe
(" booleanÑet = false;\n");

543 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

544 
JFõld
 
jf
 = 
i
.
	`√xt
();

545 
jj
.
	`wrôe
(
jf
.
	`gíJavaEquÆs
());

546 
jj
.
	`wrôe
(" if (!ret)ÑeturnÑet;\n");

548 
jj
.
	`wrôe
("ÑeturnÑet;\n");

549 
jj
.
	`wrôe
(" }\n");

551 
jj
.
	`wrôe
("Öublic int hashCode() {\n");

552 
jj
.
	`wrôe
(" intÑesult = 17;\n");

553 
jj
.
	`wrôe
(" intÑet;\n");

554 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

555 
JFõld
 
jf
 = 
i
.
	`√xt
();

556 
jj
.
	`wrôe
(
jf
.
	`gíJavaHashCode
());

557 
jj
.
	`wrôe
("Ñesult = 37*result +Ñet;\n");

559 
jj
.
	`wrôe
("ÑeturnÑesult;\n");

560 
jj
.
	`wrôe
(" }\n");

561 
jj
.
	`wrôe
("Öublic static String signature() {\n");

562 
jj
.
	`wrôe
("Ñëu∫ \""+
	`gëSig«tuª
()+"\";\n");

563 
jj
.
	`wrôe
(" }\n");

565 
jj
.
	`wrôe
("}\n");

567 
jj
.
	`˛o£
();

568 
	}
}

570 
public
 
	$gíCsh¨pCode
(
Fûe
 
ouçutDúe˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

571 i‡(!
ouçutDúe˘‹y
.
	`exi°s
()) {

573 i‡(!
ouçutDúe˘‹y
.
	`mkdús
()) {

574 
throw
 
√w
 
	`IOEx˚±i⁄
("C™¬Ÿ cª©êdúe˘‹y: " + 
ouçutDúe˘‹y
);

576 } i‡(!
ouçutDúe˘‹y
.
	`isDúe˘‹y
()) {

577 
throw
 
√w
 
	`IOEx˚±i⁄
(
ouçutDúe˘‹y
 + " isÇotá directory.");

579 
Fûe
 
csh¨pFûe
 = 
√w
 
	`Fûe
(
ouçutDúe˘‹y
, 
	`gëName
()+".cs");

580 
FûeWrôî
 
cs
 = 
√w
 
	`FûeWrôî
(
csh¨pFûe
);

581 
cs
.
	`wrôe
("// File generated by hadoopÑecord compiler. DoÇotÉdit.\n");

582 
cs
.
	`wrôe
("/**\n");

583 
cs
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

584 
cs
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

585 
cs
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

586 
cs
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

587 
cs
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

588 
cs
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

589 
cs
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

590 
cs
.
	`wrôe
("*\n");

591 
cs
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

592 
cs
.
	`wrôe
("*\n");

593 
cs
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

594 
cs
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

595 
cs
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

596 
cs
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

597 
cs
.
	`wrôe
("*Üimitations underÅhe License.\n");

598 
cs
.
	`wrôe
("*/\n");

599 
cs
.
	`wrôe
("\n");

600 
cs
.
	`wrôe
("using System;\n");

601 
cs
.
	`wrôe
("using Org.Apache.Jute;\n");

602 
cs
.
	`wrôe
("\n");

603 
cs
.
	`wrôe
("«me•a˚ "+
	`gëCsh¨pNameS∑˚
()+"\n");

604 
cs
.
	`wrôe
("{\n");

606 
Såög
 
˛assName
 = 
	`gëCsh¨pName
();

607 
cs
.
	`wrôe
("publi¯˛as†"+
˛assName
+" : IRecord, IComparable \n");

608 
cs
.
	`wrôe
("{\n");

609 
cs
.
	`wrôe
("Öubli¯"+ 
˛assName
 +"() {\n");

610 
cs
.
	`wrôe
(" }\n");

612 
cs
.
	`wrôe
("Öubli¯"+
˛assName
+"(\n");

613 
fIdx
 = 0;

614 
fLí
 = 
mFõlds
.
	`size
();

615 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

616 
JFõld
 
jf
 = 
i
.
	`√xt
();

617 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pC⁄°ru˘‹P¨am
(jf.
	`gëCsh¨pName
()));

618 
cs
.
	`wrôe
((
fLí
-1 =
fIdx
)?"":",\n");

620 
cs
.
	`wrôe
(") {\n");

621 
fIdx
 = 0;

622 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

623 
JFõld
 
jf
 = 
i
.
	`√xt
();

624 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pC⁄°ru˘‹Së
(jf.
	`gëCsh¨pName
()));

626 
cs
.
	`wrôe
(" }\n");

627 
fIdx
 = 0;

628 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

629 
JFõld
 
jf
 = 
i
.
	`√xt
();

630 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pGëSë
(
fIdx
));

631 
cs
.
	`wrôe
("\n");

633 
cs
.
	`wrôe
("Öublic void Serialize(IOutputArchiveá_, StringÅag) {\n");

634 
cs
.
	`wrôe
("á_.StartRecord(this,tag);\n");

635 
fIdx
 = 0;

636 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

637 
JFõld
 
jf
 = 
i
.
	`√xt
();

638 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pWrôeMëhodName
());

640 
cs
.
	`wrôe
("á_.EndRecord(this,tag);\n");

641 
cs
.
	`wrôe
(" }\n");

643 
cs
.
	`wrôe
("Öublic void Deserialize(IInputArchiveá_, StringÅag) {\n");

644 
cs
.
	`wrôe
("á_.StartRecord(tag);\n");

645 
fIdx
 = 0;

646 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

647 
JFõld
 
jf
 = 
i
.
	`√xt
();

648 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pRódMëhodName
());

650 
cs
.
	`wrôe
("á_.EndRecord(tag);\n");

651 
cs
.
	`wrôe
("}\n");

653 
cs
.
	`wrôe
("Öublic override String ToString() {\n");

654 
cs
.
	`wrôe
("Åry {\n");

655 
cs
.
	`wrôe
(" System.IO.MemoryStream ms =Çew System.IO.MemoryStream();\n");

656 
cs
.
	`wrôe
(" MiscUtil.IO.EndianBinaryWriter writer =\n");

657 
cs
.
	`wrôe
("Çew MiscUtil.IO.EndianBinaryWriter(MiscUtil.Conversion.EndianBitConverter.Big, ms, System.Text.Encoding.UTF8);\n");

658 
cs
.
	`wrôe
(" BinaryOutputArchiveá_ = \n");

659 
cs
.
	`wrôe
("Çew BinaryOutputArchive(writer);\n");

660 
cs
.
	`wrôe
("á_.StartRecord(this,\"\");\n");

661 
fIdx
 = 0;

662 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

663 
JFõld
 
jf
 = 
i
.
	`√xt
();

664 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pWrôeMëhodName
());

666 
cs
.
	`wrôe
("á_.EndRecord(this,\"\");\n");

667 
cs
.
	`wrôe
(" ms.Position = 0;\n");

668 
cs
.
	`wrôe
("Ñeturn System.Text.Encoding.UTF8.GetString(ms.ToArray());\n");

669 
cs
.
	`wrôe
(" } catch (ExceptionÉx) {\n");

670 
cs
.
	`wrôe
(" Console.WriteLine(ex.StackTrace);\n");

671 
cs
.
	`wrôe
(" }\n");

672 
cs
.
	`wrôe
("Ñeturn \"ERROR\";\n");

673 
cs
.
	`wrôe
(" }\n");

675 
cs
.
	`wrôe
("Öublic void Write(MiscUtil.IO.EndianBinaryWriter writer) {\n");

676 
cs
.
	`wrôe
(" BinaryOutputArchiveárchive =Çew BinaryOutputArchive(writer);\n");

677 
cs
.
	`wrôe
(" Serialize(archive, \"\");\n");

678 
cs
.
	`wrôe
(" }\n");

680 
cs
.
	`wrôe
("Öublic void ReadFields(MiscUtil.IO.EndianBinaryReaderÑeader) {\n");

681 
cs
.
	`wrôe
(" BinaryInputArchiveárchive =Çew BinaryInputArchive(reader);\n");

682 
cs
.
	`wrôe
(" Deserialize(archive, \"\");\n");

683 
cs
.
	`wrôe
(" }\n");

685 
cs
.
	`wrôe
("Öublic int CompareTo (objectÖeer_) {\n");

686 
boﬁón
 
unim∂emíãd
 = 
Ál£
;

687 
JFõld
 
f
 : 
mFõlds
) {

688 i‡((
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JM≠
)

689 || (
f
.
	`gëTy≥
(Ë
ö°™˚of
 
JVe˘‹
))

691 
unim∂emíãd
 = 
åue
;

694 i‡(
unim∂emíãd
) {

695 
cs
.
	`wrôe
("ÅhrowÇew InvalidOperationException(\"comparing "

696 + 
	`gëCsh¨pName
() + " is unimplemented\");\n");

698 
cs
.
	`wrôe
(" i‡(!’ìr_ i†"+
	`gëCsh¨pName
()+")) {\n");

699 
cs
.
	`wrôe
("ÅhrowÇew InvalidOperationException(\"Comparing differentÅypes ofÑecords.\");\n");

700 
cs
.
	`wrôe
(" }\n");

701 
cs
.
	`wrôe
(" "+
	`gëCsh¨pName
()+"Öeer = ("+getCsharpName()+")Öeer_;\n");

702 
cs
.
	`wrôe
(" intÑet = 0;\n");

703 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

704 
JFõld
 
jf
 = 
i
.
	`√xt
();

705 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pCom∑ªTo
());

706 
cs
.
	`wrôe
(" if (ret != 0)ÑeturnÑet;\n");

708 
cs
.
	`wrôe
("ÑeturnÑet;\n");

710 
cs
.
	`wrôe
(" }\n");

712 
cs
.
	`wrôe
("Öublic override bool Equals(objectÖeer_) {\n");

713 
cs
.
	`wrôe
(" i‡(!’ìr_ i†"+
	`gëCsh¨pName
()+")) {\n");

714 
cs
.
	`wrôe
("Ñeturn false;\n");

715 
cs
.
	`wrôe
(" }\n");

716 
cs
.
	`wrôe
(" if (peer_ ==Åhis) {\n");

717 
cs
.
	`wrôe
("ÑeturnÅrue;\n");

718 
cs
.
	`wrôe
(" }\n");

719 
cs
.
	`wrôe
(" boolÑet = false;\n");

720 
cs
.
	`wrôe
(" " + 
	`gëCsh¨pName
() + "Öeer = (" + getCsharpName() + ")peer_;\n");

721 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

722 
JFõld
 
jf
 = 
i
.
	`√xt
();

723 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pEquÆs
());

724 
cs
.
	`wrôe
(" if (!ret)ÑeturnÑet;\n");

726 
cs
.
	`wrôe
("ÑeturnÑet;\n");

727 
cs
.
	`wrôe
(" }\n");

729 
cs
.
	`wrôe
("Öublic override int GetHashCode() {\n");

730 
cs
.
	`wrôe
(" intÑesult = 17;\n");

731 
cs
.
	`wrôe
(" intÑet;\n");

732 
Iãøt‹
<
JFõld
> 
i
 = 
mFõlds
.
	`ôî©‹
(); i.
	`hasNext
(); 
fIdx
++) {

733 
JFõld
 
jf
 = 
i
.
	`√xt
();

734 
cs
.
	`wrôe
(
jf
.
	`gíCsh¨pHashCode
());

735 
cs
.
	`wrôe
("Ñesult = 37*result +Ñet;\n");

737 
cs
.
	`wrôe
("ÑeturnÑesult;\n");

738 
cs
.
	`wrôe
(" }\n");

739 
cs
.
	`wrôe
("Öublic static string Signature() {\n");

740 
cs
.
	`wrôe
("Ñëu∫ \""+
	`gëSig«tuª
()+"\";\n");

741 
cs
.
	`wrôe
(" }\n");

743 
cs
.
	`wrôe
("}\n");

744 
cs
.
	`wrôe
("}\n");

746 
cs
.
	`˛o£
();

747 
	}
}

749 
public
 
Såög
 
	$gëCsh¨pFQName
(
Såög
 
«me
) {

750 
Såög
[] 
∑ckages
 = 
«me
.
	`•lô
("\\.");

751 
SåögBuf„r
 
fQName
 = 
√w
 
	`SåögBuf„r
();

752 
i
 = 0; i < 
∑ckages
.
Àngth
; i++) {

753 
Såög
 
∑ck
 = 
∑ckages
[
i
];

754 
∑ck
 = 
	`ˇpôÆize
(pack);

755 
∑ck
 = "Id".
	`equÆs
(pack) ? "ZKId" :Öack;

756 
fQName
.
	`≠≥nd
(
	`ˇpôÆize
(
∑ck
));

757 i‡(
i
 !
∑ckages
.
Àngth
 - 1Ë
fQName
.
	`≠≥nd
(".");

759  
fQName
.
	`toSåög
();

760 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JString.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJSåög
 
exãnds
 
	mJCompTy≥
 {

27 
public
 
	$JSåög
() {

28 
	`su≥r
("char *", " ::std::string", "string", "String", "String", "String", "string");

31 
public
 
Såög
 
	$gëSig«tuª
() {

33 
	}
}

35 
public
 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

36 
Såög
 
ªt
 = "";

37 i‡(
de˛
) {

38 
ªt
 = " Såög "+
‚ame
+";\n";

40  
ªt
 + " "+
‚ame
+"˜_.ªadSåög(\""+
èg
+"\");\n";

41 
	}
}

43 
public
 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

44  "á_.wrôeSåög("+
‚ame
+",\""+
èg
+"\");\n";

45 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JType.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

25 
ab°ø˘
 
public
 cœs†
	cJTy≥
 {

27 
¥iv©e
 
Såög
 
	mmCName
;

28 
¥iv©e
 
Såög
 
	mmCµName
;

29 
¥iv©e
 
Såög
 
	mmCsh¨pName
;

30 
¥iv©e
 
Såög
 
	mmJavaName
;

31 
¥Ÿe˘ed
 
Såög
 
	mmMëhodSuffix
;

32 
¥iv©e
 
Såög
 
	mmWøµî
;

33 
¥iv©e
 
Såög
 
	mmSh¨pWøµî
;

34 
¥iv©e
 
Såög
 
	mmUnwøpMëhod
;

39 
	$JTy≥
(
Såög
 
˙ame
, Såög 
˝≤ame
, Såög 
csh¨pName
, Såög 
jav™ame
, Såög 
suffix
, Såög 
wøµî
, Såög 
csh¨pWøµî
, Såög 
unwøp
) {

40 
mCName
 = 
˙ame
;

41 
mCµName
 = 
˝≤ame
;

42 
mCsh¨pName
 = "Id".
	`equÆs
(
csh¨pName
) ? "ZKId" : csharpName;

43 
mJavaName
 = 
jav™ame
;

44 
mMëhodSuffix
 = 
suffix
;

45 
mWøµî
 = 
wøµî
;

46 
mSh¨pWøµî
 = 
csh¨pWøµî
;

47 
mUnwøpMëhod
 = 
unwøp
;

50 
ab°ø˘
 
Såög
 
	`gëSig«tuª
();

52 
Såög
 
	$gíCµDe˛
(
Såög
 
‚ame
) {

53  " "+
mCµName
+" m"+
‚ame
+";\n";

54 
	}
}

56 
Såög
 
	$gíCDe˛
(
Såög
 
«me
) {

57  " " + 
mCName
 + " "+
«me
+";\n";

58 
	}
}

60 
public
 
Såög
 
	$gíCsh¨pDe˛
(
Såög
 
«me
) {

61  "Öriv©ê"+
mCsh¨pName
+" " +
«me
+";\n";

62 
	}
}

64 
Såög
 
	$gíJavaDe˛
 (
Såög
 
‚ame
) {

65  "Öriv©ê"+
mJavaName
+" " +
‚ame
+";\n";

66 
	}
}

68 
Såög
 
	$gíJavaC⁄°ru˘‹P¨am
 (
Såög
 
‚ame
) {

69  " "+
mJavaName
+" "+
‚ame
;

70 
	}
}

72 
Såög
 
	$gíCµGëSë
(
Såög
 
‚ame
, 
fIdx
) {

73 
Såög
 
gëFunc
 = " vútuÆ "+
mCµName
+" gë"+
‚ame
+"() const {\n";

74 
gëFunc
 +"Ñëu∫ m"+
‚ame
+";\n";

75 
gëFunc
 += " }\n";

76 
Såög
 
£tFunc
 = " vútuÆ void së"+
‚ame
+"("+
mCµName
+" m_) {\n";

77 
£tFunc
 +" m"+
‚ame
+"=m_; bs_.£t("+
fIdx
+");\n";

78 
£tFunc
 += " }\n";

79  
gëFunc
+
£tFunc
;

80 
	}
}

82 
Såög
 
	$gíCsh¨pGëSë
(
Såög
 
‚ame
, 
fIdx
) {

83 
Såög
 
gëFunc
 = "Öubli¯" + 
	`gëCsh¨pTy≥
(Ë+ " " + 
	`ˇpôÆize
(
‚ame
) + " { get; set; } ";

84  
gëFunc
;

85 
	}
}

87 
Såög
 
	$ˇpôÆize
(
Såög
 
s
) {

88  
s
.
	`sub°rög
(0,1).
	`toUµîCa£
()+s.substring(1);

89 
	}
}

90 
Såög
 
	$gíJavaGëSë
(
Såög
 
‚ame
, 
fIdx
) {

91 
Såög
 
gëFunc
 = "Öubli¯"+
mJavaName
+" gë"+
	`ˇpôÆize
(
‚ame
)+"() {\n";

92 
gëFunc
 +"Ñëu∫ "+
‚ame
+";\n";

93 
gëFunc
 += " }\n";

94 
Såög
 
£tFunc
 = "Öubli¯void së"+
	`ˇpôÆize
(
‚ame
)+"("+
mJavaName
+" m_) {\n";

95 
£tFunc
 +" " + 
‚ame
+"=m_;\n";

96 
£tFunc
 += " }\n";

97  
gëFunc
+
£tFunc
;

98 
	}
}

100 
Såög
 
	$gëCTy≥
() {

101  
mCName
;

102 
	}
}

103 
Såög
 
	$gëCµTy≥
() {

104  
mCµName
;

105 
	}
}

107 
Såög
 
	$gëCsh¨pTy≥
() {

108  
mCsh¨pName
;

109 
	}
}

111 
Såög
 
	$gëJavaTy≥
() {

112  
mJavaName
;

113 
	}
}

115 
Såög
 
	$gëJavaWøµîTy≥
() {

116  
mWøµî
;

117 
	}
}

119 
Såög
 
	$gëCsh¨pWøµîTy≥
() {

120  
mSh¨pWøµî
;

121 
	}
}

123 
Såög
 
	$gëMëhodSuffix
() {

124  
mMëhodSuffix
;

125 
	}
}

127 
Såög
 
	$gíJavaWrôeMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

128  "á_.wrôe"+
mMëhodSuffix
+"("+
‚ame
+",\""+
èg
+"\");\n";

129 
	}
}

131 
Såög
 
	$gíJavaRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

132  " "+
‚ame
+"˜_.ªad"+
mMëhodSuffix
+"(\""+
èg
+"\");\n";

133 
	}
}

135 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

136 
Såög
 
ªt
 = "";

137 i‡(
de˛
) {

138 
ªt
 = " "+
mWøµî
+" "+
‚ame
+";\n";

140  
ªt
 + " "+
‚ame
+"Úew "+
mWøµî
+"◊_.ªad"+
mMëhodSuffix
+"(\""+
èg
+"\"));\n";

141 
	}
}

143 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

144  "á_.wrôe"+
mMëhodSuffix
+"("+
‚ame
+"."+
mUnwøpMëhod
+"(),\""+
èg
+"\");\n";

145 
	}
}

147 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

148  "Ñë = ("+
‚ame
+" ==Öeer."+fname+")? 0 :(("+fname+"<peer."+fname+")?-1:1);\n";

149 
	}
}

151 
Såög
 
	$gíJavaEquÆs
(
Såög
 
‚ame
, Såög 
≥î
) {

152  "Ñë = ("+
‚ame
+"=="+
≥î
+");\n";

153 
	}
}

155 
Såög
 
	$gíJavaHashCode
(
Såög
 
‚ame
) {

156  "Ñë = (öt)"+
‚ame
+";\n";

157 
	}
}

159 
Såög
 
	$gíJavaC⁄°ru˘‹Së
(
Såög
 
‚ame
, Såög 
«me
) {

160  "Åhis."+
‚ame
+"="+
«me
+";\n";

161 
	}
}

163 
Såög
 
	$gíCsh¨pWrôeMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

164  "á_.Wrôe"+
mMëhodSuffix
+"("+
	`ˇpôÆize
(
‚ame
)+",\""+
èg
+"\");\n";

165 
	}
}

167 
Såög
 
	$gíCsh¨pRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

168  " "+
	`ˇpôÆize
(
‚ame
)+"˜_.Ród"+
mMëhodSuffix
+"(\""+
èg
+"\");\n";

169 
	}
}

171 
Såög
 
	$gíCsh¨pRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

172 
Såög
 
ªt
 = "";

173 i‡(
de˛
) {

174 
ªt
 = " "+
mWøµî
+" "+
‚ame
+";\n";

176  
ªt
 + " "+
‚ame
+"˜_.Ród"+
mMëhodSuffix
+"(\""+
èg
+"\");\n";

177 
	}
}

179 
Såög
 
	$gíCsh¨pWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

180 i‡(
mUnwøpMëhod
 =
nuŒ
Ë "á_.Wrôe"+
mMëhodSuffix
+"("+
‚ame
+","+
èg
+");\n";

181  "á_.Wrôe"+
mMëhodSuffix
+"("+
‚ame
+"."+
mUnwøpMëhod
+"(),\""+
èg
+"\");\n";

182 
	}
}

184 
Såög
 
	$gíCsh¨pCom∑ªTo
(
Såög
 
«me
) {

185  "Ñë = ("+
	`ˇpôÆize
(
«me
)+" ==Öeer."+capitalize(name)+")? 0 :(("+capitalize(name)+"<peer."+capitalize(name)+")?-1:1);\n";

186 
	}
}

188 
Såög
 
	$gíCsh¨pEquÆs
(
Såög
 
«me
, Såög 
≥î
) {

189 
Såög
[] 
≥îS∂ô
 = 
≥î
.
	`•lô
("\\.");

190  "Ñë = ("+
	`ˇpôÆize
(
«me
)+"=="+
≥îS∂ô
[0] + "." + capitalize(peerSplit[1]) + ");\n";

191 
	}
}

193 
Såög
 
	$gíCsh¨pHashCode
(
Såög
 
‚ame
) {

194  "Ñë = (öt)"+
	`ˇpôÆize
(
‚ame
)+";\n";

195 
	}
}

197 
Såög
 
	$gíCsh¨pC⁄°ru˘‹Së
(
Såög
 
mName
, Såög 
‚ame
) {

198  
	`ˇpôÆize
(
‚ame
)+"="+
mName
+";\n";

199 
	}
}

201 
public
 
Såög
 
	$gíCsh¨pC⁄°ru˘‹P¨am
(
Såög
 
‚ame
) {

202  " "+
mCsh¨pName
+" " +
‚ame
+"\n";

203 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JVector.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

24 
public
 cœs†
	cJVe˘‹
 
exãnds
 
	mJCompTy≥
 {

26 
¥iv©e
 
	mÀvñ
 = 0;

28 
¥iv©e
 
Såög
 
	$gëId
(
Såög
 
id
Ë{  id+
	`gëLevñ
(); }

30 
¥iv©e
 
Såög
 
	$gëLevñ
(Ë{  
I¡egî
.
	`toSåög
(
Àvñ
); 
	}
}

32 
¥iv©e
 
	$ö¸Levñ
(Ë{ 
Àvñ
++; 
	}
}

34 
¥iv©e
 
	$de¸Levñ
(Ë{ 
Àvñ
--; 
	}
}

36 
¥iv©e
 
JTy≥
 
	gmEÀmít
;

39 
public
 
	$JVe˘‹
(
JTy≥
 
t
) {

40 
	`su≥r
("°ru˘ " + 
	`exåa˘Ve˘‹Name
(
t
), " ::°d::ve˘‹<"+t.
	`gëCµTy≥
()+">", "Sy°em.CﬁÀ˘i⁄s.Gíîic.Li°<" +Å.
	`gëCsh¨pTy≥
(Ë+ ">", "java.utû.Li°<" +Å.
	`gëJavaTy≥
() + ">", "Vector",

41 "Sy°em.CﬁÀ˘i⁄s.Gíîic.Li°<" + 
t
.
	`gëCsh¨pTy≥
(Ë+ ">", "java.utû.AºayLi°<" +Å.
	`gëJavaTy≥
() + ">");

42 
mEÀmít
 = 
t
;

43 
	}
}

45 
public
 
Såög
 
	$gëSig«tuª
() {

46  "[" + 
mEÀmít
.
	`gëSig«tuª
() + "]";

47 
	}
}

49 
public
 
Såög
 
	$gíJavaCom∑ªTo
(
Såög
 
‚ame
) {

51 + 
‚ame
 + " is unimplemented\");\n";

52 
	}
}

54 
public
 
Såög
 
	$gíJavaRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

55 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

56 i‡(
de˛
) {

57 
ªt
.
	`≠≥nd
(" java.utû.Li° "+
‚ame
+";\n");

59 
ªt
.
	`≠≥nd
(" {\n");

60 
	`ö¸Levñ
();

61 
ªt
.
	`≠≥nd
(" Index "+
	`gëId
("vidx")+" =á_.°¨tVe˘‹(\""+
èg
+"\");\n");

62 
ªt
.
	`≠≥nd
(" i‡("+
	`gëId
("vidx")+"!=Çull) {");

63 
ªt
.
	`≠≥nd
(" "+
‚ame
+"Úew java.utû.AºayLi°<"+ 
mEÀmít
.
	`gëJavaTy≥
() + ">();\n");

64 
ªt
.
	`≠≥nd
(" f‹ (; !"+
	`gëId
("vidx")+".done(); "+getId("vidx")+".incr()) {\n");

65 
ªt
.
	`≠≥nd
(
mEÀmít
.
	`gíJavaRódWøµî
(
	`gëId
("e"), gëId("e"), 
åue
));

66 
ªt
.
	`≠≥nd
(" "+
‚ame
+".add("+
	`gëId
("e")+");\n");

67 
ªt
.
	`≠≥nd
(" }\n");

68 
ªt
.
	`≠≥nd
(" }\n");

69 
ªt
.
	`≠≥nd
("á_.ídVe˘‹(\""+
èg
+"\");\n");

70 
	`de¸Levñ
();

71 
ªt
.
	`≠≥nd
(" }\n");

72  
ªt
.
	`toSåög
();

73 
	}
}

75 
public
 
Såög
 
	$gíJavaRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

76  
	`gíJavaRódWøµî
(
‚ame
, 
èg
, 
Ál£
);

77 
	}
}

79 
public
 
Såög
 
	$gíJavaWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

80 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
(" {\n");

81 
	`ö¸Levñ
();

82 
ªt
.
	`≠≥nd
("á_.°¨tVe˘‹("+
‚ame
+",\""+
èg
+"\");\n");

83 
ªt
.
	`≠≥nd
(" i‡("+
‚ame
+"!=Çull) {");

84 
ªt
.
	`≠≥nd
(" i¡ "+
	`gëId
("Àn")+" = "+
‚ame
+".size();\n");

85 
ªt
.
	`≠≥nd
(" f‹(öà"+
	`gëId
("vidx")+" = 0; "+getId("vidx")+"<"+getId("len")+"; "+getId("vidx")+"++) {\n");

86 
ªt
.
	`≠≥nd
(" "+
mEÀmít
.
	`gëJavaWøµîTy≥
()+" "+
	`gëId
("e")+" = ("+mEÀmít.gëJavaWøµîTy≥()+"Ë"+
‚ame
+".get("+getId("vidx")+");\n");

87 
ªt
.
	`≠≥nd
(
mEÀmít
.
	`gíJavaWrôeWøµî
(
	`gëId
("e"), getId("e")));

88 
ªt
.
	`≠≥nd
(" }\n");

89 
ªt
.
	`≠≥nd
(" }\n");

90 
ªt
.
	`≠≥nd
("á_.ídVe˘‹("+
‚ame
+",\""+
èg
+"\");\n");

91 
ªt
.
	`≠≥nd
(" }\n");

92 
	`de¸Levñ
();

93  
ªt
.
	`toSåög
();

94 
	}
}

96 
public
 
Såög
 
	$gíJavaWrôeMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

97  
	`gíJavaWrôeWøµî
(
‚ame
, 
èg
);

98 
	}
}

100 
public
 
JTy≥
 
	$gëEÀmítTy≥
() {

101  
mEÀmít
;

102 
	}
}

104 
public
 
Såög
 
	$gíCsh¨pWrôeWøµî
(
Såög
 
‚ame
, Såög 
èg
) {

105 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
(" {\n");

106 
	`ö¸Levñ
();

107 
ªt
.
	`≠≥nd
("á_.SèπVe˘‹("+
	`ˇpôÆize
(
‚ame
)+",\""+
èg
+"\");\n");

108 
ªt
.
	`≠≥nd
(" i‡("+
	`ˇpôÆize
(
‚ame
)+"!=Çull) {");

109 
ªt
.
	`≠≥nd
(" i¡ "+
	`gëId
("Àn")+" = "+
	`ˇpôÆize
(
‚ame
)+".Count;\n");

110 
ªt
.
	`≠≥nd
(" f‹(öà"+
	`gëId
("vidx")+" = 0; "+getId("vidx")+"<"+getId("len")+"; "+getId("vidx")+"++) {\n");

111 
ªt
.
	`≠≥nd
(" "+
mEÀmít
.
	`gëCsh¨pWøµîTy≥
()+" "+
	`gëId
("e")+" = ("+mEÀmít.gëCsh¨pWøµîTy≥()+"Ë"+
	`ˇpôÆize
(
‚ame
)+"["+getId("vidx")+"];\n");

112 
ªt
.
	`≠≥nd
(
mEÀmít
.
	`gíCsh¨pWrôeWøµî
(
	`gëId
("e"), getId("e")));

113 
ªt
.
	`≠≥nd
(" }\n");

114 
ªt
.
	`≠≥nd
(" }\n");

115 
ªt
.
	`≠≥nd
("á_.EndVe˘‹("+
	`ˇpôÆize
(
‚ame
)+",\""+
èg
+"\");\n");

116 
ªt
.
	`≠≥nd
(" }\n");

117 
	`de¸Levñ
();

118  
ªt
.
	`toSåög
();

119 
	}
}

121 
Såög
 
	$gíCsh¨pWrôeMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

122  
	`gíCsh¨pWrôeWøµî
(
‚ame
, 
èg
);

123 
	}
}

125 
public
 
Såög
 
	$gíCsh¨pRódWøµî
(
Såög
 
‚ame
, Såög 
èg
, 
boﬁón
 
de˛
) {

126 
SåögBuûdî
 
ªt
 = 
√w
 
	`SåögBuûdî
("");

127 i‡(
de˛
) {

128 
ªt
.
	`≠≥nd
(" Sy°em.CﬁÀ˘i⁄s.Gíîic.Li°<" + 
mEÀmít
.
	`gëCsh¨pTy≥
()+ "> "+
	`ˇpôÆize
(
‚ame
)+";\n");

130 
ªt
.
	`≠≥nd
(" {\n");

131 
	`ö¸Levñ
();

132 
ªt
.
	`≠≥nd
(" IIndex "+
	`gëId
("vidx")+" =á_.SèπVe˘‹(\""+
èg
+"\");\n");

133 
ªt
.
	`≠≥nd
(" i‡("+
	`gëId
("vidx")+"!=Çull) {");

134 
ªt
.
	`≠≥nd
(" "+
	`ˇpôÆize
(
‚ame
)+"Úew Sy°em.CﬁÀ˘i⁄s.Gíîic.Li°<"+ 
mEÀmít
.
	`gëCsh¨pTy≥
() + ">();\n");

135 
ªt
.
	`≠≥nd
(" f‹ (; !"+
	`gëId
("vidx")+".Done(); "+getId("vidx")+".Incr()) {\n");

136 
ªt
.
	`≠≥nd
(
mEÀmít
.
	`gíCsh¨pRódWøµî
(
	`gëId
("e"), gëId("e"), 
åue
));

137 
ªt
.
	`≠≥nd
(" "+
	`ˇpôÆize
(
‚ame
)+".Add("+
	`gëId
("e")+");\n");

138 
ªt
.
	`≠≥nd
(" }\n");

139 
ªt
.
	`≠≥nd
(" }\n");

140 
ªt
.
	`≠≥nd
("á_.EndVe˘‹(\""+
èg
+"\");\n");

141 
	`de¸Levñ
();

142 
ªt
.
	`≠≥nd
(" }\n");

143  
ªt
.
	`toSåög
();

144 
	}
}

146 
Såög
 
	$gíCsh¨pRódMëhod
(
Såög
 
‚ame
, Såög 
èg
) {

147  
	`gíCsh¨pRódWøµî
(
‚ame
, 
èg
, 
Ál£
);

148 
	}
}

150 
public
 
Såög
 
	$exåa˘Ve˘‹Name
(
JTy≥
 
jvTy≥
) {

151  
JRec‹d
.
	`exåa˘MëhodSuffix
(
jvTy≥
)+"_vector";

152 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JavaGenerator.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

29 ˛as†
	cJavaGíî©‹
 {

30 
¥iv©e
 
	mAºayLi°
<
	mJRec‹d
> 
	mmRecLi°
;

31 
¥iv©e
 
föÆ
 
Fûe
 
	mouçutDúe˘‹y
;

40 
JavaGíî©‹
(
Såög
 
«me
, 
AºayLi°
<
JFûe
> 
ö˛
,

41 
AºayLi°
<
JRec‹d
> 
ªc‹ds
, 
Fûe
 
ouçutDúe˘‹y
)

43 
	mmRecLi°
 = 
ªc‹ds
;

44 
	mthis
.
	mouçutDúe˘‹y
 = 
ouçutDúe˘‹y
;

51 
	$gíCode
(Ë
throws
 
IOEx˚±i⁄
 {

52 
Iãøt‹
<
JRec‹d
> 
i
 = 
mRecLi°
.
	`ôî©‹
(); i.
	`hasNext
(); ) {

53 
JRec‹d
 
ªc
 = 
i
.
	`√xt
();

54 
ªc
.
	`gíJavaCode
(
ouçutDúe˘‹y
);

56 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/ParseException.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

31 
public
 cœs†
	cP¨£Ex˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

45 
public
 
	$P¨£Ex˚±i⁄
(
Tokí
 
cuºítTokíVÆ
,

46 [][] 
ex≥˘edTokíSequí˚sVÆ
,

47 
Såög
[] 
tokíImageVÆ


50 
	`su≥r
("");

51 
•ecülC⁄°ru˘‹
 = 
åue
;

52 
cuºítTokí
 = 
cuºítTokíVÆ
;

53 
ex≥˘edTokíSequí˚s
 = 
ex≥˘edTokíSequí˚sVÆ
;

54 
tokíImage
 = 
tokíImageVÆ
;

67 
public
 
	$P¨£Ex˚±i⁄
() {

68 
	`su≥r
();

69 
•ecülC⁄°ru˘‹
 = 
Ál£
;

70 
	}
}

72 
public
 
	$P¨£Ex˚±i⁄
(
Såög
 
mesßge
) {

73 
	`su≥r
(
mesßge
);

74 
•ecülC⁄°ru˘‹
 = 
Ál£
;

75 
	}
}

82 
¥Ÿe˘ed
 
boﬁón
 
	g•ecülC⁄°ru˘‹
;

89 
public
 
Tokí
 
	gcuºítTokí
;

96 
public
 [][] 
	gex≥˘edTokíSequí˚s
;

103 
public
 
	gSåög
[] 
	gtokíImage
;

115 
public
 
Såög
 
	$gëMesßge
() {

116 i‡(!
•ecülC⁄°ru˘‹
) {

117  
su≥r
.
	`gëMesßge
();

119 
SåögBuf„r
 
ex≥˘ed
 = 
√w
 
	`SåögBuf„r
();

120 
maxSize
 = 0;

121 
i
 = 0; i < 
ex≥˘edTokíSequí˚s
.
Àngth
; i++) {

122 i‡(
maxSize
 < 
ex≥˘edTokíSequí˚s
[
i
].
Àngth
) {

123 
maxSize
 = 
ex≥˘edTokíSequí˚s
[
i
].
Àngth
;

125 
j
 = 0; j < 
ex≥˘edTokíSequí˚s
[
i
].
Àngth
; j++) {

126 
ex≥˘ed
.
	`≠≥nd
(
tokíImage
[
ex≥˘edTokíSequí˚s
[
i
][
j
]]).append(" ");

128 i‡(
ex≥˘edTokíSequí˚s
[
i
][ex≥˘edTokíSequí˚s[i].
Àngth
 - 1] != 0) {

129 
ex≥˘ed
.
	`≠≥nd
("...");

131 
ex≥˘ed
.
	`≠≥nd
(
eﬁ
).append(" ");

133 
Såög
 
ªtvÆ
 = "Encountered \"";

134 
Tokí
 
tok
 = 
cuºítTokí
.
√xt
;

135 
i
 = 0; i < 
maxSize
; i++) {

136 i‡(
i
 !0Ë
ªtvÆ
 += " ";

137 i‡(
tok
.
köd
 == 0) {

138 
ªtvÆ
 +
tokíImage
[0];

141 
ªtvÆ
 +
	`add_esˇ≥s
(
tok
.
image
);

142 
tok
 =Åok.
√xt
;

144 
ªtvÆ
 +"\"áàlöê" + 
cuºítTokí
.
√xt
.
begöLöe
 + ", cﬁum¿" + cuºítTokí.√xt.
begöCﬁumn
;

145 
ªtvÆ
 +"." + 
eﬁ
;

146 i‡(
ex≥˘edTokíSequí˚s
.
Àngth
 == 1) {

147 
ªtvÆ
 +"Wa†ex≥˘ög:" + 
eﬁ
 + " ";

149 
ªtvÆ
 +"Wa†ex≥˘ög o√ of:" + 
eﬁ
 + " ";

151 
ªtvÆ
 +
ex≥˘ed
.
	`toSåög
();

152  
ªtvÆ
;

153 
	}
}

158 
¥Ÿe˘ed
 
Såög
 
	geﬁ
 = 
Sy°em
.
gëPr›îty
("line.separator", "\n");

165 
¥Ÿe˘ed
 
Såög
 
	$add_esˇ≥s
(
Såög
 
°r
) {

166 
SåögBuf„r
 
ªtvÆ
 = 
√w
 
	`SåögBuf„r
();

167 
ch
;

168 
i
 = 0; i < 
°r
.
	`Àngth
(); i++) {

169 
°r
.
	`ch¨At
(
i
))

174 
ªtvÆ
.
	`≠≥nd
("\\b");

177 
ªtvÆ
.
	`≠≥nd
("\\t");

180 
ªtvÆ
.
	`≠≥nd
("\\n");

183 
ªtvÆ
.
	`≠≥nd
("\\f");

186 
ªtvÆ
.
	`≠≥nd
("\\r");

189 
ªtvÆ
.
	`≠≥nd
("\\\"");

192 
ªtvÆ
.
	`≠≥nd
("\\\'");

195 
ªtvÆ
.
	`≠≥nd
("\\\\");

198 i‡((
ch
 = 
°r
.
	`ch¨At
(
i
)) < 0x20 || ch > 0x7e) {

199 
Såög
 
s
 = "0000" + 
I¡egî
.
	`toSåög
(
ch
, 16);

200 
ªtvÆ
.
	`≠≥nd
("\\u" + 
s
.
	`sub°rög
(s.
	`Àngth
() - 4, s.length()));

202 
ªtvÆ
.
	`≠≥nd
(
ch
);

207  
ªtvÆ
.
	`toSåög
();

208 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/Rcc.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.*;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashèbÀ
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

27 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

28 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

31 
public
 cœs†
	cRcc
 
im∂emíts
 
	mRccC⁄°™ts
 {

32 
¥iv©e
 
HashèbÀ
 
	mªcTab
 = 
√w
 Hashtable();

33 
¥iv©e
 
Såög
 
	mcurDú
 = 
Sy°em
.
gëPr›îty
("user.dir");

34 
¥iv©e
 
Såög
 
	mcurFûeName
;

35 
¥iv©e
 
Såög
 
	mcurModuÀName
;

37 
public
 
	$maö
(
Såög
 
¨gs
[]) {

38 
Såög
 
œnguage
 = "java";

39 
AºayLi°
 
ªcFûes
 = 
√w
 
	`AºayLi°
();

40 
JFûe
 
curFûe
=
nuŒ
;

42 
i
=0; i<
¨gs
.
Àngth
; i++) {

43 i‡("-l".
	`equÆsIgn‹eCa£
(
¨gs
[
i
]) ||

44 "--œnguage".
	`equÆsIgn‹eCa£
(
¨gs
[
i
])) {

45 
œnguage
 = 
¨gs
[
i
+1].
	`toLowîCa£
();

46 
i
++;

48 
ªcFûes
.
	`add
(
¨gs
[
i
]);

51 i‡(!"c++".
	`equÆs
(
œnguage
) && !"java".equals(language) && !"c".equals(language)) {

52 
Sy°em
.
out
.
	`¥öén
("C™nŸÑecognizêœnguage:" + 
œnguage
);

53 
Sy°em
.
	`exô
(1);

55 i‡(
ªcFûes
.
	`size
() == 0) {

56 
Sy°em
.
out
.
	`¥öén
("NoÑecord files specified. Exiting.");

57 
Sy°em
.
	`exô
(1);

59 
i
=0; i<
ªcFûes
.
	`size
(); i++) {

60 
curFûeName
 = (
Såög
Ë
ªcFûes
.
	`gë
(
i
);

61 
Fûe
 
fûe
 = 
√w
 
	`Fûe
(
curFûeName
);

62 
åy
 {

63 
curFûe
 = 
	`∑r£Fûe
(
fûe
);

64 } 
	`ˇtch
 (
FûeNŸFoundEx˚±i⁄
 
e
) {

65 
Sy°em
.
out
.
	`¥öén
("Fûê" + (
Såög
Ë
ªcFûes
.
	`gë
(
i
) + " Not found.");

66 
Sy°em
.
	`exô
(1);

67 } 
	`ˇtch
 (
P¨£Ex˚±i⁄
 
e
) {

68 
Sy°em
.
out
.
	`¥öén
(
e
.
	`toSåög
());

69 
Sy°em
.
	`exô
(1);

71 
Sy°em
.
out
.
	`¥öén
((
Såög
Ë
ªcFûes
.
	`gë
(
i
) + " Parsed Successfully");

72 
åy
 {

73 
curFûe
.
	`gíCode
(
œnguage
, 
√w
 
	`Fûe
("."));

74 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

75 
Sy°em
.
out
.
	`¥öén
(
e
.
	`toSåög
());

76 
Sy°em
.
	`exô
(1);

81 
public
 
JFûe
 
	$∑r£Fûe
(
Fûe
 
fûe
Ë
throws
 
FûeNŸFoundEx˚±i⁄
, 
P¨£Ex˚±i⁄
 {

82 
curDú
 = 
fûe
.
	`gëP¨ít
();

83 
curFûeName
 = 
fûe
.
	`gëName
();

84 
FûeRódî
 
ªadî
 = 
√w
 
	`FûeRódî
(
fûe
);

85 
åy
 {

86 
Rcc
 
∑r£r
 = 
√w
 
	`Rcc
(
ªadî
);

87 
ªcTab
 = 
√w
 
	`HashèbÀ
();

88  
∑r£r
.
	`I≈ut
();

89 } 
föÆly
 {

90 
åy
 {

91 
ªadî
.
	`˛o£
();

92 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

95 
	}
}

97 
föÆ
 
public
 
JFûe
 
	$I≈ut
(Ë
throws
 
P¨£Ex˚±i⁄
 {

98 
AºayLi°
 
ûi°
 = 
√w
 
	`AºayLi°
();

99 
AºayLi°
 
æi°
 = 
√w
 
	`AºayLi°
();

100 
JFûe
 
i
;

101 
AºayLi°
 
l
;

102 
œbñ_1
:

103 
åue
) {

104 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

105 
INCLUDE_TKN
:

106 
i
 = 
	`In˛ude
();

107 
ûi°
.
	`add
(
i
);

109 
MODULE_TKN
:

110 
l
 = 
	`ModuÀ
();

111 
æi°
.
	`addAŒ
(
l
);

114 
jj_œ1
[0] = 
jj_gí
;

115 
	`jj_c⁄sume_tokí
(-1);

116 
throw
 
√w
 
	`P¨£Ex˚±i⁄
();

118 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

119 
MODULE_TKN
:

120 
INCLUDE_TKN
:

124 
jj_œ1
[1] = 
jj_gí
;

125  
œbñ_1
;

128 
	`jj_c⁄sume_tokí
(0);

129 {i‡(
åue
Ë 
√w
 
	`JFûe
(
curFûeName
, 
ûi°
, 
æi°
);}

130 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

131 
	}
}

133 
föÆ
 
public
 
JFûe
 
	$In˛ude
(Ë
throws
 
P¨£Ex˚±i⁄
 {

134 
Såög
 
‚ame
;

135 
Tokí
 
t
;

136 
	`jj_c⁄sume_tokí
(
INCLUDE_TKN
);

137 
t
 = 
	`jj_c⁄sume_tokí
(
CSTRING_TKN
);

138 
JFûe
 
ªt
 = 
nuŒ
;

139 
‚ame
 = 
t
.
image
.
	`ª∂a˚AŒ
("^\"", "").replaceAll("\"$","");

140 
Fûe
 
fûe
 = 
√w
 
	`Fûe
(
curDú
, 
‚ame
);

141 
Såög
 
tmpDú
 = 
curDú
;

142 
Såög
 
tmpFûe
 = 
curFûeName
;

143 
curDú
 = 
fûe
.
	`gëP¨ít
();

144 
curFûeName
 = 
fûe
.
	`gëName
();

145 
åy
 {

146 
FûeRódî
 
ªadî
 = 
√w
 
	`FûeRódî
(
fûe
);

147 
Rcc
 
∑r£r
 = 
√w
 
	`Rcc
(
ªadî
);

148 
åy
 {

149 
ªt
 = 
∑r£r
.
	`I≈ut
();

150 
Sy°em
.
out
.
	`¥öén
(
‚ame
 + " Parsed Successfully");

151 } 
	`ˇtch
 (
P¨£Ex˚±i⁄
 
e
) {

152 
Sy°em
.
out
.
	`¥öén
(
e
.
	`toSåög
());

153 
Sy°em
.
	`exô
(1);

155 
åy
 {

156 
ªadî
.
	`˛o£
();

157 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

159 } 
	`ˇtch
 (
FûeNŸFoundEx˚±i⁄
 
e
) {

160 
Sy°em
.
out
.
	`¥öén
("Fûê" + 
‚ame
 +

162 
Sy°em
.
	`exô
(1);

164 
curDú
 = 
tmpDú
;

165 
curFûeName
 = 
tmpFûe
;

166 {i‡(
åue
Ë 
ªt
;}

167 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

168 
	}
}

170 
föÆ
 
public
 
AºayLi°
 
	$ModuÀ
(Ë
throws
 
P¨£Ex˚±i⁄
 {

171 
Såög
 
mName
;

172 
AºayLi°
 
æi°
;

173 
	`jj_c⁄sume_tokí
(
MODULE_TKN
);

174 
mName
 = 
	`ModuÀName
();

175 
curModuÀName
 = 
mName
;

176 
	`jj_c⁄sume_tokí
(
LBRACE_TKN
);

177 
æi°
 = 
	`Rec‹dLi°
();

178 
	`jj_c⁄sume_tokí
(
RBRACE_TKN
);

179 {i‡(
åue
Ë 
æi°
;}

180 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

181 
	}
}

183 
föÆ
 
public
 
Såög
 
	$ModuÀName
(Ë
throws
 
P¨£Ex˚±i⁄
 {

184 
Såög
 
«me
 = "";

185 
Tokí
 
t
;

186 
t
 = 
	`jj_c⁄sume_tokí
(
IDENT_TKN
);

187 
«me
 +
t
.
image
;

188 
œbñ_2
:

189 
åue
) {

190 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

191 
DOT_TKN
:

195 
jj_œ1
[2] = 
jj_gí
;

196  
œbñ_2
;

198 
	`jj_c⁄sume_tokí
(
DOT_TKN
);

199 
t
 = 
	`jj_c⁄sume_tokí
(
IDENT_TKN
);

200 
«me
 +"." + 
t
.
image
;

202 {i‡(
åue
Ë 
«me
;}

203 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

204 
	}
}

206 
föÆ
 
public
 
AºayLi°
 
	$Rec‹dLi°
(Ë
throws
 
P¨£Ex˚±i⁄
 {

207 
AºayLi°
 
æi°
 = 
√w
 
	`AºayLi°
();

208 
JRec‹d
 
r
;

209 
œbñ_3
:

210 
åue
) {

211 
r
 = 
	`Rec‹d
();

212 
æi°
.
	`add
(
r
);

213 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

214 
RECORD_TKN
:

218 
jj_œ1
[3] = 
jj_gí
;

219  
œbñ_3
;

222 {i‡(
åue
Ë 
æi°
;}

223 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

224 
	}
}

226 
föÆ
 
public
 
JRec‹d
 
	$Rec‹d
(Ë
throws
 
P¨£Ex˚±i⁄
 {

227 
Såög
 
∫ame
;

228 
AºayLi°
 
Êi°
 = 
√w
 
	`AºayLi°
();

229 
Tokí
 
t
;

230 
JFõld
 
f
;

231 
	`jj_c⁄sume_tokí
(
RECORD_TKN
);

232 
t
 = 
	`jj_c⁄sume_tokí
(
IDENT_TKN
);

233 
∫ame
 = 
t
.
image
;

234 
	`jj_c⁄sume_tokí
(
LBRACE_TKN
);

235 
œbñ_4
:

236 
åue
) {

237 
f
 = 
	`Fõld
();

238 
Êi°
.
	`add
(
f
);

239 
	`jj_c⁄sume_tokí
(
SEMICOLON_TKN
);

240 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

241 
BYTE_TKN
:

242 
BOOLEAN_TKN
:

243 
INT_TKN
:

244 
LONG_TKN
:

245 
FLOAT_TKN
:

246 
DOUBLE_TKN
:

247 
USTRING_TKN
:

248 
BUFFER_TKN
:

249 
VECTOR_TKN
:

250 
MAP_TKN
:

251 
IDENT_TKN
:

255 
jj_œ1
[4] = 
jj_gí
;

256  
œbñ_4
;

259 
	`jj_c⁄sume_tokí
(
RBRACE_TKN
);

260 
Såög
 
fqn
 = 
curModuÀName
 + "." + 
∫ame
;

261 
JRec‹d
 
r
 = 
√w
 
	`JRec‹d
(
fqn
, 
Êi°
);

262 
ªcTab
.
	`put
(
fqn
, 
r
);

263 {i‡(
åue
Ë 
r
;}

264 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

265 
	}
}

267 
föÆ
 
public
 
JFõld
 
	$Fõld
(Ë
throws
 
P¨£Ex˚±i⁄
 {

268 
JTy≥
 
jt
;

269 
Tokí
 
t
;

270 
jt
 = 
	`Ty≥
();

271 
t
 = 
	`jj_c⁄sume_tokí
(
IDENT_TKN
);

272 {i‡(
åue
Ë 
√w
 
	`JFõld
(
jt
, 
t
.
image
);}

273 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

274 
	}
}

276 
föÆ
 
public
 
JTy≥
 
	$Ty≥
(Ë
throws
 
P¨£Ex˚±i⁄
 {

277 
JTy≥
 
jt
;

278 
Tokí
 
t
;

279 
Såög
 
∫ame
;

280 (
jj_¡k
==-1)?
	`jj_¡k
():jj_ntk) {

281 
MAP_TKN
:

282 
jt
 = 
	`M≠
();

283 {i‡(
åue
Ë 
jt
;}

285 
VECTOR_TKN
:

286 
jt
 = 
	`Ve˘‹
();

287 {i‡(
åue
Ë 
jt
;}

289 
BYTE_TKN
:

290 
	`jj_c⁄sume_tokí
(
BYTE_TKN
);

291 {i‡(
åue
Ë 
√w
 
	`JByã
();}

293 
BOOLEAN_TKN
:

294 
	`jj_c⁄sume_tokí
(
BOOLEAN_TKN
);

295 {i‡(
åue
Ë 
√w
 
	`JBoﬁón
();}

297 
INT_TKN
:

298 
	`jj_c⁄sume_tokí
(
INT_TKN
);

299 {i‡(
åue
Ë 
√w
 
	`JI¡
();}

301 
LONG_TKN
:

302 
	`jj_c⁄sume_tokí
(
LONG_TKN
);

303 {i‡(
åue
Ë 
√w
 
	`JL⁄g
();}

305 
FLOAT_TKN
:

306 
	`jj_c⁄sume_tokí
(
FLOAT_TKN
);

307 {i‡(
åue
Ë 
√w
 
	`JFlﬂt
();}

309 
DOUBLE_TKN
:

310 
	`jj_c⁄sume_tokí
(
DOUBLE_TKN
);

311 {i‡(
åue
Ë 
√w
 
	`JDoubÀ
();}

313 
USTRING_TKN
:

314 
	`jj_c⁄sume_tokí
(
USTRING_TKN
);

315 {i‡(
åue
Ë 
√w
 
	`JSåög
();}

317 
BUFFER_TKN
:

318 
	`jj_c⁄sume_tokí
(
BUFFER_TKN
);

319 {i‡(
åue
Ë 
√w
 
	`JBuf„r
();}

321 
IDENT_TKN
:

322 
∫ame
 = 
	`ModuÀName
();

323 i‡(
∫ame
.
	`ödexOf
('.', 0) < 0) {

324 
∫ame
 = 
curModuÀName
 + "." +Ñname;

326 
JRec‹d
 
r
 = (JRec‹dË
ªcTab
.
	`gë
(
∫ame
);

327 i‡(
r
 =
nuŒ
) {

328 
Sy°em
.
out
.
	`¥öén
("Ty≥ " + 
∫ame
 + "Çot known. Exiting.");

329 
Sy°em
.
	`exô
(1);

331 {i‡(
åue
Ë 
r
;}

334 
jj_œ1
[5] = 
jj_gí
;

335 
	`jj_c⁄sume_tokí
(-1);

336 
throw
 
√w
 
	`P¨£Ex˚±i⁄
();

338 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

339 
	}
}

341 
föÆ
 
public
 
JM≠
 
	$M≠
(Ë
throws
 
P¨£Ex˚±i⁄
 {

342 
JTy≥
 
jt1
;

343 
JTy≥
 
jt2
;

344 
	`jj_c⁄sume_tokí
(
MAP_TKN
);

345 
	`jj_c⁄sume_tokí
(
LT_TKN
);

346 
jt1
 = 
	`Ty≥
();

347 
	`jj_c⁄sume_tokí
(
COMMA_TKN
);

348 
jt2
 = 
	`Ty≥
();

349 
	`jj_c⁄sume_tokí
(
GT_TKN
);

350 {i‡(
åue
Ë 
√w
 
	`JM≠
(
jt1
, 
jt2
);}

351 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

352 
	}
}

354 
föÆ
 
public
 
JVe˘‹
 
	$Ve˘‹
(Ë
throws
 
P¨£Ex˚±i⁄
 {

355 
JTy≥
 
jt
;

356 
	`jj_c⁄sume_tokí
(
VECTOR_TKN
);

357 
	`jj_c⁄sume_tokí
(
LT_TKN
);

358 
jt
 = 
	`Ty≥
();

359 
	`jj_c⁄sume_tokí
(
GT_TKN
);

360 {i‡(
åue
Ë 
√w
 
	`JVe˘‹
(
jt
);}

361 
throw
 
√w
 
	`Eº‹
("MissingÑeturn statement in function");

362 
	}
}

364 
public
 
RccTokíM™agî
 
	gtokí_sour˚
;

365 
Sim∂eCh¨Såóm
 
	gjj_öput_°ªam
;

366 
public
 
Tokí
 
	gtokí
, 
	gjj_¡
;

367 
¥iv©e
 
	gjj_¡k
;

368 
¥iv©e
 
	gjj_gí
;

369 
föÆ
 
¥iv©e
 [] 
	gjj_œ1
 = 
√w
 [6];

370 
¥iv©e
 [] 
	gjj_œ1_0
;

371 
¥iv©e
 [] 
	gjj_œ1_1
;

373 
jj_œ1_0
();

374 
jj_œ1_1
();

376 
¥iv©e
 
	$jj_œ1_0
() {

377 
jj_œ1_0
 = 
√w
 [] {0x2800,0x2800,0x40000000,0x1000,0xffc000,0xffc000,};

378 
	}
}

379 
¥iv©e
 
	$jj_œ1_1
() {

380 
jj_œ1_1
 = 
√w
 [] {0x0,0x0,0x0,0x0,0x1,0x1,};

381 
	}
}

383 
public
 
	$Rcc
(
java
.
io
.
I≈utSåóm
 
°ªam
) {

384 
	`this
(
°ªam
, 
nuŒ
);

385 
	}
}

386 
public
 
	$Rcc
(
java
.
io
.
I≈utSåóm
 
°ªam
, 
Såög
 
ícodög
) {

387 
åy
 { 
jj_öput_°ªam
 = 
√w
 
	`Sim∂eCh¨Såóm
(
°ªam
, 
ícodög
, 1, 1); } 
	`ˇtch
(
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄
 
e
Ë{ 
throw
Çew 
	`Ru¡imeEx˚±i⁄
(e); }

388 
tokí_sour˚
 = 
√w
 
	`RccTokíM™agî
(
jj_öput_°ªam
);

389 
tokí
 = 
√w
 
	`Tokí
();

390 
jj_¡k
 = -1;

391 
jj_gí
 = 0;

392 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

393 
	}
}

395 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
°ªam
) {

396 
	`ReInô
(
°ªam
, 
nuŒ
);

397 
	}
}

398 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
°ªam
, 
Såög
 
ícodög
) {

399 
åy
 { 
jj_öput_°ªam
.
	`ReInô
(
°ªam
, 
ícodög
, 1, 1); } 
	`ˇtch
(
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄
 
e
Ë{ 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(e); }

400 
tokí_sour˚
.
	`ReInô
(
jj_öput_°ªam
);

401 
tokí
 = 
√w
 
	`Tokí
();

402 
jj_¡k
 = -1;

403 
jj_gí
 = 0;

404 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

405 
	}
}

407 
public
 
	$Rcc
(
java
.
io
.
Ródî
 
°ªam
) {

408 
jj_öput_°ªam
 = 
√w
 
	`Sim∂eCh¨Såóm
(
°ªam
, 1, 1);

409 
tokí_sour˚
 = 
√w
 
	`RccTokíM™agî
(
jj_öput_°ªam
);

410 
tokí
 = 
√w
 
	`Tokí
();

411 
jj_¡k
 = -1;

412 
jj_gí
 = 0;

413 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

414 
	}
}

416 
public
 
	$ReInô
(
java
.
io
.
Ródî
 
°ªam
) {

417 
jj_öput_°ªam
.
	`ReInô
(
°ªam
, 1, 1);

418 
tokí_sour˚
.
	`ReInô
(
jj_öput_°ªam
);

419 
tokí
 = 
√w
 
	`Tokí
();

420 
jj_¡k
 = -1;

421 
jj_gí
 = 0;

422 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

423 
	}
}

425 
public
 
	$Rcc
(
RccTokíM™agî
 
tm
) {

426 
tokí_sour˚
 = 
tm
;

427 
tokí
 = 
√w
 
	`Tokí
();

428 
jj_¡k
 = -1;

429 
jj_gí
 = 0;

430 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

431 
	}
}

433 
public
 
	$ReInô
(
RccTokíM™agî
 
tm
) {

434 
tokí_sour˚
 = 
tm
;

435 
tokí
 = 
√w
 
	`Tokí
();

436 
jj_¡k
 = -1;

437 
jj_gí
 = 0;

438 
i
 = 0; i < 6; i++Ë
jj_œ1
[i] = -1;

439 
	}
}

441 
föÆ
 
¥iv©e
 
Tokí
 
	$jj_c⁄sume_tokí
(
köd
Ë
throws
 
P¨£Ex˚±i⁄
 {

442 
Tokí
 
ﬁdTokí
;

443 i‡((
ﬁdTokí
 = 
tokí
).
√xt
 !
nuŒ
)Åoken =Åoken.next;

444 
tokí
 =Åokí.
√xt
 = 
tokí_sour˚
.
	`gëNextTokí
();

445 
jj_¡k
 = -1;

446 i‡(
tokí
.
köd
 == kind) {

447 
jj_gí
++;

448  
tokí
;

450 
tokí
 = 
ﬁdTokí
;

451 
jj_köd
 = 
köd
;

452 
throw
 
	`gíî©eP¨£Ex˚±i⁄
();

453 
	}
}

455 
föÆ
 
public
 
Tokí
 
	$gëNextTokí
() {

456 i‡(
tokí
.
√xt
 !
nuŒ
)Åoken =Åoken.next;

457 
tokí
 =Åokí.
√xt
 = 
tokí_sour˚
.
	`gëNextTokí
();

458 
jj_¡k
 = -1;

459 
jj_gí
++;

460  
tokí
;

461 
	}
}

463 
föÆ
 
public
 
Tokí
 
	$gëTokí
(
ödex
) {

464 
Tokí
 
t
 = 
tokí
;

465 
i
 = 0; i < 
ödex
; i++) {

466 i‡(
t
.
√xt
 !
nuŒ
)Å =Å.next;

467 
t
 =Å.
√xt
 = 
tokí_sour˚
.
	`gëNextTokí
();

469  
t
;

470 
	}
}

472 
föÆ
 
¥iv©e
 
	$jj_¡k
() {

473 i‡((
jj_¡
=
tokí
.
√xt
Ë=
nuŒ
)

474  (
jj_¡k
 = (
tokí
.
√xt
=
tokí_sour˚
.
	`gëNextTokí
()).
köd
);

476  (
jj_¡k
 = 
jj_¡
.
köd
);

477 
	}
}

479 
¥iv©e
 
	gjava
.
	gutû
.
Ve˘‹
 
	gjj_ex≥¡rõs
 = 
√w
 
java
.
utû
.Vector();

480 
¥iv©e
 [] 
	gjj_ex≥¡ry
;

481 
¥iv©e
 
	gjj_köd
 = -1;

483 
public
 
P¨£Ex˚±i⁄
 
	$gíî©eP¨£Ex˚±i⁄
() {

484 
jj_ex≥¡rõs
.
	`ªmoveAŒEÀmíts
();

485 
boﬁón
[] 
œ1tokís
 = 
√w
 boolean[33];

486 
i
 = 0; i < 33; i++) {

487 
œ1tokís
[
i
] = 
Ál£
;

489 i‡(
jj_köd
 >= 0) {

490 
œ1tokís
[
jj_köd
] = 
åue
;

491 
jj_köd
 = -1;

493 
i
 = 0; i < 6; i++) {

494 i‡(
jj_œ1
[
i
] =
jj_gí
) {

495 
j
 = 0; j < 32; j++) {

496 i‡((
jj_œ1_0
[
i
] & (1<<
j
)) != 0) {

497 
œ1tokís
[
j
] = 
åue
;

499 i‡((
jj_œ1_1
[
i
] & (1<<
j
)) != 0) {

500 
œ1tokís
[32+
j
] = 
åue
;

505 
i
 = 0; i < 33; i++) {

506 i‡(
œ1tokís
[
i
]) {

507 
jj_ex≥¡ry
 = 
√w
 [1];

508 
jj_ex≥¡ry
[0] = 
i
;

509 
jj_ex≥¡rõs
.
	`addEÀmít
(
jj_ex≥¡ry
);

512 [][] 
ex±ok£q
 = 
√w
 [
jj_ex≥¡rõs
.
	`size
()][];

513 
i
 = 0; i < 
jj_ex≥¡rõs
.
	`size
(); i++) {

514 
ex±ok£q
[
i
] = ([])
jj_ex≥¡rõs
.
	`ñemítAt
(i);

516  
√w
 
	`P¨£Ex˚±i⁄
(
tokí
, 
ex±ok£q
, 
tokíImage
);

517 
	}
}

519 
föÆ
 
public
 
	$íabÀ_åacög
() {

520 
	}
}

522 
föÆ
 
public
 
	$dißbÀ_åacög
() {

523 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/RccConstants.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

22 
public
 
öãrÁ˚
 
	gRccC⁄°™ts
 {

24 
	gEOF
 = 0;

25 
	gMODULE_TKN
 = 11;

26 
	gRECORD_TKN
 = 12;

27 
	gINCLUDE_TKN
 = 13;

28 
	gBYTE_TKN
 = 14;

29 
	gBOOLEAN_TKN
 = 15;

30 
	gINT_TKN
 = 16;

31 
	gLONG_TKN
 = 17;

32 
	gFLOAT_TKN
 = 18;

33 
	gDOUBLE_TKN
 = 19;

34 
	gUSTRING_TKN
 = 20;

35 
	gBUFFER_TKN
 = 21;

36 
	gVECTOR_TKN
 = 22;

37 
	gMAP_TKN
 = 23;

38 
	gLBRACE_TKN
 = 24;

39 
	gRBRACE_TKN
 = 25;

40 
	gLT_TKN
 = 26;

41 
	gGT_TKN
 = 27;

42 
	gSEMICOLON_TKN
 = 28;

43 
	gCOMMA_TKN
 = 29;

44 
	gDOT_TKN
 = 30;

45 
	gCSTRING_TKN
 = 31;

46 
	gIDENT_TKN
 = 32;

48 
	gDEFAULT
 = 0;

49 
	gWôhöO√LöeCommít
 = 1;

50 
	gWôhöMu…iLöeCommít
 = 2;

52 
	gSåög
[] 
	gtokíImage
 = {

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/RccTokenManager.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.*;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashèbÀ
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

27 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

30 
public
 cœs†
	cRccTokíM™agî
 
im∂emíts
 
	mRccC⁄°™ts


32 
public
 
	mjava
.
	mio
.
PrötSåóm
 
	mdebugSåóm
 = 
Sy°em
.
out
;

33 
public
 
	$£tDebugSåóm
(
java
.
io
.
PrötSåóm
 
ds
Ë{ 
debugSåóm
 = ds; }

34 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ0_1
()

36  
	`jjMoveNÁ_1
(0, 0);

37 
	}
}

38 
¥iv©e
 
föÆ
 
	$jjCheckNAdd
(
°©e
)

40 i‡(
jjrounds
[
°©e
] !
jjround
)

42 
jj°©eSë
[
jj√wSèãC¡
++] = 
°©e
;

43 
jjrounds
[
°©e
] = 
jjround
;

45 
	}
}

46 
¥iv©e
 
föÆ
 
	$jjAddSèãs
(
°¨t
, 
íd
)

49 
jj°©eSë
[
jj√wSèãC¡
++] = 
jj√xtSèãs
[
°¨t
];

50 } 
°¨t
++ !
íd
);

51 
	}
}

52 
¥iv©e
 
föÆ
 
	$jjCheckNAddTwoSèãs
(
°©e1
, 
°©e2
)

54 
	`jjCheckNAdd
(
°©e1
);

55 
	`jjCheckNAdd
(
°©e2
);

56 
	}
}

57 
¥iv©e
 
föÆ
 
	$jjCheckNAddSèãs
(
°¨t
, 
íd
)

60 
	`jjCheckNAdd
(
jj√xtSèãs
[
°¨t
]);

61 } 
°¨t
++ !
íd
);

62 
	}
}

63 
¥iv©e
 
föÆ
 
	$jjCheckNAddSèãs
(
°¨t
)

65 
	`jjCheckNAdd
(
jj√xtSèãs
[
°¨t
]);

66 
	`jjCheckNAdd
(
jj√xtSèãs
[
°¨t
 + 1]);

67 
	}
}

68 
¥iv©e
 
föÆ
 
	$jjMoveNÁ_1
(
°¨tSèã
, 
curPos
)

70 [] 
√xtSèãs
;

71 
°¨tsAt
 = 0;

72 
jj√wSèãC¡
 = 3;

73 
i
 = 1;

74 
jj°©eSë
[0] = 
°¨tSèã
;

75 
j
, 
köd
 = 0x7fffffff;

78 i‡(++
jjround
 == 0x7fffffff)

79 
	`ReInôRounds
();

80 i‡(
curCh¨
 < 64)

82 
l
 = 1L << 
curCh¨
;

83 
M©chLo›
: do

85 
jj°©eSë
[--
i
])

88 i‡((0x2400L & 
l
) != 0L)

90 i‡(
köd
 > 6)

91 
köd
 = 6;

93 i‡(
curCh¨
 == 13)

94 
jj°©eSë
[
jj√wSèãC¡
++] = 1;

97 i‡(
curCh¨
 =10 && 
köd
 > 6)

98 
köd
 = 6;

101 i‡(
curCh¨
 == 13)

102 
jj°©eSë
[
jj√wSèãC¡
++] = 1;

106 } 
i
 !
°¨tsAt
);

108 i‡(
curCh¨
 < 128)

110 
l
 = 1L << (
curCh¨
 & 077);

111 
M©chLo›
: do

113 
jj°©eSë
[--
i
])

117 } 
i
 !
°¨tsAt
);

121 
i2
 = (
curCh¨
 & 0xff) >> 6;

122 
l2
 = 1L << (
curCh¨
 & 077);

123 
M©chLo›
: do

125 
jj°©eSë
[--
i
])

129 } 
i
 !
°¨tsAt
);

131 i‡(
köd
 != 0x7fffffff)

133 
jjm©chedKöd
 = 
köd
;

134 
jjm©chedPos
 = 
curPos
;

135 
köd
 = 0x7fffffff;

137 ++
curPos
;

138 i‡((
i
 = 
jj√wSèãC¡
Ë=(
°¨tsAt
 = 3 - (jjnewStateCnt = startsAt)))

139  
curPos
;

140 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

141 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
Ë{  
curPos
; }

143 
	}
}

144 
¥iv©e
 
föÆ
 
	$jjSt›SåögLôîÆDÁ_0
(
pos
, 
a˘ive0
)

146 
pos
)

149 i‡((
a˘ive0
 & 0xfff800L) != 0L)

151 
jjm©chedKöd
 = 32;

156 i‡((
a˘ive0
 & 0xfff800L) != 0L)

158 
jjm©chedKöd
 = 32;

159 
jjm©chedPos
 = 1;

164 i‡((
a˘ive0
 & 0x7ef800L) != 0L)

166 
jjm©chedKöd
 = 32;

167 
jjm©chedPos
 = 2;

170 i‡((
a˘ive0
 & 0x810000L) != 0L)

174 i‡((
a˘ive0
 & 0x24000L) != 0L)

176 i‡((
a˘ive0
 & 0x7cb800L) != 0L)

178 
jjm©chedKöd
 = 32;

179 
jjm©chedPos
 = 3;

184 i‡((
a˘ive0
 & 0x41000L) != 0L)

186 i‡((
a˘ive0
 & 0x78a800L) != 0L)

188 
jjm©chedKöd
 = 32;

189 
jjm©chedPos
 = 4;

194 i‡((
a˘ive0
 & 0x680800L) != 0L)

196 i‡((
a˘ive0
 & 0x10a000L) != 0L)

198 
jjm©chedKöd
 = 32;

199 
jjm©chedPos
 = 5;

206 
	}
}

207 
¥iv©e
 
föÆ
 
	$jjSèπNÁ_0
(
pos
, 
a˘ive0
)

209  
	`jjMoveNÁ_0
(
	`jjSt›SåögLôîÆDÁ_0
(
pos
, 
a˘ive0
),Öos + 1);

210 
	}
}

211 
¥iv©e
 
föÆ
 
	$jjSt›AtPos
(
pos
, 
köd
)

213 
jjm©chedKöd
 = 
köd
;

214 
jjm©chedPos
 = 
pos
;

215  
pos
 + 1;

216 
	}
}

217 
¥iv©e
 
föÆ
 
	$jjSèπNÁWôhSèãs_0
(
pos
, 
köd
, 
°©e
)

219 
jjm©chedKöd
 = 
köd
;

220 
jjm©chedPos
 = 
pos
;

221 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

222 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
Ë{  
pos
 + 1; }

223  
	`jjMoveNÁ_0
(
°©e
, 
pos
 + 1);

224 
	}
}

225 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ0_0
()

227 
curCh¨
)

230  
	`jjSt›AtPos
(0, 29);

232  
	`jjSt›AtPos
(0, 30);

234  
	`jjMoveSåögLôîÆDÁ1_0
(0x120L);

236  
	`jjSt›AtPos
(0, 28);

238  
	`jjSt›AtPos
(0, 26);

240  
	`jjSt›AtPos
(0, 27);

242  
	`jjMoveSåögLôîÆDÁ1_0
(0x20c000L);

244  
	`jjMoveSåögLôîÆDÁ1_0
(0x1000L);

246  
	`jjMoveSåögLôîÆDÁ1_0
(0x80000L);

248  
	`jjMoveSåögLôîÆDÁ1_0
(0x40000L);

250  
	`jjMoveSåögLôîÆDÁ1_0
(0x12000L);

252  
	`jjMoveSåögLôîÆDÁ1_0
(0x20000L);

254  
	`jjMoveSåögLôîÆDÁ1_0
(0x800800L);

256  
	`jjMoveSåögLôîÆDÁ1_0
(0x100000L);

258  
	`jjMoveSåögLôîÆDÁ1_0
(0x400000L);

260  
	`jjSt›AtPos
(0, 24);

262  
	`jjSt›AtPos
(0, 25);

264  
	`jjMoveNÁ_0
(0, 0);

266 
	}
}

267 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ1_0
(
a˘ive0
)

269 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

270 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

271 
	`jjSt›SåögLôîÆDÁ_0
(0, 
a˘ive0
);

274 
curCh¨
)

277 i‡((
a˘ive0
 & 0x100L) != 0L)

278  
	`jjSt›AtPos
(1, 8);

281 i‡((
a˘ive0
 & 0x20L) != 0L)

282  
	`jjSt›AtPos
(1, 5);

285  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x800000L);

287  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x400000L);

289  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x41000L);

291  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x12000L);

293  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0xa8800L);

295  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x100000L);

297  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x200000L);

299  
	`jjMoveSåögLôîÆDÁ2_0
(
a˘ive0
, 0x4000L);

303  
	`jjSèπNÁ_0
(0, 
a˘ive0
);

304 
	}
}

305 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ2_0
(
ﬁd0
, 
a˘ive0
)

307 i‡(((
a˘ive0
 &
ﬁd0
)) == 0L)

308  
	`jjSèπNÁ_0
(0, 
ﬁd0
);

309 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

310 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

311 
	`jjSt›SåögLôîÆDÁ_0
(1, 
a˘ive0
);

314 
curCh¨
)

317  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x1000L);

319  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x402000L);

321  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x800L);

323  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x200000L);

325  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x20000L);

327  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x48000L);

329 i‡((
a˘ive0
 & 0x800000L) != 0L)

330  
	`jjSèπNÁWôhSèãs_0
(2, 23, 4);

333 i‡((
a˘ive0
 & 0x10000L) != 0L)

334  
	`jjSèπNÁWôhSèãs_0
(2, 16, 4);

335  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x104000L);

337  
	`jjMoveSåögLôîÆDÁ3_0
(
a˘ive0
, 0x80000L);

341  
	`jjSèπNÁ_0
(1, 
a˘ive0
);

342 
	}
}

343 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ3_0
(
ﬁd0
, 
a˘ive0
)

345 i‡(((
a˘ive0
 &
ﬁd0
)) == 0L)

346  
	`jjSèπNÁ_0
(1, 
ﬁd0
);

347 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

348 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

349 
	`jjSt›SåögLôîÆDÁ_0
(2, 
a˘ive0
);

352 
curCh¨
)

355  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x40000L);

357  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x80000L);

359 i‡((
a˘ive0
 & 0x4000L) != 0L)

360  
	`jjSèπNÁWôhSèãs_0
(3, 14, 4);

363  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x200000L);

365 i‡((
a˘ive0
 & 0x20000L) != 0L)

366  
	`jjSèπNÁWôhSèãs_0
(3, 17, 4);

369  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0xa000L);

371  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x100000L);

373  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x1000L);

375  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x400000L);

377  
	`jjMoveSåögLôîÆDÁ4_0
(
a˘ive0
, 0x800L);

381  
	`jjSèπNÁ_0
(2, 
a˘ive0
);

382 
	}
}

383 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ4_0
(
ﬁd0
, 
a˘ive0
)

385 i‡(((
a˘ive0
 &
ﬁd0
)) == 0L)

386  
	`jjSèπNÁ_0
(2, 
ﬁd0
);

387 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

388 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

389 
	`jjSt›SåögLôîÆDÁ_0
(3, 
a˘ive0
);

392 
curCh¨
)

395  
	`jjMoveSåögLôîÆDÁ5_0
(
a˘ive0
, 0x208000L);

397  
	`jjMoveSåögLôîÆDÁ5_0
(
a˘ive0
, 0x100000L);

399  
	`jjMoveSåögLôîÆDÁ5_0
(
a˘ive0
, 0x80800L);

401  
	`jjMoveSåögLôîÆDÁ5_0
(
a˘ive0
, 0x400000L);

403 i‡((
a˘ive0
 & 0x1000L) != 0L)

404  
	`jjSèπNÁWôhSèãs_0
(4, 12, 4);

407 i‡((
a˘ive0
 & 0x40000L) != 0L)

408  
	`jjSèπNÁWôhSèãs_0
(4, 18, 4);

411  
	`jjMoveSåögLôîÆDÁ5_0
(
a˘ive0
, 0x2000L);

415  
	`jjSèπNÁ_0
(3, 
a˘ive0
);

416 
	}
}

417 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ5_0
(
ﬁd0
, 
a˘ive0
)

419 i‡(((
a˘ive0
 &
ﬁd0
)) == 0L)

420  
	`jjSèπNÁ_0
(3, 
ﬁd0
);

421 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

422 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

423 
	`jjSt›SåögLôîÆDÁ_0
(4, 
a˘ive0
);

426 
curCh¨
)

429  
	`jjMoveSåögLôîÆDÁ6_0
(
a˘ive0
, 0x8000L);

431  
	`jjMoveSåögLôîÆDÁ6_0
(
a˘ive0
, 0x2000L);

433 i‡((
a˘ive0
 & 0x800L) != 0L)

434  
	`jjSèπNÁWôhSèãs_0
(5, 11, 4);

435 i‡((
a˘ive0
 & 0x80000L) != 0L)

436  
	`jjSèπNÁWôhSèãs_0
(5, 19, 4);

439  
	`jjMoveSåögLôîÆDÁ6_0
(
a˘ive0
, 0x100000L);

441 i‡((
a˘ive0
 & 0x200000L) != 0L)

442  
	`jjSèπNÁWôhSèãs_0
(5, 21, 4);

443 i‡((
a˘ive0
 & 0x400000L) != 0L)

444  
	`jjSèπNÁWôhSèãs_0
(5, 22, 4);

449  
	`jjSèπNÁ_0
(4, 
a˘ive0
);

450 
	}
}

451 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ6_0
(
ﬁd0
, 
a˘ive0
)

453 i‡(((
a˘ive0
 &
ﬁd0
)) == 0L)

454  
	`jjSèπNÁ_0
(4, 
ﬁd0
);

455 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

456 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

457 
	`jjSt›SåögLôîÆDÁ_0
(5, 
a˘ive0
);

460 
curCh¨
)

463 i‡((
a˘ive0
 & 0x2000L) != 0L)

464  
	`jjSèπNÁWôhSèãs_0
(6, 13, 4);

467 i‡((
a˘ive0
 & 0x100000L) != 0L)

468  
	`jjSèπNÁWôhSèãs_0
(6, 20, 4);

471 i‡((
a˘ive0
 & 0x8000L) != 0L)

472  
	`jjSèπNÁWôhSèãs_0
(6, 15, 4);

477  
	`jjSèπNÁ_0
(5, 
a˘ive0
);

478 
	}
}

479 
föÆ
 [] 
	gjjbôVec0
 = {

482 
¥iv©e
 
föÆ
 
	$jjMoveNÁ_0
(
°¨tSèã
, 
curPos
)

484 [] 
√xtSèãs
;

485 
°¨tsAt
 = 0;

486 
jj√wSèãC¡
 = 5;

487 
i
 = 1;

488 
jj°©eSë
[0] = 
°¨tSèã
;

489 
j
, 
köd
 = 0x7fffffff;

492 i‡(++
jjround
 == 0x7fffffff)

493 
	`ReInôRounds
();

494 i‡(
curCh¨
 < 64)

496 
l
 = 1L << 
curCh¨
;

497 
M©chLo›
: do

499 
jj°©eSë
[--
i
])

502 i‡(
curCh¨
 == 34)

503 
	`jjCheckNAdd
(1);

506 i‡((0xfffffffbffffffffL & 
l
) != 0L)

507 
	`jjCheckNAddTwoSèãs
(1, 2);

510 i‡(
curCh¨
 =34 && 
köd
 > 31)

511 
köd
 = 31;

514 i‡((0x3ff000000000000L & 
l
) == 0L)

516 i‡(
köd
 > 32)

517 
köd
 = 32;

518 
jj°©eSë
[
jj√wSèãC¡
++] = 4;

522 } 
i
 !
°¨tsAt
);

524 i‡(
curCh¨
 < 128)

526 
l
 = 1L << (
curCh¨
 & 077);

527 
M©chLo›
: do

529 
jj°©eSë
[--
i
])

532 i‡((0x7ffff„07ffff„L & 
l
) == 0L)

534 i‡(
köd
 > 32)

535 
köd
 = 32;

536 
	`jjCheckNAdd
(4);

539 
	`jjAddSèãs
(0, 1);

542 i‡((0x7ffff„87ffff„L & 
l
) == 0L)

544 i‡(
köd
 > 32)

545 
köd
 = 32;

546 
	`jjCheckNAdd
(4);

550 } 
i
 !
°¨tsAt
);

554 
i2
 = (
curCh¨
 & 0xff) >> 6;

555 
l2
 = 1L << (
curCh¨
 & 077);

556 
M©chLo›
: do

558 
jj°©eSë
[--
i
])

561 i‡((
jjbôVec0
[
i2
] & 
l2
) != 0L)

562 
	`jjAddSèãs
(0, 1);

566 } 
i
 !
°¨tsAt
);

568 i‡(
köd
 != 0x7fffffff)

570 
jjm©chedKöd
 = 
köd
;

571 
jjm©chedPos
 = 
curPos
;

572 
köd
 = 0x7fffffff;

574 ++
curPos
;

575 i‡((
i
 = 
jj√wSèãC¡
Ë=(
°¨tsAt
 = 5 - (jjnewStateCnt = startsAt)))

576  
curPos
;

577 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

578 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
Ë{  
curPos
; }

580 
	}
}

581 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ0_2
()

583 
curCh¨
)

586  
	`jjMoveSåögLôîÆDÁ1_2
(0x200L);

590 
	}
}

591 
¥iv©e
 
föÆ
 
	$jjMoveSåögLôîÆDÁ1_2
(
a˘ive0
)

593 
åy
 { 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
(); }

594 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

597 
curCh¨
)

600 i‡((
a˘ive0
 & 0x200L) != 0L)

601  
	`jjSt›AtPos
(1, 9);

607 
	}
}

608 
föÆ
 [] 
	gjj√xtSèãs
 = {

611 
public
 
föÆ
 
	gSåög
[] 
	gjj°rLôîÆImages
 = {

612 "", 
nuŒ
,Çull,Çull,Çull,Çull,Çull,Çull,Çull,Çull,Çull,

616 "\166\145\143\164\157\162", "\155\141\160", "\173", "\175", "\74", "\76", "\73", "\54", "\56", 
nuŒ
,Çull, };

617 
public
 
föÆ
 
	gSåög
[] 
	gÀxSèãNames
 = {

622 
public
 
föÆ
 [] 
	gjj√wLexSèã
 = {

626 
föÆ
 [] 
	gjjtoTokí
 = {

629 
föÆ
 [] 
	gjjtoSkù
 = {

632 
föÆ
 [] 
	gjjtoS≥cül
 = {

635 
föÆ
 [] 
	gjjtoM‹e
 = {

638 
¥Ÿe˘ed
 
Sim∂eCh¨Såóm
 
	göput_°ªam
;

639 
¥iv©e
 
föÆ
 [] 
	gjjrounds
 = 
√w
 [5];

640 
¥iv©e
 
föÆ
 [] 
	gjj°©eSë
 = 
√w
 [10];

641 
SåögBuf„r
 
	gimage
;

642 
	gjjimageLí
;

643 
	gÀngthOfM©ch
;

644 
¥Ÿe˘ed
 
	gcurCh¨
;

645 
public
 
	$RccTokíM™agî
(
Sim∂eCh¨Såóm
 
°ªam
){

646 i‡(
Sim∂eCh¨Såóm
.
°©icFœg
)

647 
throw
 
√w
 
	`Eº‹
("ERROR: Cannot useá static CharStream class witháÇon-staticÜexicalánalyzer.");

648 
öput_°ªam
 = 
°ªam
;

649 
	}
}

650 
public
 
	$RccTokíM™agî
(
Sim∂eCh¨Såóm
 
°ªam
, 
ÀxSèã
){

651 
	`this
(
°ªam
);

652 
	`SwôchTo
(
ÀxSèã
);

653 
	}
}

654 
public
 
	$ReInô
(
Sim∂eCh¨Såóm
 
°ªam
)

656 
jjm©chedPos
 = 
jj√wSèãC¡
 = 0;

657 
curLexSèã
 = 
deÁu…LexSèã
;

658 
öput_°ªam
 = 
°ªam
;

659 
	`ReInôRounds
();

660 
	}
}

661 
¥iv©e
 
föÆ
 
	$ReInôRounds
()

663 
i
;

664 
jjround
 = 0x80000001;

665 
i
 = 5; i-- > 0;)

666 
jjrounds
[
i
] = 0x80000000;

667 
	}
}

668 
public
 
	$ReInô
(
Sim∂eCh¨Såóm
 
°ªam
, 
ÀxSèã
)

670 
	`ReInô
(
°ªam
);

671 
	`SwôchTo
(
ÀxSèã
);

672 
	}
}

673 
public
 
	$SwôchTo
(
ÀxSèã
)

675 i‡(
ÀxSèã
 >= 3 ||ÜexState < 0)

676 
throw
 
√w
 
	`TokíMgrEº‹
("Eº‹: Ign‹ög invÆidÜexiˇ»°©ê: " + 
ÀxSèã
 + ". Sèã unch™ged.", 
TokíMgrEº‹
.
INVALID_LEXICAL_STATE
);

678 
curLexSèã
 = 
ÀxSèã
;

679 
	}
}

681 
¥Ÿe˘ed
 
Tokí
 
	$jjFûlTokí
()

683 
Tokí
 
t
 = Tokí.
	`√wTokí
(
jjm©chedKöd
);

684 
t
.
köd
 = 
jjm©chedKöd
;

685 
Såög
 
im
 = 
jj°rLôîÆImages
[
jjm©chedKöd
];

686 
t
.
image
 = (
im
 =
nuŒ
Ë? 
öput_°ªam
.
	`GëImage
() : im;

687 
t
.
begöLöe
 = 
öput_°ªam
.
	`gëBegöLöe
();

688 
t
.
begöCﬁumn
 = 
öput_°ªam
.
	`gëBegöCﬁumn
();

689 
t
.
ídLöe
 = 
öput_°ªam
.
	`gëEndLöe
();

690 
t
.
ídCﬁumn
 = 
öput_°ªam
.
	`gëEndCﬁumn
();

691  
t
;

692 
	}
}

694 
	gcurLexSèã
 = 0;

695 
	gdeÁu…LexSèã
 = 0;

696 
	gjj√wSèãC¡
;

697 
	gjjround
;

698 
	gjjm©chedPos
;

699 
	gjjm©chedKöd
;

701 
public
 
Tokí
 
	$gëNextTokí
()

703 
köd
;

704 
Tokí
 
•ecülTokí
 = 
nuŒ
;

705 
Tokí
 
m©chedTokí
;

706 
curPos
 = 0;

708 
EOFLo›
 :

711 
åy


713 
curCh¨
 = 
öput_°ªam
.
	`BegöTokí
();

715 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
)

717 
jjm©chedKöd
 = 0;

718 
m©chedTokí
 = 
	`jjFûlTokí
();

719 
m©chedTokí
.
•ecülTokí
 = specialToken;

720  
m©chedTokí
;

722 
image
 = 
nuŒ
;

723 
jjimageLí
 = 0;

727 
curLexSèã
)

730 
åy
 { 
öput_°ªam
.
	`backup
(0);

731 
curCh¨
 <= 32 && (0x100002600L & (1L << curChar)) != 0L)

732 
curCh¨
 = 
öput_°ªam
.
	`BegöTokí
();

734 
	`ˇtch
 (
java
.
io
.
IOEx˚±i⁄
 
e1
Ë{  
EOFLo›
; }

735 
jjm©chedKöd
 = 0x7fffffff;

736 
jjm©chedPos
 = 0;

737 
curPos
 = 
	`jjMoveSåögLôîÆDÁ0_0
();

740 
jjm©chedKöd
 = 0x7fffffff;

741 
jjm©chedPos
 = 0;

742 
curPos
 = 
	`jjMoveSåögLôîÆDÁ0_1
();

743 i‡(
jjm©chedPos
 =0 && 
jjm©chedKöd
 > 7)

745 
jjm©chedKöd
 = 7;

749 
jjm©chedKöd
 = 0x7fffffff;

750 
jjm©chedPos
 = 0;

751 
curPos
 = 
	`jjMoveSåögLôîÆDÁ0_2
();

752 i‡(
jjm©chedPos
 =0 && 
jjm©chedKöd
 > 10)

754 
jjm©chedKöd
 = 10;

758 i‡(
jjm©chedKöd
 != 0x7fffffff)

760 i‡(
jjm©chedPos
 + 1 < 
curPos
)

761 
öput_°ªam
.
	`backup
(
curPos
 - 
jjm©chedPos
 - 1);

762 i‡((
jjtoTokí
[
jjm©chedKöd
 >> 6] & (1L << (jjmatchedKind & 077))) != 0L)

764 
m©chedTokí
 = 
	`jjFûlTokí
();

765 
m©chedTokí
.
•ecülTokí
 = specialToken;

766 i‡(
jj√wLexSèã
[
jjm©chedKöd
] != -1)

767 
curLexSèã
 = 
jj√wLexSèã
[
jjm©chedKöd
];

768  
m©chedTokí
;

770 i‡((
jjtoSkù
[
jjm©chedKöd
 >> 6] & (1L << (jjmatchedKind & 077))) != 0L)

772 i‡((
jjtoS≥cül
[
jjm©chedKöd
 >> 6] & (1L << (jjmatchedKind & 077))) != 0L)

774 
m©chedTokí
 = 
	`jjFûlTokí
();

775 i‡(
•ecülTokí
 =
nuŒ
)

776 
•ecülTokí
 = 
m©chedTokí
;

779 
m©chedTokí
.
•ecülTokí
 = specialToken;

780 
•ecülTokí
 = (•ecülTokí.
√xt
 = 
m©chedTokí
);

782 
	`SkùLexiˇlA˘i⁄s
(
m©chedTokí
);

785 
	`SkùLexiˇlA˘i⁄s
(
nuŒ
);

786 i‡(
jj√wLexSèã
[
jjm©chedKöd
] != -1)

787 
curLexSèã
 = 
jj√wLexSèã
[
jjm©chedKöd
];

788  
EOFLo›
;

790 
jjimageLí
 +
jjm©chedPos
 + 1;

791 i‡(
jj√wLexSèã
[
jjm©chedKöd
] != -1)

792 
curLexSèã
 = 
jj√wLexSèã
[
jjm©chedKöd
];

793 
curPos
 = 0;

794 
jjm©chedKöd
 = 0x7fffffff;

795 
åy
 {

796 
curCh¨
 = 
öput_°ªam
.
	`ªadCh¨
();

799 
	`ˇtch
 (
java
.
io
.
IOEx˚±i⁄
 
e1
) { }

801 
îr‹_löe
 = 
öput_°ªam
.
	`gëEndLöe
();

802 
îr‹_cﬁumn
 = 
öput_°ªam
.
	`gëEndCﬁumn
();

803 
Såög
 
îr‹_a·î
 = 
nuŒ
;

804 
boﬁón
 
EOFSìn
 = 
Ál£
;

805 
åy
 { 
öput_°ªam
.
	`ªadCh¨
(); i≈ut_°ªam.
	`backup
(1); }

806 
	`ˇtch
 (
java
.
io
.
IOEx˚±i⁄
 
e1
) {

807 
EOFSìn
 = 
åue
;

808 
îr‹_a·î
 = 
curPos
 <1 ? "" : 
öput_°ªam
.
	`GëImage
();

809 i‡(
curCh¨
 == '\n' || curChar == '\r') {

810 
îr‹_löe
++;

811 
îr‹_cﬁumn
 = 0;

814 
îr‹_cﬁumn
++;

816 i‡(!
EOFSìn
) {

817 
öput_°ªam
.
	`backup
(1);

818 
îr‹_a·î
 = 
curPos
 <1 ? "" : 
öput_°ªam
.
	`GëImage
();

820 
throw
 
√w
 
	`TokíMgrEº‹
(
EOFSìn
, 
curLexSèã
, 
îr‹_löe
, 
îr‹_cﬁumn
, 
îr‹_a·î
, 
curCh¨
, 
TokíMgrEº‹
.
LEXICAL_ERROR
);

823 
	}
}

825 
	$SkùLexiˇlA˘i⁄s
(
Tokí
 
m©chedTokí
)

827 
jjm©chedKöd
)

832 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/SimpleCharStream.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

27 
public
 cœs†
	cSim∂eCh¨Såóm


29 
public
 
föÆ
 
boﬁón
 
	m°©icFœg
 = 
Ál£
;

30 
	mbufsize
;

31 
	mavaûabÀ
;

32 
	mtokíBegö
;

33 
public
 
	mbuÂos
 = -1;

34 
¥Ÿe˘ed
 
	mbuÊöe
[];

35 
¥Ÿe˘ed
 
	mbufcﬁumn
[];

37 
¥Ÿe˘ed
 
	mcﬁumn
 = 0;

38 
¥Ÿe˘ed
 
	mlöe
 = 1;

40 
¥Ÿe˘ed
 
boﬁón
 
	m¥evCh¨IsCR
 = 
Ál£
;

41 
¥Ÿe˘ed
 
boﬁón
 
	m¥evCh¨IsLF
 = 
Ál£
;

43 
¥Ÿe˘ed
 
	mjava
.
	mio
.
Ródî
 
	möputSåóm
;

45 
¥Ÿe˘ed
 [] 
	mbuf„r
;

46 
¥Ÿe˘ed
 
	mmaxNextCh¨Ind
 = 0;

47 
¥Ÿe˘ed
 
	möBuf
 = 0;

48 
¥Ÿe˘ed
 
	mèbSize
 = 8;

50 
¥Ÿe˘ed
 
	$£tTabSize
(
i
Ë{ 
èbSize
 = i; }

51 
¥Ÿe˘ed
 
	$gëTabSize
(
i
Ë{  
èbSize
; 
	}
}

54 
¥Ÿe˘ed
 
	$Ex∑ndBuff
(
boﬁón
 
wøpAround
)

56 [] 
√wbuf„r
 = 
√w
 [
bufsize
 + 2048];

57 
√wbuÊöe
[] = 
√w
 [
bufsize
 + 2048];

58 
√wbufcﬁumn
[] = 
√w
 [
bufsize
 + 2048];

60 
åy


62 i‡(
wøpAround
)

64 
Sy°em
.
	`¨øyc›y
(
buf„r
, 
tokíBegö
, 
√wbuf„r
, 0, 
bufsize
 -ÅokenBegin);

65 
Sy°em
.
	`¨øyc›y
(
buf„r
, 0, 
√wbuf„r
,

66 
bufsize
 - 
tokíBegö
, 
buÂos
);

67 
buf„r
 = 
√wbuf„r
;

69 
Sy°em
.
	`¨øyc›y
(
buÊöe
, 
tokíBegö
, 
√wbuÊöe
, 0, 
bufsize
 -ÅokenBegin);

70 
Sy°em
.
	`¨øyc›y
(
buÊöe
, 0, 
√wbuÊöe
, 
bufsize
 - 
tokíBegö
, 
buÂos
);

71 
buÊöe
 = 
√wbuÊöe
;

73 
Sy°em
.
	`¨øyc›y
(
bufcﬁumn
, 
tokíBegö
, 
√wbufcﬁumn
, 0, 
bufsize
 -ÅokenBegin);

74 
Sy°em
.
	`¨øyc›y
(
bufcﬁumn
, 0, 
√wbufcﬁumn
, 
bufsize
 - 
tokíBegö
, 
buÂos
);

75 
bufcﬁumn
 = 
√wbufcﬁumn
;

77 
maxNextCh¨Ind
 = (
buÂos
 +(
bufsize
 - 
tokíBegö
));

81 
Sy°em
.
	`¨øyc›y
(
buf„r
, 
tokíBegö
, 
√wbuf„r
, 0, 
bufsize
 -ÅokenBegin);

82 
buf„r
 = 
√wbuf„r
;

84 
Sy°em
.
	`¨øyc›y
(
buÊöe
, 
tokíBegö
, 
√wbuÊöe
, 0, 
bufsize
 -ÅokenBegin);

85 
buÊöe
 = 
√wbuÊöe
;

87 
Sy°em
.
	`¨øyc›y
(
bufcﬁumn
, 
tokíBegö
, 
√wbufcﬁumn
, 0, 
bufsize
 -ÅokenBegin);

88 
bufcﬁumn
 = 
√wbufcﬁumn
;

90 
maxNextCh¨Ind
 = (
buÂos
 -
tokíBegö
);

93 
	`ˇtch
 (
ThrowabÀ
 
t
)

95 
throw
 
√w
 
	`Eº‹
(
t
.
	`gëMesßge
());

99 
bufsize
 += 2048;

100 
avaûabÀ
 = 
bufsize
;

101 
tokíBegö
 = 0;

102 
	}
}

104 
¥Ÿe˘ed
 
	$FûlBuff
(Ë
throws
 
java
.
io
.
IOEx˚±i⁄


106 i‡(
maxNextCh¨Ind
 =
avaûabÀ
)

108 i‡(
avaûabÀ
 =
bufsize
)

110 i‡(
tokíBegö
 > 2048)

112 
buÂos
 = 
maxNextCh¨Ind
 = 0;

113 
avaûabÀ
 = 
tokíBegö
;

115 i‡(
tokíBegö
 < 0)

116 
buÂos
 = 
maxNextCh¨Ind
 = 0;

118 
	`Ex∑ndBuff
(
Ál£
);

120 i‡(
avaûabÀ
 > 
tokíBegö
)

121 
avaûabÀ
 = 
bufsize
;

122 i‡((
tokíBegö
 - 
avaûabÀ
) < 2048)

123 
	`Ex∑ndBuff
(
åue
);

125 
avaûabÀ
 = 
tokíBegö
;

128 
i
;

129 
åy
 {

130 i‡((
i
 = 
öputSåóm
.
	`ªad
(
buf„r
, 
maxNextCh¨Ind
,

131 
avaûabÀ
 - 
maxNextCh¨Ind
)) == -1)

133 
öputSåóm
.
	`˛o£
();

134 
throw
 
√w
 
java
.
io
.
	`IOEx˚±i⁄
();

137 
maxNextCh¨Ind
 +
i
;

140 
	`ˇtch
(
java
.
io
.
IOEx˚±i⁄
 
e
) {

141 --
buÂos
;

142 
	`backup
(0);

143 i‡(
tokíBegö
 == -1)

144 
tokíBegö
 = 
buÂos
;

145 
throw
 
e
;

147 
	}
}

149 
public
 
	$BegöTokí
(Ë
throws
 
java
.
io
.
IOEx˚±i⁄


151 
tokíBegö
 = -1;

152 
c
 = 
	`ªadCh¨
();

153 
tokíBegö
 = 
buÂos
;

155  
c
;

156 
	}
}

158 
¥Ÿe˘ed
 
	$Upd©eLöeCﬁumn
(
c
)

160 
cﬁumn
++;

162 i‡(
¥evCh¨IsLF
)

164 
¥evCh¨IsLF
 = 
Ál£
;

165 
löe
 +(
cﬁumn
 = 1);

167 i‡(
¥evCh¨IsCR
)

169 
¥evCh¨IsCR
 = 
Ál£
;

170 i‡(
c
 == '\n')

172 
¥evCh¨IsLF
 = 
åue
;

175 
löe
 +(
cﬁumn
 = 1);

178 
c
)

181 
¥evCh¨IsCR
 = 
åue
;

184 
¥evCh¨IsLF
 = 
åue
;

187 
cﬁumn
--;

188 
cﬁumn
 +(
èbSize
 - (column %ÅabSize));

194 
buÊöe
[
buÂos
] = 
löe
;

195 
bufcﬁumn
[
buÂos
] = 
cﬁumn
;

196 
	}
}

198 
public
 
	$ªadCh¨
(Ë
throws
 
java
.
io
.
IOEx˚±i⁄


200 i‡(
öBuf
 > 0)

202 --
öBuf
;

204 i‡(++
buÂos
 =
bufsize
)

205 
buÂos
 = 0;

207  
buf„r
[
buÂos
];

210 i‡(++
buÂos
 >
maxNextCh¨Ind
)

211 
	`FûlBuff
();

213 
c
 = 
buf„r
[
buÂos
];

215 
	`Upd©eLöeCﬁumn
(
c
);

216  (
c
);

217 
	}
}

224 
public
 
	$gëCﬁumn
() {

225  
bufcﬁumn
[
buÂos
];

226 
	}
}

233 
public
 
	$gëLöe
() {

234  
buÊöe
[
buÂos
];

235 
	}
}

237 
public
 
	$gëEndCﬁumn
() {

238  
bufcﬁumn
[
buÂos
];

239 
	}
}

241 
public
 
	$gëEndLöe
() {

242  
buÊöe
[
buÂos
];

243 
	}
}

245 
public
 
	$gëBegöCﬁumn
() {

246  
bufcﬁumn
[
tokíBegö
];

247 
	}
}

249 
public
 
	$gëBegöLöe
() {

250  
buÊöe
[
tokíBegö
];

251 
	}
}

253 
public
 
	$backup
(
amou¡
) {

255 
öBuf
 +
amou¡
;

256 i‡((
buÂos
 -
amou¡
) < 0)

257 
buÂos
 +
bufsize
;

258 
	}
}

260 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
Ródî
 
d°ªam
, 
°¨éöe
,

261 
°¨tcﬁumn
, 
buf„rsize
)

263 
öputSåóm
 = 
d°ªam
;

264 
löe
 = 
°¨éöe
;

265 
cﬁumn
 = 
°¨tcﬁumn
 - 1;

267 
avaûabÀ
 = 
bufsize
 = 
buf„rsize
;

268 
buf„r
 = 
√w
 [
buf„rsize
];

269 
buÊöe
 = 
√w
 [
buf„rsize
];

270 
bufcﬁumn
 = 
√w
 [
buf„rsize
];

271 
	}
}

273 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
Ródî
 
d°ªam
, 
°¨éöe
,

274 
°¨tcﬁumn
)

276 
	`this
(
d°ªam
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

277 
	}
}

279 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
Ródî
 
d°ªam
)

281 
	`this
(
d°ªam
, 1, 1, 4096);

282 
	}
}

283 
public
 
	$ReInô
(
java
.
io
.
Ródî
 
d°ªam
, 
°¨éöe
,

284 
°¨tcﬁumn
, 
buf„rsize
)

286 
öputSåóm
 = 
d°ªam
;

287 
löe
 = 
°¨éöe
;

288 
cﬁumn
 = 
°¨tcﬁumn
 - 1;

290 i‡(
buf„r
 =
nuŒ
 || 
buf„rsize
 !buf„r.
Àngth
)

292 
avaûabÀ
 = 
bufsize
 = 
buf„rsize
;

293 
buf„r
 = 
√w
 [
buf„rsize
];

294 
buÊöe
 = 
√w
 [
buf„rsize
];

295 
bufcﬁumn
 = 
√w
 [
buf„rsize
];

297 
¥evCh¨IsLF
 = 
¥evCh¨IsCR
 = 
Ál£
;

298 
tokíBegö
 = 
öBuf
 = 
maxNextCh¨Ind
 = 0;

299 
buÂos
 = -1;

300 
	}
}

302 
public
 
	$ReInô
(
java
.
io
.
Ródî
 
d°ªam
, 
°¨éöe
,

303 
°¨tcﬁumn
)

305 
	`ReInô
(
d°ªam
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

306 
	}
}

308 
public
 
	$ReInô
(
java
.
io
.
Ródî
 
d°ªam
)

310 
	`ReInô
(
d°ªam
, 1, 1, 4096);

311 
	}
}

312 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
, 
°¨éöe
,

313 
°¨tcﬁumn
, 
buf„rsize
Ë
throws
 
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄


315 
	`this
(
ícodög
 =
nuŒ
 ? 
√w
 
java
.
io
.
	`I≈utSåómRódî
(
d°ªam
Ë:Çew java.io.I≈utSåómRódî(d°ªam,Éncodög), 
°¨éöe
, 
°¨tcﬁumn
, 
buf„rsize
);

316 
	}
}

318 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
°¨éöe
,

319 
°¨tcﬁumn
, 
buf„rsize
)

321 
	`this
(
√w
 
java
.
io
.
	`I≈utSåómRódî
(
d°ªam
), 
°¨éöe
, 
°¨tcﬁumn
, 
buf„rsize
);

322 
	}
}

324 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
, 
°¨éöe
,

325 
°¨tcﬁumn
Ë
throws
 
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄


327 
	`this
(
d°ªam
, 
ícodög
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

328 
	}
}

330 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
°¨éöe
,

331 
°¨tcﬁumn
)

333 
	`this
(
d°ªam
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

334 
	}
}

336 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
Ë
throws
 java.io.
Unsuµ‹ãdEncodögEx˚±i⁄


338 
	`this
(
d°ªam
, 
ícodög
, 1, 1, 4096);

339 
	}
}

341 
public
 
	$Sim∂eCh¨Såóm
(
java
.
io
.
I≈utSåóm
 
d°ªam
)

343 
	`this
(
d°ªam
, 1, 1, 4096);

344 
	}
}

346 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
, 
°¨éöe
,

347 
°¨tcﬁumn
, 
buf„rsize
Ë
throws
 
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄


349 
	`ReInô
(
ícodög
 =
nuŒ
 ? 
√w
 
java
.
io
.
	`I≈utSåómRódî
(
d°ªam
Ë:Çew java.io.I≈utSåómRódî(d°ªam,Éncodög), 
°¨éöe
, 
°¨tcﬁumn
, 
buf„rsize
);

350 
	}
}

352 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
°¨éöe
,

353 
°¨tcﬁumn
, 
buf„rsize
)

355 
	`ReInô
(
√w
 
java
.
io
.
	`I≈utSåómRódî
(
d°ªam
), 
°¨éöe
, 
°¨tcﬁumn
, 
buf„rsize
);

356 
	}
}

358 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
Ë
throws
 java.io.
Unsuµ‹ãdEncodögEx˚±i⁄


360 
	`ReInô
(
d°ªam
, 
ícodög
, 1, 1, 4096);

361 
	}
}

363 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
)

365 
	`ReInô
(
d°ªam
, 1, 1, 4096);

366 
	}
}

367 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
Såög
 
ícodög
, 
°¨éöe
,

368 
°¨tcﬁumn
Ë
throws
 
java
.
io
.
Unsuµ‹ãdEncodögEx˚±i⁄


370 
	`ReInô
(
d°ªam
, 
ícodög
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

371 
	}
}

372 
public
 
	$ReInô
(
java
.
io
.
I≈utSåóm
 
d°ªam
, 
°¨éöe
,

373 
°¨tcﬁumn
)

375 
	`ReInô
(
d°ªam
, 
°¨éöe
, 
°¨tcﬁumn
, 4096);

376 
	}
}

377 
public
 
Såög
 
	$GëImage
()

379 i‡(
buÂos
 >
tokíBegö
)

380  
√w
 
	`Såög
(
buf„r
, 
tokíBegö
, 
buÂos
 -ÅokenBegin + 1);

382  
√w
 
	`Såög
(
buf„r
, 
tokíBegö
, 
bufsize
 -ÅokenBegin) +

383 
√w
 
	`Såög
(
buf„r
, 0, 
buÂos
 + 1);

384 
	}
}

386 
public
 [] 
	$GëSuffix
(
Àn
)

388 [] 
ªt
 = 
√w
 [
Àn
];

390 i‡((
buÂos
 + 1Ë>
Àn
)

391 
Sy°em
.
	`¨øyc›y
(
buf„r
, 
buÂos
 - 
Àn
 + 1, 
ªt
, 0,Üen);

394 
Sy°em
.
	`¨øyc›y
(
buf„r
, 
bufsize
 - (
Àn
 - 
buÂos
 - 1), 
ªt
, 0,

395 
Àn
 - 
buÂos
 - 1);

396 
Sy°em
.
	`¨øyc›y
(
buf„r
, 0, 
ªt
, 
Àn
 - 
buÂos
 - 1, bufpos + 1);

399  
ªt
;

400 
	}
}

402 
public
 
	$D⁄e
()

404 
buf„r
 = 
nuŒ
;

405 
buÊöe
 = 
nuŒ
;

406 
bufcﬁumn
 = 
nuŒ
;

407 
	}
}

412 
public
 
	$adju°BegöLöeCﬁumn
(
√wLöe
, 
√wCﬁ
)

414 
°¨t
 = 
tokíBegö
;

415 
Àn
;

417 i‡(
buÂos
 >
tokíBegö
)

419 
Àn
 = 
buÂos
 - 
tokíBegö
 + 
öBuf
 + 1;

423 
Àn
 = 
bufsize
 - 
tokíBegö
 + 
buÂos
 + 1 + 
öBuf
;

426 
i
 = 0, 
j
 = 0, 
k
 = 0;

427 
√xtCﬁDiff
 = 0, 
cﬁumnDiff
 = 0;

429 
i
 < 
Àn
 &&

430 
buÊöe
[
j
 = 
°¨t
 % 
bufsize
] =buÊöe[
k
 = ++start % bufsize])

432 
buÊöe
[
j
] = 
√wLöe
;

433 
√xtCﬁDiff
 = 
cﬁumnDiff
 + 
bufcﬁumn
[
k
] - bufcﬁumn[
j
];

434 
bufcﬁumn
[
j
] = 
√wCﬁ
 + 
cﬁumnDiff
;

435 
cﬁumnDiff
 = 
√xtCﬁDiff
;

436 
i
++;

439 i‡(
i
 < 
Àn
)

441 
buÊöe
[
j
] = 
√wLöe
++;

442 
bufcﬁumn
[
j
] = 
√wCﬁ
 + 
cﬁumnDiff
;

444 
i
++ < 
Àn
)

446 i‡(
buÊöe
[
j
 = 
°¨t
 % 
bufsize
] != bufline[++start % bufsize])

447 
buÊöe
[
j
] = 
√wLöe
++;

449 
buÊöe
[
j
] = 
√wLöe
;

453 
löe
 = 
buÊöe
[
j
];

454 
cﬁumn
 = 
bufcﬁumn
[
j
];

455 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/Token.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

26 
public
 cœs†
	cTokí
 {

33 
public
 
	mköd
;

40 
public
 
	mbegöLöe
, 
	mbegöCﬁumn
, 
	mídLöe
, 
	mídCﬁumn
;

45 
public
 
Såög
 
	mimage
;

55 
public
 
Tokí
 
	m√xt
;

69 
public
 
Tokí
 
	m•ecülTokí
;

74 
public
 
Såög
 
	$toSåög
()

76  
image
;

91 
public
 
föÆ
 
Tokí
 
	$√wTokí
(
ofKöd
)

93 
ofKöd
)

95  :  
√w
 
	`Tokí
();

97 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/TokenMgrError.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gcompûî
.
	ggíî©ed
;

22 
public
 cœs†
	cTokíMgrEº‹
 
exãnds
 
	mEº‹


31 
föÆ
 
	mLEXICAL_ERROR
 = 0;

36 
föÆ
 
	mSTATIC_LEXER_ERROR
 = 1;

41 
föÆ
 
	mINVALID_LEXICAL_STATE
 = 2;

46 
föÆ
 
	mLOOP_DETECTED
 = 3;

52 
	mîr‹Code
;

58 
¥Ÿe˘ed
 
föÆ
 
Såög
 
	$addEsˇ≥s
(
Såög
 
°r
) {

59 
SåögBuf„r
 
ªtvÆ
 = 
√w
 
	`SåögBuf„r
();

60 
ch
;

61 
i
 = 0; i < 
°r
.
	`Àngth
(); i++) {

62 
°r
.
	`ch¨At
(
i
))

67 
ªtvÆ
.
	`≠≥nd
("\\b");

70 
ªtvÆ
.
	`≠≥nd
("\\t");

73 
ªtvÆ
.
	`≠≥nd
("\\n");

76 
ªtvÆ
.
	`≠≥nd
("\\f");

79 
ªtvÆ
.
	`≠≥nd
("\\r");

82 
ªtvÆ
.
	`≠≥nd
("\\\"");

85 
ªtvÆ
.
	`≠≥nd
("\\\'");

88 
ªtvÆ
.
	`≠≥nd
("\\\\");

91 i‡((
ch
 = 
°r
.
	`ch¨At
(
i
)) < 0x20 || ch > 0x7e) {

92 
Såög
 
s
 = "0000" + 
I¡egî
.
	`toSåög
(
ch
, 16);

93 
ªtvÆ
.
	`≠≥nd
("\\u" + 
s
.
	`sub°rög
(s.
	`Àngth
() - 4, s.length()));

95 
ªtvÆ
.
	`≠≥nd
(
ch
);

100  
ªtvÆ
.
	`toSåög
();

115 
¥Ÿe˘ed
 
Såög
 
	$LexiˇlEº‹
(
boﬁón
 
EOFSìn
, 
ÀxSèã
, 
îr‹Löe
, 
îr‹Cﬁumn
, 
Såög
 
îr‹A·î
, 
curCh¨
) {

117 
îr‹Löe
 + ", column " +

118 
îr‹Cﬁumn
 + ". Encountered: " +

119 (
EOFSìn
 ? "<EOF> " : ("\"" + 
	`addEsˇ≥s
(
Såög
.
	`vÆueOf
(
curCh¨
)) + "\"") + " (" + ()curChar + "), ") +

120 "a·î : \"" + 
	`addEsˇ≥s
(
îr‹A·î
) + "\"");

121 
	}
}

132 
public
 
Såög
 
	$gëMesßge
() {

133  
su≥r
.
	`gëMesßge
();

134 
	}
}

140 
public
 
	$TokíMgrEº‹
() {

141 
	}
}

143 
public
 
	$TokíMgrEº‹
(
Såög
 
mesßge
, 
ªas⁄
) {

144 
	`su≥r
(
mesßge
);

145 
îr‹Code
 = 
ªas⁄
;

146 
	}
}

148 
public
 
	$TokíMgrEº‹
(
boﬁón
 
EOFSìn
, 
ÀxSèã
, 
îr‹Löe
, 
îr‹Cﬁumn
, 
Såög
 
îr‹A·î
, 
curCh¨
, 
ªas⁄
) {

149 
	`this
(
	`LexiˇlEº‹
(
EOFSìn
, 
ÀxSèã
, 
îr‹Löe
, 
îr‹Cﬁumn
, 
îr‹A·î
, 
curCh¨
), 
ªas⁄
);

150 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/AsyncCallback.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

25 
public
 
öãrÁ˚
 
	gAsyncCÆlback
 {

26 
öãrÁ˚
 
SètCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

27 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
);

30 
öãrÁ˚
 
D©aCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

31 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
 
d©a
[],

32 
Sèt
 
°©
);

35 
öãrÁ˚
 
ACLCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

36 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

37 
Li°
<
ACL
> 
a˛
, 
Sèt
 
°©
);

40 
öãrÁ˚
 
ChûdªnCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

41 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

42 
Li°
<
Såög
> 
chûdªn
);

45 
öãrÁ˚
 
Chûdªn2CÆlback
 
exãnds
 
	gAsyncCÆlback
 {

46 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

47 
Li°
<
Såög
> 
chûdªn
, 
Sèt
 
°©
);

50 
öãrÁ˚
 
SåögCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

51 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
);

54 
öãrÁ˚
 
VoidCÆlback
 
exãnds
 
	gAsyncCÆlback
 {

55 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxn.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

25 
imp‹t
 
	gjava
.
	gœng
.
	gThªad
.
	gUnˇughtEx˚±i⁄H™dÀr
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gC⁄√˘Ex˚±i⁄
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

30 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC›yOnWrôeAºaySë
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

38 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gLogöEx˚±i⁄
;

39 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Ex˚±i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gACLCÆlback
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªn2CÆlback
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªnCÆlback
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gW©chRegi°øti⁄
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gHo°Providî
;

58 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

59 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gAuthPackë
;

60 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Reque°
;

61 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eRe•⁄£
;

62 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gExi°sRe•⁄£
;

63 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëACLRe•⁄£
;

64 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªn2Re•⁄£
;

65 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªnRe•⁄£
;

66 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëD©aRe•⁄£
;

67 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëSASLReque°
;

68 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

69 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gReque°Hódî
;

70 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëACLRe•⁄£
;

71 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aRe•⁄£
;

72 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëW©ches
;

73 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gW©chîEvít
;

74 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

75 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

76 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

77 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

85 
public
 cœs†
	cClõ¡Cnxn
 {

86 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡Cnxn
.
˛ass
);

92 
¥iv©e
 
boﬁón
 
	mdißbÀAutoW©chRe£t
;

96 
	mdißbÀAutoW©chRe£t
 =

97 
Boﬁón
.
gëBoﬁón
("zookeeper.disableAutoWatchReset");

98 i‡(
	mLOG
.
isDebugE«bÀd
()) {

99 
	mLOG
.
debug
("zookeeper.disableAutoWatchReset is "

100 + 
dißbÀAutoW©chRe£t
);

104 ˛as†
	cAuthD©a
 {

105 
AuthD©a
(
Såög
 
scheme
, 
byã
 
d©a
[]) {

106 
	gthis
.
	gscheme
 = 
scheme
;

107 
	gthis
.
	gd©a
 = 
d©a
;

110 
Såög
 
	gscheme
;

112 
byã
 
	gd©a
[];

115 
¥iv©e
 
föÆ
 
	gC›yOnWrôeAºaySë
<
	gAuthD©a
> 
	gauthInfo
 = 
√w
 
C›yOnWrôeAºaySë
<
AuthD©a
>();

120 
¥iv©e
 
föÆ
 
	gLökedLi°
<
	gPackë
> 
	g≥ndögQueue
 = 
√w
 
LökedLi°
<
Packë
>();

125 
¥iv©e
 
föÆ
 
	gLökedLi°
<
	gPackë
> 
	goutgoögQueue
 = 
√w
 
LökedLi°
<
Packë
>();

127 
¥iv©e
 
	gc⁄√˘Timeout
;

135 
¥iv©e
 vﬁ©ûê
	g√gŸüãdSessi⁄Timeout
;

137 
¥iv©e
 
	gªadTimeout
;

139 
¥iv©e
 
föÆ
 
	g£ssi⁄Timeout
;

141 
¥iv©e
 
föÆ
 
ZooKì≥r
 
	gzooKì≥r
;

143 
¥iv©e
 
föÆ
 
Clõ¡W©chM™agî
 
	gw©chî
;

145 
¥iv©e
 
	g£ssi⁄Id
;

147 
¥iv©e
 
byã
 
	g£ssi⁄Passwd
[] = 
√w
 byte[16];

155 
¥iv©e
 
boﬁón
 
	gªadO∆y
;

157 
föÆ
 
Såög
 
	gchroŸP©h
;

159 
föÆ
 
SídThªad
 
	g£ndThªad
;

161 
föÆ
 
EvítThªad
 
	gevítThªad
;

169 
¥iv©e
 vﬁ©ûê
boﬁón
 
	g˛osög
 = 
Ál£
;

174 
¥iv©e
 
föÆ
 
Ho°Providî
 
	gho°Providî
;

189 vﬁ©ûê
boﬁón
 
	g£íRwSîvîBef‹e
 = 
Ál£
;

192 
public
 
ZooKì≥rSa¶Clõ¡
 
	gzooKì≥rSa¶Clõ¡
;

194 
public
 
	$gëSessi⁄Id
() {

195  
£ssi⁄Id
;

196 
	}
}

198 
public
 
	gbyã
[] 
	$gëSessi⁄Passwd
() {

199  
£ssi⁄Passwd
;

200 
	}
}

202 
public
 
	$gëSessi⁄Timeout
() {

203  
√gŸüãdSessi⁄Timeout
;

204 
	}
}

206 @
Ovîride


207 
public
 
Såög
 
	$toSåög
() {

208 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

210 
SockëAddªss
 
loˇl
 = 
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëLoˇlSockëAddªss
();

211 
SockëAddªss
 
ªmŸe
 = 
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëRemŸeSockëAddªss
();

212 
sb


213 .
	`≠≥nd
("£ssi⁄id:0x").≠≥nd(
L⁄g
.
	`toHexSåög
(
	`gëSessi⁄Id
()))

214 .
	`≠≥nd
("Üoˇl:").≠≥nd(
loˇl
)

215 .
	`≠≥nd
("ÑemŸe£rvî:").≠≥nd(
ªmŸe
)

216 .
	`≠≥nd
("Üa°Zxid:").≠≥nd(
œ°Zxid
)

217 .
	`≠≥nd
(" xid:").≠≥nd(
xid
)

218 .
	`≠≥nd
(" sít:").≠≥nd(
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëSítCou¡
())

219 .
	`≠≥nd
("Ñecv:").≠≥nd(
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëRecvCou¡
())

220 .
	`≠≥nd
(" queuedpkts:").≠≥nd(
outgoögQueue
.
	`size
())

221 .
	`≠≥nd
("Öídögª•:").≠≥nd(
≥ndögQueue
.
	`size
())

222 .
	`≠≥nd
(" queuedevíts:").≠≥nd(
evítThªad
.
waôögEvíts
.
	`size
());

224  
sb
.
	`toSåög
();

225 
	}
}

230 ˛as†
	cPackë
 {

231 
Reque°Hódî
 
	gªque°Hódî
;

233 
RïlyHódî
 
	gª∂yHódî
;

235 
Rec‹d
 
	gªque°
;

237 
Rec‹d
 
	gª•⁄£
;

239 
ByãBuf„r
 
	gbb
;

242 
Såög
 
	g˛õ¡P©h
;

244 
Såög
 
	g£rvîP©h
;

246 
boﬁón
 
	gföished
;

248 
AsyncCÆlback
 
	gcb
;

250 
Obje˘
 
	g˘x
;

252 
W©chRegi°øti⁄
 
	gw©chRegi°øti⁄
;

254 
public
 
boﬁón
 
	gªadO∆y
;

257 
Packë
(
Reque°Hódî
 
ªque°Hódî
, 
RïlyHódî
 
ª∂yHódî
,

258 
Rec‹d
 
ªque°
, Rec‹d 
ª•⁄£
,

259 
W©chRegi°øti⁄
 
w©chRegi°øti⁄
) {

260 
this
(
ªque°Hódî
, 
ª∂yHódî
, 
ªque°
, 
ª•⁄£
,

261 
w©chRegi°øti⁄
, 
Ál£
);

264 
Packë
(
Reque°Hódî
 
ªque°Hódî
, 
RïlyHódî
 
ª∂yHódî
,

265 
Rec‹d
 
ªque°
, Rec‹d 
ª•⁄£
,

266 
W©chRegi°øti⁄
 
w©chRegi°øti⁄
, 
boﬁón
 
ªadO∆y
) {

268 
	gthis
.
	gªque°Hódî
 = 
ªque°Hódî
;

269 
	gthis
.
	gª∂yHódî
 = 
ª∂yHódî
;

270 
	gthis
.
	gªque°
 = 
ªque°
;

271 
	gthis
.
	gª•⁄£
 = 
ª•⁄£
;

272 
	gthis
.
	gªadO∆y
 = 
ªadO∆y
;

273 
	gthis
.
	gw©chRegi°øti⁄
 = 
w©chRegi°øti⁄
;

276 
public
 
¸óãBB
() {

277 
	gåy
 {

278 
ByãAºayOuçutSåóm
 
	gbaos
 = 
√w
 ByteArrayOutputStream();

279 
Bö¨yOuçutArchive
 
	gbﬂ
 = Bö¨yOuçutArchive.
gëArchive
(
baos
);

280 
	gbﬂ
.
wrôeI¡
(-1, "len");

281 i‡(
	gªque°Hódî
 !
nuŒ
) {

282 
ªque°Hódî
.
£rülize
(
bﬂ
, "header");

284 i‡(
ªque°
 
ö°™˚of
 
	gC⁄√˘Reque°
) {

285 
	gªque°
.
£rülize
(
bﬂ
, "connect");

287 
	gbﬂ
.
wrôeBoﬁ
(
ªadO∆y
, "readOnly");

288 } i‡(
	gªque°
 !
nuŒ
) {

289 
ªque°
.
£rülize
(
bﬂ
, "request");

291 
	gbaos
.
˛o£
();

292 
	gthis
.
	gbb
 = 
ByãBuf„r
.
wøp
(
baos
.
toByãAºay
());

293 
	gthis
.
	gbb
.
putI¡
(
this
.
bb
.
ˇ∑côy
() - 4);

294 
	gthis
.
	gbb
.
ªwöd
();

295 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

296 
	gLOG
.
w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄", 
e
);

300 @
Ovîride


301 
public
 
Såög
 
toSåög
() {

302 
SåögBuûdî
 
	gsb
 = 
√w
 StringBuilder();

304 
	gsb
.
≠≥nd
("˛õ¡P©h:" + 
˛õ¡P©h
);

305 
	gsb
.
≠≥nd
(" sîvîP©h:" + 
£rvîP©h
);

306 
	gsb
.
≠≥nd
(" föished:" + 
föished
);

308 
	gsb
.
≠≥nd
(" hódî:: " + 
ªque°Hódî
);

309 
	gsb
.
≠≥nd
("ÑïlyHódî:: " + 
ª∂yHódî
);

310 
	gsb
.
≠≥nd
("Ñeque°:: " + 
ªque°
);

311 
	gsb
.
≠≥nd
("Ñe•⁄£:: " + 
ª•⁄£
);

314  
	gsb
.
toSåög
().
ª∂a˚AŒ
("\r*\n+", " ");

338 
public
 
	$Clõ¡Cnxn
(
Såög
 
chroŸP©h
, 
Ho°Providî
 
ho°Providî
, 
£ssi⁄Timeout
, 
ZooKì≥r
 
zooKì≥r
,

339 
Clõ¡W©chM™agî
 
w©chî
, 
Clõ¡CnxnSockë
 
˛õ¡CnxnSockë
, 
boﬁón
 
ˇnBeRódO∆y
)

340 
throws
 
IOEx˚±i⁄
 {

341 
	`this
(
chroŸP©h
, 
ho°Providî
, 
£ssi⁄Timeout
, 
zooKì≥r
, 
w©chî
,

342 
˛õ¡CnxnSockë
, 0, 
√w
 
byã
[16], 
ˇnBeRódO∆y
);

343 
	}
}

367 
public
 
	$Clõ¡Cnxn
(
Såög
 
chroŸP©h
, 
Ho°Providî
 
ho°Providî
, 
£ssi⁄Timeout
, 
ZooKì≥r
 
zooKì≥r
,

368 
Clõ¡W©chM™agî
 
w©chî
, 
Clõ¡CnxnSockë
 
˛õ¡CnxnSockë
,

369 
£ssi⁄Id
, 
byã
[] 
£ssi⁄Passwd
, 
boﬁón
 
ˇnBeRódO∆y
) {

370 
this
.
zooKì≥r
 = zooKeeper;

371 
this
.
w©chî
 = watcher;

372 
this
.
£ssi⁄Id
 = sessionId;

373 
this
.
£ssi⁄Passwd
 = sessionPasswd;

374 
this
.
£ssi⁄Timeout
 = sessionTimeout;

375 
this
.
ho°Providî
 = hostProvider;

376 
this
.
chroŸP©h
 = chrootPath;

378 
c⁄√˘Timeout
 = 
£ssi⁄Timeout
 / 
ho°Providî
.
	`size
();

379 
ªadTimeout
 = 
£ssi⁄Timeout
 * 2 / 3;

380 
ªadO∆y
 = 
ˇnBeRódO∆y
;

382 
£ndThªad
 = 
√w
 
	`SídThªad
(
˛õ¡CnxnSockë
);

383 
evítThªad
 = 
√w
 
	`EvítThªad
();

385 
	}
}

391 
public
 
boﬁón
 
	$gëDißbÀAutoRe£tW©ch
() {

392  
dißbÀAutoW©chRe£t
;

393 
	}
}

398 
public
 
	$£tDißbÀAutoRe£tW©ch
(
boﬁón
 
b
) {

399 
dißbÀAutoW©chRe£t
 = 
b
;

400 
	}
}

401 
public
 
	$°¨t
() {

402 
£ndThªad
.
	`°¨t
();

403 
evítThªad
.
	`°¨t
();

404 
	}
}

406 
¥iv©e
 
Obje˘
 
	gevítOfDóth
 = 
√w
 Object();

408 
¥iv©e
 
föÆ
 
UnˇughtEx˚±i⁄H™dÀr
 
	gunˇughtEx˚±i⁄H™dÀr
 = 
√w
 
	$UnˇughtEx˚±i⁄H™dÀr
() {

409 @
Ovîride


410 
public
 
	`unˇughtEx˚±i⁄
(
Thªad
 
t
, 
ThrowabÀ
 
e
) {

411 
LOG
.
	`îr‹
("‰om " + 
t
.
	`gëName
(), 
e
);

413 
	}
};

415 
¥iv©e
 ˛as†
	cW©chîSëEvítPaú
 {

416 
¥iv©e
 
föÆ
 
	gSë
<
	gW©chî
> 
	gw©chîs
;

417 
¥iv©e
 
föÆ
 
W©chedEvít
 
	gevít
;

419 
public
 
W©chîSëEvítPaú
(
Së
<
W©chî
> 
w©chîs
, 
W©chedEvít
 
evít
) {

420 
	gthis
.
	gw©chîs
 = 
w©chîs
;

421 
	gthis
.
	gevít
 = 
evít
;

430 
¥iv©e
 
Såög
 
	$makeThªadName
(
Såög
 
suffix
) {

431 
Såög
 
«me
 = 
Thªad
.
	`cuºítThªad
().
	`gëName
().

432 
	`ª∂a˚AŒ
("-EventThread", "");

433  
«me
 + 
suffix
;

434 
	}
}

436 ˛as†
	cEvítThªad
 
exãnds
 
	gThªad
 {

437 
¥iv©e
 
föÆ
 
	gLökedBlockögQueue
<
	gObje˘
> 
	gwaôögEvíts
 =

438 
√w
 
LökedBlockögQueue
<
Obje˘
>();

444 
¥iv©e
 vﬁ©ûê
Kì≥rSèã
 
	g£ssi⁄Sèã
 = Kì≥rSèã.
Disc⁄√˘ed
;

446 
¥iv©e
 vﬁ©ûê
boﬁón
 
	gwasKûÀd
 = 
Ál£
;

447 
¥iv©e
 vﬁ©ûê
boﬁón
 
	gisRu¬ög
 = 
Ál£
;

449 
EvítThªad
() {

450 
su≥r
(
makeThªadName
("-EventThread"));

451 
£tUnˇughtEx˚±i⁄H™dÀr
(
unˇughtEx˚±i⁄H™dÀr
);

452 
£tD´m⁄
(
åue
);

455 
public
 
queueEvít
(
W©chedEvít
 
evít
) {

456 i‡(
	gevít
.
gëTy≥
(Ë=
EvítTy≥
.
N⁄e


457 && 
£ssi⁄Sèã
 =
evít
.
gëSèã
()) {

460 
	g£ssi⁄Sèã
 = 
evít
.
gëSèã
();

463 
W©chîSëEvítPaú
 
	g∑ú
 = 
√w
 WatcherSetEventPair(

464 
w©chî
.
m©îülize
(
evít
.
gëSèã
(),Évít.
gëTy≥
(),

465 
evít
.
gëP©h
()),

466 
evít
);

468 
	gwaôögEvíts
.
add
(
∑ú
);

471 
public
 
queuePackë
(
Packë
 
∑ckë
) {

472 i‡(
	gwasKûÀd
) {

473 
synchr⁄ized
 (
waôögEvíts
) {

474 i‡(
	gisRu¬ög
Ë
	gwaôögEvíts
.
add
(
∑ckë
);

475 
¥o˚ssEvít
(
∑ckë
);

478 
	gwaôögEvíts
.
add
(
∑ckë
);

482 
public
 
queueEvítOfDóth
() {

483 
	gwaôögEvíts
.
add
(
evítOfDóth
);

486 @
Ovîride


487 
public
 
run
() {

488 
	gåy
 {

489 
	gisRu¬ög
 = 
åue
;

490 
	gåue
) {

491 
Obje˘
 
	gevít
 = 
waôögEvíts
.
èke
();

492 i‡(
	gevít
 =
evítOfDóth
) {

493 
wasKûÀd
 = 
åue
;

495 
¥o˚ssEvít
(
evít
);

497 i‡(
	gwasKûÀd
)

498 
synchr⁄ized
 (
waôögEvíts
) {

499 i‡(
	gwaôögEvíts
.
isEm±y
()) {

500 
	gisRu¬ög
 = 
Ál£
;

505 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

506 
	gLOG
.
îr‹
("EvíàthªadÉxôög duêtÿöãºu±i⁄", 
e
);

509 
	gLOG
.
öfo
("EventThread shut down");

512 
¥iv©e
 
¥o˚ssEvít
(
Obje˘
 
evít
) {

513 
	gåy
 {

514 i‡(
evít
 
ö°™˚of
 
	gW©chîSëEvítPaú
) {

516 
W©chîSëEvítPaú
 
	g∑ú
 = (W©chîSëEvítPaúË
evít
;

517 
W©chî
 
	gw©chî
 : 
∑ú
.
w©chîs
) {

518 
åy
 {

519 
w©chî
.
¥o˚ss
(
∑ú
.
evít
);

520 } 
ˇtch
 (
ThrowabÀ
 
t
) {

521 
	gLOG
.
îr‹
("Eº‹ whûêˇŒög w©chî ", 
t
);

525 
Packë
 
	gp
 = (PackëË
evít
;

526 
	grc
 = 0;

527 
Såög
 
	g˛õ¡P©h
 = 
p
.
˛õ¡P©h
;

528 i‡(
	gp
.
	gª∂yHódî
.
gëEº
() != 0) {

529 
rc
 = 
p
.
ª∂yHódî
.
gëEº
();

531 i‡(
	gp
.
	gcb
 =
nuŒ
) {

532 
LOG
.
w¨n
("SomehowáÇull cb gotÅo EventThread!");

533 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gExi°sRe•⁄£


534 || 
	gp
.
ª•⁄£
 
ö°™˚of
 
	gSëD©aRe•⁄£


535 || 
	gp
.
ª•⁄£
 
ö°™˚of
 
	gSëACLRe•⁄£
) {

536 
SètCÆlback
 
	gcb
 = (SètCÆlbackË
p
.
cb
;

537 i‡(
	grc
 == 0) {

538 i‡(
p
.
ª•⁄£
 
ö°™˚of
 
Exi°sRe•⁄£
) {

539 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
,

540 ((
Exi°sRe•⁄£
Ë
p
.
ª•⁄£
)

541 .
gëSèt
());

542 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gSëD©aRe•⁄£
) {

543 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
,

544 ((
SëD©aRe•⁄£
Ë
p
.
ª•⁄£
)

545 .
gëSèt
());

546 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gSëACLRe•⁄£
) {

547 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
,

548 ((
SëACLRe•⁄£
Ë
p
.
ª•⁄£
)

549 .
gëSèt
());

552 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
);

554 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gGëD©aRe•⁄£
) {

555 
D©aCÆlback
 
	gcb
 = (D©aCÆlbackË
p
.
cb
;

556 
GëD©aRe•⁄£
 
	gr•
 = (GëD©aRe•⁄£Ë
p
.
ª•⁄£
;

557 i‡(
	grc
 == 0) {

558 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
r•


559 .
gëD©a
(), 
r•
.
gëSèt
());

561 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
,

562 
nuŒ
);

564 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gGëACLRe•⁄£
) {

565 
ACLCÆlback
 
	gcb
 = (ACLCÆlbackË
p
.
cb
;

566 
GëACLRe•⁄£
 
	gr•
 = (GëACLRe•⁄£Ë
p
.
ª•⁄£
;

567 i‡(
	grc
 == 0) {

568 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
r•


569 .
gëA˛
(), 
r•
.
gëSèt
());

571 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
,

572 
nuŒ
);

574 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gGëChûdªnRe•⁄£
) {

575 
ChûdªnCÆlback
 
	gcb
 = (ChûdªnCÆlbackË
p
.
cb
;

576 
GëChûdªnRe•⁄£
 
	gr•
 = (GëChûdªnRe•⁄£Ë
p
.
ª•⁄£
;

577 i‡(
	grc
 == 0) {

578 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
r•


579 .
gëChûdªn
());

581 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
);

583 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gGëChûdªn2Re•⁄£
) {

584 
Chûdªn2CÆlback
 
	gcb
 = (Chûdªn2CÆlbackË
p
.
cb
;

585 
GëChûdªn2Re•⁄£
 
	gr•
 = (GëChûdªn2Re•⁄£Ë
p
.
ª•⁄£
;

586 i‡(
	grc
 == 0) {

587 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
r•


588 .
gëChûdªn
(), 
r•
.
gëSèt
());

590 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
,Çull);

592 } i‡(
	gp
.
ª•⁄£
 
ö°™˚of
 
	gCª©eRe•⁄£
) {

593 
SåögCÆlback
 
	gcb
 = (SåögCÆlbackË
p
.
cb
;

594 
Cª©eRe•⁄£
 
	gr•
 = (Cª©eRe•⁄£Ë
p
.
ª•⁄£
;

595 i‡(
	grc
 == 0) {

596 
cb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
,

597 (
chroŸP©h
 =
nuŒ


598 ? 
r•
.
gëP©h
()

599 : 
r•
.
gëP©h
()

600 .
sub°rög
(
chroŸP©h
.
Àngth
())));

602 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
, 
nuŒ
);

604 } i‡(
	gp
.
cb
 
ö°™˚of
 
	gVoidCÆlback
) {

605 
VoidCÆlback
 
	gcb
 = (VoidCÆlbackË
p
.
cb
;

606 
	gcb
.
¥o˚ssResu…
(
rc
, 
˛õ¡P©h
, 
p
.
˘x
);

609 } 
ˇtch
 (
ThrowabÀ
 
t
) {

610 
	gLOG
.
îr‹
("Caughàu√x≥˘edÅhrowabÀ", 
t
);

615 
¥iv©e
 
	$föishPackë
(
Packë
 
p
) {

616 i‡(
p
.
w©chRegi°øti⁄
 !
nuŒ
) {

617 
p
.
w©chRegi°øti⁄
.’.
ª∂yHódî
.
	`gëEº
());

620 i‡(
p
.
cb
 =
nuŒ
) {

621 
	`synchr⁄ized
 (
p
) {

622 
p
.
föished
 = 
åue
;

623 
p
.
	`nŸifyAŒ
();

626 
p
.
föished
 = 
åue
;

627 
evítThªad
.
	`queuePackë
(
p
);

629 
	}
}

631 
¥iv©e
 
	$c⁄LossPackë
(
Packë
 
p
) {

632 i‡(
p
.
ª∂yHódî
 =
nuŒ
) {

635 
°©e
) {

636 
AUTH_FAILED
:

637 
p
.
ª∂yHódî
.
	`£tEº
(
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
.
	`ötVÆue
());

639 
CLOSED
:

640 
p
.
ª∂yHódî
.
	`£tEº
(
Kì≥rEx˚±i⁄
.
Code
.
SESSIONEXPIRED
.
	`ötVÆue
());

643 
p
.
ª∂yHódî
.
	`£tEº
(
Kì≥rEx˚±i⁄
.
Code
.
CONNECTIONLOSS
.
	`ötVÆue
());

645 
	`föishPackë
(
p
);

646 
	}
}

648 
¥iv©e
 vﬁ©ûê
	gœ°Zxid
;

650 
public
 
	$gëLa°Zxid
() {

651  
œ°Zxid
;

652 
	}
}

654 ˛as†
	cEndOfSåómEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

655 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = -5438877188796231422L;

657 
public
 
EndOfSåómEx˚±i⁄
(
Såög
 
msg
) {

658 
su≥r
(
msg
);

661 @
Ovîride


662 
public
 
Såög
 
toSåög
() {

663  "EndOfSåómEx˚±i⁄: " + 
gëMesßge
();

667 
¥iv©e
 ˛as†
	cSessi⁄TimeoutEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

668 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = 824482094072071178L;

670 
public
 
Sessi⁄TimeoutEx˚±i⁄
(
Såög
 
msg
) {

671 
su≥r
(
msg
);

675 
¥iv©e
 ˛as†
	cSessi⁄ExpúedEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

676 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = -1388816932076193249L;

678 
public
 
Sessi⁄ExpúedEx˚±i⁄
(
Såög
 
msg
) {

679 
su≥r
(
msg
);

683 
¥iv©e
 ˛as†
	cRWSîvîFoundEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

684 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = 90431199887158758L;

686 
public
 
RWSîvîFoundEx˚±i⁄
(
Såög
 
msg
) {

687 
su≥r
(
msg
);

691 
public
 
föÆ
 
	g∑ckëLí
 = 
I¡egî
.
gëI¡egî
("jute.maxbuffer",

698 ˛as†
	cSídThªad
 
exãnds
 
	gThªad
 {

699 
¥iv©e
 
	gœ°PögSítNs
;

700 
¥iv©e
 
föÆ
 
Clõ¡CnxnSockë
 
	g˛õ¡CnxnSockë
;

701 
¥iv©e
 
R™dom
 
	gr
 = 
√w
 R™dom(
Sy°em
.
«noTime
());

702 
¥iv©e
 
boﬁón
 
	gisFú°C⁄√˘
 = 
åue
;

704 
ªadRe•⁄£
(
ByãBuf„r
 
öcomögBuf„r
Ë
throws
 
	gIOEx˚±i⁄
 {

705 
ByãBuf„rI≈utSåóm
 
	gbbis
 = 
√w
 ByteBufferInputStream(

706 
öcomögBuf„r
);

707 
Bö¨yI≈utArchive
 
	gbbü
 = Bö¨yI≈utArchive.
gëArchive
(
bbis
);

708 
RïlyHódî
 
	gª∂yHdr
 = 
√w
 ReplyHeader();

710 
	gª∂yHdr
.
de£rülize
(
bbü
, "header");

711 i‡(
	gª∂yHdr
.
gëXid
() == -2) {

713 i‡(
LOG
.
isDebugE«bÀd
()) {

714 
LOG
.
debug
("GotÖingÑesponse for sessionid: 0x"

715 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
)

717 + ((
Sy°em
.
«noTime
(Ë- 
œ°PögSítNs
) / 1000000)

722 i‡(
	gª∂yHdr
.
gëXid
() == -4) {

724 if(
ª∂yHdr
.
gëEº
(Ë=
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
.
ötVÆue
()) {

725 
°©e
 = 
Sèãs
.
AUTH_FAILED
;

726 
	gevítThªad
.
queueEvít
–
√w
 
W©chedEvít
(
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
,

727 
W©chî
.
Evít
.
Kì≥rSèã
.
AuthFaûed
, 
nuŒ
) );

729 i‡(
	gLOG
.
isDebugE«bÀd
()) {

730 
	gLOG
.
debug
("Gotáuth sessionid:0x"

731 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
));

735 i‡(
	gª∂yHdr
.
gëXid
() == -1) {

737 i‡(
LOG
.
isDebugE«bÀd
()) {

738 
LOG
.
debug
("GotÇotification sessionid:0x"

739 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
));

741 
W©chîEvít
 
	gevít
 = 
√w
 WatcherEvent();

742 
	gevít
.
de£rülize
(
bbü
, "response");

745 i‡(
	gchroŸP©h
 !
nuŒ
) {

746 
Såög
 
£rvîP©h
 = 
evít
.
gëP©h
();

747 if(
	g£rvîP©h
.
com∑ªTo
(
chroŸP©h
)==0)

748 
evít
.
£tP©h
("/");

749 i‡(
	g£rvîP©h
.
Àngth
(Ë> 
	gchroŸP©h
.length())

750 
	gevít
.
£tP©h
(
£rvîP©h
.
sub°rög
(
chroŸP©h
.
Àngth
()));

752 
	gLOG
.
w¨n
("GŸ sîvîÖ©h " + 
evít
.
gëP©h
()

754 + 
chroŸP©h
);

758 
W©chedEvít
 
	gwe
 = 
√w
 W©chedEvít(
evít
);

759 i‡(
	gLOG
.
isDebugE«bÀd
()) {

760 
	gLOG
.
debug
("GŸ " + 
we
 + " for sessionid 0x"

761 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
));

764 
	gevítThªad
.
queueEvít
–
we
 );

771 i‡(
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
()) {

772 
GëSASLReque°
 
	gªque°
 = 
√w
 GetSASLRequest();

773 
	gªque°
.
de£rülize
(
bbü
,"token");

774 
	gzooKì≥rSa¶Clõ¡
.
ª•⁄dToSîvî
(
ªque°
.
gëTokí
(),

775 
Clõ¡Cnxn
.
this
);

779 
Packë
 
	g∑ckë
;

780 
synchr⁄ized
 (
≥ndögQueue
) {

781 i‡(
	g≥ndögQueue
.
size
() == 0) {

782 
throw
 
√w
 
IOEx˚±i⁄
("Nothing inÅhe queue, but got "

783 + 
ª∂yHdr
.
gëXid
());

785 
	g∑ckë
 = 
≥ndögQueue
.
ªmove
();

791 
	gåy
 {

792 i‡(
	g∑ckë
.
	gªque°Hódî
.
gëXid
(Ë!
ª∂yHdr
.getXid()) {

793 
∑ckë
.
ª∂yHódî
.
£tEº
(

794 
Kì≥rEx˚±i⁄
.
Code
.
CONNECTIONLOSS
.
ötVÆue
());

795 
throw
 
√w
 
IOEx˚±i⁄
("Xid out of order. Got Xid "

796 + 
ª∂yHdr
.
gëXid
() + " withÉrr " +

797 + 
ª∂yHdr
.
gëEº
() +

799 + 
∑ckë
.
ªque°Hódî
.
gëXid
()

801 + 
∑ckë
 );

804 
	g∑ckë
.
	gª∂yHódî
.
£tXid
(
ª∂yHdr
.
gëXid
());

805 
	g∑ckë
.
	gª∂yHódî
.
£tEº
(
ª∂yHdr
.
gëEº
());

806 
	g∑ckë
.
	gª∂yHódî
.
£tZxid
(
ª∂yHdr
.
gëZxid
());

807 i‡(
	gª∂yHdr
.
gëZxid
() > 0) {

808 
	gœ°Zxid
 = 
ª∂yHdr
.
gëZxid
();

810 i‡(
	g∑ckë
.
	gª•⁄£
 !
nuŒ
 && 
ª∂yHdr
.
gëEº
() == 0) {

811 
∑ckë
.
ª•⁄£
.
de£rülize
(
bbü
, "response");

814 i‡(
	gLOG
.
isDebugE«bÀd
()) {

815 
	gLOG
.
debug
("ReadingÑeply sessionid:0x"

816 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
Ë+ ",Öackë:: " + 
∑ckë
);

818 } 
	gföÆly
 {

819 
föishPackë
(
∑ckë
);

823 
SídThªad
(
Clõ¡CnxnSockë
 
˛õ¡CnxnSockë
) {

824 
su≥r
(
makeThªadName
("-SendThread()"));

825 
	g°©e
 = 
Sèãs
.
CONNECTING
;

826 
	gthis
.
	g˛õ¡CnxnSockë
 = 
˛õ¡CnxnSockë
;

827 
£tUnˇughtEx˚±i⁄H™dÀr
(
unˇughtEx˚±i⁄H™dÀr
);

828 
£tD´m⁄
(
åue
);

840 
	gZooKì≥r
.
Sèãs
 
gëZkSèã
() {

841  
	g°©e
;

844 
Clõ¡CnxnSockë
 
gëClõ¡CnxnSockë
() {

845  
	g˛õ¡CnxnSockë
;

848 
¥imeC⁄√˘i⁄
(Ë
throws
 
	gIOEx˚±i⁄
 {

849 
	gLOG
.
öfo
("Socket connectionÉstablishedÅo "

850 + 
˛õ¡CnxnSockë
.
gëRemŸeSockëAddªss
()

852 
	gisFú°C⁄√˘
 = 
Ál£
;

853 
	g£ssId
 = (
£íRwSîvîBef‹e
Ë? 
£ssi⁄Id
 : 0;

854 
C⁄√˘Reque°
 
	gc⁄Req
 = 
√w
 C⁄√˘Reque°(0, 
œ°Zxid
,

855 
£ssi⁄Timeout
, 
£ssId
, 
£ssi⁄Passwd
);

856 
synchr⁄ized
 (
outgoögQueue
) {

861 i‡(!
	gdißbÀAutoW©chRe£t
) {

862 
	gLi°
<
	gSåög
> 
	gd©aW©ches
 = 
zooKì≥r
.
gëD©aW©ches
();

863 
	gLi°
<
	gSåög
> 
	gexi°W©ches
 = 
zooKì≥r
.
gëExi°W©ches
();

864 
	gLi°
<
	gSåög
> 
	gchûdW©ches
 = 
zooKì≥r
.
gëChûdW©ches
();

865 i‡(!
	gd©aW©ches
.
isEm±y
()

866 || !
	gexi°W©ches
.
isEm±y
(Ë|| !
	gchûdW©ches
.isEmpty()) {

867 
SëW©ches
 
	gsw
 = 
√w
 SëW©ches(
œ°Zxid
,

868 
¥ïídChroŸ
(
d©aW©ches
),

869 
¥ïídChroŸ
(
exi°W©ches
),

870 
¥ïídChroŸ
(
chûdW©ches
));

871 
Reque°Hódî
 
	gh
 = 
√w
 RequestHeader();

872 
	gh
.
£tTy≥
(
ZooDefs
.
OpCode
.
£tW©ches
);

873 
	gh
.
£tXid
(-8);

874 
Packë
 
	g∑ckë
 = 
√w
 Packë(
h
,Çew 
RïlyHódî
(), 
sw
, 
nuŒ
,Çull);

875 
	goutgoögQueue
.
addFú°
(
∑ckë
);

879 
AuthD©a
 
	gid
 : 
authInfo
) {

880 
outgoögQueue
.
addFú°
(
√w
 
Packë
“ew 
Reque°Hódî
(-4,

881 
OpCode
.
auth
), 
nuŒ
, 
√w
 
AuthPackë
(0, 
id
.
scheme
,

882 
id
.
d©a
), 
nuŒ
,Çull));

884 
	goutgoögQueue
.
addFú°
(
√w
 
Packë
(
nuŒ
,ÇuŒ, 
c⁄Req
,

885 
nuŒ
,ÇuŒ, 
ªadO∆y
));

887 
	g˛õ¡CnxnSockë
.
íabÀRódWrôeO∆y
();

888 i‡(
	gLOG
.
isDebugE«bÀd
()) {

889 
	gLOG
.
debug
("SessionÉstablishmentÑequest sent on "

890 + 
˛õ¡CnxnSockë
.
gëRemŸeSockëAddªss
());

894 
¥iv©e
 
	gLi°
<
	gSåög
> 
¥ïídChroŸ
(
Li°
<
Såög
> 
∑ths
) {

895 i‡(
	gchroŸP©h
 !
nuŒ
 && !
∑ths
.
isEm±y
()) {

896 
i
 = 0; 
	gi
 < 
	g∑ths
.
size
(); ++i) {

897 
Såög
 
	g˛õ¡P©h
 = 
∑ths
.
gë
(
i
);

898 
Såög
 
	g£rvîP©h
;

900 i‡(
	g˛õ¡P©h
.
Àngth
() == 1) {

901 
£rvîP©h
 = 
chroŸP©h
;

903 
	g£rvîP©h
 = 
chroŸP©h
 + 
˛õ¡P©h
;

905 
	g∑ths
.
£t
(
i
, 
£rvîP©h
);

908  
	g∑ths
;

911 
¥iv©e
 
£ndPög
() {

912 
	gœ°PögSítNs
 = 
Sy°em
.
«noTime
();

913 
Reque°Hódî
 
	gh
 = 
√w
 Reque°Hódî(-2, 
OpCode
.
pög
);

914 
queuePackë
(
h
, 
nuŒ
,Çull,Çull,Çull,Çull,Çull,Çull,Çull);

917 
¥iv©e
 
I√tSockëAddªss
 
	grwSîvîAddªss
 = 
nuŒ
;

919 
¥iv©e
 
föÆ
 
	gmöPögRwTimeout
 = 100;

921 
¥iv©e
 
föÆ
 
	gmaxPögRwTimeout
 = 60000;

923 
¥iv©e
 
	gpögRwTimeout
 = 
möPögRwTimeout
;

927 
¥iv©e
 
boﬁón
 
	gß¶LogöFaûed
 = 
Ál£
;

929 
¥iv©e
 
°¨tC⁄√˘
(Ë
throws
 
	gIOEx˚±i⁄
 {

930 
	g°©e
 = 
Sèãs
.
CONNECTING
;

932 
I√tSockëAddªss
 
	gaddr
;

933 i‡(
	grwSîvîAddªss
 !
nuŒ
) {

934 
addr
 = 
rwSîvîAddªss
;

935 
	grwSîvîAddªss
 = 
nuŒ
;

937 
	gaddr
 = 
ho°Providî
.
√xt
(1000);

940 
£tName
(
gëName
().
ª∂a˚AŒ
("\\(.*\\)",

941 "(" + 
addr
.
gëHo°Name
(Ë+ ":" +áddr.
gëP‹t
() + ")"));

942 
	gåy
 {

943 
	gzooKì≥rSa¶Clõ¡
 = 
√w
 
ZooKì≥rSa¶Clõ¡
("zookì≥r/"+
addr
.
gëHo°Name
());

944 } 
ˇtch
 (
LogöEx˚±i⁄
 
e
) {

949 
	gLOG
.
w¨n
("SASL c⁄figuøti⁄ faûed: " + 
e
 + " Will continue connectionÅo Zookeeper server without "

951 
	gevítThªad
.
queueEvít
(
√w
 
W©chedEvít
(

952 
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
,

953 
W©chî
.
Evít
.
Kì≥rSèã
.
AuthFaûed
, 
nuŒ
));

954 
	gß¶LogöFaûed
 = 
åue
;

956 
logSèπC⁄√˘
(
addr
);

958 
	g˛õ¡CnxnSockë
.
c⁄√˘
(
addr
);

961 
¥iv©e
 
logSèπC⁄√˘
(
I√tSockëAddªss
 
addr
) {

962 
Såög
 
	gmsg
 = "O≥nög sockë c⁄√˘i⁄Åÿ£rvî " + 
addr
;

963 i‡(
	gzooKì≥rSa¶Clõ¡
 !
nuŒ
) {

964 
msg
 +". " + 
zooKì≥rSa¶Clõ¡
.
gëC⁄figSètus
();

966 
	gLOG
.
öfo
(
msg
);

969 
¥iv©e
 
föÆ
 
Såög
 
	gRETRY_CONN_MSG
 =

972 @
Ovîride


973 
public
 
run
() {

974 
	g˛õ¡CnxnSockë
.
öåodu˚
(
this
,
£ssi⁄Id
);

975 
	g˛õ¡CnxnSockë
.
upd©eNow
();

976 
	g˛õ¡CnxnSockë
.
upd©eLa°SídAndHórd
();

977 
	gto
;

978 
	gœ°PögRwSîvî
 = 
Sy°em
.
cuºítTimeMûlis
();

979 
	g°©e
.
isAlive
()) {

980 
	gåy
 {

981 i‡(!
	g˛õ¡CnxnSockë
.
isC⁄√˘ed
()) {

982 if(!
	gisFú°C⁄√˘
){

983 
	gåy
 {

984 
	gThªad
.
¶ìp
(
r
.
√xtI¡
(1000));

985 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

986 
	gLOG
.
w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

990 i‡(
	g˛osög
 || !
	g°©e
.
isAlive
()) {

993 
°¨tC⁄√˘
();

994 
	g˛õ¡CnxnSockë
.
upd©eLa°SídAndHórd
();

997 i‡(
	g°©e
.
isC⁄√˘ed
()) {

999 i‡(
	gzooKì≥rSa¶Clõ¡
 !
nuŒ
) {

1000 
boﬁón
 
£ndAuthEvít
 = 
Ál£
;

1001 i‡(
	gzooKì≥rSa¶Clõ¡
.
gëSa¶Sèã
(Ë=
ZooKì≥rSa¶Clõ¡
.
Sa¶Sèã
.
INITIAL
) {

1002 
åy
 {

1003 
zooKì≥rSa¶Clõ¡
.
öôülize
(
Clõ¡Cnxn
.
this
);

1004 } 
ˇtch
 (
Sa¶Ex˚±i⁄
 
e
) {

1005 
	gLOG
.
îr‹
("SASLáuthítiˇti⁄ wôh Zookì≥∏Qu‹um membî faûed: " + 
e
);

1006 
	g°©e
 = 
Sèãs
.
AUTH_FAILED
;

1007 
	g£ndAuthEvít
 = 
åue
;

1010 
Kì≥rSèã
 
	gauthSèã
 = 
zooKì≥rSa¶Clõ¡
.
gëKì≥rSèã
();

1011 i‡(
	gauthSèã
 !
nuŒ
) {

1012 i‡(
authSèã
 =
Kì≥rSèã
.
AuthFaûed
) {

1014 
°©e
 = 
Sèãs
.
AUTH_FAILED
;

1015 
	g£ndAuthEvít
 = 
åue
;

1017 i‡(
	gauthSèã
 =
Kì≥rSèã
.
Sa¶Authítiˇãd
) {

1018 
£ndAuthEvít
 = 
åue
;

1023 i‡(
	g£ndAuthEvít
 =
åue
) {

1024 
evítThªad
.
queueEvít
(
√w
 
W©chedEvít
(

1025 
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
,

1026 
authSèã
,
nuŒ
));

1029 
	gto
 = 
ªadTimeout
 - 
˛õ¡CnxnSockë
.
gëIdÀRecv
();

1031 
	gto
 = 
c⁄√˘Timeout
 - 
˛õ¡CnxnSockë
.
gëIdÀRecv
();

1034 i‡(
	gto
 <= 0) {

1035 
throw
 
√w
 
Sessi⁄TimeoutEx˚±i⁄
(

1037 + 
˛õ¡CnxnSockë
.
gëIdÀRecv
() + "ms"

1039 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
));

1041 i‡(
	g°©e
.
isC⁄√˘ed
()) {

1042 
	gtimeToNextPög
 = 
ªadTimeout
 / 2

1043 - 
˛õ¡CnxnSockë
.
gëIdÀSíd
();

1044 i‡(
	gtimeToNextPög
 <= 0) {

1045 
£ndPög
();

1046 
	g˛õ¡CnxnSockë
.
upd©eLa°Síd
();

1048 i‡(
	gtimeToNextPög
 < 
	gto
) {

1049 
	gto
 = 
timeToNextPög
;

1055 i‡(
	g°©e
 =
Sèãs
.
CONNECTEDREADONLY
) {

1056 
now
 = 
Sy°em
.
cuºítTimeMûlis
();

1057 
	gidÀPögRwSîvî
 = (Ë(
now
 - 
œ°PögRwSîvî
);

1058 i‡(
	gidÀPögRwSîvî
 >
pögRwTimeout
) {

1059 
œ°PögRwSîvî
 = 
now
;

1060 
	gidÀPögRwSîvî
 = 0;

1061 
	gpögRwTimeout
 =

1062 
M©h
.
mö
(2*
pögRwTimeout
, 
maxPögRwTimeout
);

1063 
pögRwSîvî
();

1065 
	gto
 = 
M©h
.
mö
(
to
, 
pögRwTimeout
 - 
idÀPögRwSîvî
);

1068 
	g˛õ¡CnxnSockë
.
doTøn•‹t
(
to
, 
≥ndögQueue
, 
outgoögQueue
, 
Clõ¡Cnxn
.
this
);

1069 } 
ˇtch
 (
ThrowabÀ
 
e
) {

1070 i‡(
	g˛osög
) {

1071 i‡(
	gLOG
.
isDebugE«bÀd
()) {

1073 
	gLOG
.
debug
("AnÉxception wasÅhrown while closing sendÅhread for session 0x"

1074 + 
L⁄g
.
toHexSåög
(
gëSessi⁄Id
())

1075 + " : " + 
e
.
gëMesßge
());

1080 i‡(
e
 
ö°™˚of
 
	gSessi⁄ExpúedEx˚±i⁄
) {

1081 
	gLOG
.
öfo
(
e
.
gëMesßge
() + ", closing socket connection");

1082 } i‡(
e
 
ö°™˚of
 
	gSessi⁄TimeoutEx˚±i⁄
) {

1083 
	gLOG
.
öfo
(
e
.
gëMesßge
(Ë+ 
RETRY_CONN_MSG
);

1084 } i‡(
e
 
ö°™˚of
 
	gEndOfSåómEx˚±i⁄
) {

1085 
	gLOG
.
öfo
(
e
.
gëMesßge
(Ë+ 
RETRY_CONN_MSG
);

1086 } i‡(
e
 
ö°™˚of
 
	gRWSîvîFoundEx˚±i⁄
) {

1087 
	gLOG
.
öfo
(
e
.
gëMesßge
());

1089 
	gLOG
.
w¨n
(

1091 + 
L⁄g
.
toHexSåög
(
gëSessi⁄Id
())

1093 + 
˛õ¡CnxnSockë
.
gëRemŸeSockëAddªss
()

1095 + 
RETRY_CONN_MSG
, 
e
);

1097 
˛ónup
();

1098 i‡(
	g°©e
.
isAlive
()) {

1099 
	gevítThªad
.
queueEvít
(
√w
 
W©chedEvít
(

1100 
Evít
.
EvítTy≥
.
N⁄e
,

1101 
Evít
.
Kì≥rSèã
.
Disc⁄√˘ed
,

1102 
nuŒ
));

1104 
	g˛õ¡CnxnSockë
.
upd©eNow
();

1105 
	g˛õ¡CnxnSockë
.
upd©eLa°SídAndHórd
();

1109 
˛ónup
();

1110 
	g˛õ¡CnxnSockë
.
˛o£
();

1111 i‡(
	g°©e
.
isAlive
()) {

1112 
	gevítThªad
.
queueEvít
(
√w
 
W©chedEvít
(
Evít
.
EvítTy≥
.
N⁄e
,

1113 
Evít
.
Kì≥rSèã
.
Disc⁄√˘ed
, 
nuŒ
));

1115 
	gZooTø˚
.
logTø˚Mesßge
(
LOG
, 
ZooTø˚
.
gëTextTø˚Levñ
(),

1119 
¥iv©e
 
pögRwSîvî
(Ë
throws
 
	gRWSîvîFoundEx˚±i⁄
 {

1120 
Såög
 
	gªsu…
 = 
nuŒ
;

1121 
I√tSockëAddªss
 
	gaddr
 = 
ho°Providî
.
√xt
(0);

1122 
	gLOG
.
öfo
("Checkög sîvî " + 
addr
 + " for beingÑ/w." +

1123 " Timeouà" + 
pögRwTimeout
);

1125 
	gåy
 {

1126 
Sockë
 
	gsock
 = 
√w
 Sockë(
addr
.
gëHo°Name
(),áddr.
gëP‹t
());

1127 
	gsock
.
£tSoLögî
(
Ál£
, -1);

1128 
	gsock
.
£tSoTimeout
(1000);

1129 
	gsock
.
£tT˝NoDñay
(
åue
);

1130 
	gsock
.
gëOuçutSåóm
().
wrôe
("i§o".
gëByãs
());

1131 
	gsock
.
gëOuçutSåóm
().
Êush
();

1132 
	gsock
.
shutdownOuçut
();

1133 
Buf„ªdRódî
 
	gbr
 = 
√w
 BufferedReader(

1134 
√w
 
I≈utSåómRódî
(
sock
.
gëI≈utSåóm
()));

1135 
	gªsu…
 = 
br
.
ªadLöe
();

1136 
	gsock
.
˛o£
();

1137 
	gbr
.
˛o£
();

1138 } 
ˇtch
 (
C⁄√˘Ex˚±i⁄
 
e
) {

1140 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

1142 
	gLOG
.
w¨n
("Exception while seeking forÑ/w server " +

1143 
e
.
gëMesßge
(),É);

1146 i‡("rw".
equÆs
(
ªsu…
)) {

1147 
	gpögRwTimeout
 = 
möPögRwTimeout
;

1150 
	grwSîvîAddªss
 = 
addr
;

1151 
throw
 
√w
 
RWSîvîFoundEx˚±i⁄
("Majority server foundát "

1152 + 
addr
.
gëHo°Name
(Ë+ ":" +áddr.
gëP‹t
());

1156 
¥iv©e
 
˛ónup
() {

1157 
	g˛õ¡CnxnSockë
.
˛ónup
();

1158 
synchr⁄ized
 (
≥ndögQueue
) {

1159 
Packë
 
	gp
 : 
≥ndögQueue
) {

1160 
c⁄LossPackë
(
p
);

1162 
	g≥ndögQueue
.
˛ór
();

1164 
synchr⁄ized
 (
outgoögQueue
) {

1165 
Packë
 
	gp
 : 
outgoögQueue
) {

1166 
c⁄LossPackë
(
p
);

1168 
	goutgoögQueue
.
˛ór
();

1182 
⁄C⁄√˘ed
(
_√gŸüãdSessi⁄Timeout
, 
_£ssi⁄Id
,

1183 
byã
[] 
_£ssi⁄Passwd
, 
boﬁón
 
isRO
Ë
throws
 
	gIOEx˚±i⁄
 {

1184 
	g√gŸüãdSessi⁄Timeout
 = 
_√gŸüãdSessi⁄Timeout
;

1185 i‡(
	g√gŸüãdSessi⁄Timeout
 <= 0) {

1186 
°©e
 = 
Sèãs
.
CLOSED
;

1188 
	gevítThªad
.
queueEvít
(
√w
 
W©chedEvít
(

1189 
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
,

1190 
W©chî
.
Evít
.
Kì≥rSèã
.
Expúed
, 
nuŒ
));

1191 
	gevítThªad
.
queueEvítOfDóth
();

1192 
throw
 
√w
 
Sessi⁄ExpúedEx˚±i⁄
(

1194 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
) + " hasÉxpired");

1196 i‡(!
	gªadO∆y
 && 
	gisRO
) {

1197 
	gLOG
.
îr‹
("Read/write client got connectedÅoÑead-only server");

1199 
	gªadTimeout
 = 
√gŸüãdSessi⁄Timeout
 * 2 / 3;

1200 
	gc⁄√˘Timeout
 = 
√gŸüãdSessi⁄Timeout
 / 
ho°Providî
.
size
();

1201 
	gho°Providî
.
⁄C⁄√˘ed
();

1202 
	g£ssi⁄Id
 = 
_£ssi⁄Id
;

1203 
	g£ssi⁄Passwd
 = 
_£ssi⁄Passwd
;

1204 
	g°©e
 = (
isRO
) ?

1205 
Sèãs
.
CONNECTEDREADONLY
 : Sèãs.
CONNECTED
;

1206 
	g£íRwSîvîBef‹e
 |!
isRO
;

1207 
	gLOG
.
öfo
("SessionÉstablishment complete on server "

1208 + 
˛õ¡CnxnSockë
.
gëRemŸeSockëAddªss
()

1209 + ", sessi⁄id = 0x" + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
)

1210 + ",ÇegŸüãdÅimeouà" + 
√gŸüãdSessi⁄Timeout


1211 + (
isRO
 ? " (READ-ONLY mode)" : ""));

1212 
Kì≥rSèã
 
	gevítSèã
 = (
isRO
) ?

1213 
Kì≥rSèã
.
C⁄√˘edRódO∆y
 : Kì≥rSèã.
SyncC⁄√˘ed
;

1214 
	gevítThªad
.
queueEvít
(
√w
 
W©chedEvít
(

1215 
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
,

1216 
evítSèã
, 
nuŒ
));

1219 
˛o£
() {

1220 
	g°©e
 = 
Sèãs
.
CLOSED
;

1221 
	g˛õ¡CnxnSockë
.
wakeupCnxn
();

1224 
ã°abÀClo£Sockë
(Ë
throws
 
	gIOEx˚±i⁄
 {

1225 
	g˛õ¡CnxnSockë
.
ã°abÀClo£Sockë
();

1228 
public
 
boﬁón
 
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
() {

1230 i‡(
	gß¶LogöFaûed
 =
åue
) {

1231  
Ál£
;

1236 i‡(
	gzooKì≥rSa¶Clõ¡
 =
nuŒ
) {

1237  
åue
;

1241  
	gzooKì≥rSa¶Clõ¡
.
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
();

1244 
public
 
£ndPackë
(
Packë
 
p
Ë
throws
 
	gIOEx˚±i⁄
 {

1245 
	g˛õ¡CnxnSockë
.
£ndPackë
(
p
);

1255 
public
 
	$disc⁄√˘
() {

1256 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1257 
LOG
.
	`debug
("Disconnecting client for session: 0x"

1258 + 
L⁄g
.
	`toHexSåög
(
	`gëSessi⁄Id
()));

1261 
£ndThªad
.
	`˛o£
();

1262 
evítThªad
.
	`queueEvítOfDóth
();

1263 
	}
}

1271 
public
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

1272 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1273 
LOG
.
	`debug
("Closing client for session: 0x"

1274 + 
L⁄g
.
	`toHexSåög
(
	`gëSessi⁄Id
()));

1277 
åy
 {

1278 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1279 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
˛o£Sessi⁄
);

1281 
	`submôReque°
(
h
, 
nuŒ
,Çull,Çull);

1282 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

1284 } 
föÆly
 {

1285 
	`disc⁄√˘
();

1287 
	}
}

1289 
¥iv©e
 
	gxid
 = 1;

1291 
¥iv©e
 vﬁ©ûê
Sèãs
 
	g°©e
 = Sèãs.
NOT_CONNECTED
;

1297 
synchr⁄ized
 
public
 
	$gëXid
() {

1298  
xid
++;

1299 
	}
}

1301 
public
 
RïlyHódî
 
	$submôReque°
(
Reque°Hódî
 
h
, 
Rec‹d
 
ªque°
,

1302 
Rec‹d
 
ª•⁄£
, 
W©chRegi°øti⁄
 
w©chRegi°øti⁄
)

1303 
throws
 
I¡îru±edEx˚±i⁄
 {

1304 
RïlyHódî
 
r
 = 
√w
 
	`RïlyHódî
();

1305 
Packë
 
∑ckë
 = 
	`queuePackë
(
h
, 
r
, 
ªque°
, 
ª•⁄£
, 
nuŒ
,Çull,Çull,

1306 
nuŒ
, 
w©chRegi°øti⁄
);

1307 
	`synchr⁄ized
 (
∑ckë
) {

1308 !
∑ckë
.
föished
) {

1309 
∑ckë
.
	`waô
();

1312  
r
;

1313 
	}
}

1315 
public
 
	$íabÀWrôe
() {

1316 
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`íabÀWrôe
();

1317 
	}
}

1319 
public
 
	$£ndPackë
(
Rec‹d
 
ªque°
, Rec‹d 
ª•⁄£
, 
AsyncCÆlback
 
cb
, 
›Code
)

1320 
throws
 
IOEx˚±i⁄
 {

1323 
xid
 = 
	`gëXid
();

1324 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1325 
h
.
	`£tXid
(
xid
);

1326 
h
.
	`£tTy≥
(
›Code
);

1328 
RïlyHódî
 
r
 = 
√w
 
	`RïlyHódî
();

1329 
r
.
	`£tXid
(
xid
);

1331 
Packë
 
p
 = 
√w
 
	`Packë
(
h
, 
r
, 
ªque°
, 
ª•⁄£
, 
nuŒ
, 
Ál£
);

1332 
p
.
cb
 = cb;

1333 
£ndThªad
.
	`£ndPackë
(
p
);

1334 
	}
}

1336 
Packë
 
	$queuePackë
(
Reque°Hódî
 
h
, 
RïlyHódî
 
r
, 
Rec‹d
 
ªque°
,

1337 
Rec‹d
 
ª•⁄£
, 
AsyncCÆlback
 
cb
, 
Såög
 
˛õ¡P©h
,

1338 
Såög
 
£rvîP©h
, 
Obje˘
 
˘x
, 
W©chRegi°øti⁄
 
w©chRegi°øti⁄
)

1340 
Packë
 
∑ckë
 = 
nuŒ
;

1345 
	`synchr⁄ized
 (
outgoögQueue
) {

1346 
∑ckë
 = 
√w
 
	`Packë
(
h
, 
r
, 
ªque°
, 
ª•⁄£
, 
w©chRegi°øti⁄
);

1347 
∑ckë
.
cb
 = cb;

1348 
∑ckë
.
˘x
 = ctx;

1349 
∑ckë
.
˛õ¡P©h
 = clientPath;

1350 
∑ckë
.
£rvîP©h
 = serverPath;

1351 i‡(!
°©e
.
	`isAlive
(Ë|| 
˛osög
) {

1352 
	`c⁄LossPackë
(
∑ckë
);

1356 i‡(
h
.
	`gëTy≥
(Ë=
OpCode
.
˛o£Sessi⁄
) {

1357 
˛osög
 = 
åue
;

1359 
outgoögQueue
.
	`add
(
∑ckë
);

1362 
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`wakeupCnxn
();

1363  
∑ckë
;

1364 
	}
}

1366 
public
 
	$addAuthInfo
(
Såög
 
scheme
, 
byã
 
auth
[]) {

1367 i‡(!
°©e
.
	`isAlive
()) {

1370 
authInfo
.
	`add
(
√w
 
	`AuthD©a
(
scheme
, 
auth
));

1371 
	`queuePackë
(
√w
 
	`Reque°Hódî
(-4, 
OpCode
.
auth
), 
nuŒ
,

1372 
√w
 
	`AuthPackë
(0, 
scheme
, 
auth
), 
nuŒ
,Çull,Çull,Çull,

1373 
nuŒ
,Çull);

1374 
	}
}

1376 
Sèãs
 
	$gëSèã
() {

1377  
°©e
;

1378 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxnSocket.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gClõ¡Cnxn
.
	gPackë
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Re•⁄£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
ab°ø˘
 cœs†
	cClõ¡CnxnSockë
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡CnxnSockë
.
˛ass
);

46 
¥Ÿe˘ed
 
boﬁón
 
	möôülized
;

51 
¥Ÿe˘ed
 
föÆ
 
ByãBuf„r
 
	mÀnBuf„r
 = ByãBuf„r.
ÆloˇãDúe˘
(4);

57 
¥Ÿe˘ed
 
ByãBuf„r
 
	möcomögBuf„r
 = 
ÀnBuf„r
;

58 
¥Ÿe˘ed
 
	m£¡Cou¡
 = 0;

59 
¥Ÿe˘ed
 
	mªcvCou¡
 = 0;

60 
¥Ÿe˘ed
 
	mœ°Hórd
;

61 
¥Ÿe˘ed
 
	mœ°Síd
;

62 
¥Ÿe˘ed
 
	mnow
;

63 
¥Ÿe˘ed
 
	mClõ¡Cnxn
.
SídThªad
 
	m£ndThªad
;

69 
¥Ÿe˘ed
 
	m£ssi⁄Id
;

71 
	$öåodu˚
(
Clõ¡Cnxn
.
SídThªad
 
£ndThªad
, 
£ssi⁄Id
) {

72 
this
.
£ndThªad
 = sendThread;

73 
this
.
£ssi⁄Id
 = sessionId;

76 
	$upd©eNow
() {

77 
now
 = 
Sy°em
.
	`cuºítTimeMûlis
();

78 
	}
}

80 
	$gëIdÀRecv
() {

81  (Ë(
now
 - 
œ°Hórd
);

82 
	}
}

84 
	$gëIdÀSíd
() {

85  (Ë(
now
 - 
œ°Síd
);

86 
	}
}

88 
	$gëSítCou¡
() {

89  
£¡Cou¡
;

90 
	}
}

92 
	$gëRecvCou¡
() {

93  
ªcvCou¡
;

94 
	}
}

96 
	$upd©eLa°Hórd
() {

97 
this
.
œ°Hórd
 = 
now
;

98 
	}
}

100 
	$upd©eLa°Síd
() {

101 
this
.
œ°Síd
 = 
now
;

102 
	}
}

104 
	$upd©eLa°SídAndHórd
() {

105 
this
.
œ°Síd
 = 
now
;

106 
this
.
œ°Hórd
 = 
now
;

107 
	}
}

109 
¥Ÿe˘ed
 
	$ªadLígth
(Ë
throws
 
IOEx˚±i⁄
 {

110 
Àn
 = 
öcomögBuf„r
.
	`gëI¡
();

111 i‡(
Àn
 < 0 ||Üí >
Clõ¡Cnxn
.
∑ckëLí
) {

112 
throw
 
√w
 
	`IOEx˚±i⁄
("PackëÜí" + 
Àn
 + " is out ofÑange!");

114 
öcomögBuf„r
 = 
ByãBuf„r
.
	`Æloˇã
(
Àn
);

115 
	}
}

117 
	$ªadC⁄√˘Resu…
(Ë
throws
 
IOEx˚±i⁄
 {

118 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

119 
SåögBuûdî
 
buf
 = 
√w
 
	`SåögBuûdî
("0x[");

120 
byã
 
b
 : 
öcomögBuf„r
.
	`¨øy
()) {

121 
buf
.
	`≠≥nd
(
I¡egî
.
	`toHexSåög
(
b
) + ",");

123 
buf
.
	`≠≥nd
("]");

124 
LOG
.
	`åa˚
("ªadC⁄√˘Resu… " + 
öcomögBuf„r
.
	`ªmaöög
() + " "

125 + 
buf
.
	`toSåög
());

127 
ByãBuf„rI≈utSåóm
 
bbis
 = 
√w
 
	`ByãBuf„rI≈utSåóm
(
öcomögBuf„r
);

128 
Bö¨yI≈utArchive
 
bbü
 = Bö¨yI≈utArchive.
	`gëArchive
(
bbis
);

129 
C⁄√˘Re•⁄£
 
c⁄R•
 = 
√w
 
	`C⁄√˘Re•⁄£
();

130 
c⁄R•
.
	`de£rülize
(
bbü
, "connect");

133 
boﬁón
 
isRO
 = 
Ál£
;

134 
åy
 {

135 
isRO
 = 
bbü
.
	`ªadBoﬁ
("readOnly");

136 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

139 
LOG
.
	`w¨n
("ConnectedÅoán old server;Ñ-o mode will be unavailable");

142 
this
.
£ssi⁄Id
 = 
c⁄R•
.
	`gëSessi⁄Id
();

143 
£ndThªad
.
	`⁄C⁄√˘ed
(
c⁄R•
.
	`gëTimeOut
(), 
this
.
£ssi⁄Id
,

144 
c⁄R•
.
	`gëPasswd
(), 
isRO
);

145 
	}
}

147 
ab°ø˘
 
boﬁón
 
isC⁄√˘ed
();

149 
ab°ø˘
 
	$c⁄√˘
(
I√tSockëAddªss
 
addr
Ë
throws
 
IOEx˚±i⁄
;

151 
ab°ø˘
 
SockëAddªss
 
	`gëRemŸeSockëAddªss
();

153 
ab°ø˘
 
SockëAddªss
 
	`gëLoˇlSockëAddªss
();

155 
ab°ø˘
 
	`˛ónup
();

157 
ab°ø˘
 
	`˛o£
();

159 
ab°ø˘
 
	`wakeupCnxn
();

161 
ab°ø˘
 
	`íabÀWrôe
();

163 
ab°ø˘
 
	`dißbÀWrôe
();

165 
ab°ø˘
 
	`íabÀRódWrôeO∆y
();

167 
ab°ø˘
 
	`doTøn•‹t
(
waôTimeOut
, 
Li°
<
Packë
> 
≥ndögQueue
,

168 
LökedLi°
<
Packë
> 
outgoögQueue
, 
Clõ¡Cnxn
 
˙xn
)

169 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
;

171 
ab°ø˘
 
	$ã°abÀClo£Sockë
(Ë
throws
 
IOEx˚±i⁄
;

173 
ab°ø˘
 
	$£ndPackë
(
Packë
 
p
Ë
throws
 
IOEx˚±i⁄
;

174 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSñe˘i⁄Key
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSñe˘‹
;

27 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°Iãøt‹
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gClõ¡Cnxn
.
	gEndOfSåómEx˚±i⁄
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gClõ¡Cnxn
.
	gPackë
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

39 
public
 cœs†
	cClõ¡CnxnSockëNIO
 
exãnds
 
	mClõ¡CnxnSockë
 {

40 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


41 .
gëLoggî
(
Clõ¡CnxnSockëNIO
.
˛ass
);

43 
¥iv©e
 
föÆ
 
Sñe˘‹
 
	m£À˘‹
 = Sñe˘‹.
›í
();

45 
¥iv©e
 
Sñe˘i⁄Key
 
	msockKey
;

47 
	$Clõ¡CnxnSockëNIO
(Ë
throws
 
IOEx˚±i⁄
 {

48 
	`su≥r
();

51 @
Ovîride


52 
boﬁón
 
	$isC⁄√˘ed
() {

53  
sockKey
 !
nuŒ
;

54 
	}
}

61 
doIO
(
Li°
<
Packë
> 
≥ndögQueue
, 
LökedLi°
<Packë> 
outgoögQueue
, 
Clõ¡Cnxn
 
˙xn
)

62 
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gIOEx˚±i⁄
 {

63 
SockëCh™√l
 
	gsock
 = (SockëCh™√lË
sockKey
.
ch™√l
();

64 i‡(
	gsock
 =
nuŒ
) {

65 
throw
 
√w
 
IOEx˚±i⁄
("Socket isÇull!");

67 i‡(
	gsockKey
.
isRódabÀ
()) {

68 
	grc
 = 
sock
.
ªad
(
öcomögBuf„r
);

69 i‡(
	grc
 < 0) {

70 
throw
 
√w
 
EndOfSåómEx˚±i⁄
(

72 + 
L⁄g
.
toHexSåög
(
£ssi⁄Id
)

75 i‡(!
	göcomögBuf„r
.
hasRemaöög
()) {

76 
	göcomögBuf„r
.
Êù
();

77 i‡(
	göcomögBuf„r
 =
ÀnBuf„r
) {

78 
ªcvCou¡
++;

79 
ªadLígth
();

80 } i‡(!
	göôülized
) {

81 
ªadC⁄√˘Resu…
();

82 
íabÀRód
();

83 i‡(
födSídabÀPackë
(
outgoögQueue
,

84 
˙xn
.
£ndThªad
.
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
()Ë!
nuŒ
) {

87 
íabÀWrôe
();

89 
	gÀnBuf„r
.
˛ór
();

90 
	göcomögBuf„r
 = 
ÀnBuf„r
;

91 
upd©eLa°Hórd
();

92 
	göôülized
 = 
åue
;

94 
	g£ndThªad
.
ªadRe•⁄£
(
öcomögBuf„r
);

95 
	gÀnBuf„r
.
˛ór
();

96 
	göcomögBuf„r
 = 
ÀnBuf„r
;

97 
upd©eLa°Hórd
();

101 i‡(
	gsockKey
.
isWrôabÀ
()) {

102 
synchr⁄ized
(
outgoögQueue
) {

103 
Packë
 
	gp
 = 
födSídabÀPackë
(
outgoögQueue
,

104 
˙xn
.
£ndThªad
.
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
());

106 i‡(
	gp
 !
nuŒ
) {

107 
upd©eLa°Síd
();

109 i‡(
	gp
.
	gbb
 =
nuŒ
) {

110 i‡((
p
.
ªque°Hódî
 !
nuŒ
) &&

111 (
p
.
ªque°Hódî
.
gëTy≥
(Ë!
OpCode
.
pög
) &&

112 (
p
.
ªque°Hódî
.
gëTy≥
(Ë!
OpCode
.
auth
)) {

113 
p
.
ªque°Hódî
.
£tXid
(
˙xn
.
gëXid
());

115 
	gp
.
¸óãBB
();

117 
	gsock
.
wrôe
(
p
.
bb
);

118 i‡(!
	gp
.
	gbb
.
hasRemaöög
()) {

119 
	g£¡Cou¡
++;

120 
	goutgoögQueue
.
ªmoveFú°Occuºí˚
(
p
);

121 i‡(
	gp
.
	gªque°Hódî
 !
nuŒ


122 && 
p
.
ªque°Hódî
.
gëTy≥
(Ë!
OpCode
.
pög


123 && 
p
.
ªque°Hódî
.
gëTy≥
(Ë!
OpCode
.
auth
) {

124 
synchr⁄ized
 (
≥ndögQueue
) {

125 
≥ndögQueue
.
add
(
p
);

130 i‡(
	goutgoögQueue
.
isEm±y
()) {

136 
dißbÀWrôe
();

139 
íabÀWrôe
();

145 
¥iv©e
 
Packë
 
födSídabÀPackë
(
LökedLi°
<Packë> 
outgoögQueue
,

146 
boﬁón
 
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
) {

147 
synchr⁄ized
 (
outgoögQueue
) {

148 i‡(
	goutgoögQueue
.
isEm±y
()) {

149  
	gnuŒ
;

151 i‡(
	goutgoögQueue
.
gëFú°
().
	gbb
 !
nuŒ


152 || !
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
) {

153  
outgoögQueue
.
gëFú°
();

161 
	gLi°Iãøt‹
<
	gPackë
> 
	gôî
 = 
outgoögQueue
.
li°Iãøt‹
();

162 
	gôî
.
hasNext
()) {

163 
Packë
 
	gp
 = 
ôî
.
√xt
();

164 i‡(
	gp
.
	gªque°Hódî
 =
nuŒ
) {

166 
ôî
.
ªmove
();

167 
	goutgoögQueue
.
add
(0, 
p
);

168  
	gp
;

172 i‡(
	gLOG
.
isDebugE«bÀd
()) {

173 
	gLOG
.
debug
("de„ºögÇ⁄-¥imögÖackë: " + 
p
 +

179  
	gnuŒ
;

183 @
Ovîride


184 
	$˛ónup
() {

185 i‡(
sockKey
 !
nuŒ
) {

186 
SockëCh™√l
 
sock
 = (SockëCh™√lË
sockKey
.
	`ch™√l
();

187 
sockKey
.
	`ˇn˚l
();

188 
åy
 {

189 
sock
.
	`sockë
().
	`shutdownI≈ut
();

190 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

191 i‡(
LOG
.
	`isDebugE«bÀd
()) {

192 
LOG
.
	`debug
("Ign‹ögÉx˚±i⁄ durög shutdow¿öput", 
e
);

195 
åy
 {

196 
sock
.
	`sockë
().
	`shutdownOuçut
();

197 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

198 i‡(
LOG
.
	`isDebugE«bÀd
()) {

199 
LOG
.
	`debug
("IgnoringÉxception during shutdown output",

200 
e
);

203 
åy
 {

204 
sock
.
	`sockë
().
	`˛o£
();

205 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

206 i‡(
LOG
.
	`isDebugE«bÀd
()) {

207 
LOG
.
	`debug
("Ign‹ögÉx˚±i⁄ durög sockë clo£", 
e
);

210 
åy
 {

211 
sock
.
	`˛o£
();

212 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

213 i‡(
LOG
.
	`isDebugE«bÀd
()) {

214 
LOG
.
	`debug
("Ign‹ögÉx˚±i⁄ durög ch™√»˛o£", 
e
);

218 
åy
 {

219 
Thªad
.
	`¶ìp
(100);

220 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

221 i‡(
LOG
.
	`isDebugE«bÀd
()) {

222 
LOG
.
	`debug
("SendThread interrupted during sleep, ignoring");

225 
sockKey
 = 
nuŒ
;

226 
	}
}

228 @
Ovîride


229 
	$˛o£
() {

230 
åy
 {

231 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

232 
LOG
.
	`åa˚
("Doing client selector close");

234 
£À˘‹
.
	`˛o£
();

235 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

236 
LOG
.
	`åa˚
("Closed client selector");

238 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

239 
LOG
.
	`w¨n
("Ign‹ögÉx˚±i⁄ durög sñe˘‹ clo£", 
e
);

241 
	}
}

248 
SockëCh™√l
 
	$¸óãSock
(Ë
throws
 
IOEx˚±i⁄
 {

249 
SockëCh™√l
 
sock
;

250 
sock
 = 
SockëCh™√l
.
	`›í
();

251 
sock
.
	`c⁄figuªBlockög
(
Ál£
);

252 
sock
.
	`sockë
().
	`£tSoLögî
(
Ál£
, -1);

253 
sock
.
	`sockë
().
	`£tT˝NoDñay
(
åue
);

254  
sock
;

255 
	}
}

263 
	$ªgi°îAndC⁄√˘
(
SockëCh™√l
 
sock
, 
I√tSockëAddªss
 
addr
)

264 
throws
 
IOEx˚±i⁄
 {

265 
sockKey
 = 
sock
.(
£À˘‹
, 
Sñe˘i⁄Key
.
OP_CONNECT
);

266 
boﬁón
 
immedüãC⁄√˘
 = 
sock
.
	`c⁄√˘
(
addr
);

267 i‡(
immedüãC⁄√˘
) {

268 
£ndThªad
.
	`¥imeC⁄√˘i⁄
();

270 
	}
}

272 @
Ovîride


273 
	$c⁄√˘
(
I√tSockëAddªss
 
addr
Ë
throws
 
IOEx˚±i⁄
 {

274 
SockëCh™√l
 
sock
 = 
	`¸óãSock
();

275 
åy
 {

276 
	`ªgi°îAndC⁄√˘
(
sock
, 
addr
);

277 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

278 
LOG
.
	`îr‹
("U«bÀÅÿ›í sockëÅÿ" + 
addr
);

279 
sock
.
	`˛o£
();

280 
throw
 
e
;

282 
öôülized
 = 
Ál£
;

287 
ÀnBuf„r
.
	`˛ór
();

288 
öcomögBuf„r
 = 
ÀnBuf„r
;

289 
	}
}

297 @
Ovîride


298 
SockëAddªss
 
	$gëRemŸeSockëAddªss
() {

302 
åy
 {

303  ((
SockëCh™√l
Ë
sockKey
.
	`ch™√l
()).
	`sockë
()

304 .
	`gëRemŸeSockëAddªss
();

305 } 
	`ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
e
) {

306  
nuŒ
;

308 
	}
}

316 @
Ovîride


317 
SockëAddªss
 
	$gëLoˇlSockëAddªss
() {

321 
åy
 {

322  ((
SockëCh™√l
Ë
sockKey
.
	`ch™√l
()).
	`sockë
()

323 .
	`gëLoˇlSockëAddªss
();

324 } 
	`ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
e
) {

325  
nuŒ
;

327 
	}
}

329 @
Ovîride


330 
synchr⁄ized
 
	$wakeupCnxn
() {

331 
£À˘‹
.
	`wakeup
();

332 
	}
}

334 @
Ovîride


335 
doTøn•‹t
(
waôTimeOut
, 
Li°
<
Packë
> 
≥ndögQueue
, 
LökedLi°
<Packë> 
outgoögQueue
,

336 
Clõ¡Cnxn
 
˙xn
)

337 
throws
 
	gIOEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

338 
	g£À˘‹
.
£À˘
(
waôTimeOut
);

339 
	gSë
<
	gSñe˘i⁄Key
> 
	g£À˘ed
;

340 
synchr⁄ized
 (
this
) {

341 
	g£À˘ed
 = 
£À˘‹
.
£À˘edKeys
();

346 
upd©eNow
();

347 
Sñe˘i⁄Key
 
	gk
 : 
£À˘ed
) {

348 
SockëCh™√l
 
sc
 = ((SockëCh™√lË
k
.
ch™√l
());

349 i‡((
	gk
.
ªadyOps
(Ë& 
	gSñe˘i⁄Key
.
	gOP_CONNECT
) != 0) {

350 i‡(
sc
.
föishC⁄√˘
()) {

351 
upd©eLa°SídAndHórd
();

352 
	g£ndThªad
.
¥imeC⁄√˘i⁄
();

354 } i‡((
	gk
.
ªadyOps
(Ë& (
	gSñe˘i⁄Key
.
	gOP_READ
 | Sñe˘i⁄Key.
	gOP_WRITE
)) != 0) {

355 
doIO
(
≥ndögQueue
, 
outgoögQueue
, 
˙xn
);

358 i‡(
	g£ndThªad
.
gëZkSèã
().
isC⁄√˘ed
()) {

359 
synchr⁄ized
(
outgoögQueue
) {

360 i‡(
födSídabÀPackë
(
outgoögQueue
,

361 
˙xn
.
£ndThªad
.
˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
()Ë!
nuŒ
) {

362 
íabÀWrôe
();

366 
	g£À˘ed
.
˛ór
();

370 @
Ovîride


371 
	$ã°abÀClo£Sockë
(Ë
throws
 
IOEx˚±i⁄
 {

372 
LOG
.
	`öfo
("testableCloseSocket() called");

373 ((
SockëCh™√l
Ë
sockKey
.
	`ch™√l
()).
	`sockë
().
	`˛o£
();

374 
	}
}

376 @
Ovîride


377 
synchr⁄ized
 
	$íabÀWrôe
() {

378 
i
 = 
sockKey
.
	`öãª°Ops
();

379 i‡((
i
 & 
Sñe˘i⁄Key
.
OP_WRITE
) == 0) {

380 
sockKey
.
	`öãª°Ops
(
i
 | 
Sñe˘i⁄Key
.
OP_WRITE
);

382 
	}
}

384 @
Ovîride


385 
public
 
synchr⁄ized
 
	$dißbÀWrôe
() {

386 
i
 = 
sockKey
.
	`öãª°Ops
();

387 i‡((
i
 & 
Sñe˘i⁄Key
.
OP_WRITE
) != 0) {

388 
sockKey
.
	`öãª°Ops
(
i
 & (~
Sñe˘i⁄Key
.
OP_WRITE
));

390 
	}
}

392 
synchr⁄ized
 
¥iv©e
 
	$íabÀRód
() {

393 
i
 = 
sockKey
.
	`öãª°Ops
();

394 i‡((
i
 & 
Sñe˘i⁄Key
.
OP_READ
) == 0) {

395 
sockKey
.
	`öãª°Ops
(
i
 | 
Sñe˘i⁄Key
.
OP_READ
);

397 
	}
}

399 @
Ovîride


400 
synchr⁄ized
 
	$íabÀRódWrôeO∆y
() {

401 
sockKey
.
	`öãª°Ops
(
Sñe˘i⁄Key
.
OP_READ
 | Sñe˘i⁄Key.
OP_WRITE
);

402 
	}
}

404 
Sñe˘‹
 
	$gëSñe˘‹
() {

405  
£À˘‹
;

406 
	}
}

408 @
Ovîride


409 
	$£ndPackë
(
Packë
 
p
Ë
throws
 
IOEx˚±i⁄
 {

410 
SockëCh™√l
 
sock
 = (SockëCh™√lË
sockKey
.
	`ch™√l
();

411 i‡(
sock
 =
nuŒ
) {

412 
throw
 
√w
 
	`IOEx˚±i⁄
("Socket isÇull!");

414 
p
.
	`¸óãBB
();

415 
ByãBuf„r
 
pbb
 = 
p
.
bb
;

416 
sock
.
	`wrôe
(
pbb
);

417 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientWatchManager.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
public
 
öãrÁ˚
 
	gClõ¡W©chM™agî
 {

38 
public
 
	gSë
<
	gW©chî
> 
m©îülize
(
W©chî
.
Evít
.
Kì≥rSèã
 
°©e
,

39 
W©chî
.
Evít
.
EvítTy≥
 
ty≥
, 
Såög
 
∑th
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/CreateMode.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
public
 
	eCª©eMode
 {

32 
PERSISTENT
 (0, 
Ál£
, false),

37 
PERSISTENT_SEQUENTIAL
 (2, 
Ál£
, 
åue
),

41 
EPHEMERAL
 (1, 
åue
, 
Ál£
),

46 
EPHEMERAL_SEQUENTIAL
 (3, 
åue
,Årue);

48 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Cª©eMode
.
˛ass
);

50 
¥iv©e
 
boﬁón
 
	mïhemîÆ
;

51 
¥iv©e
 
boﬁón
 
	m£quítül
;

52 
¥iv©e
 
	mÊag
;

54 
Cª©eMode
(
Êag
, 
boﬁón
 
ïhemîÆ
, boﬁó¿
£quítül
) {

55 
	mthis
.
	mÊag
 = 
Êag
;

56 
	mthis
.
	mïhemîÆ
 = 
ïhemîÆ
;

57 
	mthis
.
	m£quítül
 = 
£quítül
;

60 
public
 
boﬁón
 
isEphemîÆ
() {

61  
	mïhemîÆ
;

64 
public
 
boﬁón
 
isSequítül
() {

65  
	m£quítül
;

68 
public
 
toFœg
() {

69  
	mÊag
;

75 
public
 
Cª©eMode
 
‰omFœg
(
Êag
Ë
throws
 
	mKì≥rEx˚±i⁄
 {

76 
	mÊag
) {

77 0:  
Cª©eMode
.
PERSISTENT
;

79 1:  
Cª©eMode
.
EPHEMERAL
;

81 2:  
Cª©eMode
.
PERSISTENT_SEQUENTIAL
;

83 3:  
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
 ;

86 
LOG
.
îr‹
("Receivedán invalid flag valueÅo convertÅoá CreateMode");

87 
throw
 
√w
 
	mKì≥rEx˚±i⁄
.
BadArgumítsEx˚±i⁄
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Environment.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
public
 cœs†
	cEnvú⁄mít
 {

34 
public
 
Såög
 
	mJAAS_CONF_KEY
 = "java.security.auth.login.config";

36 
public
 ˛as†
	cE¡ry
 {

37 
¥iv©e
 
Såög
 
	mk
;

38 
¥iv©e
 
Såög
 
	mv
;

39 
public
 
E¡ry
(
Såög
 
k
, Såög 
v
) {

40 
	mthis
.
	mk
 = 
k
;

41 
	mthis
.
	mv
 = 
v
;

43 
public
 
Såög
 
gëKey
(Ë{  
	mk
; }

44 
public
 
Såög
 
gëVÆue
(Ë{  
	mv
; }

46 @
Ovîride


47 
public
 
Såög
 
toSåög
() {

48  
	mk
 + "=" + 
	mv
;

52 
¥iv©e
 
put
(
AºayLi°
<
E¡ry
> 
l
, 
Såög
 
k
, Såög 
v
) {

53 
	gl
.
add
(
√w
 
E¡ry
(
k
,
v
));

56 
public
 
	gLi°
<
	gE¡ry
> 
	$li°
() {

57 
AºayLi°
<
E¡ry
> 
l
 = 
√w
 ArrayList<Entry>();

58 
	`put
(
l
, "zookì≥r.vîsi⁄", 
Vîsi⁄
.
	`gëFuŒVîsi⁄
());

60 
åy
 {

61 
	`put
(
l
, "host.name",

62 
I√tAddªss
.
	`gëLoˇlHo°
().
	`gëC™⁄iˇlHo°Name
());

63 } 
	`ˇtch
 (
UnknownHo°Ex˚±i⁄
 
e
) {

64 
	`put
(
l
, "host.name", "<NA>");

67 
	`put
(
l
, "java.version",

68 
Sy°em
.
	`gëPr›îty
("java.version", "<NA>"));

69 
	`put
(
l
, "java.vendor",

70 
Sy°em
.
	`gëPr›îty
("java.vendor", "<NA>"));

71 
	`put
(
l
, "java.home",

72 
Sy°em
.
	`gëPr›îty
("java.home", "<NA>"));

73 
	`put
(
l
, "java.class.path",

74 
Sy°em
.
	`gëPr›îty
("java.class.path", "<NA>"));

75 
	`put
(
l
, "java.library.path",

76 
Sy°em
.
	`gëPr›îty
("java.library.path", "<NA>"));

77 
	`put
(
l
, "java.io.tmpdir",

78 
Sy°em
.
	`gëPr›îty
("java.io.tmpdir", "<NA>"));

79 
	`put
(
l
, "java.compiler",

80 
Sy°em
.
	`gëPr›îty
("java.compiler", "<NA>"));

81 
	`put
(
l
, "os.name",

82 
Sy°em
.
	`gëPr›îty
("os.name", "<NA>"));

83 
	`put
(
l
, "os.arch",

84 
Sy°em
.
	`gëPr›îty
("os.arch", "<NA>"));

85 
	`put
(
l
, "os.version",

86 
Sy°em
.
	`gëPr›îty
("os.version", "<NA>"));

87 
	`put
(
l
, "user.name",

88 
Sy°em
.
	`gëPr›îty
("user.name", "<NA>"));

89 
	`put
(
l
, "user.home",

90 
Sy°em
.
	`gëPr›îty
("user.home", "<NA>"));

91 
	`put
(
l
, "user.dir",

92 
Sy°em
.
	`gëPr›îty
("user.dir", "<NA>"));

94  
l
;

95 
	}
}

97 
public
 
	$logEnv
(
Såög
 
msg
, 
Loggî
 
log
) {

98 
Li°
<
E¡ry
> 
ív
 = 
Envú⁄mít
.
	`li°
();

99 
E¡ry
 
e
 : 
ív
) {

100 
log
.
	`öfo
(
msg
 + 
e
.
	`toSåög
());

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/JLineZNodeCompletor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjlöe
.
	gCom∂ë‹
;

25 ˛as†
	cJLöeZNodeCom∂ë‹
 
im∂emíts
 
	mCom∂ë‹
 {

26 
¥iv©e
 
ZooKì≥r
 
	mzk
;

28 
public
 
	$JLöeZNodeCom∂ë‹
(
ZooKì≥r
 
zk
) {

29 
this
.
zk
 = zk;

32 @
	`SuµªssW¨nögs
("unchecked")

33 
public
 
	$com∂ëe
(
Såög
 
buf„r
, 
curs‹
, 
Li°
 
ˇndid©es
) {

35 
buf„r
 = buf„r.
	`sub°rög
(0,
curs‹
);

36 
Såög
 
tokí
 = "";

37 i‡(!
buf„r
.
	`ídsWôh
(" ")) {

38 
Såög
[] 
tokís
 = 
buf„r
.
	`•lô
(" ");

39 i‡(
tokís
.
Àngth
 != 0) {

40 
tokí
 = 
tokís
[tokís.
Àngth
-1] ;

44 i‡(
tokí
.
	`°¨tsWôh
("/")){

45  
	`com∂ëeZNode
–
buf„r
, 
tokí
, 
ˇndid©es
);

47  
	`com∂ëeComm™d
(
buf„r
, 
tokí
, 
ˇndid©es
);

48 
	}
}

50 
¥iv©e
 
com∂ëeComm™d
(
Såög
 
buf„r
, Såög 
tokí
,

51 
Li°
<
Såög
> 
ˇndid©es
)

53 
Såög
 
	gcmd
 : 
ZooKì≥rMaö
.
gëComm™ds
()) {

54 i‡(
cmd
.
°¨tsWôh
–
tokí
 )) {

55 
ˇndid©es
.
add
(
cmd
);

58  
	gbuf„r
.
œ°IndexOf
(" ")+1;

61 
¥iv©e
 
com∂ëeZNode
–
Såög
 
buf„r
, Såög 
tokí
,

62 
Li°
<
Såög
> 
ˇndid©es
)

64 
Såög
 
	g∑th
 = 
tokí
;

65 
	gidx
 = 
∑th
.
œ°IndexOf
("/") + 1;

66 
Såög
 
	g¥efix
 = 
∑th
.
sub°rög
(
idx
);

67 
	gåy
 {

69 
Såög
 
	gdú
 = 
idx
 =1 ? "/" : 
∑th
.
sub°rög
(0,idx-1);

70 
	gLi°
<
	gSåög
> 
	gchûdªn
 = 
zk
.
gëChûdªn
(
dú
, 
Ál£
);

71 
Såög
 
	gchûd
 : 
chûdªn
) {

72 i‡(
chûd
.
°¨tsWôh
(
¥efix
)) {

73 
ˇndid©es
.
add
–
chûd
 );

76 } 
ˇtch
–
I¡îru±edEx˚±i⁄
 
e
) {

79 
ˇtch
–
Kì≥rEx˚±i⁄
 
e
) {

82  
	gˇndid©es
.
size
(Ë=0 ? 
buf„r
.
Àngth
(Ë: buf„r.
œ°IndexOf
("/") + 1;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/KeeperException.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gEnumSë
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

27 @
SuµªssW¨nögs
("serial")

28 
public
 
ab°ø˘
 cœs†
	cKì≥rEx˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

35 
¥iv©e
 
	mLi°
<
	mOpResu…
> 
	mªsu…s
;

50 
public
 
Kì≥rEx˚±i⁄
 
	$¸óã
(
Code
 
code
, 
Såög
 
∑th
) {

51 
Kì≥rEx˚±i⁄
 
r
 = 
	`¸óã
(
code
);

52 
r
.
∑th
 =Öath;

53  
r
;

60 @
Dïªˇãd


61 
public
 
Kì≥rEx˚±i⁄
 
	$¸óã
(
code
, 
Såög
 
∑th
) {

62 
Kì≥rEx˚±i⁄
 
r
 = 
	`¸óã
(
Code
.
	`gë
(
code
));

63 
r
.
∑th
 =Öath;

64  
r
;

65 
	}
}

71 @
Dïªˇãd


72 
public
 
Kì≥rEx˚±i⁄
 
	$¸óã
(
code
) {

73  
	`¸óã
(
Code
.
	`gë
(
code
));

74 
	}
}

90 
public
 
Kì≥rEx˚±i⁄
 
	$¸óã
(
Code
 
code
) {

91 
code
) {

92 
SYSTEMERROR
:

93  
√w
 
	`Sy°emEº‹Ex˚±i⁄
();

94 
RUNTIMEINCONSISTENCY
:

95  
√w
 
	`Ru¡imeInc⁄si°ícyEx˚±i⁄
();

96 
DATAINCONSISTENCY
:

97  
√w
 
	`D©aInc⁄si°ícyEx˚±i⁄
();

98 
CONNECTIONLOSS
:

99  
√w
 
	`C⁄√˘i⁄LossEx˚±i⁄
();

100 
MARSHALLINGERROR
:

101  
√w
 
	`M¨shÆlögEº‹Ex˚±i⁄
();

102 
UNIMPLEMENTED
:

103  
√w
 
	`Unim∂emíãdEx˚±i⁄
();

104 
OPERATIONTIMEOUT
:

105  
√w
 
	`O≥øti⁄TimeoutEx˚±i⁄
();

106 
BADARGUMENTS
:

107  
√w
 
	`BadArgumítsEx˚±i⁄
();

108 
APIERROR
:

109  
√w
 
	`APIEº‹Ex˚±i⁄
();

110 
NONODE
:

111  
√w
 
	`NoNodeEx˚±i⁄
();

112 
NOAUTH
:

113  
√w
 
	`NoAuthEx˚±i⁄
();

114 
BADVERSION
:

115  
√w
 
	`BadVîsi⁄Ex˚±i⁄
();

116 
NOCHILDRENFOREPHEMERALS
:

117  
√w
 
	`NoChûdªnF‹EphemîÆsEx˚±i⁄
();

118 
NODEEXISTS
:

119  
√w
 
	`NodeExi°sEx˚±i⁄
();

120 
INVALIDACL
:

121  
√w
 
	`InvÆidACLEx˚±i⁄
();

122 
AUTHFAILED
:

123  
√w
 
	`AuthFaûedEx˚±i⁄
();

124 
NOTEMPTY
:

125  
√w
 
	`NŸEm±yEx˚±i⁄
();

126 
SESSIONEXPIRED
:

127  
√w
 
	`Sessi⁄ExpúedEx˚±i⁄
();

128 
INVALIDCALLBACK
:

129  
√w
 
	`InvÆidCÆlbackEx˚±i⁄
();

130 
SESSIONMOVED
:

131  
√w
 
	`Sessi⁄MovedEx˚±i⁄
();

132 
NOTREADONLY
:

133  
√w
 
	`NŸRódO∆yEx˚±i⁄
();

135 
OK
:

137 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvalidÉxception code");

139 
	}
}

147 @
Dïªˇãd


148 
public
 
	$£tCode
(
code
) {

149 
this
.
code
 = 
Code
.
	`gë
(code);

150 
	}
}

165 @
Dïªˇãd


166 
public
 
öãrÁ˚
 
	gCodeDïªˇãd
 {

170 @
Dïªˇãd


171 
public
 
föÆ
 
	gOk
 = 0;

176 @
Dïªˇãd


177 
public
 
föÆ
 
	gSy°emEº‹
 = -1;

182 @
Dïªˇãd


183 
public
 
föÆ
 
	gRu¡imeInc⁄si°ícy
 = -2;

188 @
Dïªˇãd


189 
public
 
föÆ
 
	gD©aInc⁄si°ícy
 = -3;

194 @
Dïªˇãd


195 
public
 
föÆ
 
	gC⁄√˘i⁄Loss
 = -4;

200 @
Dïªˇãd


201 
public
 
föÆ
 
	gM¨shÆlögEº‹
 = -5;

206 @
Dïªˇãd


207 
public
 
föÆ
 
	gUnim∂emíãd
 = -6;

212 @
Dïªˇãd


213 
public
 
föÆ
 
	gO≥øti⁄Timeout
 = -7;

218 @
Dïªˇãd


219 
public
 
föÆ
 
	gBadArgumíts
 = -8;

224 @
Dïªˇãd


225 
public
 
föÆ
 
	gAPIEº‹
 = -100;

230 @
Dïªˇãd


231 
public
 
föÆ
 
	gNoNode
 = -101;

235 @
Dïªˇãd


236 
public
 
föÆ
 
	gNoAuth
 = -102;

240 @
Dïªˇãd


241 
public
 
föÆ
 
	gBadVîsi⁄
 = -103;

247 @
Dïªˇãd


248 
public
 
föÆ
 
	gNoChûdªnF‹EphemîÆs
 = -108;

252 @
Dïªˇãd


253 
public
 
föÆ
 
	gNodeExi°s
 = -110;

257 @
Dïªˇãd


258 
public
 
föÆ
 
	gNŸEm±y
 = -111;

262 @
Dïªˇãd


263 
public
 
föÆ
 
	gSessi⁄Expúed
 = -112;

268 @
Dïªˇãd


269 
public
 
föÆ
 
	gInvÆidCÆlback
 = -113;

273 @
Dïªˇãd


274 
public
 
föÆ
 
	gInvÆidACL
 = -114;

278 @
Dïªˇãd


279 
public
 
föÆ
 
	gAuthFaûed
 = -115;

291 
public
 
Code
 
im∂emíts
 
	gCodeDïªˇãd
 {

293 
OK
 (
Ok
),

300 
SYSTEMERROR
 (
Sy°emEº‹
),

303 
RUNTIMEINCONSISTENCY
 (
Ru¡imeInc⁄si°ícy
),

305 
DATAINCONSISTENCY
 (
D©aInc⁄si°ícy
),

307 
CONNECTIONLOSS
 (
C⁄√˘i⁄Loss
),

309 
MARSHALLINGERROR
 (
M¨shÆlögEº‹
),

311 
UNIMPLEMENTED
 (
Unim∂emíãd
),

313 
OPERATIONTIMEOUT
 (
O≥øti⁄Timeout
),

315 
BADARGUMENTS
 (
BadArgumíts
),

323 
APIERROR
 (
APIEº‹
),

326 
NONODE
 (
NoNode
),

328 
NOAUTH
 (
NoAuth
),

330 
BADVERSION
 (
BadVîsi⁄
),

332 
NOCHILDRENFOREPHEMERALS
 (
NoChûdªnF‹EphemîÆs
),

334 
NODEEXISTS
 (
NodeExi°s
),

336 
NOTEMPTY
 (
NŸEm±y
),

338 
SESSIONEXPIRED
 (
Sessi⁄Expúed
),

340 
INVALIDCALLBACK
 (
InvÆidCÆlback
),

342 
INVALIDACL
 (
InvÆidACL
),

344 
AUTHFAILED
 (
AuthFaûed
),

346 
SESSIONMOVED
 (-118),

348 
NOTREADONLY
 (-119);

350 
¥iv©e
 
föÆ
 
	gM≠
<
	gI¡egî
,
	gCode
> 
	glookup


351 
√w
 
HashM≠
<
I¡egî
,
	gCode
>();

354 
Code
 
	gc
 : 
EnumSë
.
ÆlOf
(Code.
˛ass
))

355 
lookup
.
put
(
c
.
code
, c);

358 
¥iv©e
 
föÆ
 
	gcode
;

359 
Code
(
code
) {

360 
	gthis
.
	gcode
 = 
code
;

367 
public
 
ötVÆue
(Ë{  
	gcode
; }

374 
public
 
Code
 
gë
(
code
) {

375  
	glookup
.
gë
(
code
);

379 
Såög
 
	$gëCodeMesßge
(
Code
 
code
) {

380 
code
) {

381 
OK
:

383 
SYSTEMERROR
:

385 
RUNTIMEINCONSISTENCY
:

387 
DATAINCONSISTENCY
:

389 
CONNECTIONLOSS
:

391 
MARSHALLINGERROR
:

393 
UNIMPLEMENTED
:

395 
OPERATIONTIMEOUT
:

397 
BADARGUMENTS
:

399 
APIERROR
:

401 
NONODE
:

403 
NOAUTH
:

405 
BADVERSION
:

407 
NOCHILDRENFOREPHEMERALS
:

409 
NODEEXISTS
:

411 
INVALIDACL
:

413 
AUTHFAILED
:

415 
NOTEMPTY
:

417 
SESSIONEXPIRED
:

419 
INVALIDCALLBACK
:

421 
SESSIONMOVED
:

423 
NOTREADONLY
:

426  "Unknow¿îr‹ " + 
code
;

428 
	}
}

430 
¥iv©e
 
Code
 
	gcode
;

432 
¥iv©e
 
Såög
 
	g∑th
;

434 
public
 
	$Kì≥rEx˚±i⁄
(
Code
 
code
) {

435 
this
.
code
 = code;

436 
	}
}

438 
	$Kì≥rEx˚±i⁄
(
Code
 
code
, 
Såög
 
∑th
) {

439 
this
.
code
 = code;

440 
this
.
∑th
 =Öath;

441 
	}
}

448 @
Dïªˇãd


449 
public
 
	$gëCode
() {

450  
code
.code;

451 
	}
}

457 
public
 
Code
 
	$code
() {

458  
code
;

459 
	}
}

465 
public
 
Såög
 
	$gëP©h
() {

466  
∑th
;

467 
	}
}

469 @
Ovîride


470 
public
 
Såög
 
	$gëMesßge
() {

471 i‡(
∑th
 =
nuŒ
) {

472  "Kì≥rEº‹Codê" + 
	`gëCodeMesßge
(
code
);

474  "Kì≥rEº‹Codê" + 
	`gëCodeMesßge
(
code
Ë+ " f‹ " + 
∑th
;

475 
	}
}

477 
£tMu…iResu…s
(
Li°
<
OpResu…
> 
ªsu…s
) {

478 
	gthis
.
	gªsu…s
 = 
ªsu…s
;

489 
public
 
	gLi°
<
	gOpResu…
> 
	$gëResu…s
() {

490  
ªsu…s
 !
nuŒ
 ? 
√w
 
AºayLi°
<
OpResu…
>(results) :Çull;

491 
	}
}

496 
public
 ˛as†
	cAPIEº‹Ex˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

497 
public
 
APIEº‹Ex˚±i⁄
() {

498 
su≥r
(
Code
.
APIERROR
);

505 
public
 ˛as†
	cAuthFaûedEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

506 
public
 
AuthFaûedEx˚±i⁄
() {

507 
su≥r
(
Code
.
AUTHFAILED
);

514 
public
 ˛as†
	cBadArgumítsEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

515 
public
 
BadArgumítsEx˚±i⁄
() {

516 
su≥r
(
Code
.
BADARGUMENTS
);

518 
public
 
BadArgumítsEx˚±i⁄
(
Såög
 
∑th
) {

519 
su≥r
(
Code
.
BADARGUMENTS
, 
∑th
);

526 
public
 ˛as†
	cBadVîsi⁄Ex˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

527 
public
 
BadVîsi⁄Ex˚±i⁄
() {

528 
su≥r
(
Code
.
BADVERSION
);

530 
public
 
BadVîsi⁄Ex˚±i⁄
(
Såög
 
∑th
) {

531 
su≥r
(
Code
.
BADVERSION
, 
∑th
);

538 
public
 ˛as†
	cC⁄√˘i⁄LossEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

539 
public
 
C⁄√˘i⁄LossEx˚±i⁄
() {

540 
su≥r
(
Code
.
CONNECTIONLOSS
);

547 
public
 ˛as†
	cD©aInc⁄si°ícyEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

548 
public
 
D©aInc⁄si°ícyEx˚±i⁄
() {

549 
su≥r
(
Code
.
DATAINCONSISTENCY
);

556 
public
 ˛as†
	cInvÆidACLEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

557 
public
 
InvÆidACLEx˚±i⁄
() {

558 
su≥r
(
Code
.
INVALIDACL
);

560 
public
 
InvÆidACLEx˚±i⁄
(
Såög
 
∑th
) {

561 
su≥r
(
Code
.
INVALIDACL
, 
∑th
);

568 
public
 ˛as†
	cInvÆidCÆlbackEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

569 
public
 
InvÆidCÆlbackEx˚±i⁄
() {

570 
su≥r
(
Code
.
INVALIDCALLBACK
);

577 
public
 ˛as†
	cM¨shÆlögEº‹Ex˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

578 
public
 
M¨shÆlögEº‹Ex˚±i⁄
() {

579 
su≥r
(
Code
.
MARSHALLINGERROR
);

586 
public
 ˛as†
	cNoAuthEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

587 
public
 
NoAuthEx˚±i⁄
() {

588 
su≥r
(
Code
.
NOAUTH
);

595 
public
 ˛as†
	cNoChûdªnF‹EphemîÆsEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

596 
public
 
NoChûdªnF‹EphemîÆsEx˚±i⁄
() {

597 
su≥r
(
Code
.
NOCHILDRENFOREPHEMERALS
);

599 
public
 
NoChûdªnF‹EphemîÆsEx˚±i⁄
(
Såög
 
∑th
) {

600 
su≥r
(
Code
.
NOCHILDRENFOREPHEMERALS
, 
∑th
);

607 
public
 ˛as†
	cNodeExi°sEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

608 
public
 
NodeExi°sEx˚±i⁄
() {

609 
su≥r
(
Code
.
NODEEXISTS
);

611 
public
 
NodeExi°sEx˚±i⁄
(
Såög
 
∑th
) {

612 
su≥r
(
Code
.
NODEEXISTS
, 
∑th
);

619 
public
 ˛as†
	cNoNodeEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

620 
public
 
NoNodeEx˚±i⁄
() {

621 
su≥r
(
Code
.
NONODE
);

623 
public
 
NoNodeEx˚±i⁄
(
Såög
 
∑th
) {

624 
su≥r
(
Code
.
NONODE
, 
∑th
);

631 
public
 ˛as†
	cNŸEm±yEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

632 
public
 
NŸEm±yEx˚±i⁄
() {

633 
su≥r
(
Code
.
NOTEMPTY
);

635 
public
 
NŸEm±yEx˚±i⁄
(
Såög
 
∑th
) {

636 
su≥r
(
Code
.
NOTEMPTY
, 
∑th
);

643 
public
 ˛as†
	cO≥øti⁄TimeoutEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

644 
public
 
O≥øti⁄TimeoutEx˚±i⁄
() {

645 
su≥r
(
Code
.
OPERATIONTIMEOUT
);

652 
public
 ˛as†
	cRu¡imeInc⁄si°ícyEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

653 
public
 
Ru¡imeInc⁄si°ícyEx˚±i⁄
() {

654 
su≥r
(
Code
.
RUNTIMEINCONSISTENCY
);

661 
public
 ˛as†
	cSessi⁄ExpúedEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

662 
public
 
Sessi⁄ExpúedEx˚±i⁄
() {

663 
su≥r
(
Code
.
SESSIONEXPIRED
);

670 
public
 ˛as†
	cSessi⁄MovedEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

671 
public
 
Sessi⁄MovedEx˚±i⁄
() {

672 
su≥r
(
Code
.
SESSIONMOVED
);

679 
public
 ˛as†
	cNŸRódO∆yEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

680 
public
 
NŸRódO∆yEx˚±i⁄
() {

681 
su≥r
(
Code
.
NOTREADONLY
);

688 
public
 ˛as†
	cSy°emEº‹Ex˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

689 
public
 
Sy°emEº‹Ex˚±i⁄
() {

690 
su≥r
(
Code
.
SYSTEMERROR
);

697 
public
 ˛as†
	cUnim∂emíãdEx˚±i⁄
 
exãnds
 
	gKì≥rEx˚±i⁄
 {

698 
public
 
Unim∂emíãdEx˚±i⁄
() {

699 
su≥r
(
Code
.
UNIMPLEMENTED
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Login.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

28 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gkîbîos
.
	gKîbîosPröcùÆ
;

29 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
;

30 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gC⁄figuøti⁄
;

31 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gLogöC⁄ãxt
;

32 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gLogöEx˚±i⁄
;

33 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlbackH™dÀr
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

37 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gkîbîos
.
	gKîbîosTickë
;

38 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gSubje˘
;

39 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

40 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

41 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

43 
public
 cœs†
	cLogö
 {

44 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
Logö
.
˛ass
);

45 
public
 
CÆlbackH™dÀr
 
	mˇŒbackH™dÀr
;

50 
¥iv©e
 
föÆ
 
	mTICKET_RENEW_WINDOW
 = 0.80f;

55 
¥iv©e
 
föÆ
 
	mTICKET_RENEW_JITTER
 = 0.05f;

60 
¥iv©e
 
föÆ
 
	mMIN_TIME_BEFORE_RELOGIN
 = 1 * 60 * 1000L;

62 
¥iv©e
 
Subje˘
 
	msubje˘
 = 
nuŒ
;

63 
¥iv©e
 
Thªad
 
	mt
 = 
nuŒ
;

64 
¥iv©e
 
boﬁón
 
	misKrbTickë
 = 
Ál£
;

65 
¥iv©e
 
boﬁón
 
	misUsögTickëCache
 = 
Ál£
;

66 
¥iv©e
 
boﬁón
 
	misUsögKeyèb
 = 
Ál£
;

69 
¥iv©e
 
R™dom
 
	m∫g
 = 
√w
 Random();

71 
¥iv©e
 
LogöC⁄ãxt
 
	mlogö
 = 
nuŒ
;

72 
¥iv©e
 
Såög
 
	mlogöC⁄ãxtName
 = 
nuŒ
;

73 
¥iv©e
 
Såög
 
	mkeyèbFûe
 = 
nuŒ
;

74 
¥iv©e
 
Såög
 
	m¥öcùÆ
 = 
nuŒ
;

76 
¥iv©e
 
	mœ°Logö
 = 0;

90 
public
 
	$Logö
(
föÆ
 
Såög
 
logöC⁄ãxtName
, 
CÆlbackH™dÀr
 
ˇŒbackH™dÀr
)

91 
throws
 
LogöEx˚±i⁄
 {

92 
this
.
ˇŒbackH™dÀr
 = callbackHandler;

93 
logö
 = 
	`logö
(
logöC⁄ãxtName
);

94 
this
.
logöC⁄ãxtName
 =ÜoginContextName;

95 
subje˘
 = 
logö
.
	`gëSubje˘
();

96 
isKrbTickë
 = !
subje˘
.
	`gëPriv©eCªdítüls
(
KîbîosTickë
.
˛ass
).
	`isEm±y
();

97 
AµC⁄figuøti⁄E¡ry
 
íåõs
[] = 
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
().
	`gëAµC⁄figuøti⁄E¡ry
(
logöC⁄ãxtName
);

98 
AµC⁄figuøti⁄E¡ry
 
íåy
: 
íåõs
) {

100 i‡(
íåy
.
	`gëO±i⁄s
().
	`gë
("u£TickëCache"Ë!
nuŒ
) {

101 
Såög
 
vÆ
 = (Såög)
íåy
.
	`gëO±i⁄s
().
	`gë
("useTicketCache");

102 i‡(
vÆ
.
	`equÆs
("true")) {

103 
isUsögTickëCache
 = 
åue
;

106 i‡(
íåy
.
	`gëO±i⁄s
().
	`gë
("keyTab"Ë!
nuŒ
) {

107 
keyèbFûe
 = (
Såög
)
íåy
.
	`gëO±i⁄s
().
	`gë
("keyTab");

108 
isUsögKeyèb
 = 
åue
;

110 i‡(
íåy
.
	`gëO±i⁄s
().
	`gë
("¥öcùÆ"Ë!
nuŒ
) {

111 
¥öcùÆ
 = (
Såög
)
íåy
.
	`gëO±i⁄s
().
	`gë
("principal");

116 i‡(!
isKrbTickë
) {

125 
t
 = 
√w
 
	`Thªad
“ew 
	`Ru¬abÀ
() {

126 
public
 
	`run
() {

127 
LOG
.
	`öfo
("TGTÑefreshÅhread started.");

128 
åue
) {

129 
KîbîosTickë
 
tgt
 = 
	`gëTGT
();

130 
now
 = 
Sy°em
.
	`cuºítTimeMûlis
();

131 
√xtRe‰esh
;

132 
D©e
 
√xtRe‰eshD©e
;

133 i‡(
tgt
 =
nuŒ
) {

134 
√xtRe‰esh
 = 
now
 + 
MIN_TIME_BEFORE_RELOGIN
;

135 
√xtRe‰eshD©e
 = 
√w
 
	`D©e
(
√xtRe‰esh
);

136 
LOG
.
	`w¨n
("NÿTGT found: wû»åyágaöáà" + 
√xtRe‰eshD©e
);

138 
√xtRe‰esh
 = 
	`gëRe‰eshTime
(
tgt
);

139 
expúy
 = 
tgt
.
	`gëEndTime
().
	`gëTime
();

140 
D©e
 
expúyD©e
 = 
√w
 
	`D©e
(
expúy
);

141 i‡((
isUsögTickëCache
Ë&& (
tgt
.
	`gëEndTime
().
	`equÆs
—gt.
	`gëRíewTûl
()))) {

142 
LOG
.
	`îr‹
("ThêTGT c™nŸ bêª√wed bey⁄dÅhê√xàexpúy d©e: " + 
expúyD©e
 + "." +

146 "'ª√w u¡û'Åimêby doög : 'mod¥ö¯-maxª√wli„ " + 
¥öcùÆ
 + "' within " +

147 "kadmö, o∏ö°ód,Åÿgíî©ê®keyèb f‹ " + 
¥öcùÆ
 + ". BecauseÅhe TGT's " +

155 i‡((
√xtRe‰esh
 > 
expúy
) ||

156 ((
now
 + 
MIN_TIME_BEFORE_RELOGIN
Ë> 
expúy
)) {

158 
LOG
.
	`öfo
("refreshingÇow becauseÉxpiry is beforeÇext scheduledÑefreshÅime.");

159 
√xtRe‰esh
 = 
now
;

161 i‡(
√xtRe‰esh
 < (
now
 + 
MIN_TIME_BEFORE_RELOGIN
)) {

163 
D©e
 
u¡û
 = 
√w
 
	`D©e
(
√xtRe‰esh
);

164 
D©e
 
√wu¡û
 = 
√w
 
	`D©e
(
now
 + 
MIN_TIME_BEFORE_RELOGIN
);

165 
LOG
.
	`w¨n
("TGTÑe‰eshÅhªadÅimêadju°ed from : " + 
u¡û
 + "Åÿ: " + 
√wu¡û
 + " since "

167 + 
MIN_TIME_BEFORE_RELOGIN
 / 1000 + " seconds) fromÇow.");

169 
√xtRe‰esh
 = 
M©h
.
	`max
“extRe‰esh, 
now
 + 
MIN_TIME_BEFORE_RELOGIN
);

171 
√xtRe‰eshD©e
 = 
√w
 
	`D©e
(
√xtRe‰esh
);

172 i‡(
√xtRe‰esh
 > 
expúy
) {

173 
LOG
.
	`îr‹
("√xàª‰esh: " + 
√xtRe‰eshD©e
 + " i†œã∏th™Éxpúy " + 
expúyD©e


179 i‡(
now
 < 
√xtRe‰esh
) {

180 
D©e
 
u¡û
 = 
√w
 
	`D©e
(
√xtRe‰esh
);

181 
LOG
.
	`öfo
("TGTÑe‰esh sÀïög u¡û: " + 
u¡û
.
	`toSåög
());

182 
åy
 {

183 
Thªad
.
	`¶ìp
(
√xtRe‰esh
 - 
now
);

184 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
õ
) {

185 
LOG
.
	`w¨n
("TGTÑenewalÅhread has been interruptedánd willÉxit.");

190 
LOG
.
	`îr‹
("√xtRe‰esh:" + 
√xtRe‰eshD©e
 + " is inÅheÖast:ÉxitingÑefreshÅhread. Check"

196 i‡(
isUsögTickëCache
) {

197 
Såög
 
cmd
 = "/usr/bin/kinit";

198 i‡(
Sy°em
.
	`gëPr›îty
("zookì≥r.köô"Ë!
nuŒ
) {

199 
cmd
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.kinit");

201 
Såög
 
köôArgs
 = "-R";

202 
ªåy
 = 1;

203 
ªåy
 >= 0) {

204 
åy
 {

205 
LOG
.
	`debug
("ru¬ögÅickë cachêª‰esh comm™d: " + 
cmd
 + " " + 
köôArgs
);

206 
Shñl
.
	`execComm™d
(
cmd
, 
köôArgs
);

208 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

209 i‡(
ªåy
 > 0) {

210 --
ªåy
;

212 
åy
 {

213 
Thªad
.
	`¶ìp
(10 * 1000);

214 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
õ
) {

215 
LOG
.
	`îr‹
("Interrupted whileÑenewing TGT,Éxiting LoginÅhread");

219 
LOG
.
	`w¨n
("CouldÇŸÑíew TGT duêtÿ¥obÀmÑu¬ög shñ»comm™d: '" + 
cmd


220 + " " + 
köôArgs
 + "'" + ";Éx˚±i⁄ was:" + 
e
 + ". ExitingÑefreshÅhread.",e);

226 
åy
 {

227 
ªåy
 = 1;

228 
ªåy
 >= 0) {

229 
åy
 {

230 
	`ªLogö
();

232 } 
	`ˇtch
 (
LogöEx˚±i⁄
 
À
) {

233 i‡(
ªåy
 > 0) {

234 --
ªåy
;

236 
åy
 {

237 
Thªad
.
	`¶ìp
(10 * 1000);

238 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

239 
LOG
.
	`îr‹
("I¡îru±ed durögÜogöÑëryá·î LogöEx˚±i⁄:", 
À
);

240 
throw
 
À
;

243 
LOG
.
	`îr‹
("CouldÇŸÑe‰esh TGT f‹ÖröcùÆ: " + 
¥öcùÆ
 + ".", 
À
);

247 } 
	`ˇtch
 (
LogöEx˚±i⁄
 
À
) {

248 
LOG
.
	`îr‹
("FaûedÅÿª‰esh TGT:Ñe‰eshÅhªadÉxôögÇow.",
À
);

254 
t
.
	`£tD´m⁄
(
åue
);

257 
public
 
	$°¨tThªadIfNìded
() {

259 i‡(
t
 !
nuŒ
) {

260 
t
.
	`°¨t
();

262 
	}
}

264 
public
 
	$shutdown
() {

265 i‡((
t
 !
nuŒ
Ë&& (t.
	`isAlive
())) {

266 
t
.
	`öãºu±
();

267 
åy
 {

268 
t
.
	`joö
();

269 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

270 
LOG
.
	`w¨n
("îr‹ whûêwaôög f‹ LogöÅhªadÅÿshutdown: " + 
e
);

273 
	}
}

275 
public
 
Subje˘
 
	$gëSubje˘
() {

276  
subje˘
;

277 
	}
}

279 
public
 
Såög
 
	$gëLogöC⁄ãxtName
() {

280  
logöC⁄ãxtName
;

281 
	}
}

283 
¥iv©e
 
synchr⁄ized
 
LogöC⁄ãxt
 
	$logö
(
föÆ
 
Såög
 
logöC⁄ãxtName
Ë
throws
 
LogöEx˚±i⁄
 {

284 i‡(
logöC⁄ãxtName
 =
nuŒ
) {

285 
throw
 
√w
 
	`LogöEx˚±i⁄
("loginContextÇame (JAAS file section header) wasÇull. " +

287 
Sy°em
.
	`gëPr›îty
("java.security.login.auth.config") +

288 "Ë™d you∏" + 
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
 + "(=" +

289 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "Client") + ")");

291 
LogöC⁄ãxt
 
logöC⁄ãxt
 = 
√w
 
	`LogöC⁄ãxt
(
logöC⁄ãxtName
,
ˇŒbackH™dÀr
);

292 
logöC⁄ãxt
.
	`logö
();

293 
LOG
.
	`öfo
("successfullyÜogged in.");

294  
logöC⁄ãxt
;

295 
	}
}

298 
¥iv©e
 
	$gëRe‰eshTime
(
KîbîosTickë
 
tgt
) {

299 
°¨t
 = 
tgt
.
	`gëSèπTime
().
	`gëTime
();

300 
expúes
 = 
tgt
.
	`gëEndTime
().
	`gëTime
();

301 
LOG
.
	`öfo
("TGT vÆid sèπögát: " + 
tgt
.
	`gëSèπTime
().
	`toSåög
());

302 
LOG
.
	`öfo
("TGTÉxpúes: " + 
tgt
.
	`gëEndTime
().
	`toSåög
());

303 
¥›o£dRe‰esh
 = 
°¨t
 + (Ë((
expúes
 - start) *

304 (
TICKET_RENEW_WINDOW
 + (
TICKET_RENEW_JITTER
 * 
∫g
.
	`√xtDoubÀ
())));

305 i‡(
¥›o£dRe‰esh
 > 
expúes
) {

307  
Sy°em
.
	`cuºítTimeMûlis
();

310  
¥›o£dRe‰esh
;

312 
	}
}

314 
¥iv©e
 
synchr⁄ized
 
KîbîosTickë
 
	$gëTGT
() {

315 
Së
<
KîbîosTickë
> 
tickës
 = 
subje˘
.
	`gëPriv©eCªdítüls
(KîbîosTickë.
˛ass
);

316 
KîbîosTickë
 
tickë
: 
tickës
) {

317 
KîbîosPröcùÆ
 
£rvî
 = 
tickë
.
	`gëSîvî
();

318 i‡(
£rvî
.
	`gëName
().
	`equÆs
("krbtgt/" + sîvî.
	`gëRólm
() + "@" + server.getRealm())) {

319 
LOG
.
	`debug
("FoundÅgà" + 
tickë
 + ".");

320  
tickë
;

323  
nuŒ
;

324 
	}
}

326 
¥iv©e
 
boﬁón
 
	$hasSufficõ¡TimeEœp£d
() {

327 
now
 = 
Sy°em
.
	`cuºítTimeMûlis
();

328 i‡(
now
 - 
	`gëLa°Logö
(Ë< 
MIN_TIME_BEFORE_RELOGIN
 ) {

329 
LOG
.
	`w¨n
("NotáttemptingÅoÑe-login sinceÅheÜastÑe-login was " +

330 "©ãm±edÜes†th™ " + (
MIN_TIME_BEFORE_RELOGIN
/1000) + " seconds"+

332  
Ál£
;

335 
	`£tLa°Logö
(
now
);

336  
åue
;

337 
	}
}

343 
¥iv©e
 
LogöC⁄ãxt
 
	$gëLogö
() {

344  
logö
;

345 
	}
}

351 
¥iv©e
 
	$£tLogö
(
LogöC⁄ãxt
 
logö
) {

352 
this
.
logö
 =Üogin;

353 
	}
}

359 
¥iv©e
 
	$£tLa°Logö
(
time
) {

360 
œ°Logö
 = 
time
;

361 
	}
}

367 
¥iv©e
 
	$gëLa°Logö
() {

368  
œ°Logö
;

369 
	}
}

376 
¥iv©e
 
synchr⁄ized
 
	$ªLogö
()

377 
throws
 
LogöEx˚±i⁄
 {

378 i‡(!
isKrbTickë
) {

381 
LogöC⁄ãxt
 
logö
 = 
	`gëLogö
();

382 i‡(
logö
 =
nuŒ
) {

383 
throw
 
√w
 
	`LogöEx˚±i⁄
("login must be done first");

385 i‡(!
	`hasSufficõ¡TimeEœp£d
()) {

388 
LOG
.
	`öfo
("InôütögÜogouàf‹ " + 
¥öcùÆ
);

389 
	`synchr⁄ized
 (
Logö
.
˛ass
) {

393 
logö
.
	`logout
();

396 
logö
 = 
√w
 
	`LogöC⁄ãxt
(
logöC⁄ãxtName
, 
	`gëSubje˘
());

397 
LOG
.
	`öfo
("InôütögÑe-logö f‹ " + 
¥öcùÆ
);

398 
logö
.
	`logö
();

399 
	`£tLogö
(
logö
);

401 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/MultiResponse.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eRe•⁄£
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gMu…iHódî
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aRe•⁄£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gEº‹Re•⁄£
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

40 
public
 
˛ass
 
Mu…iRe•⁄£
 
im∂emíts
 
	gRec‹d
, 
	gIãøbÀ
<
	gOpResu…
> {

41 
¥iv©e
 
	gLi°
<
	gOpResu…
> 
	gªsu…s
 = 
√w
 
AºayLi°
<
OpResu…
>();

43 
public
 
add
(
OpResu…
 
x
) {

44 
	gªsu…s
.
add
(
x
);

47 @
Ovîride


48 
public
 
	gIãøt‹
<
	gOpResu…
> 
ôî©‹
() {

49  
	gªsu…s
.
ôî©‹
();

52 
public
 
size
() {

53  
	gªsu…s
.
size
();

56 @
Ovîride


57 
public
 
£rülize
(
OuçutArchive
 
¨chive
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
 {

58 
	g¨chive
.
°¨tRec‹d
(
this
, 
èg
);

60 
	gödex
 = 0;

61 
OpResu…
 
	gªsu…
 : 
ªsu…s
) {

62 
îr
 = 
ªsu…
.
gëTy≥
(Ë=
ZooDefs
.
OpCode
.
îr‹
 ? ((
OpResu…
.
Eº‹Resu…
Ïesu…).
gëEº
() : 0;

64 
√w
 
Mu…iHódî
(
ªsu…
.
gëTy≥
(), 
Ál£
, 
îr
).
£rülize
(
¨chive
, 
èg
);

66 
	gªsu…
.
gëTy≥
()) {

67 
	gZooDefs
.
	gOpCode
.
	g¸óã
:

68 
√w
 
Cª©eRe•⁄£
(((
OpResu…
.
Cª©eResu…
Ë
ªsu…
).
gëP©h
()).
£rülize
(
¨chive
, 
èg
);

70 
	gZooDefs
.
	gOpCode
.
	gdñëe
:

71 
ZooDefs
.
OpCode
.
check
:

73 
	gZooDefs
.
	gOpCode
.
	g£tD©a
:

74 
√w
 
SëD©aRe•⁄£
(((
OpResu…
.
SëD©aResu…
Ë
ªsu…
).
gëSèt
()).
£rülize
(
¨chive
, 
èg
);

76 
	gZooDefs
.
	gOpCode
.
	gîr‹
:

77 
√w
 
Eº‹Re•⁄£
(((
OpResu…
.
Eº‹Resu…
Ë
ªsu…
).
gëEº
()).
£rülize
(
¨chive
, 
èg
);

80 
throw
 
√w
 
IOEx˚±i⁄
("InvÆidÅy≥ " + 
ªsu…
.
gëTy≥
() + " in MultiResponse");

83 
√w
 
Mu…iHódî
(-1, 
åue
, -1).
£rülize
(
¨chive
, 
èg
);

84 
	g¨chive
.
ídRec‹d
(
this
, 
èg
);

87 @
Ovîride


88 
public
 
de£rülize
(
I≈utArchive
 
¨chive
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
 {

89 
	gªsu…s
 = 
√w
 
AºayLi°
<
OpResu…
>();

91 
	g¨chive
.
°¨tRec‹d
(
èg
);

92 
Mu…iHódî
 
	gh
 = 
√w
 MultiHeader();

93 
	gh
.
de£rülize
(
¨chive
, 
èg
);

94 !
	gh
.
gëD⁄e
()) {

95 
	gh
.
gëTy≥
()) {

96 
	gZooDefs
.
	gOpCode
.
	g¸óã
:

97 
Cª©eRe•⁄£
 
¸
 = 
√w
 CreateResponse();

98 
	g¸
.
de£rülize
(
¨chive
, 
èg
);

99 
	gªsu…s
.
add
(
√w
 
OpResu…
.
Cª©eResu…
(
¸
.
gëP©h
()));

102 
	gZooDefs
.
	gOpCode
.
	gdñëe
:

103 
ªsu…s
.
add
(
√w
 
OpResu…
.
DñëeResu…
());

106 
	gZooDefs
.
	gOpCode
.
	g£tD©a
:

107 
SëD©aRe•⁄£
 
sdr
 = 
√w
 SetDataResponse();

108 
	gsdr
.
de£rülize
(
¨chive
, 
èg
);

109 
	gªsu…s
.
add
(
√w
 
OpResu…
.
SëD©aResu…
(
sdr
.
gëSèt
()));

112 
	gZooDefs
.
	gOpCode
.
	gcheck
:

113 
ªsu…s
.
add
(
√w
 
OpResu…
.
CheckResu…
());

116 
	gZooDefs
.
	gOpCode
.
	gîr‹
:

118 
Eº‹Re•⁄£
 
î
 = 
√w
 ErrorResponse();

119 
	gî
.
de£rülize
(
¨chive
, 
èg
);

120 
	gªsu…s
.
add
(
√w
 
OpResu…
.
Eº‹Resu…
(
î
.
gëEº
()));

124 
throw
 
√w
 
IOEx˚±i⁄
("InvÆidÅy≥ " + 
h
.
gëTy≥
() + " in MultiResponse");

126 
	gh
.
de£rülize
(
¨chive
, 
èg
);

128 
	g¨chive
.
ídRec‹d
(
èg
);

131 
public
 
	gLi°
<
	gOpResu…
> 
gëResu…Li°
() {

132  
	gªsu…s
;

135 @
Ovîride


136 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

137 i‡(
	gthis
 =
o
Ë 
åue
;

138 i‡(!(
o
 
ö°™˚of
 
	gMu…iRe•⁄£
)Ë 
	gÁl£
;

140 
Mu…iRe•⁄£
 
	gŸhî
 = (Mu…iRe•⁄£Ë
o
;

142 i‡(
	gªsu…s
 !
nuŒ
) {

143 
Iãøt‹
<
OpResu…
> 
i
 = 
Ÿhî
.
ªsu…s
.
ôî©‹
();

144 
OpResu…
 
	gªsu…
 : 
ªsu…s
) {

145 i‡(
i
.
hasNext
()) {

146 i‡(!
ªsu…
.
equÆs
(
i
.
√xt
())) {

147  
Ál£
;

150  
	gÁl£
;

153  !
	gi
.
hasNext
();

155  
	gŸhî
.
	gªsu…s
 =
nuŒ
;

158 @
Ovîride


159 
public
 
hashCode
() {

160 
	ghash
 = 
ªsu…s
.
size
();

161 
OpResu…
 
	gªsu…
 : 
ªsu…s
) {

162 
hash
 = (hash * 35Ë+ 
ªsu…
.
hashCode
();

164  
	ghash
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/MultiTransactionRecord.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.*;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

37 
public
 
˛ass
 
Mu…iTønß˘i⁄Rec‹d
 
im∂emíts
 
	gRec‹d
, 
	gIãøbÀ
<
	gOp
> {

38 
¥iv©e
 
	gLi°
<
	gOp
> 
	g›s
 = 
√w
 
AºayLi°
<
Op
>();

40 
public
 
Mu…iTønß˘i⁄Rec‹d
() {

43 
public
 
Mu…iTønß˘i⁄Rec‹d
(
IãøbÀ
<
Op
> 
›s
) {

44 
Op
 
	g›
 : 
›s
) {

45 
add
(
›
);

49 @
Ovîride


50 
public
 
	gIãøt‹
<
	gOp
> 
ôî©‹
() {

51  
	g›s
.
ôî©‹
() ;

54 
public
 
add
(
Op
 
›
) {

55 
	g›s
.
add
(
›
);

58 
public
 
size
() {

59  
	g›s
.
size
();

62 @
Ovîride


63 
public
 
£rülize
(
OuçutArchive
 
¨chive
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
 {

64 
	g¨chive
.
°¨tRec‹d
(
this
, 
èg
);

65 
	gödex
 = 0 ;

66 
Op
 
	g›
 : 
›s
) {

67 
Mu…iHódî
 
h
 = 
√w
 Mu…iHódî(
›
.
gëTy≥
(), 
Ál£
, -1);

68 
	gh
.
£rülize
(
¨chive
, 
èg
);

69 
	g›
.
gëTy≥
()) {

70 
	gZooDefs
.
	gOpCode
.
	g¸óã
:

71 
›
.
toReque°Rec‹d
().
£rülize
(
¨chive
, 
èg
);

73 
	gZooDefs
.
	gOpCode
.
	gdñëe
:

74 
›
.
toReque°Rec‹d
().
£rülize
(
¨chive
, 
èg
);

76 
	gZooDefs
.
	gOpCode
.
	g£tD©a
:

77 
›
.
toReque°Rec‹d
().
£rülize
(
¨chive
, 
èg
);

79 
	gZooDefs
.
	gOpCode
.
	gcheck
:

80 
›
.
toReque°Rec‹d
().
£rülize
(
¨chive
, 
èg
);

83 
throw
 
√w
 
IOEx˚±i⁄
("InvalidÅype of op");

86 
√w
 
Mu…iHódî
(-1, 
åue
, -1).
£rülize
(
¨chive
, 
èg
);

87 
	g¨chive
.
ídRec‹d
(
this
, 
èg
);

90 @
Ovîride


91 
public
 
de£rülize
(
I≈utArchive
 
¨chive
, 
Såög
 
èg
Ë
throws
 
	gIOEx˚±i⁄
 {

92 
	g¨chive
.
°¨tRec‹d
(
èg
);

93 
Mu…iHódî
 
	gh
 = 
√w
 MultiHeader();

94 
	gh
.
de£rülize
(
¨chive
, 
èg
);

96 !
	gh
.
gëD⁄e
()) {

97 
	gh
.
gëTy≥
()) {

98 
	gZooDefs
.
	gOpCode
.
	g¸óã
:

99 
Cª©eReque°
 
¸
 = 
√w
 CreateRequest();

100 
	g¸
.
de£rülize
(
¨chive
, 
èg
);

101 
add
(
Op
.
¸óã
(
¸
.
gëP©h
(), cr.
gëD©a
(), cr.
gëA˛
(), cr.
gëFœgs
()));

103 
	gZooDefs
.
	gOpCode
.
	gdñëe
:

104 
DñëeReque°
 
dr
 = 
√w
 DeleteRequest();

105 
	gdr
.
de£rülize
(
¨chive
, 
èg
);

106 
add
(
Op
.
dñëe
(
dr
.
gëP©h
(), dr.
gëVîsi⁄
()));

108 
	gZooDefs
.
	gOpCode
.
	g£tD©a
:

109 
SëD©aReque°
 
sdr
 = 
√w
 SetDataRequest();

110 
	gsdr
.
de£rülize
(
¨chive
, 
èg
);

111 
add
(
Op
.
£tD©a
(
sdr
.
gëP©h
(), sdr.
gëD©a
(), sdr.
gëVîsi⁄
()));

113 
	gZooDefs
.
	gOpCode
.
	gcheck
:

114 
CheckVîsi⁄Reque°
 
cvr
 = 
√w
 CheckVersionRequest();

115 
	gcvr
.
de£rülize
(
¨chive
, 
èg
);

116 
add
(
Op
.
check
(
cvr
.
gëP©h
(), cvr.
gëVîsi⁄
()));

119 
throw
 
√w
 
IOEx˚±i⁄
("InvalidÅype of op");

121 
	gh
.
de£rülize
(
¨chive
, 
èg
);

123 
	g¨chive
.
ídRec‹d
(
èg
);

126 @
Ovîride


127 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

128 i‡(
	gthis
 =
o
Ë 
åue
;

129 i‡(!(
o
 
ö°™˚of
 
	gMu…iTønß˘i⁄Rec‹d
)Ë 
	gÁl£
;

131 
Mu…iTønß˘i⁄Rec‹d
 
	gth©
 = (Mu…iTønß˘i⁄Rec‹dË
o
;

133 i‡(
	g›s
 !
nuŒ
) {

134 
Iãøt‹
<
Op
> 
Ÿhî
 = 
th©
.
›s
.
ôî©‹
();

135 
Op
 
	g›
 : 
›s
) {

136 
boﬁón
 
hasM‹eD©a
 = 
Ÿhî
.
hasNext
();

137 i‡(!
	ghasM‹eD©a
) {

138  
	gÁl£
;

140 
Op
 
	gŸhîOp
 = 
Ÿhî
.
√xt
();

141 i‡(!
	g›
.
equÆs
(
ŸhîOp
)) {

142  
	gÁl£
;

145  !
	gŸhî
.
hasNext
();

147  
	gth©
.
	g›s
 =
nuŒ
;

152 @
Ovîride


153 
public
 
hashCode
() {

154 
	gh
 = 1023;

155 
Op
 
	g›
 : 
›s
) {

156 
h
 = h * 25 + 
›
.
hashCode
();

158  
	gh
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Op.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCheckVîsi⁄Reque°
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eReque°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gDñëeReque°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aReque°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

43 
public
 
ab°ø˘
 cœs†
	cOp
 {

44 
¥iv©e
 
	mty≥
;

45 
¥iv©e
 
Såög
 
	m∑th
;

48 
¥iv©e
 
	$Op
(
ty≥
, 
Såög
 
∑th
) {

49 
this
.
ty≥
 =Åype;

50 
this
.
∑th
 =Öath;

68 
public
 
Op
 
	`¸óã
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
Li°
<
ACL
> 
a˛
, 
Êags
) {

69  
√w
 
	`Cª©e
(
∑th
, 
d©a
, 
a˛
, 
Êags
);

70 
	}
}

86 
public
 
Op
 
¸óã
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
Li°
<
ACL
> 
a˛
, 
Cª©eMode
 
¸óãMode
) {

87  
√w
 
Cª©e
(
∑th
, 
d©a
, 
a˛
, 
¸óãMode
);

99 
public
 
Op
 
	$dñëe
(
Såög
 
∑th
, 
vîsi⁄
) {

100  
√w
 
	`Dñëe
(
∑th
, 
vîsi⁄
);

101 
	}
}

114 
public
 
Op
 
	$£tD©a
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
vîsi⁄
) {

115  
√w
 
	`SëD©a
(
∑th
, 
d©a
, 
vîsi⁄
);

116 
	}
}

131 
public
 
Op
 
	$check
(
Såög
 
∑th
, 
vîsi⁄
) {

132  
√w
 
	`Check
(
∑th
, 
vîsi⁄
);

133 
	}
}

140 
public
 
	$gëTy≥
() {

141  
ty≥
;

142 
	}
}

148 
public
 
Såög
 
	$gëP©h
() {

149  
∑th
;

150 
	}
}

156 
public
 
ab°ø˘
 
Rec‹d
 
toReque°Rec‹d
() ;

163 
ab°ø˘
 
Op
 
wôhChroŸ
(
Såög
 
addRoŸPªfix
);

168 
public
 ˛as†
	cCª©e
 
exãnds
 
	gOp
 {

169 
¥iv©e
 
	gbyã
[] 
	gd©a
;

170 
¥iv©e
 
	gLi°
<
	gACL
> 
	ga˛
;

171 
¥iv©e
 
	gÊags
;

173 
¥iv©e
 
Cª©e
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
Li°
<
ACL
> 
a˛
, 
Êags
) {

174 
su≥r
(
ZooDefs
.
OpCode
.
¸óã
, 
∑th
);

175 
	gthis
.
	gd©a
 = 
d©a
;

176 
	gthis
.
	ga˛
 = 
a˛
;

177 
	gthis
.
	gÊags
 = 
Êags
;

180 
¥iv©e
 
Cª©e
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
Li°
<
ACL
> 
a˛
, 
Cª©eMode
 
¸óãMode
) {

181 
su≥r
(
ZooDefs
.
OpCode
.
¸óã
, 
∑th
);

182 
	gthis
.
	gd©a
 = 
d©a
;

183 
	gthis
.
	ga˛
 = 
a˛
;

184 
	gthis
.
	gÊags
 = 
¸óãMode
.
toFœg
();

187 @
Ovîride


188 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

189 i‡(
	gthis
 =
o
Ë 
åue
;

190 i‡(!(
o
 
ö°™˚of
 
	gCª©e
)Ë 
	gÁl£
;

192 
Cª©e
 
	g›
 = (Cª©eË
o
;

194 
boﬁón
 
	ga˛EquÆs
 = 
åue
;

195 
	gIãøt‹
<
	gACL
> 
	gi
 = 
›
.
a˛
.
ôî©‹
();

196 
ACL
 
	ga˛
 : 
›
.
a˛
) {

197 
boﬁón
 
hasM‹eD©a
 = 
i
.
hasNext
();

198 i‡(!
	ghasM‹eD©a
) {

199 
	ga˛EquÆs
 = 
Ál£
;

202 
ACL
 
	gŸhîA˛
 = 
i
.
√xt
();

203 i‡(!
	ga˛
.
equÆs
(
ŸhîA˛
)) {

204 
	ga˛EquÆs
 = 
Ál£
;

208  !
	gi
.
hasNext
(Ë&& 
gëTy≥
(Ë=
›
.gëTy≥(Ë&& 
Aºays
.
equÆs
(
d©a
, op.d©aË&& 
	gÊags
 =›.
Êags
 && 
a˛EquÆs
;

211 @
Ovîride


212 
public
 
hashCode
() {

213  
gëTy≥
(Ë+ 
gëP©h
().
hashCode
(Ë+ 
	gAºays
.hashCode(
d©a
);

216 @
Ovîride


217 
public
 
Rec‹d
 
toReque°Rec‹d
() {

218  
√w
 
Cª©eReque°
(
gëP©h
(), 
d©a
, 
a˛
, 
Êags
);

221 @
Ovîride


222 
Op
 
wôhChroŸ
(
Såög
 
∑th
) {

223  
√w
 
Cª©e
(
∑th
, 
d©a
, 
a˛
, 
Êags
);

227 
public
 ˛as†
	cDñëe
 
exãnds
 
	gOp
 {

228 
¥iv©e
 
	gvîsi⁄
;

230 
¥iv©e
 
Dñëe
(
Såög
 
∑th
, 
vîsi⁄
) {

231 
su≥r
(
ZooDefs
.
OpCode
.
dñëe
, 
∑th
);

232 
	gthis
.
	gvîsi⁄
 = 
vîsi⁄
;

235 @
Ovîride


236 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

237 i‡(
	gthis
 =
o
Ë 
åue
;

238 i‡(!(
o
 
ö°™˚of
 
	gDñëe
)Ë 
	gÁl£
;

240 
Dñëe
 
	g›
 = (DñëeË
o
;

242  
gëTy≥
(Ë=
›
.gëTy≥(Ë&& 
vîsi⁄
 == op.version

243 && 
gëP©h
().
equÆs
(
›
.getPath());

246 @
Ovîride


247 
public
 
hashCode
() {

248  
gëTy≥
(Ë+ 
gëP©h
().
hashCode
(Ë+ 
	gvîsi⁄
;

251 @
Ovîride


252 
public
 
Rec‹d
 
toReque°Rec‹d
() {

253  
√w
 
DñëeReque°
(
gëP©h
(), 
vîsi⁄
);

256 @
Ovîride


257 
Op
 
wôhChroŸ
(
Såög
 
∑th
) {

258  
√w
 
Dñëe
(
∑th
, 
vîsi⁄
);

262 
public
 ˛as†
	cSëD©a
 
exãnds
 
	gOp
 {

263 
¥iv©e
 
	gbyã
[] 
	gd©a
;

264 
¥iv©e
 
	gvîsi⁄
;

266 
¥iv©e
 
SëD©a
(
Såög
 
∑th
, 
byã
[] 
d©a
, 
vîsi⁄
) {

267 
su≥r
(
ZooDefs
.
OpCode
.
£tD©a
, 
∑th
);

268 
	gthis
.
	gd©a
 = 
d©a
;

269 
	gthis
.
	gvîsi⁄
 = 
vîsi⁄
;

272 @
Ovîride


273 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

274 i‡(
	gthis
 =
o
Ë 
åue
;

275 i‡(!(
o
 
ö°™˚of
 
	gSëD©a
)Ë 
	gÁl£
;

277 
SëD©a
 
	g›
 = (SëD©aË
o
;

279  
gëTy≥
(Ë=
›
.gëTy≥(Ë&& 
vîsi⁄
 == op.version

280 && 
gëP©h
().
equÆs
(
›
.gëP©h()Ë&& 
Aºays
.equÆs(
d©a
, op.data);

283 @
Ovîride


284 
public
 
hashCode
() {

285  
gëTy≥
(Ë+ 
gëP©h
().
hashCode
(Ë+ 
	gAºays
.hashCode(
d©a
Ë+ 
	gvîsi⁄
;

288 @
Ovîride


289 
public
 
Rec‹d
 
toReque°Rec‹d
() {

290  
√w
 
SëD©aReque°
(
gëP©h
(), 
d©a
, 
vîsi⁄
);

293 @
Ovîride


294 
Op
 
wôhChroŸ
(
Såög
 
∑th
) {

295  
√w
 
SëD©a
(
∑th
, 
d©a
, 
vîsi⁄
);

299 
public
 ˛as†
	cCheck
 
exãnds
 
	gOp
 {

300 
¥iv©e
 
	gvîsi⁄
;

302 
¥iv©e
 
Check
(
Såög
 
∑th
, 
vîsi⁄
) {

303 
su≥r
(
ZooDefs
.
OpCode
.
check
, 
∑th
);

304 
	gthis
.
	gvîsi⁄
 = 
vîsi⁄
;

307 @
Ovîride


308 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

309 i‡(
	gthis
 =
o
Ë 
åue
;

310 i‡(!(
o
 
ö°™˚of
 
	gCheck
)Ë 
	gÁl£
;

312 
Check
 
	g›
 = (CheckË
o
;

314  
gëTy≥
(Ë=
›
.gëTy≥(Ë&& 
gëP©h
().
equÆs
(›.gëP©h()Ë&& 
vîsi⁄
 == op.version;

317 @
Ovîride


318 
public
 
hashCode
() {

319  
gëTy≥
(Ë+ 
gëP©h
().
hashCode
(Ë+ 
	gvîsi⁄
;

322 @
Ovîride


323 
public
 
Rec‹d
 
toReque°Rec‹d
() {

324  
√w
 
CheckVîsi⁄Reque°
(
gëP©h
(), 
vîsi⁄
);

327 @
Ovîride


328 
Op
 
wôhChroŸ
(
Såög
 
∑th
) {

329  
√w
 
Check
(
∑th
, 
vîsi⁄
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/OpResult.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

26 
public
 
ab°ø˘
 cœs†
	cOpResu…
 {

27 
¥iv©e
 
	mty≥
;

29 
¥iv©e
 
	$OpResu…
(
ty≥
) {

30 
this
.
ty≥
 =Åype;

40 
public
 
	$gëTy≥
() {

41  
ty≥
;

42 
	}
}

49 
public
 ˛as†
	cCª©eResu…
 
exãnds
 
	gOpResu…
 {

50 
¥iv©e
 
Såög
 
	g∑th
;

52 
public
 
Cª©eResu…
(
Såög
 
∑th
) {

53 
su≥r
(
ZooDefs
.
OpCode
.
¸óã
);

54 
	gthis
.
	g∑th
 = 
∑th
;

57 
public
 
Såög
 
gëP©h
() {

58  
	g∑th
;

61 @
Ovîride


62 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

63 i‡(
	gthis
 =
o
Ë 
åue
;

64 i‡(!(
o
 
ö°™˚of
 
	gCª©eResu…
)Ë 
	gÁl£
;

66 
Cª©eResu…
 
	gŸhî
 = (Cª©eResu…Ë
o
;

67  
gëTy≥
(Ë=
Ÿhî
.gëTy≥(Ë&& 
∑th
.
equÆs
(Ÿhî.
gëP©h
());

70 @
Ovîride


71 
public
 
hashCode
() {

72  
gëTy≥
(Ë* 35 + 
	g∑th
.
hashCode
();

79 
public
 ˛as†
	cDñëeResu…
 
exãnds
 
	gOpResu…
 {

80 
public
 
DñëeResu…
() {

81 
su≥r
(
ZooDefs
.
OpCode
.
dñëe
);

84 @
Ovîride


85 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

86 i‡(
	gthis
 =
o
Ë 
åue
;

87 i‡(!(
o
 
ö°™˚of
 
	gDñëeResu…
)Ë 
	gÁl£
;

89 
DñëeResu…
 
	g›Resu…
 = (DñëeResu…Ë
o
;

90  
gëTy≥
(Ë=
›Resu…
.getType();

93 @
Ovîride


94 
public
 
hashCode
() {

95  
gëTy≥
();

103 
public
 ˛as†
	cSëD©aResu…
 
exãnds
 
	gOpResu…
 {

104 
¥iv©e
 
Sèt
 
	g°©
;

106 
public
 
SëD©aResu…
(
Sèt
 
°©
) {

107 
su≥r
(
ZooDefs
.
OpCode
.
£tD©a
);

108 
	gthis
.
	g°©
 = 
°©
;

111 
public
 
Sèt
 
gëSèt
() {

112  
	g°©
;

115 @
Ovîride


116 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

117 i‡(
	gthis
 =
o
Ë 
åue
;

118 i‡(!(
o
 
ö°™˚of
 
	gSëD©aResu…
)Ë 
	gÁl£
;

120 
SëD©aResu…
 
	gŸhî
 = (SëD©aResu…Ë
o
;

121  
gëTy≥
(Ë=
Ÿhî
.gëTy≥(Ë&& 
°©
.
gëMzxid
() == other.stat.getMzxid();

124 @
Ovîride


125 
public
 
hashCode
() {

126  (Ë(
gëTy≥
(Ë* 35 + 
	g°©
.
gëMzxid
());

133 
public
 ˛as†
	cCheckResu…
 
exãnds
 
	gOpResu…
 {

134 
public
 
CheckResu…
() {

135 
su≥r
(
ZooDefs
.
OpCode
.
check
);

138 @
Ovîride


139 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

140 i‡(
	gthis
 =
o
Ë 
åue
;

141 i‡(!(
o
 
ö°™˚of
 
	gCheckResu…
)Ë 
	gÁl£
;

143 
CheckResu…
 
	gŸhî
 = (CheckResu…Ë
o
;

144  
gëTy≥
(Ë=
Ÿhî
.getType();

147 @
Ovîride


148 
public
 
hashCode
() {

149  
gëTy≥
();

159 
public
 ˛as†
	cEº‹Resu…
 
exãnds
 
	gOpResu…
 {

160 
¥iv©e
 
	gîr
;

162 
public
 
Eº‹Resu…
(
îr
) {

163 
su≥r
(
ZooDefs
.
OpCode
.
îr‹
);

164 
	gthis
.
	gîr
 = 
îr
;

167 
public
 
gëEº
() {

168  
	gîr
;

171 @
Ovîride


172 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

173 i‡(
	gthis
 =
o
Ë 
åue
;

174 i‡(!(
o
 
ö°™˚of
 
	gEº‹Resu…
)Ë 
	gÁl£
;

176 
Eº‹Resu…
 
	gŸhî
 = (Eº‹Resu…Ë
o
;

177  
gëTy≥
(Ë=
Ÿhî
.gëTy≥(Ë&& 
îr
 =Ÿhî.
gëEº
();

180 @
Ovîride


181 
public
 
hashCode
() {

182  
gëTy≥
(Ë* 35 + 
	gîr
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Quotas.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

26 
public
 cœs†
	cQuŸas
 {

29 
public
 
föÆ
 
Såög
 
	m¥ocZookì≥r
 = "/zookeeper";

33 
public
 
föÆ
 
Såög
 
	mquŸaZookì≥r
 = "/zookeeper/quota";

39 
public
 
föÆ
 
Såög
 
	mlimôNode
 = "zookeeper_limits";

45 
public
 
föÆ
 
Såög
 
	m°©Node
 = "zookeeper_stats";

53 
public
 
Såög
 
	$quŸaP©h
(
Såög
 
∑th
) {

54  
quŸaZookì≥r
 + 
∑th
 +

55 "/" + 
limôNode
;

64 
public
 
Såög
 
	$°©P©h
(
Såög
 
∑th
) {

65  
quŸaZookì≥r
 + 
∑th
 + "/" +

66 
°©Node
;

67 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ServerAdminClient.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gSåögTokíizî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

34 
public
 cœs†
	cSîvîAdmöClõ¡
 {

35 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
SîvîAdmöClõ¡
.
˛ass
);

37 
¥iv©e
 
	$gëMask
(
Såög
 
mask
) {

38 
ªtv
 = 0;

39 i‡(
mask
.
	`equÆsIgn‹eCa£
("CLIENT_REQUEST_TRACE_MASK")) {

40 
ªtv
 = 
ZooTø˚
.
CLIENT_REQUEST_TRACE_MASK
;

41 } i‡(
mask
.
	`equÆsIgn‹eCa£
("CLIENT_DATA_PACKET_TRACE_MASK")) {

42 
ªtv
 = 
ZooTø˚
.
CLIENT_DATA_PACKET_TRACE_MASK
;

43 } i‡(
mask
.
	`equÆsIgn‹eCa£
("CLIENT_PING_TRACE_MASK")) {

44 
ªtv
 = 
ZooTø˚
.
CLIENT_PING_TRACE_MASK
;

45 } i‡(
mask
.
	`equÆsIgn‹eCa£
("SERVER_PACKET_TRACE_MASK")) {

46 
ªtv
 = 
ZooTø˚
.
SERVER_PACKET_TRACE_MASK
;

47 } i‡(
mask
.
	`equÆsIgn‹eCa£
("SESSION_TRACE_MASK")) {

48 
ªtv
 = 
ZooTø˚
.
SESSION_TRACE_MASK
;

49 } i‡(
mask
.
	`equÆsIgn‹eCa£
("EVENT_DELIVERY_TRACE_MASK")) {

50 
ªtv
 = 
ZooTø˚
.
EVENT_DELIVERY_TRACE_MASK
;

51 } i‡(
mask
.
	`equÆsIgn‹eCa£
("SERVER_PING_TRACE_MASK")) {

52 
ªtv
 = 
ZooTø˚
.
SERVER_PING_TRACE_MASK
;

53 } i‡(
mask
.
	`equÆsIgn‹eCa£
("WARNING_TRACE_MASK")) {

54 
ªtv
 = 
ZooTø˚
.
WARNING_TRACE_MASK
;

56  
ªtv
;

59 
¥iv©e
 
	$gëMasks
(
Såög
 
masks
) {

60 
ªtv
 = 0;

61 
SåögTokíizî
 
°
 = 
√w
 
	`SåögTokíizî
(
masks
, "|");

62 
°
.
	`hasM‹eTokís
()) {

63 
Såög
 
mask
 = 
°
.
	`√xtTokí
().
	`åim
();

64 
ªtv
 =Ñëv | 
	`gëMask
(
mask
);

66  
ªtv
;

67 
	}
}

69 
public
 
	$ruok
(
Såög
 
ho°
, 
p‹t
) {

70 
Sockë
 
s
 = 
nuŒ
;

71 
åy
 {

72 
byã
[] 
ªqByãs
 = 
√w
 byte[4];

73 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

74 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("ruok".
	`gëByãs
()).
	`gëI¡
());

75 
s
 = 
√w
 
	`Sockë
();

76 
s
.
	`£tSoLögî
(
Ál£
, 10);

77 
s
.
	`£tSoTimeout
(20000);

78 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

80 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

81 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

83 
os
.
	`wrôe
(
ªqByãs
);

85 
byã
[] 
ªsByãs
 = 
√w
 byte[4];

87 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

88 
Såög
 
ªtv
 = 
√w
 
	`Såög
(
ªsByãs
);

89 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñëv=" + 
ªtv
);

90 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

91 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

92 } 
föÆly
 {

93 i‡(
s
 !
nuŒ
) {

94 
åy
 {

95 
s
.
	`˛o£
();

96 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

97 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

101 
	}
}

103 
public
 
	$dump
(
Såög
 
ho°
, 
p‹t
) {

104 
Sockë
 
s
 = 
nuŒ
;

105 
åy
 {

106 
byã
[] 
ªqByãs
 = 
√w
 byte[4];

107 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

108 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("dump".
	`gëByãs
()).
	`gëI¡
());

109 
s
 = 
√w
 
	`Sockë
();

110 
s
.
	`£tSoLögî
(
Ál£
, 10);

111 
s
.
	`£tSoTimeout
(20000);

112 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

114 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

115 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

117 
os
.
	`wrôe
(
ªqByãs
);

119 
byã
[] 
ªsByãs
 = 
√w
 byte[1024];

121 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

122 
Såög
 
ªtv
 = 
√w
 
	`Såög
(
ªsByãs
);

123 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñëv=" + 
ªtv
);

124 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

125 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

126 } 
föÆly
 {

127 i‡(
s
 !
nuŒ
) {

128 
åy
 {

129 
s
.
	`˛o£
();

130 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

131 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

135 
	}
}

137 
public
 
	$°©
(
Såög
 
ho°
, 
p‹t
) {

138 
Sockë
 
s
 = 
nuŒ
;

139 
åy
 {

140 
byã
[] 
ªqByãs
 = 
√w
 byte[4];

141 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

142 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("°©".
	`gëByãs
()).
	`gëI¡
());

143 
s
 = 
√w
 
	`Sockë
();

144 
s
.
	`£tSoLögî
(
Ál£
, 10);

145 
s
.
	`£tSoTimeout
(20000);

146 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

148 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

149 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

151 
os
.
	`wrôe
(
ªqByãs
);

153 
byã
[] 
ªsByãs
 = 
√w
 byte[1024];

155 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

156 
Såög
 
ªtv
 = 
√w
 
	`Såög
(
ªsByãs
);

157 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñëv=" + 
ªtv
);

158 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

159 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

160 } 
föÆly
 {

161 i‡(
s
 !
nuŒ
) {

162 
åy
 {

163 
s
.
	`˛o£
();

164 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

165 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

169 
	}
}

171 
public
 
	$kûl
(
Såög
 
ho°
, 
p‹t
) {

172 
Sockë
 
s
 = 
nuŒ
;

173 
åy
 {

174 
byã
[] 
ªqByãs
 = 
√w
 byte[4];

175 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

176 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("kûl".
	`gëByãs
()).
	`gëI¡
());

177 
s
 = 
√w
 
	`Sockë
();

178 
s
.
	`£tSoLögî
(
Ál£
, 10);

179 
s
.
	`£tSoTimeout
(20000);

180 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

182 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

183 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

185 
os
.
	`wrôe
(
ªqByãs
);

186 
byã
[] 
ªsByãs
 = 
√w
 byte[4];

188 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

189 
Såög
 
ªtv
 = 
√w
 
	`Såög
(
ªsByãs
);

190 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñëv=" + 
ªtv
);

191 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

192 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

193 } 
föÆly
 {

194 i‡(
s
 !
nuŒ
) {

195 
åy
 {

196 
s
.
	`˛o£
();

197 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

198 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

202 
	}
}

204 
public
 
	$£tTø˚Mask
(
Såög
 
ho°
, 
p‹t
, Såög 
åa˚MaskSå
) {

205 
Sockë
 
s
 = 
nuŒ
;

206 
åy
 {

207 
byã
[] 
ªqByãs
 = 
√w
 byte[12];

208 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

209 
åa˚Mask
 = 
L⁄g
.
	`∑r£L⁄g
(
åa˚MaskSå
, 8);

210 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("°mk".
	`gëByãs
()).
	`gëI¡
());

211 
ªq
.
	`putL⁄g
(
åa˚Mask
);

213 
s
 = 
√w
 
	`Sockë
();

214 
s
.
	`£tSoLögî
(
Ál£
, 10);

215 
s
.
	`£tSoTimeout
(20000);

216 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

218 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

219 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

221 
os
.
	`wrôe
(
ªqByãs
);

223 
byã
[] 
ªsByãs
 = 
√w
 byte[8];

225 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

226 
ByãBuf„r
 
ªs
 = ByãBuf„r.
	`wøp
(
ªsByãs
);

227 
ªtv
 = 
ªs
.
	`gëL⁄g
();

228 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñetv=0"

229 + 
L⁄g
.
	`toO˘ÆSåög
(
ªtv
) + " masks=0"

230 + 
L⁄g
.
	`toO˘ÆSåög
(
åa˚Mask
));

231 
	`as£π
 (
ªtv
 =
åa˚Mask
);

232 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

233 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

234 } 
föÆly
 {

235 i‡(
s
 !
nuŒ
) {

236 
åy
 {

237 
s
.
	`˛o£
();

238 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

239 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

243 
	}
}

245 
public
 
	$gëTø˚Mask
(
Såög
 
ho°
, 
p‹t
) {

246 
Sockë
 
s
 = 
nuŒ
;

247 
åy
 {

248 
byã
[] 
ªqByãs
 = 
√w
 byte[12];

249 
ByãBuf„r
 
ªq
 = ByãBuf„r.
	`wøp
(
ªqByãs
);

250 
ªq
.
	`putI¡
(
ByãBuf„r
.
	`wøp
("gtmk".
	`gëByãs
()).
	`gëI¡
());

252 
s
 = 
√w
 
	`Sockë
();

253 
s
.
	`£tSoLögî
(
Ál£
, 10);

254 
s
.
	`£tSoTimeout
(20000);

255 
s
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
, 
p‹t
));

257 
I≈utSåóm
 
is
 = 
s
.
	`gëI≈utSåóm
();

258 
OuçutSåóm
 
os
 = 
s
.
	`gëOuçutSåóm
();

260 
os
.
	`wrôe
(
ªqByãs
);

262 
byã
[] 
ªsByãs
 = 
√w
 byte[8];

264 
rc
 = 
is
.
	`ªad
(
ªsByãs
);

265 
ByãBuf„r
 
ªs
 = ByãBuf„r.
	`wøp
(
ªsByãs
);

266 
ªtv
 = 
ªs
.
	`gëL⁄g
();

267 
Sy°em
.
out
.
	`¥öén
("rc=" + 
rc
 + "Ñetv=0"

268 + 
L⁄g
.
	`toO˘ÆSåög
(
ªtv
));

269 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

270 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

271 } 
föÆly
 {

272 i‡(
s
 !
nuŒ
) {

273 
åy
 {

274 
s
.
	`˛o£
();

275 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

276 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

280 
	}
}

282 
¥iv©e
 
	$ußge
() {

283 
Sy°em
.
out


284 .
	`¥öén
("usage: java [-cp CLASSPATH] org.apache.zookeeper.ServerAdminClient "

287 
	}
}

289 
public
 
	$maö
(
Såög
[] 
¨gs
) {

290 i‡(
¨gs
.
Àngth
 < 3) {

291 
	`ußge
();

294 
Såög
 
ho°
 = 
¨gs
[0];

295 
p‹t
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[1]);

296 
Såög
 
›
 = 
¨gs
[2];

297 i‡(
›
.
	`equÆsIgn‹eCa£
("gettracemask")) {

298 
	`gëTø˚Mask
(
ho°
, 
p‹t
);

299 } i‡(
›
.
	`equÆsIgn‹eCa£
("settracemask")) {

300 
	`£tTø˚Mask
(
ho°
, 
p‹t
, 
¨gs
[3]);

301 } i‡(
›
.
	`equÆsIgn‹eCa£
("ruok")) {

302 
	`ruok
(
ho°
, 
p‹t
);

303 } i‡(
›
.
	`equÆsIgn‹eCa£
("kill")) {

304 
	`kûl
(
ho°
, 
p‹t
);

305 } i‡(
›
.
	`equÆsIgn‹eCa£
("stat")) {

306 
	`°©
(
ho°
, 
p‹t
);

307 } i‡(
›
.
	`equÆsIgn‹eCa£
("dump")) {

308 
	`dump
(
ho°
, 
p‹t
);

310 
Sy°em
.
out
.
	`¥öén
("Uƒecognized op: " + 
›
);

312 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Shell.java

31 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

33 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

34 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

35 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

36 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

38 
imp‹t
 
	gjava
.
	gutû
.
	gTimî
;

39 
imp‹t
 
	gjava
.
	gutû
.
	gTimîTask
;

40 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicBoﬁón
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

50 
ab°ø˘
 
public
 cœs†
	cShñl
 {

52 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
Shñl
.
˛ass
);

55 
public
 
föÆ
 
Såög
 
	mUSER_NAME_COMMAND
 = "whoami";

57 
public
 
	mSåög
[] 
	$gëGroupsComm™d
() {

58  
√w
 
Såög
[]{"bash", "-c", "groups"};

61 
public
 
Såög
[] 
	$gëGroupsF‹U£rComm™d
(
föÆ
 
Såög
 
u£r
) {

63  
√w
 
Såög
 [] {"bash", "-c", "id -G¿" + 
u£r
};

64 
	}
}

66 
public
 
föÆ
 
Såög
 
	gSET_PERMISSION_COMMAND
 = "chmod";

68 
public
 
föÆ
 
Såög
 
	gSET_OWNER_COMMAND
 = "chown";

69 
public
 
föÆ
 
Såög
 
	gSET_GROUP_COMMAND
 = "chgrp";

71 
public
 
	gSåög
[] 
	$gëGET_PERMISSION_COMMAND
() {

73  
√w
 
Såög
[] {(
WINDOWS
 ? "ls" : "/bin/ls"), "-ld"};

74 
	}
}

77 
¥Ÿe˘ed
 
	gtimeOutI¡îvÆ
 = 0L;

79 
¥iv©e
 
AtomicBoﬁón
 
	gtimedOut
;

82 
public
 
föÆ
 
Såög
 
	gULIMIT_COMMAND
 = "ulimit";

97 
public
 
	gSåög
[] 
	$gëUlimôMem‹yComm™d
(
mem‹yLimô
) {

99 i‡(
WINDOWS
) {

100  
nuŒ
;

103  
√w
 
Såög
[] {
ULIMIT_COMMAND
, "-v", Såög.
	`vÆueOf
(
mem‹yLimô
)};

104 
	}
}

107 
public
 
föÆ
 
boﬁón
 
	gWINDOWS


108 
Sy°em
.
gëPr›îty
("os.«me").
°¨tsWôh
("Windows");

110 
¥iv©e
 
	göãrvÆ
;

111 
¥iv©e
 
	gœ°Time
;

112 
¥iv©e
 
	gM≠
<
	gSåög
, Såög> 
	gívú⁄mít
;

113 
¥iv©e
 
Fûe
 
	gdú
;

114 
¥iv©e
 
Pro˚ss
 
	g¥o˚ss
;

115 
¥iv©e
 
	gexôCode
;

118 
¥iv©e
 vﬁ©ûê
AtomicBoﬁón
 
	gcom∂ëed
;

120 
public
 
	$Shñl
() {

121 
	`this
(0L);

122 
	}
}

128 
public
 
	$Shñl
–
öãrvÆ
 ) {

129 
this
.
öãrvÆ
 = interval;

130 
this
.
œ°Time
 = (
öãrvÆ
<0) ? 0 : -interval;

131 
	}
}

136 
¥Ÿe˘ed
 
£tEnvú⁄mít
(
M≠
<
Såög
, Såög> 
ív
) {

137 
	gthis
.
	gívú⁄mít
 = 
ív
;

143 
¥Ÿe˘ed
 
	$£tW‹kögDúe˘‹y
(
Fûe
 
dú
) {

144 
this
.
dú
 = dir;

145 
	}
}

148 
¥Ÿe˘ed
 
	$run
(Ë
throws
 
IOEx˚±i⁄
 {

149 i‡(
œ°Time
 + 
öãrvÆ
 > 
Sy°em
.
	`cuºítTimeMûlis
())

151 
exôCode
 = 0;

152 
	`runComm™d
();

153 
	}
}

156 
¥iv©e
 
	$runComm™d
(Ë
throws
 
IOEx˚±i⁄
 {

157 
Pro˚ssBuûdî
 
buûdî
 = 
√w
 
	`Pro˚ssBuûdî
(
	`gëExecSåög
());

158 
Timî
 
timeOutTimî
 = 
nuŒ
;

159 
ShñlTimeoutTimîTask
 
timeoutTimîTask
 = 
nuŒ
;

160 
timedOut
 = 
√w
 
	`AtomicBoﬁón
(
Ál£
);

161 
com∂ëed
 = 
√w
 
	`AtomicBoﬁón
(
Ál£
);

163 i‡(
ívú⁄mít
 !
nuŒ
) {

164 
buûdî
.
	`ívú⁄mít
().
	`putAŒ
(
this
.
ívú⁄mít
);

166 i‡(
dú
 !
nuŒ
) {

167 
buûdî
.
	`dúe˘‹y
(
this
.
dú
);

170 
¥o˚ss
 = 
buûdî
.
	`°¨t
();

171 i‡(
timeOutI¡îvÆ
 > 0) {

172 
timeOutTimî
 = 
√w
 
	`Timî
();

173 
timeoutTimîTask
 = 
√w
 
	`ShñlTimeoutTimîTask
(

174 
this
);

176 
timeOutTimî
.
	`scheduÀ
(
timeoutTimîTask
, 
timeOutI¡îvÆ
);

178 
föÆ
 
Buf„ªdRódî
 
îrRódî
 =

179 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(
¥o˚ss


180 .
	`gëEº‹Såóm
()));

181 
Buf„ªdRódî
 
öRódî
 =

182 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(
¥o˚ss


183 .
	`gëI≈utSåóm
()));

184 
föÆ
 
SåögBuf„r
 
îrMsg
 = 
√w
 
	`SåögBuf„r
();

188 
Thªad
 
îrThªad
 = 
√w
 
	`Thªad
() {

189 @
Ovîride


190 
public
 
	`run
() {

191 
åy
 {

192 
Såög
 
löe
 = 
îrRódî
.
	`ªadLöe
();

193 (
löe
 !
nuŒ
Ë&& !
	`isI¡îru±ed
()) {

194 
îrMsg
.
	`≠≥nd
(
löe
);

195 
îrMsg
.
	`≠≥nd
(
Sy°em
.
	`gëPr›îty
("line.separator"));

196 
löe
 = 
îrRódî
.
	`ªadLöe
();

198 } 
	`ˇtch
(
IOEx˚±i⁄
 
i€
) {

199 
LOG
.
	`w¨n
("Eº‹ÑódögÅhêîr‹ såóm", 
i€
);

203 
åy
 {

204 
îrThªad
.
	`°¨t
();

205 } 
	`ˇtch
 (
IŒegÆSèãEx˚±i⁄
 
i£
) { }

206 
åy
 {

207 
	`∑r£ExecResu…
(
öRódî
);

209 
Såög
 
löe
 = 
öRódî
.
	`ªadLöe
();

210 
löe
 !
nuŒ
) {

211 
löe
 = 
öRódî
.
	`ªadLöe
();

214 
exôCode
 = 
¥o˚ss
.
	`waôF‹
();

215 
åy
 {

217 
îrThªad
.
	`joö
();

218 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
õ
) {

219 
LOG
.
	`w¨n
("I¡îru±ed whûêªadögÅhêîr‹ såóm", 
õ
);

221 
com∂ëed
.
	`£t
(
åue
);

224 i‡(
exôCode
 != 0) {

225 
throw
 
√w
 
	`ExôCodeEx˚±i⁄
(
exôCode
, 
îrMsg
.
	`toSåög
());

227 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
õ
) {

228 
throw
 
√w
 
	`IOEx˚±i⁄
(
õ
.
	`toSåög
());

229 } 
föÆly
 {

230 i‡((
timeOutTimî
!=
nuŒ
Ë&& !
timedOut
.
	`gë
()) {

231 
timeOutTimî
.
	`ˇn˚l
();

234 
åy
 {

235 
öRódî
.
	`˛o£
();

236 } 
	`ˇtch
 (
IOEx˚±i⁄
 
i€
) {

237 
LOG
.
	`w¨n
("Eº‹ whûê˛osögÅhêöpuà°ªam", 
i€
);

239 i‡(!
com∂ëed
.
	`gë
()) {

240 
îrThªad
.
	`öãºu±
();

242 
åy
 {

243 
îrRódî
.
	`˛o£
();

244 } 
	`ˇtch
 (
IOEx˚±i⁄
 
i€
) {

245 
LOG
.
	`w¨n
("Eº‹ whûê˛osögÅhêîr‹ såóm", 
i€
);

247 
¥o˚ss
.
	`de°roy
();

248 
œ°Time
 = 
Sy°em
.
	`cuºítTimeMûlis
();

250 
	}
}

253 
¥Ÿe˘ed
 
ab°ø˘
 
	gSåög
[] 
gëExecSåög
();

256 
¥Ÿe˘ed
 
ab°ø˘
 
	$∑r£ExecResu…
(
Buf„ªdRódî
 
löes
)

257 
throws
 
IOEx˚±i⁄
;

262 
public
 
Pro˚ss
 
	$gëPro˚ss
() {

263  
¥o˚ss
;

264 
	}
}

269 
public
 
	$gëExôCode
() {

270  
exôCode
;

271 
	}
}

276 
public
 ˛as†
	cExôCodeEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

277 
	gexôCode
;

279 
public
 
ExôCodeEx˚±i⁄
(
exôCode
, 
Såög
 
mesßge
) {

280 
su≥r
(
mesßge
);

281 
	gthis
.
	gexôCode
 = 
exôCode
;

284 
public
 
gëExôCode
() {

285  
	gexôCode
;

297 
public
 ˛as†
	cShñlComm™dExecut‹
 
exãnds
 
	gShñl
 {

299 
¥iv©e
 
	gSåög
[] 
	gcomm™d
;

300 
¥iv©e
 
SåögBuf„r
 
	gouçut
;

303 
public
 
ShñlComm™dExecut‹
(
Såög
[] 
execSåög
) {

304 
this
(
execSåög
, 
nuŒ
);

307 
public
 
ShñlComm™dExecut‹
(
Såög
[] 
execSåög
, 
Fûe
 
dú
) {

308 
this
(
execSåög
, 
dú
, 
nuŒ
);

311 
public
 
ShñlComm™dExecut‹
(
Såög
[] 
execSåög
, 
Fûe
 
dú
,

312 
M≠
<
Såög
, Såög> 
ív
) {

313 
this
(
execSåög
, 
dú
, 
ív
 , 0L);

330 
public
 
ShñlComm™dExecut‹
(
Såög
[] 
execSåög
, 
Fûe
 
dú
,

331 
M≠
<
Såög
, Såög> 
ív
, 
timeout
) {

332 
	gcomm™d
 = 
execSåög
.
˛⁄e
();

333 i‡(
	gdú
 !
nuŒ
) {

334 
£tW‹kögDúe˘‹y
(
dú
);

336 i‡(
	gív
 !
nuŒ
) {

337 
£tEnvú⁄mít
(
ív
);

339 
	gtimeOutI¡îvÆ
 = 
timeout
;

344 
public
 
execuã
(Ë
throws
 
	gIOEx˚±i⁄
 {

345 
	gthis
.
run
();

348 
¥Ÿe˘ed
 
	gSåög
[] 
gëExecSåög
() {

349  
	gcomm™d
;

352 
¥Ÿe˘ed
 
∑r£ExecResu…
(
Buf„ªdRódî
 
löes
Ë
throws
 
	gIOEx˚±i⁄
 {

353 
	gouçut
 = 
√w
 
SåögBuf„r
();

354 [] 
	gbuf
 = 
√w
 [512];

355 
	gnRód
;

356  (
	gnRód
 = 
löes
.
ªad
(
buf
, 0, buf.
Àngth
)) > 0 ) {

357 
	gouçut
.
≠≥nd
(
buf
, 0, 
nRód
);

362 
public
 
Såög
 
gëOuçut
() {

363  (
	gouçut
 =
nuŒ
Ë? "" : 
ouçut
.
toSåög
();

373 
public
 
Såög
 
toSåög
() {

374 
SåögBuûdî
 
	gbuûdî
 = 
√w
 StringBuilder();

375 
	gSåög
[] 
	g¨gs
 = 
gëExecSåög
();

376 
Såög
 
	gs
 : 
¨gs
) {

377 i‡(
s
.
ödexOf
(' ') >= 0) {

378 
buûdî
.
≠≥nd
('"').≠≥nd(
s
).append('"');

380 
	gbuûdî
.
≠≥nd
(
s
);

382 
	gbuûdî
.
≠≥nd
(' ');

384  
	gbuûdî
.
toSåög
();

394 
public
 
boﬁón
 
	$isTimedOut
() {

395  
timedOut
.
	`gë
();

396 
	}
}

402 
¥iv©e
 
	$£tTimedOut
() {

403 
this
.
timedOut
.
	`£t
(
åue
);

404 
	}
}

413 
public
 
Såög
 
	$execComm™d
(
Såög
 ... 
cmd
Ë
throws
 
IOEx˚±i⁄
 {

414  
	`execComm™d
(
nuŒ
, 
cmd
, 0L);

415 
	}
}

427 
public
 
Såög
 
execComm™d
(
M≠
<Såög, Såög> 
ív
, Såög[] 
cmd
,

428 
timeout
Ë
throws
 
	gIOEx˚±i⁄
 {

429 
ShñlComm™dExecut‹
 
	gexec
 = 
√w
 ShñlComm™dExecut‹(
cmd
, 
nuŒ
, 
ív
,

430 
timeout
);

431 
	gexec
.
execuã
();

432  
	gexec
.
gëOuçut
();

443 
public
 
Såög
 
execComm™d
(
M≠
<Såög,Såög> 
ív
, Såög ... 
cmd
)

444 
throws
 
	gIOEx˚±i⁄
 {

445  
execComm™d
(
ív
, 
cmd
, 0L);

451 
¥iv©e
 ˛as†
	cShñlTimeoutTimîTask
 
exãnds
 
	gTimîTask
 {

453 
¥iv©e
 
Shñl
 
	gshñl
;

455 
public
 
ShñlTimeoutTimîTask
(
Shñl
 
shñl
) {

456 
	gthis
.
	gshñl
 = 
shñl
;

459 @
Ovîride


460 
public
 
run
() {

461 
Pro˚ss
 
	gp
 = 
shñl
.
gëPro˚ss
();

462 
	gåy
 {

463 
	gp
.
exôVÆue
();

464 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

468 i‡(
	gp
 !
nuŒ
 && !
shñl
.
com∂ëed
.
gë
()) {

469 
shñl
.
£tTimedOut
();

470 
	gp
.
de°roy
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/StatsTrack.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

24 
public
 cœs†
	cSètsTøck
 {

25 
¥iv©e
 
	mcou¡
;

26 
¥iv©e
 
	mbyãs
;

27 
¥iv©e
 
Såög
 
	mcou¡Så
 = "count";

28 
¥iv©e
 
Såög
 
	mbyãSå
 = "bytes";

34 
public
 
	$SètsTøck
() {

35 
	`this
(
nuŒ
);

43 
public
 
	$SètsTøck
(
Såög
 
°©s
) {

44 i‡(
°©s
 =
nuŒ
) {

45 
°©s
 = "count=-1,bytes=-1";

47 
Såög
[] 
•lô
 = 
°©s
.
	`•lô
(",");

48 i‡(
•lô
.
Àngth
 != 2) {

49 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("övÆid såög " + 
°©s
);

51 
cou¡
 = 
I¡egî
.
	`∑r£I¡
(
•lô
[0].
	`•lô
("=")[1]);

52 
byãs
 = 
L⁄g
.
	`∑r£L⁄g
(
•lô
[1].
	`•lô
("=")[1]);

53 
	}
}

61 
public
 
	$gëCou¡
() {

62  
this
.
cou¡
;

63 
	}
}

71 
public
 
	$£tCou¡
(
cou¡
) {

72 
this
.
cou¡
 = count;

73 
	}
}

80 
public
 
	$gëByãs
() {

81  
this
.
byãs
;

82 
	}
}

90 
public
 
	$£tByãs
(
byãs
) {

91 
this
.
byãs
 = bytes;

92 
	}
}

94 @
Ovîride


98 
public
 
Såög
 
	$toSåög
() {

99  
cou¡Så
 + "=" + 
cou¡
 + "," + 
byãSå
 + "=" + 
byãs
;

100 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Transaction.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
public
 cœs†
	cTønß˘i⁄
 {

32 
¥iv©e
 
ZooKì≥r
 
	mzk
;

33 
¥iv©e
 
	mLi°
<
	mOp
> 
	m›s
 = 
√w
 
AºayLi°
<
Op
>();

35 
¥Ÿe˘ed
 
	$Tønß˘i⁄
(
ZooKì≥r
 
zk
) {

36 
this
.
zk
 = zk;

39 
public
 
Tønß˘i⁄
 
	`¸óã
(
föÆ
 
Såög
 
∑th
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
,

40 
Cª©eMode
 
¸óãMode
) {

41 
›s
.
	`add
(
Op
.
	`¸óã
(
∑th
, 
d©a
, 
a˛
, 
¸óãMode
.
	`toFœg
()));

42  
this
;

43 
	}
}

45 
public
 
Tønß˘i⁄
 
	$dñëe
(
föÆ
 
Såög
 
∑th
, 
vîsi⁄
) {

46 
›s
.
	`add
(
Op
.
	`dñëe
(
∑th
, 
vîsi⁄
));

47  
this
;

48 
	}
}

50 
public
 
Tønß˘i⁄
 
	$check
(
Såög
 
∑th
, 
vîsi⁄
) {

51 
›s
.
	`add
(
Op
.
	`check
(
∑th
, 
vîsi⁄
));

52  
this
;

53 
	}
}

55 
public
 
Tønß˘i⁄
 
	$£tD©a
(
föÆ
 
Såög
 
∑th
, 
byã
 
d©a
[], 
vîsi⁄
) {

56 
›s
.
	`add
(
Op
.
	`£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
));

57  
this
;

58 
	}
}

60 
public
 
	gLi°
<
	gOpResu…
> 
	$commô
(Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

61  
zk
.
	`mu…i
(
›s
);

62 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Version.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
public
 
˛ass
 
Vîsi⁄
 
im∂emíts
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gvîsi⁄
.
	gInfo
 {

23 
public
 
gëRevisi⁄
() {

24  
	gREVISION
;

27 
public
 
Såög
 
gëBuûdD©e
() {

28  
	gBUILD_DATE
;

31 
public
 
Såög
 
gëVîsi⁄
() {

32  
	gMAJOR
 + "." + 
	gMINOR
 + "." + 
	gMICRO


33 + (
	gQUALIFIER
 =
nuŒ
 ? "" : "-" + 
QUALIFIER
);

36 
public
 
Såög
 
gëVîsi⁄Revisi⁄
() {

37  
gëVîsi⁄
(Ë+ "-" + 
gëRevisi⁄
();

40 
public
 
Såög
 
gëFuŒVîsi⁄
() {

41  
gëVîsi⁄Revisi⁄
(Ë+ ", buûà⁄ " + 
gëBuûdD©e
();

44 
public
 
¥ötUßge
() {

45 
	gSy°em
.
	gout


46 .
¥öt
("Usage:\tjava -cp ... org.apache.zookeeper.Version "

49 
	gSy°em
.
exô
(1);

63 
public
 
maö
(
Såög
[] 
¨gs
) {

64 i‡(
	g¨gs
.
	gÀngth
 > 1) {

65 
¥ötUßge
();

67 i‡(
	g¨gs
.
	gÀngth
 =0 || (
¨gs
.
Àngth
 =1 &&árgs[0].
equÆs
("--full"))) {

68 
Sy°em
.
out
.
¥öén
(
gëFuŒVîsi⁄
());

69 
	gSy°em
.
exô
(0);

71 i‡(
	g¨gs
[0].
equÆs
("--short"))

72 
	gSy°em
.
	gout
.
¥öén
(
gëVîsi⁄
());

73 i‡(
	g¨gs
[0].
equÆs
("--revision"))

74 
	gSy°em
.
	gout
.
¥öén
(
gëVîsi⁄Revisi⁄
());

76 
¥ötUßge
();

77 
	gSy°em
.
exô
(0);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/WatchedEvent.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gW©chîEvít
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

30 
public
 cœs†
	cW©chedEvít
 {

31 
föÆ
 
¥iv©e
 
Kì≥rSèã
 
	mkì≥rSèã
;

32 
föÆ
 
¥iv©e
 
EvítTy≥
 
	mevítTy≥
;

33 
¥iv©e
 
Såög
 
	m∑th
;

38 
public
 
	$W©chedEvít
(
EvítTy≥
 
evítTy≥
, 
Kì≥rSèã
 
kì≥rSèã
, 
Såög
 
∑th
) {

39 
this
.
kì≥rSèã
 = keeperState;

40 
this
.
evítTy≥
 =ÉventType;

41 
this
.
∑th
 =Öath;

47 
public
 
	$W©chedEvít
(
W©chîEvít
 
evítMesßge
) {

48 
kì≥rSèã
 = 
Kì≥rSèã
.
	`‰omI¡
(
evítMesßge
.
	`gëSèã
());

49 
evítTy≥
 = 
EvítTy≥
.
	`‰omI¡
(
evítMesßge
.
	`gëTy≥
());

50 
∑th
 = 
evítMesßge
.
	`gëP©h
();

51 
	}
}

53 
public
 
Kì≥rSèã
 
	$gëSèã
() {

54  
kì≥rSèã
;

55 
	}
}

57 
public
 
EvítTy≥
 
	$gëTy≥
() {

58  
evítTy≥
;

59 
	}
}

61 
public
 
Såög
 
	$gëP©h
() {

62  
∑th
;

63 
	}
}

65 @
Ovîride


66 
public
 
Såög
 
	$toSåög
() {

67  "W©chedEvíà°©e:" + 
kì≥rSèã


68 + "Åy≥:" + 
evítTy≥
 + "Ö©h:" + 
∑th
;

69 
	}
}

74 
public
 
W©chîEvít
 
	$gëWøµî
() {

75  
√w
 
	`W©chîEvít
(
evítTy≥
.
	`gëI¡VÆue
(),

76 
kì≥rSèã
.
	`gëI¡VÆue
(),

77 
∑th
);

78 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Watcher.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

29 
public
 
öãrÁ˚
 
	gW©chî
 {

34 
public
 
öãrÁ˚
 
	gEvít
 {

38 
public
 
	eKì≥rSèã
 {

40 @
Dïªˇãd


41 
Unknown
 (-1),

45 
Disc⁄√˘ed
 (0),

48 @
Dïªˇãd


49 
NoSyncC⁄√˘ed
 (1),

55 
SyncC⁄√˘ed
 (3),

60 
AuthFaûed
 (4),

70 
C⁄√˘edRódO∆y
 (5),

76 
Sa¶Authítiˇãd
(6),

82 
Expúed
 (-112);

84 
¥iv©e
 
föÆ
 
	götVÆue
;

87 
Kì≥rSèã
(
ötVÆue
) {

88 
	gthis
.
	götVÆue
 = 
ötVÆue
;

91 
public
 
gëI¡VÆue
() {

92  
	götVÆue
;

95 
public
 
Kì≥rSèã
 
‰omI¡
(
ötVÆue
) {

96 
	götVÆue
) {

97 -1:  
Kì≥rSèã
.
Unknown
;

98 0:  
Kì≥rSèã
.
Disc⁄√˘ed
;

99 1:  
Kì≥rSèã
.
NoSyncC⁄√˘ed
;

100 3:  
Kì≥rSèã
.
SyncC⁄√˘ed
;

101 4:  
Kì≥rSèã
.
AuthFaûed
;

102 5:  
Kì≥rSèã
.
C⁄√˘edRódO∆y
;

103 6:  
Kì≥rSèã
.
Sa¶Authítiˇãd
;

104 -112:  
Kì≥rSèã
.
Expúed
;

107 
throw
 
√w
 
Ru¡imeEx˚±i⁄
("Invalid integer value for conversionÅo KeeperState");

115 
public
 
	eEvítTy≥
 {

116 
N⁄e
 (-1),

117 
NodeCª©ed
 (1),

118 
NodeDñëed
 (2),

119 
NodeD©aCh™ged
 (3),

120 
NodeChûdªnCh™ged
 (4);

122 
¥iv©e
 
föÆ
 
	götVÆue
;

125 
EvítTy≥
(
ötVÆue
) {

126 
	gthis
.
	götVÆue
 = 
ötVÆue
;

129 
public
 
gëI¡VÆue
() {

130  
	götVÆue
;

133 
public
 
EvítTy≥
 
‰omI¡
(
ötVÆue
) {

134 
	götVÆue
) {

135 -1:  
EvítTy≥
.
N⁄e
;

136 1:  
EvítTy≥
.
NodeCª©ed
;

137 2:  
EvítTy≥
.
NodeDñëed
;

138 3:  
EvítTy≥
.
NodeD©aCh™ged
;

139 4:  
EvítTy≥
.
NodeChûdªnCh™ged
;

142 
throw
 
√w
 
Ru¡imeEx˚±i⁄
("Invalid integer value for conversionÅo EventType");

148 
ab°ø˘
 
public
 
¥o˚ss
(
W©chedEvít
 
evít
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZKUtil.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gDeque
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gP©hUtûs
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
public
 cœs†
	cZKUtû
 {

31 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZKUtû
.
˛ass
);

44 
public
 
	$dñëeRecursive
(
ZooKì≥r
 
zk
, 
föÆ
 
Såög
 
∑thRoŸ
)

45 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


47 
P©hUtûs
.
	`vÆid©eP©h
(
∑thRoŸ
);

49 
Li°
<
Såög
> 
åì
 = 
	`li°SubTªeBFS
(
zk
, 
∑thRoŸ
);

50 
LOG
.
	`debug
("Dñëög " + 
åì
);

51 
LOG
.
	`debug
("Dñëög " + 
åì
.
	`size
() + " subnodes ");

52 
i
 = 
åì
.
	`size
() - 1; i >= 0 ; --i) {

54 
zk
.
	`dñëe
(
åì
.
	`gë
(
i
), -1);

74 
public
 
	$dñëeRecursive
(
ZooKì≥r
 
zk
, 
föÆ
 
Såög
 
∑thRoŸ
, 
VoidCÆlback
 
cb
,

75 
Obje˘
 
˘x
)

76 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


78 
P©hUtûs
.
	`vÆid©eP©h
(
∑thRoŸ
);

80 
Li°
<
Såög
> 
åì
 = 
	`li°SubTªeBFS
(
zk
, 
∑thRoŸ
);

81 
LOG
.
	`debug
("Dñëög " + 
åì
);

82 
LOG
.
	`debug
("Dñëög " + 
åì
.
	`size
() + " subnodes ");

83 
i
 = 
åì
.
	`size
() - 1; i >= 0 ; --i) {

85 
zk
.
	`dñëe
(
åì
.
	`gë
(
i
), -1, 
cb
, 
˘x
);

87 
	}
}

103 
public
 
	gLi°
<
	gSåög
> 
	$li°SubTªeBFS
(
ZooKì≥r
 
zk
, 
föÆ
 
Såög
 
∑thRoŸ
Ë
throws


104 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

105 
Deque
<
Såög
> 
queue
 = 
√w
 
LökedLi°
<String>();

106 
Li°
<
Såög
> 
åì
 = 
√w
 
AºayLi°
<String>();

107 
queue
.
	`add
(
∑thRoŸ
);

108 
åì
.
	`add
(
∑thRoŸ
);

109 
åue
) {

110 
Såög
 
node
 = 
queue
.
	`pﬁlFú°
();

111 i‡(
node
 =
nuŒ
) {

114 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
node
, 
Ál£
);

115 
föÆ
 
Såög
 
chûd
 : 
chûdªn
) {

116 
föÆ
 
Såög
 
chûdP©h
 = 
node
 + "/" + 
chûd
;

117 
queue
.
	`add
(
chûdP©h
);

118 
åì
.
	`add
(
chûdP©h
);

121  
åì
;

122 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooDefs.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

27 
public
 cœs†
	cZooDefs
 {

28 
public
 
öãrÁ˚
 
	mOpCode
 {

29 
public
 
föÆ
 
	mnŸifiˇti⁄
 = 0;

31 
public
 
föÆ
 
	m¸óã
 = 1;

33 
public
 
föÆ
 
	mdñëe
 = 2;

35 
public
 
föÆ
 
	mexi°s
 = 3;

37 
public
 
föÆ
 
	mgëD©a
 = 4;

39 
public
 
föÆ
 
	m£tD©a
 = 5;

41 
public
 
föÆ
 
	mgëACL
 = 6;

43 
public
 
föÆ
 
	m£tACL
 = 7;

45 
public
 
föÆ
 
	mgëChûdªn
 = 8;

47 
public
 
föÆ
 
	msync
 = 9;

49 
public
 
föÆ
 
	mpög
 = 11;

51 
public
 
föÆ
 
	mgëChûdªn2
 = 12;

53 
public
 
föÆ
 
	mcheck
 = 13;

55 
public
 
föÆ
 
	mmu…i
 = 14;

57 
public
 
föÆ
 
	mauth
 = 100;

59 
public
 
föÆ
 
	m£tW©ches
 = 101;

61 
public
 
föÆ
 
	mß¶
 = 102;

63 
public
 
föÆ
 
	m¸óãSessi⁄
 = -10;

65 
public
 
föÆ
 
	m˛o£Sessi⁄
 = -11;

67 
public
 
föÆ
 
	mîr‹
 = -1;

70 
public
 
öãrÁ˚
 
	gPîms
 {

71 
	gREAD
 = 1 << 0;

73 
	gWRITE
 = 1 << 1;

75 
	gCREATE
 = 1 << 2;

77 
	gDELETE
 = 1 << 3;

79 
	gADMIN
 = 1 << 4;

81 
	gALL
 = 
READ
 | 
WRITE
 | 
CREATE
 | 
DELETE
 | 
ADMIN
;

84 
public
 
öãrÁ˚
 
	gIds
 {

88 
public
 
föÆ
 
Id
 
	gANYONE_ID_UNSAFE
 = 
√w
 Id("world", "anyone");

94 
public
 
föÆ
 
Id
 
	gAUTH_IDS
 = 
√w
 Id("auth", "");

99 
public
 
föÆ
 
	gAºayLi°
<
	gACL
> 
	gOPEN_ACL_UNSAFE
 = 
√w
 
AºayLi°
<
ACL
>(

100 
CﬁÀ˘i⁄s
.
sögÀt⁄Li°
(
√w
 
ACL
(
Pîms
.
ALL
, 
ANYONE_ID_UNSAFE
)));

105 
public
 
föÆ
 
	gAºayLi°
<
	gACL
> 
	gCREATOR_ALL_ACL
 = 
√w
 
AºayLi°
<
ACL
>(

106 
CﬁÀ˘i⁄s
.
sögÀt⁄Li°
(
√w
 
ACL
(
Pîms
.
ALL
, 
AUTH_IDS
)));

111 
public
 
föÆ
 
	gAºayLi°
<
	gACL
> 
	gREAD_ACL_UNSAFE
 = 
√w
 
AºayLi°
<
ACL
>(

112 
CﬁÀ˘i⁄s


113 .
sögÀt⁄Li°
(
√w
 
ACL
(
Pîms
.
READ
, 
ANYONE_ID_UNSAFE
)));

116 
föÆ
 
public
 
	gSåög
[] 
	g›Names
 = { "notification", "create",

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooKeeper.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.*;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gEº‹Resu…
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gC⁄√˘SåögP¨£r
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gHo°Providî
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gSèticHo°Providî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gP©hUtûs
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.*;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

36 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

37 
imp‹t
 
	gjava
.
	gutû
.*;

86 
public
 cœs†
	cZooKì≥r
 {

88 
public
 
föÆ
 
Såög
 
	mZOOKEEPER_CLIENT_CNXN_SOCKET
 = "zookeeper.clientCnxnSocket";

90 
¥Ÿe˘ed
 
föÆ
 
Clõ¡Cnxn
 
	m˙xn
;

91 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
;

94 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥r
.
˛ass
);

95 
	mEnvú⁄mít
.
logEnv
("Clõ¡Énvú⁄mít:", 
LOG
);

98 
public
 
ZooKì≥rSa¶Clõ¡
 
	$gëSa¶Clõ¡
() {

99  
˙xn
.
zooKì≥rSa¶Clõ¡
;

100 
	}
}

102 
¥iv©e
 
föÆ
 
ZKW©chM™agî
 
	gw©chM™agî
 = 
√w
 ZKWatchManager();

104 
	gLi°
<
	gSåög
> 
	$gëD©aW©ches
() {

105 
	`synchr⁄ized
(
w©chM™agî
.
d©aW©ches
) {

106 
Li°
<
Såög
> 
rc
 = 
√w
 
AºayLi°
<Såög>(
w©chM™agî
.
d©aW©ches
.
	`keySë
());

107  
rc
;

109 
	}
}

110 
	gLi°
<
	gSåög
> 
	$gëExi°W©ches
() {

111 
	`synchr⁄ized
(
w©chM™agî
.
exi°W©ches
) {

112 
Li°
<
Såög
> 
rc
 = 
√w
 
AºayLi°
<Såög>(
w©chM™agî
.
exi°W©ches
.
	`keySë
());

113  
rc
;

115 
	}
}

116 
	gLi°
<
	gSåög
> 
	$gëChûdW©ches
() {

117 
	`synchr⁄ized
(
w©chM™agî
.
chûdW©ches
) {

118 
Li°
<
Såög
> 
rc
 = 
√w
 
AºayLi°
<Såög>(
w©chM™agî
.
chûdW©ches
.
	`keySë
());

119  
rc
;

121 
	}
}

130 
¥iv©e
 ˛as†
	cZKW©chM™agî
 
im∂emíts
 
	gClõ¡W©chM™agî
 {

131 
¥iv©e
 
föÆ
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
	gd©aW©ches
 =

132 
√w
 
HashM≠
<
Såög
, 
	gSë
<
	gW©chî
>>();

133 
¥iv©e
 
föÆ
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
	gexi°W©ches
 =

134 
√w
 
HashM≠
<
Såög
, 
	gSë
<
	gW©chî
>>();

135 
¥iv©e
 
föÆ
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
	gchûdW©ches
 =

136 
√w
 
HashM≠
<
Såög
, 
	gSë
<
	gW©chî
>>();

138 
¥iv©e
 vﬁ©ûê
W©chî
 
	gdeÁu…W©chî
;

140 
föÆ
 
¥iv©e
 
addTo
(
Së
<
W©chî
> 
‰om
, Së<W©chî> 
to
) {

141 i‡(
	g‰om
 !
nuŒ
) {

142 
to
.
addAŒ
(
‰om
);

150 @
Ovîride


151 
public
 
	gSë
<
	gW©chî
> 
m©îülize
(
W©chî
.
Evít
.
Kì≥rSèã
 
°©e
,

152 
W©chî
.
Evít
.
EvítTy≥
 
ty≥
,

153 
Såög
 
˛õ¡P©h
)

155 
	gSë
<
	gW©chî
> 
	gªsu…
 = 
√w
 
HashSë
<
W©chî
>();

157 
	gty≥
) {

158 
	gN⁄e
:

159 
ªsu…
.
add
(
deÁu…W©chî
);

160 
boﬁón
 
	g˛ór
 = 
Clõ¡Cnxn
.
gëDißbÀAutoRe£tW©ch
() &&

161 
°©e
 !
W©chî
.
Evít
.
Kì≥rSèã
.
SyncC⁄√˘ed
;

163 
synchr⁄ized
(
d©aW©ches
) {

164 
	gSë
<
	gW©chî
> 
	gws
: 
d©aW©ches
.
vÆues
()) {

165 
ªsu…
.
addAŒ
(
ws
);

167 i‡(
	g˛ór
) {

168 
	gd©aW©ches
.
˛ór
();

172 
synchr⁄ized
(
exi°W©ches
) {

173 
	gSë
<
	gW©chî
> 
	gws
: 
exi°W©ches
.
vÆues
()) {

174 
ªsu…
.
addAŒ
(
ws
);

176 i‡(
	g˛ór
) {

177 
	gexi°W©ches
.
˛ór
();

181 
synchr⁄ized
(
chûdW©ches
) {

182 
	gSë
<
	gW©chî
> 
	gws
: 
chûdW©ches
.
vÆues
()) {

183 
ªsu…
.
addAŒ
(
ws
);

185 i‡(
	g˛ór
) {

186 
	gchûdW©ches
.
˛ór
();

190  
	gªsu…
;

191 
	gNodeD©aCh™ged
:

192 
NodeCª©ed
:

193 
synchr⁄ized
 (
d©aW©ches
) {

194 
addTo
(
d©aW©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

196 
synchr⁄ized
 (
exi°W©ches
) {

197 
addTo
(
exi°W©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

200 
	gNodeChûdªnCh™ged
:

201 
synchr⁄ized
 (
chûdW©ches
) {

202 
addTo
(
chûdW©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

205 
	gNodeDñëed
:

206 
synchr⁄ized
 (
d©aW©ches
) {

207 
addTo
(
d©aW©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

210 
synchr⁄ized
 (
exi°W©ches
) {

211 
	gSë
<
	gW©chî
> 
	gli°
 = 
exi°W©ches
.
ªmove
(
˛õ¡P©h
);

212 i‡(
	gli°
 !
nuŒ
) {

213 
addTo
(
exi°W©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

214 
	gLOG
.
w¨n
("WeáreÅriggeringánÉxists watch for delete! Shouldn't happen!");

217 
synchr⁄ized
 (
chûdW©ches
) {

218 
addTo
(
chûdW©ches
.
ªmove
(
˛õ¡P©h
), 
ªsu…
);

222 
Såög
 
msg
 = "Unh™dÀd w©chÉvíàty≥ " + 
ty≥


223 + " wôh sèã " + 
°©e
 + " o¿∑th " + 
˛õ¡P©h
;

224 
	gLOG
.
îr‹
(
msg
);

225 
throw
 
√w
 
Ru¡imeEx˚±i⁄
(
msg
);

228  
	gªsu…
;

235 
ab°ø˘
 cœs†
	cW©chRegi°øti⁄
 {

236 
¥iv©e
 
W©chî
 
	gw©chî
;

237 
¥iv©e
 
Såög
 
	g˛õ¡P©h
;

238 
public
 
W©chRegi°øti⁄
(
W©chî
 
w©chî
, 
Såög
 
˛õ¡P©h
)

240 
	gthis
.
	gw©chî
 = 
w©chî
;

241 
	gthis
.
	g˛õ¡P©h
 = 
˛õ¡P©h
;

244 
ab°ø˘
 
¥Ÿe˘ed
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
gëW©ches
(
rc
);

251 
public
 (
	grc
) {

252 i‡(
shouldAddW©ch
(
rc
)) {

253 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
	gw©ches
 = 
gëW©ches
(
rc
);

254 
synchr⁄ized
(
w©ches
) {

255 
	gSë
<
	gW©chî
> 
	gw©chîs
 = 
w©ches
.
gë
(
˛õ¡P©h
);

256 i‡(
	gw©chîs
 =
nuŒ
) {

257 
w©chîs
 = 
√w
 
HashSë
<
W©chî
>();

258 
	gw©ches
.
put
(
˛õ¡P©h
, 
w©chîs
);

260 
	gw©chîs
.
add
(
w©chî
);

270 
¥Ÿe˘ed
 
boﬁón
 
shouldAddW©ch
(
rc
) {

271  
	grc
 == 0;

278 ˛as†
	cExi°sW©chRegi°øti⁄
 
exãnds
 
	gW©chRegi°øti⁄
 {

279 
public
 
Exi°sW©chRegi°øti⁄
(
W©chî
 
w©chî
, 
Såög
 
˛õ¡P©h
) {

280 
su≥r
(
w©chî
, 
˛õ¡P©h
);

283 @
Ovîride


284 
¥Ÿe˘ed
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
gëW©ches
(
rc
) {

285  
	grc
 =0 ? 
w©chM™agî
.
d©aW©ches
 : w©chM™agî.
exi°W©ches
;

288 @
Ovîride


289 
¥Ÿe˘ed
 
boﬁón
 
shouldAddW©ch
(
rc
) {

290  
	grc
 =0 || 
rc
 =
Kì≥rEx˚±i⁄
.
Code
.
NONODE
.
ötVÆue
();

294 ˛as†
	cD©aW©chRegi°øti⁄
 
exãnds
 
	gW©chRegi°øti⁄
 {

295 
public
 
D©aW©chRegi°øti⁄
(
W©chî
 
w©chî
, 
Såög
 
˛õ¡P©h
) {

296 
su≥r
(
w©chî
, 
˛õ¡P©h
);

299 @
Ovîride


300 
¥Ÿe˘ed
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
gëW©ches
(
rc
) {

301  
	gw©chM™agî
.
	gd©aW©ches
;

305 ˛as†
	cChûdW©chRegi°øti⁄
 
exãnds
 
	gW©chRegi°øti⁄
 {

306 
public
 
ChûdW©chRegi°øti⁄
(
W©chî
 
w©chî
, 
Såög
 
˛õ¡P©h
) {

307 
su≥r
(
w©chî
, 
˛õ¡P©h
);

310 @
Ovîride


311 
¥Ÿe˘ed
 
	gM≠
<
	gSåög
, 
	gSë
<
	gW©chî
>> 
gëW©ches
(
rc
) {

312  
	gw©chM™agî
.
	gchûdW©ches
;

316 
public
 
	eSèãs
 {

317 
	gCONNECTING
, 
	gASSOCIATING
, 
	gCONNECTED
, 
	gCONNECTEDREADONLY
,

318 
	gCLOSED
, 
	gAUTH_FAILED
, 
	gNOT_CONNECTED
;

320 
public
 
boﬁón
 
isAlive
() {

321  
	gthis
 !
CLOSED
 && 
this
 !
AUTH_FAILED
;

329 
public
 
boﬁón
 
isC⁄√˘ed
() {

330  
	gthis
 =
CONNECTED
 || 
this
 =
CONNECTEDREADONLY
;

377 
public
 
	$ZooKì≥r
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
)

378 
throws
 
IOEx˚±i⁄


380 
	`this
(
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
w©chî
, 
Ál£
);

381 
	}
}

434 
public
 
	$ZooKì≥r
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
,

435 
boﬁón
 
ˇnBeRódO∆y
)

436 
throws
 
IOEx˚±i⁄


438 
LOG
.
	`öfo
("Inôütög clõ¡ c⁄√˘i⁄, c⁄√˘Såög=" + 
c⁄√˘Såög


439 + " sessi⁄Timeout=" + 
£ssi⁄Timeout
 + " w©chî=" + 
w©chî
);

441 
w©chM™agî
.
deÁu…W©chî
 = 
w©chî
;

443 
C⁄√˘SåögP¨£r
 
c⁄√˘SåögP¨£r
 = 
√w
 
	`C⁄√˘SåögP¨£r
(

444 
c⁄√˘Såög
);

445 
Ho°Providî
 
ho°Providî
 = 
√w
 
	`SèticHo°Providî
(

446 
c⁄√˘SåögP¨£r
.
	`gëSîvîAddªs£s
());

447 
˙xn
 = 
√w
 
	`Clõ¡Cnxn
(
c⁄√˘SåögP¨£r
.
	`gëChroŸP©h
(),

448 
ho°Providî
, 
£ssi⁄Timeout
, 
this
, 
w©chM™agî
,

449 
	`gëClõ¡CnxnSockë
(), 
ˇnBeRódO∆y
);

450 
˙xn
.
	`°¨t
();

451 
	}
}

505 
public
 
	$ZooKì≥r
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
,

506 
£ssi⁄Id
, 
byã
[] 
£ssi⁄Passwd
)

507 
throws
 
IOEx˚±i⁄


509 
	`this
(
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
w©chî
, 
£ssi⁄Id
, 
£ssi⁄Passwd
, 
Ál£
);

510 
	}
}

571 
public
 
	$ZooKì≥r
(
Såög
 
c⁄√˘Såög
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
,

572 
£ssi⁄Id
, 
byã
[] 
£ssi⁄Passwd
, 
boﬁón
 
ˇnBeRódO∆y
)

573 
throws
 
IOEx˚±i⁄


575 
LOG
.
	`öfo
("Inôütög clõ¡ c⁄√˘i⁄, c⁄√˘Såög=" + 
c⁄√˘Såög


576 + " sessi⁄Timeout=" + 
£ssi⁄Timeout


577 + " w©chî=" + 
w©chî


578 + " sessi⁄Id=" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

580 + (
£ssi⁄Passwd
 =
nuŒ
 ? "<null>" : "<hidden>"));

582 
w©chM™agî
.
deÁu…W©chî
 = 
w©chî
;

584 
C⁄√˘SåögP¨£r
 
c⁄√˘SåögP¨£r
 = 
√w
 
	`C⁄√˘SåögP¨£r
(

585 
c⁄√˘Såög
);

586 
Ho°Providî
 
ho°Providî
 = 
√w
 
	`SèticHo°Providî
(

587 
c⁄√˘SåögP¨£r
.
	`gëSîvîAddªs£s
());

588 
˙xn
 = 
√w
 
	`Clõ¡Cnxn
(
c⁄√˘SåögP¨£r
.
	`gëChroŸP©h
(),

589 
ho°Providî
, 
£ssi⁄Timeout
, 
this
, 
w©chM™agî
,

590 
	`gëClõ¡CnxnSockë
(), 
£ssi⁄Id
, 
£ssi⁄Passwd
, 
ˇnBeRódO∆y
);

591 
˙xn
.
£íRwSîvîBef‹e
 = 
åue
;

592 
˙xn
.
	`°¨t
();

593 
	}
}

604 
public
 
	$gëSessi⁄Id
() {

605  
˙xn
.
	`gëSessi⁄Id
();

606 
	}
}

617 
public
 
	gbyã
[] 
	$gëSessi⁄Passwd
() {

618  
˙xn
.
	`gëSessi⁄Passwd
();

619 
	}
}

630 
public
 
	$gëSessi⁄Timeout
() {

631  
˙xn
.
	`gëSessi⁄Timeout
();

632 
	}
}

642 
public
 
	$addAuthInfo
(
Såög
 
scheme
, 
byã
 
auth
[]) {

643 
˙xn
.
	`addAuthInfo
(
scheme
, 
auth
);

644 
	}
}

652 
public
 
synchr⁄ized
 (
W©chî
 
w©chî
) {

653 
w©chM™agî
.
deÁu…W©chî
 = 
w©chî
;

654 
	}
}

664 
public
 
synchr⁄ized
 
	$˛o£
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

665 i‡(!
˙xn
.
	`gëSèã
().
	`isAlive
()) {

666 i‡(
LOG
.
	`isDebugE«bÀd
()) {

667 
LOG
.
	`debug
("Close called onálready closed client");

672 i‡(
LOG
.
	`isDebugE«bÀd
()) {

673 
LOG
.
	`debug
("Closög sessi⁄: 0x" + 
L⁄g
.
	`toHexSåög
(
	`gëSessi⁄Id
()));

676 
åy
 {

677 
˙xn
.
	`˛o£
();

678 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

679 i‡(
LOG
.
	`isDebugE«bÀd
()) {

680 
LOG
.
	`debug
("Ign‹ög u√x≥˘edÉx˚±i⁄ durög clo£", 
e
);

684 
LOG
.
	`öfo
("Sessi⁄: 0x" + 
L⁄g
.
	`toHexSåög
(
	`gëSessi⁄Id
()) + " closed");

685 
	}
}

694 
¥iv©e
 
Såög
 
	$¥ïídChroŸ
(
Såög
 
˛õ¡P©h
) {

695 i‡(
˙xn
.
chroŸP©h
 !
nuŒ
) {

697 i‡(
˛õ¡P©h
.
	`Àngth
() == 1) {

698  
˙xn
.
chroŸP©h
;

700  
˙xn
.
chroŸP©h
 + 
˛õ¡P©h
;

702  
˛õ¡P©h
;

704 
	}
}

761 
public
 
Såög
 
¸óã
(
föÆ
 Såög 
∑th
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
,

762 
Cª©eMode
 
¸óãMode
)

763 
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄


765 
föÆ
 
Såög
 
	g˛õ¡P©h
 = 
∑th
;

766 
	gP©hUtûs
.
vÆid©eP©h
(
˛õ¡P©h
, 
¸óãMode
.
isSequítül
());

768 
föÆ
 
Såög
 
	g£rvîP©h
 = 
¥ïídChroŸ
(
˛õ¡P©h
);

770 
Reque°Hódî
 
	gh
 = 
√w
 RequestHeader();

771 
	gh
.
£tTy≥
(
ZooDefs
.
OpCode
.
¸óã
);

772 
Cª©eReque°
 
	gªque°
 = 
√w
 CreateRequest();

773 
Cª©eRe•⁄£
 
	gª•⁄£
 = 
√w
 CreateResponse();

774 
	gªque°
.
£tD©a
(
d©a
);

775 
	gªque°
.
£tFœgs
(
¸óãMode
.
toFœg
());

776 
	gªque°
.
£tP©h
(
£rvîP©h
);

777 i‡(
	ga˛
 !
nuŒ
 && 
a˛
.
size
() == 0) {

778 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
();

780 
	gªque°
.
£tA˛
(
a˛
);

781 
RïlyHódî
 
	gr
 = 
˙xn
.
submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
nuŒ
);

782 i‡(
	gr
.
gëEº
() != 0) {

783 
throw
 
Kì≥rEx˚±i⁄
.
¸óã
(Kì≥rEx˚±i⁄.
Code
.
gë
(
r
.
gëEº
()),

784 
˛õ¡P©h
);

786 i‡(
	g˙xn
.
	gchroŸP©h
 =
nuŒ
) {

787  
ª•⁄£
.
gëP©h
();

789  
	gª•⁄£
.
gëP©h
().
sub°rög
(
˙xn
.
chroŸP©h
.
Àngth
());

799 
public
 
¸óã
(
föÆ
 
Såög
 
∑th
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
,

800 
Cª©eMode
 
¸óãMode
, 
SåögCÆlback
 
cb
, 
Obje˘
 
˘x
)

802 
föÆ
 
Såög
 
	g˛õ¡P©h
 = 
∑th
;

803 
	gP©hUtûs
.
vÆid©eP©h
(
˛õ¡P©h
, 
¸óãMode
.
isSequítül
());

805 
föÆ
 
Såög
 
	g£rvîP©h
 = 
¥ïídChroŸ
(
˛õ¡P©h
);

807 
Reque°Hódî
 
	gh
 = 
√w
 RequestHeader();

808 
	gh
.
£tTy≥
(
ZooDefs
.
OpCode
.
¸óã
);

809 
Cª©eReque°
 
	gªque°
 = 
√w
 CreateRequest();

810 
Cª©eRe•⁄£
 
	gª•⁄£
 = 
√w
 CreateResponse();

811 
RïlyHódî
 
	gr
 = 
√w
 ReplyHeader();

812 
	gªque°
.
£tD©a
(
d©a
);

813 
	gªque°
.
£tFœgs
(
¸óãMode
.
toFœg
());

814 
	gªque°
.
£tP©h
(
£rvîP©h
);

815 
	gªque°
.
£tA˛
(
a˛
);

816 
	g˙xn
.
queuePackë
(
h
, 
r
, 
ªque°
, 
ª•⁄£
, 
cb
, 
˛õ¡P©h
,

817 
£rvîP©h
, 
˘x
, 
nuŒ
);

847 
public
 
	$dñëe
(
föÆ
 
Såög
 
∑th
, 
vîsi⁄
)

848 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


850 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

851 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

853 
föÆ
 
Såög
 
£rvîP©h
;

858 i‡(
˛õ¡P©h
.
	`equÆs
("/")) {

861 
£rvîP©h
 = 
˛õ¡P©h
;

863 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

866 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

867 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
dñëe
);

868 
DñëeReque°
 
ªque°
 = 
√w
 
	`DñëeReque°
();

869 
ªque°
.
	`£tP©h
(
£rvîP©h
);

870 
ªque°
.
	`£tVîsi⁄
(
vîsi⁄
);

871 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
nuŒ
,Çull);

872 i‡(
r
.
	`gëEº
() != 0) {

873 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

874 
˛õ¡P©h
);

876 
	}
}

905 
public
 
	gLi°
<
	gOpResu…
> 
mu…i
(
IãøbÀ
<
Op
> 
›s
Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

907 
	gLi°
<
	gOp
> 
	gå™ß˘i⁄
 = 
√w
 
AºayLi°
<
Op
>();

908 
Op
 
	g›
 : 
›s
) {

909 
å™ß˘i⁄
.
add
(
wôhRoŸPªfix
(
›
));

911  
mu…iI¡î«l
(
√w
 
Mu…iTønß˘i⁄Rec‹d
(
å™ß˘i⁄
));

914 
¥iv©e
 
Op
 
	$wôhRoŸPªfix
(
Op
 
›
) {

915 i‡(
nuŒ
 !
›
.
	`gëP©h
()) {

916 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
›
.
	`gëP©h
());

917 i‡(!
›
.
	`gëP©h
().
	`equÆs
(
£rvîP©h
)) {

918  
›
.
	`wôhChroŸ
(
£rvîP©h
);

921  
›
;

922 
	}
}

924 
¥Ÿe˘ed
 
	gLi°
<
	gOpResu…
> 
	$mu…iI¡î«l
(
Mu…iTønß˘i⁄Rec‹d
 
ªque°
)

925 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

926 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

927 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
mu…i
);

928 
Mu…iRe•⁄£
 
ª•⁄£
 = 
√w
 
	`Mu…iRe•⁄£
();

929 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
nuŒ
);

930 i‡(
r
.
	`gëEº
() != 0) {

931 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()));

934 
Li°
<
OpResu…
> 
ªsu…s
 = 
ª•⁄£
.
	`gëResu…Li°
();

936 
Eº‹Resu…
 
ÁèlEº‹
 = 
nuŒ
;

937 
OpResu…
 
ªsu…
 : 
ªsu…s
) {

938 i‡(
ªsu…
 
ö°™˚of
 
Eº‹Resu…
 && ((Eº‹Resu…Ïesu…).
	`gëEº
(Ë!
Kì≥rEx˚±i⁄
.
Code
.
OK
.
	`ötVÆue
()) {

939 
ÁèlEº‹
 = (
Eº‹Resu…
Ë
ªsu…
;

944 i‡(
ÁèlEº‹
 !
nuŒ
) {

945 
Kì≥rEx˚±i⁄
 
ex
 = Kì≥rEx˚±i⁄.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
ÁèlEº‹
.
	`gëEº
()));

946 
ex
.
	`£tMu…iResu…s
(
ªsu…s
);

947 
throw
 
ex
;

950  
ªsu…s
;

951 
	}
}

962 
public
 
Tønß˘i⁄
 
	$å™ß˘i⁄
() {

963  
√w
 
	`Tønß˘i⁄
(
this
);

964 
	}
}

971 
public
 
	$dñëe
(
föÆ
 
Såög
 
∑th
, 
vîsi⁄
, 
VoidCÆlback
 
cb
,

972 
Obje˘
 
˘x
)

974 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

975 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

977 
föÆ
 
Såög
 
£rvîP©h
;

982 i‡(
˛õ¡P©h
.
	`equÆs
("/")) {

985 
£rvîP©h
 = 
˛õ¡P©h
;

987 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

990 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

991 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
dñëe
);

992 
DñëeReque°
 
ªque°
 = 
√w
 
	`DñëeReque°
();

993 
ªque°
.
	`£tP©h
(
£rvîP©h
);

994 
ªque°
.
	`£tVîsi⁄
(
vîsi⁄
);

995 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
nuŒ
, 
cb
, 
˛õ¡P©h
,

996 
£rvîP©h
, 
˘x
, 
nuŒ
);

997 
	}
}

1016 
public
 
Sèt
 
	$exi°s
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
)

1017 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1019 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1020 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1023 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1024 i‡(
w©chî
 !
nuŒ
) {

1025 
wcb
 = 
√w
 
	`Exi°sW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1028 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1030 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1031 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
exi°s
);

1032 
Exi°sReque°
 
ªque°
 = 
√w
 
	`Exi°sReque°
();

1033 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1034 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1035 
SëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëD©aRe•⁄£
();

1036 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
wcb
);

1037 i‡(
r
.
	`gëEº
() != 0) {

1038 i‡(
r
.
	`gëEº
(Ë=
Kì≥rEx˚±i⁄
.
Code
.
NONODE
.
	`ötVÆue
()) {

1039  
nuŒ
;

1041 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1042 
˛õ¡P©h
);

1045  
ª•⁄£
.
	`gëSèt
().
	`gëCzxid
(Ë=-1 ? 
nuŒ
 :Ñesponse.getStat();

1046 
	}
}

1066 
public
 
Sèt
 
	$exi°s
(
Såög
 
∑th
, 
boﬁón
 
w©ch
Ë
throws
 
Kì≥rEx˚±i⁄
,

1067 
I¡îru±edEx˚±i⁄


1069  
	`exi°s
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
);

1070 
	}
}

1077 
public
 
	$exi°s
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
,

1078 
SètCÆlback
 
cb
, 
Obje˘
 
˘x
)

1080 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1081 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1084 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1085 i‡(
w©chî
 !
nuŒ
) {

1086 
wcb
 = 
√w
 
	`Exi°sW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1089 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1091 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1092 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
exi°s
);

1093 
Exi°sReque°
 
ªque°
 = 
√w
 
	`Exi°sReque°
();

1094 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1095 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1096 
SëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëD©aRe•⁄£
();

1097 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1098 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
wcb
);

1099 
	}
}

1106 
public
 
	$exi°s
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
SètCÆlback
 
cb
, 
Obje˘
 
˘x
) {

1107 
	`exi°s
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
, 
cb
, 
˘x
);

1108 
	}
}

1129 
public
 
	gbyã
[] 
	$gëD©a
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
, 
Sèt
 
°©
)

1130 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1132 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1133 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1136 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1137 i‡(
w©chî
 !
nuŒ
) {

1138 
wcb
 = 
√w
 
	`D©aW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1141 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1143 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1144 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëD©a
);

1145 
GëD©aReque°
 
ªque°
 = 
√w
 
	`GëD©aReque°
();

1146 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1147 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1148 
GëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëD©aRe•⁄£
();

1149 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
wcb
);

1150 i‡(
r
.
	`gëEº
() != 0) {

1151 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1152 
˛õ¡P©h
);

1154 i‡(
°©
 !
nuŒ
) {

1155 
D©aTªe
.
	`c›ySèt
(
ª•⁄£
.
	`gëSèt
(), 
°©
);

1157  
ª•⁄£
.
	`gëD©a
();

1158 
	}
}

1178 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
Sèt
 
°©
)

1179 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

1180  
	`gëD©a
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
, 
°©
);

1181 
	}
}

1188 
public
 
	$gëD©a
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
,

1189 
D©aCÆlback
 
cb
, 
Obje˘
 
˘x
)

1191 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1192 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1195 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1196 i‡(
w©chî
 !
nuŒ
) {

1197 
wcb
 = 
√w
 
	`D©aW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1200 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1202 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1203 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëD©a
);

1204 
GëD©aReque°
 
ªque°
 = 
√w
 
	`GëD©aReque°
();

1205 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1206 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1207 
GëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëD©aRe•⁄£
();

1208 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1209 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
wcb
);

1210 
	}
}

1217 
public
 
	$gëD©a
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
D©aCÆlback
 
cb
, 
Obje˘
 
˘x
) {

1218 
	`gëD©a
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
, 
cb
, 
˘x
);

1219 
	}
}

1249 
public
 
Sèt
 
	$£tD©a
(
föÆ
 
Såög
 
∑th
, 
byã
 
d©a
[], 
vîsi⁄
)

1250 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1252 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1253 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1255 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1257 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1258 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
£tD©a
);

1259 
SëD©aReque°
 
ªque°
 = 
√w
 
	`SëD©aReque°
();

1260 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1261 
ªque°
.
	`£tD©a
(
d©a
);

1262 
ªque°
.
	`£tVîsi⁄
(
vîsi⁄
);

1263 
SëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëD©aRe•⁄£
();

1264 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
nuŒ
);

1265 i‡(
r
.
	`gëEº
() != 0) {

1266 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1267 
˛õ¡P©h
);

1269  
ª•⁄£
.
	`gëSèt
();

1270 
	}
}

1277 
public
 
	$£tD©a
(
föÆ
 
Såög
 
∑th
, 
byã
 
d©a
[], 
vîsi⁄
,

1278 
SètCÆlback
 
cb
, 
Obje˘
 
˘x
)

1280 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1281 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1283 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1285 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1286 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
£tD©a
);

1287 
SëD©aReque°
 
ªque°
 = 
√w
 
	`SëD©aReque°
();

1288 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1289 
ªque°
.
	`£tD©a
(
d©a
);

1290 
ªque°
.
	`£tVîsi⁄
(
vîsi⁄
);

1291 
SëD©aRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëD©aRe•⁄£
();

1292 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1293 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
nuŒ
);

1294 
	}
}

1311 
public
 
	gLi°
<
	gACL
> 
	$gëACL
(
föÆ
 
Såög
 
∑th
, 
Sèt
 
°©
)

1312 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1314 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1315 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1317 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1319 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1320 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëACL
);

1321 
GëACLReque°
 
ªque°
 = 
√w
 
	`GëACLReque°
();

1322 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1323 
GëACLRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëACLRe•⁄£
();

1324 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
nuŒ
);

1325 i‡(
r
.
	`gëEº
() != 0) {

1326 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1327 
˛õ¡P©h
);

1329 
D©aTªe
.
	`c›ySèt
(
ª•⁄£
.
	`gëSèt
(), 
°©
);

1330  
ª•⁄£
.
	`gëA˛
();

1331 
	}
}

1338 
public
 
	$gëACL
(
föÆ
 
Såög
 
∑th
, 
Sèt
 
°©
, 
ACLCÆlback
 
cb
,

1339 
Obje˘
 
˘x
)

1341 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1342 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1344 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1346 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1347 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëACL
);

1348 
GëACLReque°
 
ªque°
 = 
√w
 
	`GëACLReque°
();

1349 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1350 
GëACLRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëACLRe•⁄£
();

1351 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1352 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
nuŒ
);

1353 
	}
}

1375 
public
 
Sèt
 
£tACL
(
föÆ
 
Såög
 
∑th
, 
Li°
<
ACL
> 
a˛
, 
vîsi⁄
)

1376 
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄


1378 
föÆ
 
Såög
 
	g˛õ¡P©h
 = 
∑th
;

1379 
	gP©hUtûs
.
vÆid©eP©h
(
˛õ¡P©h
);

1381 
föÆ
 
Såög
 
	g£rvîP©h
 = 
¥ïídChroŸ
(
˛õ¡P©h
);

1383 
Reque°Hódî
 
	gh
 = 
√w
 RequestHeader();

1384 
	gh
.
£tTy≥
(
ZooDefs
.
OpCode
.
£tACL
);

1385 
SëACLReque°
 
	gªque°
 = 
√w
 SetACLRequest();

1386 
	gªque°
.
£tP©h
(
£rvîP©h
);

1387 i‡(
	ga˛
 !
nuŒ
 && 
a˛
.
size
() == 0) {

1388 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
(
˛õ¡P©h
);

1390 
	gªque°
.
£tA˛
(
a˛
);

1391 
	gªque°
.
£tVîsi⁄
(
vîsi⁄
);

1392 
SëACLRe•⁄£
 
	gª•⁄£
 = 
√w
 SetACLResponse();

1393 
RïlyHódî
 
	gr
 = 
˙xn
.
submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
nuŒ
);

1394 i‡(
	gr
.
gëEº
() != 0) {

1395 
throw
 
Kì≥rEx˚±i⁄
.
¸óã
(Kì≥rEx˚±i⁄.
Code
.
gë
(
r
.
gëEº
()),

1396 
˛õ¡P©h
);

1398  
	gª•⁄£
.
gëSèt
();

1406 
public
 
£tACL
(
föÆ
 
Såög
 
∑th
, 
Li°
<
ACL
> 
a˛
, 
vîsi⁄
,

1407 
SètCÆlback
 
cb
, 
Obje˘
 
˘x
)

1409 
föÆ
 
Såög
 
	g˛õ¡P©h
 = 
∑th
;

1410 
	gP©hUtûs
.
vÆid©eP©h
(
˛õ¡P©h
);

1412 
föÆ
 
Såög
 
	g£rvîP©h
 = 
¥ïídChroŸ
(
˛õ¡P©h
);

1414 
Reque°Hódî
 
	gh
 = 
√w
 RequestHeader();

1415 
	gh
.
£tTy≥
(
ZooDefs
.
OpCode
.
£tACL
);

1416 
SëACLReque°
 
	gªque°
 = 
√w
 SetACLRequest();

1417 
	gªque°
.
£tP©h
(
£rvîP©h
);

1418 
	gªque°
.
£tA˛
(
a˛
);

1419 
	gªque°
.
£tVîsi⁄
(
vîsi⁄
);

1420 
SëACLRe•⁄£
 
	gª•⁄£
 = 
√w
 SetACLResponse();

1421 
	g˙xn
.
queuePackë
(
h
, 
√w
 
RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1422 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
nuŒ
);

1446 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
)

1447 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1449 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1450 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1453 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1454 i‡(
w©chî
 !
nuŒ
) {

1455 
wcb
 = 
√w
 
	`ChûdW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1458 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1460 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1461 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëChûdªn
);

1462 
GëChûdªnReque°
 
ªque°
 = 
√w
 
	`GëChûdªnReque°
();

1463 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1464 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1465 
GëChûdªnRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëChûdªnRe•⁄£
();

1466 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
wcb
);

1467 i‡(
r
.
	`gëEº
() != 0) {

1468 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1469 
˛õ¡P©h
);

1471  
ª•⁄£
.
	`gëChûdªn
();

1472 
	}
}

1494 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
boﬁón
 
w©ch
)

1495 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

1496  
	`gëChûdªn
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
);

1497 
	}
}

1504 
public
 
	$gëChûdªn
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
,

1505 
ChûdªnCÆlback
 
cb
, 
Obje˘
 
˘x
)

1507 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1508 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1511 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1512 i‡(
w©chî
 !
nuŒ
) {

1513 
wcb
 = 
√w
 
	`ChûdW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1516 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1518 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1519 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëChûdªn
);

1520 
GëChûdªnReque°
 
ªque°
 = 
√w
 
	`GëChûdªnReque°
();

1521 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1522 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1523 
GëChûdªnRe•⁄£
 
ª•⁄£
 = 
√w
 
	`GëChûdªnRe•⁄£
();

1524 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1525 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
wcb
);

1526 
	}
}

1533 
public
 
	$gëChûdªn
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
ChûdªnCÆlback
 
cb
,

1534 
Obje˘
 
˘x
)

1536 
	`gëChûdªn
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
, 
cb
, 
˘x
);

1537 
	}
}

1563 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
,

1564 
Sèt
 
°©
)

1565 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


1567 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1568 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1571 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1572 i‡(
w©chî
 !
nuŒ
) {

1573 
wcb
 = 
√w
 
	`ChûdW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1576 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1578 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1579 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëChûdªn2
);

1580 
GëChûdªn2Reque°
 
ªque°
 = 
√w
 
	`GëChûdªn2Reque°
();

1581 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1582 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1583 
GëChûdªn2Re•⁄£
 
ª•⁄£
 = 
√w
 
	`GëChûdªn2Re•⁄£
();

1584 
RïlyHódî
 
r
 = 
˙xn
.
	`submôReque°
(
h
, 
ªque°
, 
ª•⁄£
, 
wcb
);

1585 i‡(
r
.
	`gëEº
() != 0) {

1586 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
(
r
.
	`gëEº
()),

1587 
˛õ¡P©h
);

1589 i‡(
°©
 !
nuŒ
) {

1590 
D©aTªe
.
	`c›ySèt
(
ª•⁄£
.
	`gëSèt
(), 
°©
);

1592  
ª•⁄£
.
	`gëChûdªn
();

1593 
	}
}

1619 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
Sèt
 
°©
)

1620 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

1621  
	`gëChûdªn
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
,

1622 
°©
);

1623 
	}
}

1632 
public
 
	$gëChûdªn
(
föÆ
 
Såög
 
∑th
, 
W©chî
 
w©chî
,

1633 
Chûdªn2CÆlback
 
cb
, 
Obje˘
 
˘x
)

1635 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1636 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1639 
W©chRegi°øti⁄
 
wcb
 = 
nuŒ
;

1640 i‡(
w©chî
 !
nuŒ
) {

1641 
wcb
 = 
√w
 
	`ChûdW©chRegi°øti⁄
(
w©chî
, 
˛õ¡P©h
);

1644 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1646 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1647 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
gëChûdªn2
);

1648 
GëChûdªn2Reque°
 
ªque°
 = 
√w
 
	`GëChûdªn2Reque°
();

1649 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1650 
ªque°
.
	`£tW©ch
(
w©chî
 !
nuŒ
);

1651 
GëChûdªn2Re•⁄£
 
ª•⁄£
 = 
√w
 
	`GëChûdªn2Re•⁄£
();

1652 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1653 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
wcb
);

1654 
	}
}

1663 
public
 
	$gëChûdªn
(
Såög
 
∑th
, 
boﬁón
 
w©ch
, 
Chûdªn2CÆlback
 
cb
,

1664 
Obje˘
 
˘x
)

1666 
	`gëChûdªn
(
∑th
, 
w©ch
 ? 
w©chM™agî
.
deÁu…W©chî
 : 
nuŒ
, 
cb
, 
˘x
);

1667 
	}
}

1676 
public
 
	$sync
(
föÆ
 
Såög
 
∑th
, 
VoidCÆlback
 
cb
, 
Obje˘
 
˘x
){

1677 
föÆ
 
Såög
 
˛õ¡P©h
 = 
∑th
;

1678 
P©hUtûs
.
	`vÆid©eP©h
(
˛õ¡P©h
);

1680 
föÆ
 
Såög
 
£rvîP©h
 = 
	`¥ïídChroŸ
(
˛õ¡P©h
);

1682 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

1683 
h
.
	`£tTy≥
(
ZooDefs
.
OpCode
.
sync
);

1684 
SyncReque°
 
ªque°
 = 
√w
 
	`SyncReque°
();

1685 
SyncRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SyncRe•⁄£
();

1686 
ªque°
.
	`£tP©h
(
£rvîP©h
);

1687 
˙xn
.
	`queuePackë
(
h
, 
√w
 
	`RïlyHódî
(), 
ªque°
, 
ª•⁄£
, 
cb
,

1688 
˛õ¡P©h
, 
£rvîP©h
, 
˘x
, 
nuŒ
);

1689 
	}
}

1691 
public
 
Sèãs
 
	$gëSèã
() {

1692  
˙xn
.
	`gëSèã
();

1693 
	}
}

1704 @
Ovîride


1705 
public
 
Såög
 
	$toSåög
() {

1706 
Sèãs
 
°©e
 = 
	`gëSèã
();

1707  ("Sèã:" + 
°©e
.
	`toSåög
()

1708 + (
°©e
.
	`isC⁄√˘ed
() ?

1709 " Timeout:" + 
	`gëSessi⁄Timeout
() + " " :

1711 + 
˙xn
);

1712 
	}
}

1729 
¥Ÿe˘ed
 
boﬁón
 
	$ã°abÀWaôF‹Shutdown
(
waô
)

1730 
throws
 
I¡îru±edEx˚±i⁄


1732 
˙xn
.
£ndThªad
.
	`joö
(
waô
);

1733 i‡(
˙xn
.
£ndThªad
.
	`isAlive
()Ë 
Ál£
;

1734 
˙xn
.
evítThªad
.
	`joö
(
waô
);

1735 i‡(
˙xn
.
evítThªad
.
	`isAlive
()Ë 
Ál£
;

1736  
åue
;

1737 
	}
}

1751 
¥Ÿe˘ed
 
SockëAddªss
 
	$ã°abÀRemŸeSockëAddªss
() {

1752  
˙xn
.
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëRemŸeSockëAddªss
();

1753 
	}
}

1764 
¥Ÿe˘ed
 
SockëAddªss
 
	$ã°abÀLoˇlSockëAddªss
() {

1765  
˙xn
.
£ndThªad
.
	`gëClõ¡CnxnSockë
().
	`gëLoˇlSockëAddªss
();

1766 
	}
}

1768 
¥iv©e
 
Clõ¡CnxnSockë
 
	$gëClõ¡CnxnSockë
(Ë
throws
 
IOEx˚±i⁄
 {

1769 
Såög
 
˛õ¡CnxnSockëName
 = 
Sy°em


1770 .
	`gëPr›îty
(
ZOOKEEPER_CLIENT_CNXN_SOCKET
);

1771 i‡(
˛õ¡CnxnSockëName
 =
nuŒ
) {

1772 
˛õ¡CnxnSockëName
 = 
Clõ¡CnxnSockëNIO
.
˛ass
.
	`gëName
();

1774 
åy
 {

1775  (
Clõ¡CnxnSockë
Ë
Cœss
.
	`f‹Name
(
˛õ¡CnxnSockëName
)

1776 .
	`√wIn°™˚
();

1777 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

1778 
IOEx˚±i⁄
 
i€
 = 
√w
 
	`IOEx˚±i⁄
("Couldn't instantiate "

1779 + 
˛õ¡CnxnSockëName
);

1780 
i€
.
	`öôCau£
(
e
);

1781 
throw
 
i€
;

1783 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooKeeperMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

24 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gInvoˇti⁄T¨gëEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gMëhod
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

43 
imp‹t
 
	gjava
.
	gutû
.
	gSåögTokíizî
;

49 
public
 cœs†
	cZooKì≥rMaö
 {

50 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rMaö
.
˛ass
);

51 
¥Ÿe˘ed
 
föÆ
 
	mM≠
<
	mSåög
,Såög> 
	mcomm™dM≠
 = 
√w
 
HashM≠
<
Såög
,String>( );

53 
¥Ÿe˘ed
 
MyComm™dO±i⁄s
 
	m˛
 = 
√w
 MyCommandOptions();

54 
¥Ÿe˘ed
 
	mHashM≠
<
	mI¡egî
,
	mSåög
> 
	mhi°‹y
 = 
√w
 
HashM≠
<
I¡egî
,String>( );

55 
¥Ÿe˘ed
 
	mcomm™dCou¡
 = 0;

56 
¥Ÿe˘ed
 
boﬁón
 
	m¥ötW©ches
 = 
åue
;

58 
¥Ÿe˘ed
 
ZooKì≥r
 
	mzk
;

59 
¥Ÿe˘ed
 
Såög
 
	mho°
 = "";

61 
public
 
boﬁón
 
	$gëPrötW©ches
( ) {

62  
¥ötW©ches
;

66 
comm™dM≠
.
	`put
("connect", "host:port");

67 
comm™dM≠
.
	`put
("close","");

68 
comm™dM≠
.
	`put
("create", "[-s] [-e]Öath dataácl");

69 
comm™dM≠
.
	`put
("delete","path [version]");

70 
comm™dM≠
.
	`put
("rmr","path");

71 
comm™dM≠
.
	`put
("set","path data [version]");

72 
comm™dM≠
.
	`put
("get","path [watch]");

73 
comm™dM≠
.
	`put
("ls","path [watch]");

74 
comm™dM≠
.
	`put
("ls2","path [watch]");

75 
comm™dM≠
.
	`put
("getAcl","path");

76 
comm™dM≠
.
	`put
("setAcl","pathácl");

77 
comm™dM≠
.
	`put
("stat","path [watch]");

78 
comm™dM≠
.
	`put
("sync","path");

79 
comm™dM≠
.
	`put
("setquota","-n|-b valÖath");

80 
comm™dM≠
.
	`put
("listquota","path");

81 
comm™dM≠
.
	`put
("delquota","[-n|-b]Öath");

82 
comm™dM≠
.
	`put
("history","");

83 
comm™dM≠
.
	`put
("redo","cmdno");

84 
comm™dM≠
.
	`put
("printwatches", "on|off");

85 
comm™dM≠
.
	`put
("quit","");

86 
comm™dM≠
.
	`put
("addauth", "schemeáuth");

87 
	}
}

89 
	$ußge
() {

90 
Sy°em
.
îr
.
	`¥öén
("ZooKeeper -server host:port cmdárgs");

91 
Såög
 
cmd
 : 
comm™dM≠
.
	`keySë
()) {

92 
Sy°em
.
îr
.
	`¥öén
("\t"+
cmd
+ " " + 
comm™dM≠
.
	`gë
(cmd));

94 
	}
}

96 
¥iv©e
 cœs†
	cMyW©chî
 
im∂emíts
 
	gW©chî
 {

97 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

98 i‡(
gëPrötW©ches
()) {

99 
	gZooKì≥rMaö
.
¥ötMesßge
("WATCHER::");

100 
	gZooKì≥rMaö
.
¥ötMesßge
(
evít
.
toSåög
());

105 
¥iv©e
 
	$gëPîmFromSåög
(
Såög
 
≥rmSåög
) {

106 
≥rm
 = 0;

107 
i
 = 0; i < 
≥rmSåög
.
	`Àngth
(); i++) {

108 
≥rmSåög
.
	`ch¨At
(
i
)) {

110 
≥rm
 |
ZooDefs
.
Pîms
.
READ
;

113 
≥rm
 |
ZooDefs
.
Pîms
.
WRITE
;

116 
≥rm
 |
ZooDefs
.
Pîms
.
CREATE
;

119 
≥rm
 |
ZooDefs
.
Pîms
.
DELETE
;

122 
≥rm
 |
ZooDefs
.
Pîms
.
ADMIN
;

125 
Sy°em
.
îr


126 .
	`¥öén
("Unknow¿≥rmÅy≥: " + 
≥rmSåög
.
	`ch¨At
(
i
));

129  
≥rm
;

130 
	}
}

132 
¥iv©e
 
	$¥ötSèt
(
Sèt
 
°©
) {

133 
Sy°em
.
îr
.
	`¥öén
("cZxid = 0x" + 
L⁄g
.
	`toHexSåög
(
°©
.
	`gëCzxid
()));

134 
Sy°em
.
îr
.
	`¥öén
("˘imê" + 
√w
 
	`D©e
(
°©
.
	`gëCtime
()).
	`toSåög
());

135 
Sy°em
.
îr
.
	`¥öén
("mZxid = 0x" + 
L⁄g
.
	`toHexSåög
(
°©
.
	`gëMzxid
()));

136 
Sy°em
.
îr
.
	`¥öén
("mtimê" + 
√w
 
	`D©e
(
°©
.
	`gëMtime
()).
	`toSåög
());

137 
Sy°em
.
îr
.
	`¥öén
("pZxid = 0x" + 
L⁄g
.
	`toHexSåög
(
°©
.
	`gëPzxid
()));

138 
Sy°em
.
îr
.
	`¥öén
("cvîsi⁄ = " + 
°©
.
	`gëCvîsi⁄
());

139 
Sy°em
.
îr
.
	`¥öén
("d©aVîsi⁄ = " + 
°©
.
	`gëVîsi⁄
());

140 
Sy°em
.
îr
.
	`¥öén
("a˛Vîsi⁄ = " + 
°©
.
	`gëAvîsi⁄
());

141 
Sy°em
.
îr
.
	`¥öén
("ephemeralOwner = 0x"

142 + 
L⁄g
.
	`toHexSåög
(
°©
.
	`gëEphemîÆOw√r
()));

143 
Sy°em
.
îr
.
	`¥öén
("d©aLígth = " + 
°©
.
	`gëD©aLígth
());

144 
Sy°em
.
îr
.
	`¥öén
("numChûdª¿" + 
°©
.
	`gëNumChûdªn
());

145 
	}
}

151 ˛as†
	cMyComm™dO±i⁄s
 {

153 
¥iv©e
 
	gM≠
<
	gSåög
,Såög> 
	g›ti⁄s
 = 
√w
 
HashM≠
<
Såög
,String>();

154 
¥iv©e
 
	gLi°
<
	gSåög
> 
	gcmdArgs
 = 
nuŒ
;

155 
¥iv©e
 
Såög
 
	gcomm™d
 = 
nuŒ
;

157 
public
 
MyComm™dO±i⁄s
() {

158 
	g›ti⁄s
.
put
("server", "localhost:2181");

159 
	g›ti⁄s
.
put
("timeout", "30000");

162 
public
 
Såög
 
gëO±i⁄
(Såög 
›t
) {

163  
	g›ti⁄s
.
gë
(
›t
);

166 
public
 
Såög
 
gëComm™d
( ) {

167  
	gcomm™d
;

170 
public
 
Såög
 
gëCmdArgumít
–
ödex
 ) {

171  
	gcmdArgs
.
gë
(
ödex
);

174 
public
 
gëNumArgumíts
( ) {

175  
	gcmdArgs
.
size
();

178 
public
 
	gSåög
[] 
gëArgAºay
() {

179  
	gcmdArgs
.
toAºay
(
√w
 
Såög
[0]);

188 
public
 
boﬁón
 
∑r£O±i⁄s
(
Såög
[] 
¨gs
) {

189 
	gLi°
<
	gSåög
> 
	g¨gLi°
 = 
Aºays
.
asLi°
(
¨gs
);

190 
	gIãøt‹
<
	gSåög
> 
	gô
 = 
¨gLi°
.
ôî©‹
();

192 
	gô
.
hasNext
()) {

193 
Såög
 
	g›t
 = 
ô
.
√xt
();

194 
	gåy
 {

195 i‡(
	g›t
.
equÆs
("-server")) {

196 
	g›ti⁄s
.
put
("£rvî", 
ô
.
√xt
());

197 } i‡(
	g›t
.
equÆs
("-timeout")) {

198 
	g›ti⁄s
.
put
("timeout", 
ô
.
√xt
());

199 } i‡(
	g›t
.
equÆs
("-r")) {

200 
	g›ti⁄s
.
put
("readonly", "true");

202 } 
ˇtch
 (
NoSuchEÀmítEx˚±i⁄
 
e
){

203 
	gSy°em
.
	gîr
.
¥öén
("Error:Çoárgument found for option "

204 + 
›t
);

205  
	gÁl£
;

208 i‡(!
	g›t
.
°¨tsWôh
("-")) {

209 
	gcomm™d
 = 
›t
;

210 
	gcmdArgs
 = 
√w
 
AºayLi°
<
Såög
>( );

211 
	gcmdArgs
.
add
–
comm™d
 );

212 
	gô
.
hasNext
()) {

213 
	gcmdArgs
.
add
(
ô
.
√xt
());

215  
	gåue
;

218  
	gåue
;

226 
public
 
boﬁón
 
∑r£Comm™d
–
Såög
 
cmd°rög
 ) {

227 
SåögTokíizî
 
	gcmdTokís
 = 
√w
 SåögTokíizî(
cmd°rög
, " ");

228 
	gSåög
[] 
	g¨gs
 = 
√w
 
Såög
[
cmdTokís
.
cou¡Tokís
()];

229 
	gtokíIndex
 = 0;

230 
	gcmdTokís
.
hasM‹eTokís
()) {

231 
	g¨gs
[
tokíIndex
] = 
cmdTokís
.
√xtTokí
();

232 
	gtokíIndex
++;

234 i‡(
	g¨gs
.
	gÀngth
 == 0){

235  
Ál£
;

237 
	gcomm™d
 = 
¨gs
[0];

238 
	gcmdArgs
 = 
Aºays
.
asLi°
(
¨gs
);

239  
	gåue
;

251 
¥Ÿe˘ed
 
	$addToHi°‹y
(
i
,
Såög
 
cmd
) {

252 
hi°‹y
.
	`put
(
i
, 
cmd
);

253 
	}
}

255 
public
 
	gLi°
<
	gSåög
> 
	$gëComm™ds
() {

256  
√w
 
LökedLi°
<
Såög
>(
comm™dM≠
.
	`keySë
());

257 
	}
}

259 
¥Ÿe˘ed
 
Såög
 
	$gëProm±
() {

260  "[zk: " + 
ho°
 + "("+
zk
.
	`gëSèã
()+")" + " " + 
comm™dCou¡
 + "] ";

261 
	}
}

263 
public
 
	$¥ötMesßge
(
Såög
 
msg
) {

264 
Sy°em
.
out
.
	`¥öén
("\n"+
msg
);

265 
	}
}

267 
¥Ÿe˘ed
 
	$c⁄√˘ToZK
(
Såög
 
√wHo°
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
 {

268 i‡(
zk
 !
nuŒ
 && zk.
	`gëSèã
().
	`isAlive
()) {

269 
zk
.
	`˛o£
();

271 
ho°
 = 
√wHo°
;

272 
boﬁón
 
ªadO∆y
 = 
˛
.
	`gëO±i⁄
("ªad⁄ly"Ë!
nuŒ
;

273 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°
,

274 
I¡egî
.
	`∑r£I¡
(
˛
.
	`gëO±i⁄
("timeout")),

275 
√w
 
	`MyW©chî
(), 
ªadO∆y
);

276 
	}
}

278 
public
 
	$maö
(
Såög
 
¨gs
[])

279 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


281 
ZooKì≥rMaö
 
maö
 = 
√w
 
	`ZooKì≥rMaö
(
¨gs
);

282 
maö
.
	`run
();

283 
	}
}

285 
public
 
	$ZooKì≥rMaö
(
Såög
 
¨gs
[]Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

286 
˛
.
	`∑r£O±i⁄s
(
¨gs
);

287 
Sy°em
.
out
.
	`¥öén
("C⁄√˘ögÅÿ" + 
˛
.
	`gëO±i⁄
("server"));

288 
	`c⁄√˘ToZK
(
˛
.
	`gëO±i⁄
("server"));

291 
	}
}

293 
public
 
	$ZooKì≥rMaö
(
ZooKì≥r
 
zk
) {

294 
this
.
zk
 = zk;

295 
	}
}

297 @
SuµªssW¨nögs
("unchecked")

298 
	$run
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

299 i‡(
˛
.
	`gëComm™d
(Ë=
nuŒ
) {

300 
Sy°em
.
out
.
	`¥öén
("WelcomeÅo ZooKeeper!");

302 
boﬁón
 
jlöemissög
 = 
Ál£
;

304 
åy
 {

305 
Cœss
 
c⁄sﬁeC
 = Cœss.
	`f‹Name
("jline.ConsoleReader");

306 
Cœss
 
com∂ë‹C
 =

307 
Cœss
.
	`f‹Name
("org.apache.zookeeper.JLineZNodeCompletor");

309 
Sy°em
.
out
.
	`¥öén
("JLine support isÉnabled");

311 
Obje˘
 
c⁄sﬁe
 =

312 
c⁄sﬁeC
.
	`gëC⁄°ru˘‹
().
	`√wIn°™˚
();

314 
Obje˘
 
com∂ë‹
 =

315 
com∂ë‹C
.
	`gëC⁄°ru˘‹
(
ZooKì≥r
.
˛ass
).
	`√wIn°™˚
(
zk
);

316 
Mëhod
 
addCom∂ë‹
 = 
c⁄sﬁeC
.
	`gëMëhod
("addCompletor",

317 
Cœss
.
	`f‹Name
("jline.Completor"));

318 
addCom∂ë‹
.
	`övoke
(
c⁄sﬁe
, 
com∂ë‹
);

320 
Såög
 
löe
;

321 
Mëhod
 
ªadLöe
 = 
c⁄sﬁeC
.
	`gëMëhod
("ªadLöe", 
Såög
.
˛ass
);

322 (
löe
 = (
Såög
)
ªadLöe
.
	`övoke
(
c⁄sﬁe
, 
	`gëProm±
())Ë!
nuŒ
) {

323 
	`execuãLöe
(
löe
);

325 } 
	`ˇtch
 (
CœssNŸFoundEx˚±i⁄
 
e
) {

326 
LOG
.
	`debug
("U«bÀÅÿ°¨àjlöe", 
e
);

327 
jlöemissög
 = 
åue
;

328 } 
	`ˇtch
 (
NoSuchMëhodEx˚±i⁄
 
e
) {

329 
LOG
.
	`debug
("U«bÀÅÿ°¨àjlöe", 
e
);

330 
jlöemissög
 = 
åue
;

331 } 
	`ˇtch
 (
Invoˇti⁄T¨gëEx˚±i⁄
 
e
) {

332 
LOG
.
	`debug
("U«bÀÅÿ°¨àjlöe", 
e
);

333 
jlöemissög
 = 
åue
;

334 } 
	`ˇtch
 (
IŒegÆAc˚ssEx˚±i⁄
 
e
) {

335 
LOG
.
	`debug
("U«bÀÅÿ°¨àjlöe", 
e
);

336 
jlöemissög
 = 
åue
;

337 } 
	`ˇtch
 (
In°™tüti⁄Ex˚±i⁄
 
e
) {

338 
LOG
.
	`debug
("U«bÀÅÿ°¨àjlöe", 
e
);

339 
jlöemissög
 = 
åue
;

342 i‡(
jlöemissög
) {

343 
Sy°em
.
out
.
	`¥öén
("JLine support is disabled");

344 
Buf„ªdRódî
 
br
 =

345 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(
Sy°em
.
ö
));

347 
Såög
 
löe
;

348 (
löe
 = 
br
.
	`ªadLöe
()Ë!
nuŒ
) {

349 
	`execuãLöe
(
löe
);

354 
boﬁón
 
w©ch
 = 
	`¥o˚ssCmd
(
˛
);

355 i‡(!
w©ch
) {

356 
Sy°em
.
	`exô
(0);

358 
	}
}

360 
public
 
	$execuãLöe
(
Såög
 
löe
)

361 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

362 i‡(!
löe
.
	`equÆs
("")) {

363 
˛
.
	`∑r£Comm™d
(
löe
);

364 
	`addToHi°‹y
(
comm™dCou¡
,
löe
);

365 
	`¥o˚ssCmd
(
˛
);

366 
comm™dCou¡
++;

368 
	}
}

370 
¥iv©e
 
D©aCÆlback
 
	gd©aCÆlback
 = 
√w
 
	$D©aCÆlback
() {

372 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

373 
Sèt
 
°©
) {

374 
Sy°em
.
out
.
	`¥öén
("r¯" + 
rc
 + "Ö©h = " + 
∑th
 + " data = "

375 + (
d©a
 =
nuŒ
 ? "nuŒ" : 
√w
 
	`Såög
(data)) + " stat = ");

376 
	`¥ötSèt
(
°©
);

379 
	}
};

392 
¥iv©e
 
boﬁón
 
	$åimProcQuŸas
(
ZooKì≥r
 
zk
, 
Såög
 
∑th
)

393 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


395 i‡(
QuŸas
.
quŸaZookì≥r
.
	`equÆs
(
∑th
)) {

396  
åue
;

398 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
);

399 i‡(
chûdªn
.
	`size
() == 0) {

400 
zk
.
	`dñëe
(
∑th
, -1);

401 
Såög
 
∑ª¡
 = 
∑th
.
	`sub°rög
(0,Ö©h.
	`œ°IndexOf
('/'));

402  
	`åimProcQuŸas
(
zk
, 
∑ª¡
);

404  
åue
;

406 
	}
}

421 
public
 
boﬁón
 
	$dñQuŸa
(
ZooKì≥r
 
zk
, 
Såög
 
∑th
,

422 
boﬁón
 
byãs
, boﬁó¿
numNodes
)

423 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


425 
Såög
 
∑ª¡P©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
;

426 
Såög
 
quŸaP©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" + QuŸas.
limôNode
;

427 i‡(
zk
.
	`exi°s
(
quŸaP©h
, 
Ál£
Ë=
nuŒ
) {

428 
Sy°em
.
out
.
	`¥öén
("QuŸ®d€†nŸÉxi° f‹ " + 
∑th
);

429  
åue
;

431 
byã
[] 
d©a
 = 
nuŒ
;

432 
åy
 {

433 
d©a
 = 
zk
.
	`gëD©a
(
quŸaP©h
, 
Ál£
, 
√w
 
	`Sèt
());

434 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
√
) {

435 
Sy°em
.
îr
.
	`¥öén
("quŸ®d€†nŸÉxi° f‹ " + 
∑th
);

436  
åue
;

438 
SètsTøck
 
°øck
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

439 i‡(
byãs
 && !
numNodes
) {

440 
°øck
.
	`£tByãs
(-1L);

441 
zk
.
	`£tD©a
(
quŸaP©h
, 
°øck
.
	`toSåög
().
	`gëByãs
(), -1);

442 } i‡(!
byãs
 && 
numNodes
) {

443 
°øck
.
	`£tCou¡
(-1);

444 
zk
.
	`£tD©a
(
quŸaP©h
, 
°øck
.
	`toSåög
().
	`gëByãs
(), -1);

445 } i‡(
byãs
 && 
numNodes
) {

448 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑ª¡P©h
, 
Ál£
);

450 
Såög
 
chûd
: 
chûdªn
) {

451 
zk
.
	`dñëe
(
∑ª¡P©h
 + "/" + 
chûd
, -1);

454 
	`åimProcQuŸas
(
zk
, 
∑ª¡P©h
);

456  
åue
;

457 
	}
}

459 
¥iv©e
 
	$checkIfP¨ítQuŸa
(
ZooKì≥r
 
zk
, 
Såög
 
∑th
)

460 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


462 
föÆ
 
Såög
[] 
•lôs
 = 
∑th
.
	`•lô
("/");

463 
Såög
 
quŸaP©h
 = 
QuŸas
.
quŸaZookì≥r
;

464 
Såög
 
°r
: 
•lôs
) {

465 i‡(
°r
.
	`Àngth
() == 0) {

470 
quŸaP©h
 +"/" + 
°r
;

471 
Li°
<
Såög
> 
chûdªn
 = 
nuŒ
;

472 
åy
 {

473 
chûdªn
 = 
zk
.
	`gëChûdªn
(
quŸaP©h
, 
Ál£
);

474 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
√
) {

475 
LOG
.
	`debug
("chûdÑemoved durög quŸ®check", 
√
);

478 i‡(
chûdªn
.
	`size
() == 0) {

481 
Såög
 
chûd
: 
chûdªn
) {

482 i‡(
QuŸas
.
limôNode
.
	`equÆs
(
chûd
)) {

483 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
∑th
 + " hasáÖarent "

484 + 
quŸaP©h
 + " which hasá quota");

488 
	}
}

498 
public
 
boﬁón
 
	$¸óãQuŸa
(
ZooKì≥r
 
zk
, 
Såög
 
∑th
,

499 
byãs
, 
numNodes
)

500 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


505 
Sèt
 
öôSèt
 = 
zk
.
	`exi°s
(
∑th
, 
Ál£
);

506 i‡(
öôSèt
 =
nuŒ
) {

507 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
∑th
 + " doesÇotÉxist.");

512 
Såög
 
quŸaP©h
 = 
QuŸas
.
quŸaZookì≥r
;

518 
Såög
 
ªÆP©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
;

519 
åy
 {

520 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
ªÆP©h
, 
Ál£
);

521 
Såög
 
chûd
: 
chûdªn
) {

522 i‡(!
chûd
.
	`°¨tsWôh
("zookeeper_")) {

523 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
∑th
 + " has child " +

524 
chûd
 + " which hasá quota");

527 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
√
) {

532 
	`checkIfP¨ítQuŸa
(
zk
, 
∑th
);

536 i‡(
zk
.
	`exi°s
(
quŸaP©h
, 
Ál£
Ë=
nuŒ
) {

537 
åy
 {

538 
zk
.
	`¸óã
(
QuŸas
.
¥ocZookì≥r
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

539 
Cª©eMode
.
PERSISTENT
);

540 
zk
.
	`¸óã
(
QuŸas
.
quŸaZookì≥r
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

541 
Cª©eMode
.
PERSISTENT
);

542 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
√
) {

549 
Såög
[] 
•lôs
 = 
∑th
.
	`•lô
("/");

550 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

551 
sb
.
	`≠≥nd
(
quŸaP©h
);

552 
i
=1; i<
•lôs
.
Àngth
; i++) {

553 
sb
.
	`≠≥nd
("/" + 
•lôs
[
i
]);

554 
quŸaP©h
 = 
sb
.
	`toSåög
();

555 
åy
 {

556 
zk
.
	`¸óã
(
quŸaP©h
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
 ,

557 
Cª©eMode
.
PERSISTENT
);

558 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
√
) {

562 
Såög
 
°©P©h
 = 
quŸaP©h
 + "/" + 
QuŸas
.
°©Node
;

563 
quŸaP©h
 = quŸaP©h + "/" + 
QuŸas
.
limôNode
;

564 
SètsTøck
 
°øck
 = 
√w
 
	`SètsTøck
(
nuŒ
);

565 
°øck
.
	`£tByãs
(
byãs
);

566 
°øck
.
	`£tCou¡
(
numNodes
);

567 
åy
 {

568 
zk
.
	`¸óã
(
quŸaP©h
, 
°øck
.
	`toSåög
().
	`gëByãs
(),

569 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

570 
SètsTøck
 
°©s
 = 
√w
 
	`SètsTøck
(
nuŒ
);

571 
°©s
.
	`£tByãs
(0L);

572 
°©s
.
	`£tCou¡
(0);

573 
zk
.
	`¸óã
(
°©P©h
, 
°©s
.
	`toSåög
().
	`gëByãs
(),

574 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

575 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
√
) {

576 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
quŸaP©h
, 
Ál£
 , 
√w
 
	`Sèt
());

577 
SètsTøck
 
°øckC
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

578 i‡(
byãs
 != -1L) {

579 
°øckC
.
	`£tByãs
(
byãs
);

581 i‡(
numNodes
 != -1) {

582 
°øckC
.
	`£tCou¡
(
numNodes
);

584 
zk
.
	`£tD©a
(
quŸaP©h
, 
°øckC
.
	`toSåög
().
	`gëByãs
(), -1);

586  
åue
;

587 
	}
}

589 
¥Ÿe˘ed
 
boﬁón
 
	$¥o˚ssCmd
(
MyComm™dO±i⁄s
 
co
)

590 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


592 
åy
 {

593  
	`¥o˚ssZKCmd
(
co
);

594 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

595 
Sy°em
.
îr
.
	`¥öén
("Comm™d faûed: " + 
e
);

596 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

597 
Sy°em
.
îr
.
	`¥öén
("Nodêd€†nŸÉxi°: " + 
e
.
	`gëP©h
());

598 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoChûdªnF‹EphemîÆsEx˚±i⁄
 
e
) {

599 
Sy°em
.
îr
.
	`¥öén
("Ephemerals cannot have children: "

600 + 
e
.
	`gëP©h
());

601 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
e
) {

602 
Sy°em
.
îr
.
	`¥öén
("NodêÆªadyÉxi°s: " + 
e
.
	`gëP©h
());

603 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NŸEm±yEx˚±i⁄
 
e
) {

604 
Sy°em
.
îr
.
	`¥öén
("NodênŸÉm±y: " + 
e
.
	`gëP©h
());

605 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NŸRódO∆yEx˚±i⁄
 
e
) {

606 
Sy°em
.
îr
.
	`¥öén
("NŸáÑód-⁄ly cÆl: " + 
e
.
	`gëP©h
());

607 }
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
 
e
) {

608 
Sy°em
.
îr
.
	`¥öén
("A˛ i†nŸ vÆid : "+
e
.
	`gëP©h
());

609 }
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

610 
Sy°em
.
îr
.
	`¥öén
("Authítiˇti⁄ i†nŸ vÆid : "+
e
.
	`gëP©h
());

611 }
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
BadArgumítsEx˚±i⁄
 
e
) {

612 
Sy°em
.
îr
.
	`¥öén
("Argumít†¨ênŸ vÆid : "+
e
.
	`gëP©h
());

613 }
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
BadVîsi⁄Ex˚±i⁄
 
e
) {

614 
Sy°em
.
îr
.
	`¥öén
("vîsi⁄ Nÿi†nŸ vÆid : "+
e
.
	`gëP©h
());

616  
Ál£
;

617 
	}
}

619 
¥Ÿe˘ed
 
boﬁón
 
	$¥o˚ssZKCmd
(
MyComm™dO±i⁄s
 
co
)

620 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


622 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

623 
Såög
[] 
¨gs
 = 
co
.
	`gëArgAºay
();

624 
Såög
 
cmd
 = 
co
.
	`gëComm™d
();

625 i‡(
¨gs
.
Àngth
 < 1) {

626 
	`ußge
();

627  
Ál£
;

630 i‡(!
comm™dM≠
.
	`c⁄èösKey
(
cmd
)) {

631 
	`ußge
();

632  
Ál£
;

635 
boﬁón
 
w©ch
 = 
¨gs
.
Àngth
 > 2;

636 
Såög
 
∑th
 = 
nuŒ
;

637 
Li°
<
ACL
> 
a˛
 = 
Ids
.
OPEN_ACL_UNSAFE
;

638 
LOG
.
	`debug
("Pro˚ssög " + 
cmd
);

640 i‡(
cmd
.
	`equÆs
("quit")) {

641 
Sy°em
.
out
.
	`¥öén
("Quitting...");

642 
zk
.
	`˛o£
();

643 
Sy°em
.
	`exô
(0);

644 } i‡(
cmd
.
	`equÆs
("ªdo"Ë&& 
¨gs
.
Àngth
 >= 2) {

645 
I¡egî
 
i
 = I¡egî.
	`decode
(
¨gs
[1]);

646 i‡(
comm™dCou¡
 <
i
){

647 
Sy°em
.
out
.
	`¥öén
("Command index out ofÑange");

648  
Ál£
;

650 
˛
.
	`∑r£Comm™d
(
hi°‹y
.
	`gë
(
i
));

651 i‡(
˛
.
	`gëComm™d
().
	`equÆs
( "redo" )){

652 
Sy°em
.
out
.
	`¥öén
("NoÑedoingÑedos");

653  
Ál£
;

655 
hi°‹y
.
	`put
(
comm™dCou¡
, hi°‹y.
	`gë
(
i
));

656 
	`¥o˚ssCmd
–
˛
);

657 } i‡(
cmd
.
	`equÆs
("history")) {

658 
i
=
comm™dCou¡
 - 10;i<=commandCount;++i) {

659 i‡(
i
 < 0) ;

660 
Sy°em
.
out
.
	`¥öén
(
i
 + " - " + 
hi°‹y
.
	`gë
(i));

662 } i‡(
cmd
.
	`equÆs
("printwatches")) {

663 i‡(
¨gs
.
Àngth
 == 1) {

664 
Sy°em
.
out
.
	`¥öén
("¥ötw©che†i†" + (
¥ötW©ches
 ? "on" : "off"));

666 
¥ötW©ches
 = 
¨gs
[1].
	`equÆs
("on");

668 } i‡(
cmd
.
	`equÆs
("connect")) {

669 i‡(
¨gs
.
Àngth
 >=2) {

670 
	`c⁄√˘ToZK
(
¨gs
[1]);

672 
	`c⁄√˘ToZK
(
ho°
);

677 i‡(
zk
 =
nuŒ
 || !zk.
	`gëSèã
().
	`isAlive
()) {

678 
Sy°em
.
out
.
	`¥öén
("Not connected");

679  
Ál£
;

682 i‡(
cmd
.
	`equÆs
("¸óã"Ë&& 
¨gs
.
Àngth
 >= 3) {

683 
fú°
 = 0;

684 
Cª©eMode
 
Êags
 = Cª©eMode.
PERSISTENT
;

685 i‡((
¨gs
[1].
	`equÆs
("-e") &&árgs[2].equals("-s"))

686 || (
¨gs
[1]).
	`equÆs
("-s") && (args[2].equals("-e"))) {

687 
fú°
+=2;

688 
Êags
 = 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
;

689 } i‡(
¨gs
[1].
	`equÆs
("-e")) {

690 
fú°
++;

691 
Êags
 = 
Cª©eMode
.
EPHEMERAL
;

692 } i‡(
¨gs
[1].
	`equÆs
("-s")) {

693 
fú°
++;

694 
Êags
 = 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
;

696 i‡(
¨gs
.
Àngth
 =
fú°
 + 4) {

697 
a˛
 = 
	`∑r£ACLs
(
¨gs
[
fú°
+3]);

699 
∑th
 = 
¨gs
[
fú°
 + 1];

700 
Såög
 
√wP©h
 = 
zk
.
	`¸óã
(
∑th
, 
¨gs
[
fú°
+2].
	`gëByãs
(), 
a˛
,

701 
Êags
);

702 
Sy°em
.
îr
.
	`¥öén
("Cª©ed " + 
√wP©h
);

703 } i‡(
cmd
.
	`equÆs
("dñëe"Ë&& 
¨gs
.
Àngth
 >= 2) {

704 
∑th
 = 
¨gs
[1];

705 
zk
.
	`dñëe
(
∑th
, 
w©ch
 ? 
I¡egî
.
	`∑r£I¡
(
¨gs
[2]) : -1);

706 } i‡(
cmd
.
	`equÆs
("rmr"Ë&& 
¨gs
.
Àngth
 >= 2) {

707 
∑th
 = 
¨gs
[1];

708 
ZKUtû
.
	`dñëeRecursive
(
zk
, 
∑th
);

709 } i‡(
cmd
.
	`equÆs
("£t"Ë&& 
¨gs
.
Àngth
 >= 3) {

710 
∑th
 = 
¨gs
[1];

711 
°©
 = 
zk
.
	`£tD©a
(
∑th
, 
¨gs
[2].
	`gëByãs
(),

712 
¨gs
.
Àngth
 > 3 ? 
I¡egî
.
	`∑r£I¡
(args[3]) : -1);

713 
	`¥ötSèt
(
°©
);

714 } i‡(
cmd
.
	`equÆs
("agë"Ë&& 
¨gs
.
Àngth
 >= 2) {

715 
∑th
 = 
¨gs
[1];

716 
zk
.
	`gëD©a
(
∑th
, 
w©ch
, 
d©aCÆlback
,Öath);

717 } i‡(
cmd
.
	`equÆs
("gë"Ë&& 
¨gs
.
Àngth
 >= 2) {

718 
∑th
 = 
¨gs
[1];

719 
byã
 
d©a
[] = 
zk
.
	`gëD©a
(
∑th
, 
w©ch
, 
°©
);

720 
d©a
 = (d©®=
nuŒ
)? "nuŒ".
	`gëByãs
() : data;

721 
Sy°em
.
out
.
	`¥öén
(
√w
 
	`Såög
(
d©a
));

722 
	`¥ötSèt
(
°©
);

723 } i‡(
cmd
.
	`equÆs
("ls"Ë&& 
¨gs
.
Àngth
 >= 2) {

724 
∑th
 = 
¨gs
[1];

725 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
w©ch
);

726 
Sy°em
.
out
.
	`¥öén
(
chûdªn
);

727 } i‡(
cmd
.
	`equÆs
("ls2"Ë&& 
¨gs
.
Àngth
 >= 2) {

728 
∑th
 = 
¨gs
[1];

729 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
w©ch
, 
°©
);

730 
Sy°em
.
out
.
	`¥öén
(
chûdªn
);

731 
	`¥ötSèt
(
°©
);

732 } i‡(
cmd
.
	`equÆs
("gëA˛"Ë&& 
¨gs
.
Àngth
 >= 2) {

733 
∑th
 = 
¨gs
[1];

734 
a˛
 = 
zk
.
	`gëACL
(
∑th
, 
°©
);

735 
ACL
 
a
 : 
a˛
) {

736 
Sy°em
.
out
.
	`¥öén
(
a
.
	`gëId
() + ": "

737 + 
	`gëPîmSåög
(
a
.
	`gëPîms
()));

739 } i‡(
cmd
.
	`equÆs
("£tA˛"Ë&& 
¨gs
.
Àngth
 >= 3) {

740 
∑th
 = 
¨gs
[1];

741 
°©
 = 
zk
.
	`£tACL
(
∑th
, 
	`∑r£ACLs
(
¨gs
[2]),

742 
¨gs
.
Àngth
 > 4 ? 
I¡egî
.
	`∑r£I¡
(args[3]) : -1);

743 
	`¥ötSèt
(
°©
);

744 } i‡(
cmd
.
	`equÆs
("°©"Ë&& 
¨gs
.
Àngth
 >= 2) {

745 
∑th
 = 
¨gs
[1];

746 
°©
 = 
zk
.
	`exi°s
(
∑th
, 
w©ch
);

747 i‡(
°©
 =
nuŒ
) {

748 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
(
∑th
);

750 
	`¥ötSèt
(
°©
);

751 } i‡(
cmd
.
	`equÆs
("li°quŸa"Ë&& 
¨gs
.
Àngth
 >= 2) {

752 
∑th
 = 
¨gs
[1];

753 
Såög
 
absﬁuãP©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" + QuŸas.
limôNode
;

754 
byã
[] 
d©a
 = 
nuŒ
;

755 
åy
 {

756 
Sy°em
.
îr
.
	`¥öén
("absﬁuãÖ©h i†" + 
absﬁuãP©h
);

757 
d©a
 = 
zk
.
	`gëD©a
(
absﬁuãP©h
, 
Ál£
, 
°©
);

758 
SètsTøck
 
°
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

759 
Sy°em
.
out
.
	`¥öén
("OuçuàquŸ®f‹ " + 
∑th
 + " "

760 + 
°
.
	`toSåög
());

762 
d©a
 = 
zk
.
	`gëD©a
(
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" +

763 
QuŸas
.
°©Node
, 
Ál£
, 
°©
);

764 
Sy°em
.
out
.
	`¥öén
("Ouçuà°© f‹ " + 
∑th
 + " " +

765 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
)).
	`toSåög
());

766 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
√
) {

767 
Sy°em
.
îr
.
	`¥öén
("quŸ®f‹ " + 
∑th
 + " doesÇotÉxist.");

769 } i‡(
cmd
.
	`equÆs
("£tquŸa"Ë&& 
¨gs
.
Àngth
 >= 4) {

770 
Såög
 
›ti⁄
 = 
¨gs
[1];

771 
Såög
 
vÆ
 = 
¨gs
[2];

772 
∑th
 = 
¨gs
[3];

773 
Sy°em
.
îr
.
	`¥öén
("Comment:ÅheÖartsáre " +

774 "›ti⁄ " + 
›ti⁄
 +

775 " vÆ " + 
vÆ
 +

776 "Ö©h " + 
∑th
);

777 i‡("-b".
	`equÆs
(
›ti⁄
)) {

779 
	`¸óãQuŸa
(
zk
, 
∑th
, 
L⁄g
.
	`∑r£L⁄g
(
vÆ
), -1);

780 } i‡("-n".
	`equÆs
(
›ti⁄
)) {

782 
	`¸óãQuŸa
(
zk
, 
∑th
, -1L, 
I¡egî
.
	`∑r£I¡
(
vÆ
));

784 
	`ußge
();

787 } i‡(
cmd
.
	`equÆs
("dñquŸa"Ë&& 
¨gs
.
Àngth
 >= 2) {

790 i‡(
¨gs
.
Àngth
 == 3) {

792 
Såög
 
›ti⁄
 = 
¨gs
[1];

793 
∑th
 = 
¨gs
[2];

794 i‡("-b".
	`equÆs
(
›ti⁄
)) {

795 
	`dñQuŸa
(
zk
, 
∑th
, 
åue
, 
Ál£
);

796 } i‡("-n".
	`equÆs
(
›ti⁄
)) {

797 
	`dñQuŸa
(
zk
, 
∑th
, 
Ál£
, 
åue
);

799 } i‡(
¨gs
.
Àngth
 == 2) {

800 
∑th
 = 
¨gs
[1];

803 
	`dñQuŸa
(
zk
, 
∑th
, 
åue
,Årue);

804 } i‡(
cmd
.
	`equÆs
("help")) {

805 
	`ußge
();

807 } i‡(
cmd
.
	`equÆs
("close")) {

808 
zk
.
	`˛o£
();

809 } i‡(
cmd
.
	`equÆs
("sync"Ë&& 
¨gs
.
Àngth
 >= 2) {

810 
∑th
 = 
¨gs
[1];

811 
zk
.
	`sync
(
∑th
, 
√w
 
AsyncCÆlback
.
	`VoidCÆlback
(Ë{ 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
Ö©h, 
Obje˘
 
˘x
Ë{ 
Sy°em
.
out
.
	`¥öén
("Syn¯ªtu∫ed " +Ñc); } }, 
nuŒ
 );

812 } i‡(
cmd
.
	`equÆs
("addauth"Ë&& 
¨gs
.
Àngth
 >=2 ) {

813 
byã
[] 
b
 = 
nuŒ
;

814 i‡(
¨gs
.
Àngth
 >= 3)

815 
b
 = 
¨gs
[2].
	`gëByãs
();

817 
zk
.
	`addAuthInfo
(
¨gs
[1], 
b
);

819 
	`ußge
();

821  
w©ch
;

822 
	}
}

824 
¥iv©e
 
Såög
 
	$gëPîmSåög
(
≥rms
) {

825 
SåögBuûdî
 
p
 = 
√w
 
	`SåögBuûdî
();

826 i‡((
≥rms
 & 
ZooDefs
.
Pîms
.
CREATE
) != 0) {

827 
p
.
	`≠≥nd
('c');

829 i‡((
≥rms
 & 
ZooDefs
.
Pîms
.
DELETE
) != 0) {

830 
p
.
	`≠≥nd
('d');

832 i‡((
≥rms
 & 
ZooDefs
.
Pîms
.
READ
) != 0) {

833 
p
.
	`≠≥nd
('r');

835 i‡((
≥rms
 & 
ZooDefs
.
Pîms
.
WRITE
) != 0) {

836 
p
.
	`≠≥nd
('w');

838 i‡((
≥rms
 & 
ZooDefs
.
Pîms
.
ADMIN
) != 0) {

839 
p
.
	`≠≥nd
('a');

841  
p
.
	`toSåög
();

842 
	}
}

844 
¥iv©e
 
	gLi°
<
	gACL
> 
	$∑r£ACLs
(
Såög
 
a˛Såög
) {

845 
Li°
<
ACL
> 
a˛
;

846 
Såög
 
a˛s
[] = 
a˛Såög
.
	`•lô
(",");

847 
a˛
 = 
√w
 
AºayLi°
<
ACL
>();

848 
Såög
 
a
 : 
a˛s
) {

849 
fú°Cﬁ⁄
 = 
a
.
	`ödexOf
(':');

850 
œ°Cﬁ⁄
 = 
a
.
	`œ°IndexOf
(':');

851 i‡(
fú°Cﬁ⁄
 =-1 || 
œ°Cﬁ⁄
 == -1 || firstColon ==ÜastColon) {

852 
Sy°em
.
îr


853 .
	`¥öén
(
a
 + " doesÇot haveÅhe form scheme:id:perm");

856 
ACL
 
√wA˛
 = 
√w
 
	`ACL
();

857 
√wA˛
.
	`£tId
(
√w
 
	`Id
(
a
.
	`sub°rög
(0, 
fú°Cﬁ⁄
),á.substring(

858 
fú°Cﬁ⁄
 + 1, 
œ°Cﬁ⁄
)));

859 
√wA˛
.
	`£tPîms
(
	`gëPîmFromSåög
(
a
.
	`sub°rög
(
œ°Cﬁ⁄
 + 1)));

860 
a˛
.
	`add
(
√wA˛
);

862  
a˛
;

863 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/ConnectStringParser.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gP©hUtûs
;

36 
public
 
föÆ
 cœs†
	cC⁄√˘SåögP¨£r
 {

37 
¥iv©e
 
föÆ
 
	mDEFAULT_PORT
 = 2181;

39 
¥iv©e
 
föÆ
 
Såög
 
	mchroŸP©h
;

41 
¥iv©e
 
föÆ
 
	mAºayLi°
<
	mI√tSockëAddªss
> 
	m£rvîAddªs£s
 = 
√w
 
AºayLi°
<
I√tSockëAddªss
>();

48 
public
 
	$C⁄√˘SåögP¨£r
(
Såög
 
c⁄√˘Såög
) {

50 
off
 = 
c⁄√˘Såög
.
	`ödexOf
('/');

51 i‡(
off
 >= 0) {

52 
Såög
 
chroŸP©h
 = 
c⁄√˘Såög
.
	`sub°rög
(
off
);

54 i‡(
chroŸP©h
.
	`Àngth
() == 1) {

55 
this
.
chroŸP©h
 = 
nuŒ
;

57 
P©hUtûs
.
	`vÆid©eP©h
(
chroŸP©h
);

58 
this
.
chroŸP©h
 = chrootPath;

60 
c⁄√˘Såög
 = c⁄√˘Såög.
	`sub°rög
(0, 
off
);

62 
this
.
chroŸP©h
 = 
nuŒ
;

65 
Såög
 
ho°sLi°
[] = 
c⁄√˘Såög
.
	`•lô
(",");

66 
Såög
 
ho°
 : 
ho°sLi°
) {

67 
p‹t
 = 
DEFAULT_PORT
;

68 
pidx
 = 
ho°
.
	`œ°IndexOf
(':');

69 i‡(
pidx
 >= 0) {

71 i‡(
pidx
 < 
ho°
.
	`Àngth
() - 1) {

72 
p‹t
 = 
I¡egî
.
	`∑r£I¡
(
ho°
.
	`sub°rög
(
pidx
 + 1));

74 
ho°
 = ho°.
	`sub°rög
(0, 
pidx
);

76 
£rvîAddªs£s
.
	`add
(
I√tSockëAddªss
.
	`¸óãUƒesﬁved
(
ho°
, 
p‹t
));

80 
public
 
Såög
 
	$gëChroŸP©h
() {

81  
chroŸP©h
;

82 
	}
}

84 
public
 
	gAºayLi°
<
	gI√tSockëAddªss
> 
	$gëSîvîAddªs£s
() {

85  
£rvîAddªs£s
;

86 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

29 
public
 cœs†
	cFourLëãrW‹dMaö
 {

30 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
FourLëãrW‹dMaö
.
˛ass
);

40 
public
 
Såög
 
	$£nd4LëãrW‹d
(
Såög
 
ho°
, 
p‹t
, Såög 
cmd
)

41 
throws
 
IOEx˚±i⁄


43 
LOG
.
	`öfo
("c⁄√˘ögÅÿ" + 
ho°
 + " " + 
p‹t
);

44 
Sockë
 
sock
 = 
√w
 
	`Sockë
(
ho°
, 
p‹t
);

45 
Buf„ªdRódî
 
ªadî
 = 
nuŒ
;

46 
åy
 {

47 
OuçutSåóm
 
out°ªam
 = 
sock
.
	`gëOuçutSåóm
();

48 
out°ªam
.
	`wrôe
(
cmd
.
	`gëByãs
());

49 
out°ªam
.
	`Êush
();

51 
sock
.
	`shutdownOuçut
();

53 
ªadî
 =

54 
√w
 
	`Buf„ªdRódî
(

55 
√w
 
	`I≈utSåómRódî
(
sock
.
	`gëI≈utSåóm
()));

56 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

57 
Såög
 
löe
;

58 (
löe
 = 
ªadî
.
	`ªadLöe
()Ë!
nuŒ
) {

59 
sb
.
	`≠≥nd
(
löe
 + "\n");

61  
sb
.
	`toSåög
();

62 } 
föÆly
 {

63 
sock
.
	`˛o£
();

64 i‡(
ªadî
 !
nuŒ
) {

65 
ªadî
.
	`˛o£
();

70 
public
 
	$maö
(
Såög
[] 
¨gs
)

71 
throws
 
IOEx˚±i⁄


73 i‡(
¨gs
.
Àngth
 != 3) {

74 
Sy°em
.
out
.
	`¥öén
("Usage: FourLetterWordMain <host> <port> <cmd>");

76 
Sy°em
.
out
.
	`¥öén
(
	`£nd4LëãrW‹d
(
¨gs
[0], 
I¡egî
.
	`∑r£I¡
(args[1]),árgs[2]));

78 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/HostProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

42 
public
 
öãrÁ˚
 
	gHo°Providî
 {

43 
public
 
size
();

53 
public
 
I√tSockëAddªss
 
√xt
(
•öDñay
);

60 
public
 
⁄C⁄√˘ed
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/StaticHostProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

37 
public
 
föÆ
 cœs†
	cSèticHo°Providî
 
im∂emíts
 
	mHo°Providî
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


39 .
gëLoggî
(
SèticHo°Providî
.
˛ass
);

41 
¥iv©e
 
föÆ
 
	mLi°
<
	mI√tSockëAddªss
> 
	m£rvîAddªs£s
 = 
√w
 
AºayLi°
<
I√tSockëAddªss
>(

44 
¥iv©e
 
	mœ°Index
 = -1;

46 
¥iv©e
 
	mcuºítIndex
 = -1;

57 
public
 
SèticHo°Providî
(
CﬁÀ˘i⁄
<
I√tSockëAddªss
> 
£rvîAddªs£s
)

58 
throws
 
	mUnknownHo°Ex˚±i⁄
 {

59 
I√tSockëAddªss
 
	maddªss
 : 
£rvîAddªs£s
) {

60 
I√tAddªss
 
ªsﬁvedAddªs£s
[] = I√tAddªss.
gëAŒByName
(
addªss


61 .
gëHo°Name
());

62 
I√tAddªss
 
	mªsﬁvedAddªss
 : 
ªsﬁvedAddªs£s
) {

63 
this
.
£rvîAddªs£s
.
add
(
√w
 
I√tSockëAddªss
(
ªsﬁvedAddªss


64 .
gëHo°Addªss
(), 
addªss
.
gëP‹t
()));

68 i‡(
	mthis
.
	m£rvîAddªs£s
.
isEm±y
()) {

69 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

72 
	mCﬁÀ˘i⁄s
.
shufÊe
(
this
.
£rvîAddªs£s
);

75 
public
 
	$size
() {

76  
£rvîAddªs£s
.
	`size
();

77 
	}
}

79 
public
 
I√tSockëAddªss
 
	$√xt
(
•öDñay
) {

80 ++
cuºítIndex
;

81 i‡(
cuºítIndex
 =
£rvîAddªs£s
.
	`size
()) {

82 
cuºítIndex
 = 0;

84 i‡(
cuºítIndex
 =
œ°Index
 && 
•öDñay
 > 0) {

85 
åy
 {

86 
Thªad
.
	`¶ìp
(
•öDñay
);

87 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

88 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

90 } i‡(
œ°Index
 == -1) {

92 
œ°Index
 = 0;

95  
£rvîAddªs£s
.
	`gë
(
cuºítIndex
);

96 
	}
}

98 
public
 
	$⁄C⁄√˘ed
() {

99 
œ°Index
 = 
cuºítIndex
;

100 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gClõ¡Cnxn
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gLogö
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gEnvú⁄mít
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëSASLReque°
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëSASLRe•⁄£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gKîbîosName
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

34 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

35 
imp‹t
 
	gjava
.
	g£curôy
.
	gPröcùÆ
;

36 
imp‹t
 
	gjava
.
	g£curôy
.
	gPrivûegedA˘i⁄Ex˚±i⁄
;

37 
imp‹t
 
	gjava
.
	g£curôy
.
	gPrivûegedEx˚±i⁄A˘i⁄
;

38 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gSubje˘
;

39 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlback
;

40 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlbackH™dÀr
;

41 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gNameCÆlback
;

42 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gPassw‹dCÆlback
;

43 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gUnsuµ‹ãdCÆlbackEx˚±i⁄
;

44 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
;

45 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gC⁄figuøti⁄
;

46 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gLogöEx˚±i⁄
;

47 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gAuth‹izeCÆlback
;

48 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gRólmCÆlback
;

49 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶
;

50 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Clõ¡
;

51 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Ex˚±i⁄
;

57 
public
 cœs†
	cZooKì≥rSa¶Clõ¡
 {

58 
public
 
föÆ
 
Såög
 
	mLOGIN_CONTEXT_NAME_KEY
 = "zookeeper.sasl.clientconfig";

59 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSa¶Clõ¡
.
˛ass
);

60 
¥iv©e
 
Logö
 
	mlogö
 = 
nuŒ
;

61 
¥iv©e
 
Sa¶Clõ¡
 
	mß¶Clõ¡
;

63 
¥iv©e
 
	mbyã
[] 
	mß¶Tokí
 = 
√w
 
byã
[0];

65 
public
 
	eSa¶Sèã
 {

66 
	mINITIAL
,
	mINTERMEDIATE
,
	mCOMPLETE
,
	mFAILED


69 
¥iv©e
 
Sa¶Sèã
 
	gß¶Sèã
 = Sa¶Sèã.
INITIAL
;

71 
¥iv©e
 
boﬁón
 
	ggŸLa°Packë
 = 
Ál£
;

73 
¥iv©e
 
föÆ
 
Såög
 
	gc⁄figSètus
;

75 
public
 
Sa¶Sèã
 
	$gëSa¶Sèã
() {

76  
ß¶Sèã
;

77 
	}
}

79 
public
 
Såög
 
	$gëLogöC⁄ãxt
() {

80 i‡(
logö
 !
nuŒ
)

81  
logö
.
	`gëLogöC⁄ãxtName
();

82  
nuŒ
;

83 
	}
}

85 
public
 
	$ZooKì≥rSa¶Clõ¡
(
föÆ
 
Såög
 
£rvîPröcùÆ
)

86 
throws
 
LogöEx˚±i⁄
 {

92 
Såög
 
˛õ¡Se˘i⁄
 = 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "Client");

94 
AµC⁄figuøti⁄E¡ry
 
íåõs
[] = 
nuŒ
;

95 
SecurôyEx˚±i⁄
 
£curôyEx˚±i⁄
 = 
nuŒ
;

96 
åy
 {

97 
íåõs
 = 
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
().
	`gëAµC⁄figuøti⁄E¡ry
(
˛õ¡Se˘i⁄
);

98 } 
	`ˇtch
 (
SecurôyEx˚±i⁄
 
e
) {

100 
£curôyEx˚±i⁄
 = 
e
;

102 i‡(
íåõs
 !
nuŒ
) {

103 
this
.
c⁄figSètus
 = "Wû»©ãm±ÅÿSASL-authítiˇã usög Logö C⁄ãxà£˘i⁄ '" + 
˛õ¡Se˘i⁄
 + "'";

104 
this
.
ß¶Clõ¡
 = 
	`¸óãSa¶Clõ¡
(
£rvîPröcùÆ
, 
˛õ¡Se˘i⁄
);

108 
ß¶Sèã
 = 
Sa¶Sèã
.
FAILED
;

109 
Såög
 
ex∂icôClõ¡Se˘i⁄
 = 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
);

110 i‡(
ex∂icôClõ¡Se˘i⁄
 !
nuŒ
) {

113 i‡(
£curôyEx˚±i⁄
 !
nuŒ
) {

114 
throw
 
√w
 
	`LogöEx˚±i⁄
("Zookì≥∏˛õ¡ c™nŸáuthítiˇã usögÅhê" + 
ex∂icôClõ¡Se˘i⁄
 +

116 
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
) + "' because ofá " +

117 "SecurôyEx˚±i⁄: " + 
£curôyEx˚±i⁄
);

119 
throw
 
√w
 
	`LogöEx˚±i⁄
("Client cannot SASL-authenticate becauseÅhe specified JAAS configuration " +

120 "£˘i⁄ '" + 
ex∂icôClõ¡Se˘i⁄
 + "' couldÇot be found.");

125 
Såög
 
msg
 = "WillÇotáttemptÅoáuthenticate using SASL ";

126 i‡(
£curôyEx˚±i⁄
 !
nuŒ
) {

127 
msg
 +"(" + 
£curôyEx˚±i⁄
.
	`gëLoˇlizedMesßge
() + ")";

129 
msg
 += "(unknownÉrror)";

131 
this
.
c⁄figSètus
 = 
msg
;

133 i‡(
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
Ë!
nuŒ
) {

135 i‡(
£curôyEx˚±i⁄
 !
nuŒ
) {

136 
throw
 
√w
 
	`LogöEx˚±i⁄
("Zookeeper client cannotáuthenticate usingÅhe '" +

137 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "Client") +

139 
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
) + "' because ofá " +

140 "SecurôyEx˚±i⁄: " + 
£curôyEx˚±i⁄
);

142 
throw
 
√w
 
	`LogöEx˚±i⁄
("No JAAS configuration sectionÇamed '" +

143 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "Client") +

145 
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
) + "'.");

149 
	}
}

154 
public
 
Såög
 
	$gëC⁄figSètus
() {

155  
c⁄figSètus
;

156 
	}
}

158 
public
 
boﬁón
 
	$isCom∂ëe
() {

159  (
ß¶Sèã
 =
Sa¶Sèã
.
COMPLETE
);

160 
	}
}

162 
public
 
boﬁón
 
	$isFaûed
() {

163  (
ß¶Sèã
 =
Sa¶Sèã
.
FAILED
);

164 
	}
}

166 
public
 
˛ass
 
SîvîSa¶Re•⁄£CÆlback
 
im∂emíts
 
	gAsyncCÆlback
.
	gD©aCÆlback
 {

167 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
 
d©a
[], 
Sèt
 
°©
) {

172 
ZooKì≥rSa¶Clõ¡
 
	g˛õ¡
 = ((
Clõ¡Cnxn
)
˘x
).
zooKì≥rSa¶Clõ¡
;

173 i‡(
	g˛õ¡
 =
nuŒ
) {

174 
LOG
.
w¨n
("sasl client was unexpectedlyÇull: cannotÑespondÅo Zookeeper server.");

177 
	gbyã
[] 
	gu£d©a
 = 
d©a
;

178 i‡(
	gd©a
 !
nuŒ
) {

179 
LOG
.
debug
("SîvîSa¶Re•⁄£CÆlback(): sa¶Tokí sîvîÑe•⁄£: (Àngth="+
u£d©a
.
Àngth
+")");

182 
	gu£d©a
 = 
√w
 
byã
[0];

183 
	gLOG
.
debug
("SîvîSa¶Re•⁄£CÆlback(): usögÉm±y d©a[]á†£rvîÑe•⁄£ (Àngth="+
u£d©a
.
Àngth
+")");

185 
	g˛õ¡
.
ª•⁄dToSîvî
(
u£d©a
, (
Clõ¡Cnxn
)
˘x
);

189 
synchr⁄ized
 
¥iv©e
 
Sa¶Clõ¡
 
	$¸óãSa¶Clõ¡
(
föÆ
 
Såög
 
£rvi˚PröcùÆ
,

190 
föÆ
 
Såög
 
logöC⁄ãxt
Ë
throws
 
LogöEx˚±i⁄
 {

191 
åy
 {

192 i‡(
logö
 =
nuŒ
) {

193 i‡(
LOG
.
	`isDebugE«bÀd
()) {

194 
LOG
.
	`debug
("JAASÜogöC⁄ãxàis: " + 
logöC⁄ãxt
);

198 
logö
 = 
√w
 
	`Logö
(
logöC⁄ãxt
,Çew 
	`Clõ¡CÆlbackH™dÀr
(
nuŒ
));

199 
logö
.
	`°¨tThªadIfNìded
();

201 
Subje˘
 
subje˘
 = 
logö
.
	`gëSubje˘
();

202 
Sa¶Clõ¡
 
ß¶Clõ¡
;

205 i‡(
subje˘
.
	`gëPröcùÆs
().
	`isEm±y
()) {

207 
LOG
.
	`öfo
("Client will use DIGEST-MD5ás SASL mechanism.");

208 
Såög
[] 
mechs
 = {"DIGEST-MD5"};

209 
Såög
 
u£∫ame
 = (Såög)(
subje˘
.
	`gëPublicCªdítüls
().
	`toAºay
()[0]);

210 
Såög
 
∑ssw‹d
 = (Såög)(
subje˘
.
	`gëPriv©eCªdítüls
().
	`toAºay
()[0]);

212 
ß¶Clõ¡
 = 
Sa¶
.
	`¸óãSa¶Clõ¡
(
mechs
, 
u£∫ame
, "zookì≥r", "zk-ß¶-md5", 
nuŒ
, 
√w
 
	`Clõ¡CÆlbackH™dÀr
(
∑ssw‹d
));

213  
ß¶Clõ¡
;

216 
föÆ
 
Obje˘
[] 
¥öcùÆs
 = 
subje˘
.
	`gëPröcùÆs
().
	`toAºay
();

218 
föÆ
 
PröcùÆ
 
˛õ¡PröcùÆ
 = (PröcùÆ)
¥öcùÆs
[0];

219 
föÆ
 
KîbîosName
 
˛õ¡KîbîosName
 = 
√w
 
	`KîbîosName
(
˛õ¡PröcùÆ
.
	`gëName
());

222 
Såög
 
£rvîRólm
 = 
Sy°em
.
	`gëPr›îty
("zookì≥r.£rvî.ªÆm",
˛õ¡KîbîosName
.
	`gëRólm
());

223 
KîbîosName
 
£rvi˚KîbîosName
 = 
√w
 
	`KîbîosName
(
£rvi˚PröcùÆ
+"@"+
£rvîRólm
);

224 
föÆ
 
Såög
 
£rvi˚Name
 = 
£rvi˚KîbîosName
.
	`gëSîvi˚Name
();

225 
föÆ
 
Såög
 
£rvi˚Ho°«me
 = 
£rvi˚KîbîosName
.
	`gëHo°Name
();

226 
föÆ
 
Såög
 
˛õ¡PröcùÆName
 = 
˛õ¡KîbîosName
.
	`toSåög
();

227 
åy
 {

228 
ß¶Clõ¡
 = 
Subje˘
.
	`doAs
(
subje˘
,
√w
 
PrivûegedEx˚±i⁄A˘i⁄
<
Sa¶Clõ¡
>() {

229 
public
 
Sa¶Clõ¡
 
	`run
(Ë
throws
 
Sa¶Ex˚±i⁄
 {

230 
LOG
.
	`öfo
("Client will use GSSAPIás SASL mechanism.");

231 
Såög
[] 
mechs
 = {"GSSAPI"};

232 
LOG
.
	`debug
("¸ótög sa¶ clõ¡: clõ¡="+
˛õ¡PröcùÆName
+";£rvi˚="+
£rvi˚Name
+";£rvi˚Ho°«me="+
£rvi˚Ho°«me
);

233 
Sa¶Clõ¡
 
ß¶Clõ¡
 = 
Sa¶
.
	`¸óãSa¶Clõ¡
(
mechs
,
˛õ¡PröcùÆName
,
£rvi˚Name
,
£rvi˚Ho°«me
,
nuŒ
,
√w
 
	`Clõ¡CÆlbackH™dÀr
(null));

234  
ß¶Clõ¡
;

237  
ß¶Clõ¡
;

239 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

240 
LOG
.
	`îr‹
("Eº‹ cª©ög SASL clõ¡:" + 
e
);

241 
e
.
	`¥ötSèckTø˚
();

242  
nuŒ
;

245 } 
	`ˇtch
 (
LogöEx˚±i⁄
 
e
) {

247 
throw
 
e
;

248 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

250 
LOG
.
	`îr‹
("Ex˚±i⁄ whûêåyögÅÿ¸óã SASL clõ¡: " + 
e
);

251  
nuŒ
;

253 
	}
}

255 
public
 
	$ª•⁄dToSîvî
(
byã
[] 
£rvîTokí
, 
Clõ¡Cnxn
 
˙xn
) {

256 i‡(
ß¶Clõ¡
 =
nuŒ
) {

257 
LOG
.
	`îr‹
("saslClient is unexpectedlyÇull. CannotÑespondÅo server's SASL message; ignoring.");

261 i‡(!(
ß¶Clõ¡
.
	`isCom∂ëe
())) {

262 
åy
 {

263 
ß¶Tokí
 = 
	`¸óãSa¶Tokí
(
£rvîTokí
);

264 i‡(
ß¶Tokí
 !
nuŒ
) {

265 
	`£ndSa¶Packë
(
ß¶Tokí
, 
˙xn
);

267 } 
	`ˇtch
 (
Sa¶Ex˚±i⁄
 
e
) {

268 
LOG
.
	`îr‹
("SASLáuthentication failed usingÜogin context '" +

269 
this
.
	`gëLogöC⁄ãxt
() + "'.");

270 
ß¶Sèã
 = 
Sa¶Sèã
.
FAILED
;

271 
gŸLa°Packë
 = 
åue
;

275 i‡(
ß¶Clõ¡
.
	`isCom∂ëe
()) {

278 i‡((
£rvîTokí
 =
nuŒ
Ë&& (
ß¶Clõ¡
.
	`gëMech™ismName
() == "GSSAPI"))

279 
gŸLa°Packë
 = 
åue
;

281 i‡(
ß¶Clõ¡
.
	`gëMech™ismName
() != "GSSAPI") {

282 
gŸLa°Packë
 = 
åue
;

287 
˙xn
.
	`íabÀWrôe
();

289 
	}
}

291 
¥iv©e
 
	gbyã
[] 
	$¸óãSa¶Tokí
(Ë
throws
 
Sa¶Ex˚±i⁄
 {

292 
ß¶Sèã
 = 
Sa¶Sèã
.
INTERMEDIATE
;

293  
	`¸óãSa¶Tokí
(
ß¶Tokí
);

294 
	}
}

296 
¥iv©e
 
	gbyã
[] 
	$¸óãSa¶Tokí
(
föÆ
 
byã
[] 
ß¶Tokí
Ë
throws
 
Sa¶Ex˚±i⁄
 {

297 i‡(
ß¶Tokí
 =
nuŒ
) {

299 
ß¶Sèã
 = 
Sa¶Sèã
.
FAILED
;

300 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
("Error ináuthenticating withá Zookeeper Quorum member:Åhe quorum member's saslToken isÇull.");

303 
Subje˘
 
subje˘
 = 
logö
.
	`gëSubje˘
();

304 i‡(
subje˘
 !
nuŒ
) {

305 
	`synchr⁄ized
(
logö
) {

306 
åy
 {

307 
föÆ
 
byã
[] 
ªtvÆ
 =

308 
Subje˘
.
	`doAs
(
subje˘
, 
√w
 
PrivûegedEx˚±i⁄A˘i⁄
<
byã
[]>() {

309 
public
 
byã
[] 
	`run
(Ë
throws
 
Sa¶Ex˚±i⁄
 {

310 
LOG
.
	`debug
("ß¶Clõ¡.evÆu©eChÆÀnge÷í="+
ß¶Tokí
.
Àngth
+")");

311  
ß¶Clõ¡
.
	`evÆu©eChÆÀnge
(
ß¶Tokí
);

314  
ªtvÆ
;

316 
	`ˇtch
 (
PrivûegedA˘i⁄Ex˚±i⁄
 
e
) {

317 
Såög
 
îr‹
 = "A¿îr‹: (" + 
e
 + ") occurred whenÉvaluating Zookeeper Quorum Member's " +

321 
föÆ
 
Såög
 
UNKNOWN_SERVER_ERROR_TEXT
 =

323 i‡(
e
.
	`toSåög
().
	`ödexOf
(
UNKNOWN_SERVER_ERROR_TEXT
) > -1) {

324 
îr‹
 += " This may be caused by Java's being unableÅoÑesolveÅhe Zookeeper Quorum Member's" +

328 
îr‹
 += " Zookeeper Client will goÅo AUTH_FAILED state.";

329 
LOG
.
	`îr‹
(
îr‹
);

330 
ß¶Sèã
 = 
Sa¶Sèã
.
FAILED
;

331 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
(
îr‹
);

336 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
("Cannot make SASLÅoken without subject defined. " +

339 
	}
}

341 
¥iv©e
 
	$£ndSa¶Packë
(
byã
[] 
ß¶Tokí
, 
Clõ¡Cnxn
 
˙xn
)

342 
throws
 
Sa¶Ex˚±i⁄
{

343 i‡(
LOG
.
	`isDebugE«bÀd
()) {

344 
LOG
.
	`debug
("Clõ¡Cnxn:£ndSa¶Packë:Àngth="+
ß¶Tokí
.
Àngth
);

347 
GëSASLReque°
 
ªque°
 = 
√w
 
	`GëSASLReque°
();

348 
ªque°
.
	`£tTokí
(
ß¶Tokí
);

349 
SëSASLRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëSASLRe•⁄£
();

350 
SîvîSa¶Re•⁄£CÆlback
 
cb
 = 
√w
 
	`SîvîSa¶Re•⁄£CÆlback
();

352 
åy
 {

353 
˙xn
.
	`£ndPackë
(
ªque°
,
ª•⁄£
,
cb
, 
ZooDefs
.
OpCode
.
ß¶
);

354 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

355 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
("FailedÅo send SASLÖacketÅo server.",

356 
e
);

358 
	}
}

360 
¥iv©e
 
	$£ndSa¶Packë
(
Clõ¡Cnxn
 
˙xn
Ë
throws
 
Sa¶Ex˚±i⁄
 {

361 i‡(
LOG
.
	`isDebugE«bÀd
()) {

362 
LOG
.
	`debug
("Clõ¡Cnxn:£ndSa¶Packë:Àngth="+
ß¶Tokí
.
Àngth
);

364 
GëSASLReque°
 
ªque°
 = 
√w
 
	`GëSASLReque°
();

365 
ªque°
.
	`£tTokí
(
	`¸óãSa¶Tokí
());

366 
SëSASLRe•⁄£
 
ª•⁄£
 = 
√w
 
	`SëSASLRe•⁄£
();

367 
SîvîSa¶Re•⁄£CÆlback
 
cb
 = 
√w
 
	`SîvîSa¶Re•⁄£CÆlback
();

368 
åy
 {

369 
˙xn
.
	`£ndPackë
(
ªque°
,
ª•⁄£
,
cb
, 
ZooDefs
.
OpCode
.
ß¶
);

370 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

371 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
("FailedÅo send SASLÖacketÅo server due " +

372 "tÿIOEx˚±i⁄:", 
e
);

374 
	}
}

378 
public
 
Kì≥rSèã
 
	$gëKì≥rSèã
() {

379 i‡(
ß¶Clõ¡
 !
nuŒ
) {

380 i‡(
ß¶Sèã
 =
Sa¶Sèã
.
FAILED
) {

381  
Kì≥rSèã
.
AuthFaûed
;

383 i‡(
ß¶Clõ¡
.
	`isCom∂ëe
()) {

384 i‡(
ß¶Sèã
 =
Sa¶Sèã
.
INTERMEDIATE
) {

385 
ß¶Sèã
 = 
Sa¶Sèã
.
COMPLETE
;

386  
Kì≥rSèã
.
Sa¶Authítiˇãd
;

391  
nuŒ
;

392 
	}
}

396 
public
 
	$öôülize
(
Clõ¡Cnxn
 
˙xn
Ë
throws
 
Sa¶Ex˚±i⁄
 {

397 i‡(
ß¶Clõ¡
 =
nuŒ
) {

398 
ß¶Sèã
 = 
Sa¶Sèã
.
FAILED
;

399 
throw
 
√w
 
	`Sa¶Ex˚±i⁄
("saslClient failedÅo initializeÖroperly: it'sÇull.");

401 i‡(
ß¶Sèã
 =
Sa¶Sèã
.
INITIAL
) {

402 i‡(
ß¶Clõ¡
.
	`hasInôülRe•⁄£
()) {

403 
	`£ndSa¶Packë
(
˙xn
);

406 
byã
[] 
em±yTokí
 = 
√w
 byte[0];

407 
	`£ndSa¶Packë
(
em±yTokí
, 
˙xn
);

409 
ß¶Sèã
 = 
Sa¶Sèã
.
INTERMEDIATE
;

411 
	}
}

417 
public
 ˛as†
	cClõ¡CÆlbackH™dÀr
 
im∂emíts
 
	gCÆlbackH™dÀr
 {

418 
¥iv©e
 
Såög
 
	g∑ssw‹d
 = 
nuŒ
;

420 
public
 
Clõ¡CÆlbackH™dÀr
(
Såög
 
∑ssw‹d
) {

421 
	gthis
.
	g∑ssw‹d
 = 
∑ssw‹d
;

424 
public
 
h™dÀ
(
CÆlback
[] 
ˇŒbacks
Ë
throws


425 
	gUnsuµ‹ãdCÆlbackEx˚±i⁄
 {

426 
CÆlback
 
	gˇŒback
 : 
ˇŒbacks
) {

427 i‡(
ˇŒback
 
ö°™˚of
 
NameCÆlback
) {

428 
NameCÆlback
 
nc
 = (NameCÆlbackË
ˇŒback
;

429 
	gnc
.
£tName
(
nc
.
gëDeÁu…Name
());

432 i‡(
ˇŒback
 
ö°™˚of
 
	gPassw‹dCÆlback
) {

433 
Passw‹dCÆlback
 
	gpc
 = (Passw‹dCÆlback)
ˇŒback
;

434 i‡(
	g∑ssw‹d
 !
nuŒ
) {

435 
pc
.
£tPassw‹d
(
this
.
∑ssw‹d
.
toCh¨Aºay
());

437 
	gLOG
.
w¨n
("CouldÇotÜogin:Åhe client is beingásked foráÖassword, butÅhe Zookeeper" +

454 i‡(
ˇŒback
 
ö°™˚of
 
	gRólmCÆlback
) {

455 
RólmCÆlback
 
	grc
 = (RólmCÆlbackË
ˇŒback
;

456 
	grc
.
£tText
(
rc
.
gëDeÁu…Text
());

459 i‡(
ˇŒback
 
ö°™˚of
 
	gAuth‹izeCÆlback
) {

460 
Auth‹izeCÆlback
 
	gac
 = (Auth‹izeCÆlbackË
ˇŒback
;

461 
Såög
 
	gauthid
 = 
ac
.
gëAuthítiˇti⁄ID
();

462 
Såög
 
	gauthzid
 = 
ac
.
gëAuth‹iz©i⁄ID
();

463 i‡(
	gauthid
.
equÆs
(
authzid
)) {

464 
	gac
.
£tAuth‹ized
(
åue
);

466 
	gac
.
£tAuth‹ized
(
Ál£
);

468 i‡(
	gac
.
isAuth‹ized
()) {

469 
	gac
.
£tAuth‹izedID
(
authzid
);

473 
throw
 
√w
 
Unsuµ‹ãdCÆlbackEx˚±i⁄
(
ˇŒback
,"Unrecognized SASL ClientCallback");

482 
public
 
boﬁón
 
	$˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
() {

486 
åy
 {

487 i‡((
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
Ë!
nuŒ
) ||

488 ((
javax
.
£curôy
.
auth
.
logö
.
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
(Ë!
nuŒ
) &&

489 (
javax
.
£curôy
.
auth
.
logö
.
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
().

490 
	`gëAµC⁄figuøti⁄E¡ry
(
Sy°em
.

491 
	`gëPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
,"Client"))

492 !
nuŒ
))) {

497 i‡((
	`isCom∂ëe
(Ë=
Ál£
) &&

498 (
	`isFaûed
(Ë=
Ál£
)) {

499  
åue
;

503 i‡(
	`isCom∂ëe
(Ë|| 
	`isFaûed
()) {

504 i‡(
gŸLa°Packë
 =
Ál£
) {

507  
åue
;

514  
Ál£
;

515 } 
	`ˇtch
 (
SecurôyEx˚±i⁄
 
e
) {

518 i‡(
LOG
.
	`isDebugE«bÀd
(Ë=
åue
) {

519 
LOG
.
	`debug
("CouldÇŸÑërõvêlogö c⁄figuøti⁄: " + 
e
);

521  
Ál£
;

523 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/AtomicFileOutputStream.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûãrOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

46 
public
 cœs†
	cAtomicFûeOuçutSåóm
 
exãnds
 
	mFûãrOuçutSåóm
 {

47 
¥iv©e
 
föÆ
 
Såög
 
	mTMP_EXTENSION
 = ".tmp";

49 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


50 .
gëLoggî
(
AtomicFûeOuçutSåóm
.
˛ass
);

52 
¥iv©e
 
föÆ
 
Fûe
 
	m‹igFûe
;

53 
¥iv©e
 
föÆ
 
Fûe
 
	mtmpFûe
;

55 
public
 
	$AtomicFûeOuçutSåóm
(
Fûe
 
f
Ë
throws
 
FûeNŸFoundEx˚±i⁄
 {

59 
	`su≥r
(
√w
 
	`FûeOuçutSåóm
“ew 
	`Fûe
(
f
.
	`gëP¨ítFûe
(), f.
	`gëName
()

60 + 
TMP_EXTENSION
)));

61 
‹igFûe
 = 
f
.
	`gëAbsﬁuãFûe
();

62 
tmpFûe
 = 
√w
 
	`Fûe
(
f
.
	`gëP¨ítFûe
(), f.
	`gëName
(Ë+ 
TMP_EXTENSION
)

63 .
	`gëAbsﬁuãFûe
();

66 @
Ovîride


67 
public
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

68 
boﬁón
 
åõdToClo£
 = 
Ál£
, 
suc˚ss
 = false;

69 
åy
 {

70 
	`Êush
();

71 ((
FûeOuçutSåóm
Ë
out
).
	`gëCh™√l
().
	`f‹˚
(
åue
);

73 
åõdToClo£
 = 
åue
;

74 
su≥r
.
	`˛o£
();

75 
suc˚ss
 = 
åue
;

76 } 
föÆly
 {

77 i‡(
suc˚ss
) {

78 
boﬁón
 
ª«med
 = 
tmpFûe
.
	`ª«meTo
(
‹igFûe
);

79 i‡(!
ª«med
) {

81 i‡(!
‹igFûe
.
	`dñëe
(Ë|| !
tmpFûe
.
	`ª«meTo
(origFile)) {

82 
throw
 
√w
 
	`IOEx˚±i⁄
(

83 "CouldÇŸÑíamêãmp‹¨y fûê" + 
tmpFûe


84 + "Åÿ" + 
‹igFûe
);

88 i‡(!
åõdToClo£
) {

91 
IOUtûs
.
	`˛o£Såóm
(
out
);

94 i‡(!
tmpFûe
.
	`dñëe
()) {

95 
LOG
.
	`w¨n
("U«bÀÅÿdñëêtm∞fûê" + 
tmpFûe
);

99 
	}
}

105 
public
 
	$ab‹t
() {

106 
åy
 {

107 
su≥r
.
	`˛o£
();

108 } 
	`ˇtch
 (
IOEx˚±i⁄
 
i€
) {

109 
LOG
.
	`w¨n
("U«bÀÅÿab‹àfûê" + 
tmpFûe
, 
i€
);

111 i‡(!
tmpFûe
.
	`dñëe
()) {

112 
LOG
.
	`w¨n
("U«bÀÅÿdñëêtm∞fûêdurögáb‹à" + 
tmpFûe
);

114 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/IOUtils.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
;

20 
imp‹t
 
	gjava
.
	gio
.
	gClo£abÀ
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
public
 cœs†
	cIOUtûs
 {

41 
public
 
	$˛o£Såóm
(
Clo£abÀ
 
°ªam
) {

42 
	`˛ónup
(
nuŒ
, 
°ªam
);

54 
public
 
	$˛ónup
(
Loggî
 
log
, 
Clo£abÀ
... 
˛o£abÀs
) {

55 
Clo£abÀ
 
c
 : 
˛o£abÀs
) {

56 i‡(
c
 !
nuŒ
) {

57 
åy
 {

58 
c
.
	`˛o£
();

59 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

60 i‡(
log
 !
nuŒ
) {

61 
log
.
	`w¨n
("Ex˚±i⁄ i¿˛osög " + 
c
, 
e
);

66 
	}
}

81 
public
 
	$c›yByãs
(
I≈utSåóm
 
ö
, 
OuçutSåóm
 
out
,

82 
buffSize
, 
boﬁón
 
˛o£
Ë
throws
 
IOEx˚±i⁄
 {

83 
åy
 {

84 
	`c›yByãs
(
ö
, 
out
, 
buffSize
);

85 i‡(
˛o£
) {

86 
out
.
	`˛o£
();

87 
out
 = 
nuŒ
;

88 
ö
.
	`˛o£
();

89 
ö
 = 
nuŒ
;

91 } 
föÆly
 {

92 i‡(
˛o£
) {

93 
	`˛o£Såóm
(
out
);

94 
	`˛o£Såóm
(
ö
);

97 
	}
}

109 
public
 
	$c›yByãs
(
I≈utSåóm
 
ö
, 
OuçutSåóm
 
out
, 
buffSize
)

110 
throws
 
IOEx˚±i⁄
 {

111 
PrötSåóm
 
ps
 = 
out
 
ö°™˚of
 PrötSåóm ? (PrötSåómËouà: 
nuŒ
;

112 
byã
 
buf
[] = 
√w
 byã[
buffSize
];

113 
byãsRód
 = 
ö
.
	`ªad
(
buf
);

114 
byãsRód
 >= 0) {

115 
out
.
	`wrôe
(
buf
, 0, 
byãsRód
);

116 i‡((
ps
 !
nuŒ
Ë&&Ös.
	`checkEº‹
()) {

117 
throw
 
√w
 
	`IOEx˚±i⁄
("UnableÅo writeÅo output stream.");

119 
byãsRód
 = 
ö
.
	`ªad
(
buf
);

121 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/PathTrie.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
public
 cœs†
	cP©hTrõ
 {

47 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
P©hTrõ
.
˛ass
);

52 
¥iv©e
 
föÆ
 
TrõNode
 
	mroŸNode
 ;

54 ˛as†
	cTrõNode
 {

55 
boﬁón
 
	m¥›îty
 = 
Ál£
;

56 
föÆ
 
	mHashM≠
<
	mSåög
, 
	mTrõNode
> 
	mchûdªn
;

57 
TrõNode
 
	m∑ª¡
 = 
nuŒ
;

63 
¥iv©e
 
TrõNode
(TrõNodê
∑ª¡
) {

64 
	mchûdªn
 = 
√w
 
HashM≠
<
Såög
, 
	mTrõNode
>();

65 
	mthis
.
	m∑ª¡
 = 
∑ª¡
;

72 
TrõNode
 
gëP¨ít
() {

73  
	mthis
.
	m∑ª¡
;

80 
£tP¨ít
(
TrõNode
 
∑ª¡
) {

81 
	mthis
.
	m∑ª¡
 = 
∑ª¡
;

89 
£tPr›îty
(
boﬁón
 
¥›
) {

90 
	mthis
.
	m¥›îty
 = 
¥›
;

98 
boﬁón
 
gëPr›îty
() {

99  
	mthis
.
	m¥›îty
;

106 
addChûd
(
Såög
 
chûdName
, 
TrõNode
 
node
) {

107 
synchr⁄ized
(
chûdªn
) {

108 i‡(
	mchûdªn
.
c⁄èösKey
(
chûdName
)) {

111 
	mchûdªn
.
put
(
chûdName
, 
node
);

120 
dñëeChûd
(
Såög
 
chûdName
) {

121 
synchr⁄ized
(
chûdªn
) {

122 i‡(!
	mchûdªn
.
c⁄èösKey
(
chûdName
)) {

125 
TrõNode
 
	mchûdNode
 = 
chûdªn
.
gë
(
chûdName
);

127 i‡(
	mchûdNode
.
gëChûdªn
().
	mÀngth
 == 1) {

128 
chûdNode
.
£tP¨ít
(
nuŒ
);

129 
	mchûdªn
.
ªmove
(
chûdName
);

134 
	mchûdNode
.
£tPr›îty
(
Ál£
);

145 
TrõNode
 
gëChûd
(
Såög
 
chûdName
) {

146 
synchr⁄ized
(
chûdªn
) {

147 i‡(!
	mchûdªn
.
c⁄èösKey
(
chûdName
)) {

148  
	mnuŒ
;

151  
	mchûdªn
.
gë
(
chûdName
);

162 
	mSåög
[] 
gëChûdªn
() {

163 
synchr⁄ized
(
chûdªn
) {

164  
	mchûdªn
.
keySë
().
toAºay
(
√w
 
Såög
[0]);

172 
public
 
Såög
 
toSåög
() {

173 
SåögBuûdî
 
	msb
 = 
√w
 StringBuilder();

174 
	msb
.
≠≥nd
("Children ofÅrienode: ");

175 
synchr⁄ized
(
chûdªn
) {

176 
Såög
 
	m°r
: 
chûdªn
.
keySë
()) {

177 
sb
.
≠≥nd
(" " + 
°r
);

180  
	msb
.
toSåög
();

188 
public
 
	$P©hTrõ
() {

189 
this
.
roŸNode
 = 
√w
 
	`TrõNode
(
nuŒ
);

190 
	}
}

196 
public
 
	$addP©h
(
Såög
 
∑th
) {

197 i‡(
∑th
 =
nuŒ
) {

200 
Såög
[] 
∑thComp⁄íts
 = 
∑th
.
	`•lô
("/");

201 
TrõNode
 
∑ª¡
 = 
roŸNode
;

202 
Såög
 
∑π
 = 
nuŒ
;

203 i‡(
∑thComp⁄íts
.
Àngth
 <= 1) {

204 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvÆidÖ©h " + 
∑th
);

206 
i
=1; i<
∑thComp⁄íts
.
Àngth
; i++) {

207 
∑π
 = 
∑thComp⁄íts
[
i
];

208 i‡(
∑ª¡
.
	`gëChûd
(
∑π
Ë=
nuŒ
) {

209 
∑ª¡
.
	`addChûd
(
∑π
, 
√w
 
	`TrõNode
(parent));

211 
∑ª¡
 =Ö¨ít.
	`gëChûd
(
∑π
);

213 
∑ª¡
.
	`£tPr›îty
(
åue
);

214 
	}
}

220 
public
 
	$dñëeP©h
(
Såög
 
∑th
) {

221 i‡(
∑th
 =
nuŒ
) {

224 
Såög
[] 
∑thComp⁄íts
 = 
∑th
.
	`•lô
("/");

225 
TrõNode
 
∑ª¡
 = 
roŸNode
;

226 
Såög
 
∑π
 = 
nuŒ
;

227 i‡(
∑thComp⁄íts
.
Àngth
 <= 1) {

228 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvÆidÖ©h " + 
∑th
);

230 
i
=1; i<
∑thComp⁄íts
.
Àngth
; i++) {

231 
∑π
 = 
∑thComp⁄íts
[
i
];

232 i‡(
∑ª¡
.
	`gëChûd
(
∑π
Ë=
nuŒ
) {

236 
∑ª¡
 =Ö¨ít.
	`gëChûd
(
∑π
);

237 
LOG
.
	`öfo
("{}",
∑ª¡
);

239 
TrõNode
 
ªÆP¨ít
 = 
∑ª¡
.
	`gëP¨ít
();

240 
ªÆP¨ít
.
	`dñëeChûd
(
∑π
);

241 
	}
}

248 
public
 
Såög
 
	$födMaxPªfix
(
Såög
 
∑th
) {

249 i‡(
∑th
 =
nuŒ
) {

250  
nuŒ
;

252 i‡("/".
	`equÆs
(
∑th
)) {

253  
∑th
;

255 
Såög
[] 
∑thComp⁄íts
 = 
∑th
.
	`•lô
("/");

256 
TrõNode
 
∑ª¡
 = 
roŸNode
;

257 
Li°
<
Såög
> 
comp⁄íts
 = 
√w
 
AºayLi°
<String>();

258 i‡(
∑thComp⁄íts
.
Àngth
 <= 1) {

259 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvÆidÖ©h " + 
∑th
);

261 
i
 = 1;

262 
Såög
 
∑π
 = 
nuŒ
;

263 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

264 
œ°ödex
 = -1;

265 (
i
 < 
∑thComp⁄íts
.
Àngth
)) {

266 i‡(
∑ª¡
.
	`gëChûd
(
∑thComp⁄íts
[
i
]Ë!
nuŒ
) {

267 
∑π
 = 
∑thComp⁄íts
[
i
];

268 
∑ª¡
 =Ö¨ít.
	`gëChûd
(
∑π
);

269 
comp⁄íts
.
	`add
(
∑π
);

270 i‡(
∑ª¡
.
	`gëPr›îty
()) {

271 
œ°ödex
 = 
i
-1;

277 
i
++;

279 
j
=0; j< (
œ°ödex
+1); j++) {

280 
sb
.
	`≠≥nd
("/" + 
comp⁄íts
.
	`gë
(
j
));

282  
sb
.
	`toSåög
();

283 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/PathUtils.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
;

25 
public
 cœs†
	cP©hUtûs
 {

33 
public
 
	$vÆid©eP©h
(
Såög
 
∑th
, 
boﬁón
 
isSequítül
)

34 
throws
 
IŒegÆArgumítEx˚±i⁄
 {

35 
	`vÆid©eP©h
(
isSequítül
? 
∑th
 + "1":Öath);

43 
public
 
	$vÆid©eP©h
(
Såög
 
∑th
Ë
throws
 
IŒegÆArgumítEx˚±i⁄
 {

44 i‡(
∑th
 =
nuŒ
) {

45 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("Path cannot beÇull");

47 i‡(
∑th
.
	`Àngth
() == 0) {

48 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("PathÜength must be > 0");

50 i‡(
∑th
.
	`ch¨At
(0) != '/') {

51 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

54 i‡(
∑th
.
	`Àngth
() == 1) {

57 i‡(
∑th
.
	`ch¨At
’©h.
	`Àngth
() - 1) == '/') {

58 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

62 
Såög
 
ªas⁄
 = 
nuŒ
;

63 
œ°c
 = '/';

64 
ch¨s
[] = 
∑th
.
	`toCh¨Aºay
();

65 
c
;

66 
i
 = 1; i < 
ch¨s
.
Àngth
; 
œ°c
 = chars[i], i++) {

67 
c
 = 
ch¨s
[
i
];

69 i‡(
c
 == 0) {

70 
ªas⁄
 = "nuŒ ch¨a˘îÇŸáŒowed @" + 
i
;

72 } i‡(
c
 ='/' && 
œ°c
 == '/') {

73 
ªas⁄
 = "em±yÇodê«mê•ecifõd @" + 
i
;

75 } i‡(
c
 ='.' && 
œ°c
 == '.') {

76 i‡(
ch¨s
[
i
-2] == '/' &&

77 ((
i
 + 1 =
ch¨s
.
Àngth
)

78 || 
ch¨s
[
i
+1] == '/')) {

79 
ªas⁄
 = "ªœtivê∑th†nŸáŒowed @" + 
i
;

82 } i‡(
c
 == '.') {

83 i‡(
ch¨s
[
i
-1] == '/' &&

84 ((
i
 + 1 =
ch¨s
.
Àngth
)

85 || 
ch¨s
[
i
+1] == '/')) {

86 
ªas⁄
 = "ªœtivê∑th†nŸáŒowed @" + 
i
;

89 } i‡(
c
 > '\u0000' && c < '\u001f'

90 || 
c
 > '\u007f' && c < '\u009F'

91 || 
c
 > '\ud800' && c < '\uf8ff'

92 || 
c
 > '\ufff0' && c < '\uffff') {

93 
ªas⁄
 = "övÆid ch¨©î @" + 
i
;

98 i‡(
ªas⁄
 !
nuŒ
) {

99 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

100 "InvÆidÖ©h såög \"" + 
∑th
 + "\" cau£d by " + 
ªas⁄
);

102 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/CommonNames.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
;

25 
public
 cœs†
	cComm⁄Names
 {

26 
public
 
föÆ
 
Såög
 
	mDOMAIN
="org.apache.ZooKeeperService";

27 
public
 
föÆ
 
Såög
 
	mDATA_TREE_KEY
="DataTree";

28 
public
 
föÆ
 
Såög
 
	mSTANDALONE_SERVER_KEY
="StandaloneServer";

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/MBeanRegistry.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
;

21 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

25 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gJMEx˚±i⁄
;

26 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvî
;

27 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvîFa˘‹y
;

28 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMÆf‹medObje˘NameEx˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gObje˘Name
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
public
 cœs†
	cMBónRegi°ry
 {

41 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
MBónRegi°ry
.
˛ass
);

43 
¥iv©e
 
MBónRegi°ry
 
	mö°™˚
 = 
√w
 MBeanRegistry();

45 
¥iv©e
 
	mM≠
<
	mZKMBónInfo
, 
	mSåög
> 
	mm≠Bón2P©h
 =

46 
√w
 
C⁄cuºítHashM≠
<
ZKMBónInfo
, 
	mSåög
>();

48 
¥iv©e
 
	mM≠
<
	mSåög
, 
	mZKMBónInfo
> 
	mm≠Name2Bón
 =

49 
√w
 
C⁄cuºítHashM≠
<
Såög
, 
	mZKMBónInfo
>();

51 
¥iv©e
 
MBónSîvî
 
	mmBónSîvî
;

53 
public
 
MBónRegi°ry
 
	$gëIn°™˚
() {

54  
ö°™˚
;

57 
public
 
	$MBónRegi°ry
 () {

58 
åy
 {

59 
mBónSîvî
 = 
M™agemítFa˘‹y
.
	`gëPœtf‹mMBónSîvî
();

60 } 
	`ˇtch
 (
Eº‹
 
e
) {

63 
mBónSîvî
 = 
MBónSîvîFa˘‹y
.
	`¸óãMBónSîvî
();

65 
	}
}

72 
public
 
MBónSîvî
 
	$gëPœtf‹mMBónSîvî
() {

73  
mBónSîvî
;

74 
	}
}

82 
public
 (
ZKMBónInfo
 
bón
, ZKMBónInfÿ
∑ª¡
)

83 
throws
 
JMEx˚±i⁄


85 
as£π
 
bón
 !
nuŒ
;

86 
Såög
 
∑th
 = 
nuŒ
;

87 i‡(
∑ª¡
 !
nuŒ
) {

88 
∑th
 = 
m≠Bón2P©h
.
	`gë
(
∑ª¡
);

89 
as£π
 
∑th
 !
nuŒ
;

91 
∑th
 = 
	`makeFuŒP©h
’©h, 
∑ª¡
);

92 
m≠Bón2P©h
.
	`put
(
bón
, 
∑th
);

93 
m≠Name2Bón
.
	`put
(
bón
.
	`gëName
(), bean);

94 if(
bón
.
	`isHiddí
())

96 
Obje˘Name
 
⁄ame
 = 
	`makeObje˘Name
(
∑th
, 
bón
);

97 
åy
 {

98 
mBónSîvî
.
	`ªgi°îMBón
(
bón
, 
⁄ame
);

99 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

100 
LOG
.
	`w¨n
("FaûedÅÿªgi°î MBó¿" + 
bón
.
	`gëName
());

101 
throw
 
e
;

103 
	}
}

110 
¥iv©e
 
	$uƒegi°î
(
Såög
 
∑th
,
ZKMBónInfo
 
bón
Ë
throws
 
JMEx˚±i⁄
 {

111 if(
∑th
==
nuŒ
)

113 i‡(!
bón
.
	`isHiddí
()) {

114 
åy
 {

115 
mBónSîvî
.
	`uƒegi°îMBón
(
	`makeObje˘Name
(
∑th
, 
bón
));

116 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

117 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î MBó¿" + 
bón
.
	`gëName
());

118 
throw
 
e
;

121 
	}
}

127 
public
 
	$uƒegi°î
(
ZKMBónInfo
 
bón
) {

128 if(
bón
==
nuŒ
)

130 
Såög
 
∑th
=
m≠Bón2P©h
.
	`gë
(
bón
);

131 
åy
 {

132 
	`uƒegi°î
(
∑th
,
bón
);

133 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

134 
LOG
.
	`w¨n
("Eº‹ durög uƒegi°î", 
e
);

136 
m≠Bón2P©h
.
	`ªmove
(
bón
);

137 
m≠Name2Bón
.
	`ªmove
(
bón
.
	`gëName
());

138 
	}
}

142 
public
 
	$uƒegi°îAŒ
() {

143 
M≠
.
E¡ry
<
ZKMBónInfo
,
Såög
> 
e
: 
m≠Bón2P©h
.
	`íåySë
()) {

144 
åy
 {

145 
	`uƒegi°î
(
e
.
	`gëVÆue
(),É.
	`gëKey
());

146 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e1
) {

147 
LOG
.
	`w¨n
("Eº‹ durög uƒegi°î", 
e1
);

150 
m≠Bón2P©h
.
	`˛ór
();

151 
m≠Name2Bón
.
	`˛ór
();

152 
	}
}

159 
public
 
Såög
 
	$makeFuŒP©h
(
Såög
 
¥efix
, Såög... 
«me
) {

160 
SåögBuûdî
 
sb
=
√w
 
	`SåögBuûdî
(
¥efix
 =
nuŒ
 ? "/" : (¥efix.
	`equÆs
("/")?prefix:prefix+"/"));

161 
boﬁón
 
fú°
=
åue
;

162 
Såög
 
s
 : 
«me
) {

163 if(
s
==
nuŒ
) ;

164 if(!
fú°
){

165 
sb
.
	`≠≥nd
("/");

167 
fú°
=
Ál£
;

168 
sb
.
	`≠≥nd
(
s
);

170  
sb
.
	`toSåög
();

171 
	}
}

173 
¥Ÿe˘ed
 
Såög
 
	$makeFuŒP©h
(
Såög
 
¥efix
, 
ZKMBónInfo
 
bón
) {

174  
	`makeFuŒP©h
(
¥efix
, 
bón
 =
nuŒ
 ?ÇuŒ : bón.
	`gëName
());

175 
	}
}

181 
¥iv©e
 
	$tokíize
(
SåögBuûdî
 
sb
, 
Såög
 
∑th
, 
ödex
){

182 
Såög
[] 
tokís
 = 
∑th
.
	`•lô
("/");

183 
Såög
 
s
: 
tokís
) {

184 i‡(
s
.
	`Àngth
()==0)

186 
sb
.
	`≠≥nd
("«me").≠≥nd(
ödex
++)

187 .
	`≠≥nd
("=").≠≥nd(
s
).append(",");

189  
ödex
;

190 
	}
}

197 
¥Ÿe˘ed
 
Obje˘Name
 
	$makeObje˘Name
(
Såög
 
∑th
, 
ZKMBónInfo
 
bón
)

198 
throws
 
MÆf‹medObje˘NameEx˚±i⁄


200 if(
∑th
==
nuŒ
)

201  
nuŒ
;

202 
SåögBuûdî
 
bónName
 = 
√w
 
	`SåögBuûdî
(
Comm⁄Names
.
DOMAIN
 + ":");

203 
cou¡î
=0;

204 
cou¡î
=
	`tokíize
(
bónName
,
∑th
,counter);

205 
	`tokíize
(
bónName
,
bón
.
	`gëName
(),
cou¡î
);

206 
bónName
.
	`dñëeCh¨At
(bónName.
	`Àngth
()-1);

207 
åy
 {

208  
√w
 
	`Obje˘Name
(
bónName
.
	`toSåög
());

209 } 
	`ˇtch
 (
MÆf‹medObje˘NameEx˚±i⁄
 
e
) {

210 
LOG
.
	`w¨n
("InvÆidÇamê\"" + 
bónName
.
	`toSåög
() + "\" for class "

211 + 
bón
.
	`gëCœss
().
	`toSåög
());

212 
throw
 
e
;

214 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/ManagedUtil.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumî©i⁄
;

23 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gJMEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvî
;

25 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gObje˘Name
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLogM™agî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gjmx
.
	gHõørchyDy«micMBón
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	g•i
.
	gLoggîRïosô‹y
;

35 
public
 cœs†
	cM™agedUtû
 {

42 
public
 
	$ªgi°îLog4jMBóns
(Ë
throws
 
JMEx˚±i⁄
 {

43 i‡(
Boﬁón
.
	`gëBoﬁón
("zookì≥r.jmx.log4j.dißbÀ"Ë=
åue
) {

47 
MBónSîvî
 
mbs
 = 
MBónRegi°ry
.
	`gëIn°™˚
().
	`gëPœtf‹mMBónSîvî
();

50 
HõørchyDy«micMBón
 
hdm
 = 
√w
 
	`HõørchyDy«micMBón
();

52 
Obje˘Name
 
mbo
 = 
√w
 
	`Obje˘Name
("log4j:hiearchy=default");

53 
mbs
.
	`ªgi°îMBón
(
hdm
, 
mbo
);

56 
Loggî
 
roŸLoggî
 = Loggî.
	`gëRoŸLoggî
();

57 
hdm
.
	`addLoggîMBón
(
roŸLoggî
.
	`gëName
());

61 
LoggîRïosô‹y
 
r
 = 
LogM™agî
.
	`gëLoggîRïosô‹y
();

62 
Enumî©i⁄
 
íumî
 = 
r
.
	`gëCuºítLoggîs
();

63 
Loggî
 
loggî
 = 
nuŒ
;

65 
íumî
.
	`hasM‹eEÀmíts
()) {

66 
loggî
 = (
Loggî
Ë
íumî
.
	`√xtEÀmít
();

67 
hdm
.
	`addLoggîMBón
(
loggî
.
	`gëName
());

71 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/ZKMBeanInfo.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
;

25 
public
 
öãrÁ˚
 
	gZKMBónInfo
 {

29 
public
 
Såög
 
gëName
();

35 
public
 
boﬁón
 
isHiddí
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ByteBufferInputStream.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

28 
public
 cœs†
	cByãBuf„rI≈utSåóm
 
exãnds
 
	mI≈utSåóm
 {

29 
ByãBuf„r
 
	mbb
;

31 
public
 
	$ByãBuf„rI≈utSåóm
(
ByãBuf„r
 
bb
) {

32 
this
.
bb
 = bb;

35 @
Ovîride


36 
public
 
	$ªad
(Ë
throws
 
IOEx˚±i⁄
 {

37 i‡(
bb
.
	`ªmaöög
() == 0) {

40  
bb
.
	`gë
() & 0xff;

41 
	}
}

43 @
Ovîride


44 
public
 
	$avaûabÀ
(Ë
throws
 
IOEx˚±i⁄
 {

45  
bb
.
	`ªmaöög
();

46 
	}
}

48 @
Ovîride


49 
public
 
	$ªad
(
byã
[] 
b
, 
off
, 
Àn
Ë
throws
 
IOEx˚±i⁄
 {

50 i‡(
bb
.
	`ªmaöög
() == 0) {

53 i‡(
Àn
 > 
bb
.
	`ªmaöög
()) {

54 
Àn
 = 
bb
.
	`ªmaöög
();

56 
bb
.
	`gë
(
b
, 
off
, 
Àn
);

57  
Àn
;

58 
	}
}

60 @
Ovîride


61 
public
 
	$ªad
(
byã
[] 
b
Ë
throws
 
IOEx˚±i⁄
 {

62  
	`ªad
(
b
, 0, b.
Àngth
);

63 
	}
}

65 @
Ovîride


66 
public
 
	$skù
(
n
Ë
throws
 
IOEx˚±i⁄
 {

67 
√wPos
 = 
bb
.
	`posôi⁄
(Ë+ 
n
;

68 i‡(
√wPos
 > 
bb
.
	`ªmaöög
()) {

69 
n
 = 
bb
.
	`ªmaöög
();

71 
bb
.
	`posôi⁄
(bb.posôi⁄(Ë+ (Ë
n
);

72  
n
;

73 
	}
}

75 
public
 
	$byãBuf„r2Rec‹d
(
ByãBuf„r
 
bb
, 
Rec‹d
 
ªc‹d
)

76 
throws
 
IOEx˚±i⁄
 {

77 
Bö¨yI≈utArchive
 
ü
;

78 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
√w
 
	`ByãBuf„rI≈utSåóm
(
bb
));

79 
ªc‹d
.
	`de£rülize
(
ü
, "request");

80 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ByteBufferOutputStream.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

29 
public
 cœs†
	cByãBuf„rOuçutSåóm
 
exãnds
 
	mOuçutSåóm
 {

30 
ByãBuf„r
 
	mbb
;

31 
public
 
	$ByãBuf„rOuçutSåóm
(
ByãBuf„r
 
bb
) {

32 
this
.
bb
 = bb;

34 @
Ovîride


35 
public
 
	$wrôe
(
b
Ë
throws
 
IOEx˚±i⁄
 {

36 
bb
.
	`put
((
byã
)
b
);

37 
	}
}

38 @
Ovîride


39 
public
 
	$wrôe
(
byã
[] 
b
Ë
throws
 
IOEx˚±i⁄
 {

40 
bb
.
	`put
(
b
);

41 
	}
}

42 @
Ovîride


43 
public
 
	$wrôe
(
byã
[] 
b
, 
off
, 
Àn
Ë
throws
 
IOEx˚±i⁄
 {

44 
bb
.
	`put
(
b
, 
off
, 
Àn
);

45 
	}
}

46 
public
 
	$ªc‹d2ByãBuf„r
(
Rec‹d
 
ªc‹d
, 
ByãBuf„r
 
bb
)

47 
throws
 
IOEx˚±i⁄
 {

48 
Bö¨yOuçutArchive
 
ﬂ
;

49 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
√w
 
	`ByãBuf„rOuçutSåóm
(
bb
));

50 
ªc‹d
.
	`£rülize
(
ﬂ
, "request");

51 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ConnectionBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√t6Addªss
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

27 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gObje˘Name
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

37 
public
 
˛ass
 
C⁄√˘i⁄Bón
 
im∂emíts
 
	gC⁄√˘i⁄MXBón
, 
	gZKMBónInfo
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
C⁄√˘i⁄Bón
.
˛ass
);

40 
¥iv©e
 
föÆ
 
SîvîCnxn
 
	gc⁄√˘i⁄
;

41 
¥iv©e
 
föÆ
 
Sèts
 
	g°©s
;

43 
¥iv©e
 
föÆ
 
ZooKì≥rSîvî
 
	gzk
;

45 
¥iv©e
 
föÆ
 
Såög
 
	gªmŸeIP
;

46 
¥iv©e
 
föÆ
 
	g£ssi⁄Id
;

48 
public
 
C⁄√˘i⁄Bón
(
SîvîCnxn
 
c⁄√˘i⁄
,
ZooKì≥rSîvî
 
zk
){

49 
	gthis
.
	gc⁄√˘i⁄
 = 
c⁄√˘i⁄
;

50 
	gthis
.
	g°©s
 = 
c⁄√˘i⁄
;

51 
	gthis
.
	gzk
 = 
zk
;

53 
I√tSockëAddªss
 
	gsockAddr
 = 
c⁄√˘i⁄
.
gëRemŸeSockëAddªss
();

54 i‡(
	gsockAddr
 =
nuŒ
) {

55 
ªmŸeIP
 = "Unknown";

57 
I√tAddªss
 
	gaddr
 = 
sockAddr
.
gëAddªss
();

58 i‡(
addr
 
ö°™˚of
 
	gI√t6Addªss
) {

59 
	gªmŸeIP
 = 
Obje˘Name
.
quŸe
(
addr
.
gëHo°Addªss
());

61 
	gªmŸeIP
 = 
addr
.
gëHo°Addªss
();

64 
	g£ssi⁄Id
 = 
c⁄√˘i⁄
.
gëSessi⁄Id
();

67 
public
 
Såög
 
gëSessi⁄Id
() {

68  "0x" + 
	gL⁄g
.
toHexSåög
(
£ssi⁄Id
);

71 
public
 
Såög
 
gëSour˚IP
() {

72 
I√tSockëAddªss
 
	gsockAddr
 = 
c⁄√˘i⁄
.
gëRemŸeSockëAddªss
();

73 i‡(
	gsockAddr
 =
nuŒ
) {

74  
nuŒ
;

76  
	gsockAddr
.
gëAddªss
().
gëHo°Addªss
()

77 + ":" + 
	gsockAddr
.
gëP‹t
();

80 
public
 
Såög
 
gëName
() {

81  
	gMBónRegi°ry
.
gëIn°™˚
().
makeFuŒP©h
("C⁄√˘i⁄s", 
ªmŸeIP
,

82 
gëSessi⁄Id
());

85 
public
 
boﬁón
 
isHiddí
() {

86  
	gÁl£
;

89 
public
 
	gSåög
[] 
gëEphemîÆNodes
() {

90 if(
	gzk
.
gëZKD©aba£
(Ë!=
nuŒ
){

91 
Såög
[] 
ªs
 = 
zk
.
gëZKD©aba£
().
gëEphemîÆs
(
£ssi⁄Id
)

92 .
toAºay
(
√w
 
Såög
[0]);

93 
	gAºays
.
s‹t
(
ªs
);

94  
	gªs
;

96  
	gnuŒ
;

99 
public
 
Såög
 
gëSèπedTime
() {

100  
	g°©s
.
gëE°ablished
().
toSåög
();

103 
public
 
ãrmö©eSessi⁄
() {

104 
	gåy
 {

105 
	gzk
.
˛o£Sessi⁄
(
£ssi⁄Id
);

106 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

107 
	gLOG
.
w¨n
("UnableÅo closeSession() for session: 0x"

108 + 
gëSessi⁄Id
(), 
e
);

112 
public
 
ãrmö©eC⁄√˘i⁄
() {

113 
	gc⁄√˘i⁄
.
£ndClo£Sessi⁄
();

116 
public
 
ª£tCou¡îs
() {

117 
	g°©s
.
ª£tSèts
();

120 @
Ovîride


121 
public
 
Såög
 
toSåög
() {

122  "C⁄√˘i⁄Bón{Clõ¡IP=" + 
	gObje˘Name
.
quŸe
(
gëSour˚IP
())

123 + ",Sessi⁄Id=0x" + 
gëSessi⁄Id
() + "}";

126 
public
 
gëOut°™dögReque°s
() {

127  
	g°©s
.
gëOut°™dögReque°s
();

130 
public
 
gëPackësRe˚ived
() {

131  
	g°©s
.
gëPackësRe˚ived
();

134 
public
 
gëPackësSít
() {

135  
	g°©s
.
gëPackësSít
();

138 
public
 
gëSessi⁄Timeout
() {

139  
	gc⁄√˘i⁄
.
gëSessi⁄Timeout
();

142 
public
 
gëMöL©ícy
() {

143  
	g°©s
.
gëMöL©ícy
();

146 
public
 
gëAvgL©ícy
() {

147  
	g°©s
.
gëAvgL©ícy
();

150 
public
 
gëMaxL©ícy
() {

151  
	g°©s
.
gëMaxL©ícy
();

154 
public
 
Såög
 
gëLa°O≥øti⁄
() {

155  
	g°©s
.
gëLa°O≥øti⁄
();

158 
public
 
Såög
 
gëLa°Cxid
() {

159  "0x" + 
	gL⁄g
.
toHexSåög
(
°©s
.
gëLa°Cxid
());

162 
public
 
Såög
 
gëLa°Zxid
() {

163  "0x" + 
	gL⁄g
.
toHexSåög
(
°©s
.
gëLa°Zxid
());

166 
public
 
Såög
 
gëLa°Re•⁄£Time
() {

167  
√w
 
D©e
(
°©s
.
gëLa°Re•⁄£Time
()).
toSåög
();

170 
public
 
gëLa°L©ícy
() {

171  
	g°©s
.
gëLa°L©ícy
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ConnectionMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

24 
public
 
öãrÁ˚
 
	gC⁄√˘i⁄MXBón
 {

28 
public
 
Såög
 
gëSour˚IP
();

32 
public
 
Såög
 
gëSessi⁄Id
();

36 
public
 
Såög
 
gëSèπedTime
();

40 
public
 
	gSåög
[] 
gëEphemîÆNodes
();

44 
public
 
gëPackësRe˚ived
();

48 
public
 
gëPackësSít
();

52 
public
 
gëOut°™dögReque°s
();

56 
public
 
gëSessi⁄Timeout
();

62 
public
 
ãrmö©eSessi⁄
();

67 
public
 
ãrmö©eC⁄√˘i⁄
();

72 
gëMöL©ícy
();

75 
gëAvgL©ícy
();

78 
gëMaxL©ícy
();

81 
Såög
 
gëLa°O≥øti⁄
();

84 
Såög
 
gëLa°Cxid
();

87 
Såög
 
gëLa°Zxid
();

90 
Såög
 
gëLa°Re•⁄£Time
();

93 
gëLa°L©ícy
();

97 
ª£tCou¡îs
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataNode.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

38 
public
 cœs†
	cD©aNode
 
im∂emíts
 
	mRec‹d
 {

40 
D©aNode
 
	m∑ª¡
;

43 
byã
 
	md©a
[];

48 
L⁄g
 
	ma˛
;

53 
public
 
SètPîsi°ed
 
	m°©
;

60 
¥iv©e
 
	mSë
<
	mSåög
> 
	mchûdªn
 = 
nuŒ
;

65 
	$D©aNode
() {

81 
public
 
	$D©aNode
(
D©aNode
 
∑ª¡
, 
byã
 
d©a
[], 
L⁄g
 
a˛
, 
SètPîsi°ed
 
°©
) {

82 
this
.
∑ª¡
 =Öarent;

83 
this
.
d©a
 = data;

84 
this
.
a˛
 =ácl;

85 
this
.
°©
 = stat;

86 
	}
}

95 
public
 
synchr⁄ized
 
boﬁón
 
	$addChûd
(
Såög
 
chûd
) {

96 i‡(
chûdªn
 =
nuŒ
) {

98 
chûdªn
 = 
√w
 
HashSë
<
Såög
>(8);

100  
chûdªn
.
	`add
(
chûd
);

101 
	}
}

109 
public
 
synchr⁄ized
 
boﬁón
 
	$ªmoveChûd
(
Såög
 
chûd
) {

110 i‡(
chûdªn
 =
nuŒ
) {

111  
Ál£
;

113  
chûdªn
.
	`ªmove
(
chûd
);

114 
	}
}

121 
public
 
synchr⁄ized
 
£tChûdªn
(
HashSë
<
Såög
> 
chûdªn
) {

122 
	gthis
.
	gchûdªn
 = 
chûdªn
;

130 
public
 
synchr⁄ized
 
	gSë
<
	gSåög
> 
	$gëChûdªn
() {

131  
chûdªn
;

132 
	}
}

134 
synchr⁄ized
 
public
 
	$c›ySèt
(
Sèt
 
to
) {

135 
to
.
	`£tAvîsi⁄
(
°©
.
	`gëAvîsi⁄
());

136 
to
.
	`£tCtime
(
°©
.
	`gëCtime
());

137 
to
.
	`£tCzxid
(
°©
.
	`gëCzxid
());

138 
to
.
	`£tMtime
(
°©
.
	`gëMtime
());

139 
to
.
	`£tMzxid
(
°©
.
	`gëMzxid
());

140 
to
.
	`£tPzxid
(
°©
.
	`gëPzxid
());

141 
to
.
	`£tVîsi⁄
(
°©
.
	`gëVîsi⁄
());

142 
to
.
	`£tEphemîÆOw√r
(
°©
.
	`gëEphemîÆOw√r
());

143 
to
.
	`£tD©aLígth
(
d©a
 =
nuŒ
 ? 0 : d©a.
Àngth
);

144 
numChûdªn
 = 0;

145 i‡(
this
.
chûdªn
 !
nuŒ
) {

146 
numChûdªn
 = 
chûdªn
.
	`size
();

151 
to
.
	`£tCvîsi⁄
(
°©
.
	`gëCvîsi⁄
()*2 - 
numChûdªn
);

152 
to
.
	`£tNumChûdªn
(
numChûdªn
);

153 
	}
}

155 
synchr⁄ized
 
public
 
	$de£rülize
(
I≈utArchive
 
¨chive
, 
Såög
 
èg
)

156 
throws
 
IOEx˚±i⁄
 {

157 
¨chive
.
	`°¨tRec‹d
("node");

158 
d©a
 = 
¨chive
.
	`ªadBuf„r
("data");

159 
a˛
 = 
¨chive
.
	`ªadL⁄g
("acl");

160 
°©
 = 
√w
 
	`SètPîsi°ed
();

161 
°©
.
	`de£rülize
(
¨chive
, "statpersisted");

162 
¨chive
.
	`ídRec‹d
("node");

163 
	}
}

165 
synchr⁄ized
 
public
 
	$£rülize
(
OuçutArchive
 
¨chive
, 
Såög
 
èg
)

166 
throws
 
IOEx˚±i⁄
 {

167 
¨chive
.
	`°¨tRec‹d
(
this
, "node");

168 
¨chive
.
	`wrôeBuf„r
(
d©a
, "data");

169 
¨chive
.
	`wrôeL⁄g
(
a˛
, "acl");

170 
°©
.
	`£rülize
(
¨chive
, "statpersisted");

171 
¨chive
.
	`ídRec‹d
(
this
, "node");

172 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTree.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gIndex
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gQuŸas
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gSètsTøck
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gP©hTrõ
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCheckVîsi⁄Txn
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

58 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gMu…iTxn
;

59 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

60 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

61 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxn
;

62 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

63 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

64 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

75 
public
 cœs†
	cD©aTªe
 {

76 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
D©aTªe
.
˛ass
);

82 
¥iv©e
 
föÆ
 
	mC⁄cuºítHashM≠
<
	mSåög
, 
	mD©aNode
> 
	mnodes
 =

83 
√w
 
C⁄cuºítHashM≠
<
Såög
, 
	mD©aNode
>();

85 
¥iv©e
 
föÆ
 
W©chM™agî
 
	md©aW©ches
 = 
√w
 WatchManager();

87 
¥iv©e
 
föÆ
 
W©chM™agî
 
	mchûdW©ches
 = 
√w
 WatchManager();

90 
¥iv©e
 
föÆ
 
Såög
 
	mroŸZookì≥r
 = "/";

93 
¥iv©e
 
föÆ
 
Såög
 
	m¥ocZookì≥r
 = 
QuŸas
.
¥ocZookì≥r
;

96 
¥iv©e
 
föÆ
 
Såög
 
	m¥ocChûdZookì≥r
 = 
¥ocZookì≥r
.
sub°rög
(1);

102 
¥iv©e
 
föÆ
 
Såög
 
	mquŸaZookì≥r
 = 
QuŸas
.
quŸaZookì≥r
;

105 
¥iv©e
 
föÆ
 
Såög
 
	mquŸaChûdZookì≥r
 = 
quŸaZookì≥r


106 .
sub°rög
(
¥ocZookì≥r
.
Àngth
() + 1);

111 
¥iv©e
 
föÆ
 
P©hTrõ
 
	mpTrõ
 = 
√w
 PathTrie();

116 
¥iv©e
 
föÆ
 
	mM≠
<
	mL⁄g
, 
	mHashSë
<
	mSåög
>> 
	mïhemîÆs
 =

117 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	mHashSë
<
	mSåög
>>();

123 
public
 
föÆ
 
	mM≠
<
	mL⁄g
, 
	mLi°
<
	mACL
>> 
	ml⁄gKeyM≠
 =

124 
√w
 
HashM≠
<
L⁄g
, 
	mLi°
<
	mACL
>>();

129 
public
 
föÆ
 
	mM≠
<
	mLi°
<
	mACL
>, 
	mL⁄g
> 
	ma˛KeyM≠
 =

130 
√w
 
HashM≠
<
Li°
<
ACL
>, 
	mL⁄g
>();

135 
¥Ÿe˘ed
 
	ma˛Index
 = 0;

137 @
SuµªssW¨nögs
("unchecked")

138 
public
 
	mHashSë
<
	mSåög
> 
	$gëEphemîÆs
(
£ssi⁄Id
) {

139 
HashSë
<
Såög
> 
ªtv
 = 
ïhemîÆs
.
	`gë
(
£ssi⁄Id
);

140 i‡(
ªtv
 =
nuŒ
) {

141  
√w
 
HashSë
<
Såög
>();

143 
HashSë
<
Såög
> 
˛⁄ed
 = 
nuŒ
;

144 
	`synchr⁄ized
 (
ªtv
) {

145 
˛⁄ed
 = (
HashSë
<
Såög
>Ë
ªtv
.
	`˛⁄e
();

147  
˛⁄ed
;

150 
public
 
M≠
<
L⁄g
, 
HashSë
<
Såög
>> 
	$gëEphemîÆsM≠
() {

151  
ïhemîÆs
;

152 
	}
}

154 
¥iv©e
 
	$ö¸emítIndex
() {

155  ++
a˛Index
;

156 
	}
}

169 
¥iv©e
 
boﬁón
 
li°ACLEquÆs
(
Li°
<
ACL
> 
li°a
, Li°<ACL> 
li°b
) {

170 i‡(
	gli°a
.
size
(Ë!
li°b
.size()) {

171  
Ál£
;

173 
	gi
 = 0; i < 
	gli°a
.
size
(); i++) {

174 
ACL
 
	ga
 = 
li°a
.
gë
(
i
);

175 
ACL
 
	gb
 = 
li°b
.
gë
(
i
);

176 i‡(!
	ga
.
equÆs
(
b
)) {

177  
	gÁl£
;

180  
	gåue
;

189 
public
 
synchr⁄ized
 
L⁄g
 
c⁄vîtA˛s
(
Li°
<
ACL
> 
a˛s
) {

190 i‡(
	ga˛s
 =
nuŒ
)

193 
L⁄g
 
	gªt
 = 
a˛KeyM≠
.
gë
(
a˛s
);

195 i‡(
	gªt
 !
nuŒ
)

196  
ªt
;

197 
	gvÆ
 = 
ö¸emítIndex
();

198 
	gl⁄gKeyM≠
.
put
(
vÆ
, 
a˛s
);

199 
	ga˛KeyM≠
.
put
(
a˛s
, 
vÆ
);

200  
	gvÆ
;

210 
public
 
synchr⁄ized
 
	gLi°
<
	gACL
> 
	$c⁄vîtL⁄g
(
L⁄g
 
l⁄gVÆ
) {

211 i‡(
l⁄gVÆ
 =
nuŒ
)

212  
nuŒ
;

213 i‡(
l⁄gVÆ
 == -1L)

214  
Ids
.
OPEN_ACL_UNSAFE
;

215 
Li°
<
ACL
> 
a˛s
 = 
l⁄gKeyM≠
.
	`gë
(
l⁄gVÆ
);

216 i‡(
a˛s
 =
nuŒ
) {

217 
LOG
.
	`îr‹
("ERROR: ACLÇŸávaûabÀ f‹Ü⁄g " + 
l⁄gVÆ
);

218 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("FaûedÅÿ„tchá˛†f‹ " + 
l⁄gVÆ
);

220  
a˛s
;

221 
	}
}

223 
public
 
	gCﬁÀ˘i⁄
<
	gL⁄g
> 
	$gëSessi⁄s
() {

224  
ïhemîÆs
.
	`keySë
();

225 
	}
}

236 
public
 
	$addD©aNode
(
Såög
 
∑th
, 
D©aNode
 
node
) {

237 
nodes
.
	`put
(
∑th
, 
node
);

238 
	}
}

240 
public
 
D©aNode
 
	$gëNode
(
Såög
 
∑th
) {

241  
nodes
.
	`gë
(
∑th
);

242 
	}
}

244 
public
 
	$gëNodeCou¡
() {

245  
nodes
.
	`size
();

246 
	}
}

248 
public
 
	$gëW©chCou¡
() {

249  
d©aW©ches
.
	`size
(Ë+ 
chûdW©ches
.size();

250 
	}
}

252 
public
 
	$gëEphemîÆsCou¡
() {

253 
M≠
<
L⁄g
, 
HashSë
<
Såög
>> 
m≠
 = 
this
.
	`gëEphemîÆsM≠
();

254 
ªsu…
 = 0;

255 
HashSë
<
Såög
> 
£t
 : 
m≠
.
	`vÆues
()) {

256 
ªsu…
 +
£t
.
	`size
();

258  
ªsu…
;

259 
	}
}

266 
public
 
	$≠¥oxim©eD©aSize
() {

267 
ªsu…
 = 0;

268 
M≠
.
E¡ry
<
Såög
, 
D©aNode
> 
íåy
 : 
nodes
.
	`íåySë
()) {

269 
D©aNode
 
vÆue
 = 
íåy
.
	`gëVÆue
();

270 
	`synchr⁄ized
 (
vÆue
) {

271 
ªsu…
 +
íåy
.
	`gëKey
().
	`Àngth
();

272 
ªsu…
 +(
vÆue
.
d©a
 =
nuŒ
 ? 0

273 : 
vÆue
.
d©a
.
Àngth
);

276  
ªsu…
;

277 
	}
}

283 
¥iv©e
 
D©aNode
 
	groŸ
 = 
√w
 D©aNode(
nuŒ
,Çew 
byã
[0], -1L,

284 
√w
 
SètPîsi°ed
());

289 
¥iv©e
 
D©aNode
 
	g¥ocD©aNode
 = 
√w
 D©aNode(
roŸ
,Çew 
byã
[0], -1L,

290 
√w
 
SètPîsi°ed
());

296 
¥iv©e
 
D©aNode
 
	gquŸaD©aNode
 = 
√w
 D©aNode(
¥ocD©aNode
,Çew 
byã
[0],

297 -1L, 
√w
 
SètPîsi°ed
());

299 
public
 
	$D©aTªe
() {

301 
nodes
.
	`put
("", 
roŸ
);

302 
nodes
.
	`put
(
roŸZookì≥r
, 
roŸ
);

305 
roŸ
.
	`addChûd
(
¥ocChûdZookì≥r
);

306 
nodes
.
	`put
(
¥ocZookì≥r
, 
¥ocD©aNode
);

308 
¥ocD©aNode
.
	`addChûd
(
quŸaChûdZookì≥r
);

309 
nodes
.
	`put
(
quŸaZookì≥r
, 
quŸaD©aNode
);

310 
	}
}

319 
boﬁón
 
	$isS≥cülP©h
(
Såög
 
∑th
) {

320 i‡(
roŸZookì≥r
.
	`equÆs
(
∑th
Ë|| 
¥ocZookì≥r
.equals(path)

321 || 
quŸaZookì≥r
.
	`equÆs
(
∑th
)) {

322  
åue
;

324  
Ál£
;

325 
	}
}

327 
public
 
	$c›ySètPîsi°ed
(
SètPîsi°ed
 
‰om
, SètPîsi°ed 
to
) {

328 
to
.
	`£tAvîsi⁄
(
‰om
.
	`gëAvîsi⁄
());

329 
to
.
	`£tCtime
(
‰om
.
	`gëCtime
());

330 
to
.
	`£tCvîsi⁄
(
‰om
.
	`gëCvîsi⁄
());

331 
to
.
	`£tCzxid
(
‰om
.
	`gëCzxid
());

332 
to
.
	`£tMtime
(
‰om
.
	`gëMtime
());

333 
to
.
	`£tMzxid
(
‰om
.
	`gëMzxid
());

334 
to
.
	`£tPzxid
(
‰om
.
	`gëPzxid
());

335 
to
.
	`£tVîsi⁄
(
‰om
.
	`gëVîsi⁄
());

336 
to
.
	`£tEphemîÆOw√r
(
‰om
.
	`gëEphemîÆOw√r
());

337 
	}
}

339 
public
 
	$c›ySèt
(
Sèt
 
‰om
, Sèà
to
) {

340 
to
.
	`£tAvîsi⁄
(
‰om
.
	`gëAvîsi⁄
());

341 
to
.
	`£tCtime
(
‰om
.
	`gëCtime
());

342 
to
.
	`£tCvîsi⁄
(
‰om
.
	`gëCvîsi⁄
());

343 
to
.
	`£tCzxid
(
‰om
.
	`gëCzxid
());

344 
to
.
	`£tMtime
(
‰om
.
	`gëMtime
());

345 
to
.
	`£tMzxid
(
‰om
.
	`gëMzxid
());

346 
to
.
	`£tPzxid
(
‰om
.
	`gëPzxid
());

347 
to
.
	`£tVîsi⁄
(
‰om
.
	`gëVîsi⁄
());

348 
to
.
	`£tEphemîÆOw√r
(
‰om
.
	`gëEphemîÆOw√r
());

349 
to
.
	`£tD©aLígth
(
‰om
.
	`gëD©aLígth
());

350 
to
.
	`£tNumChûdªn
(
‰om
.
	`gëNumChûdªn
());

351 
	}
}

361 
public
 
	$upd©eCou¡
(
Såög
 
œ°Pªfix
, 
diff
) {

362 
Såög
 
°©Node
 = 
QuŸas
.
	`°©P©h
(
œ°Pªfix
);

363 
D©aNode
 
node
 = 
nodes
.
	`gë
(
°©Node
);

364 
SètsTøck
 
upd©edSèt
 = 
nuŒ
;

365 i‡(
node
 =
nuŒ
) {

367 
LOG
.
	`îr‹
("Missög cou¡Çodêf‹ sèà" + 
°©Node
);

370 
	`synchr⁄ized
 (
node
) {

371 
upd©edSèt
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
node
.
d©a
));

372 
upd©edSèt
.
	`£tCou¡
(upd©edSèt.
	`gëCou¡
(Ë+ 
diff
);

373 
node
.
d©a
 = 
upd©edSèt
.
	`toSåög
().
	`gëByãs
();

376 
Såög
 
quŸaNode
 = 
QuŸas
.
	`quŸaP©h
(
œ°Pªfix
);

377 
node
 = 
nodes
.
	`gë
(
quŸaNode
);

378 
SètsTøck
 
thisSèts
 = 
nuŒ
;

379 i‡(
node
 =
nuŒ
) {

381 
LOG
.
	`îr‹
("Missög cou¡Çodêf‹ quŸ®" + 
quŸaNode
);

384 
	`synchr⁄ized
 (
node
) {

385 
thisSèts
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
node
.
d©a
));

387 i‡(
thisSèts
.
	`gëCou¡
(Ë> -1 && (thisSèts.gëCou¡(Ë< 
upd©edSèt
.getCount())) {

388 
LOG


389 .
	`w¨n
("QuŸ®ex˚eded: " + 
œ°Pªfix
 + " count="

390 + 
upd©edSèt
.
	`gëCou¡
() + "Üimit="

391 + 
thisSèts
.
	`gëCou¡
());

393 
	}
}

405 
public
 
	$upd©eByãs
(
Såög
 
œ°Pªfix
, 
diff
) {

406 
Såög
 
°©Node
 = 
QuŸas
.
	`°©P©h
(
œ°Pªfix
);

407 
D©aNode
 
node
 = 
nodes
.
	`gë
(
°©Node
);

408 i‡(
node
 =
nuŒ
) {

411 
LOG
.
	`îr‹
("Missög sèànodêf‹ byã†" + 
°©Node
);

414 
SètsTøck
 
upd©edSèt
 = 
nuŒ
;

415 
	`synchr⁄ized
 (
node
) {

416 
upd©edSèt
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
node
.
d©a
));

417 
upd©edSèt
.
	`£tByãs
(upd©edSèt.
	`gëByãs
(Ë+ 
diff
);

418 
node
.
d©a
 = 
upd©edSèt
.
	`toSåög
().
	`gëByãs
();

421 
Såög
 
quŸaNode
 = 
QuŸas
.
	`quŸaP©h
(
œ°Pªfix
);

422 
node
 = 
nodes
.
	`gë
(
quŸaNode
);

423 i‡(
node
 =
nuŒ
) {

426 
LOG
.
	`îr‹
("Missög quŸ®nodêf‹ byã†" + 
quŸaNode
);

429 
SètsTøck
 
thisSèts
 = 
nuŒ
;

430 
	`synchr⁄ized
 (
node
) {

431 
thisSèts
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
node
.
d©a
));

433 i‡(
thisSèts
.
	`gëByãs
(Ë> -1 && (thisSèts.gëByãs(Ë< 
upd©edSèt
.getBytes())) {

434 
LOG


435 .
	`w¨n
("QuŸ®ex˚eded: " + 
œ°Pªfix
 + " bytes="

436 + 
upd©edSèt
.
	`gëByãs
() + "Üimit="

437 + 
thisSèts
.
	`gëByãs
());

439 
	}
}

453 
public
 
Såög
 
¸óãNode
(Såög 
∑th
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
,

454 
ïhemîÆOw√r
, 
∑ª¡CVîsi⁄
, 
zxid
, 
time
)

455 
throws
 
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
,

456 
	gKì≥rEx˚±i⁄
.
	gNodeExi°sEx˚±i⁄
 {

457 
	gœ°Sœsh
 = 
∑th
.
œ°IndexOf
('/');

458 
Såög
 
	g∑ª¡Name
 = 
∑th
.
sub°rög
(0, 
œ°Sœsh
);

459 
Såög
 
	gchûdName
 = 
∑th
.
sub°rög
(
œ°Sœsh
 + 1);

460 
SètPîsi°ed
 
	g°©
 = 
√w
 StatPersisted();

461 
	g°©
.
£tCtime
(
time
);

462 
	g°©
.
£tMtime
(
time
);

463 
	g°©
.
£tCzxid
(
zxid
);

464 
	g°©
.
£tMzxid
(
zxid
);

465 
	g°©
.
£tPzxid
(
zxid
);

466 
	g°©
.
£tVîsi⁄
(0);

467 
	g°©
.
£tAvîsi⁄
(0);

468 
	g°©
.
£tEphemîÆOw√r
(
ïhemîÆOw√r
);

469 
D©aNode
 
	g∑ª¡
 = 
nodes
.
gë
(
∑ª¡Name
);

470 i‡(
	g∑ª¡
 =
nuŒ
) {

471 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
();

473 
synchr⁄ized
 (
∑ª¡
) {

474 
	gSë
<
	gSåög
> 
	gchûdªn
 = 
∑ª¡
.
gëChûdªn
();

475 i‡(
	gchûdªn
 !
nuŒ
) {

476 i‡(
chûdªn
.
c⁄èös
(
chûdName
)) {

477 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
();

481 i‡(
	g∑ª¡CVîsi⁄
 == -1) {

482 
∑ª¡CVîsi⁄
 = 
∑ª¡
.
°©
.
gëCvîsi⁄
();

483 
	g∑ª¡CVîsi⁄
++;

485 
	g∑ª¡
.
	g°©
.
£tCvîsi⁄
(
∑ª¡CVîsi⁄
);

486 
	g∑ª¡
.
	g°©
.
£tPzxid
(
zxid
);

487 
L⁄g
 
	gl⁄gvÆ
 = 
c⁄vîtA˛s
(
a˛
);

488 
D©aNode
 
	gchûd
 = 
√w
 D©aNode(
∑ª¡
, 
d©a
, 
l⁄gvÆ
, 
°©
);

489 
	g∑ª¡
.
addChûd
(
chûdName
);

490 
	gnodes
.
put
(
∑th
, 
chûd
);

491 i‡(
	gïhemîÆOw√r
 != 0) {

492 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
gë
(
ïhemîÆOw√r
);

493 i‡(
	gli°
 =
nuŒ
) {

494 
li°
 = 
√w
 
HashSë
<
Såög
>();

495 
	gïhemîÆs
.
put
(
ïhemîÆOw√r
, 
li°
);

497 
synchr⁄ized
 (
li°
) {

498 
	gli°
.
add
(
∑th
);

503 i‡(
	g∑ª¡Name
.
°¨tsWôh
(
quŸaZookì≥r
)) {

505 i‡(
	gQuŸas
.
	glimôNode
.
equÆs
(
chûdName
)) {

508 
	gpTrõ
.
addP©h
(
∑ª¡Name
.
sub°rög
(
quŸaZookì≥r
.
Àngth
()));

510 i‡(
	gQuŸas
.
	g°©Node
.
equÆs
(
chûdName
)) {

511 
upd©eQuŸaF‹P©h
(
∑ª¡Name


512 .
sub°rög
(
quŸaZookì≥r
.
Àngth
()));

516 
Såög
 
	gœ°Pªfix
;

517 if((
	gœ°Pªfix
 = 
gëMaxPªfixWôhQuŸa
(
∑th
)Ë!
nuŒ
) {

519 
upd©eCou¡
(
œ°Pªfix
, 1);

520 
upd©eByãs
(
œ°Pªfix
, 
d©a
 =
nuŒ
 ? 0 : d©a.
Àngth
);

522 
	gd©aW©ches
.
åiggîW©ch
(
∑th
, 
Evít
.
EvítTy≥
.
NodeCª©ed
);

523 
	gchûdW©ches
.
åiggîW©ch
(
∑ª¡Name
.
equÆs
("") ? "/" :ÖarentName,

524 
Evít
.
EvítTy≥
.
NodeChûdªnCh™ged
);

525  
	g∑th
;

537 
public
 
	$dñëeNode
(
Såög
 
∑th
, 
zxid
)

538 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

539 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

540 
Såög
 
∑ª¡Name
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

541 
Såög
 
chûdName
 = 
∑th
.
	`sub°rög
(
œ°Sœsh
 + 1);

542 
D©aNode
 
node
 = 
nodes
.
	`gë
(
∑th
);

543 i‡(
node
 =
nuŒ
) {

544 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

546 
nodes
.
	`ªmove
(
∑th
);

547 
D©aNode
 
∑ª¡
 = 
nodes
.
	`gë
(
∑ª¡Name
);

548 i‡(
∑ª¡
 =
nuŒ
) {

549 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

551 
	`synchr⁄ized
 (
∑ª¡
) {

552 
∑ª¡
.
	`ªmoveChûd
(
chûdName
);

553 
∑ª¡
.
°©
.
	`£tPzxid
(
zxid
);

554 
eow√r
 = 
node
.
°©
.
	`gëEphemîÆOw√r
();

555 i‡(
eow√r
 != 0) {

556 
HashSë
<
Såög
> 
nodes
 = 
ïhemîÆs
.
	`gë
(
eow√r
);

557 i‡(
nodes
 !
nuŒ
) {

558 
	`synchr⁄ized
 (
nodes
) {

559 
nodes
.
	`ªmove
(
∑th
);

563 
node
.
∑ª¡
 = 
nuŒ
;

565 i‡(
∑ª¡Name
.
	`°¨tsWôh
(
¥ocZookì≥r
)) {

567 i‡(
QuŸas
.
limôNode
.
	`equÆs
(
chûdName
)) {

570 
pTrõ
.
	`dñëeP©h
(
∑ª¡Name
.
	`sub°rög
(
quŸaZookì≥r
.
	`Àngth
()));

575 
Såög
 
œ°Pªfix
;

576 if((
œ°Pªfix
 = 
	`gëMaxPªfixWôhQuŸa
(
∑th
)Ë!
nuŒ
) {

578 
	`upd©eCou¡
(
œ°Pªfix
, -1);

579 
byãs
 = 0;

580 
	`synchr⁄ized
 (
node
) {

581 
byãs
 = (
node
.
d©a
 =
nuŒ
 ? 0 : -“ode.d©a.
Àngth
));

583 
	`upd©eByãs
(
œ°Pªfix
, 
byãs
);

585 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

586 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
EVENT_DELIVERY_TRACE_MASK
,

587 "d©aW©ches.åiggîW©ch " + 
∑th
);

588 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
EVENT_DELIVERY_TRACE_MASK
,

589 "chûdW©ches.åiggîW©ch " + 
∑ª¡Name
);

591 
Së
<
W©chî
> 
¥o˚s£d
 = 
d©aW©ches
.
	`åiggîW©ch
(
∑th
,

592 
EvítTy≥
.
NodeDñëed
);

593 
chûdW©ches
.
	`åiggîW©ch
(
∑th
, 
EvítTy≥
.
NodeDñëed
, 
¥o˚s£d
);

594 
chûdW©ches
.
	`åiggîW©ch
(
∑ª¡Name
.
	`equÆs
("") ? "/" :ÖarentName,

595 
EvítTy≥
.
NodeChûdªnCh™ged
);

596 
	}
}

598 
public
 
Sèt
 
	$£tD©a
(
Såög
 
∑th
, 
byã
 
d©a
[], 
vîsi⁄
, 
zxid
,

599 
time
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

600 
Sèt
 
s
 = 
√w
 
	`Sèt
();

601 
D©aNode
 
n
 = 
nodes
.
	`gë
(
∑th
);

602 i‡(
n
 =
nuŒ
) {

603 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

605 
byã
 
œ°d©a
[] = 
nuŒ
;

606 
	`synchr⁄ized
 (
n
) {

607 
œ°d©a
 = 
n
.
d©a
;

608 
n
.
d©a
 = data;

609 
n
.
°©
.
	`£tMtime
(
time
);

610 
n
.
°©
.
	`£tMzxid
(
zxid
);

611 
n
.
°©
.
	`£tVîsi⁄
(
vîsi⁄
);

612 
n
.
	`c›ySèt
(
s
);

615 
Såög
 
œ°Pªfix
;

616 if((
œ°Pªfix
 = 
	`gëMaxPªfixWôhQuŸa
(
∑th
)Ë!
nuŒ
) {

617 
this
.
	`upd©eByãs
(
œ°Pªfix
, (
d©a
 =
nuŒ
 ? 0 : d©a.
Àngth
)

618 - (
œ°d©a
 =
nuŒ
 ? 0 :Üa°d©a.
Àngth
));

620 
d©aW©ches
.
	`åiggîW©ch
(
∑th
, 
EvítTy≥
.
NodeD©aCh™ged
);

621  
s
;

622 
	}
}

630 
public
 
Såög
 
	$gëMaxPªfixWôhQuŸa
(
Såög
 
∑th
) {

634 
Såög
 
œ°Pªfix
 = 
pTrõ
.
	`födMaxPªfix
(
∑th
);

636 i‡(!
roŸZookì≥r
.
	`equÆs
(
œ°Pªfix
) && !("".equals(lastPrefix))) {

637  
œ°Pªfix
;

640  
nuŒ
;

642 
	}
}

644 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
)

645 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

646 
D©aNode
 
n
 = 
nodes
.
	`gë
(
∑th
);

647 i‡(
n
 =
nuŒ
) {

648 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

650 
	`synchr⁄ized
 (
n
) {

651 
n
.
	`c›ySèt
(
°©
);

652 i‡(
w©chî
 !
nuŒ
) {

653 
d©aW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

655  
n
.
d©a
;

657 
	}
}

659 
public
 
Sèt
 
	$°©Node
(
Såög
 
∑th
, 
W©chî
 
w©chî
)

660 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

661 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

662 
D©aNode
 
n
 = 
nodes
.
	`gë
(
∑th
);

663 i‡(
w©chî
 !
nuŒ
) {

664 
d©aW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

666 i‡(
n
 =
nuŒ
) {

667 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

669 
	`synchr⁄ized
 (
n
) {

670 
n
.
	`c›ySèt
(
°©
);

671  
°©
;

673 
	}
}

675 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
)

676 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

677 
D©aNode
 
n
 = 
nodes
.
	`gë
(
∑th
);

678 i‡(
n
 =
nuŒ
) {

679 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

681 
	`synchr⁄ized
 (
n
) {

682 i‡(
°©
 !
nuŒ
) {

683 
n
.
	`c›ySèt
(
°©
);

685 
AºayLi°
<
Såög
> 
chûdªn
;

686 
Së
<
Såög
> 
chûds
 = 
n
.
	`gëChûdªn
();

687 i‡(
chûds
 !
nuŒ
) {

688 
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>(
chûds
.
	`size
());

689 
chûdªn
.
	`addAŒ
(
chûds
);

691 
chûdªn
 = 
√w
 
AºayLi°
<
Såög
>(0);

694 i‡(
w©chî
 !
nuŒ
) {

695 
chûdW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

697  
chûdªn
;

699 
	}
}

701 
public
 
Sèt
 
£tACL
(
Såög
 
∑th
, 
Li°
<
ACL
> 
a˛
, 
vîsi⁄
)

702 
throws
 
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
 {

703 
Sèt
 
	g°©
 = 
√w
 Stat();

704 
D©aNode
 
	gn
 = 
nodes
.
gë
(
∑th
);

705 i‡(
	gn
 =
nuŒ
) {

706 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
();

708 
synchr⁄ized
 (
n
) {

709 
	gn
.
	g°©
.
£tAvîsi⁄
(
vîsi⁄
);

710 
	gn
.
	ga˛
 = 
c⁄vîtA˛s
(
a˛
);

711 
	gn
.
c›ySèt
(
°©
);

712  
	g°©
;

716 @
SuµªssW¨nögs
("unchecked")

717 
public
 
	gLi°
<
	gACL
> 
	$gëACL
(
Såög
 
∑th
, 
Sèt
 
°©
)

718 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

719 
D©aNode
 
n
 = 
nodes
.
	`gë
(
∑th
);

720 i‡(
n
 =
nuŒ
) {

721 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

723 
	`synchr⁄ized
 (
n
) {

724 
n
.
	`c›ySèt
(
°©
);

725  
√w
 
AºayLi°
<
ACL
>(
	`c⁄vîtL⁄g
(
n
.
a˛
));

727 
	}
}

729 
public
 cœs†
	cPro˚ssTxnResu…
 {

730 
public
 
	g˛õ¡Id
;

732 
public
 
	gcxid
;

734 
public
 
	gzxid
;

736 
public
 
	gîr
;

738 
public
 
	gty≥
;

740 
public
 
Såög
 
	g∑th
;

742 
public
 
Sèt
 
	g°©
;

744 
public
 
	gLi°
<
	gPro˚ssTxnResu…
> 
	gmu…iResu…
;

752 @
Ovîride


753 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

754 i‡(
o
 
ö°™˚of
 
	gPro˚ssTxnResu…
) {

755 
Pro˚ssTxnResu…
 
	gŸhî
 = (Pro˚ssTxnResu…Ë
o
;

756  
	gŸhî
.
	g˛õ¡Id
 =
˛õ¡Id
 && 
Ÿhî
.
cxid
 == cxid;

758  
	gÁl£
;

767 @
Ovîride


768 
public
 
hashCode
() {

769  (Ë((
	g˛õ¡Id
 ^ 
	gcxid
Ë% 
	gI¡egî
.
	gMAX_VALUE
);

774 
public
 vﬁ©ûê
	gœ°Pro˚s£dZxid
 = 0;

776 
public
 
Pro˚ssTxnResu…
 
	$¥o˚ssTxn
(
TxnHódî
 
hódî
, 
Rec‹d
 
txn
)

778 
Pro˚ssTxnResu…
 
rc
 = 
√w
 
	`Pro˚ssTxnResu…
();

780 
åy
 {

781 
rc
.
˛õ¡Id
 = 
hódî
.
	`gëClõ¡Id
();

782 
rc
.
cxid
 = 
hódî
.
	`gëCxid
();

783 
rc
.
zxid
 = 
hódî
.
	`gëZxid
();

784 
rc
.
ty≥
 = 
hódî
.
	`gëTy≥
();

785 
rc
.
îr
 = 0;

786 
rc
.
mu…iResu…
 = 
nuŒ
;

787 
hódî
.
	`gëTy≥
()) {

788 
OpCode
.
¸óã
:

789 
Cª©eTxn
 
¸óãTxn
 = (Cª©eTxnË
txn
;

790 
rc
.
∑th
 = 
¸óãTxn
.
	`gëP©h
();

791 
	`¸óãNode
(

792 
¸óãTxn
.
	`gëP©h
(),

793 
¸óãTxn
.
	`gëD©a
(),

794 
¸óãTxn
.
	`gëA˛
(),

795 
¸óãTxn
.
	`gëEphemîÆ
(Ë? 
hódî
.
	`gëClõ¡Id
() : 0,

796 
¸óãTxn
.
	`gëP¨ítCVîsi⁄
(),

797 
hódî
.
	`gëZxid
(), hódî.
	`gëTime
());

799 
OpCode
.
dñëe
:

800 
DñëeTxn
 
dñëeTxn
 = (DñëeTxnË
txn
;

801 
rc
.
∑th
 = 
dñëeTxn
.
	`gëP©h
();

802 
	`dñëeNode
(
dñëeTxn
.
	`gëP©h
(), 
hódî
.
	`gëZxid
());

804 
OpCode
.
£tD©a
:

805 
SëD©aTxn
 
£tD©aTxn
 = (SëD©aTxnË
txn
;

806 
rc
.
∑th
 = 
£tD©aTxn
.
	`gëP©h
();

807 
rc
.
°©
 = 
	`£tD©a
(
£tD©aTxn
.
	`gëP©h
(), setDataTxn

808 .
	`gëD©a
(), 
£tD©aTxn
.
	`gëVîsi⁄
(), 
hódî


809 .
	`gëZxid
(), 
hódî
.
	`gëTime
());

811 
OpCode
.
£tACL
:

812 
SëACLTxn
 
£tACLTxn
 = (SëACLTxnË
txn
;

813 
rc
.
∑th
 = 
£tACLTxn
.
	`gëP©h
();

814 
rc
.
°©
 = 
	`£tACL
(
£tACLTxn
.
	`gëP©h
(), sëACLTxn.
	`gëA˛
(),

815 
£tACLTxn
.
	`gëVîsi⁄
());

817 
OpCode
.
˛o£Sessi⁄
:

818 
	`kûlSessi⁄
(
hódî
.
	`gëClõ¡Id
(), hódî.
	`gëZxid
());

820 
OpCode
.
îr‹
:

821 
Eº‹Txn
 
îrTxn
 = (Eº‹TxnË
txn
;

822 
rc
.
îr
 = 
îrTxn
.
	`gëEº
();

824 
OpCode
.
check
:

825 
CheckVîsi⁄Txn
 
checkTxn
 = (CheckVîsi⁄TxnË
txn
;

826 
rc
.
∑th
 = 
checkTxn
.
	`gëP©h
();

828 
OpCode
.
mu…i
:

829 
Mu…iTxn
 
mu…iTxn
 = (Mu…iTxnË
txn
 ;

830 
Li°
<
Txn
> 
txns
 = 
mu…iTxn
.
	`gëTxns
();

831 
rc
.
mu…iResu…
 = 
√w
 
AºayLi°
<
Pro˚ssTxnResu…
>();

832 
boﬁón
 
Áûed
 = 
Ál£
;

833 
Txn
 
subtxn
 : 
txns
) {

834 i‡(
subtxn
.
	`gëTy≥
(Ë=
OpCode
.
îr‹
) {

835 
Áûed
 = 
åue
;

840 
boﬁón
 
po°_Áûed
 = 
Ál£
;

841 
Txn
 
subtxn
 : 
txns
) {

842 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
subtxn
.
	`gëD©a
());

843 
Rec‹d
 
ªc‹d
 = 
nuŒ
;

844 
subtxn
.
	`gëTy≥
()) {

845 
OpCode
.
¸óã
:

846 
ªc‹d
 = 
√w
 
	`Cª©eTxn
();

848 
OpCode
.
dñëe
:

849 
ªc‹d
 = 
√w
 
	`DñëeTxn
();

851 
OpCode
.
£tD©a
:

852 
ªc‹d
 = 
√w
 
	`SëD©aTxn
();

854 
OpCode
.
îr‹
:

855 
ªc‹d
 = 
√w
 
	`Eº‹Txn
();

856 
po°_Áûed
 = 
åue
;

858 
OpCode
.
check
:

859 
ªc‹d
 = 
√w
 
	`CheckVîsi⁄Txn
();

862 
throw
 
√w
 
	`IOEx˚±i⁄
("InvÆidÅy≥ o‡›: " + 
subtxn
.
	`gëTy≥
());

864 
	`as£π
(
ªc‹d
 !
nuŒ
);

866 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
bb
, 
ªc‹d
);

868 i‡(
Áûed
 && 
subtxn
.
	`gëTy≥
(Ë!
OpCode
.
îr‹
){

869 
ec
 = 
po°_Áûed
 ? 
Code
.
RUNTIMEINCONSISTENCY
.
	`ötVÆue
()

870 : 
Code
.
OK
.
	`ötVÆue
();

872 
subtxn
.
	`£tTy≥
(
OpCode
.
îr‹
);

873 
ªc‹d
 = 
√w
 
	`Eº‹Txn
(
ec
);

876 i‡(
Áûed
) {

877 
	`as£π
(
subtxn
.
	`gëTy≥
(Ë=
OpCode
.
îr‹
) ;

880 
TxnHódî
 
subHdr
 = 
√w
 
	`TxnHódî
(
hódî
.
	`gëClõ¡Id
(), hódî.
	`gëCxid
(),

881 
hódî
.
	`gëZxid
(), hódî.
	`gëTime
(),

882 
subtxn
.
	`gëTy≥
());

883 
Pro˚ssTxnResu…
 
subRc
 = 
	`¥o˚ssTxn
(
subHdr
, 
ªc‹d
);

884 
rc
.
mu…iResu…
.
	`add
(
subRc
);

885 i‡(
subRc
.
îr
 !0 && 
rc
.err == 0) {

886 
rc
.
îr
 = 
subRc
.err ;

891 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

892 i‡(
LOG
.
	`isDebugE«bÀd
()) {

893 
LOG
.
	`debug
("Faûed: " + 
hódî
 + ":" + 
txn
, 
e
);

895 
rc
.
îr
 = 
e
.
	`code
().
	`ötVÆue
();

896 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

897 i‡(
LOG
.
	`isDebugE«bÀd
()) {

898 
LOG
.
	`debug
("Faûed: " + 
hódî
 + ":" + 
txn
, 
e
);

915 i‡(
rc
.
zxid
 > 
œ°Pro˚s£dZxid
) {

916 
œ°Pro˚s£dZxid
 = 
rc
.
zxid
;

933 i‡(
hódî
.
	`gëTy≥
(Ë=
OpCode
.
¸óã
 &&

934 
rc
.
îr
 =
Code
.
NODEEXISTS
.
	`ötVÆue
()) {

935 
LOG
.
	`debug
("Adju°ögÖ¨íàcvîsi⁄ f‹ Txn: " + 
hódî
.
	`gëTy≥
() +

936 "Ö©h:" + 
rc
.
∑th
 + "Éº: " +Ñc.
îr
);

937 
œ°Sœsh
 = 
rc
.
∑th
.
	`œ°IndexOf
('/');

938 
Såög
 
∑ª¡Name
 = 
rc
.
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

939 
Cª©eTxn
 
cTxn
 = (Cª©eTxn)
txn
;

940 
åy
 {

941 
	`£tCvîsi⁄Pzxid
(
∑ª¡Name
, 
cTxn
.
	`gëP¨ítCVîsi⁄
(),

942 
hódî
.
	`gëZxid
());

943 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

944 
LOG
.
	`îr‹
("FailedÅo setÖarent cversion for: " +

945 
∑ª¡Name
, 
e
);

946 
rc
.
îr
 = 
e
.
	`code
().
	`ötVÆue
();

948 } i‡(
rc
.
îr
 !
Code
.
OK
.
	`ötVÆue
()) {

949 
LOG
.
	`debug
("Ign‹ögÖro˚ssTx¿Áûuª hdr: " + 
hódî
.
	`gëTy≥
() +

950 " :Éº‹: " + 
rc
.
îr
);

952  
rc
;

953 
	}
}

955 
	$kûlSessi⁄
(
£ssi⁄
, 
zxid
) {

962 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
	`ªmove
(
£ssi⁄
);

963 i‡(
li°
 !
nuŒ
) {

964 
Såög
 
∑th
 : 
li°
) {

965 
åy
 {

966 
	`dñëeNode
(
∑th
, 
zxid
);

967 i‡(
LOG
.
	`isDebugE«bÀd
()) {

968 
LOG


969 .
	`debug
("DñëögÉphemîÆÇodê" + 
∑th


971 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄
));

973 } 
	`ˇtch
 (
NoNodeEx˚±i⁄
 
e
) {

974 
LOG
.
	`w¨n
("Ign‹ög NoNodeEx˚±i⁄ f‹Ö©h " + 
∑th


976 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄
));

980 
	}
}

985 
¥iv©e
 ˛as†
	cCou¡s
 {

986 
	gbyãs
;

987 
	gcou¡
;

998 
¥iv©e
 
	$gëCou¡s
(
Såög
 
∑th
, 
Cou¡s
 
cou¡s
) {

999 
D©aNode
 
node
 = 
	`gëNode
(
∑th
);

1000 i‡(
node
 =
nuŒ
) {

1003 
Såög
[] 
chûdªn
 = 
nuŒ
;

1004 
Àn
 = 0;

1005 
	`synchr⁄ized
 (
node
) {

1006 
Së
<
Såög
> 
chûds
 = 
node
.
	`gëChûdªn
();

1007 i‡(
chûds
 !
nuŒ
) {

1008 
chûdªn
 = 
chûds
.
	`toAºay
(
√w
 
Såög
[chûds.
	`size
()]);

1010 
Àn
 = (
node
.
d©a
 =
nuŒ
 ? 0 :Çode.d©a.
Àngth
);

1013 
cou¡s
.
cou¡
 += 1;

1014 
cou¡s
.
byãs
 +
Àn
;

1015 i‡(
chûdªn
 =
nuŒ
 || chûdªn.
Àngth
 == 0) {

1018 
Såög
 
chûd
 : 
chûdªn
) {

1019 
	`gëCou¡s
(
∑th
 + "/" + 
chûd
, 
cou¡s
);

1021 
	}
}

1029 
¥iv©e
 
	$upd©eQuŸaF‹P©h
(
Såög
 
∑th
) {

1030 
Cou¡s
 
c
 = 
√w
 
	`Cou¡s
();

1031 
	`gëCou¡s
(
∑th
, 
c
);

1032 
SètsTøck
 
°øck
 = 
√w
 
	`SètsTøck
();

1033 
°øck
.
	`£tByãs
(
c
.
byãs
);

1034 
°øck
.
	`£tCou¡
(
c
.
cou¡
);

1035 
Såög
 
°©P©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" + QuŸas.
°©Node
;

1036 
D©aNode
 
node
 = 
	`gëNode
(
°©P©h
);

1038 i‡(
node
 =
nuŒ
) {

1039 
LOG
.
	`w¨n
("Missög quŸ®°©Çodê" + 
°©P©h
);

1042 
	`synchr⁄ized
 (
node
) {

1043 
node
.
d©a
 = 
°øck
.
	`toSåög
().
	`gëByãs
();

1045 
	}
}

1052 
¥iv©e
 
	$åavî£Node
(
Såög
 
∑th
) {

1053 
D©aNode
 
node
 = 
	`gëNode
(
∑th
);

1054 
Såög
 
chûdªn
[] = 
nuŒ
;

1055 
	`synchr⁄ized
 (
node
) {

1056 
Së
<
Såög
> 
chûds
 = 
node
.
	`gëChûdªn
();

1057 i‡(
chûds
 !
nuŒ
) {

1058 
chûdªn
 = 
chûds
.
	`toAºay
(
√w
 
Såög
[chûds.
	`size
()]);

1061 i‡(
chûdªn
 =
nuŒ
 || chûdªn.
Àngth
 == 0) {

1065 
Såög
 
ídSåög
 = "/" + 
QuŸas
.
limôNode
;

1066 i‡(
∑th
.
	`ídsWôh
(
ídSåög
)) {

1070 
Såög
 
ªÆP©h
 = 
∑th
.
	`sub°rög
(
QuŸas
.
quŸaZookì≥r


1071 .
	`Àngth
(), 
∑th
.
	`ödexOf
(
ídSåög
));

1072 
	`upd©eQuŸaF‹P©h
(
ªÆP©h
);

1073 
this
.
pTrõ
.
	`addP©h
(
ªÆP©h
);

1077 
Såög
 
chûd
 : 
chûdªn
) {

1078 
	`åavî£Node
(
∑th
 + "/" + 
chûd
);

1080 
	}
}

1085 
¥iv©e
 
	$£tupQuŸa
() {

1086 
Såög
 
quŸaP©h
 = 
QuŸas
.
quŸaZookì≥r
;

1087 
D©aNode
 
node
 = 
	`gëNode
(
quŸaP©h
);

1088 i‡(
node
 =
nuŒ
) {

1091 
	`åavî£Node
(
quŸaP©h
);

1092 
	}
}

1105 
	$£rülizeNode
(
OuçutArchive
 
ﬂ
, 
SåögBuûdî
 
∑th
Ë
throws
 
IOEx˚±i⁄
 {

1106 
Såög
 
∑thSåög
 = 
∑th
.
	`toSåög
();

1107 
D©aNode
 
node
 = 
	`gëNode
(
∑thSåög
);

1108 i‡(
node
 =
nuŒ
) {

1111 
Såög
 
chûdªn
[] = 
nuŒ
;

1112 
	`synchr⁄ized
 (
node
) {

1113 
scou¡
++;

1114 
ﬂ
.
	`wrôeSåög
(
∑thSåög
, "path");

1115 
ﬂ
.
	`wrôeRec‹d
(
node
, "node");

1116 
Së
<
Såög
> 
chûds
 = 
node
.
	`gëChûdªn
();

1117 i‡(
chûds
 !
nuŒ
) {

1118 
chûdªn
 = 
chûds
.
	`toAºay
(
√w
 
Såög
[chûds.
	`size
()]);

1121 
∑th
.
	`≠≥nd
('/');

1122 
off
 = 
∑th
.
	`Àngth
();

1123 i‡(
chûdªn
 !
nuŒ
) {

1124 
Såög
 
chûd
 : 
chûdªn
) {

1128 
∑th
.
	`dñëe
(
off
, 
I¡egî
.
MAX_VALUE
);

1129 
∑th
.
	`≠≥nd
(
chûd
);

1130 
	`£rülizeNode
(
ﬂ
, 
∑th
);

1133 
	}
}

1135 
	gscou¡
;

1137 
public
 
boﬁón
 
	göôülized
 = 
Ál£
;

1139 
¥iv©e
 
de£rülizeLi°
(
M≠
<
L⁄g
, 
Li°
<
ACL
>> 
l⁄gKeyM≠
,

1140 
I≈utArchive
 
ü
Ë
throws
 
	gIOEx˚±i⁄
 {

1141 
	gi
 = 
ü
.
ªadI¡
("map");

1142 
	gi
 > 0) {

1143 
L⁄g
 
	gvÆ
 = 
ü
.
ªadL⁄g
("long");

1144 i‡(
	ga˛Index
 < 
	gvÆ
) {

1145 
	ga˛Index
 = 
vÆ
;

1147 
	gLi°
<
	gACL
> 
	ga˛Li°
 = 
√w
 
AºayLi°
<
ACL
>();

1148 
Index
 
	gj
 = 
ü
.
°¨tVe˘‹
("acls");

1149 !
	gj
.
d⁄e
()) {

1150 
ACL
 
	ga˛
 = 
√w
 ACL();

1151 
	ga˛
.
de£rülize
(
ü
, "acl");

1152 
	ga˛Li°
.
add
(
a˛
);

1153 
	gj
.
ö¸
();

1155 
	gl⁄gKeyM≠
.
put
(
vÆ
, 
a˛Li°
);

1156 
	ga˛KeyM≠
.
put
(
a˛Li°
, 
vÆ
);

1157 
	gi
--;

1161 
¥iv©e
 
synchr⁄ized
 
£rülizeLi°
(
M≠
<
L⁄g
, 
Li°
<
ACL
>> 
l⁄gKeyM≠
,

1162 
OuçutArchive
 
ﬂ
Ë
throws
 
	gIOEx˚±i⁄
 {

1163 
	gﬂ
.
wrôeI¡
(
l⁄gKeyM≠
.
size
(), "map");

1164 
	gSë
<
	gM≠
.
	gE¡ry
<
	gL⁄g
, 
	gLi°
<
	gACL
>>> 
	g£t
 = 
l⁄gKeyM≠
.
íåySë
();

1165 
	gM≠
.
	gE¡ry
<
	gL⁄g
, 
	gLi°
<
	gACL
>> 
	gvÆ
 : 
£t
) {

1166 
ﬂ
.
wrôeL⁄g
(
vÆ
.
gëKey
(), "long");

1167 
	gLi°
<
	gACL
> 
	ga˛Li°
 = 
vÆ
.
gëVÆue
();

1168 
	gﬂ
.
°¨tVe˘‹
(
a˛Li°
, "acls");

1169 
ACL
 
	ga˛
 : 
a˛Li°
) {

1170 
a˛
.
£rülize
(
ﬂ
, "acl");

1172 
	gﬂ
.
ídVe˘‹
(
a˛Li°
, "acls");

1176 
public
 
	$£rülize
(
OuçutArchive
 
ﬂ
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

1177 
scou¡
 = 0;

1178 
	`£rülizeLi°
(
l⁄gKeyM≠
, 
ﬂ
);

1179 
	`£rülizeNode
(
ﬂ
, 
√w
 
	`SåögBuûdî
(""));

1182 i‡(
roŸ
 !
nuŒ
) {

1183 
ﬂ
.
	`wrôeSåög
("/", "path");

1185 
	}
}

1187 
public
 
	$de£rülize
(
I≈utArchive
 
ü
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

1188 
	`de£rülizeLi°
(
l⁄gKeyM≠
, 
ü
);

1189 
nodes
.
	`˛ór
();

1190 
Såög
 
∑th
 = 
ü
.
	`ªadSåög
("path");

1191 !
∑th
.
	`equÆs
("/")) {

1192 
D©aNode
 
node
 = 
√w
 
	`D©aNode
();

1193 
ü
.
	`ªadRec‹d
(
node
, "node");

1194 
nodes
.
	`put
(
∑th
, 
node
);

1195 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

1196 i‡(
œ°Sœsh
 == -1) {

1197 
roŸ
 = 
node
;

1199 
Såög
 
∑ª¡P©h
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

1200 
node
.
∑ª¡
 = 
nodes
.
	`gë
(
∑ª¡P©h
);

1201 i‡(
node
.
∑ª¡
 =
nuŒ
) {

1202 
throw
 
√w
 
	`IOEx˚±i⁄
("Invalid Datatree, unableÅo find " +

1203 "∑ª¡ " + 
∑ª¡P©h
 + " o‡∑th " + 
∑th
);

1205 
node
.
∑ª¡
.
	`addChûd
(
∑th
.
	`sub°rög
(
œ°Sœsh
 + 1));

1206 
eow√r
 = 
node
.
°©
.
	`gëEphemîÆOw√r
();

1207 i‡(
eow√r
 != 0) {

1208 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
	`gë
(
eow√r
);

1209 i‡(
li°
 =
nuŒ
) {

1210 
li°
 = 
√w
 
HashSë
<
Såög
>();

1211 
ïhemîÆs
.
	`put
(
eow√r
, 
li°
);

1213 
li°
.
	`add
(
∑th
);

1216 
∑th
 = 
ü
.
	`ªadSåög
("path");

1218 
nodes
.
	`put
("/", 
roŸ
);

1223 
	`£tupQuŸa
();

1224 
	}
}

1230 
public
 
synchr⁄ized
 
	$dumpW©chesSumm¨y
(
PrötWrôî
 
pwrôî
) {

1231 
pwrôî
.
	`¥öt
(
d©aW©ches
.
	`toSåög
());

1232 
	}
}

1239 
public
 
synchr⁄ized
 
	$dumpW©ches
(
PrötWrôî
 
pwrôî
, 
boﬁón
 
byP©h
) {

1240 
d©aW©ches
.
	`dumpW©ches
(
pwrôî
, 
byP©h
);

1241 
	}
}

1247 
public
 
	$dumpEphemîÆs
(
PrötWrôî
 
pwrôî
) {

1248 
Së
<
L⁄g
> 
keys
 = 
ïhemîÆs
.
	`keySë
();

1249 
pwrôî
.
	`¥öén
("Sessions with Ephemerals ("

1250 + 
keys
.
	`size
() + "):");

1251 
k
 : 
keys
) {

1252 
pwrôî
.
	`¥öt
("0x" + 
L⁄g
.
	`toHexSåög
(
k
));

1253 
pwrôî
.
	`¥öén
(":");

1254 
HashSë
<
Såög
> 
tmp
 = 
ïhemîÆs
.
	`gë
(
k
);

1255 
	`synchr⁄ized
 (
tmp
) {

1256 
Såög
 
∑th
 : 
tmp
) {

1257 
pwrôî
.
	`¥öén
("\t" + 
∑th
);

1261 
	}
}

1263 
public
 
	$ªmoveCnxn
(
W©chî
 
w©chî
) {

1264 
d©aW©ches
.
	`ªmoveW©chî
(
w©chî
);

1265 
chûdW©ches
.
	`ªmoveW©chî
(
w©chî
);

1266 
	}
}

1268 
public
 
	$˛ór
() {

1269 
roŸ
 = 
nuŒ
;

1270 
nodes
.
	`˛ór
();

1271 
ïhemîÆs
.
	`˛ór
();

1274 
	}
}

1276 
public
 
£tW©ches
(
ªœtiveZxid
, 
Li°
<
Såög
> 
d©aW©ches
,

1277 
Li°
<
Såög
> 
exi°W©ches
, Li°<Såög> 
chûdW©ches
,

1278 
W©chî
 
w©chî
) {

1279 
Såög
 
	g∑th
 : 
d©aW©ches
) {

1280 
D©aNode
 
node
 = 
gëNode
(
∑th
);

1281 
W©chedEvít
 
	ge
 = 
nuŒ
;

1282 i‡(
	gnode
 =
nuŒ
) {

1283 
e
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeDñëed
,

1284 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1285 } i‡(
	gnode
.
	g°©
.
gëCzxid
(Ë> 
	gªœtiveZxid
) {

1286 
	ge
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeCª©ed
,

1287 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1288 } i‡(
	gnode
.
	g°©
.
gëMzxid
(Ë> 
	gªœtiveZxid
) {

1289 
	ge
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeD©aCh™ged
,

1290 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1292 i‡(
	ge
 !
nuŒ
) {

1293 
w©chî
.
¥o˚ss
(
e
);

1295 
	gthis
.
	gd©aW©ches
.
addW©ch
(
∑th
, 
w©chî
);

1298 
Såög
 
	g∑th
 : 
exi°W©ches
) {

1299 
D©aNode
 
node
 = 
gëNode
(
∑th
);

1300 
W©chedEvít
 
	ge
 = 
nuŒ
;

1301 i‡(
	gnode
 =
nuŒ
) {

1303 } i‡(
node
.
°©
.
gëMzxid
(Ë> 
ªœtiveZxid
) {

1304 
e
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeD©aCh™ged
,

1305 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1307 
	ge
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeCª©ed
,

1308 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1310 i‡(
	ge
 !
nuŒ
) {

1311 
w©chî
.
¥o˚ss
(
e
);

1313 
	gthis
.
	gd©aW©ches
.
addW©ch
(
∑th
, 
w©chî
);

1316 
Såög
 
	g∑th
 : 
chûdW©ches
) {

1317 
D©aNode
 
node
 = 
gëNode
(
∑th
);

1318 
W©chedEvít
 
	ge
 = 
nuŒ
;

1319 i‡(
	gnode
 =
nuŒ
) {

1320 
e
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeDñëed
,

1321 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1322 } i‡(
	gnode
.
	g°©
.
gëPzxid
(Ë> 
	gªœtiveZxid
) {

1323 
	ge
 = 
√w
 
W©chedEvít
(
EvítTy≥
.
NodeChûdªnCh™ged
,

1324 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

1326 i‡(
	ge
 !
nuŒ
) {

1327 
w©chî
.
¥o˚ss
(
e
);

1329 
	gthis
.
	gchûdW©ches
.
addW©ch
(
∑th
, 
w©chî
);

1350 
public
 
	$£tCvîsi⁄Pzxid
(
Såög
 
∑th
, 
√wCvîsi⁄
, 
zxid
)

1351 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

1352 i‡(
∑th
.
	`ídsWôh
("/")) {

1353 
∑th
 =Ö©h.
	`sub°rög
(0,Ö©h.
	`Àngth
() - 1);

1355 
D©aNode
 
node
 = 
nodes
.
	`gë
(
∑th
);

1356 i‡(
node
 =
nuŒ
) {

1357 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
(
∑th
);

1359 
	`synchr⁄ized
 (
node
) {

1360 if(
√wCvîsi⁄
 == -1) {

1361 
√wCvîsi⁄
 = 
node
.
°©
.
	`gëCvîsi⁄
() + 1;

1363 i‡(
√wCvîsi⁄
 > 
node
.
°©
.
	`gëCvîsi⁄
()) {

1364 
node
.
°©
.
	`£tCvîsi⁄
(
√wCvîsi⁄
);

1365 
node
.
°©
.
	`£tPzxid
(
zxid
);

1368 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTreeBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

26 
public
 
˛ass
 
D©aTªeBón
 
im∂emíts
 
	gD©aTªeMXBón
, 
	gZKMBónInfo
 {

27 
D©aTªe
 
	gd©aTªe
;

29 
public
 
D©aTªeBón
(
‹g
.
≠ache
.
zookì≥r
.
£rvî
.
D©aTªe
 
d©aTªe
){

30 
	gthis
.
	gd©aTªe
 = 
d©aTªe
;

33 
public
 
gëNodeCou¡
() {

34  
	gd©aTªe
.
gëNodeCou¡
();

37 
public
 
≠¥oxim©eD©aSize
() {

38  
	gd©aTªe
.
≠¥oxim©eD©aSize
();

41 
public
 
cou¡EphemîÆs
() {

42  
	gd©aTªe
.
gëEphemîÆsCou¡
();

45 
public
 
gëW©chCou¡
() {

46  
	gd©aTªe
.
gëW©chCou¡
();

49 
public
 
Såög
 
gëName
() {

53 
public
 
boﬁón
 
isHiddí
() {

54  
	gÁl£
;

57 
public
 
Såög
 
gëLa°Zxid
() {

58  "0x" + 
	gL⁄g
.
toHexSåög
(
d©aTªe
.
œ°Pro˚s£dZxid
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTreeMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

24 
public
 
öãrÁ˚
 
	gD©aTªeMXBón
 {

28 
public
 
gëNodeCou¡
();

32 
public
 
Såög
 
gëLa°Zxid
();

36 
public
 
gëW©chCou¡
();

42 
public
 
≠¥oxim©eD©aSize
();

46 
public
 
cou¡EphemîÆs
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DatadirCleanupManager.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gTimî
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gTimîTask
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

36 
public
 cœs†
	cD©adúCÀ™upM™agî
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
D©adúCÀ™upM™agî
.
˛ass
);

43 
public
 
	ePurgeTaskSètus
 {

44 
	mNOT_STARTED
, 
	mSTARTED
, 
	mCOMPLETED
;

47 
¥iv©e
 
PurgeTaskSètus
 
	gpurgeTaskSètus
 = PurgeTaskSètus.
NOT_STARTED
;

49 
¥iv©e
 
föÆ
 
Såög
 
	g¢≠Dú
;

51 
¥iv©e
 
föÆ
 
Såög
 
	gd©aLogDú
;

53 
¥iv©e
 
föÆ
 
	g¢≠RëaöCou¡
;

55 
¥iv©e
 
föÆ
 
	gpurgeI¡îvÆ
;

57 
¥iv©e
 
Timî
 
	gtimî
;

72 
public
 
	$D©adúCÀ™upM™agî
(
Såög
 
¢≠Dú
, Såög 
d©aLogDú
, 
¢≠RëaöCou¡
,

73 
purgeI¡îvÆ
) {

74 
this
.
¢≠Dú
 = snapDir;

75 
this
.
d©aLogDú
 = dataLogDir;

76 
this
.
¢≠RëaöCou¡
 = snapRetainCount;

77 
this
.
purgeI¡îvÆ
 =ÖurgeInterval;

78 
LOG
.
	`öfo
("aut›urge.¢≠RëaöCou¡ sëÅÿ" + 
¢≠RëaöCou¡
);

79 
LOG
.
	`öfo
("aut›urge.purgeI¡îvÆ sëÅÿ" + 
purgeI¡îvÆ
);

80 
	}
}

94 
public
 
	$°¨t
() {

95 i‡(
PurgeTaskSètus
.
STARTED
 =
purgeTaskSètus
) {

96 
LOG
.
	`w¨n
("PurgeÅask isálreadyÑunning.");

100 i‡(
purgeI¡îvÆ
 <= 0) {

101 
LOG
.
	`öfo
("PurgeÅask isÇot scheduled.");

105 
timî
 = 
√w
 
	`Timî
("PurgeTask", 
åue
);

106 
TimîTask
 
èsk
 = 
√w
 
	`PurgeTask
(
d©aLogDú
, 
¢≠Dú
, 
¢≠RëaöCou¡
);

107 
timî
.
	`scheduÀAtFixedR©e
(
èsk
, 0, 
TimeUnô
.
HOURS
.
	`toMûlis
(
purgeI¡îvÆ
));

109 
purgeTaskSètus
 = 
PurgeTaskSètus
.
STARTED
;

110 
	}
}

115 
public
 
	$shutdown
() {

116 i‡(
PurgeTaskSètus
.
STARTED
 =
purgeTaskSètus
) {

117 
LOG
.
	`öfo
("Shutting downÖurgeÅask.");

118 
timî
.
	`ˇn˚l
();

119 
purgeTaskSètus
 = 
PurgeTaskSètus
.
COMPLETED
;

121 
LOG
.
	`w¨n
("PurgeÅaskÇot started. Ignoring shutdown!");

123 
	}
}

125 ˛as†
	cPurgeTask
 
exãnds
 
	gTimîTask
 {

126 
¥iv©e
 
Såög
 
	glogsDú
;

127 
¥iv©e
 
Såög
 
	g¢≠sDú
;

128 
¥iv©e
 
	g¢≠RëaöCou¡
;

130 
public
 
PurgeTask
(
Såög
 
d©aDú
, Såög 
¢≠Dú
, 
cou¡
) {

131 
	glogsDú
 = 
d©aDú
;

132 
	g¢≠sDú
 = 
¢≠Dú
;

133 
	g¢≠RëaöCou¡
 = 
cou¡
;

136 @
Ovîride


137 
public
 
run
() {

138 
	gLOG
.
öfo
("PurgeÅask started.");

139 
	gåy
 {

140 
	gPurgeTxnLog
.
purge
(
√w
 
Fûe
(
logsDú
),Çew Fûe(
¢≠sDú
), 
¢≠RëaöCou¡
);

141 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

142 
	gLOG
.
îr‹
("Eº‹ occuªd whûêpurgög.", 
e
);

144 
	gLOG
.
öfo
("PurgeÅask completed.");

153 
public
 
PurgeTaskSètus
 
	$gëPurgeTaskSètus
() {

154  
purgeTaskSètus
;

155 
	}
}

162 
public
 
Såög
 
	$gëS«pDú
() {

163  
¢≠Dú
;

164 
	}
}

171 
public
 
Såög
 
	$gëD©aLogDú
() {

172  
d©aLogDú
;

173 
	}
}

180 
public
 
	$gëPurgeI¡îvÆ
() {

181  
purgeI¡îvÆ
;

182 
	}
}

189 
public
 
	$gëS«pRëaöCou¡
() {

190  
¢≠RëaöCou¡
;

191 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gMu…iRe•⁄£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄MovedEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eRe•⁄£
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gExi°sReque°
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gExi°sRe•⁄£
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëACLReque°
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëACLRe•⁄£
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªn2Reque°
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªn2Re•⁄£
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªnReque°
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëChûdªnRe•⁄£
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëD©aReque°
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëD©aRe•⁄£
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëACLRe•⁄£
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aRe•⁄£
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëW©ches
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSyncReque°
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSyncRe•⁄£
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
.
	gPro˚ssTxnResu…
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
.
	gCh™geRec‹d
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

59 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gMu…iTønß˘i⁄Rec‹d
;

60 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOp
;

61 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
;

62 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gCheckResu…
;

63 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gCª©eResu…
;

64 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gDñëeResu…
;

65 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gSëD©aResu…
;

66 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gEº‹Resu…
;

77 
public
 cœs†
	cFöÆReque°Pro˚ss‹
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

78 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FöÆReque°Pro˚ss‹
.
˛ass
);

80 
ZooKì≥rSîvî
 
	mzks
;

82 
public
 
	$FöÆReque°Pro˚ss‹
(
ZooKì≥rSîvî
 
zks
) {

83 
this
.
zks
 = zks;

86 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

87 i‡(
LOG
.
	`isDebugE«bÀd
()) {

88 
LOG
.
	`debug
("Pro˚ssögÑeque°:: " + 
ªque°
);

91 
åa˚Mask
 = 
ZooTø˚
.
CLIENT_REQUEST_TRACE_MASK
;

92 i‡(
ªque°
.
ty≥
 =
OpCode
.
pög
) {

93 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PING_TRACE_MASK
;

95 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

96 
ZooTø˚
.
	`logReque°
(
LOG
, 
åa˚Mask
, 'E', 
ªque°
, "");

98 
Pro˚ssTxnResu…
 
rc
 = 
nuŒ
;

99 
	`synchr⁄ized
 (
zks
.
out°™dögCh™ges
) {

100 !
zks
.
out°™dögCh™ges
.
	`isEm±y
()

101 && 
zks
.
out°™dögCh™ges
.
	`gë
(0).
zxid
 <
ªque°
.zxid) {

102 
Ch™geRec‹d
 
¸
 = 
zks
.
out°™dögCh™ges
.
	`ªmove
(0);

103 i‡(
¸
.
zxid
 < 
ªque°
.zxid) {

104 
LOG
.
	`w¨n
("Zxid outstanding "

105 + 
¸
.
zxid


106 + " i†Às†th™ cuºíà" + 
ªque°
.
zxid
);

108 i‡(
zks
.
out°™dögCh™gesF‹P©h
.
	`gë
(
¸
.
∑th
) == cr) {

109 
zks
.
out°™dögCh™gesF‹P©h
.
	`ªmove
(
¸
.
∑th
);

112 i‡(
ªque°
.
hdr
 !
nuŒ
) {

113 
TxnHódî
 
hdr
 = 
ªque°
.hdr;

114 
Rec‹d
 
txn
 = 
ªque°
.txn;

116 
rc
 = 
zks
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

119 i‡(
Reque°
.
	`isQu‹um
(
ªque°
.
ty≥
)) {

120 
zks
.
	`gëZKD©aba£
().
	`addCommôãdPr›oßl
(
ªque°
);

124 i‡(
ªque°
.
hdr
 !
nuŒ
 &&Ñeque°.hdr.
	`gëTy≥
(Ë=
OpCode
.
˛o£Sessi⁄
) {

125 
SîvîCnxnFa˘‹y
 
scxn
 = 
zks
.
	`gëSîvîCnxnFa˘‹y
();

128 i‡(
scxn
 !
nuŒ
 && 
ªque°
.
˙xn
 ==Çull) {

133 
scxn
.
	`˛o£Sessi⁄
(
ªque°
.
£ssi⁄Id
);

138 i‡(
ªque°
.
˙xn
 =
nuŒ
) {

141 
SîvîCnxn
 
˙xn
 = 
ªque°
.cnxn;

143 
Såög
 
œ°Op
 = "NA";

144 
zks
.
	`decInPro˚ss
();

145 
Code
 
îr
 = Code.
OK
;

146 
Rec‹d
 
r•
 = 
nuŒ
;

147 
boﬁón
 
˛o£Sessi⁄
 = 
Ál£
;

148 
åy
 {

149 i‡(
ªque°
.
hdr
 !
nuŒ
 &&Ñeque°.hdr.
	`gëTy≥
(Ë=
OpCode
.
îr‹
) {

150 
throw
 
Kì≥rEx˚±i⁄
.
	`¸óã
(Kì≥rEx˚±i⁄.
Code
.
	`gë
((

151 (
Eº‹Txn
Ë
ªque°
.
txn
).
	`gëEº
()));

154 
Kì≥rEx˚±i⁄
 
ke
 = 
ªque°
.
	`gëEx˚±i⁄
();

155 i‡(
ke
 !
nuŒ
 && 
ªque°
.
ty≥
 !
OpCode
.
mu…i
) {

156 
throw
 
ke
;

159 i‡(
LOG
.
	`isDebugE«bÀd
()) {

160 
LOG
.
	`debug
("{}",
ªque°
);

162 
ªque°
.
ty≥
) {

163 
OpCode
.
pög
: {

164 
zks
.
	`£rvîSèts
().
	`upd©eL©ícy
(
ªque°
.
¸óãTime
);

166 
œ°Op
 = "PING";

167 
˙xn
.
	`upd©eSètsF‹Re•⁄£
(
ªque°
.
cxid
,Ñeque°.
zxid
, 
œ°Op
,

168 
ªque°
.
¸óãTime
, 
Sy°em
.
	`cuºítTimeMûlis
());

170 
˙xn
.
	`£ndRe•⁄£
(
√w
 
	`RïlyHódî
(-2,

171 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
(), 0), 
nuŒ
, "response");

174 
OpCode
.
¸óãSessi⁄
: {

175 
zks
.
	`£rvîSèts
().
	`upd©eL©ícy
(
ªque°
.
¸óãTime
);

177 
œ°Op
 = "SESS";

178 
˙xn
.
	`upd©eSètsF‹Re•⁄£
(
ªque°
.
cxid
,Ñeque°.
zxid
, 
œ°Op
,

179 
ªque°
.
¸óãTime
, 
Sy°em
.
	`cuºítTimeMûlis
());

181 
zks
.
	`föishSessi⁄Inô
(
ªque°
.
˙xn
, 
åue
);

184 
OpCode
.
mu…i
: {

185 
œ°Op
 = "MULT";

186 
r•
 = 
√w
 
	`Mu…iRe•⁄£
() ;

188 
Pro˚ssTxnResu…
 
subTxnResu…
 : 
rc
.
mu…iResu…
) {

190 
OpResu…
 
subResu…
 ;

192 
subTxnResu…
.
ty≥
) {

193 
OpCode
.
check
:

194 
subResu…
 = 
√w
 
	`CheckResu…
();

196 
OpCode
.
¸óã
:

197 
subResu…
 = 
√w
 
	`Cª©eResu…
(
subTxnResu…
.
∑th
);

199 
OpCode
.
dñëe
:

200 
subResu…
 = 
√w
 
	`DñëeResu…
();

202 
OpCode
.
£tD©a
:

203 
subResu…
 = 
√w
 
	`SëD©aResu…
(
subTxnResu…
.
°©
);

205 
OpCode
.
îr‹
:

206 
subResu…
 = 
√w
 
	`Eº‹Resu…
(
subTxnResu…
.
îr
) ;

209 
throw
 
√w
 
	`IOEx˚±i⁄
("InvalidÅype of op");

212 ((
Mu…iRe•⁄£
)
r•
).
	`add
(
subResu…
);

217 
OpCode
.
¸óã
: {

218 
œ°Op
 = "CREA";

219 
r•
 = 
√w
 
	`Cª©eRe•⁄£
(
rc
.
∑th
);

220 
îr
 = 
Code
.
	`gë
(
rc
.err);

223 
OpCode
.
dñëe
: {

224 
œ°Op
 = "DELE";

225 
îr
 = 
Code
.
	`gë
(
rc
.err);

228 
OpCode
.
£tD©a
: {

229 
œ°Op
 = "SETD";

230 
r•
 = 
√w
 
	`SëD©aRe•⁄£
(
rc
.
°©
);

231 
îr
 = 
Code
.
	`gë
(
rc
.err);

234 
OpCode
.
£tACL
: {

235 
œ°Op
 = "SETA";

236 
r•
 = 
√w
 
	`SëACLRe•⁄£
(
rc
.
°©
);

237 
îr
 = 
Code
.
	`gë
(
rc
.err);

240 
OpCode
.
˛o£Sessi⁄
: {

241 
œ°Op
 = "CLOS";

242 
˛o£Sessi⁄
 = 
åue
;

243 
îr
 = 
Code
.
	`gë
(
rc
.err);

246 
OpCode
.
sync
: {

247 
œ°Op
 = "SYNC";

248 
SyncReque°
 
syncReque°
 = 
√w
 
	`SyncReque°
();

249 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

250 
syncReque°
);

251 
r•
 = 
√w
 
	`SyncRe•⁄£
(
syncReque°
.
	`gëP©h
());

254 
OpCode
.
check
: {

255 
œ°Op
 = "CHEC";

256 
r•
 = 
√w
 
	`SëD©aRe•⁄£
(
rc
.
°©
);

257 
îr
 = 
Code
.
	`gë
(
rc
.err);

260 
OpCode
.
exi°s
: {

261 
œ°Op
 = "EXIS";

263 
Exi°sReque°
 
exi°sReque°
 = 
√w
 
	`Exi°sReque°
();

264 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

265 
exi°sReque°
);

266 
Såög
 
∑th
 = 
exi°sReque°
.
	`gëP©h
();

267 i‡(
∑th
.
	`ödexOf
('\0') != -1) {

268 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadArgumítsEx˚±i⁄
();

270 
Sèt
 
°©
 = 
zks
.
	`gëZKD©aba£
().
	`°©Node
(
∑th
, 
exi°sReque°


271 .
	`gëW©ch
(Ë? 
˙xn
 : 
nuŒ
);

272 
r•
 = 
√w
 
	`Exi°sRe•⁄£
(
°©
);

275 
OpCode
.
gëD©a
: {

276 
œ°Op
 = "GETD";

277 
GëD©aReque°
 
gëD©aReque°
 = 
√w
 
	`GëD©aReque°
();

278 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

279 
gëD©aReque°
);

280 
D©aNode
 
n
 = 
zks
.
	`gëZKD©aba£
().
	`gëNode
(
gëD©aReque°
.
	`gëP©h
());

281 i‡(
n
 =
nuŒ
) {

282 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

284 
L⁄g
 
a˛L
;

285 
	`synchr⁄ized
(
n
) {

286 
a˛L
 = 
n
.
a˛
;

288 
PªpReque°Pro˚ss‹
.
	`checkACL
(
zks
, zks.
	`gëZKD©aba£
().
	`c⁄vîtL⁄g
(
a˛L
),

289 
ZooDefs
.
Pîms
.
READ
,

290 
ªque°
.
authInfo
);

291 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

292 
byã
 
b
[] = 
zks
.
	`gëZKD©aba£
().
	`gëD©a
(
gëD©aReque°
.
	`gëP©h
(), 
°©
,

293 
gëD©aReque°
.
	`gëW©ch
(Ë? 
˙xn
 : 
nuŒ
);

294 
r•
 = 
√w
 
	`GëD©aRe•⁄£
(
b
, 
°©
);

297 
OpCode
.
£tW©ches
: {

298 
œ°Op
 = "SETW";

299 
SëW©ches
 
£tW©ches
 = 
√w
 
	`SëW©ches
();

301 
ªque°
.ªque°.
	`ªwöd
();

302 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
£tW©ches
);

303 
ªœtiveZxid
 = 
£tW©ches
.
	`gëRñ©iveZxid
();

304 
zks
.
	`gëZKD©aba£
().
	`£tW©ches
(
ªœtiveZxid
,

305 
£tW©ches
.
	`gëD©aW©ches
(),

306 
£tW©ches
.
	`gëExi°W©ches
(),

307 
£tW©ches
.
	`gëChûdW©ches
(), 
˙xn
);

310 
OpCode
.
gëACL
: {

311 
œ°Op
 = "GETA";

312 
GëACLReque°
 
gëACLReque°
 = 
√w
 
	`GëACLReque°
();

313 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

314 
gëACLReque°
);

315 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

316 
Li°
<
ACL
> 
a˛
 =

317 
zks
.
	`gëZKD©aba£
().
	`gëACL
(
gëACLReque°
.
	`gëP©h
(), 
°©
);

318 
r•
 = 
√w
 
	`GëACLRe•⁄£
(
a˛
, 
°©
);

321 
OpCode
.
gëChûdªn
: {

322 
œ°Op
 = "GETC";

323 
GëChûdªnReque°
 
gëChûdªnReque°
 = 
√w
 
	`GëChûdªnReque°
();

324 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

325 
gëChûdªnReque°
);

326 
D©aNode
 
n
 = 
zks
.
	`gëZKD©aba£
().
	`gëNode
(
gëChûdªnReque°
.
	`gëP©h
());

327 i‡(
n
 =
nuŒ
) {

328 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

330 
L⁄g
 
a˛G
;

331 
	`synchr⁄ized
(
n
) {

332 
a˛G
 = 
n
.
a˛
;

335 
PªpReque°Pro˚ss‹
.
	`checkACL
(
zks
, zks.
	`gëZKD©aba£
().
	`c⁄vîtL⁄g
(
a˛G
),

336 
ZooDefs
.
Pîms
.
READ
,

337 
ªque°
.
authInfo
);

338 
Li°
<
Såög
> 
chûdªn
 = 
zks
.
	`gëZKD©aba£
().
	`gëChûdªn
(

339 
gëChûdªnReque°
.
	`gëP©h
(), 
nuŒ
, getChildrenRequest

340 .
	`gëW©ch
(Ë? 
˙xn
 : 
nuŒ
);

341 
r•
 = 
√w
 
	`GëChûdªnRe•⁄£
(
chûdªn
);

344 
OpCode
.
gëChûdªn2
: {

345 
œ°Op
 = "GETC";

346 
GëChûdªn2Reque°
 
gëChûdªn2Reque°
 = 
√w
 
	`GëChûdªn2Reque°
();

347 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.request,

348 
gëChûdªn2Reque°
);

349 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

350 
D©aNode
 
n
 = 
zks
.
	`gëZKD©aba£
().
	`gëNode
(
gëChûdªn2Reque°
.
	`gëP©h
());

351 i‡(
n
 =
nuŒ
) {

352 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

354 
L⁄g
 
a˛G
;

355 
	`synchr⁄ized
(
n
) {

356 
a˛G
 = 
n
.
a˛
;

358 
PªpReque°Pro˚ss‹
.
	`checkACL
(
zks
, zks.
	`gëZKD©aba£
().
	`c⁄vîtL⁄g
(
a˛G
),

359 
ZooDefs
.
Pîms
.
READ
,

360 
ªque°
.
authInfo
);

361 
Li°
<
Såög
> 
chûdªn
 = 
zks
.
	`gëZKD©aba£
().
	`gëChûdªn
(

362 
gëChûdªn2Reque°
.
	`gëP©h
(), 
°©
, getChildren2Request

363 .
	`gëW©ch
(Ë? 
˙xn
 : 
nuŒ
);

364 
r•
 = 
√w
 
	`GëChûdªn2Re•⁄£
(
chûdªn
, 
°©
);

368 } 
	`ˇtch
 (
Sessi⁄MovedEx˚±i⁄
 
e
) {

377 
˙xn
.
	`£ndClo£Sessi⁄
();

379 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

380 
îr
 = 
e
.
	`code
();

381 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

384 
LOG
.
	`îr‹
("FaûedÅÿ¥o˚s†" + 
ªque°
, 
e
);

385 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

386 
ByãBuf„r
 
bb
 = 
ªque°
.request;

387 
bb
.
	`ªwöd
();

388 
bb
.
	`hasRemaöög
()) {

389 
sb
.
	`≠≥nd
(
I¡egî
.
	`toHexSåög
(
bb
.
	`gë
() & 0xff));

391 
LOG
.
	`îr‹
("DumpögÑeque° buf„r: 0x" + 
sb
.
	`toSåög
());

392 
îr
 = 
Code
.
MARSHALLINGERROR
;

395 
œ°Zxid
 = 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
();

396 
RïlyHódî
 
hdr
 =

397 
√w
 
	`RïlyHódî
(
ªque°
.
cxid
, 
œ°Zxid
, 
îr
.
	`ötVÆue
());

399 
zks
.
	`£rvîSèts
().
	`upd©eL©ícy
(
ªque°
.
¸óãTime
);

400 
˙xn
.
	`upd©eSètsF‹Re•⁄£
(
ªque°
.
cxid
, 
œ°Zxid
, 
œ°Op
,

401 
ªque°
.
¸óãTime
, 
Sy°em
.
	`cuºítTimeMûlis
());

403 
åy
 {

404 
˙xn
.
	`£ndRe•⁄£
(
hdr
, 
r•
, "response");

405 i‡(
˛o£Sessi⁄
) {

406 
˙xn
.
	`£ndClo£Sessi⁄
();

408 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

409 
LOG
.
	`îr‹
("FIXMSG",
e
);

411 
	}
}

413 
public
 
	$shutdown
() {

415 
LOG
.
	`öfo
("shutdown ofÑequestÖrocessor complete");

416 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/LogFormatter.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gChecksum
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeHódî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

40 
public
 cœs†
	cLogF‹m©ãr
 {

41 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
LogF‹m©ãr
.
˛ass
);

46 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
Ex˚±i⁄
 {

47 i‡(
¨gs
.
Àngth
 != 1) {

48 
Sy°em
.
îr
.
	`¥öén
("USAGE: LogFormatterÜog_file");

49 
Sy°em
.
	`exô
(2);

51 
FûeI≈utSåóm
 
fis
 = 
√w
 
	`FûeI≈utSåóm
(
¨gs
[0]);

52 
Bö¨yI≈utArchive
 
logSåóm
 = Bö¨yI≈utArchive.
	`gëArchive
(
fis
);

53 
FûeHódî
 
fhdr
 = 
√w
 
	`FûeHódî
();

54 
fhdr
.
	`de£rülize
(
logSåóm
, "fileheader");

56 i‡(
fhdr
.
	`gëMagic
(Ë!
FûeTxnLog
.
TXNLOG_MAGIC
) {

57 
Sy°em
.
îr
.
	`¥öén
("InvÆid magi¯numbî f‹ " + 
¨gs
[0]);

58 
Sy°em
.
	`exô
(2);

60 
Sy°em
.
out
.
	`¥öén
("ZooKeeper Transactional Log File with dbid "

61 + 
fhdr
.
	`gëDbid
() + "Åxnlog format version "

62 + 
fhdr
.
	`gëVîsi⁄
());

64 
cou¡
 = 0;

65 
åue
) {

66 
¸cVÆue
;

67 
byã
[] 
byãs
;

68 
åy
 {

69 
¸cVÆue
 = 
logSåóm
.
	`ªadL⁄g
("crcvalue");

71 
byãs
 = 
logSåóm
.
	`ªadBuf„r
("txnEntry");

72 } 
	`ˇtch
 (
EOFEx˚±i⁄
 
e
) {

73 
Sy°em
.
out
.
	`¥öén
("EOFÑóchedá·î " + 
cou¡
 + "Åxns.");

76 i‡(
byãs
.
Àngth
 == 0) {

79 
Sy°em
.
out
.
	`¥öén
("EOFÑóchedá·î " + 
cou¡
 + "Åxns.");

82 
Checksum
 
¸c
 = 
√w
 
	`AdÀr32
();

83 
¸c
.
	`upd©e
(
byãs
, 0, byãs.
Àngth
);

84 i‡(
¸cVÆue
 !
¸c
.
	`gëVÆue
()) {

85 
throw
 
√w
 
	`IOEx˚±i⁄
("CRC d€¢'àm©ch " + 
¸cVÆue
 +

86 " v†" + 
¸c
.
	`gëVÆue
());

88 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

89 
Rec‹d
 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
byãs
, 
hdr
);

90 
Sy°em
.
out
.
	`¥öén
(
D©eF‹m©
.
	`gëD©eTimeIn°™˚
(D©eF‹m©.
SHORT
,

91 
D©eF‹m©
.
LONG
).
	`f‹m©
(
√w
 
	`D©e
(
hdr
.
	`gëTime
()))

93 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëClõ¡Id
())

95 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëCxid
())

97 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëZxid
())

98 + " " + 
Tø˚F‹m©ãr
.
	`›2Såög
(
hdr
.
	`gëTy≥
()Ë+ " " + 
txn
);

99 i‡(
logSåóm
.
	`ªadByã
("EOR") != 'B') {

100 
LOG
.
	`îr‹
("LastÅransaction wasÖartial.");

101 
throw
 
√w
 
	`EOFEx˚±i⁄
("LastÅransaction wasÖartial.");

103 
cou¡
++;

106 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdWrôî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gWrôî
;

26 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

27 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

30 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gC™˚ŒedKeyEx˚±i⁄
;

32 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSñe˘i⁄Key
;

33 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

42 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

43 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gEnvú⁄mít
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gVîsi⁄
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gReque°Hódî
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gW©chîEvít
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódîZooKì≥rSîvî
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gRódO∆yZooKì≥rSîvî
;

54 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

60 
public
 cœs†
	cNIOSîvîCnxn
 
exãnds
 
	mSîvîCnxn
 {

61 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
NIOSîvîCnxn
.
˛ass
);

63 
NIOSîvîCnxnFa˘‹y
 
	mÁ˘‹y
;

65 
SockëCh™√l
 
	msock
;

67 
¥iv©e
 
föÆ
 
Sñe˘i⁄Key
 
	msk
;

69 
boﬁón
 
	möôülized
;

71 
ByãBuf„r
 
	mÀnBuf„r
 = ByãBuf„r.
Æloˇã
(4);

73 
ByãBuf„r
 
	möcomögBuf„r
 = 
ÀnBuf„r
;

75 
	mLökedBlockögQueue
<
	mByãBuf„r
> 
	moutgoögBuf„rs
 = 
√w
 
LökedBlockögQueue
<
ByãBuf„r
>();

77 
	m£ssi⁄Timeout
;

79 
¥iv©e
 
föÆ
 
ZooKì≥rSîvî
 
	mzkSîvî
;

84 
	mout°™dögReque°s
;

90 
	m£ssi⁄Id
;

92 
	m√xtSessi⁄Id
 = 1;

93 
	mout°™dögLimô
 = 1;

95 
public
 
	$NIOSîvîCnxn
(
ZooKì≥rSîvî
 
zk
, 
SockëCh™√l
 
sock
,

96 
Sñe˘i⁄Key
 
sk
, 
NIOSîvîCnxnFa˘‹y
 
Á˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

97 
this
.
zkSîvî
 = 
zk
;

98 
this
.
sock
 = sock;

99 
this
.
sk
 = sk;

100 
this
.
Á˘‹y
 = factory;

101 i‡(
this
.
Á˘‹y
.
logö
 !
nuŒ
) {

102 
this
.
zooKì≥rSa¶Sîvî
 = 
√w
 
	`ZooKì≥rSa¶Sîvî
(
Á˘‹y
.
logö
);

104 i‡(
zk
 !
nuŒ
) {

105 
out°™dögLimô
 = 
zk
.
	`gëGlobÆOut°™dögLimô
();

107 
sock
.
	`sockë
().
	`£tT˝NoDñay
(
åue
);

110 
sock
.
	`sockë
().
	`£tSoLögî
(
Ál£
, -1);

111 
I√tAddªss
 
addr
 = ((
I√tSockëAddªss
Ë
sock
.
	`sockë
()

112 .
	`gëRemŸeSockëAddªss
()).
	`gëAddªss
();

113 
authInfo
.
	`add
(
√w
 
	`Id
("ù", 
addr
.
	`gëHo°Addªss
()));

114 
sk
.
	`öãª°Ops
(
Sñe˘i⁄Key
.
OP_READ
);

120 
public
 
	$£ndClo£Sessi⁄
() {

121 
	`£ndBuf„r
(
SîvîCnxnFa˘‹y
.
˛o£C⁄n
);

122 
	}
}

129 
	$£ndBuf„rSync
(
ByãBuf„r
 
bb
) {

130 
åy
 {

135 
sock
.
	`c⁄figuªBlockög
(
åue
);

136 i‡(
bb
 !
SîvîCnxnFa˘‹y
.
˛o£C⁄n
) {

137 i‡(
sock
 !
nuŒ
) {

138 
sock
.
	`wrôe
(
bb
);

140 
	`∑ckëSít
();

142 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

143 
LOG
.
	`îr‹
("Eº‹ sídög d©®synchr⁄ou¶y ", 
õ
);

145 
	}
}

147 
public
 
	$£ndBuf„r
(
ByãBuf„r
 
bb
) {

148 
åy
 {

149 i‡(
bb
 !
SîvîCnxnFa˘‹y
.
˛o£C⁄n
) {

153 i‡((
sk
.
	`öãª°Ops
(Ë& 
Sñe˘i⁄Key
.
OP_WRITE
) == 0) {

154 
åy
 {

155 
sock
.
	`wrôe
(
bb
);

156 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

161 i‡(
bb
.
	`ªmaöög
() == 0) {

162 
	`∑ckëSít
();

167 
	`synchr⁄ized
(
this
.
Á˘‹y
){

168 
sk
.
	`£À˘‹
().
	`wakeup
();

169 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

170 
LOG
.
	`åa˚
("Addá buf„∏tÿoutgoögBuf„rs, sk " + 
sk


171 + " i†vÆid: " + 
sk
.
	`isVÆid
());

173 
outgoögBuf„rs
.
	`add
(
bb
);

174 i‡(
sk
.
	`isVÆid
()) {

175 
sk
.
	`öãª°Ops
(sk.öãª°Ops(Ë| 
Sñe˘i⁄Key
.
OP_WRITE
);

179 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

180 
LOG
.
	`îr‹
("U√x≥˘ed Ex˚±i⁄: ", 
e
);

182 
	}
}

185 
¥iv©e
 
	$ªadPaylﬂd
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

186 i‡(
öcomögBuf„r
.
	`ªmaöög
() != 0) {

187 
rc
 = 
sock
.
	`ªad
(
öcomögBuf„r
);

188 i‡(
rc
 < 0) {

189 
throw
 
√w
 
	`EndOfSåómEx˚±i⁄
(

191 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

196 i‡(
öcomögBuf„r
.
	`ªmaöög
() == 0) {

197 
	`∑ckëRe˚ived
();

198 
öcomögBuf„r
.
	`Êù
();

199 i‡(!
öôülized
) {

200 
	`ªadC⁄√˘Reque°
();

202 
	`ªadReque°
();

204 
ÀnBuf„r
.
	`˛ór
();

205 
öcomögBuf„r
 = 
ÀnBuf„r
;

207 
	}
}

209 
	$doIO
(
Sñe˘i⁄Key
 
k
Ë
throws
 
I¡îru±edEx˚±i⁄
 {

210 
åy
 {

211 i‡(
sock
 =
nuŒ
) {

212 
LOG
.
	`w¨n
("tryingÅo do i/o onáÇull socket for session:0x"

213 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

217 i‡(
k
.
	`isRódabÀ
()) {

218 
rc
 = 
sock
.
	`ªad
(
öcomögBuf„r
);

219 i‡(
rc
 < 0) {

220 
throw
 
√w
 
	`EndOfSåómEx˚±i⁄
(

222 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

225 i‡(
öcomögBuf„r
.
	`ªmaöög
() == 0) {

226 
boﬁón
 
isPaylﬂd
;

227 i‡(
öcomögBuf„r
 =
ÀnBuf„r
) {

228 
öcomögBuf„r
.
	`Êù
();

229 
isPaylﬂd
 = 
	`ªadLígth
(
k
);

230 
öcomögBuf„r
.
	`˛ór
();

233 
isPaylﬂd
 = 
åue
;

235 i‡(
isPaylﬂd
) {

236 
	`ªadPaylﬂd
();

245 i‡(
k
.
	`isWrôabÀ
()) {

250 i‡(
outgoögBuf„rs
.
	`size
() > 0) {

262 
ByãBuf„r
 
dúe˘Buf„r
 = 
Á˘‹y
.directBuffer;

263 
dúe˘Buf„r
.
	`˛ór
();

265 
ByãBuf„r
 
b
 : 
outgoögBuf„rs
) {

266 i‡(
dúe˘Buf„r
.
	`ªmaöög
(Ë< 
b
.remaining()) {

272 
b
 = (
ByãBuf„r
Ëb.
	`¶i˚
().
	`limô
(

273 
dúe˘Buf„r
.
	`ªmaöög
());

282 
p
 = 
b
.
	`posôi⁄
();

283 
dúe˘Buf„r
.
	`put
(
b
);

284 
b
.
	`posôi⁄
(
p
);

285 i‡(
dúe˘Buf„r
.
	`ªmaöög
() == 0) {

293 
dúe˘Buf„r
.
	`Êù
();

295 
£¡
 = 
sock
.
	`wrôe
(
dúe˘Buf„r
);

296 
ByãBuf„r
 
bb
;

299 
outgoögBuf„rs
.
	`size
() > 0) {

300 
bb
 = 
outgoögBuf„rs
.
	`≥ek
();

301 i‡(
bb
 =
SîvîCnxnFa˘‹y
.
˛o£C⁄n
) {

302 
throw
 
√w
 
	`Clo£Reque°Ex˚±i⁄
("closeÑequested");

304 
À·
 = 
bb
.
	`ªmaöög
(Ë- 
£¡
;

305 i‡(
À·
 > 0) {

310 
bb
.
	`posôi⁄
(bb.posôi⁄(Ë+ 
£¡
);

313 
	`∑ckëSít
();

315 
£¡
 -
bb
.
	`ªmaöög
();

316 
outgoögBuf„rs
.
	`ªmove
();

323 
	`synchr⁄ized
(
this
.
Á˘‹y
){

324 i‡(
outgoögBuf„rs
.
	`size
() == 0) {

325 i‡(!
öôülized


326 && (
sk
.
	`öãª°Ops
(Ë& 
Sñe˘i⁄Key
.
OP_READ
) == 0) {

327 
throw
 
√w
 
	`Clo£Reque°Ex˚±i⁄
("respondedÅo infoÖrobe");

329 
sk
.
	`öãª°Ops
(sk.interestOps()

330 & (~
Sñe˘i⁄Key
.
OP_WRITE
));

332 
sk
.
	`öãª°Ops
(sk.interestOps()

333 | 
Sñe˘i⁄Key
.
OP_WRITE
);

337 } 
	`ˇtch
 (
C™˚ŒedKeyEx˚±i⁄
 
e
) {

338 
LOG
.
	`w¨n
("Exception causing close of session 0x"

339 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

340 + " duêtÿ" + 
e
);

341 i‡(
LOG
.
	`isDebugE«bÀd
()) {

342 
LOG
.
	`debug
("C™˚ŒedKeyEx˚±i⁄ sèckÅø˚", 
e
);

344 
	`˛o£
();

345 } 
	`ˇtch
 (
Clo£Reque°Ex˚±i⁄
 
e
) {

347 
	`˛o£
();

348 } 
	`ˇtch
 (
EndOfSåómEx˚±i⁄
 
e
) {

349 
LOG
.
	`w¨n
("ˇughàíd o‡°ªamÉx˚±i⁄",
e
);

352 
	`˛o£
();

353 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

354 
LOG
.
	`w¨n
("Exception causing close of session 0x"

355 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

356 + " duêtÿ" + 
e
);

357 i‡(
LOG
.
	`isDebugE«bÀd
()) {

358 
LOG
.
	`debug
("IOEx˚±i⁄ sèckÅø˚", 
e
);

360 
	`˛o£
();

362 
	}
}

364 
¥iv©e
 
	$ªadReque°
(Ë
throws
 
IOEx˚±i⁄
 {

365 
zkSîvî
.
	`¥o˚ssPackë
(
this
, 
öcomögBuf„r
);

366 
	}
}

368 
¥Ÿe˘ed
 
	$ö¸Out°™dögReque°s
(
Reque°Hódî
 
h
) {

369 i‡(
h
.
	`gëXid
() >= 0) {

370 
	`synchr⁄ized
 (
this
) {

371 
out°™dögReque°s
++;

373 
	`synchr⁄ized
 (
this
.
Á˘‹y
) {

375 i‡(
zkSîvî
.
	`gëInPro˚ss
(Ë> 
out°™dögLimô
) {

376 i‡(
LOG
.
	`isDebugE«bÀd
()) {

377 
LOG
.
	`debug
("ThrŸéögÑecv " + 
zkSîvî
.
	`gëInPro˚ss
());

379 
	`dißbÀRecv
();

388 
	}
}

390 
public
 
	$dißbÀRecv
() {

391 
sk
.
	`öãª°Ops
(sk.öãª°Ops(Ë& (~
Sñe˘i⁄Key
.
OP_READ
));

392 
	}
}

394 
public
 
	$íabÀRecv
() {

395 
	`synchr⁄ized
 (
this
.
Á˘‹y
) {

396 
sk
.
	`£À˘‹
().
	`wakeup
();

397 i‡(
sk
.
	`isVÆid
()) {

398 
öãª°
 = 
sk
.
	`öãª°Ops
();

399 i‡((
öãª°
 & 
Sñe˘i⁄Key
.
OP_READ
) == 0) {

400 
sk
.
	`öãª°Ops
(
öãª°
 | 
Sñe˘i⁄Key
.
OP_READ
);

404 
	}
}

406 
¥iv©e
 
	$ªadC⁄√˘Reque°
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

407 i‡(
zkSîvî
 =
nuŒ
) {

408 
throw
 
√w
 
	`IOEx˚±i⁄
("ZooKeeperServerÇotÑunning");

410 
zkSîvî
.
	`¥o˚ssC⁄√˘Reque°
(
this
, 
öcomögBuf„r
);

411 
öôülized
 = 
åue
;

412 
	}
}

421 
¥iv©e
 
	$˛ónupWrôîSockë
(
PrötWrôî
 
pwrôî
) {

422 
åy
 {

423 i‡(
pwrôî
 !
nuŒ
) {

424 
pwrôî
.
	`Êush
();

425 
pwrôî
.
	`˛o£
();

427 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

428 
LOG
.
	`öfo
("Eº‹ closög PrötWrôî ", 
e
);

429 } 
föÆly
 {

430 
åy
 {

431 
	`˛o£
();

432 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

433 
LOG
.
	`îr‹
("Eº‹ closögá comm™d sockë ", 
e
);

436 
	}
}

444 
¥iv©e
 cœs†
	cSídBuf„rWrôî
 
exãnds
 
	gWrôî
 {

445 
¥iv©e
 
SåögBuf„r
 
	gsb
 = 
√w
 StringBuffer();

451 
¥iv©e
 
checkFlush
(
boﬁón
 
f‹˚
) {

452 i‡((
	gf‹˚
 && 
	gsb
.
Àngth
() > 0) || sb.length() > 2048) {

453 
£ndBuf„rSync
(
ByãBuf„r
.
wøp
(
sb
.
toSåög
().
gëByãs
()));

455 
	gsb
.
£tLígth
(0);

459 @
Ovîride


460 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

461 i‡(
	gsb
 =
nuŒ
) ;

462 
checkFlush
(
åue
);

463 
	gsb
 = 
nuŒ
;

466 @
Ovîride


467 
public
 
Êush
(Ë
throws
 
	gIOEx˚±i⁄
 {

468 
checkFlush
(
åue
);

471 @
Ovîride


472 
public
 
wrôe
([] 
cbuf
, 
off
, 
Àn
Ë
throws
 
	gIOEx˚±i⁄
 {

473 
	gsb
.
≠≥nd
(
cbuf
, 
off
, 
Àn
);

474 
checkFlush
(
Ál£
);

478 
¥iv©e
 
föÆ
 
Såög
 
	gZK_NOT_SERVING
 =

487 
¥iv©e
 
ab°ø˘
 cœs†
	cComm™dThªad
 
exãnds
 
	gThªad
 {

488 
PrötWrôî
 
	gpw
;

490 
Comm™dThªad
(
PrötWrôî
 
pw
) {

491 
	gthis
.
	gpw
 = 
pw
;

494 
public
 
run
() {

495 
	gåy
 {

496 
comm™dRun
();

497 } 
ˇtch
 (
IOEx˚±i⁄
 
õ
) {

498 
	gLOG
.
îr‹
("Eº‹ i¿ru¬ög comm™d ", 
õ
);

499 } 
	gföÆly
 {

500 
˛ónupWrôîSockë
(
pw
);

504 
public
 
ab°ø˘
 
comm™dRun
(Ë
throws
 
	gIOEx˚±i⁄
;

507 
¥iv©e
 cœs†
	cRuokComm™d
 
exãnds
 
	gComm™dThªad
 {

508 
public
 
RuokComm™d
(
PrötWrôî
 
pw
) {

509 
su≥r
(
pw
);

512 @
Ovîride


513 
public
 
comm™dRun
() {

514 
	gpw
.
¥öt
("imok");

519 
¥iv©e
 cœs†
	cTø˚MaskComm™d
 
exãnds
 
	gComm™dThªad
 {

520 
Tø˚MaskComm™d
(
PrötWrôî
 
pw
) {

521 
su≥r
(
pw
);

524 @
Ovîride


525 
public
 
comm™dRun
() {

526 
	gåa˚Mask
 = 
ZooTø˚
.
gëTextTø˚Levñ
();

527 
	gpw
.
¥öt
(
åa˚Mask
);

531 
¥iv©e
 cœs†
	cSëTø˚MaskComm™d
 
exãnds
 
	gComm™dThªad
 {

532 
	gåa˚
 = 0;

533 
SëTø˚MaskComm™d
(
PrötWrôî
 
pw
, 
åa˚
) {

534 
su≥r
(
pw
);

535 
	gthis
.
	gåa˚
 = 
åa˚
;

538 @
Ovîride


539 
public
 
comm™dRun
() {

540 
	gpw
.
¥öt
(
åa˚
);

544 
¥iv©e
 cœs†
	cEnvComm™d
 
exãnds
 
	gComm™dThªad
 {

545 
EnvComm™d
(
PrötWrôî
 
pw
) {

546 
su≥r
(
pw
);

549 @
Ovîride


550 
public
 
comm™dRun
() {

551 
	gLi°
<
	gEnvú⁄mít
.
	gE¡ry
> 
	gív
 = 
Envú⁄mít
.
li°
();

553 
	gpw
.
¥öén
("Environment:");

554 
	gEnvú⁄mít
.
E¡ry
 
	ge
 : 
ív
) {

555 
pw
.
¥öt
(
e
.
gëKey
());

556 
	gpw
.
¥öt
("=");

557 
	gpw
.
¥öén
(
e
.
gëVÆue
());

563 
¥iv©e
 cœs†
	cC⁄fComm™d
 
exãnds
 
	gComm™dThªad
 {

564 
C⁄fComm™d
(
PrötWrôî
 
pw
) {

565 
su≥r
(
pw
);

568 @
Ovîride


569 
public
 
comm™dRun
() {

570 i‡(
	gzkSîvî
 =
nuŒ
) {

571 
pw
.
¥öén
(
ZK_NOT_SERVING
);

573 
	gzkSîvî
.
dumpC⁄f
(
pw
);

578 
¥iv©e
 cœs†
	cSètRe£tComm™d
 
exãnds
 
	gComm™dThªad
 {

579 
public
 
SètRe£tComm™d
(
PrötWrôî
 
pw
) {

580 
su≥r
(
pw
);

583 @
Ovîride


584 
public
 
comm™dRun
() {

585 i‡(
	gzkSîvî
 =
nuŒ
) {

586 
pw
.
¥öén
(
ZK_NOT_SERVING
);

589 
	gzkSîvî
.
£rvîSèts
().
ª£t
();

590 
	gpw
.
¥öén
("Server statsÑeset.");

595 
¥iv©e
 cœs†
	cCnxnSètRe£tComm™d
 
exãnds
 
	gComm™dThªad
 {

596 
public
 
CnxnSètRe£tComm™d
(
PrötWrôî
 
pw
) {

597 
su≥r
(
pw
);

600 @
Ovîride


601 
public
 
comm™dRun
() {

602 i‡(
	gzkSîvî
 =
nuŒ
) {

603 
pw
.
¥öén
(
ZK_NOT_SERVING
);

605 
synchr⁄ized
(
Á˘‹y
.
˙xns
){

606 
SîvîCnxn
 
	gc
 : 
Á˘‹y
.
˙xns
){

607 
c
.
ª£tSèts
();

610 
	gpw
.
¥öén
("Connection statsÑeset.");

615 
¥iv©e
 cœs†
	cDumpComm™d
 
exãnds
 
	gComm™dThªad
 {

616 
public
 
DumpComm™d
(
PrötWrôî
 
pw
) {

617 
su≥r
(
pw
);

620 @
Ovîride


621 
public
 
comm™dRun
() {

622 i‡(
	gzkSîvî
 =
nuŒ
) {

623 
pw
.
¥öén
(
ZK_NOT_SERVING
);

626 
	gpw
.
¥öén
("SessionTracker dump:");

627 
	gzkSîvî
.
	g£ssi⁄Tøckî
.
dumpSessi⁄s
(
pw
);

628 
	gpw
.
¥öén
("ephemeralÇodes dump:");

629 
	gzkSîvî
.
dumpEphemîÆs
(
pw
);

634 
¥iv©e
 cœs†
	cSètComm™d
 
exãnds
 
	gComm™dThªad
 {

635 
	gÀn
;

636 
public
 
SètComm™d
(
PrötWrôî
 
pw
, 
Àn
) {

637 
su≥r
(
pw
);

638 
	gthis
.
	gÀn
 = 
Àn
;

641 @
SuµªssW¨nögs
("unchecked")

642 @
Ovîride


643 
public
 
comm™dRun
() {

644 i‡(
	gzkSîvî
 =
nuŒ
) {

645 
pw
.
¥öén
(
ZK_NOT_SERVING
);

648 
	gpw
.
¥öt
("Zookeeper version: ");

649 
	gpw
.
¥öén
(
Vîsi⁄
.
gëFuŒVîsi⁄
());

650 i‡(
zkSîvî
 
ö°™˚of
 
	gRódO∆yZooKì≥rSîvî
) {

651 
	gpw
.
¥öén
("READ-ONLY mode; serving only " +

654 i‡(
	gÀn
 =
°©Cmd
) {

655 
LOG
.
öfo
("Stat command output");

656 
	gpw
.
¥öén
("Clients:");

659 
	gHashSë
<
	gNIOSîvîCnxn
> 
	g˙xn£t
;

660 
synchr⁄ized
(
Á˘‹y
.
˙xns
){

661 
	g˙xn£t
 = (
HashSë
<
NIOSîvîCnxn
>)
Á˘‹y


662 .
˙xns
.
˛⁄e
();

664 
NIOSîvîCnxn
 
	gc
 : 
˙xn£t
){

665 
c
.
dumpC⁄√˘i⁄Info
(
pw
, 
åue
);

666 
	gpw
.
¥öén
();

668 
	gpw
.
¥öén
();

670 
	gpw
.
¥öt
(
zkSîvî
.
£rvîSèts
().
toSåög
());

671 
	gpw
.
¥öt
("Node count: ");

672 
	gpw
.
¥öén
(
zkSîvî
.
gëZKD©aba£
().
gëNodeCou¡
());

678 
¥iv©e
 cœs†
	cC⁄sComm™d
 
exãnds
 
	gComm™dThªad
 {

679 
public
 
C⁄sComm™d
(
PrötWrôî
 
pw
) {

680 
su≥r
(
pw
);

683 @
SuµªssW¨nögs
("unchecked")

684 @
Ovîride


685 
public
 
comm™dRun
() {

686 i‡(
	gzkSîvî
 =
nuŒ
) {

687 
pw
.
¥öén
(
ZK_NOT_SERVING
);

691 
	gHashSë
<
	gNIOSîvîCnxn
> 
	g˙xns
;

692 
synchr⁄ized
 (
Á˘‹y
.
˙xns
) {

693 
	g˙xns
 = (
HashSë
<
NIOSîvîCnxn
>Ë
Á˘‹y
.
˙xns
.
˛⁄e
();

695 
NIOSîvîCnxn
 
	gc
 : 
˙xns
) {

696 
c
.
dumpC⁄√˘i⁄Info
(
pw
, 
Ál£
);

697 
	gpw
.
¥öén
();

699 
	gpw
.
¥öén
();

704 
¥iv©e
 cœs†
	cW©chComm™d
 
exãnds
 
	gComm™dThªad
 {

705 
	gÀn
 = 0;

706 
public
 
W©chComm™d
(
PrötWrôî
 
pw
, 
Àn
) {

707 
su≥r
(
pw
);

708 
	gthis
.
	gÀn
 = 
Àn
;

711 @
Ovîride


712 
public
 
comm™dRun
() {

713 i‡(
	gzkSîvî
 =
nuŒ
) {

714 
pw
.
¥öén
(
ZK_NOT_SERVING
);

716 
D©aTªe
 
	gdt
 = 
zkSîvî
.
gëZKD©aba£
().
gëD©aTªe
();

717 i‡(
	gÀn
 =
wchsCmd
) {

718 
dt
.
dumpW©chesSumm¨y
(
pw
);

719 } i‡(
	gÀn
 =
wchpCmd
) {

720 
dt
.
dumpW©ches
(
pw
, 
åue
);

722 
	gdt
.
dumpW©ches
(
pw
, 
Ál£
);

724 
	gpw
.
¥öén
();

729 
¥iv©e
 cœs†
	cM⁄ô‹Comm™d
 
exãnds
 
	gComm™dThªad
 {

731 
M⁄ô‹Comm™d
(
PrötWrôî
 
pw
) {

732 
su≥r
(
pw
);

735 @
Ovîride


736 
public
 
comm™dRun
() {

737 if(
	gzkSîvî
 =
nuŒ
) {

738 
pw
.
¥öén
(
ZK_NOT_SERVING
);

741 
ZKD©aba£
 
	gzkdb
 = 
zkSîvî
.
gëZKD©aba£
();

742 
SîvîSèts
 
	g°©s
 = 
zkSîvî
.
£rvîSèts
();

744 
¥öt
("vîsi⁄", 
Vîsi⁄
.
gëFuŒVîsi⁄
());

746 
¥öt
("avg_œãncy", 
°©s
.
gëAvgL©ícy
());

747 
¥öt
("max_œãncy", 
°©s
.
gëMaxL©ícy
());

748 
¥öt
("mö_œãncy", 
°©s
.
gëMöL©ícy
());

750 
¥öt
("∑ckës_ª˚ived", 
°©s
.
gëPackësRe˚ived
());

751 
¥öt
("∑ckës_£¡", 
°©s
.
gëPackësSít
());

752 
¥öt
("num_Æive_c⁄√˘i⁄s", 
°©s
.
gëNumAliveClõ¡C⁄√˘i⁄s
());

754 
¥öt
("out°™dög_ªque°s", 
°©s
.
gëOut°™dögReque°s
());

756 
¥öt
("£rvî_°©e", 
°©s
.
gëSîvîSèã
());

757 
¥öt
("znode_cou¡", 
zkdb
.
gëNodeCou¡
());

759 
¥öt
("w©ch_cou¡", 
zkdb
.
gëD©aTªe
().
gëW©chCou¡
());

760 
¥öt
("ïhemîÆs_cou¡", 
zkdb
.
gëD©aTªe
().
gëEphemîÆsCou¡
());

761 
¥öt
("≠¥oxim©e_d©a_size", 
zkdb
.
gëD©aTªe
().
≠¥oxim©eD©aSize
());

763 
O≥øtögSy°emMXBón
 
	gosMbón
 = 
M™agemítFa˘‹y
.
gëO≥øtögSy°emMXBón
();

764 if(
	gosMbón
 !
nuŒ
 && 
osMbón
 
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

765 
UnixO≥øtögSy°emMXBón
 
unixos
 = (UnixO≥øtögSy°emMXBón)
osMbón
;

767 
¥öt
("›í_fûe_des¸ùt‹_cou¡", 
unixos
.
gëO≥nFûeDes¸ùt‹Cou¡
());

768 
¥öt
("max_fûe_des¸ùt‹_cou¡", 
unixos
.
gëMaxFûeDes¸ùt‹Cou¡
());

771 if(
	g°©s
.
gëSîvîSèã
().
equÆs
("leader")) {

772 
Lódî
 
	gÀadî
 = ((
LódîZooKì≥rSîvî
)
zkSîvî
).
gëLódî
();

774 
¥öt
("fﬁlowîs", 
Àadî
.
gëLó∫îs
().
size
());

775 
¥öt
("syn˚d_fﬁlowîs", 
Àadî
.
gëF‹w¨dögFﬁlowîs
().
size
());

776 
¥öt
("≥ndög_syncs", 
Àadî
.
gëNumPídögSyncs
());

780 
¥iv©e
 
¥öt
(
Såög
 
key
, 
numbî
) {

781 
¥öt
(
key
, "" + 
numbî
);

784 
¥iv©e
 
¥öt
(
Såög
 
key
, Såög 
vÆue
) {

785 
	gpw
.
¥öt
("zk_");

786 
	gpw
.
¥öt
(
key
);

787 
	gpw
.
¥öt
("\t");

788 
	gpw
.
¥öén
(
vÆue
);

793 
¥iv©e
 cœs†
	cI§oComm™d
 
exãnds
 
	gComm™dThªad
 {

795 
public
 
I§oComm™d
(
PrötWrôî
 
pw
) {

796 
su≥r
(
pw
);

799 @
Ovîride


800 
public
 
comm™dRun
() {

801 i‡(
	gzkSîvî
 =
nuŒ
) {

802 
pw
.
¥öt
("null");

803 } i‡(
zkSîvî
 
ö°™˚of
 
	gRódO∆yZooKì≥rSîvî
) {

804 
	gpw
.
¥öt
("ro");

806 
	gpw
.
¥öt
("rw");

812 
¥iv©e
 
boﬁón
 
	$checkFourLëãrW‹d
(
föÆ
 
Sñe˘i⁄Key
 
k
, föÆ 
Àn
)

813 
throws
 
IOEx˚±i⁄


817 
Såög
 
cmd
 = 
cmd2Såög
.
	`gë
(
Àn
);

818 i‡(
cmd
 =
nuŒ
) {

819  
Ál£
;

821 
LOG
.
	`öfo
("Pro˚ssög " + 
cmd
 + " command from "

822 + 
sock
.
	`sockë
().
	`gëRemŸeSockëAddªss
());

823 
	`∑ckëRe˚ived
();

834 i‡(
k
 !
nuŒ
) {

835 
åy
 {

836 
k
.
	`ˇn˚l
();

837 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

838 
LOG
.
	`îr‹
("Eº‹ c™˚Œög comm™d sñe˘i⁄ key ", 
e
);

842 
föÆ
 
PrötWrôî
 
pwrôî
 = 
√w
 
	`PrötWrôî
(

843 
√w
 
	`Buf„ªdWrôî
“ew 
	`SídBuf„rWrôî
()));

844 i‡(
Àn
 =
ruokCmd
) {

845 
RuokComm™d
 
ruok
 = 
√w
 
	`RuokComm™d
(
pwrôî
);

846 
ruok
.
	`°¨t
();

847  
åue
;

848 } i‡(
Àn
 =
gëTø˚MaskCmd
) {

849 
Tø˚MaskComm™d
 
tmask
 = 
√w
 
	`Tø˚MaskComm™d
(
pwrôî
);

850 
tmask
.
	`°¨t
();

851  
åue
;

852 } i‡(
Àn
 =
£tTø˚MaskCmd
) {

853 
rc
 = 
sock
.
	`ªad
(
öcomögBuf„r
);

854 i‡(
rc
 < 0) {

855 
throw
 
√w
 
	`IOEx˚±i⁄
("ReadÉrror");

858 
öcomögBuf„r
.
	`Êù
();

859 
åa˚Mask
 = 
öcomögBuf„r
.
	`gëL⁄g
();

860 
ZooTø˚
.
	`£tTextTø˚Levñ
(
åa˚Mask
);

861 
SëTø˚MaskComm™d
 
£tMask
 = 
√w
 
	`SëTø˚MaskComm™d
(
pwrôî
, 
åa˚Mask
);

862 
£tMask
.
	`°¨t
();

863  
åue
;

864 } i‡(
Àn
 =
íviCmd
) {

865 
EnvComm™d
 
ív
 = 
√w
 
	`EnvComm™d
(
pwrôî
);

866 
ív
.
	`°¨t
();

867  
åue
;

868 } i‡(
Àn
 =
c⁄fCmd
) {

869 
C⁄fComm™d
 
ccmd
 = 
√w
 
	`C⁄fComm™d
(
pwrôî
);

870 
ccmd
.
	`°¨t
();

871  
åue
;

872 } i‡(
Àn
 =
§°Cmd
) {

873 
SètRe£tComm™d
 
°r°
 = 
√w
 
	`SètRe£tComm™d
(
pwrôî
);

874 
°r°
.
	`°¨t
();

875  
åue
;

876 } i‡(
Àn
 =
¸°Cmd
) {

877 
CnxnSètRe£tComm™d
 
¸°
 = 
√w
 
	`CnxnSètRe£tComm™d
(
pwrôî
);

878 
¸°
.
	`°¨t
();

879  
åue
;

880 } i‡(
Àn
 =
dumpCmd
) {

881 
DumpComm™d
 
dump
 = 
√w
 
	`DumpComm™d
(
pwrôî
);

882 
dump
.
	`°¨t
();

883  
åue
;

884 } i‡(
Àn
 =
°©Cmd
 ||Üí =
§vrCmd
) {

885 
SètComm™d
 
°©
 = 
√w
 
	`SètComm™d
(
pwrôî
, 
Àn
);

886 
°©
.
	`°¨t
();

887  
åue
;

888 } i‡(
Àn
 =
c⁄sCmd
) {

889 
C⁄sComm™d
 
c⁄s
 = 
√w
 
	`C⁄sComm™d
(
pwrôî
);

890 
c⁄s
.
	`°¨t
();

891  
åue
;

892 } i‡(
Àn
 =
wchpCmd
 ||Üí =
wchcCmd
 ||Üí =
wchsCmd
) {

893 
W©chComm™d
 
wcmd
 = 
√w
 
	`W©chComm™d
(
pwrôî
, 
Àn
);

894 
wcmd
.
	`°¨t
();

895  
åue
;

896 } i‡(
Àn
 =
m¡rCmd
) {

897 
M⁄ô‹Comm™d
 
m¡r
 = 
√w
 
	`M⁄ô‹Comm™d
(
pwrôî
);

898 
m¡r
.
	`°¨t
();

899  
åue
;

900 } i‡(
Àn
 =
i§oCmd
) {

901 
I§oComm™d
 
i§o
 = 
√w
 
	`I§oComm™d
(
pwrôî
);

902 
i§o
.
	`°¨t
();

903  
åue
;

905  
Ál£
;

906 
	}
}

915 
¥iv©e
 
boﬁón
 
	$ªadLígth
(
Sñe˘i⁄Key
 
k
Ë
throws
 
IOEx˚±i⁄
 {

917 
Àn
 = 
ÀnBuf„r
.
	`gëI¡
();

918 i‡(!
öôülized
 && 
	`checkFourLëãrW‹d
(
sk
, 
Àn
)) {

919  
Ál£
;

921 i‡(
Àn
 < 0 ||Üí > 
Bö¨yI≈utArchive
.
maxBuf„r
) {

922 
throw
 
√w
 
	`IOEx˚±i⁄
("LíÉº‹ " + 
Àn
);

924 i‡(
zkSîvî
 =
nuŒ
) {

925 
throw
 
√w
 
	`IOEx˚±i⁄
("ZooKeeperServerÇotÑunning");

927 
öcomögBuf„r
 = 
ByãBuf„r
.
	`Æloˇã
(
Àn
);

928  
åue
;

929 
	}
}

931 
public
 
	$gëOut°™dögReque°s
() {

932 
	`synchr⁄ized
 (
this
) {

933 
	`synchr⁄ized
 (
this
.
Á˘‹y
) {

934  
out°™dögReque°s
;

937 
	}
}

944 
public
 
	$gëSessi⁄Timeout
() {

945  
£ssi⁄Timeout
;

946 
	}
}

948 @
Ovîride


949 
public
 
Såög
 
	$toSåög
() {

950  "NIOSîvîCnx¿obje˘ wôh sock = " + 
sock
 + "ánd sk = " + 
sk
;

951 
	}
}

958 @
Ovîride


959 
public
 
	$˛o£
() {

960 
	`synchr⁄ized
(
Á˘‹y
.
˙xns
){

962 i‡(!
Á˘‹y
.
˙xns
.
	`ªmove
(
this
)) {

966 
	`synchr⁄ized
 (
Á˘‹y
.
ùM≠
) {

967 
Së
<
NIOSîvîCnxn
> 
s
 =

968 
Á˘‹y
.
ùM≠
.
	`gë
(
sock
.
	`sockë
().
	`gëI√tAddªss
());

969 
s
.
	`ªmove
(
this
);

972 
Á˘‹y
.
	`uƒegi°îC⁄√˘i⁄
(
this
);

974 i‡(
zkSîvî
 !
nuŒ
) {

975 
zkSîvî
.
	`ªmoveCnxn
(
this
);

978 
	`˛o£Sock
();

980 i‡(
sk
 !
nuŒ
) {

981 
åy
 {

983 
sk
.
	`ˇn˚l
();

984 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

985 i‡(
LOG
.
	`isDebugE«bÀd
()) {

986 
LOG
.
	`debug
("ign‹ögÉx˚±i⁄ durög sñe˘i⁄key c™˚l", 
e
);

991 
	}
}

996 
¥iv©e
 
	$˛o£Sock
() {

997 i‡(
sock
 =
nuŒ
) {

1001 
LOG
.
	`öfo
("Closed socket connection for client "

1002 + 
sock
.
	`sockë
().
	`gëRemŸeSockëAddªss
()

1003 + (
£ssi⁄Id
 != 0 ?

1004 " which had sessi⁄id 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
) :

1006 
åy
 {

1013 
sock
.
	`sockë
().
	`shutdownOuçut
();

1014 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1016 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1017 
LOG
.
	`debug
("ign‹ögÉx˚±i⁄ durög ouçuàshutdown", 
e
);

1020 
åy
 {

1021 
sock
.
	`sockë
().
	`shutdownI≈ut
();

1022 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1024 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1025 
LOG
.
	`debug
("ign‹ögÉx˚±i⁄ durög i≈uàshutdown", 
e
);

1028 
åy
 {

1029 
sock
.
	`sockë
().
	`˛o£
();

1030 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1031 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1032 
LOG
.
	`debug
("ign‹ögÉx˚±i⁄ durög sockë clo£", 
e
);

1035 
åy
 {

1036 
sock
.
	`˛o£
();

1041 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1042 i‡(
LOG
.
	`isDebugE«bÀd
()) {

1043 
LOG
.
	`debug
("ign‹ögÉx˚±i⁄ durög sockëch™√»˛o£", 
e
);

1046 
sock
 = 
nuŒ
;

1047 
	}
}

1049 
¥iv©e
 
föÆ
 
byã
 
	gfourByãs
[] = 
√w
 byte[4];

1057 @
Ovîride


1058 
synchr⁄ized
 
public
 
	$£ndRe•⁄£
(
RïlyHódî
 
h
, 
Rec‹d
 
r
, 
Såög
 
èg
) {

1059 
åy
 {

1060 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

1062 
Bö¨yOuçutArchive
 
bos
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

1063 
åy
 {

1064 
baos
.
	`wrôe
(
fourByãs
);

1065 
bos
.
	`wrôeRec‹d
(
h
, "header");

1066 i‡(
r
 !
nuŒ
) {

1067 
bos
.
	`wrôeRec‹d
(
r
, 
èg
);

1069 
baos
.
	`˛o£
();

1070 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1071 
LOG
.
	`îr‹
("Error serializingÑesponse");

1073 
byã
 
b
[] = 
baos
.
	`toByãAºay
();

1074 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
b
);

1075 
bb
.
	`putI¡
(
b
.
Àngth
 - 4).
	`ªwöd
();

1076 
	`£ndBuf„r
(
bb
);

1077 i‡(
h
.
	`gëXid
() > 0) {

1078 
	`synchr⁄ized
(
this
){

1079 
out°™dögReque°s
--;

1082 
	`synchr⁄ized
 (
this
.
Á˘‹y
) {

1083 i‡(
zkSîvî
.
	`gëInPro˚ss
(Ë< 
out°™dögLimô


1084 || 
out°™dögReque°s
 < 1) {

1085 
sk
.
	`£À˘‹
().
	`wakeup
();

1086 
	`íabÀRecv
();

1090 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

1091 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄. De°ru˘i⁄ávîãd.", 
e
);

1093 
	}
}

1100 @
Ovîride


1101 
synchr⁄ized
 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

1102 
RïlyHódî
 
h
 = 
√w
 
	`RïlyHódî
(-1, -1L, 0);

1103 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

1104 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
EVENT_DELIVERY_TRACE_MASK
,

1105 "DñivîÉvíà" + 
evít
 + "Åo 0x"

1106 + 
L⁄g
.
	`toHexSåög
(
this
.
£ssi⁄Id
)

1107 + "Åhrough " + 
this
);

1111 
W©chîEvít
 
e
 = 
evít
.
	`gëWøµî
();

1113 
	`£ndRe•⁄£
(
h
, 
e
, "notification");

1114 
	}
}

1121 @
Ovîride


1122 
public
 
	$gëSessi⁄Id
() {

1123  
£ssi⁄Id
;

1124 
	}
}

1126 @
Ovîride


1127 
public
 
	$£tSessi⁄Id
(
£ssi⁄Id
) {

1128 
this
.
£ssi⁄Id
 = sessionId;

1129 
	}
}

1131 @
Ovîride


1132 
public
 
	$£tSessi⁄Timeout
(
£ssi⁄Timeout
) {

1133 
this
.
£ssi⁄Timeout
 = sessionTimeout;

1134 
	}
}

1136 @
Ovîride


1137 
public
 
	$gëI¡îe°Ops
() {

1138  
sk
.
	`isVÆid
(Ë? sk.
	`öãª°Ops
() : 0;

1139 
	}
}

1141 @
Ovîride


1142 
public
 
I√tSockëAddªss
 
	$gëRemŸeSockëAddªss
() {

1143 i‡(
sock
 =
nuŒ
) {

1144  
nuŒ
;

1146  (
I√tSockëAddªss
Ë
sock
.
	`sockë
().
	`gëRemŸeSockëAddªss
();

1147 
	}
}

1149 @
Ovîride


1150 
¥Ÿe˘ed
 
SîvîSèts
 
	$£rvîSèts
() {

1151 i‡(
zkSîvî
 =
nuŒ
) {

1152  
nuŒ
;

1154  
zkSîvî
.
	`£rvîSèts
();

1155 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSñe˘i⁄Key
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSñe˘‹
;

27 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSîvîSockëCh™√l
;

28 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

35 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

38 
public
 cœs†
	cNIOSîvîCnxnFa˘‹y
 
exãnds
 
SîvîCnxnFa˘‹y
 
im∂emíts
 
	mRu¬abÀ
 {

39 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
NIOSîvîCnxnFa˘‹y
.
˛ass
);

42 
	mThªad
.
£tDeÁu…UnˇughtEx˚±i⁄H™dÀr
(
√w
 
Thªad
.
UnˇughtEx˚±i⁄H™dÀr
() {

43 
public
 
unˇughtEx˚±i⁄
(
Thªad
 
t
, 
ThrowabÀ
 
e
) {

44 
LOG
.
îr‹
("Thªad " + 
t
 + " dõd", 
e
);

52 
	måy
 {

53 
	mSñe˘‹
.
›í
().
˛o£
();

54 } 
ˇtch
(
IOEx˚±i⁄
 
õ
) {

55 
	mLOG
.
îr‹
("Sñe˘‹ faûedÅÿ›í", 
õ
);

59 
SîvîSockëCh™√l
 
	gss
;

61 
föÆ
 
Sñe˘‹
 
	g£À˘‹
 = Sñe˘‹.
›í
();

68 
föÆ
 
ByãBuf„r
 
	gdúe˘Buf„r
 = ByãBuf„r.
ÆloˇãDúe˘
(64 * 1024);

70 
föÆ
 
	gHashM≠
<
	gI√tAddªss
, 
	gSë
<
	gNIOSîvîCnxn
>> 
	gùM≠
 =

71 
√w
 
HashM≠
<
I√tAddªss
, 
	gSë
<
	gNIOSîvîCnxn
>>( );

73 
	gmaxClõ¡Cnxns
 = 60;

81 
public
 
	$NIOSîvîCnxnFa˘‹y
(Ë
throws
 
IOEx˚±i⁄
 {

82 
	}
}

84 
Thªad
 
	gthªad
;

85 @
Ovîride


86 
public
 
	$c⁄figuª
(
I√tSockëAddªss
 
addr
, 
maxcc
Ë
throws
 
IOEx˚±i⁄
 {

87 
	`c⁄figuªSa¶Logö
();

89 
thªad
 = 
√w
 
	`Thªad
(
this
, "NIOSîvîCxn.Fa˘‹y:" + 
addr
);

90 
thªad
.
	`£tD´m⁄
(
åue
);

91 
maxClõ¡Cnxns
 = 
maxcc
;

92 
this
.
ss
 = 
SîvîSockëCh™√l
.
	`›í
();

93 
ss
.
	`sockë
().
	`£tReu£Addªss
(
åue
);

94 
LOG
.
	`öfo
("bödögÅÿp‹à" + 
addr
);

95 
ss
.
	`sockë
().
	`böd
(
addr
);

96 
ss
.
	`c⁄figuªBlockög
(
Ál£
);

97 
ss
.(
£À˘‹
, 
Sñe˘i⁄Key
.
OP_ACCEPT
);

98 
	}
}

101 
public
 
	$gëMaxClõ¡CnxnsPîHo°
() {

102  
maxClõ¡Cnxns
;

103 
	}
}

106 
public
 
	$£tMaxClõ¡CnxnsPîHo°
(
max
) {

107 
maxClõ¡Cnxns
 = 
max
;

108 
	}
}

110 @
Ovîride


111 
public
 
	$°¨t
() {

113 i‡(
thªad
.
	`gëSèã
(Ë=
Thªad
.
Sèã
.
NEW
) {

114 
thªad
.
	`°¨t
();

116 
	}
}

118 @
Ovîride


119 
public
 
	$°¨tup
(
ZooKì≥rSîvî
 
zks
Ë
throws
 
IOEx˚±i⁄
,

120 
I¡îru±edEx˚±i⁄
 {

121 
	`°¨t
();

122 
zks
.
	`°¨td©a
();

123 
zks
.
	`°¨tup
();

124 
	`£tZooKì≥rSîvî
(
zks
);

125 
	}
}

127 @
Ovîride


128 
public
 
I√tSockëAddªss
 
	$gëLoˇlAddªss
(){

129  (
I√tSockëAddªss
)
ss
.
	`sockë
().
	`gëLoˇlSockëAddªss
();

130 
	}
}

132 @
Ovîride


133 
public
 
	$gëLoˇlP‹t
(){

134  
ss
.
	`sockë
().
	`gëLoˇlP‹t
();

135 
	}
}

137 
¥iv©e
 
	$addCnxn
(
NIOSîvîCnxn
 
˙xn
) {

138 
	`synchr⁄ized
 (
˙xns
) {

139 
˙xns
.
	`add
(
˙xn
);

140 
	`synchr⁄ized
 (
ùM≠
){

141 
I√tAddªss
 
addr
 = 
˙xn
.
sock
.
	`sockë
().
	`gëI√tAddªss
();

142 
Së
<
NIOSîvîCnxn
> 
s
 = 
ùM≠
.
	`gë
(
addr
);

143 i‡(
s
 =
nuŒ
) {

149 
s
 = 
√w
 
HashSë
<
NIOSîvîCnxn
>(2);

150 
s
.
	`add
(
˙xn
);

151 
ùM≠
.
	`put
(
addr
,
s
);

153 
s
.
	`add
(
˙xn
);

157 
	}
}

159 
¥Ÿe˘ed
 
NIOSîvîCnxn
 
	$¸óãC⁄√˘i⁄
(
SockëCh™√l
 
sock
,

160 
Sñe˘i⁄Key
 
sk
Ë
throws
 
IOEx˚±i⁄
 {

161  
√w
 
	`NIOSîvîCnxn
(
zkSîvî
, 
sock
, 
sk
, 
this
);

162 
	}
}

164 
¥iv©e
 
	$gëClõ¡CnxnCou¡
(
I√tAddªss
 
˛
) {

168 
	`synchr⁄ized
 (
ùM≠
) {

169 
Së
<
NIOSîvîCnxn
> 
s
 = 
ùM≠
.
	`gë
(
˛
);

170 i‡(
s
 =
nuŒ
)  0;

171  
s
.
	`size
();

173 
	}
}

175 
public
 
	$run
() {

176 !
ss
.
	`sockë
().
	`isClo£d
()) {

177 
åy
 {

178 
£À˘‹
.
	`£À˘
(1000);

179 
Së
<
Sñe˘i⁄Key
> 
£À˘ed
;

180 
	`synchr⁄ized
 (
this
) {

181 
£À˘ed
 = 
£À˘‹
.
	`£À˘edKeys
();

183 
AºayLi°
<
Sñe˘i⁄Key
> 
£À˘edLi°
 = 
√w
 ArrayList<SelectionKey>(

184 
£À˘ed
);

185 
CﬁÀ˘i⁄s
.
	`shufÊe
(
£À˘edLi°
);

186 
Sñe˘i⁄Key
 
k
 : 
£À˘edLi°
) {

187 i‡((
k
.
	`ªadyOps
(Ë& 
Sñe˘i⁄Key
.
OP_ACCEPT
) != 0) {

188 
SockëCh™√l
 
sc
 = ((
SîvîSockëCh™√l
Ë
k


189 .
	`ch™√l
()).
	`ac˚±
();

190 
I√tAddªss
 
ü
 = 
sc
.
	`sockë
().
	`gëI√tAddªss
();

191 
˙xncou¡
 = 
	`gëClõ¡CnxnCou¡
(
ü
);

192 i‡(
maxClõ¡Cnxns
 > 0 && 
˙xncou¡
 >= maxClientCnxns){

193 
LOG
.
	`w¨n
("Toÿm™y c⁄√˘i⁄†‰om " + 
ü


194 + " - max i†" + 
maxClõ¡Cnxns
 );

195 
sc
.
	`˛o£
();

197 
LOG
.
	`öfo
("Accepted socket connection from "

198 + 
sc
.
	`sockë
().
	`gëRemŸeSockëAddªss
());

199 
sc
.
	`c⁄figuªBlockög
(
Ál£
);

200 
Sñe˘i⁄Key
 
sk
 = 
sc
.(
£À˘‹
,

201 
Sñe˘i⁄Key
.
OP_READ
);

202 
NIOSîvîCnxn
 
˙xn
 = 
	`¸óãC⁄√˘i⁄
(
sc
, 
sk
);

203 
sk
.
	`©èch
(
˙xn
);

204 
	`addCnxn
(
˙xn
);

206 } i‡((
k
.
	`ªadyOps
(Ë& (
Sñe˘i⁄Key
.
OP_READ
 | Sñe˘i⁄Key.
OP_WRITE
)) != 0) {

207 
NIOSîvîCnxn
 
c
 = (NIOSîvîCnxnË
k
.
	`©èchmít
();

208 
c
.
	`doIO
(
k
);

210 i‡(
LOG
.
	`isDebugE«bÀd
()) {

211 
LOG
.
	`debug
("Unexpected ops in select "

212 + 
k
.
	`ªadyOps
());

216 
£À˘ed
.
	`˛ór
();

217 } 
	`ˇtch
 (
Ru¡imeEx˚±i⁄
 
e
) {

218 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÑu¡imêex˚±i⁄", 
e
);

219 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

220 
LOG
.
	`w¨n
("Ign‹ögÉx˚±i⁄", 
e
);

223 
	`˛o£AŒ
();

224 
LOG
.
	`öfo
("NIOServerCnxn factoryÉxitedÑun method");

225 
	}
}

231 @
	gOvîride


232 @
SuµªssW¨nögs
("unchecked")

233 
synchr⁄ized
 
public
 
	$˛o£AŒ
() {

234 
£À˘‹
.
	`wakeup
();

235 
HashSë
<
NIOSîvîCnxn
> 
˙xns
;

236 
	`synchr⁄ized
 (
this
.
˙xns
) {

237 
˙xns
 = (
HashSë
<
NIOSîvîCnxn
>)
this
.˙xns.
	`˛⁄e
();

240 
NIOSîvîCnxn
 
˙xn
: 
˙xns
) {

241 
åy
 {

243 
˙xn
.
	`˛o£
();

244 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

245 
LOG
.
	`w¨n
("IgnoringÉxception closing cnxn sessionid 0x"

246 + 
L⁄g
.
	`toHexSåög
(
˙xn
.
£ssi⁄Id
), 
e
);

249 
	}
}

251 
public
 
	$shutdown
() {

252 
åy
 {

253 
ss
.
	`˛o£
();

254 
	`˛o£AŒ
();

255 
thªad
.
	`öãºu±
();

256 
thªad
.
	`joö
();

257 i‡(
logö
 !
nuŒ
) {

258 
logö
.
	`shutdown
();

260 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

261 
LOG
.
	`w¨n
("Ign‹ög i¡îru±edÉx˚±i⁄ durög shutdown", 
e
);

262 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

263 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄ durög shutdown", 
e
);

265 
åy
 {

266 
£À˘‹
.
	`˛o£
();

267 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

268 
LOG
.
	`w¨n
("Sñe˘‹ closög", 
e
);

270 i‡(
zkSîvî
 !
nuŒ
) {

271 
zkSîvî
.
	`shutdown
();

273 
	}
}

275 @
Ovîride


276 
public
 
synchr⁄ized
 
	$˛o£Sessi⁄
(
£ssi⁄Id
) {

277 
£À˘‹
.
	`wakeup
();

278 
	`˛o£Sessi⁄WôhoutWakeup
(
£ssi⁄Id
);

279 
	}
}

281 @
SuµªssW¨nögs
("unchecked")

282 
¥iv©e
 
	$˛o£Sessi⁄WôhoutWakeup
(
£ssi⁄Id
) {

283 
HashSë
<
NIOSîvîCnxn
> 
˙xns
;

284 
	`synchr⁄ized
 (
this
.
˙xns
) {

285 
˙xns
 = (
HashSë
<
NIOSîvîCnxn
>)
this
.˙xns.
	`˛⁄e
();

288 
NIOSîvîCnxn
 
˙xn
 : 
˙xns
) {

289 i‡(
˙xn
.
	`gëSessi⁄Id
(Ë=
£ssi⁄Id
) {

290 
åy
 {

291 
˙xn
.
	`˛o£
();

292 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

293 
LOG
.
	`w¨n
("ex˚±i⁄ durög sessi⁄ clo£", 
e
);

298 
	}
}

300 @
Ovîride


301 
public
 
	$joö
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

302 
thªad
.
	`joö
();

303 
	}
}

305 @
Ovîride


306 
public
 
	gIãøbÀ
<
	gSîvîCnxn
> 
	$gëC⁄√˘i⁄s
() {

307  
˙xns
;

308 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NettyServerCnxn.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„rs
.
	gwøµedBuf„r
;

23 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdWrôî
;

24 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

27 
imp‹t
 
	gjava
.
	gio
.
	gWrôî
;

28 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

29 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

31 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

32 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gAb°ø˘Së
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicL⁄g
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

42 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

43 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gEnvú⁄mít
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gVîsi⁄
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gW©chîEvít
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódîZooKì≥rSîvî
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gRódO∆yZooKì≥rSîvî
;

52 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„r
;

53 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„rs
;

54 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√l
;

55 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√lFutuª
;

56 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gMesßgeEvít
;

58 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

60 
public
 cœs†
	cNëtySîvîCnxn
 
exãnds
 
	mSîvîCnxn
 {

61 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
NëtySîvîCnxn
.
˛ass
);

62 
Ch™√l
 
	mch™√l
;

63 
Ch™√lBuf„r
 
	mqueuedBuf„r
;

64 vﬁ©ûê
boﬁón
 
	mthrŸéed
;

65 
ByãBuf„r
 
	mbb
;

66 
ByãBuf„r
 
	mbbLí
 = ByãBuf„r.
Æloˇã
(4);

67 
	m£ssi⁄Id
;

68 
	m£ssi⁄Timeout
;

69 
AtomicL⁄g
 
	mout°™dögCou¡
 = 
√w
 AtomicLong();

75 
¥iv©e
 vﬁ©ûê
ZooKì≥rSîvî
 
	mzkSîvî
;

77 
NëtySîvîCnxnFa˘‹y
 
	mÁ˘‹y
;

78 
boﬁón
 
	möôülized
;

80 
	$NëtySîvîCnxn
(
Ch™√l
 
ch™√l
, 
ZooKì≥rSîvî
 
zks
, 
NëtySîvîCnxnFa˘‹y
 
Á˘‹y
) {

81 
this
.
ch™√l
 = channel;

82 
this
.
zkSîvî
 = 
zks
;

83 
this
.
Á˘‹y
 = factory;

84 i‡(
this
.
Á˘‹y
.
logö
 !
nuŒ
) {

85 
this
.
zooKì≥rSa¶Sîvî
 = 
√w
 
	`ZooKì≥rSa¶Sîvî
(
Á˘‹y
.
logö
);

89 @
Ovîride


90 
public
 
	$˛o£
() {

91 i‡(
LOG
.
	`isDebugE«bÀd
()) {

92 
LOG
.
	`debug
("close called for sessionid:0x"

93 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

95 
	`synchr⁄ized
(
Á˘‹y
.
˙xns
){

97 i‡(!
Á˘‹y
.
˙xns
.
	`ªmove
(
this
)) {

98 i‡(
LOG
.
	`isDebugE«bÀd
()) {

99 
LOG
.
	`debug
("˙xn†size:" + 
Á˘‹y
.
˙xns
.
	`size
());

103 i‡(
LOG
.
	`isDebugE«bÀd
()) {

104 
LOG
.
	`debug
("close inÖrogress for sessionid:0x"

105 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

108 
	`synchr⁄ized
 (
Á˘‹y
.
ùM≠
) {

109 
Së
<
NëtySîvîCnxn
> 
s
 =

110 
Á˘‹y
.
ùM≠
.
	`gë
(((
I√tSockëAddªss
)
ch™√l


111 .
	`gëRemŸeAddªss
()).
	`gëAddªss
());

112 
s
.
	`ªmove
(
this
);

115 i‡(
ch™√l
.
	`isO≥n
()) {

116 
ch™√l
.
	`˛o£
();

118 
Á˘‹y
.
	`uƒegi°îC⁄√˘i⁄
(
this
);

120 
	}
}

122 @
Ovîride


123 
public
 
	$gëSessi⁄Id
() {

124  
£ssi⁄Id
;

125 
	}
}

127 @
Ovîride


128 
public
 
	$gëSessi⁄Timeout
() {

129  
£ssi⁄Timeout
;

130 
	}
}

132 @
Ovîride


133 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

134 
RïlyHódî
 
h
 = 
√w
 
	`RïlyHódî
(-1, -1L, 0);

135 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

136 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
EVENT_DELIVERY_TRACE_MASK
,

137 "DñivîÉvíà" + 
evít
 + "Åo 0x"

138 + 
L⁄g
.
	`toHexSåög
(
this
.
£ssi⁄Id
)

139 + "Åhrough " + 
this
);

143 
W©chîEvít
 
e
 = 
evít
.
	`gëWøµî
();

145 
åy
 {

146 
	`£ndRe•⁄£
(
h
, 
e
, "notification");

147 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e1
) {

148 i‡(
LOG
.
	`isDebugE«bÀd
()) {

149 
LOG
.
	`debug
("ProbÀm sídögÅÿ" + 
	`gëRemŸeSockëAddªss
(), 
e1
);

151 
	`˛o£
();

153 
	}
}

155 
¥iv©e
 
föÆ
 
	gbyã
[] 
	gfourByãs
 = 
√w
 
byã
[4];

156 ˛as†
	cResumeMesßgeEvít
 
im∂emíts
 
	gMesßgeEvít
 {

157 
Ch™√l
 
	gch™√l
;

158 
ResumeMesßgeEvít
(
Ch™√l
 
ch™√l
) {

159 
	gthis
.
	gch™√l
 = 
ch™√l
;

161 
public
 
Obje˘
 
gëMesßge
(Ë{ 
	gnuŒ
;}

162 
public
 
SockëAddªss
 
gëRemŸeAddªss
(Ë{ 
	gnuŒ
;}

163 
public
 
Ch™√l
 
gëCh™√l
(Ë{ 
	gch™√l
;}

164 
public
 
Ch™√lFutuª
 
gëFutuª
(Ë{ 
	gnuŒ
;}

167 @
Ovîride


168 
public
 
	$£ndRe•⁄£
(
RïlyHódî
 
h
, 
Rec‹d
 
r
, 
Såög
 
èg
)

169 
throws
 
IOEx˚±i⁄
 {

170 i‡(!
ch™√l
.
	`isO≥n
()) {

173 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

175 
Bö¨yOuçutArchive
 
bos
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

176 
åy
 {

177 
baos
.
	`wrôe
(
fourByãs
);

178 
bos
.
	`wrôeRec‹d
(
h
, "header");

179 i‡(
r
 !
nuŒ
) {

180 
bos
.
	`wrôeRec‹d
(
r
, 
èg
);

182 
baos
.
	`˛o£
();

183 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

184 
LOG
.
	`îr‹
("Error serializingÑesponse");

186 
byã
 
b
[] = 
baos
.
	`toByãAºay
();

187 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
b
);

188 
bb
.
	`putI¡
(
b
.
Àngth
 - 4).
	`ªwöd
();

189 
	`£ndBuf„r
(
bb
);

190 i‡(
h
.
	`gëXid
() > 0) {

192 i‡(!
zkSîvî
.
	`shouldThrŸée
(
out°™dögCou¡
.
	`de¸emítAndGë
())) {

193 
	`íabÀRecv
();

196 
	}
}

198 @
Ovîride


199 
public
 
	$£tSessi⁄Id
(
£ssi⁄Id
) {

200 
this
.
£ssi⁄Id
 = sessionId;

201 
	}
}

203 @
Ovîride


204 
public
 
	$íabÀRecv
() {

205 i‡(
thrŸéed
) {

206 
thrŸéed
 = 
Ál£
;

207 i‡(
LOG
.
	`isDebugE«bÀd
()) {

208 
LOG
.
	`debug
("Sídög u¡hrŸéêevíà" + 
this
);

210 
ch™√l
.
	`gëPùñöe
().
	`£ndUp°ªam
(
√w
 
	`ResumeMesßgeEvít
(channel));

212 
	}
}

214 @
Ovîride


215 
public
 
	$£ndBuf„r
(
ByãBuf„r
 
£ndBuf„r
) {

216 i‡(
£ndBuf„r
 =
SîvîCnxnFa˘‹y
.
˛o£C⁄n
) {

217 
ch™√l
.
	`˛o£
();

220 
ch™√l
.
	`wrôe
(
	`wøµedBuf„r
(
£ndBuf„r
));

221 
	`∑ckëSít
();

222 
	}
}

231 
¥iv©e
 
	$˛ónupWrôîSockë
(
PrötWrôî
 
pwrôî
) {

232 
åy
 {

233 i‡(
pwrôî
 !
nuŒ
) {

234 
pwrôî
.
	`Êush
();

235 
pwrôî
.
	`˛o£
();

237 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

238 
LOG
.
	`öfo
("Eº‹ closög PrötWrôî ", 
e
);

239 } 
föÆly
 {

240 
åy
 {

241 
	`˛o£
();

242 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

243 
LOG
.
	`îr‹
("Eº‹ closögá comm™d sockë ", 
e
);

246 
	}
}

254 
¥iv©e
 cœs†
	cSídBuf„rWrôî
 
exãnds
 
	gWrôî
 {

255 
¥iv©e
 
SåögBuf„r
 
	gsb
 = 
√w
 StringBuffer();

261 
¥iv©e
 
checkFlush
(
boﬁón
 
f‹˚
) {

262 i‡((
	gf‹˚
 && 
	gsb
.
Àngth
() > 0) || sb.length() > 2048) {

263 
£ndBuf„r
(
ByãBuf„r
.
wøp
(
sb
.
toSåög
().
gëByãs
()));

265 
	gsb
.
£tLígth
(0);

269 @
Ovîride


270 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

271 i‡(
	gsb
 =
nuŒ
) ;

272 
checkFlush
(
åue
);

273 
	gsb
 = 
nuŒ
;

276 @
Ovîride


277 
public
 
Êush
(Ë
throws
 
	gIOEx˚±i⁄
 {

278 
checkFlush
(
åue
);

281 @
Ovîride


282 
public
 
wrôe
([] 
cbuf
, 
off
, 
Àn
Ë
throws
 
	gIOEx˚±i⁄
 {

283 
	gsb
.
≠≥nd
(
cbuf
, 
off
, 
Àn
);

284 
checkFlush
(
Ál£
);

288 
¥iv©e
 
föÆ
 
Såög
 
	gZK_NOT_SERVING
 =

297 
¥iv©e
 
ab°ø˘
 cœs†
	cComm™dThªad
 {

298 
PrötWrôî
 
	gpw
;

300 
Comm™dThªad
(
PrötWrôî
 
pw
) {

301 
	gthis
.
	gpw
 = 
pw
;

304 
public
 
°¨t
() {

305 
run
();

308 
public
 
run
() {

309 
	gåy
 {

310 
comm™dRun
();

311 } 
ˇtch
 (
IOEx˚±i⁄
 
õ
) {

312 
	gLOG
.
îr‹
("Eº‹ i¿ru¬ög comm™d ", 
õ
);

313 } 
	gföÆly
 {

314 
˛ónupWrôîSockë
(
pw
);

318 
public
 
ab°ø˘
 
comm™dRun
(Ë
throws
 
	gIOEx˚±i⁄
;

321 
¥iv©e
 cœs†
	cRuokComm™d
 
exãnds
 
	gComm™dThªad
 {

322 
public
 
RuokComm™d
(
PrötWrôî
 
pw
) {

323 
su≥r
(
pw
);

326 @
Ovîride


327 
public
 
comm™dRun
() {

328 
	gpw
.
¥öt
("imok");

333 
¥iv©e
 cœs†
	cTø˚MaskComm™d
 
exãnds
 
	gComm™dThªad
 {

334 
Tø˚MaskComm™d
(
PrötWrôî
 
pw
) {

335 
su≥r
(
pw
);

338 @
Ovîride


339 
public
 
comm™dRun
() {

340 
	gåa˚Mask
 = 
ZooTø˚
.
gëTextTø˚Levñ
();

341 
	gpw
.
¥öt
(
åa˚Mask
);

345 
¥iv©e
 cœs†
	cSëTø˚MaskComm™d
 
exãnds
 
	gComm™dThªad
 {

346 
	gåa˚
 = 0;

347 
SëTø˚MaskComm™d
(
PrötWrôî
 
pw
, 
åa˚
) {

348 
su≥r
(
pw
);

349 
	gthis
.
	gåa˚
 = 
åa˚
;

352 @
Ovîride


353 
public
 
comm™dRun
() {

354 
	gpw
.
¥öt
(
åa˚
);

358 
¥iv©e
 cœs†
	cEnvComm™d
 
exãnds
 
	gComm™dThªad
 {

359 
EnvComm™d
(
PrötWrôî
 
pw
) {

360 
su≥r
(
pw
);

363 @
Ovîride


364 
public
 
comm™dRun
() {

365 
	gLi°
<
	gEnvú⁄mít
.
	gE¡ry
> 
	gív
 = 
Envú⁄mít
.
li°
();

367 
	gpw
.
¥öén
("Environment:");

368 
	gEnvú⁄mít
.
E¡ry
 
	ge
 : 
ív
) {

369 
pw
.
¥öt
(
e
.
gëKey
());

370 
	gpw
.
¥öt
("=");

371 
	gpw
.
¥öén
(
e
.
gëVÆue
());

377 
¥iv©e
 cœs†
	cC⁄fComm™d
 
exãnds
 
	gComm™dThªad
 {

378 
C⁄fComm™d
(
PrötWrôî
 
pw
) {

379 
su≥r
(
pw
);

382 @
Ovîride


383 
public
 
comm™dRun
() {

384 i‡(
	gzkSîvî
 =
nuŒ
) {

385 
pw
.
¥öén
(
ZK_NOT_SERVING
);

387 
	gzkSîvî
.
dumpC⁄f
(
pw
);

392 
¥iv©e
 cœs†
	cSètRe£tComm™d
 
exãnds
 
	gComm™dThªad
 {

393 
public
 
SètRe£tComm™d
(
PrötWrôî
 
pw
) {

394 
su≥r
(
pw
);

397 @
Ovîride


398 
public
 
comm™dRun
() {

399 i‡(
	gzkSîvî
 =
nuŒ
) {

400 
pw
.
¥öén
(
ZK_NOT_SERVING
);

403 
	gzkSîvî
.
£rvîSèts
().
ª£t
();

404 
	gpw
.
¥öén
("Server statsÑeset.");

409 
¥iv©e
 cœs†
	cCnxnSètRe£tComm™d
 
exãnds
 
	gComm™dThªad
 {

410 
public
 
CnxnSètRe£tComm™d
(
PrötWrôî
 
pw
) {

411 
su≥r
(
pw
);

414 @
Ovîride


415 
public
 
comm™dRun
() {

416 i‡(
	gzkSîvî
 =
nuŒ
) {

417 
pw
.
¥öén
(
ZK_NOT_SERVING
);

419 
synchr⁄ized
(
Á˘‹y
.
˙xns
){

420 
SîvîCnxn
 
	gc
 : 
Á˘‹y
.
˙xns
){

421 
c
.
ª£tSèts
();

424 
	gpw
.
¥öén
("Connection statsÑeset.");

429 
¥iv©e
 cœs†
	cDumpComm™d
 
exãnds
 
	gComm™dThªad
 {

430 
public
 
DumpComm™d
(
PrötWrôî
 
pw
) {

431 
su≥r
(
pw
);

434 @
Ovîride


435 
public
 
comm™dRun
() {

436 i‡(
	gzkSîvî
 =
nuŒ
) {

437 
pw
.
¥öén
(
ZK_NOT_SERVING
);

440 
	gpw
.
¥öén
("SessionTracker dump:");

441 
	gzkSîvî
.
	g£ssi⁄Tøckî
.
dumpSessi⁄s
(
pw
);

442 
	gpw
.
¥öén
("ephemeralÇodes dump:");

443 
	gzkSîvî
.
dumpEphemîÆs
(
pw
);

448 
¥iv©e
 cœs†
	cSètComm™d
 
exãnds
 
	gComm™dThªad
 {

449 
	gÀn
;

450 
public
 
SètComm™d
(
PrötWrôî
 
pw
, 
Àn
) {

451 
su≥r
(
pw
);

452 
	gthis
.
	gÀn
 = 
Àn
;

455 @
Ovîride


456 
public
 
comm™dRun
() {

457 i‡(
	gzkSîvî
 =
nuŒ
) {

458 
pw
.
¥öén
(
ZK_NOT_SERVING
);

461 
	gpw
.
¥öt
("Zookeeper version: ");

462 
	gpw
.
¥öén
(
Vîsi⁄
.
gëFuŒVîsi⁄
());

463 i‡(
zkSîvî
 
ö°™˚of
 
	gRódO∆yZooKì≥rSîvî
) {

464 
	gpw
.
¥öén
("READ-ONLY mode; serving only " +

467 i‡(
	gÀn
 =
°©Cmd
) {

468 
LOG
.
öfo
("Stat command output");

469 
	gpw
.
¥öén
("Clients:");

472 
	gHashSë
<
	gSîvîCnxn
> 
	g˙xns
;

473 
synchr⁄ized
(
Á˘‹y
.
˙xns
){

474 
	g˙xns
 = 
√w
 
HashSë
<
SîvîCnxn
>(
Á˘‹y
.
˙xns
);

476 
SîvîCnxn
 
	gc
 : 
˙xns
){

477 
c
.
dumpC⁄√˘i⁄Info
(
pw
, 
åue
);

478 
	gpw
.
¥öén
();

480 
	gpw
.
¥öén
();

482 
	gpw
.
¥öt
(
zkSîvî
.
£rvîSèts
().
toSåög
());

483 
	gpw
.
¥öt
("Node count: ");

484 
	gpw
.
¥öén
(
zkSîvî
.
gëZKD©aba£
().
gëNodeCou¡
());

490 
¥iv©e
 cœs†
	cC⁄sComm™d
 
exãnds
 
	gComm™dThªad
 {

491 
public
 
C⁄sComm™d
(
PrötWrôî
 
pw
) {

492 
su≥r
(
pw
);

495 @
Ovîride


496 
public
 
comm™dRun
() {

497 i‡(
	gzkSîvî
 =
nuŒ
) {

498 
pw
.
¥öén
(
ZK_NOT_SERVING
);

502 
	gAb°ø˘Së
<
	gSîvîCnxn
> 
	g˙xns
;

503 
synchr⁄ized
 (
Á˘‹y
.
˙xns
) {

504 
	g˙xns
 = 
√w
 
HashSë
<
SîvîCnxn
>(
Á˘‹y
.
˙xns
);

506 
SîvîCnxn
 
	gc
 : 
˙xns
) {

507 
c
.
dumpC⁄√˘i⁄Info
(
pw
, 
Ál£
);

508 
	gpw
.
¥öén
();

510 
	gpw
.
¥öén
();

515 
¥iv©e
 cœs†
	cW©chComm™d
 
exãnds
 
	gComm™dThªad
 {

516 
	gÀn
 = 0;

517 
public
 
W©chComm™d
(
PrötWrôî
 
pw
, 
Àn
) {

518 
su≥r
(
pw
);

519 
	gthis
.
	gÀn
 = 
Àn
;

522 @
Ovîride


523 
public
 
comm™dRun
() {

524 i‡(
	gzkSîvî
 =
nuŒ
) {

525 
pw
.
¥öén
(
ZK_NOT_SERVING
);

527 
D©aTªe
 
	gdt
 = 
zkSîvî
.
gëZKD©aba£
().
gëD©aTªe
();

528 i‡(
	gÀn
 =
wchsCmd
) {

529 
dt
.
dumpW©chesSumm¨y
(
pw
);

530 } i‡(
	gÀn
 =
wchpCmd
) {

531 
dt
.
dumpW©ches
(
pw
, 
åue
);

533 
	gdt
.
dumpW©ches
(
pw
, 
Ál£
);

535 
	gpw
.
¥öén
();

540 
¥iv©e
 cœs†
	cM⁄ô‹Comm™d
 
exãnds
 
	gComm™dThªad
 {

542 
M⁄ô‹Comm™d
(
PrötWrôî
 
pw
) {

543 
su≥r
(
pw
);

546 @
Ovîride


547 
public
 
comm™dRun
() {

548 if(
	gzkSîvî
 =
nuŒ
) {

549 
pw
.
¥öén
(
ZK_NOT_SERVING
);

552 
ZKD©aba£
 
	gzkdb
 = 
zkSîvî
.
gëZKD©aba£
();

553 
SîvîSèts
 
	g°©s
 = 
zkSîvî
.
£rvîSèts
();

555 
¥öt
("vîsi⁄", 
Vîsi⁄
.
gëFuŒVîsi⁄
());

557 
¥öt
("avg_œãncy", 
°©s
.
gëAvgL©ícy
());

558 
¥öt
("max_œãncy", 
°©s
.
gëMaxL©ícy
());

559 
¥öt
("mö_œãncy", 
°©s
.
gëMöL©ícy
());

561 
¥öt
("∑ckës_ª˚ived", 
°©s
.
gëPackësRe˚ived
());

562 
¥öt
("∑ckës_£¡", 
°©s
.
gëPackësSít
());

563 
¥öt
("num_Æive_c⁄√˘i⁄s", 
°©s
.
gëNumAliveClõ¡C⁄√˘i⁄s
());

565 
¥öt
("out°™dög_ªque°s", 
°©s
.
gëOut°™dögReque°s
());

567 
¥öt
("£rvî_°©e", 
°©s
.
gëSîvîSèã
());

568 
¥öt
("znode_cou¡", 
zkdb
.
gëNodeCou¡
());

570 
¥öt
("w©ch_cou¡", 
zkdb
.
gëD©aTªe
().
gëW©chCou¡
());

571 
¥öt
("ïhemîÆs_cou¡", 
zkdb
.
gëD©aTªe
().
gëEphemîÆsCou¡
());

572 
¥öt
("≠¥oxim©e_d©a_size", 
zkdb
.
gëD©aTªe
().
≠¥oxim©eD©aSize
());

574 
O≥øtögSy°emMXBón
 
	gosMbón
 = 
M™agemítFa˘‹y
.
gëO≥øtögSy°emMXBón
();

575 if(
	gosMbón
 !
nuŒ
 && 
osMbón
 
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

576 
UnixO≥øtögSy°emMXBón
 
unixos
 = (UnixO≥øtögSy°emMXBón)
osMbón
;

578 
¥öt
("›í_fûe_des¸ùt‹_cou¡", 
unixos
.
gëO≥nFûeDes¸ùt‹Cou¡
());

579 
¥öt
("max_fûe_des¸ùt‹_cou¡", 
unixos
.
gëMaxFûeDes¸ùt‹Cou¡
());

582 if(
	g°©s
.
gëSîvîSèã
().
equÆs
("leader")) {

583 
Lódî
 
	gÀadî
 = ((
LódîZooKì≥rSîvî
)
zkSîvî
).
gëLódî
();

585 
¥öt
("fﬁlowîs", 
Àadî
.
gëLó∫îs
().
size
());

586 
¥öt
("syn˚d_fﬁlowîs", 
Àadî
.
gëF‹w¨dögFﬁlowîs
().
size
());

587 
¥öt
("≥ndög_syncs", 
Àadî
.
gëNumPídögSyncs
());

591 
¥iv©e
 
¥öt
(
Såög
 
key
, 
numbî
) {

592 
¥öt
(
key
, "" + 
numbî
);

595 
¥iv©e
 
¥öt
(
Såög
 
key
, Såög 
vÆue
) {

596 
	gpw
.
¥öt
("zk_");

597 
	gpw
.
¥öt
(
key
);

598 
	gpw
.
¥öt
("\t");

599 
	gpw
.
¥öén
(
vÆue
);

604 
¥iv©e
 cœs†
	cI§oComm™d
 
exãnds
 
	gComm™dThªad
 {

606 
public
 
I§oComm™d
(
PrötWrôî
 
pw
) {

607 
su≥r
(
pw
);

610 @
Ovîride


611 
public
 
comm™dRun
() {

612 i‡(
	gzkSîvî
 =
nuŒ
) {

613 
pw
.
¥öt
("null");

614 } i‡(
zkSîvî
 
ö°™˚of
 
	gRódO∆yZooKì≥rSîvî
) {

615 
	gpw
.
¥öt
("ro");

617 
	gpw
.
¥öt
("rw");

623 
¥iv©e
 
boﬁón
 
	$checkFourLëãrW‹d
(
föÆ
 
Ch™√l
 
ch™√l
,

624 
Ch™√lBuf„r
 
mesßge
, 
föÆ
 
Àn
Ë
throws
 
IOEx˚±i⁄


628 
Såög
 
cmd
 = 
cmd2Såög
.
	`gë
(
Àn
);

629 i‡(
cmd
 =
nuŒ
) {

630  
Ál£
;

632 
ch™√l
.
	`£tI¡îe°Ops
(0).
	`awaôUnöãºu±ibly
();

633 
LOG
.
	`öfo
("Pro˚ssög " + 
cmd
 + " command from "

634 + 
ch™√l
.
	`gëRemŸeAddªss
());

635 
	`∑ckëRe˚ived
();

637 
föÆ
 
PrötWrôî
 
pwrôî
 = 
√w
 
	`PrötWrôî
(

638 
√w
 
	`Buf„ªdWrôî
“ew 
	`SídBuf„rWrôî
()));

639 i‡(
Àn
 =
ruokCmd
) {

640 
RuokComm™d
 
ruok
 = 
√w
 
	`RuokComm™d
(
pwrôî
);

641 
ruok
.
	`°¨t
();

642  
åue
;

643 } i‡(
Àn
 =
gëTø˚MaskCmd
) {

644 
Tø˚MaskComm™d
 
tmask
 = 
√w
 
	`Tø˚MaskComm™d
(
pwrôî
);

645 
tmask
.
	`°¨t
();

646  
åue
;

647 } i‡(
Àn
 =
£tTø˚MaskCmd
) {

648 
ByãBuf„r
 
mask
 = ByãBuf„r.
	`Æloˇã
(4);

649 
mesßge
.
	`ªadByãs
(
mask
);

651 
bb
.
	`Êù
();

652 
åa˚Mask
 = 
mask
.
	`gëL⁄g
();

653 
ZooTø˚
.
	`£tTextTø˚Levñ
(
åa˚Mask
);

654 
SëTø˚MaskComm™d
 
£tMask
 = 
√w
 
	`SëTø˚MaskComm™d
(
pwrôî
, 
åa˚Mask
);

655 
£tMask
.
	`°¨t
();

656  
åue
;

657 } i‡(
Àn
 =
íviCmd
) {

658 
EnvComm™d
 
ív
 = 
√w
 
	`EnvComm™d
(
pwrôî
);

659 
ív
.
	`°¨t
();

660  
åue
;

661 } i‡(
Àn
 =
c⁄fCmd
) {

662 
C⁄fComm™d
 
ccmd
 = 
√w
 
	`C⁄fComm™d
(
pwrôî
);

663 
ccmd
.
	`°¨t
();

664  
åue
;

665 } i‡(
Àn
 =
§°Cmd
) {

666 
SètRe£tComm™d
 
°r°
 = 
√w
 
	`SètRe£tComm™d
(
pwrôî
);

667 
°r°
.
	`°¨t
();

668  
åue
;

669 } i‡(
Àn
 =
¸°Cmd
) {

670 
CnxnSètRe£tComm™d
 
¸°
 = 
√w
 
	`CnxnSètRe£tComm™d
(
pwrôî
);

671 
¸°
.
	`°¨t
();

672  
åue
;

673 } i‡(
Àn
 =
dumpCmd
) {

674 
DumpComm™d
 
dump
 = 
√w
 
	`DumpComm™d
(
pwrôî
);

675 
dump
.
	`°¨t
();

676  
åue
;

677 } i‡(
Àn
 =
°©Cmd
 ||Üí =
§vrCmd
) {

678 
SètComm™d
 
°©
 = 
√w
 
	`SètComm™d
(
pwrôî
, 
Àn
);

679 
°©
.
	`°¨t
();

680  
åue
;

681 } i‡(
Àn
 =
c⁄sCmd
) {

682 
C⁄sComm™d
 
c⁄s
 = 
√w
 
	`C⁄sComm™d
(
pwrôî
);

683 
c⁄s
.
	`°¨t
();

684  
åue
;

685 } i‡(
Àn
 =
wchpCmd
 ||Üí =
wchcCmd
 ||Üí =
wchsCmd
) {

686 
W©chComm™d
 
wcmd
 = 
√w
 
	`W©chComm™d
(
pwrôî
, 
Àn
);

687 
wcmd
.
	`°¨t
();

688  
åue
;

689 } i‡(
Àn
 =
m¡rCmd
) {

690 
M⁄ô‹Comm™d
 
m¡r
 = 
√w
 
	`M⁄ô‹Comm™d
(
pwrôî
);

691 
m¡r
.
	`°¨t
();

692  
åue
;

693 } i‡(
Àn
 =
i§oCmd
) {

694 
I§oComm™d
 
i§o
 = 
√w
 
	`I§oComm™d
(
pwrôî
);

695 
i§o
.
	`°¨t
();

696  
åue
;

698  
Ál£
;

699 
	}
}

701 
public
 
	$ª˚iveMesßge
(
Ch™√lBuf„r
 
mesßge
) {

702 
åy
 {

703 
mesßge
.
	`ªadabÀ
(Ë&& !
thrŸéed
) {

704 i‡(
bb
 !
nuŒ
) {

705 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

706 
LOG
.
	`åa˚
("mesßgêªadabÀ " + 
mesßge
.
	`ªadabÀByãs
()

707 + " bbÜí " + 
bb
.
	`ªmaöög
() + " " + bb);

708 
ByãBuf„r
 
d©
 = 
bb
.
	`du∂iˇã
();

709 
d©
.
	`Êù
();

710 
LOG
.
	`åa˚
(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

712 + 
Ch™√lBuf„rs
.
	`hexDump
(

713 
Ch™√lBuf„rs
.
	`c›õdBuf„r
(
d©
)));

716 i‡(
bb
.
	`ªmaöög
(Ë> 
mesßge
.
	`ªadabÀByãs
()) {

717 
√wLimô
 = 
bb
.
	`posôi⁄
(Ë+ 
mesßge
.
	`ªadabÀByãs
();

718 
bb
.
	`limô
(
√wLimô
);

720 
mesßge
.
	`ªadByãs
(
bb
);

721 
bb
.
	`limô
(bb.
	`ˇ∑côy
());

723 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

724 
LOG
.
	`åa˚
("afterÑeadBytes messageÑeadable "

725 + 
mesßge
.
	`ªadabÀByãs
()

726 + " bbÜí " + 
bb
.
	`ªmaöög
() + " " + bb);

727 
ByãBuf„r
 
d©
 = 
bb
.
	`du∂iˇã
();

728 
d©
.
	`Êù
();

729 
LOG
.
	`åa˚
("afterÑeadbytes "

730 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

732 + 
Ch™√lBuf„rs
.
	`hexDump
(

733 
Ch™√lBuf„rs
.
	`c›õdBuf„r
(
d©
)));

735 i‡(
bb
.
	`ªmaöög
() == 0) {

736 
	`∑ckëRe˚ived
();

737 
bb
.
	`Êù
();

739 
ZooKì≥rSîvî
 
zks
 = 
this
.
zkSîvî
;

740 i‡(
zks
 =
nuŒ
) {

741 
throw
 
√w
 
	`IOEx˚±i⁄
("ZK down");

743 i‡(
öôülized
) {

744 
zks
.
	`¥o˚ssPackë
(
this
, 
bb
);

746 i‡(
zks
.
	`shouldThrŸée
(
out°™dögCou¡
.
	`ö¸emítAndGë
())) {

747 
	`dißbÀRecv
();

750 
LOG
.
	`debug
("got connÑeqÑequest from "

751 + 
	`gëRemŸeSockëAddªss
());

752 
zks
.
	`¥o˚ssC⁄√˘Reque°
(
this
, 
bb
);

753 
öôülized
 = 
åue
;

755 
bb
 = 
nuŒ
;

758 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

759 
LOG
.
	`åa˚
("messageÑeadable "

760 + 
mesßge
.
	`ªadabÀByãs
()

761 + " bbÀƒem " + 
bbLí
.
	`ªmaöög
());

762 
ByãBuf„r
 
d©
 = 
bbLí
.
	`du∂iˇã
();

763 
d©
.
	`Êù
();

764 
LOG
.
	`åa˚
(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

766 + 
Ch™√lBuf„rs
.
	`hexDump
(

767 
Ch™√lBuf„rs
.
	`c›õdBuf„r
(
d©
)));

770 i‡(
mesßge
.
	`ªadabÀByãs
(Ë< 
bbLí
.
	`ªmaöög
()) {

771 
bbLí
.
	`limô
(bbLí.
	`posôi⁄
(Ë+ 
mesßge
.
	`ªadabÀByãs
());

773 
mesßge
.
	`ªadByãs
(
bbLí
);

774 
bbLí
.
	`limô
(bbLí.
	`ˇ∑côy
());

775 i‡(
bbLí
.
	`ªmaöög
() == 0) {

776 
bbLí
.
	`Êù
();

778 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

779 
LOG
.
	`åa˚
(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

781 + 
Ch™√lBuf„rs
.
	`hexDump
(

782 
Ch™√lBuf„rs
.
	`c›õdBuf„r
(
bbLí
)));

784 
Àn
 = 
bbLí
.
	`gëI¡
();

785 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

786 
LOG
.
	`åa˚
(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

787 + " bbLíÜí i†" + 
Àn
);

790 
bbLí
.
	`˛ór
();

791 i‡(!
öôülized
) {

792 i‡(
	`checkFourLëãrW‹d
(
ch™√l
, 
mesßge
, 
Àn
)) {

796 i‡(
Àn
 < 0 ||Üí > 
Bö¨yI≈utArchive
.
maxBuf„r
) {

797 
throw
 
√w
 
	`IOEx˚±i⁄
("LíÉº‹ " + 
Àn
);

799 
bb
 = 
ByãBuf„r
.
	`Æloˇã
(
Àn
);

803 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

804 
LOG
.
	`w¨n
("Closög c⁄√˘i⁄Åÿ" + 
	`gëRemŸeSockëAddªss
(), 
e
);

805 
	`˛o£
();

807 
	}
}

809 @
Ovîride


810 
public
 
	$dißbÀRecv
() {

811 
thrŸéed
 = 
åue
;

812 i‡(
LOG
.
	`isDebugE«bÀd
()) {

813 
LOG
.
	`debug
("ThrŸéög - dißblögÑecv " + 
this
);

815 
ch™√l
.
	`£tRódabÀ
(
Ál£
).
	`awaôUnöãºu±ibly
();

816 
	}
}

818 @
Ovîride


819 
public
 
	$gëOut°™dögReque°s
() {

820  
out°™dögCou¡
.
	`l⁄gVÆue
();

821 
	}
}

823 @
Ovîride


824 
public
 
	$£tSessi⁄Timeout
(
£ssi⁄Timeout
) {

825 
this
.
£ssi⁄Timeout
 = sessionTimeout;

826 
	}
}

828 @
Ovîride


829 
public
 
	$gëI¡îe°Ops
() {

830  
ch™√l
.
	`gëI¡îe°Ops
();

831 
	}
}

833 @
Ovîride


834 
public
 
I√tSockëAddªss
 
	$gëRemŸeSockëAddªss
() {

835  (
I√tSockëAddªss
)
ch™√l
.
	`gëRemŸeAddªss
();

836 
	}
}

840 
public
 
	$£ndClo£Sessi⁄
() {

841 
	`£ndBuf„r
(
SîvîCnxnFa˘‹y
.
˛o£C⁄n
);

842 
	}
}

844 @
Ovîride


845 
¥Ÿe˘ed
 
SîvîSèts
 
	$£rvîSèts
() {

846 i‡(
zkSîvî
 =
nuŒ
) {

847  
nuŒ
;

849  
zkSîvî
.
	`£rvîSèts
();

850 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NettyServerCnxnFactory.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„rs
.
	gdy«micBuf„r
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecut‹s
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gboŸ°øp
.
	gSîvîBoŸ°øp
;

34 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„r
;

35 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gbuf„r
.
	gCh™√lBuf„rs
;

36 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√l
;

37 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√lH™dÀr
.
	gSh¨abÀ
;

38 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√lH™dÀrC⁄ãxt
;

39 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gCh™√lSèãEvít
;

40 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gEx˚±i⁄Evít
;

41 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gMesßgeEvít
;

42 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gSim∂eCh™√lH™dÀr
;

43 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gWrôeCom∂ëi⁄Evít
;

44 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	ggroup
.
	gCh™√lGroup
;

45 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	ggroup
.
	gDeÁu…Ch™√lGroup
;

46 
imp‹t
 
	g‹g
.
	gjboss
.
	g√ây
.
	gch™√l
.
	gsockë
.
	gnio
.
	gNioSîvîSockëCh™√lFa˘‹y
;

48 
public
 cœs†
	cNëtySîvîCnxnFa˘‹y
 
exãnds
 
	mSîvîCnxnFa˘‹y
 {

49 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
NëtySîvîCnxnFa˘‹y
.
˛ass
);

51 
SîvîBoŸ°øp
 
	mboŸ°øp
;

52 
Ch™√l
 
	m∑ª¡Ch™√l
;

53 
Ch™√lGroup
 
	mÆlCh™√ls
 = 
√w
 
DeÁu…Ch™√lGroup
("zkServerCnxns");

54 
	mHashM≠
<
	mI√tAddªss
, 
	mSë
<
	mNëtySîvîCnxn
>> 
	mùM≠
 =

55 
√w
 
HashM≠
<
I√tAddªss
, 
	mSë
<
	mNëtySîvîCnxn
>>( );

56 
I√tSockëAddªss
 
	mloˇlAddªss
;

57 
	mmaxClõ¡Cnxns
 = 60;

64 @
Sh¨abÀ


65 ˛as†
	cCnxnCh™√lH™dÀr
 
exãnds
 
	mSim∂eCh™√lH™dÀr
 {

67 @
Ovîride


68 
public
 
ch™√lClo£d
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
, 
Ch™√lSèãEvít
 
e
)

69 
throws
 
	mEx˚±i⁄


71 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

72 
	mLOG
.
åa˚
("Ch™√»˛o£d " + 
e
);

74 
	mÆlCh™√ls
.
ªmove
(
˘x
.
gëCh™√l
());

77 @
Ovîride


78 
public
 
ch™√lC⁄√˘ed
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
,

79 
Ch™√lSèãEvít
 
e
Ë
throws
 
	mEx˚±i⁄


81 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

82 
	mLOG
.
åa˚
("Ch™√»c⁄√˘ed " + 
e
);

84 
	mÆlCh™√ls
.
add
(
˘x
.
gëCh™√l
());

85 
NëtySîvîCnxn
 
	m˙xn
 = 
√w
 NëtySîvîCnxn(
˘x
.
gëCh™√l
(),

86 
zkSîvî
, 
NëtySîvîCnxnFa˘‹y
.
this
);

87 
	m˘x
.
£tAâachmít
(
˙xn
);

88 
addCnxn
(
˙xn
);

91 @
Ovîride


92 
public
 
ch™√lDisc⁄√˘ed
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
,

93 
Ch™√lSèãEvít
 
e
Ë
throws
 
	mEx˚±i⁄


95 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

96 
	mLOG
.
åa˚
("Ch™√»disc⁄√˘ed " + 
e
);

98 
NëtySîvîCnxn
 
	m˙xn
 = (NëtySîvîCnxnË
˘x
.
gëAâachmít
();

99 i‡(
	m˙xn
 !
nuŒ
) {

100 i‡(
LOG
.
isTø˚E«bÀd
()) {

101 
LOG
.
åa˚
("Ch™√»disc⁄√˘ cau£d clo£ " + 
e
);

103 
	m˙xn
.
˛o£
();

107 @
Ovîride


108 
public
 
ex˚±i⁄Caught
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
, 
Ex˚±i⁄Evít
 
e
)

109 
throws
 
	mEx˚±i⁄


111 
	mLOG
.
w¨n
("Ex˚±i⁄ caughà" + 
e
,É.
gëCau£
());

112 
NëtySîvîCnxn
 
	m˙xn
 = (NëtySîvîCnxnË
˘x
.
gëAâachmít
();

113 i‡(
	m˙xn
 !
nuŒ
) {

114 i‡(
LOG
.
isDebugE«bÀd
()) {

115 
LOG
.
debug
("Closög " + 
˙xn
);

116 
	m˙xn
.
˛o£
();

121 @
Ovîride


122 
public
 
mesßgeRe˚ived
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
, 
MesßgeEvít
 
e
)

123 
throws
 
	mEx˚±i⁄


125 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

126 
	mLOG
.
åa˚
("mesßgêª˚ived cÆÀd " + 
e
.
gëMesßge
());

128 
	måy
 {

129 i‡(
	mLOG
.
isDebugE«bÀd
()) {

130 
	mLOG
.
debug
("New mesßgê" + 
e
.
toSåög
()

131 + " from " + 
˘x
.
gëCh™√l
());

133 
NëtySîvîCnxn
 
	m˙xn
 = (NëtySîvîCnxn)
˘x
.
gëAâachmít
();

134 
synchr⁄ized
(
˙xn
) {

135 
¥o˚ssMesßge
(
e
, 
˙xn
);

137 } 
ˇtch
(
Ex˚±i⁄
 
ex
) {

138 
	mLOG
.
îr‹
("U√x≥˘edÉx˚±i⁄ i¿ª˚ive", 
ex
);

139 
throw
 
	mex
;

143 
¥iv©e
 
¥o˚ssMesßge
(
MesßgeEvít
 
e
, 
NëtySîvîCnxn
 
˙xn
) {

144 i‡(
	mLOG
.
isDebugE«bÀd
()) {

145 
	mLOG
.
debug
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
) + " queuedBuffer: "

146 + 
˙xn
.
queuedBuf„r
);

149 i‡(
e
 
ö°™˚of
 
	mNëtySîvîCnxn
.
	mResumeMesßgeEvít
) {

150 
	mLOG
.
debug
("Received ResumeMessageEvent");

151 i‡(
	m˙xn
.
	mqueuedBuf„r
 !
nuŒ
) {

152 i‡(
LOG
.
isTø˚E«bÀd
()) {

153 
LOG
.
åa˚
("processing queue "

154 + 
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

156 + 
Ch™√lBuf„rs
.
hexDump
(
˙xn
.
queuedBuf„r
));

158 
	m˙xn
.
ª˚iveMesßge
(
˙xn
.
queuedBuf„r
);

159 i‡(!
	m˙xn
.
	mqueuedBuf„r
.
ªadabÀ
()) {

160 
	mLOG
.
debug
("Processed queue -Ço bytesÑemaining");

161 
	m˙xn
.
	mqueuedBuf„r
 = 
nuŒ
;

163 
	mLOG
.
debug
("Processed queue - bytesÑemaining");

166 
	mLOG
.
debug
("queueÉmpty");

168 
	m˙xn
.
	mch™√l
.
£tRódabÀ
(
åue
);

170 
Ch™√lBuf„r
 
	mbuf
 = (Ch™√lBuf„r)
e
.
gëMesßge
();

171 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

172 
	mLOG
.
åa˚
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

174 + 
Ch™√lBuf„rs
.
hexDump
(
buf
));

177 i‡(
	m˙xn
.
	mthrŸéed
) {

178 
	mLOG
.
debug
("Received message whileÅhrottled");

180 i‡(
	m˙xn
.
	mqueuedBuf„r
 =
nuŒ
) {

181 
LOG
.
debug
("allocating queue");

182 
	m˙xn
.
	mqueuedBuf„r
 = 
dy«micBuf„r
(
buf
.
ªadabÀByãs
());

184 
	m˙xn
.
	mqueuedBuf„r
.
wrôeByãs
(
buf
);

185 
	mLOG
.
debug
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

187 + 
Ch™√lBuf„rs
.
hexDump
(
˙xn
.
queuedBuf„r
));

189 
	mLOG
.
debug
("notÅhrottled");

190 i‡(
	m˙xn
.
	mqueuedBuf„r
 !
nuŒ
) {

191 i‡(
LOG
.
isTø˚E«bÀd
()) {

192 
LOG
.
åa˚
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

194 + 
Ch™√lBuf„rs
.
hexDump
(
˙xn
.
queuedBuf„r
));

196 
	m˙xn
.
	mqueuedBuf„r
.
wrôeByãs
(
buf
);

197 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

198 
	mLOG
.
åa˚
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

200 + 
Ch™√lBuf„rs
.
hexDump
(
˙xn
.
queuedBuf„r
));

203 
	m˙xn
.
ª˚iveMesßge
(
˙xn
.
queuedBuf„r
);

204 i‡(!
	m˙xn
.
	mqueuedBuf„r
.
ªadabÀ
()) {

205 
	mLOG
.
debug
("Processed queue -Ço bytesÑemaining");

206 
	m˙xn
.
	mqueuedBuf„r
 = 
nuŒ
;

208 
	mLOG
.
debug
("Processed queue - bytesÑemaining");

211 
	m˙xn
.
ª˚iveMesßge
(
buf
);

212 i‡(
	mbuf
.
ªadabÀ
()) {

213 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

214 
	mLOG
.
åa˚
("Bef‹êc›y " + 
buf
);

216 
	m˙xn
.
	mqueuedBuf„r
 = 
dy«micBuf„r
(
buf
.
ªadabÀByãs
());

217 
	m˙xn
.
	mqueuedBuf„r
.
wrôeByãs
(
buf
);

218 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

219 
	mLOG
.
åa˚
("C›y i†" + 
˙xn
.
queuedBuf„r
);

220 
	mLOG
.
åa˚
(
L⁄g
.
toHexSåög
(
˙xn
.
£ssi⁄Id
)

222 + 
Ch™√lBuf„rs
.
hexDump
(
˙xn
.
queuedBuf„r
));

230 @
Ovîride


231 
public
 
wrôeCom∂ëe
(
Ch™√lH™dÀrC⁄ãxt
 
˘x
,

232 
WrôeCom∂ëi⁄Evít
 
e
Ë
throws
 
	mEx˚±i⁄


234 i‡(
	mLOG
.
isTø˚E«bÀd
()) {

235 
	mLOG
.
åa˚
("wrôêcom∂ëê" + 
e
);

241 
CnxnCh™√lH™dÀr
 
	gch™√lH™dÀr
 = 
√w
 CnxnChannelHandler();

243 
	$NëtySîvîCnxnFa˘‹y
() {

244 
boŸ°øp
 = 
√w
 
	`SîvîBoŸ°øp
(

245 
√w
 
	`NioSîvîSockëCh™√lFa˘‹y
(

246 
Execut‹s
.
	`√wCachedThªadPoﬁ
(),

247 
Execut‹s
.
	`√wCachedThªadPoﬁ
()));

249 
boŸ°øp
.
	`£tO±i⁄
("ªu£Addªss", 
åue
);

251 
boŸ°øp
.
	`£tO±i⁄
("chûd.t˝NoDñay", 
åue
);

252 
boŸ°øp
.
	`£tO±i⁄
("child.soLinger", 2);

254 
boŸ°øp
.
	`gëPùñöe
().
	`addLa°
("£rvî˙xnÁ˘‹y", 
ch™√lH™dÀr
);

255 
	}
}

257 @
Ovîride


258 
public
 
	$˛o£AŒ
() {

259 i‡(
LOG
.
	`isDebugE«bÀd
()) {

260 
LOG
.
	`debug
("closeAll()");

263 
	`synchr⁄ized
 (
˙xns
) {

265 
NëtySîvîCnxn
 
˙xn
 : 
˙xns
.
	`toAºay
(
√w
 NëtySîvîCnxn[˙xns.
	`size
()])) {

266 
åy
 {

267 
˙xn
.
	`˛o£
();

268 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

269 
LOG
.
	`w¨n
("IgnoringÉxception closing cnxn sessionid 0x"

270 + 
L⁄g
.
	`toHexSåög
(
˙xn
.
	`gëSessi⁄Id
()), 
e
);

274 i‡(
LOG
.
	`isDebugE«bÀd
()) {

275 
LOG
.
	`debug
("ÆlCh™√l†size:" + 
ÆlCh™√ls
.
	`size
()

276 + " cnxn†size:" + 
˙xns
.
	`size
());

278 
	}
}

280 @
Ovîride


281 
public
 
	$˛o£Sessi⁄
(
£ssi⁄Id
) {

282 i‡(
LOG
.
	`isDebugE«bÀd
()) {

283 
LOG
.
	`debug
("˛o£Sessi⁄ sessi⁄id:0x" + 
£ssi⁄Id
);

286 
	`synchr⁄ized
 (
˙xns
) {

287 
NëtySîvîCnxn
 
˙xn
 : 
˙xns
.
	`toAºay
(
√w
 NëtySîvîCnxn[˙xns.
	`size
()])) {

288 i‡(
˙xn
.
	`gëSessi⁄Id
(Ë=
£ssi⁄Id
) {

289 
åy
 {

290 
˙xn
.
	`˛o£
();

291 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

292 
LOG
.
	`w¨n
("ex˚±i⁄ durög sessi⁄ clo£", 
e
);

298 
	}
}

300 @
Ovîride


301 
public
 
	$c⁄figuª
(
I√tSockëAddªss
 
addr
, 
maxClõ¡Cnxns
)

302 
throws
 
IOEx˚±i⁄


304 
	`c⁄figuªSa¶Logö
();

305 
loˇlAddªss
 = 
addr
;

306 
this
.
maxClõ¡Cnxns
 = maxClientCnxns;

307 
	}
}

310 
public
 
	$gëMaxClõ¡CnxnsPîHo°
() {

311  
maxClõ¡Cnxns
;

312 
	}
}

315 
public
 
	$£tMaxClõ¡CnxnsPîHo°
(
max
) {

316 
maxClõ¡Cnxns
 = 
max
;

317 
	}
}

319 @
Ovîride


320 
public
 
	$gëLoˇlP‹t
() {

321  
loˇlAddªss
.
	`gëP‹t
();

322 
	}
}

324 
boﬁón
 
	gkûÀd
;

325 @
Ovîride


326 
public
 
	$joö
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

327 
	`synchr⁄ized
(
this
) {

328 !
kûÀd
) {

329 
	`waô
();

332 
	}
}

334 @
Ovîride


335 
public
 
	$shutdown
() {

336 
LOG
.
	`öfo
("shutdow¿ˇŒed " + 
loˇlAddªss
);

337 i‡(
logö
 !
nuŒ
) {

338 
logö
.
	`shutdown
();

341 i‡(
∑ª¡Ch™√l
 !
nuŒ
) {

342 
∑ª¡Ch™√l
.
	`˛o£
().
	`awaôUnöãºu±ibly
();

343 
	`˛o£AŒ
();

344 
ÆlCh™√ls
.
	`˛o£
().
	`awaôUnöãºu±ibly
();

345 
boŸ°øp
.
	`ªÀa£Exã∫ÆResour˚s
();

348 i‡(
zkSîvî
 !
nuŒ
) {

349 
zkSîvî
.
	`shutdown
();

351 
	`synchr⁄ized
(
this
) {

352 
kûÀd
 = 
åue
;

353 
	`nŸifyAŒ
();

355 
	}
}

357 @
Ovîride


358 
public
 
	$°¨t
() {

359 
LOG
.
	`öfo
("bödögÅÿp‹à" + 
loˇlAddªss
);

360 
∑ª¡Ch™√l
 = 
boŸ°øp
.
	`böd
(
loˇlAddªss
);

361 
	}
}

363 @
Ovîride


364 
public
 
	$°¨tup
(
ZooKì≥rSîvî
 
zks
Ë
throws
 
IOEx˚±i⁄
,

365 
I¡îru±edEx˚±i⁄
 {

366 
	`°¨t
();

367 
zks
.
	`°¨td©a
();

368 
zks
.
	`°¨tup
();

369 
	`£tZooKì≥rSîvî
(
zks
);

370 
	}
}

372 @
Ovîride


373 
public
 
	gIãøbÀ
<
	gSîvîCnxn
> 
	$gëC⁄√˘i⁄s
() {

374  
˙xns
;

375 
	}
}

377 @
Ovîride


378 
public
 
I√tSockëAddªss
 
	$gëLoˇlAddªss
() {

379  
loˇlAddªss
;

380 
	}
}

382 
¥iv©e
 
	$addCnxn
(
NëtySîvîCnxn
 
˙xn
) {

383 
	`synchr⁄ized
 (
˙xns
) {

384 
˙xns
.
	`add
(
˙xn
);

385 
	`synchr⁄ized
 (
ùM≠
){

386 
I√tAddªss
 
addr
 =

387 ((
I√tSockëAddªss
)
˙xn
.
ch™√l
.
	`gëRemŸeAddªss
())

388 .
	`gëAddªss
();

389 
Së
<
NëtySîvîCnxn
> 
s
 = 
ùM≠
.
	`gë
(
addr
);

390 i‡(
s
 =
nuŒ
) {

391 
s
 = 
√w
 
HashSë
<
NëtySîvîCnxn
>();

393 
s
.
	`add
(
˙xn
);

394 
ùM≠
.
	`put
(
addr
,
s
);

397 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ObserverBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gOb£rvî
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gOb£rvîMXBón
;

28 
public
 cœs†
	cOb£rvîBón
 
exãnds
 
ZooKì≥rSîvîBón
 
im∂emíts
 
	mOb£rvîMXBón
{

30 
¥iv©e
 
Ob£rvî
 
	mob£rvî
;

32 
public
 
	$Ob£rvîBón
(
Ob£rvî
 
ob£rvî
, 
ZooKì≥rSîvî
 
zks
) {

33 
	`su≥r
(
zks
);

34 
this
.
ob£rvî
 = observer;

37 
public
 
	$gëPídögRevÆid©i⁄Cou¡
() {

38  
this
.
ob£rvî
.
	`gëPídögRevÆid©i⁄sCou¡
();

39 
	}
}

41 
public
 
Såög
 
	$gëQu‹umAddªss
() {

42  
ob£rvî
.
	`gëSockë
().
	`toSåög
();

43 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°Iãøt‹
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLoˇÀ
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gMu…iTønß˘i⁄Rec‹d
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOp
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gP©hUtûs
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eReque°
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gDñëeReque°
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëACLReque°
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aReque°
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCheckVîsi⁄Reque°
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
.
	gCh™geRec‹d
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gAuthítiˇti⁄Providî
;

58 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gProvidîRegi°ry
;

59 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gXidRﬁlovîEx˚±i⁄
;

60 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

61 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

62 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

63 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

64 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

65 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

66 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCheckVîsi⁄Txn
;

67 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxn
;

68 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gMu…iTxn
;

69 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

78 
public
 cœs†
	cPªpReque°Pro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

79 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
PªpReque°Pro˚ss‹
.
˛ass
);

81 
boﬁón
 
	mskùACL
;

83 
	mskùACL
 = 
Sy°em
.
gëPr›îty
("zookì≥r.skùACL", "no").
equÆs
("yes");

84 i‡(
	mskùACL
) {

85 
	mLOG
.
öfo
("zookeeper.skipACL==\"yes\", ACL checks will be skipped");

93 
¥iv©e
 
boﬁón
 
	gÁûCª©e
 = 
Ál£
;

95 
	gLökedBlockögQueue
<
	gReque°
> 
	gsubmôãdReque°s
 = 
√w
 
LökedBlockögQueue
<
Reque°
>();

97 
Reque°Pro˚ss‹
 
	g√xtPro˚ss‹
;

99 
ZooKì≥rSîvî
 
	gzks
;

101 
public
 
	$PªpReque°Pro˚ss‹
(
ZooKì≥rSîvî
 
zks
,

102 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

103 
	`su≥r
("Pro˚ssThªad(sid:" + 
zks
.
	`gëSîvîId
()

104 + " cp‹t:" + 
zks
.
	`gëClõ¡P‹t
() + "):");

105 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

106 
this
.
zks
 = zks;

107 
	}
}

113 
public
 
	$£tFaûCª©e
(
boﬁón
 
b
) {

114 
ÁûCª©e
 = 
b
;

115 
	}
}

116 @
Ovîride


117 
public
 
	$run
() {

118 
åy
 {

119 
åue
) {

120 
Reque°
 
ªque°
 = 
submôãdReque°s
.
	`èke
();

121 
åa˚Mask
 = 
ZooTø˚
.
CLIENT_REQUEST_TRACE_MASK
;

122 i‡(
ªque°
.
ty≥
 =
OpCode
.
pög
) {

123 
åa˚Mask
 = 
ZooTø˚
.
CLIENT_PING_TRACE_MASK
;

125 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

126 
ZooTø˚
.
	`logReque°
(
LOG
, 
åa˚Mask
, 'P', 
ªque°
, "");

128 i‡(
Reque°
.
ªque°OfDóth
 =
ªque°
) {

131 
	`pReque°
(
ªque°
);

133 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

134 
LOG
.
	`îr‹
("U√x≥˘ed i¡îru±i⁄", 
e
);

135 } 
	`ˇtch
 (
Reque°Pro˚ss‹Ex˚±i⁄
 
e
) {

136 i‡(
e
.
	`gëCau£
(Ë
ö°™˚of
 
XidRﬁlovîEx˚±i⁄
) {

137 
LOG
.
	`öfo
(
e
.
	`gëCau£
().
	`gëMesßge
());

139 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

140 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

141 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

143 
LOG
.
	`öfo
("PrepRequestProcessorÉxitedÜoop!");

144 
	}
}

146 
Ch™geRec‹d
 
	$gëRec‹dF‹P©h
(
Såög
 
∑th
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

147 
Ch™geRec‹d
 
œ°Ch™ge
 = 
nuŒ
;

148 
	`synchr⁄ized
 (
zks
.
out°™dögCh™ges
) {

149 
œ°Ch™ge
 = 
zks
.
out°™dögCh™gesF‹P©h
.
	`gë
(
∑th
);

158 i‡(
œ°Ch™ge
 =
nuŒ
) {

159 
D©aNode
 
n
 = 
zks
.
	`gëZKD©aba£
().
	`gëNode
(
∑th
);

160 i‡(
n
 !
nuŒ
) {

161 
L⁄g
 
a˛
;

162 
Së
<
Såög
> 
chûdªn
;

163 
	`synchr⁄ized
(
n
) {

164 
a˛
 = 
n
.acl;

165 
chûdªn
 = 
n
.
	`gëChûdªn
();

167 
œ°Ch™ge
 = 
√w
 
	`Ch™geRec‹d
(-1, 
∑th
, 
n
.
°©
,

168 
chûdªn
 !
nuŒ
 ? chûdªn.
	`size
() : 0,

169 
zks
.
	`gëZKD©aba£
().
	`c⁄vîtL⁄g
(
a˛
));

173 i‡(
œ°Ch™ge
 =
nuŒ
 ||Üa°Ch™ge.
°©
 ==Çull) {

174 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
(
∑th
);

176  
œ°Ch™ge
;

177 
	}
}

179 
	$addCh™geRec‹d
(
Ch™geRec‹d
 
c
) {

180 
	`synchr⁄ized
 (
zks
.
out°™dögCh™ges
) {

181 
zks
.
out°™dögCh™ges
.
	`add
(
c
);

182 
zks
.
out°™dögCh™gesF‹P©h
.
	`put
(
c
.
∑th
, c);

184 
	}
}

194 
	gHashM≠
<
	gSåög
, 
	gCh™geRec‹d
> 
	$gëPídögCh™ges
(
Mu…iTønß˘i⁄Rec‹d
 
mu…iReque°
) {

195 
HashM≠
<
Såög
, 
Ch™geRec‹d
> 
≥ndögCh™geRec‹ds
 = 
√w
 HashMap<String, ChangeRecord>();

197 
Op
 
›
: 
mu…iReque°
) {

198 
Såög
 
∑th
 = 
›
.
	`gëP©h
();

200 
åy
 {

201 
Ch™geRec‹d
 
¸
 = 
	`gëRec‹dF‹P©h
(
∑th
);

202 i‡(
¸
 !
nuŒ
) {

203 
≥ndögCh™geRec‹ds
.
	`put
(
∑th
, 
¸
);

205 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

210  
≥ndögCh™geRec‹ds
;

211 
	}
}

223 
rﬁlbackPídögCh™ges
(
zxid
, 
HashM≠
<
Såög
, 
Ch™geRec‹d
>
≥ndögCh™geRec‹ds
) {

225 
synchr⁄ized
 (
zks
.
out°™dögCh™ges
) {

227 
	gLi°Iãøt‹
<
	gCh™geRec‹d
> 
	gôî
 = 
zks
.
out°™dögCh™ges
.
li°Iãøt‹
(zks.out°™dögCh™ges.
size
());

228 
	gôî
.
hasPªvious
()) {

229 
Ch™geRec‹d
 
	gc
 = 
ôî
.
¥evious
();

230 i‡(
	gc
.
	gzxid
 =
zxid
) {

231 
ôî
.
ªmove
();

232 
	gzks
.
	gout°™dögCh™gesF‹P©h
.
ªmove
(
c
.
∑th
);

238 
boﬁón
 
	gem±y
 = 
zks
.
out°™dögCh™ges
.
isEm±y
();

239 
	gfú°Zxid
 = 0;

240 i‡(!
	gem±y
) {

241 
	gfú°Zxid
 = 
zks
.
out°™dögCh™ges
.
gë
(0).
zxid
;

244 
	gIãøt‹
<
	gCh™geRec‹d
> 
	g¥i‹Iãr
 = 
≥ndögCh™geRec‹ds
.
vÆues
().
ôî©‹
();

245 
	g¥i‹Iãr
.
hasNext
()) {

246 
Ch™geRec‹d
 
	gc
 = 
¥i‹Iãr
.
√xt
();

249 i‡(!
	gem±y
 && (
	gc
.
	gzxid
 < 
	gfú°Zxid
)) {

253 
	gzks
.
	gout°™dögCh™gesF‹P©h
.
put
(
c
.
∑th
, c);

258 
checkACL
(
ZooKì≥rSîvî
 
zks
, 
Li°
<
ACL
> 
a˛
, 
≥rm
,

259 
Li°
<
Id
> 
ids
Ë
throws
 
	gKì≥rEx˚±i⁄
.
	gNoAuthEx˚±i⁄
 {

260 i‡(
	gskùACL
) {

263 i‡(
	ga˛
 =
nuŒ
 || 
a˛
.
size
() == 0) {

266 
Id
 
	gauthId
 : 
ids
) {

267 i‡(
authId
.
gëScheme
().
equÆs
("super")) {

271 
ACL
 
	ga
 : 
a˛
) {

272 
Id
 
id
 = 
a
.
gëId
();

273 i‡((
	ga
.
gëPîms
(Ë& 
	g≥rm
) != 0) {

274 i‡(
id
.
gëScheme
().
equÆs
("world")

275 && 
id
.
gëId
().
equÆs
("anyone")) {

278 
Authítiˇti⁄Providî
 
	g≠
 = 
ProvidîRegi°ry
.
gëProvidî
(
id


279 .
gëScheme
());

280 i‡(
	g≠
 !
nuŒ
) {

281 
Id
 
authId
 : 
ids
) {

282 i‡(
authId
.
gëScheme
().
equÆs
(
id
.getScheme())

283 && 
≠
.
m©ches
(
authId
.
gëId
(), 
id
.getId())) {

290 
throw
 
√w
 
	gKì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
();

302 @
SuµªssW¨nögs
("unchecked")

303 
¥Ÿe˘ed
 
	$pReque°2Txn
(
ty≥
, 
zxid
, 
Reque°
 
ªque°
, 
Rec‹d
 
ªc‹d
, 
boﬁón
 
de£rülize
)

304 
throws
 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄
, 
Reque°Pro˚ss‹Ex˚±i⁄


306 
ªque°
.
hdr
 = 
√w
 
	`TxnHódî
‘eque°.
£ssi⁄Id
,Ñeque°.
cxid
, 
zxid
,

307 
zks
.
	`gëTime
(), 
ty≥
);

309 
ty≥
) {

310 
OpCode
.
¸óã
:

311 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

312 
Cª©eReque°
 
¸óãReque°
 = (Cª©eReque°)
ªc‹d
;

313 if(
de£rülize
)

314 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
¸óãReque°
);

315 
Såög
 
∑th
 = 
¸óãReque°
.
	`gëP©h
();

316 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

317 i‡(
œ°Sœsh
 =-1 || 
∑th
.
	`ödexOf
('\0'Ë!-1 || 
ÁûCª©e
) {

318 
LOG
.
	`öfo
("InvÆidÖ©h " + 
∑th
 + " with session 0x" +

319 
L⁄g
.
	`toHexSåög
(
ªque°
.
£ssi⁄Id
));

320 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadArgumítsEx˚±i⁄
(
∑th
);

322 
Li°
<
ACL
> 
li°ACL
 = 
	`ªmoveDu∂iˇãs
(
¸óãReque°
.
	`gëA˛
());

323 i‡(!
	`fixupACL
(
ªque°
.
authInfo
, 
li°ACL
)) {

324 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`InvÆidACLEx˚±i⁄
(
∑th
);

326 
Såög
 
∑ª¡P©h
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

327 
Ch™geRec‹d
 
∑ª¡Rec‹d
 = 
	`gëRec‹dF‹P©h
(
∑ª¡P©h
);

329 
	`checkACL
(
zks
, 
∑ª¡Rec‹d
.
a˛
, 
ZooDefs
.
Pîms
.
CREATE
,

330 
ªque°
.
authInfo
);

331 
∑ª¡CVîsi⁄
 = 
∑ª¡Rec‹d
.
°©
.
	`gëCvîsi⁄
();

332 
Cª©eMode
 
¸óãMode
 =

333 
Cª©eMode
.
	`‰omFœg
(
¸óãReque°
.
	`gëFœgs
());

334 i‡(
¸óãMode
.
	`isSequítül
()) {

335 
∑th
 =Ö©h + 
Såög
.
	`f‹m©
(
LoˇÀ
.
ENGLISH
, "%010d", 
∑ª¡CVîsi⁄
);

337 
åy
 {

338 
P©hUtûs
.
	`vÆid©eP©h
(
∑th
);

339 } 
	`ˇtch
(
IŒegÆArgumítEx˚±i⁄
 
õ
) {

340 
LOG
.
	`öfo
("InvÆidÖ©h " + 
∑th
 + " with session 0x" +

341 
L⁄g
.
	`toHexSåög
(
ªque°
.
£ssi⁄Id
));

342 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadArgumítsEx˚±i⁄
(
∑th
);

344 
åy
 {

345 i‡(
	`gëRec‹dF‹P©h
(
∑th
Ë!
nuŒ
) {

346 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NodeExi°sEx˚±i⁄
(
∑th
);

348 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

351 
boﬁón
 
ïhemîÆP¨ít
 = 
∑ª¡Rec‹d
.
°©
.
	`gëEphemîÆOw√r
() != 0;

352 i‡(
ïhemîÆP¨ít
) {

353 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoChûdªnF‹EphemîÆsEx˚±i⁄
(
∑th
);

355 
√wCvîsi⁄
 = 
∑ª¡Rec‹d
.
°©
.
	`gëCvîsi⁄
()+1;

356 
ªque°
.
txn
 = 
√w
 
	`Cª©eTxn
(
∑th
, 
¸óãReque°
.
	`gëD©a
(),

357 
li°ACL
,

358 
¸óãMode
.
	`isEphemîÆ
(), 
√wCvîsi⁄
);

359 
SètPîsi°ed
 
s
 = 
√w
 
	`SètPîsi°ed
();

360 i‡(
¸óãMode
.
	`isEphemîÆ
()) {

361 
s
.
	`£tEphemîÆOw√r
(
ªque°
.
£ssi⁄Id
);

363 
∑ª¡Rec‹d
 =Ö¨ítRec‹d.
	`du∂iˇã
(
ªque°
.
hdr
.
	`gëZxid
());

364 
∑ª¡Rec‹d
.
chûdCou¡
++;

365 
∑ª¡Rec‹d
.
°©
.
	`£tCvîsi⁄
(
√wCvîsi⁄
);

366 
	`addCh™geRec‹d
(
∑ª¡Rec‹d
);

367 
	`addCh™geRec‹d
(
√w
 
	`Ch™geRec‹d
(
ªque°
.
hdr
.
	`gëZxid
(), 
∑th
, 
s
,

368 0, 
li°ACL
));

370 
OpCode
.
dñëe
:

371 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

372 
DñëeReque°
 
dñëeReque°
 = (DñëeReque°)
ªc‹d
;

373 if(
de£rülize
)

374 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
dñëeReque°
);

375 
∑th
 = 
dñëeReque°
.
	`gëP©h
();

376 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

377 i‡(
œ°Sœsh
 =-1 || 
∑th
.
	`ödexOf
('\0') != -1

378 || 
zks
.
	`gëZKD©aba£
().
	`isS≥cülP©h
(
∑th
)) {

379 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadArgumítsEx˚±i⁄
(
∑th
);

381 
∑ª¡P©h
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

382 
∑ª¡Rec‹d
 = 
	`gëRec‹dF‹P©h
(
∑ª¡P©h
);

383 
Ch™geRec‹d
 
nodeRec‹d
 = 
	`gëRec‹dF‹P©h
(
∑th
);

384 
	`checkACL
(
zks
, 
∑ª¡Rec‹d
.
a˛
, 
ZooDefs
.
Pîms
.
DELETE
,

385 
ªque°
.
authInfo
);

386 
vîsi⁄
 = 
dñëeReque°
.
	`gëVîsi⁄
();

387 i‡(
vîsi⁄
 !-1 && 
nodeRec‹d
.
°©
.
	`gëVîsi⁄
() != version) {

388 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadVîsi⁄Ex˚±i⁄
(
∑th
);

390 i‡(
nodeRec‹d
.
chûdCou¡
 > 0) {

391 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NŸEm±yEx˚±i⁄
(
∑th
);

393 
ªque°
.
txn
 = 
√w
 
	`DñëeTxn
(
∑th
);

394 
∑ª¡Rec‹d
 =Ö¨ítRec‹d.
	`du∂iˇã
(
ªque°
.
hdr
.
	`gëZxid
());

395 
∑ª¡Rec‹d
.
chûdCou¡
--;

396 
	`addCh™geRec‹d
(
∑ª¡Rec‹d
);

397 
	`addCh™geRec‹d
(
√w
 
	`Ch™geRec‹d
(
ªque°
.
hdr
.
	`gëZxid
(), 
∑th
,

398 
nuŒ
, -1,Çull));

400 
OpCode
.
£tD©a
:

401 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

402 
SëD©aReque°
 
£tD©aReque°
 = (SëD©aReque°)
ªc‹d
;

403 if(
de£rülize
)

404 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
£tD©aReque°
);

405 
∑th
 = 
£tD©aReque°
.
	`gëP©h
();

406 
nodeRec‹d
 = 
	`gëRec‹dF‹P©h
(
∑th
);

407 
	`checkACL
(
zks
, 
nodeRec‹d
.
a˛
, 
ZooDefs
.
Pîms
.
WRITE
,

408 
ªque°
.
authInfo
);

409 
vîsi⁄
 = 
£tD©aReque°
.
	`gëVîsi⁄
();

410 
cuºítVîsi⁄
 = 
nodeRec‹d
.
°©
.
	`gëVîsi⁄
();

411 i‡(
vîsi⁄
 !-1 && vîsi⁄ !
cuºítVîsi⁄
) {

412 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadVîsi⁄Ex˚±i⁄
(
∑th
);

414 
vîsi⁄
 = 
cuºítVîsi⁄
 + 1;

415 
ªque°
.
txn
 = 
√w
 
	`SëD©aTxn
(
∑th
, 
£tD©aReque°
.
	`gëD©a
(), 
vîsi⁄
);

416 
nodeRec‹d
 =ÇodeRec‹d.
	`du∂iˇã
(
ªque°
.
hdr
.
	`gëZxid
());

417 
nodeRec‹d
.
°©
.
	`£tVîsi⁄
(
vîsi⁄
);

418 
	`addCh™geRec‹d
(
nodeRec‹d
);

420 
OpCode
.
£tACL
:

421 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

422 
SëACLReque°
 
£tA˛Reque°
 = (SëACLReque°)
ªc‹d
;

423 if(
de£rülize
)

424 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
£tA˛Reque°
);

425 
∑th
 = 
£tA˛Reque°
.
	`gëP©h
();

426 
li°ACL
 = 
	`ªmoveDu∂iˇãs
(
£tA˛Reque°
.
	`gëA˛
());

427 i‡(!
	`fixupACL
(
ªque°
.
authInfo
, 
li°ACL
)) {

428 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`InvÆidACLEx˚±i⁄
(
∑th
);

430 
nodeRec‹d
 = 
	`gëRec‹dF‹P©h
(
∑th
);

431 
	`checkACL
(
zks
, 
nodeRec‹d
.
a˛
, 
ZooDefs
.
Pîms
.
ADMIN
,

432 
ªque°
.
authInfo
);

433 
vîsi⁄
 = 
£tA˛Reque°
.
	`gëVîsi⁄
();

434 
cuºítVîsi⁄
 = 
nodeRec‹d
.
°©
.
	`gëAvîsi⁄
();

435 i‡(
vîsi⁄
 !-1 && vîsi⁄ !
cuºítVîsi⁄
) {

436 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadVîsi⁄Ex˚±i⁄
(
∑th
);

438 
vîsi⁄
 = 
cuºítVîsi⁄
 + 1;

439 
ªque°
.
txn
 = 
√w
 
	`SëACLTxn
(
∑th
, 
li°ACL
, 
vîsi⁄
);

440 
nodeRec‹d
 =ÇodeRec‹d.
	`du∂iˇã
(
ªque°
.
hdr
.
	`gëZxid
());

441 
nodeRec‹d
.
°©
.
	`£tAvîsi⁄
(
vîsi⁄
);

442 
	`addCh™geRec‹d
(
nodeRec‹d
);

444 
OpCode
.
¸óãSessi⁄
:

445 
ªque°
.ªque°.
	`ªwöd
();

446 
to
 = 
ªque°
.ªque°.
	`gëI¡
();

447 
ªque°
.
txn
 = 
√w
 
	`Cª©eSessi⁄Txn
(
to
);

448 
ªque°
.ªque°.
	`ªwöd
();

449 
zks
.
£ssi⁄Tøckî
.
	`addSessi⁄
(
ªque°
.
£ssi⁄Id
, 
to
);

450 
zks
.
	`£tOw√r
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

452 
OpCode
.
˛o£Sessi⁄
:

457 
HashSë
<
Såög
> 
es
 = 
zks
.
	`gëZKD©aba£
()

458 .
	`gëEphemîÆs
(
ªque°
.
£ssi⁄Id
);

459 
	`synchr⁄ized
 (
zks
.
out°™dögCh™ges
) {

460 
Ch™geRec‹d
 
c
 : 
zks
.
out°™dögCh™ges
) {

461 i‡(
c
.
°©
 =
nuŒ
) {

463 
es
.
	`ªmove
(
c
.
∑th
);

464 } i‡(
c
.
°©
.
	`gëEphemîÆOw√r
(Ë=
ªque°
.
£ssi⁄Id
) {

465 
es
.
	`add
(
c
.
∑th
);

468 
Såög
 
∑th2Dñëe
 : 
es
) {

469 
	`addCh™geRec‹d
(
√w
 
	`Ch™geRec‹d
(
ªque°
.
hdr
.
	`gëZxid
(),

470 
∑th2Dñëe
, 
nuŒ
, 0,Çull));

473 
zks
.
£ssi⁄Tøckî
.
	`£tSessi⁄Closög
(
ªque°
.
£ssi⁄Id
);

476 
LOG
.
	`öfo
("Processed sessionÅermination for sessionid: 0x"

477 + 
L⁄g
.
	`toHexSåög
(
ªque°
.
£ssi⁄Id
));

479 
OpCode
.
check
:

480 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,Ñeque°.
	`gëOw√r
());

481 
CheckVîsi⁄Reque°
 
checkVîsi⁄Reque°
 = (CheckVîsi⁄Reque°)
ªc‹d
;

482 if(
de£rülize
)

483 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
checkVîsi⁄Reque°
);

484 
∑th
 = 
checkVîsi⁄Reque°
.
	`gëP©h
();

485 
nodeRec‹d
 = 
	`gëRec‹dF‹P©h
(
∑th
);

486 
	`checkACL
(
zks
, 
nodeRec‹d
.
a˛
, 
ZooDefs
.
Pîms
.
READ
,

487 
ªque°
.
authInfo
);

488 
vîsi⁄
 = 
checkVîsi⁄Reque°
.
	`gëVîsi⁄
();

489 
cuºítVîsi⁄
 = 
nodeRec‹d
.
°©
.
	`gëVîsi⁄
();

490 i‡(
vîsi⁄
 !-1 && vîsi⁄ !
cuºítVîsi⁄
) {

491 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`BadVîsi⁄Ex˚±i⁄
(
∑th
);

493 
vîsi⁄
 = 
cuºítVîsi⁄
 + 1;

494 
ªque°
.
txn
 = 
√w
 
	`CheckVîsi⁄Txn
(
∑th
, 
vîsi⁄
);

497 
	}
}

505 @
SuµªssW¨nögs
("unchecked")

506 
¥Ÿe˘ed
 
	$pReque°
(
Reque°
 
ªque°
Ë
throws
 
Reque°Pro˚ss‹Ex˚±i⁄
 {

509 
ªque°
.
hdr
 = 
nuŒ
;

510 
ªque°
.
txn
 = 
nuŒ
;

512 
åy
 {

513 
ªque°
.
ty≥
) {

514 
OpCode
.
¸óã
:

515 
Cª©eReque°
 
¸óãReque°
 = 
√w
 
	`Cª©eReque°
();

516 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
¸óãReque°
, 
åue
);

518 
OpCode
.
dñëe
:

519 
DñëeReque°
 
dñëeReque°
 = 
√w
 
	`DñëeReque°
();

520 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
dñëeReque°
, 
åue
);

522 
OpCode
.
£tD©a
:

523 
SëD©aReque°
 
£tD©aReque°
 = 
√w
 
	`SëD©aReque°
();

524 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
£tD©aReque°
, 
åue
);

526 
OpCode
.
£tACL
:

527 
SëACLReque°
 
£tA˛Reque°
 = 
√w
 
	`SëACLReque°
();

528 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
£tA˛Reque°
, 
åue
);

530 
OpCode
.
check
:

531 
CheckVîsi⁄Reque°
 
checkReque°
 = 
√w
 
	`CheckVîsi⁄Reque°
();

532 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
checkReque°
, 
åue
);

534 
OpCode
.
mu…i
:

535 
Mu…iTønß˘i⁄Rec‹d
 
mu…iReque°
 = 
√w
 
	`Mu…iTønß˘i⁄Rec‹d
();

536 
åy
 {

537 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ªque°
.ªque°, 
mu…iReque°
);

538 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

539 
ªque°
.
hdr
 = 
√w
 
	`TxnHódî
‘eque°.
£ssi⁄Id
,Ñeque°.
cxid
, 
zks
.
	`gëNextZxid
(),

540 
zks
.
	`gëTime
(), 
OpCode
.
mu…i
);

541 
throw
 
e
;

543 
Li°
<
Txn
> 
txns
 = 
√w
 
AºayLi°
<Txn>();

545 
zxid
 = 
zks
.
	`gëNextZxid
();

546 
Kì≥rEx˚±i⁄
 
ke
 = 
nuŒ
;

549 
HashM≠
<
Såög
, 
Ch™geRec‹d
> 
≥ndögCh™ges
 = 
	`gëPídögCh™ges
(
mu…iReque°
);

551 
ödex
 = 0;

552 
Op
 
›
: 
mu…iReque°
) {

553 
Rec‹d
 
subªque°
 = 
›
.
	`toReque°Rec‹d
() ;

559 i‡(
ke
 !
nuŒ
) {

560 
ªque°
.
hdr
.
	`£tTy≥
(
OpCode
.
îr‹
);

561 
ªque°
.
txn
 = 
√w
 
	`Eº‹Txn
(
Code
.
RUNTIMEINCONSISTENCY
.
	`ötVÆue
());

566 
åy
 {

567 
	`pReque°2Txn
(
›
.
	`gëTy≥
(), 
zxid
, 
ªque°
, 
subªque°
, 
Ál£
);

568 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

569 i‡(
ke
 =
nuŒ
) {

570 
ke
 = 
e
;

572 
ªque°
.
hdr
.
	`£tTy≥
(
OpCode
.
îr‹
);

573 
ªque°
.
txn
 = 
√w
 
	`Eº‹Txn
(
e
.
	`code
().
	`ötVÆue
());

574 
LOG
.
	`öfo
("Got user-level KeeperException whenÖrocessing "

575 + 
ªque°
.
	`toSåög
() + "ábortingÑemaining multi ops."

576 + " Eº‹ P©h:" + 
e
.
	`gëP©h
()

577 + " Eº‹:" + 
e
.
	`gëMesßge
());

579 
ªque°
.
	`£tEx˚±i⁄
(
e
);

582 
	`rﬁlbackPídögCh™ges
(
zxid
, 
≥ndögCh™ges
);

589 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

590 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

591 
ªque°
.
txn
.
	`£rülize
(
bﬂ
, "request") ;

592 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

594 
txns
.
	`add
(
√w
 
	`Txn
(
ªque°
.
hdr
.
	`gëTy≥
(), 
bb
.
	`¨øy
()));

595 
ödex
++;

598 
ªque°
.
hdr
 = 
√w
 
	`TxnHódî
‘eque°.
£ssi⁄Id
,Ñeque°.
cxid
, 
zxid
, 
zks
.
	`gëTime
(),Ñeque°.
ty≥
);

599 
ªque°
.
txn
 = 
√w
 
	`Mu…iTxn
(
txns
);

604 
OpCode
.
¸óãSessi⁄
:

605 
OpCode
.
˛o£Sessi⁄
:

606 
	`pReque°2Txn
(
ªque°
.
ty≥
, 
zks
.
	`gëNextZxid
(),Ñeque°, 
nuŒ
, 
åue
);

610 
OpCode
.
sync
:

611 
OpCode
.
exi°s
:

612 
OpCode
.
gëD©a
:

613 
OpCode
.
gëACL
:

614 
OpCode
.
gëChûdªn
:

615 
OpCode
.
gëChûdªn2
:

616 
OpCode
.
pög
:

617 
OpCode
.
£tW©ches
:

618 
zks
.
£ssi⁄Tøckî
.
	`checkSessi⁄
(
ªque°
.
£ssi⁄Id
,

619 
ªque°
.
	`gëOw√r
());

622 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

623 i‡(
ªque°
.
hdr
 !
nuŒ
) {

624 
ªque°
.
hdr
.
	`£tTy≥
(
OpCode
.
îr‹
);

625 
ªque°
.
txn
 = 
√w
 
	`Eº‹Txn
(
e
.
	`code
().
	`ötVÆue
());

627 
LOG
.
	`öfo
("Got user-level KeeperException whenÖrocessing "

628 + 
ªque°
.
	`toSåög
()

629 + " Eº‹ P©h:" + 
e
.
	`gëP©h
()

630 + " Eº‹:" + 
e
.
	`gëMesßge
());

631 
ªque°
.
	`£tEx˚±i⁄
(
e
);

632 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

635 
LOG
.
	`îr‹
("FaûedÅÿ¥o˚s†" + 
ªque°
, 
e
);

637 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

638 
ByãBuf„r
 
bb
 = 
ªque°
.request;

639 if(
bb
 !
nuŒ
){

640 
bb
.
	`ªwöd
();

641 
bb
.
	`hasRemaöög
()) {

642 
sb
.
	`≠≥nd
(
I¡egî
.
	`toHexSåög
(
bb
.
	`gë
() & 0xff));

645 
sb
.
	`≠≥nd
("request buffer isÇull");

648 
LOG
.
	`îr‹
("DumpögÑeque° buf„r: 0x" + 
sb
.
	`toSåög
());

649 i‡(
ªque°
.
hdr
 !
nuŒ
) {

650 
ªque°
.
hdr
.
	`£tTy≥
(
OpCode
.
îr‹
);

651 
ªque°
.
txn
 = 
√w
 
	`Eº‹Txn
(
Code
.
MARSHALLINGERROR
.
	`ötVÆue
());

654 
ªque°
.
zxid
 = 
zks
.
	`gëZxid
();

655 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

656 
	}
}

658 
¥iv©e
 
	gLi°
<
	gACL
> 
ªmoveDu∂iˇãs
(
Li°
<
ACL
> 
a˛
) {

660 
	gAºayLi°
<
	gACL
> 
	gªtvÆ
 = 
√w
 
AºayLi°
<
ACL
>();

661 
	gIãøt‹
<
	gACL
> 
	gô
 = 
a˛
.
ôî©‹
();

662 
	gô
.
hasNext
()) {

663 
ACL
 
	ga
 = 
ô
.
√xt
();

664 i‡(
	gªtvÆ
.
c⁄èös
(
a
Ë=
Ál£
) {

665 
ªtvÆ
.
add
(
a
);

668  
	gªtvÆ
;

681 
¥iv©e
 
boﬁón
 
fixupACL
(
Li°
<
Id
> 
authInfo
, Li°<
ACL
> 
a˛
) {

682 i‡(
	gskùACL
) {

683  
	gåue
;

685 i‡(
	ga˛
 =
nuŒ
 || 
a˛
.
size
() == 0) {

686  
Ál£
;

689 
	gIãøt‹
<
	gACL
> 
	gô
 = 
a˛
.
ôî©‹
();

690 
	gLökedLi°
<
	gACL
> 
	gtoAdd
 = 
nuŒ
;

691 
	gô
.
hasNext
()) {

692 
ACL
 
	ga
 = 
ô
.
√xt
();

693 
Id
 
	gid
 = 
a
.
gëId
();

694 i‡(
	gid
.
gëScheme
().
equÆs
("w‹ld"Ë&& id.
gëId
().equals("anyone")) {

696 } i‡(
	gid
.
gëScheme
().
equÆs
("auth")) {

699 
	gô
.
ªmove
();

700 i‡(
	gtoAdd
 =
nuŒ
) {

701 
toAdd
 = 
√w
 
LökedLi°
<
ACL
>();

703 
boﬁón
 
	gauthIdVÆid
 = 
Ál£
;

704 
Id
 
	gcid
 : 
authInfo
) {

705 
Authítiˇti⁄Providî
 
≠
 =

706 
ProvidîRegi°ry
.
gëProvidî
(
cid
.
gëScheme
());

707 i‡(
	g≠
 =
nuŒ
) {

708 
LOG
.
îr‹
("Missing AuthenticationProvider for "

709 + 
cid
.
gëScheme
());

710 } i‡(
	g≠
.
isAuthítiˇãd
()) {

711 
	gauthIdVÆid
 = 
åue
;

712 
	gtoAdd
.
add
(
√w
 
ACL
(
a
.
gëPîms
(), 
cid
));

715 i‡(!
	gauthIdVÆid
) {

716  
	gÁl£
;

719 
Authítiˇti⁄Providî
 
	g≠
 = 
ProvidîRegi°ry
.
gëProvidî
(
id


720 .
gëScheme
());

721 i‡(
	g≠
 =
nuŒ
) {

722  
Ál£
;

724 i‡(!
	g≠
.
isVÆid
(
id
.
gëId
())) {

725  
	gÁl£
;

729 i‡(
	gtoAdd
 !
nuŒ
) {

730 
ACL
 
a
 : 
toAdd
) {

731 
a˛
.
add
(
a
);

734  
	ga˛
.
size
() > 0;

737 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

739 
submôãdReque°s
.
	`add
(
ªque°
);

740 
	}
}

742 
public
 
	$shutdown
() {

743 
LOG
.
	`öfo
("Shutting down");

744 
submôãdReque°s
.
	`˛ór
();

745 
submôãdReque°s
.
	`add
(
Reque°
.
ªque°OfDóth
);

746 
√xtPro˚ss‹
.
	`shutdown
();

747 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/PurgeTxnLog.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeFûãr
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gUtû
;

44 
public
 cœs†
	cPurgeTxnLog
 {

45 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
PurgeTxnLog
.
˛ass
);

47 
	$¥ötUßge
(){

48 
Sy°em
.
out
.
	`¥öén
("PurgeTxnLog dataLogDir [snapDir] -n count");

49 
Sy°em
.
out
.
	`¥öén
("\tdataLogDir --ÖathÅoÅheÅxnÜog directory");

50 
Sy°em
.
out
.
	`¥öén
("\tsnapDir --ÖathÅoÅhe snapshot directory");

51 
Sy°em
.
out
.
	`¥öén
("\tcount --ÅheÇumber of old snaps/logs you wantÅo keep");

52 
Sy°em
.
	`exô
(1);

63 
public
 
	$purge
(
Fûe
 
d©aDú
, Fûê
¢≠Dú
, 
num
Ë
throws
 
IOEx˚±i⁄
 {

64 i‡(
num
 < 3) {

65 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("count should be greaterÅhan 3");

68 
FûeTxnS«pLog
 
txnLog
 = 
√w
 
	`FûeTxnS«pLog
(
d©aDú
, 
¢≠Dú
);

73 
Së
<
Fûe
> 
exc
=
√w
 
HashSë
<File>();

74 
Li°
<
Fûe
> 
¢≠s
 = 
txnLog
.
	`födNRe˚¡S«pshŸs
(
num
);

75 i‡(
¢≠s
.
	`size
() == 0)

77 
Fûe
 
¢≠ShŸ
 = 
¢≠s
.
	`gë
(¢≠s.
	`size
() -1);

78 
Fûe
 
f
: 
¢≠s
) {

79 
exc
.
	`add
(
f
);

81 
zxid
 = 
Utû
.
	`gëZxidFromName
(
¢≠ShŸ
.
	`gëName
(),"snapshot");

82 
exc
.
	`addAŒ
(
Aºays
.
	`asLi°
(
txnLog
.
	`gëS«pshŸLogs
(
zxid
)));

84 
föÆ
 
Së
<
Fûe
> 
ex˛ude
=
exc
;

85 ˛as†
	cMyFûeFûãr
 
im∂emíts
 
FûeFûãr
{

86 
¥iv©e
 
föÆ
 
Såög
 
¥efix
;

87 
	`MyFûeFûãr
(
Såög
 
¥efix
){

88 
this
.
¥efix
=prefix;

90 
public
 
boﬁón
 
	`ac˚±
(
Fûe
 
f
){

91 if(!
f
.
	`gëName
().
	`°¨tsWôh
(
¥efix
Ë|| 
ex˛ude
.
	`c⁄èös
(f))

92  
Ál£
;

93  
åue
;

97 
Li°
<
Fûe
> 
fûes
=
√w
 
AºayLi°
<File>(

98 
Aºays
.
	`asLi°
(
txnLog
.
	`gëD©aDú
().
	`li°Fûes
(
√w
 
	`MyFûeFûãr
("log."))));

100 
fûes
.
	`addAŒ
(
Aºays
.
	`asLi°
(
txnLog
.
	`gëS«pDú
().
	`li°Fûes
(
√w
 
	`MyFûeFûãr
("snapshot."))));

102 
Fûe
 
f
: 
fûes
)

104 
Sy°em
.
out
.
	`¥öén
("Removing file: "+

105 
D©eF‹m©
.
	`gëD©eTimeIn°™˚
().
	`f‹m©
(
f
.
	`œ°Modifõd
())+

106 "\t"+
f
.
	`gëP©h
());

107 if(!
f
.
	`dñëe
()){

108 
Sy°em
.
îr
.
	`¥öén
("FaûedÅÿªmovê"+
f
.
	`gëP©h
());

112 
	}
}

119 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

120 if(
¨gs
.
Àngth
<3 ||árgs.length>4)

121 
	`¥ötUßge
();

122 
i
 = 0;

123 
Fûe
 
d©aDú
=
√w
 
	`Fûe
(
¨gs
[0]);

124 
Fûe
 
¢≠Dú
=
d©aDú
;

125 if(
¨gs
.
Àngth
==4){

126 
i
++;

127 
¢≠Dú
=
√w
 
	`Fûe
(
¨gs
[
i
]);

129 
i
++; i++;

130 
num
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[
i
]);

131 
	`purge
(
d©aDú
, 
¢≠Dú
, 
num
);

132 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/Request.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

37 
public
 cœs†
	cReque°
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Reque°
.
˛ass
);

40 
public
 
föÆ
 
Reque°
 
	mªque°OfDóth
 = 
√w
 Reque°(
nuŒ
, 0, 0, 0,

41 
nuŒ
,Çull);

50 
public
 
Reque°
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
, 
xid
, 
ty≥
,

51 
ByãBuf„r
 
bb
, 
Li°
<
Id
> 
authInfo
) {

52 
	mthis
.
	m˙xn
 = 
˙xn
;

53 
	mthis
.
	m£ssi⁄Id
 = 
£ssi⁄Id
;

54 
	mthis
.
	mcxid
 = 
xid
;

55 
	mthis
.
	mty≥
 = 
ty≥
;

56 
	mthis
.
	mªque°
 = 
bb
;

57 
	mthis
.
	mauthInfo
 = 
authInfo
;

60 
public
 
föÆ
 
	g£ssi⁄Id
;

62 
public
 
föÆ
 
	gcxid
;

64 
public
 
föÆ
 
	gty≥
;

66 
public
 
föÆ
 
ByãBuf„r
 
	gªque°
;

68 
public
 
föÆ
 
SîvîCnxn
 
	g˙xn
;

70 
public
 
TxnHódî
 
	ghdr
;

72 
public
 
Rec‹d
 
	gtxn
;

74 
public
 
	gzxid
 = -1;

76 
public
 
föÆ
 
	gLi°
<
	gId
> 
	gauthInfo
;

78 
public
 
föÆ
 
	g¸óãTime
 = 
Sy°em
.
cuºítTimeMûlis
();

80 
¥iv©e
 
Obje˘
 
	gow√r
;

82 
¥iv©e
 
Kì≥rEx˚±i⁄
 
	ge
;

84 
public
 
Obje˘
 
	$gëOw√r
() {

85  
ow√r
;

86 
	}
}

88 
public
 
	$£tOw√r
(
Obje˘
 
ow√r
) {

89 
this
.
ow√r
 = owner;

90 
	}
}

99 
boﬁón
 
	$isVÆid
(
ty≥
) {

101 
ty≥
) {

102 
OpCode
.
nŸifiˇti⁄
:

103  
Ál£
;

104 
OpCode
.
¸óã
:

105 
OpCode
.
dñëe
:

106 
OpCode
.
¸óãSessi⁄
:

107 
OpCode
.
exi°s
:

108 
OpCode
.
gëD©a
:

109 
OpCode
.
check
:

110 
OpCode
.
mu…i
:

111 
OpCode
.
£tD©a
:

112 
OpCode
.
sync
:

113 
OpCode
.
gëACL
:

114 
OpCode
.
£tACL
:

115 
OpCode
.
gëChûdªn
:

116 
OpCode
.
gëChûdªn2
:

117 
OpCode
.
pög
:

118 
OpCode
.
˛o£Sessi⁄
:

119 
OpCode
.
£tW©ches
:

120  
åue
;

122  
Ál£
;

124 
	}
}

126 
boﬁón
 
	$isQu‹um
(
ty≥
) {

127 
ty≥
) {

128 
OpCode
.
exi°s
:

129 
OpCode
.
gëACL
:

130 
OpCode
.
gëChûdªn
:

131 
OpCode
.
gëChûdªn2
:

132 
OpCode
.
gëD©a
:

133  
Ál£
;

134 
OpCode
.
îr‹
:

135 
OpCode
.
˛o£Sessi⁄
:

136 
OpCode
.
¸óã
:

137 
OpCode
.
¸óãSessi⁄
:

138 
OpCode
.
dñëe
:

139 
OpCode
.
£tACL
:

140 
OpCode
.
£tD©a
:

141 
OpCode
.
check
:

142 
OpCode
.
mu…i
:

143  
åue
;

145  
Ál£
;

147 
	}
}

149 
Såög
 
	$›2Såög
(
›
) {

150 
›
) {

151 
OpCode
.
nŸifiˇti⁄
:

153 
OpCode
.
¸óã
:

155 
OpCode
.
£tW©ches
:

157 
OpCode
.
dñëe
:

159 
OpCode
.
exi°s
:

161 
OpCode
.
gëD©a
:

163 
OpCode
.
check
:

165 
OpCode
.
mu…i
:

167 
OpCode
.
£tD©a
:

169 
OpCode
.
sync
:

171 
OpCode
.
gëACL
:

173 
OpCode
.
£tACL
:

175 
OpCode
.
gëChûdªn
:

177 
OpCode
.
gëChûdªn2
:

179 
OpCode
.
pög
:

181 
OpCode
.
¸óãSessi⁄
:

183 
OpCode
.
˛o£Sessi⁄
:

185 
OpCode
.
îr‹
:

188  "unknow¿" + 
›
;

190 
	}
}

192 @
Ovîride


193 
public
 
Såög
 
	$toSåög
() {

194 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

195 
sb
.
	`≠≥nd
("£ssi⁄id:0x").≠≥nd(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
))

196 .
	`≠≥nd
("Åy≥:").≠≥nd(
	`›2Såög
(
ty≥
))

197 .
	`≠≥nd
(" cxid:0x").≠≥nd(
L⁄g
.
	`toHexSåög
(
cxid
))

198 .
	`≠≥nd
(" zxid:0x").≠≥nd(
L⁄g
.
	`toHexSåög
(
hdr
 =
nuŒ
 ?

199 -2 : 
hdr
.
	`gëZxid
()))

200 .
	`≠≥nd
("Åx¡y≥:").≠≥nd(
hdr
 =
nuŒ
 ?

201 "unknown" : "" + 
hdr
.
	`gëTy≥
());

204 
Såög
 
∑th
 = "n/a";

205 i‡(
ty≥
 !
OpCode
.
¸óãSessi⁄


206 && 
ty≥
 !
OpCode
.
£tW©ches


207 && 
ty≥
 !
OpCode
.
˛o£Sessi⁄


208 && 
ªque°
 !
nuŒ


209 && 
ªque°
.
	`ªmaöög
() >= 4)

211 
åy
 {

213 
ByãBuf„r
 
rbuf
 = 
ªque°
.
	`asRódO∆yBuf„r
();

214 
rbuf
.
	`˛ór
();

215 
∑thLí
 = 
rbuf
.
	`gëI¡
();

217 i‡(
∑thLí
 >= 0

218 && 
∑thLí
 < 4096

219 && 
rbuf
.
	`ªmaöög
(Ë>
∑thLí
)

221 
byã
 
b
[] = 
√w
 byã[
∑thLí
];

222 
rbuf
.
	`gë
(
b
);

223 
∑th
 = 
√w
 
	`Såög
(
b
);

225 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

229 
sb
.
	`≠≥nd
("Ñeq∑th:").≠≥nd(
∑th
);

231  
sb
.
	`toSåög
();

232 
	}
}

234 
public
 
	$£tEx˚±i⁄
(
Kì≥rEx˚±i⁄
 
e
) {

235 
this
.
e
 =É;

236 
	}
}

238 
public
 
Kì≥rEx˚±i⁄
 
	$gëEx˚±i⁄
() {

239  
e
;

240 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/RequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

33 
public
 
öãrÁ˚
 
	gReque°Pro˚ss‹
 {

34 @
SuµªssW¨nögs
("serial")

35 
public
 ˛as†
	cReque°Pro˚ss‹Ex˚±i⁄
 
exãnds
 
	gEx˚±i⁄
 {

36 
public
 
Reque°Pro˚ss‹Ex˚±i⁄
(
Såög
 
msg
, 
ThrowabÀ
 
t
) {

37 
su≥r
(
msg
, 
t
);

41 
	$¥o˚ssReque°
(
Reque°
 
ªque°
Ë
throws
 
Reque°Pro˚ss‹Ex˚±i⁄
;

43 
	`shutdown
();

44 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerCnxn.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gSåögWrôî
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicL⁄g
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gReque°Hódî
;

44 
public
 
ab°ø˘
 
˛ass
 
SîvîCnxn
 
im∂emíts
 
	gSèts
, 
	gW©chî
 {

47 
föÆ
 
public
 
Obje˘
 
	gme
 = 
√w
 Object();

49 
¥Ÿe˘ed
 
	gAºayLi°
<
	gId
> 
	gauthInfo
 = 
√w
 
AºayLi°
<
Id
>();

56 
boﬁón
 
	gisOldClõ¡
 = 
åue
;

58 
ab°ø˘
 
gëSessi⁄Timeout
();

60 
ab°ø˘
 
˛o£
();

62 
public
 
ab°ø˘
 
£ndRe•⁄£
(
RïlyHódî
 
h
, 
Rec‹d
 
r
, 
Såög
 
èg
)

63 
throws
 
	gIOEx˚±i⁄
;

66 
ab°ø˘
 
£ndClo£Sessi⁄
();

68 
public
 
ab°ø˘
 
¥o˚ss
(
W©chedEvít
 
evít
);

70 
ab°ø˘
 
gëSessi⁄Id
();

72 
ab°ø˘
 
£tSessi⁄Id
(
£ssi⁄Id
);

75 
public
 
	gLi°
<
	gId
> 
gëAuthInfo
() {

76  
	gCﬁÀ˘i⁄s
.
unmodifübÀLi°
(
authInfo
);

79 
public
 
addAuthInfo
(
Id
 
id
) {

80 i‡(
	gauthInfo
.
c⁄èös
(
id
Ë=
Ál£
) {

81 
authInfo
.
add
(
id
);

85 
public
 
boﬁón
 
ªmoveAuthInfo
(
Id
 
id
) {

86  
	gauthInfo
.
ªmove
(
id
);

89 
ab°ø˘
 
£ndBuf„r
(
ByãBuf„r
 
˛o£C⁄n
);

91 
ab°ø˘
 
íabÀRecv
();

93 
ab°ø˘
 
dißbÀRecv
();

95 
ab°ø˘
 
£tSessi⁄Timeout
(
£ssi⁄Timeout
);

97 
¥Ÿe˘ed
 
ZooKì≥rSa¶Sîvî
 
	gzooKì≥rSa¶Sîvî
 = 
nuŒ
;

99 
¥Ÿe˘ed
 ˛as†
	cClo£Reque°Ex˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

100 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = -7854505709816442681L;

102 
public
 
Clo£Reque°Ex˚±i⁄
(
Såög
 
msg
) {

103 
su≥r
(
msg
);

107 
¥Ÿe˘ed
 ˛as†
	cEndOfSåómEx˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

108 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = -8255690282104294178L;

110 
public
 
EndOfSåómEx˚±i⁄
(
Såög
 
msg
) {

111 
su≥r
(
msg
);

114 
public
 
Såög
 
toSåög
() {

115  "EndOfSåómEx˚±i⁄: " + 
gëMesßge
();

123 
¥Ÿe˘ed
 
föÆ
 
	gc⁄fCmd
 =

124 
ByãBuf„r
.
wøp
("c⁄f".
gëByãs
()).
gëI¡
();

130 
¥Ÿe˘ed
 
föÆ
 
	gc⁄sCmd
 =

131 
ByãBuf„r
.
wøp
("c⁄s".
gëByãs
()).
gëI¡
();

137 
¥Ÿe˘ed
 
föÆ
 
	g¸°Cmd
 =

138 
ByãBuf„r
.
wøp
("¸°".
gëByãs
()).
gëI¡
();

144 
¥Ÿe˘ed
 
föÆ
 
	gdumpCmd
 =

145 
ByãBuf„r
.
wøp
("dump".
gëByãs
()).
gëI¡
();

151 
¥Ÿe˘ed
 
föÆ
 
	gíviCmd
 =

152 
ByãBuf„r
.
wøp
("ívi".
gëByãs
()).
gëI¡
();

158 
¥Ÿe˘ed
 
föÆ
 
	ggëTø˚MaskCmd
 =

159 
ByãBuf„r
.
wøp
("gtmk".
gëByãs
()).
gëI¡
();

165 
¥Ÿe˘ed
 
föÆ
 
	gruokCmd
 =

166 
ByãBuf„r
.
wøp
("ruok".
gëByãs
()).
gëI¡
();

171 
¥Ÿe˘ed
 
föÆ
 
	g£tTø˚MaskCmd
 =

172 
ByãBuf„r
.
wøp
("°mk".
gëByãs
()).
gëI¡
();

178 
¥Ÿe˘ed
 
föÆ
 
	g§vrCmd
 =

179 
ByãBuf„r
.
wøp
("§vr".
gëByãs
()).
gëI¡
();

185 
¥Ÿe˘ed
 
föÆ
 
	g§°Cmd
 =

186 
ByãBuf„r
.
wøp
("§°".
gëByãs
()).
gëI¡
();

192 
¥Ÿe˘ed
 
föÆ
 
	g°©Cmd
 =

193 
ByãBuf„r
.
wøp
("°©".
gëByãs
()).
gëI¡
();

199 
¥Ÿe˘ed
 
föÆ
 
	gwchcCmd
 =

200 
ByãBuf„r
.
wøp
("wchc".
gëByãs
()).
gëI¡
();

206 
¥Ÿe˘ed
 
föÆ
 
	gwchpCmd
 =

207 
ByãBuf„r
.
wøp
("wchp".
gëByãs
()).
gëI¡
();

213 
¥Ÿe˘ed
 
föÆ
 
	gwchsCmd
 =

214 
ByãBuf„r
.
wøp
("wchs".
gëByãs
()).
gëI¡
();

220 
¥Ÿe˘ed
 
föÆ
 
	gm¡rCmd
 = 
ByãBuf„r
.
wøp
("m¡r".
gëByãs
())

221 .
gëI¡
();

227 
¥Ÿe˘ed
 
föÆ
 
	gi§oCmd
 = 
ByãBuf„r
.
wøp
("i§o".
gëByãs
())

228 .
gëI¡
();

230 
¥Ÿe˘ed
 
föÆ
 
	gHashM≠
<
	gI¡egî
, 
	gSåög
> 
	gcmd2Såög
 =

231 
√w
 
HashM≠
<
I¡egî
, 
	gSåög
>();

235 
	gcmd2Såög
.
put
(
c⁄fCmd
, "conf");

236 
	gcmd2Såög
.
put
(
c⁄sCmd
, "cons");

237 
	gcmd2Såög
.
put
(
¸°Cmd
, "crst");

238 
	gcmd2Såög
.
put
(
dumpCmd
, "dump");

239 
	gcmd2Såög
.
put
(
íviCmd
, "envi");

240 
	gcmd2Såög
.
put
(
gëTø˚MaskCmd
, "gtmk");

241 
	gcmd2Såög
.
put
(
ruokCmd
, "ruok");

242 
	gcmd2Såög
.
put
(
£tTø˚MaskCmd
, "stmk");

243 
	gcmd2Såög
.
put
(
§°Cmd
, "srst");

244 
	gcmd2Såög
.
put
(
§vrCmd
, "srvr");

245 
	gcmd2Såög
.
put
(
°©Cmd
, "stat");

246 
	gcmd2Såög
.
put
(
wchcCmd
, "wchc");

247 
	gcmd2Såög
.
put
(
wchpCmd
, "wchp");

248 
	gcmd2Såög
.
put
(
wchsCmd
, "wchs");

249 
	gcmd2Såög
.
put
(
m¡rCmd
, "mntr");

250 
	gcmd2Såög
.
put
(
i§oCmd
, "isro");

253 
¥Ÿe˘ed
 
	$∑ckëRe˚ived
() {

254 
	`ö¸PackësRe˚ived
();

255 
SîvîSèts
 
£rvîSèts
 = 
	`£rvîSèts
();

256 i‡(
£rvîSèts
 !
nuŒ
) {

257 
	`£rvîSèts
().
	`ö¸emítPackësRe˚ived
();

259 
	}
}

261 
¥Ÿe˘ed
 
	$∑ckëSít
() {

262 
	`ö¸PackësSít
();

263 
SîvîSèts
 
£rvîSèts
 = 
	`£rvîSèts
();

264 i‡(
£rvîSèts
 !
nuŒ
) {

265 
	`£rvîSèts
().
	`ö¸emítPackësSít
();

267 
	}
}

269 
¥Ÿe˘ed
 
ab°ø˘
 
SîvîSèts
 
£rvîSèts
();

271 
¥Ÿe˘ed
 
föÆ
 
D©e
 
	ge°ablished
 = 
√w
 Date();

273 
¥Ÿe˘ed
 
föÆ
 
AtomicL⁄g
 
	g∑ckësRe˚ived
 = 
√w
 AtomicLong();

274 
¥Ÿe˘ed
 
föÆ
 
AtomicL⁄g
 
	g∑ckësSít
 = 
√w
 AtomicLong();

276 
¥Ÿe˘ed
 
	gmöL©ícy
;

277 
¥Ÿe˘ed
 
	gmaxL©ícy
;

278 
¥Ÿe˘ed
 
Såög
 
	gœ°Op
;

279 
¥Ÿe˘ed
 
	gœ°Cxid
;

280 
¥Ÿe˘ed
 
	gœ°Zxid
;

281 
¥Ÿe˘ed
 
	gœ°Re•⁄£Time
;

282 
¥Ÿe˘ed
 
	gœ°L©ícy
;

284 
¥Ÿe˘ed
 
	gcou¡
;

285 
¥Ÿe˘ed
 
	gtŸÆL©ícy
;

287 
public
 
synchr⁄ized
 
	$ª£tSèts
() {

288 
∑ckësRe˚ived
.
	`£t
(0);

289 
∑ckësSít
.
	`£t
(0);

290 
möL©ícy
 = 
L⁄g
.
MAX_VALUE
;

291 
maxL©ícy
 = 0;

292 
œ°Op
 = "NA";

293 
œ°Cxid
 = -1;

294 
œ°Zxid
 = -1;

295 
œ°Re•⁄£Time
 = 0;

296 
œ°L©ícy
 = 0;

298 
cou¡
 = 0;

299 
tŸÆL©ícy
 = 0;

300 
	}
}

302 
¥Ÿe˘ed
 
	$ö¸PackësRe˚ived
() {

303  
∑ckësRe˚ived
.
	`ö¸emítAndGë
();

304 
	}
}

306 
¥Ÿe˘ed
 
	$ö¸Out°™dögReque°s
(
Reque°Hódî
 
h
) {

307 
	}
}

309 
¥Ÿe˘ed
 
	$ö¸PackësSít
() {

310  
∑ckësSít
.
	`ö¸emítAndGë
();

311 
	}
}

313 
¥Ÿe˘ed
 
synchr⁄ized
 
	$upd©eSètsF‹Re•⁄£
(
cxid
, 
zxid
,

314 
Såög
 
›
, 
°¨t
, 
íd
)

318 i‡(
cxid
 >= 0) {

319 
œ°Cxid
 = 
cxid
;

321 
œ°Zxid
 = 
zxid
;

322 
œ°Op
 = 
›
;

323 
œ°Re•⁄£Time
 = 
íd
;

324 
ñ≠£d
 = 
íd
 - 
°¨t
;

325 
œ°L©ícy
 = 
ñ≠£d
;

326 i‡(
ñ≠£d
 < 
möL©ícy
) {

327 
möL©ícy
 = 
ñ≠£d
;

329 i‡(
ñ≠£d
 > 
maxL©ícy
) {

330 
maxL©ícy
 = 
ñ≠£d
;

332 
cou¡
++;

333 
tŸÆL©ícy
 +
ñ≠£d
;

334 
	}
}

336 
public
 
D©e
 
	$gëE°ablished
() {

337  (
D©e
)
e°ablished
.
	`˛⁄e
();

338 
	}
}

340 
public
 
ab°ø˘
 
gëOut°™dögReque°s
();

342 
public
 
	$gëPackësRe˚ived
() {

343  
∑ckësRe˚ived
.
	`l⁄gVÆue
();

344 
	}
}

346 
public
 
	$gëPackësSít
() {

347  
∑ckësSít
.
	`l⁄gVÆue
();

348 
	}
}

350 
public
 
synchr⁄ized
 
	$gëMöL©ícy
() {

351  
möL©ícy
 =
L⁄g
.
MAX_VALUE
 ? 0 : minLatency;

352 
	}
}

354 
public
 
synchr⁄ized
 
	$gëAvgL©ícy
() {

355  
cou¡
 =0 ? 0 : 
tŸÆL©ícy
 / count;

356 
	}
}

358 
public
 
synchr⁄ized
 
	$gëMaxL©ícy
() {

359  
maxL©ícy
;

360 
	}
}

362 
public
 
synchr⁄ized
 
Såög
 
	$gëLa°O≥øti⁄
() {

363  
œ°Op
;

364 
	}
}

366 
public
 
synchr⁄ized
 
	$gëLa°Cxid
() {

367  
œ°Cxid
;

368 
	}
}

370 
public
 
synchr⁄ized
 
	$gëLa°Zxid
() {

371  
œ°Zxid
;

372 
	}
}

374 
public
 
synchr⁄ized
 
	$gëLa°Re•⁄£Time
() {

375  
œ°Re•⁄£Time
;

376 
	}
}

378 
public
 
synchr⁄ized
 
	$gëLa°L©ícy
() {

379  
œ°L©ícy
;

380 
	}
}

387 @
Ovîride


388 
public
 
Såög
 
	$toSåög
() {

389 
SåögWrôî
 
sw
 = 
√w
 
	`SåögWrôî
();

390 
PrötWrôî
 
pwrôî
 = 
√w
 
	`PrötWrôî
(
sw
);

391 
	`dumpC⁄√˘i⁄Info
(
pwrôî
, 
Ál£
);

392 
pwrôî
.
	`Êush
();

393 
pwrôî
.
	`˛o£
();

394  
sw
.
	`toSåög
();

395 
	}
}

397 
public
 
ab°ø˘
 
I√tSockëAddªss
 
gëRemŸeSockëAddªss
();

398 
public
 
ab°ø˘
 
gëI¡îe°Ops
();

405 
¥Ÿe˘ed
 
synchr⁄ized
 

406 
	$dumpC⁄√˘i⁄Info
(
PrötWrôî
 
pwrôî
, 
boﬁón
 
brõf
) {

407 
pwrôî
.
	`¥öt
(" ");

408 
pwrôî
.
	`¥öt
(
	`gëRemŸeSockëAddªss
());

409 
pwrôî
.
	`¥öt
("[");

410 
öãª°Ops
 = 
	`gëI¡îe°Ops
();

411 
pwrôî
.
	`¥öt
(
öãª°Ops
 =0 ? "0" : 
I¡egî
.
	`toHexSåög
(interestOps));

412 
pwrôî
.
	`¥öt
("](queued=");

413 
pwrôî
.
	`¥öt
(
	`gëOut°™dögReque°s
());

414 
pwrôî
.
	`¥öt
(",recved=");

415 
pwrôî
.
	`¥öt
(
	`gëPackësRe˚ived
());

416 
pwrôî
.
	`¥öt
(",sent=");

417 
pwrôî
.
	`¥öt
(
	`gëPackësSít
());

419 i‡(!
brõf
) {

420 
£ssi⁄Id
 = 
	`gëSessi⁄Id
();

421 i‡(
£ssi⁄Id
 != 0) {

422 
pwrôî
.
	`¥öt
(",sid=0x");

423 
pwrôî
.
	`¥öt
(
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

424 
pwrôî
.
	`¥öt
(",lop=");

425 
pwrôî
.
	`¥öt
(
	`gëLa°O≥øti⁄
());

426 
pwrôî
.
	`¥öt
(",est=");

427 
pwrôî
.
	`¥öt
(
	`gëE°ablished
().
	`gëTime
());

428 
pwrôî
.
	`¥öt
(",to=");

429 
pwrôî
.
	`¥öt
(
	`gëSessi⁄Timeout
());

430 
œ°Cxid
 = 
	`gëLa°Cxid
();

431 i‡(
œ°Cxid
 >= 0) {

432 
pwrôî
.
	`¥öt
(",lcxid=0x");

433 
pwrôî
.
	`¥öt
(
L⁄g
.
	`toHexSåög
(
œ°Cxid
));

435 
pwrôî
.
	`¥öt
(",lzxid=0x");

436 
pwrôî
.
	`¥öt
(
L⁄g
.
	`toHexSåög
(
	`gëLa°Zxid
()));

437 
pwrôî
.
	`¥öt
(",lresp=");

438 
pwrôî
.
	`¥öt
(
	`gëLa°Re•⁄£Time
());

439 
pwrôî
.
	`¥öt
(",llat=");

440 
pwrôî
.
	`¥öt
(
	`gëLa°L©ícy
());

441 
pwrôî
.
	`¥öt
(",minlat=");

442 
pwrôî
.
	`¥öt
(
	`gëMöL©ícy
());

443 
pwrôî
.
	`¥öt
(",avglat=");

444 
pwrôî
.
	`¥öt
(
	`gëAvgL©ícy
());

445 
pwrôî
.
	`¥öt
(",maxlat=");

446 
pwrôî
.
	`¥öt
(
	`gëMaxL©ícy
());

449 
pwrôî
.
	`¥öt
(")");

450 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

27 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gC⁄figuøti⁄
;

28 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gLogöEx˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
;

31 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gJMEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gLogö
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gEnvú⁄mít
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gSa¶SîvîCÆlbackH™dÀr
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
public
 
ab°ø˘
 cœs†
	cSîvîCnxnFa˘‹y
 {

42 
public
 
föÆ
 
Såög
 
	mZOOKEEPER_SERVER_CNXN_FACTORY
 = "zookeeper.serverCnxnFactory";

44 
public
 
öãrÁ˚
 
	mPackëPro˚ss‹
 {

45 
public
 
¥o˚ssPackë
(
ByãBuf„r
 
∑ckë
, 
SîvîCnxn
 
§c
);

48 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
SîvîCnxnFa˘‹y
.
˛ass
);

53 
föÆ
 
ByãBuf„r
 
	g˛o£C⁄n
 = ByãBuf„r.
Æloˇã
(0);

55 
public
 
ab°ø˘
 
gëLoˇlP‹t
();

57 
public
 
ab°ø˘
 
	gIãøbÀ
<
	gSîvîCnxn
> 
gëC⁄√˘i⁄s
();

59 
public
 
	$gëNumAliveC⁄√˘i⁄s
() {

60 
	`synchr⁄ized
(
˙xns
) {

61  
˙xns
.
	`size
();

63 
	}
}

65 
public
 
ab°ø˘
 
˛o£Sessi⁄
(
£ssi⁄Id
);

67 
public
 
ab°ø˘
 
	$c⁄figuª
(
I√tSockëAddªss
 
addr
,

68 
maxClõ¡Cnxns
Ë
throws
 
IOEx˚±i⁄
;

70 
¥Ÿe˘ed
 
Sa¶SîvîCÆlbackH™dÀr
 
ß¶SîvîCÆlbackH™dÀr
;

71 
public
 
Logö
 
logö
;

74 
public
 
ab°ø˘
 
	`gëMaxClõ¡CnxnsPîHo°
();

77 
public
 
ab°ø˘
 
	`£tMaxClõ¡CnxnsPîHo°
(
max
);

79 
public
 
ab°ø˘
 
	$°¨tup
(
ZooKì≥rSîvî
 
zkSîvî
)

80 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
;

82 
public
 
ab°ø˘
 
	$joö
(Ë
throws
 
I¡îru±edEx˚±i⁄
;

84 
public
 
ab°ø˘
 
	`shutdown
();

86 
public
 
ab°ø˘
 
	`°¨t
();

88 
¥Ÿe˘ed
 
ZooKì≥rSîvî
 
zkSîvî
;

89 
föÆ
 
public
 
	$£tZooKì≥rSîvî
(
ZooKì≥rSîvî
 
zk
) {

90 
this
.
zkSîvî
 = 
zk
;

91 i‡(
zk
 !
nuŒ
) {

92 
zk
.
	`£tSîvîCnxnFa˘‹y
(
this
);

94 
	}
}

96 
public
 
ab°ø˘
 
˛o£AŒ
();

98 
public
 
SîvîCnxnFa˘‹y
 
	$¸óãFa˘‹y
(Ë
throws
 
IOEx˚±i⁄
 {

99 
Såög
 
£rvîCnxnFa˘‹yName
 =

100 
Sy°em
.
	`gëPr›îty
(
ZOOKEEPER_SERVER_CNXN_FACTORY
);

101 i‡(
£rvîCnxnFa˘‹yName
 =
nuŒ
) {

102 
£rvîCnxnFa˘‹yName
 = 
NIOSîvîCnxnFa˘‹y
.
˛ass
.
	`gëName
();

104 
åy
 {

105  (
SîvîCnxnFa˘‹y
Ë
Cœss
.
	`f‹Name
(
£rvîCnxnFa˘‹yName
)

106 .
	`√wIn°™˚
();

107 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

108 
IOEx˚±i⁄
 
i€
 = 
√w
 
	`IOEx˚±i⁄
("Couldn't instantiate "

109 + 
£rvîCnxnFa˘‹yName
);

110 
i€
.
	`öôCau£
(
e
);

111 
throw
 
i€
;

113 
	}
}

115 
public
 
SîvîCnxnFa˘‹y
 
	$¸óãFa˘‹y
(
˛õ¡P‹t
,

116 
maxClõ¡Cnxns
Ë
throws
 
IOEx˚±i⁄


118  
	`¸óãFa˘‹y
(
√w
 
	`I√tSockëAddªss
(
˛õ¡P‹t
), 
maxClõ¡Cnxns
);

119 
	}
}

121 
public
 
SîvîCnxnFa˘‹y
 
	$¸óãFa˘‹y
(
I√tSockëAddªss
 
addr
,

122 
maxClõ¡Cnxns
Ë
throws
 
IOEx˚±i⁄


124 
SîvîCnxnFa˘‹y
 
Á˘‹y
 = 
	`¸óãFa˘‹y
();

125 
Á˘‹y
.
	`c⁄figuª
(
addr
, 
maxClõ¡Cnxns
);

126  
Á˘‹y
;

127 
	}
}

129 
public
 
ab°ø˘
 
I√tSockëAddªss
 
gëLoˇlAddªss
();

131 
¥iv©e
 
föÆ
 
	gHashM≠
<
	gSîvîCnxn
, 
	gC⁄√˘i⁄Bón
> 
	gc⁄√˘i⁄Bóns
 = 
√w
 
HashM≠
<
SîvîCnxn
, ConnectionBean>();

133 
¥Ÿe˘ed
 
föÆ
 
	gHashSë
<
	gSîvîCnxn
> 
	g˙xns
 = 
√w
 
HashSë
<
SîvîCnxn
>();

134 
public
 
	$uƒegi°îC⁄√˘i⁄
(
SîvîCnxn
 
£rvîCnxn
) {

135 
C⁄√˘i⁄Bón
 
jmxC⁄√˘i⁄Bón
 = 
c⁄√˘i⁄Bóns
.
	`ªmove
(
£rvîCnxn
);

136 i‡(
jmxC⁄√˘i⁄Bón
 !
nuŒ
){

137 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxC⁄√˘i⁄Bón
);

139 
	}
}

141 
public
 
	$ªgi°îC⁄√˘i⁄
(
SîvîCnxn
 
£rvîCnxn
) {

142 i‡(
zkSîvî
 !
nuŒ
) {

143 
C⁄√˘i⁄Bón
 
jmxC⁄√˘i⁄Bón
 = 
√w
 
	`C⁄√˘i⁄Bón
(
£rvîCnxn
, 
zkSîvî
);

144 
åy
 {

145 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxC⁄√˘i⁄Bón
, 
zkSîvî
.
jmxSîvîBón
);

146 
c⁄√˘i⁄Bóns
.
	`put
(
£rvîCnxn
, 
jmxC⁄√˘i⁄Bón
);

147 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

148 
LOG
.
	`w¨n
("CouldÇŸÑegi°î c⁄√˘i⁄", 
e
);

152 
	}
}

164 
¥Ÿe˘ed
 
	$c⁄figuªSa¶Logö
(Ë
throws
 
IOEx˚±i⁄
 {

165 
Såög
 
£rvîSe˘i⁄
 = 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Sîvî
.
LOGIN_CONTEXT_NAME_KEY
,

166 
ZooKì≥rSa¶Sîvî
.
DEFAULT_LOGIN_CONTEXT_NAME
);

169 
AµC⁄figuøti⁄E¡ry
 
íåõs
[] = 
nuŒ
;

170 
SecurôyEx˚±i⁄
 
£curôyEx˚±i⁄
 = 
nuŒ
;

171 
åy
 {

172 
íåõs
 = 
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
().
	`gëAµC⁄figuøti⁄E¡ry
(
£rvîSe˘i⁄
);

173 } 
	`ˇtch
 (
SecurôyEx˚±i⁄
 
e
) {

175 
£curôyEx˚±i⁄
 = 
e
;

182 i‡(
íåõs
 =
nuŒ
) {

183 
Såög
 
jØsFûe
 = 
Sy°em
.
	`gëPr›îty
(
Envú⁄mít
.
JAAS_CONF_KEY
);

184 
Såög
 
logöC⁄ãxtName
 = 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Sîvî
.
LOGIN_CONTEXT_NAME_KEY
);

185 i‡(
£curôyEx˚±i⁄
 !
nuŒ
 && (
logöC⁄ãxtName
 !nuŒ || 
jØsFûe
 !=Çull)) {

186 
Såög
 
îr‹Mesßge
 = "NÿJAAS c⁄figuøti⁄ se˘i⁄Çamed '" + 
£rvîSe˘i⁄
 + "' was found";

187 i‡(
jØsFûe
 !
nuŒ
) {

188 
îr‹Mesßge
 +"ö '" + 
jØsFûe
 + "'.";

190 i‡(
logöC⁄ãxtName
 !
nuŒ
) {

191 
îr‹Mesßge
 +" Buà" + 
ZooKì≥rSa¶Sîvî
.
LOGIN_CONTEXT_NAME_KEY
 + " was set.";

193 
LOG
.
	`îr‹
(
îr‹Mesßge
);

194 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹Mesßge
);

200 
åy
 {

201 
ß¶SîvîCÆlbackH™dÀr
 = 
√w
 
	`Sa¶SîvîCÆlbackH™dÀr
(
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
());

202 
logö
 = 
√w
 
	`Logö
(
£rvîSe˘i⁄
, 
ß¶SîvîCÆlbackH™dÀr
);

203 
logö
.
	`°¨tThªadIfNìded
();

204 } 
	`ˇtch
 (
LogöEx˚±i⁄
 
e
) {

205 
throw
 
√w
 
	`IOEx˚±i⁄
("CouldÇot configure server because SASL configuration didÇotállowÅhe "

206 + " ZooKì≥∏£rvîÅÿauthítiˇã it£l‡¥›îly: " + 
e
);

208 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerConfig.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrC⁄fig
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrC⁄fig
.
	gC⁄figEx˚±i⁄
;

33 
public
 cœs†
	cSîvîC⁄fig
 {

38 
¥Ÿe˘ed
 
I√tSockëAddªss
 
	m˛õ¡P‹tAddªss
;

39 
¥Ÿe˘ed
 
Såög
 
	md©aDú
;

40 
¥Ÿe˘ed
 
Såög
 
	md©aLogDú
;

41 
¥Ÿe˘ed
 
	mtickTime
 = 
ZooKì≥rSîvî
.
DEFAULT_TICK_TIME
;

42 
¥Ÿe˘ed
 
	mmaxClõ¡Cnxns
;

44 
¥Ÿe˘ed
 
	mmöSessi⁄Timeout
 = -1;

46 
¥Ÿe˘ed
 
	mmaxSessi⁄Timeout
 = -1;

54 
public
 
	$∑r£
(
Såög
[] 
¨gs
) {

55 i‡(
¨gs
.
Àngth
 < 2 ||árgs.length > 4) {

56 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("Invalidárgs:"

57 + 
Aºays
.
	`toSåög
(
¨gs
));

60 
˛õ¡P‹tAddªss
 = 
√w
 
	`I√tSockëAddªss
(
I¡egî
.
	`∑r£I¡
(
¨gs
[0]));

61 
d©aDú
 = 
¨gs
[1];

62 
d©aLogDú
 = 
d©aDú
;

63 i‡(
¨gs
.
Àngth
 == 3) {

64 
tickTime
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[2]);

66 i‡(
¨gs
.
Àngth
 == 4) {

67 
maxClõ¡Cnxns
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[3]);

77 
public
 
	$∑r£
(
Såög
 
∑th
Ë
throws
 
C⁄figEx˚±i⁄
 {

78 
Qu‹umPìrC⁄fig
 
c⁄fig
 = 
√w
 
	`Qu‹umPìrC⁄fig
();

79 
c⁄fig
.
	`∑r£
(
∑th
);

83 
	`ªadFrom
(
c⁄fig
);

84 
	}
}

90 
public
 
	$ªadFrom
(
Qu‹umPìrC⁄fig
 
c⁄fig
) {

91 
˛õ¡P‹tAddªss
 = 
c⁄fig
.
	`gëClõ¡P‹tAddªss
();

92 
d©aDú
 = 
c⁄fig
.
	`gëD©aDú
();

93 
d©aLogDú
 = 
c⁄fig
.
	`gëD©aLogDú
();

94 
tickTime
 = 
c⁄fig
.
	`gëTickTime
();

95 
maxClõ¡Cnxns
 = 
c⁄fig
.
	`gëMaxClõ¡Cnxns
();

96 
möSessi⁄Timeout
 = 
c⁄fig
.
	`gëMöSessi⁄Timeout
();

97 
maxSessi⁄Timeout
 = 
c⁄fig
.
	`gëMaxSessi⁄Timeout
();

98 
	}
}

100 
public
 
I√tSockëAddªss
 
	$gëClõ¡P‹tAddªss
() {

101  
˛õ¡P‹tAddªss
;

102 
	}
}

103 
public
 
Såög
 
	$gëD©aDú
(Ë{  
d©aDú
; 
	}
}

104 
public
 
Såög
 
	$gëD©aLogDú
(Ë{  
d©aLogDú
; 
	}
}

105 
public
 
	$gëTickTime
(Ë{  
tickTime
; 
	}
}

106 
public
 
	$gëMaxClõ¡Cnxns
(Ë{  
maxClõ¡Cnxns
; 
	}
}

108 
public
 
	$gëMöSessi⁄Timeout
(Ë{  
möSessi⁄Timeout
; 
	}
}

110 
public
 
	$gëMaxSessi⁄Timeout
(Ë{  
maxSessi⁄Timeout
; 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerStats.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

25 
public
 cœs†
	cSîvîSèts
 {

26 
¥iv©e
 
	m∑ckësSít
;

27 
¥iv©e
 
	m∑ckësRe˚ived
;

28 
¥iv©e
 
	mmaxL©ícy
;

29 
¥iv©e
 
	mmöL©ícy
 = 
L⁄g
.
MAX_VALUE
;

30 
¥iv©e
 
	mtŸÆL©ícy
 = 0;

31 
¥iv©e
 
	mcou¡
 = 0;

33 
¥iv©e
 
föÆ
 
Providî
 
	m¥ovidî
;

35 
public
 
öãrÁ˚
 
	mProvidî
 {

36 
public
 
gëOut°™dögReque°s
();

37 
public
 
gëLa°Pro˚s£dZxid
();

38 
public
 
Såög
 
gëSèã
();

39 
public
 
gëNumAliveC⁄√˘i⁄s
();

42 
public
 
	$SîvîSèts
(
Providî
 
¥ovidî
) {

43 
this
.
¥ovidî
 =Örovider;

44 
	}
}

47 
synchr⁄ized
 
public
 
	$gëMöL©ícy
() {

48  
möL©ícy
 =
L⁄g
.
MAX_VALUE
 ? 0 : minLatency;

49 
	}
}

51 
synchr⁄ized
 
public
 
	$gëAvgL©ícy
() {

52 i‡(
cou¡
 != 0) {

53  
tŸÆL©ícy
 / 
cou¡
;

56 
	}
}

58 
synchr⁄ized
 
public
 
	$gëMaxL©ícy
() {

59  
maxL©ícy
;

60 
	}
}

62 
public
 
	$gëOut°™dögReque°s
() {

63  
¥ovidî
.
	`gëOut°™dögReque°s
();

64 
	}
}

66 
public
 
	$gëLa°Pro˚s£dZxid
(){

67  
¥ovidî
.
	`gëLa°Pro˚s£dZxid
();

68 
	}
}

70 
synchr⁄ized
 
public
 
	$gëPackësRe˚ived
() {

71  
∑ckësRe˚ived
;

72 
	}
}

74 
synchr⁄ized
 
public
 
	$gëPackësSít
() {

75  
∑ckësSít
;

76 
	}
}

78 
public
 
Såög
 
	$gëSîvîSèã
() {

79  
¥ovidî
.
	`gëSèã
();

80 
	}
}

83 
public
 
	$gëNumAliveClõ¡C⁄√˘i⁄s
() {

84  
¥ovidî
.
	`gëNumAliveC⁄√˘i⁄s
();

85 
	}
}

87 @
Ovîride


88 
public
 
Såög
 
	$toSåög
(){

89 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

90 
sb
.
	`≠≥nd
("L©ícy mö/avg/max: " + 
	`gëMöL©ícy
() + "/"

91 + 
	`gëAvgL©ícy
(Ë+ "/" + 
	`gëMaxL©ícy
() + "\n");

92 
sb
.
	`≠≥nd
("Re˚ived: " + 
	`gëPackësRe˚ived
() + "\n");

93 
sb
.
	`≠≥nd
("Sít: " + 
	`gëPackësSít
() + "\n");

94 
sb
.
	`≠≥nd
("C⁄√˘i⁄s: " + 
	`gëNumAliveClõ¡C⁄√˘i⁄s
() + "\n");

96 i‡(
¥ovidî
 !
nuŒ
) {

97 
sb
.
	`≠≥nd
("Out°™dög: " + 
	`gëOut°™dögReque°s
() + "\n");

98 
sb
.
	`≠≥nd
("Zxid: 0x"+ 
L⁄g
.
	`toHexSåög
(
	`gëLa°Pro˚s£dZxid
())+ "\n");

100 
sb
.
	`≠≥nd
("Mode: " + 
	`gëSîvîSèã
() + "\n");

101  
sb
.
	`toSåög
();

102 
	}
}

104 
synchr⁄ized
 
	$upd©eL©ícy
(
ªque°Cª©eTime
) {

105 
œãncy
 = 
Sy°em
.
	`cuºítTimeMûlis
(Ë- 
ªque°Cª©eTime
;

106 
tŸÆL©ícy
 +
œãncy
;

107 
cou¡
++;

108 i‡(
œãncy
 < 
möL©ícy
) {

109 
möL©ícy
 = 
œãncy
;

111 i‡(
œãncy
 > 
maxL©ícy
) {

112 
maxL©ícy
 = 
œãncy
;

114 
	}
}

115 
synchr⁄ized
 
public
 
	$ª£tL©ícy
(){

116 
tŸÆL©ícy
 = 0;

117 
cou¡
 = 0;

118 
maxL©ícy
 = 0;

119 
möL©ícy
 = 
L⁄g
.
MAX_VALUE
;

120 
	}
}

121 
synchr⁄ized
 
public
 
	$ª£tMaxL©ícy
(){

122 
maxL©ícy
 = 
	`gëMöL©ícy
();

123 
	}
}

124 
synchr⁄ized
 
public
 
	$ö¸emítPackësRe˚ived
() {

125 
∑ckësRe˚ived
++;

126 
	}
}

127 
synchr⁄ized
 
public
 
	$ö¸emítPackësSít
() {

128 
∑ckësSít
++;

129 
	}
}

130 
synchr⁄ized
 
public
 
	$ª£tReque°Cou¡îs
(){

131 
∑ckësRe˚ived
 = 0;

132 
∑ckësSít
 = 0;

133 
	}
}

134 
synchr⁄ized
 
public
 
	$ª£t
() {

135 
	`ª£tL©ícy
();

136 
	`ª£tReque°Cou¡îs
();

137 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SessionTracker.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄MovedEx˚±i⁄
;

33 
public
 
öãrÁ˚
 
	gSessi⁄Tøckî
 {

34 
public
 
öãrÁ˚
 
	gSessi⁄
 {

35 
gëSessi⁄Id
();

36 
gëTimeout
();

37 
boﬁón
 
isClosög
();

39 
public
 
öãrÁ˚
 
	gSessi⁄Expúî
 {

40 
expúe
(
Sessi⁄
 
£ssi⁄
);

42 
gëSîvîId
();

45 
¸óãSessi⁄
(
£ssi⁄Timeout
);

47 
addSessi⁄
(
id
, 
to
);

54 
boﬁón
 
touchSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

60 
£tSessi⁄Closög
(
£ssi⁄Id
);

65 
shutdown
();

70 
ªmoveSessi⁄
(
£ssi⁄Id
);

72 
checkSessi⁄
(
£ssi⁄Id
, 
Obje˘
 
ow√r
Ë
throws
 
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
, 
	gSessi⁄MovedEx˚±i⁄
;

74 
£tOw√r
(
id
, 
Obje˘
 
ow√r
Ë
throws
 
	gSessi⁄ExpúedEx˚±i⁄
;

80 
dumpSessi⁄s
(
PrötWrôî
 
pwrôî
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gSåögWrôî
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

42 
public
 cœs†
	cSessi⁄TøckîIm∂
 
exãnds
 
Thªad
 
im∂emíts
 
	mSessi⁄Tøckî
 {

43 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sessi⁄TøckîIm∂
.
˛ass
);

45 
	mHashM≠
<
	mL⁄g
, 
	mSessi⁄Im∂
> 
	m£ssi⁄sById
 = 
√w
 
HashM≠
<
L⁄g
, SessionImpl>();

47 
	mHashM≠
<
	mL⁄g
, 
	mSessi⁄Së
> 
	m£ssi⁄Sës
 = 
√w
 
HashM≠
<
L⁄g
, SessionSet>();

49 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mI¡egî
> 
	m£ssi⁄sWôhTimeout
;

50 
	m√xtSessi⁄Id
 = 0;

51 
	m√xtExpú©i⁄Time
;

53 
	mexpú©i⁄I¡îvÆ
;

55 
public
 ˛as†
	cSessi⁄Im∂
 
im∂emíts
 
	mSessi⁄
 {

56 
Sessi⁄Im∂
(
£ssi⁄Id
, 
timeout
, 
expúeTime
) {

57 
	mthis
.
	m£ssi⁄Id
 = 
£ssi⁄Id
;

58 
	mthis
.
	mtimeout
 = 
timeout
;

59 
	mthis
.
	mtickTime
 = 
expúeTime
;

60 
	misClosög
 = 
Ál£
;

63 
föÆ
 
	m£ssi⁄Id
;

64 
föÆ
 
	mtimeout
;

65 
	mtickTime
;

66 
boﬁón
 
	misClosög
;

68 
Obje˘
 
	mow√r
;

70 
public
 
gëSessi⁄Id
(Ë{  
	m£ssi⁄Id
; }

71 
public
 
gëTimeout
(Ë{  
	mtimeout
; }

72 
public
 
boﬁón
 
isClosög
(Ë{  
	misClosög
; }

75 
public
 
	$öôülizeNextSessi⁄
(
id
) {

76 
√xtSid
 = 0;

77 
√xtSid
 = (
Sy°em
.
	`cuºítTimeMûlis
() << 24) >> 8;

78 
√xtSid
 =ÇextSid | (
id
 <<56);

79  
√xtSid
;

80 
	}
}

82 ˛as†
	cSessi⁄Së
 {

83 
	gHashSë
<
	gSessi⁄Im∂
> 
	g£ssi⁄s
 = 
√w
 
HashSë
<
Sessi⁄Im∂
>();

86 
Sessi⁄Expúî
 
	gexpúî
;

88 
¥iv©e
 
	$roundToI¡îvÆ
(
time
) {

90  (
time
 / 
expú©i⁄I¡îvÆ
 + 1) *ÉxpirationInterval;

91 
	}
}

93 
public
 
Sessi⁄TøckîIm∂
(
Sessi⁄Expúî
 
expúî
,

94 
C⁄cuºítHashM≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄sWôhTimeout
, 
tickTime
,

95 
sid
)

97 
su≥r
("SessionTracker");

98 
	gthis
.
	gexpúî
 = 
expúî
;

99 
	gthis
.
	gexpú©i⁄I¡îvÆ
 = 
tickTime
;

100 
	gthis
.
	g£ssi⁄sWôhTimeout
 = 
£ssi⁄sWôhTimeout
;

101 
	g√xtExpú©i⁄Time
 = 
roundToI¡îvÆ
(
Sy°em
.
cuºítTimeMûlis
());

102 
	gthis
.
	g√xtSessi⁄Id
 = 
öôülizeNextSessi⁄
(
sid
);

103 
	gE¡ry
<
	gL⁄g
, 
	gI¡egî
> 
	ge
 : 
£ssi⁄sWôhTimeout
.
íåySë
()) {

104 
addSessi⁄
(
e
.
gëKey
(),É.
gëVÆue
());

108 vﬁ©ûê
boﬁón
 
	gru¬ög
 = 
åue
;

110 vﬁ©ûê
	gcuºítTime
;

112 
synchr⁄ized
 
public
 
	$dumpSessi⁄s
(
PrötWrôî
 
pwrôî
) {

113 
pwrôî
.
	`¥öt
("Session Sets (");

114 
pwrôî
.
	`¥öt
(
£ssi⁄Sës
.
	`size
());

115 
pwrôî
.
	`¥öén
("):");

116 
AºayLi°
<
L⁄g
> 
keys
 = 
√w
 AºayLi°<L⁄g>(
£ssi⁄Sës
.
	`keySë
());

117 
CﬁÀ˘i⁄s
.
	`s‹t
(
keys
);

118 
time
 : 
keys
) {

119 
pwrôî
.
	`¥öt
(
£ssi⁄Sës
.
	`gë
(
time
).
£ssi⁄s
.
	`size
());

120 
pwrôî
.
	`¥öt
("Éxpireát ");

121 
pwrôî
.
	`¥öt
(
√w
 
	`D©e
(
time
));

122 
pwrôî
.
	`¥öén
(":");

123 
Sessi⁄Im∂
 
s
 : 
£ssi⁄Sës
.
	`gë
(
time
).
£ssi⁄s
) {

124 
pwrôî
.
	`¥öt
("\t0x");

125 
pwrôî
.
	`¥öén
(
L⁄g
.
	`toHexSåög
(
s
.
£ssi⁄Id
));

128 
	}
}

130 @
Ovîride


131 
synchr⁄ized
 
public
 
Såög
 
	$toSåög
() {

132 
SåögWrôî
 
sw
 = 
√w
 
	`SåögWrôî
();

133 
PrötWrôî
 
pwrôî
 = 
√w
 
	`PrötWrôî
(
sw
);

134 
	`dumpSessi⁄s
(
pwrôî
);

135 
pwrôî
.
	`Êush
();

136 
pwrôî
.
	`˛o£
();

137  
sw
.
	`toSåög
();

138 
	}
}

140 @
Ovîride


141 
synchr⁄ized
 
public
 
	$run
() {

142 
åy
 {

143 
ru¬ög
) {

144 
cuºítTime
 = 
Sy°em
.
	`cuºítTimeMûlis
();

145 i‡(
√xtExpú©i⁄Time
 > 
cuºítTime
) {

146 
this
.
	`waô
(
√xtExpú©i⁄Time
 - 
cuºítTime
);

149 
Sessi⁄Së
 
£t
;

150 
£t
 = 
£ssi⁄Sës
.
	`ªmove
(
√xtExpú©i⁄Time
);

151 i‡(
£t
 !
nuŒ
) {

152 
Sessi⁄Im∂
 
s
 : 
£t
.
£ssi⁄s
) {

153 
	`£tSessi⁄Closög
(
s
.
£ssi⁄Id
);

154 
expúî
.
	`expúe
(
s
);

157 
√xtExpú©i⁄Time
 +
expú©i⁄I¡îvÆ
;

159 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

160 
LOG
.
	`îr‹
("U√x≥˘ed i¡îru±i⁄", 
e
);

162 
LOG
.
	`öfo
("SessionTrackerImplÉxitedÜoop!");

163 
	}
}

165 
synchr⁄ized
 
public
 
boﬁón
 
	$touchSessi⁄
(
£ssi⁄Id
, 
timeout
) {

166 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

167 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

168 
ZooTø˚
.
CLIENT_PING_TRACE_MASK
,

170 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
Ë+ " wôhÅimeouà" + 
timeout
);

172 
Sessi⁄Im∂
 
s
 = 
£ssi⁄sById
.
	`gë
(
£ssi⁄Id
);

174 i‡(
s
 =
nuŒ
 || s.
	`isClosög
()) {

175  
Ál£
;

177 
expúeTime
 = 
	`roundToI¡îvÆ
(
Sy°em
.
	`cuºítTimeMûlis
(Ë+ 
timeout
);

178 i‡(
s
.
tickTime
 >
expúeTime
) {

180  
åue
;

182 
Sessi⁄Së
 
£t
 = 
£ssi⁄Sës
.
	`gë
(
s
.
tickTime
);

183 i‡(
£t
 !
nuŒ
) {

184 
£t
.
£ssi⁄s
.
	`ªmove
(
s
);

186 
s
.
tickTime
 = 
expúeTime
;

187 
£t
 = 
£ssi⁄Sës
.
	`gë
(
s
.
tickTime
);

188 i‡(
£t
 =
nuŒ
) {

189 
£t
 = 
√w
 
	`Sessi⁄Së
();

190 
£ssi⁄Sës
.
	`put
(
expúeTime
, 
£t
);

192 
£t
.
£ssi⁄s
.
	`add
(
s
);

193  
åue
;

194 
	}
}

196 
synchr⁄ized
 
public
 
	$£tSessi⁄Closög
(
£ssi⁄Id
) {

197 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

198 
LOG
.
	`öfo
("Sessi⁄ closög: 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

200 
Sessi⁄Im∂
 
s
 = 
£ssi⁄sById
.
	`gë
(
£ssi⁄Id
);

201 i‡(
s
 =
nuŒ
) {

204 
s
.
isClosög
 = 
åue
;

205 
	}
}

207 
synchr⁄ized
 
public
 
	$ªmoveSessi⁄
(
£ssi⁄Id
) {

208 
Sessi⁄Im∂
 
s
 = 
£ssi⁄sById
.
	`ªmove
(
£ssi⁄Id
);

209 
£ssi⁄sWôhTimeout
.
	`ªmove
(
£ssi⁄Id
);

210 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

211 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

213 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

215 i‡(
s
 !
nuŒ
) {

216 
Sessi⁄Së
 
£t
 = 
£ssi⁄Sës
.
	`gë
(
s
.
tickTime
);

218 if(
£t
 !
nuŒ
){

219 
£t
.
£ssi⁄s
.
	`ªmove
(
s
);

222 
	}
}

224 
public
 
	$shutdown
() {

225 
LOG
.
	`öfo
("Shutting down");

227 
ru¬ög
 = 
Ál£
;

228 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

229 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
	`gëTextTø˚Levñ
(),

232 
	}
}

235 
synchr⁄ized
 
public
 
	$¸óãSessi⁄
(
£ssi⁄Timeout
) {

236 
	`addSessi⁄
(
√xtSessi⁄Id
, 
£ssi⁄Timeout
);

237  
√xtSessi⁄Id
++;

238 
	}
}

240 
synchr⁄ized
 
public
 
	$addSessi⁄
(
id
, 
£ssi⁄Timeout
) {

241 
£ssi⁄sWôhTimeout
.
	`put
(
id
, 
£ssi⁄Timeout
);

242 i‡(
£ssi⁄sById
.
	`gë
(
id
Ë=
nuŒ
) {

243 
Sessi⁄Im∂
 
s
 = 
√w
 
	`Sessi⁄Im∂
(
id
, 
£ssi⁄Timeout
, 0);

244 
£ssi⁄sById
.
	`put
(
id
, 
s
);

245 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

246 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

248 + 
L⁄g
.
	`toHexSåög
(
id
Ë+ " " + 
£ssi⁄Timeout
);

251 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

252 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

254 + 
L⁄g
.
	`toHexSåög
(
id
Ë+ " " + 
£ssi⁄Timeout
);

257 
	`touchSessi⁄
(
id
, 
£ssi⁄Timeout
);

258 
	}
}

260 
synchr⁄ized
 
public
 
	$checkSessi⁄
(
£ssi⁄Id
, 
Obje˘
 
ow√r
Ë
throws
 
Kì≥rEx˚±i⁄
.
Sessi⁄ExpúedEx˚±i⁄
, Kì≥rEx˚±i⁄.
Sessi⁄MovedEx˚±i⁄
 {

261 
Sessi⁄Im∂
 
£ssi⁄
 = 
£ssi⁄sById
.
	`gë
(
£ssi⁄Id
);

262 i‡(
£ssi⁄
 =
nuŒ
 || sessi⁄.
	`isClosög
()) {

263 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`Sessi⁄ExpúedEx˚±i⁄
();

265 i‡(
£ssi⁄
.
ow√r
 =
nuŒ
) {

266 
£ssi⁄
.
ow√r
 = owner;

267 } i‡(
£ssi⁄
.
ow√r
 != owner) {

268 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`Sessi⁄MovedEx˚±i⁄
();

270 
	}
}

272 
synchr⁄ized
 
public
 
	$£tOw√r
(
id
, 
Obje˘
 
ow√r
Ë
throws
 
Sessi⁄ExpúedEx˚±i⁄
 {

273 
Sessi⁄Im∂
 
£ssi⁄
 = 
£ssi⁄sById
.
	`gë
(
id
);

274 i‡(
£ssi⁄
 =
nuŒ
 || sessi⁄.
	`isClosög
()) {

275 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`Sessi⁄ExpúedEx˚±i⁄
();

277 
£ssi⁄
.
ow√r
 = owner;

278 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SnapshotFormatter.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gCheckedI≈utSåóm
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeS«p
;

40 
public
 cœs†
	cS«pshŸF‹m©ãr
 {

45 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
Ex˚±i⁄
 {

46 i‡(
¨gs
.
Àngth
 != 1) {

47 
Sy°em
.
îr
.
	`¥öén
("USAGE: SnapshotFormatter snapshot_file");

48 
Sy°em
.
	`exô
(2);

51 
√w
 
	`S«pshŸF‹m©ãr
().
	`run
(
¨gs
[0]);

54 
public
 
	$run
(
Såög
 
¢≠shŸFûeName
Ë
throws
 
IOEx˚±i⁄
 {

55 
I≈utSåóm
 
is
 = 
√w
 
	`CheckedI≈utSåóm
(

56 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(
¢≠shŸFûeName
)),

57 
√w
 
	`AdÀr32
());

58 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
is
);

60 
FûeS«p
 
fûeS«p
 = 
√w
 
	`FûeS«p
(
nuŒ
);

62 
D©aTªe
 
d©aTªe
 = 
√w
 
	`D©aTªe
();

63 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
 = 
√w
 
HashM≠
<Long, Integer>();

65 
fûeS«p
.
	`de£rülize
(
d©aTªe
, 
£ssi⁄s
, 
ü
);

67 
	`¥ötDëaûs
(
d©aTªe
, 
£ssi⁄s
);

68 
	}
}

70 
¥iv©e
 
¥ötDëaûs
(
D©aTªe
 
d©aTªe
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
) {

71 
¥ötZnodeDëaûs
(
d©aTªe
);

72 
¥ötSessi⁄Dëaûs
(
d©aTªe
, 
£ssi⁄s
);

75 
¥iv©e
 
	$¥ötZnodeDëaûs
(
D©aTªe
 
d©aTªe
) {

76 
Sy°em
.
out
.
	`¥öén
(
Såög
.
	`f‹m©
("ZNode Details (count=%d):",

77 
d©aTªe
.
	`gëNodeCou¡
()));

79 
	`¥ötZnode
(
d©aTªe
, "/");

80 
Sy°em
.
out
.
	`¥öén
("----");

81 
	}
}

83 
¥iv©e
 
	$¥ötZnode
(
D©aTªe
 
d©aTªe
, 
Såög
 
«me
) {

84 
Sy°em
.
out
.
	`¥öén
("----");

85 
D©aNode
 
n
 = 
d©aTªe
.
	`gëNode
(
«me
);

86 
Së
<
Såög
> 
chûdªn
;

87 
	`synchr⁄ized
(
n
) {

88 
Sy°em
.
out
.
	`¥öén
(
«me
);

89 
	`¥ötSèt
(
n
.
°©
);

90 
Sy°em
.
out
.
	`¥öén
(" d©aLígth = " + 
n
.
d©a
.
Àngth
);

91 
chûdªn
 = 
n
.
	`gëChûdªn
();

93 i‡(
chûdªn
 !
nuŒ
) {

94 
Såög
 
chûd
 : 
chûdªn
) {

95 
	`¥ötZnode
(
d©aTªe
, 
«me
 + («me.
	`equÆs
("/"Ë? "" : "/"Ë+ 
chûd
);

98 
	}
}

100 
¥iv©e
 
¥ötSessi⁄Dëaûs
(
D©aTªe
 
d©aTªe
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
) {

101 
	gSy°em
.
	gout
.
¥öén
("Session Details (sid,Åimeout,ÉphemeralCount):");

102 
	gM≠
.
	gE¡ry
<
	gL⁄g
, 
	gI¡egî
> 
	ge
 : 
£ssi⁄s
.
íåySë
()) {

103 
sid
 = 
e
.
gëKey
();

104 
	gSy°em
.
	gout
.
¥öén
(
Såög
.
f‹m©
("%#016x, %d, %d",

105 
sid
, 
e
.
gëVÆue
(), 
d©aTªe
.
gëEphemîÆs
(sid).
size
()));

109 
¥iv©e
 
	$¥ötSèt
(
SètPîsi°ed
 
°©
) {

110 
	`¥ötHex
("cZxid", 
°©
.
	`gëCzxid
());

111 
Sy°em
.
out
.
	`¥öén
(" ctimê" + 
√w
 
	`D©e
(
°©
.
	`gëCtime
()).
	`toSåög
());

112 
	`¥ötHex
("mZxid", 
°©
.
	`gëMzxid
());

113 
Sy°em
.
out
.
	`¥öén
(" mtimê" + 
√w
 
	`D©e
(
°©
.
	`gëMtime
()).
	`toSåög
());

114 
	`¥ötHex
("pZxid", 
°©
.
	`gëPzxid
());

115 
Sy°em
.
out
.
	`¥öén
(" cvîsi⁄ = " + 
°©
.
	`gëCvîsi⁄
());

116 
Sy°em
.
out
.
	`¥öén
(" d©aVîsi⁄ = " + 
°©
.
	`gëVîsi⁄
());

117 
Sy°em
.
out
.
	`¥öén
("á˛Vîsi⁄ = " + 
°©
.
	`gëAvîsi⁄
());

118 
	`¥ötHex
("ïhemîÆOw√r", 
°©
.
	`gëEphemîÆOw√r
());

119 
	}
}

121 
¥iv©e
 
	$¥ötHex
(
Såög
 
¥efix
, 
vÆue
) {

122 
Sy°em
.
out
.
	`¥öén
(
Såög
.
	`f‹m©
(" %†%#016x", 
¥efix
, 
vÆue
));

123 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/Stats.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

26 
öãrÁ˚
 
	gSèts
 {

29 
D©e
 
gëE°ablished
();

35 
gëOut°™dögReque°s
();

37 
gëPackësRe˚ived
();

39 
gëPackësSít
();

42 
gëMöL©ícy
();

45 
gëAvgL©ícy
();

48 
gëMaxL©ícy
();

51 
Såög
 
gëLa°O≥øti⁄
();

54 
gëLa°Cxid
();

57 
gëLa°Zxid
();

60 
gëLa°Re•⁄£Time
();

63 
gëLa°L©ícy
();

67 
ª£tSèts
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFlushabÀ
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

36 
public
 cœs†
	cSyncReque°Pro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

37 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
SyncReque°Pro˚ss‹
.
˛ass
);

38 
¥iv©e
 
föÆ
 
ZooKì≥rSîvî
 
	mzks
;

39 
¥iv©e
 
föÆ
 
	mLökedBlockögQueue
<
	mReque°
> 
	mqueuedReque°s
 =

40 
√w
 
LökedBlockögQueue
<
Reque°
>();

41 
¥iv©e
 
föÆ
 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

43 
¥iv©e
 
Thªad
 
	m¢≠InPro˚ss
 = 
nuŒ
;

44 vﬁ©ûê
¥iv©e
 
boﬁón
 
	mru¬ög
;

51 
¥iv©e
 
föÆ
 
	mLökedLi°
<
	mReque°
> 
	mtoFlush
 = 
√w
 
LökedLi°
<
Reque°
>();

52 
¥iv©e
 
föÆ
 
R™dom
 
	mr
 = 
√w
 R™dom(
Sy°em
.
«noTime
());

56 
¥iv©e
 
	m¢≠Cou¡
 = 
ZooKì≥rSîvî
.
gëS«pCou¡
();

58 
¥iv©e
 
föÆ
 
Reque°
 
	mªque°OfDóth
 = Reque°.
ªque°OfDóth
;

60 
public
 
	$SyncReque°Pro˚ss‹
(
ZooKì≥rSîvî
 
zks
,

61 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
)

63 
	`su≥r
("SyncThªad:" + 
zks
.
	`gëSîvîId
());

64 
this
.
zks
 = zks;

65 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

66 
ru¬ög
 = 
åue
;

74 
public
 
	$£tS«pCou¡
(
cou¡
) {

75 
¢≠Cou¡
 = 
cou¡
;

76 
	}
}

82 
public
 
	$gëS«pCou¡
() {

83  
¢≠Cou¡
;

84 
	}
}

86 @
Ovîride


87 
public
 
	$run
() {

88 
åy
 {

89 
logCou¡
 = 0;

93 
øndRﬁl
 = 
r
.
	`√xtI¡
(
¢≠Cou¡
/2);

94 
åue
) {

95 
Reque°
 
si
 = 
nuŒ
;

96 i‡(
toFlush
.
	`isEm±y
()) {

97 
si
 = 
queuedReque°s
.
	`èke
();

99 
si
 = 
queuedReque°s
.
	`pﬁl
();

100 i‡(
si
 =
nuŒ
) {

101 
	`Êush
(
toFlush
);

105 i‡(
si
 =
ªque°OfDóth
) {

108 i‡(
si
 !
nuŒ
) {

110 i‡(
zks
.
	`gëZKD©aba£
().
	`≠≥nd
(
si
)) {

111 
logCou¡
++;

112 i‡(
logCou¡
 > (
¢≠Cou¡
 / 2 + 
øndRﬁl
)) {

113 
øndRﬁl
 = 
r
.
	`√xtI¡
(
¢≠Cou¡
/2);

115 
zks
.
	`gëZKD©aba£
().
	`rﬁlLog
();

117 i‡(
¢≠InPro˚ss
 !
nuŒ
 && s«pInPro˚ss.
	`isAlive
()) {

118 
LOG
.
	`w¨n
("Too busyÅo snap, skipping");

120 
¢≠InPro˚ss
 = 
√w
 
	`Thªad
("Snapshot Thread") {

121 
public
 
	`run
() {

122 
åy
 {

123 
zks
.
	`èkeS«pshŸ
();

124 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

125 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

129 
¢≠InPro˚ss
.
	`°¨t
();

131 
logCou¡
 = 0;

133 } i‡(
toFlush
.
	`isEm±y
()) {

138 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
si
);

139 i‡(
√xtPro˚ss‹
 
ö°™˚of
 
FlushabÀ
) {

140 ((
FlushabÀ
)
√xtPro˚ss‹
).
	`Êush
();

144 
toFlush
.
	`add
(
si
);

145 i‡(
toFlush
.
	`size
() > 1000) {

146 
	`Êush
(
toFlush
);

150 } 
	`ˇtch
 (
ThrowabÀ
 
t
) {

151 
LOG
.
	`îr‹
("SevîêuƒecovîabÀÉº‹,Éxôög", 
t
);

152 
ru¬ög
 = 
Ál£
;

153 
Sy°em
.
	`exô
(11);

155 
LOG
.
	`öfo
("SyncRequestProcessorÉxited!");

156 
	}
}

158 
¥iv©e
 
Êush
(
LökedLi°
<
Reque°
> 
toFlush
)

159 
throws
 
	gIOEx˚±i⁄
, 
	gReque°Pro˚ss‹Ex˚±i⁄


161 i‡(
	gtoFlush
.
isEm±y
())

164 
	gzks
.
gëZKD©aba£
().
commô
();

165 !
	gtoFlush
.
isEm±y
()) {

166 
Reque°
 
	gi
 = 
toFlush
.
ªmove
();

167 
	g√xtPro˚ss‹
.
¥o˚ssReque°
(
i
);

169 i‡(
√xtPro˚ss‹
 
ö°™˚of
 
	gFlushabÀ
) {

170 ((
	gFlushabÀ
)
	g√xtPro˚ss‹
).
Êush
();

174 
public
 
	$shutdown
() {

175 
LOG
.
	`öfo
("Shutting down");

176 
queuedReque°s
.
	`add
(
ªque°OfDóth
);

177 
åy
 {

178 if(
ru¬ög
){

179 
this
.
	`joö
();

181 } 
	`ˇtch
(
I¡îru±edEx˚±i⁄
 
e
) {

182 
LOG
.
	`w¨n
("I¡îru±ed whûêw©ög f‹ " + 
this
 + "Åo finish");

184 
√xtPro˚ss‹
.
	`shutdown
();

185 
	}
}

187 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

189 
queuedReque°s
.
	`add
(
ªque°
);

190 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/TraceFormatter.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gFûeCh™√l
;

25 
imp‹t
 
	gjava
.
	gãxt
.
	gD©eF‹m©
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

30 
public
 cœs†
	cTø˚F‹m©ãr
 {

32 
Såög
 
	$›2Såög
(
›
) {

33 
›
) {

34 
OpCode
.
nŸifiˇti⁄
:

36 
OpCode
.
¸óã
:

38 
OpCode
.
dñëe
:

40 
OpCode
.
exi°s
:

42 
OpCode
.
gëD©a
:

44 
OpCode
.
£tD©a
:

46 
OpCode
.
mu…i
:

48 
OpCode
.
gëACL
:

50 
OpCode
.
£tACL
:

52 
OpCode
.
gëChûdªn
:

54 
OpCode
.
gëChûdªn2
:

56 
OpCode
.
pög
:

58 
OpCode
.
¸óãSessi⁄
:

60 
OpCode
.
˛o£Sessi⁄
:

62 
OpCode
.
îr‹
:

65  "unknow¿" + 
›
;

73 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
IOEx˚±i⁄
 {

74 i‡(
¨gs
.
Àngth
 != 1) {

75 
Sy°em
.
îr
.
	`¥öén
("USAGE: TraceFormatterÅrace_file");

76 
Sy°em
.
	`exô
(2);

78 
FûeCh™√l
 
fc
 = 
√w
 
	`FûeI≈utSåóm
(
¨gs
[0]).
	`gëCh™√l
();

79 
åue
) {

80 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`Æloˇã
(41);

81 
fc
.
	`ªad
(
bb
);

82 
bb
.
	`Êù
();

84 
byã
 
≠p
 = 
bb
.
	`gë
();

85 
time
 = 
bb
.
	`gëL⁄g
();

86 
id
 = 
bb
.
	`gëL⁄g
();

87 
cxid
 = 
bb
.
	`gëI¡
();

88 
zxid
 = 
bb
.
	`gëL⁄g
();

89 
txnTy≥
 = 
bb
.
	`gëI¡
();

90 
ty≥
 = 
bb
.
	`gëI¡
();

91 
Àn
 = 
bb
.
	`gëI¡
();

92 
bb
 = 
ByãBuf„r
.
	`Æloˇã
(
Àn
);

93 
fc
.
	`ªad
(
bb
);

94 
bb
.
	`Êù
();

95 
Såög
 
∑th
 = "n/a";

96 i‡(
bb
.
	`ªmaöög
() > 0) {

97 i‡(
ty≥
 !
OpCode
.
¸óãSessi⁄
) {

98 
∑thLí
 = 
bb
.
	`gëI¡
();

99 
byã
 
b
[] = 
√w
 byã[
∑thLí
];

100 
bb
.
	`gë
(
b
);

101 
∑th
 = 
√w
 
	`Såög
(
b
);

104 
Sy°em
.
out
.
	`¥öén
(
D©eF‹m©
.
	`gëD©eTimeIn°™˚
(D©eF‹m©.
SHORT
,

105 
D©eF‹m©
.
LONG
).
	`f‹m©
(
√w
 
	`D©e
(
time
))

107 + (Ë
≠p


109 + 
L⁄g
.
	`toHexSåög
(
id
)

111 + 
cxid


113 + 
	`›2Såög
(
ty≥
)

115 + 
L⁄g
.
	`toHexSåög
(
zxid
)

117 + 
txnTy≥


119 + 
Àn
 + "Ö©h=" + 
∑th
);

121 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/WatchManager.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

38 
public
 cœs†
	cW©chM™agî
 {

39 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
W©chM™agî
.
˛ass
);

41 
¥iv©e
 
föÆ
 
	mHashM≠
<
	mSåög
, 
	mHashSë
<
	mW©chî
>> 
	mw©chTabÀ
 =

42 
√w
 
HashM≠
<
Såög
, 
	mHashSë
<
	mW©chî
>>();

44 
¥iv©e
 
föÆ
 
	mHashM≠
<
	mW©chî
, 
	mHashSë
<
	mSåög
>> 
	mw©ch2P©hs
 =

45 
√w
 
HashM≠
<
W©chî
, 
	mHashSë
<
	mSåög
>>();

47 
public
 
synchr⁄ized
 
	$size
(){

48 
ªsu…
 = 0;

49 
Së
<
W©chî
> 
w©ches
 : 
w©chTabÀ
.
	`vÆues
()) {

50 
ªsu…
 +
w©ches
.
	`size
();

52  
ªsu…
;

55 
public
 
synchr⁄ized
 
	$addW©ch
(
Såög
 
∑th
, 
W©chî
 
w©chî
) {

56 
HashSë
<
W©chî
> 
li°
 = 
w©chTabÀ
.
	`gë
(
∑th
);

57 i‡(
li°
 =
nuŒ
) {

61 
li°
 = 
√w
 
HashSë
<
W©chî
>(4);

62 
w©chTabÀ
.
	`put
(
∑th
, 
li°
);

64 
li°
.
	`add
(
w©chî
);

66 
HashSë
<
Såög
> 
∑ths
 = 
w©ch2P©hs
.
	`gë
(
w©chî
);

67 i‡(
∑ths
 =
nuŒ
) {

69 
∑ths
 = 
√w
 
HashSë
<
Såög
>();

70 
w©ch2P©hs
.
	`put
(
w©chî
, 
∑ths
);

72 
∑ths
.
	`add
(
∑th
);

73 
	}
}

75 
public
 
synchr⁄ized
 
	$ªmoveW©chî
(
W©chî
 
w©chî
) {

76 
HashSë
<
Såög
> 
∑ths
 = 
w©ch2P©hs
.
	`ªmove
(
w©chî
);

77 i‡(
∑ths
 =
nuŒ
) {

80 
Såög
 
p
 : 
∑ths
) {

81 
HashSë
<
W©chî
> 
li°
 = 
w©chTabÀ
.
	`gë
(
p
);

82 i‡(
li°
 !
nuŒ
) {

83 
li°
.
	`ªmove
(
w©chî
);

84 i‡(
li°
.
	`size
() == 0) {

85 
w©chTabÀ
.
	`ªmove
(
p
);

89 
	}
}

91 
public
 
	gSë
<
	gW©chî
> 
	$åiggîW©ch
(
Såög
 
∑th
, 
EvítTy≥
 
ty≥
) {

92  
	`åiggîW©ch
(
∑th
, 
ty≥
, 
nuŒ
);

93 
	}
}

95 
public
 
	gSë
<
	gW©chî
> 
åiggîW©ch
(
Såög
 
∑th
, 
EvítTy≥
 
ty≥
, 
Së
<
W©chî
> 
su¥ess
) {

96 
W©chedEvít
 
	ge
 = 
√w
 W©chedEvít(
ty≥
,

97 
Kì≥rSèã
.
SyncC⁄√˘ed
, 
∑th
);

98 
	gHashSë
<
	gW©chî
> 
	gw©chîs
;

99 
synchr⁄ized
 (
this
) {

100 
	gw©chîs
 = 
w©chTabÀ
.
ªmove
(
∑th
);

101 i‡(
	gw©chîs
 =
nuŒ
 || 
w©chîs
.
isEm±y
()) {

102 i‡(
LOG
.
isTø˚E«bÀd
()) {

103 
ZooTø˚
.
logTø˚Mesßge
(
LOG
,

104 
ZooTø˚
.
EVENT_DELIVERY_TRACE_MASK
,

105 "Nÿw©chî†f‹ " + 
∑th
);

107  
	gnuŒ
;

109 
W©chî
 
	gw
 : 
w©chîs
) {

110 
HashSë
<
Såög
> 
∑ths
 = 
w©ch2P©hs
.
gë
(
w
);

111 i‡(
	g∑ths
 !
nuŒ
) {

112 
∑ths
.
ªmove
(
∑th
);

116 
W©chî
 
	gw
 : 
w©chîs
) {

117 i‡(
su¥ess
 !
nuŒ
 && su¥ess.
c⁄èös
(
w
)) {

120 
	gw
.
¥o˚ss
(
e
);

122  
	gw©chîs
;

128 @
Ovîride


129 
public
 
synchr⁄ized
 
Såög
 
	$toSåög
() {

130 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

132 
sb
.
	`≠≥nd
(
w©ch2P©hs
.
	`size
()).append(" connections watching ")

133 .
	`≠≥nd
(
w©chTabÀ
.
	`size
()).append("Öaths\n");

135 
tŸÆ
 = 0;

136 
HashSë
<
Såög
> 
∑ths
 : 
w©ch2P©hs
.
	`vÆues
()) {

137 
tŸÆ
 +
∑ths
.
	`size
();

139 
sb
.
	`≠≥nd
("TŸÆ w©ches:").≠≥nd(
tŸÆ
);

141  
sb
.
	`toSåög
();

142 
	}
}

150 
public
 
synchr⁄ized
 
	$dumpW©ches
(
PrötWrôî
 
pwrôî
, 
boﬁón
 
byP©h
) {

151 i‡(
byP©h
) {

152 
E¡ry
<
Såög
, 
HashSë
<
W©chî
>> 
e
 : 
w©chTabÀ
.
	`íåySë
()) {

153 
pwrôî
.
	`¥öén
(
e
.
	`gëKey
());

154 
W©chî
 
w
 : 
e
.
	`gëVÆue
()) {

155 
pwrôî
.
	`¥öt
("\t0x");

156 
pwrôî
.
	`¥öt
(
L⁄g
.
	`toHexSåög
(((
SîvîCnxn
)
w
).
	`gëSessi⁄Id
()));

157 
pwrôî
.
	`¥öt
("\n");

161 
E¡ry
<
W©chî
, 
HashSë
<
Såög
>> 
e
 : 
w©ch2P©hs
.
	`íåySë
()) {

162 
pwrôî
.
	`¥öt
("0x");

163 
pwrôî
.
	`¥öén
(
L⁄g
.
	`toHexSåög
(((
SîvîCnxn
)
e
.
	`gëKey
()).
	`gëSessi⁄Id
()));

164 
Såög
 
∑th
 : 
e
.
	`gëVÆue
()) {

165 
pwrôî
.
	`¥öt
("\t");

166 
pwrôî
.
	`¥öén
(
∑th
);

170 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZKDatabase.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	glocks
.
	gRì¡ø¡RódWrôeLock
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	glocks
.
	gRì¡ø¡RódWrôeLock
.
	gRódLock
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	glocks
.
	gRì¡ø¡RódWrôeLock
.
	gWrôeLock
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
.
	gPro˚ssTxnResu…
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
.
	gPœyBackLi°íî
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gPr›oßl
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPackë
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

59 
public
 cœs†
	cZKD©aba£
 {

61 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZKD©aba£
.
˛ass
);

67 
¥Ÿe˘ed
 
D©aTªe
 
	md©aTªe
;

68 
¥Ÿe˘ed
 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mI¡egî
> 
	m£ssi⁄sWôhTimeouts
;

69 
¥Ÿe˘ed
 
FûeTxnS«pLog
 
	m¢≠Log
;

70 
¥Ÿe˘ed
 
	mmöCommôãdLog
, 
	mmaxCommôãdLog
;

71 
public
 
föÆ
 
	mcommôLogCou¡
 = 500;

72 
¥Ÿe˘ed
 
	mcommôLogBuf„r
 = 700;

73 
¥Ÿe˘ed
 
	mLökedLi°
<
	mPr›oßl
> 
	mcommôãdLog
 = 
√w
 
LökedLi°
<
Pr›oßl
>();

74 
¥Ÿe˘ed
 
Rì¡ø¡RódWrôeLock
 
	mlogLock
 = 
√w
 ReentrantReadWriteLock();

75 vﬁ©ûê
¥iv©e
 
boﬁón
 
	möôülized
 = 
Ál£
;

83 
public
 
	$ZKD©aba£
(
FûeTxnS«pLog
 
¢≠Log
) {

84 
d©aTªe
 = 
√w
 
	`D©aTªe
();

85 
£ssi⁄sWôhTimeouts
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
I¡egî
>();

86 
this
.
¢≠Log
 = snapLog;

94 
public
 
boﬁón
 
	$isInôülized
() {

95  
öôülized
;

96 
	}
}

104 
public
 
	$˛ór
() {

105 
möCommôãdLog
 = 0;

106 
maxCommôãdLog
 = 0;

110 
d©aTªe
 = 
√w
 
	`D©aTªe
();

111 
£ssi⁄sWôhTimeouts
.
	`˛ór
();

112 
WrôeLock
 
lock
 = 
logLock
.
	`wrôeLock
();

113 
åy
 {

114 
lock
.
	`lock
();

115 
commôãdLog
.
	`˛ór
();

116 } 
föÆly
 {

117 
lock
.
	`u∆ock
();

119 
öôülized
 = 
Ál£
;

120 
	}
}

126 
public
 
D©aTªe
 
	$gëD©aTªe
() {

127  
this
.
d©aTªe
;

128 
	}
}

134 
public
 
	$gëmaxCommôãdLog
() {

135  
maxCommôãdLog
;

136 
	}
}

145 
public
 
	$gëmöCommôãdLog
() {

146  
möCommôãdLog
;

147 
	}
}

153 
public
 
Rì¡ø¡RódWrôeLock
 
	$gëLogLock
() {

154  
logLock
;

155 
	}
}

158 
public
 
synchr⁄ized
 
	gLökedLi°
<
	gPr›oßl
> 
	$gëCommôãdLog
() {

159 
RódLock
 
æ
 = 
logLock
.
	`ªadLock
();

161 if(
logLock
.
	`gëRódHﬁdCou¡
() <=0) {

162 
åy
 {

163 
æ
.
	`lock
();

164  
√w
 
LökedLi°
<
Pr›oßl
>(
this
.
commôãdLog
);

165 } 
föÆly
 {

166 
æ
.
	`u∆ock
();

169  
this
.
commôãdLog
;

170 
	}
}

176 
public
 
	$gëD©aTªeLa°Pro˚s£dZxid
() {

177  
d©aTªe
.
œ°Pro˚s£dZxid
;

178 
	}
}

184 
public
 
	$£tD©aTªeInô
(
boﬁón
 
b
) {

185 
d©aTªe
.
öôülized
 = 
b
;

186 
	}
}

192 
public
 
	gCﬁÀ˘i⁄
<
	gL⁄g
> 
	$gëSessi⁄s
() {

193  
d©aTªe
.
	`gëSessi⁄s
();

194 
	}
}

200 
public
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gI¡egî
> 
	$gëSessi⁄WôhTimeOuts
() {

201  
£ssi⁄sWôhTimeouts
;

202 
	}
}

211 
public
 
	$lﬂdD©aBa£
(Ë
throws
 
IOEx˚±i⁄
 {

212 
PœyBackLi°íî
 
li°íî
=
√w
 
	`PœyBackLi°íî
(){

213 
public
 
	`⁄TxnLﬂded
(
TxnHódî
 
hdr
,
Rec‹d
 
txn
){

214 
Reque°
 
r
 = 
√w
 
	`Reque°
(
nuŒ
, 0, 
hdr
.
	`gëCxid
(),hdr.
	`gëTy≥
(),

215 
nuŒ
,Çull);

216 
r
.
txn
 =Åxn;

217 
r
.
hdr
 = hdr;

218 
r
.
zxid
 = 
hdr
.
	`gëZxid
();

219 
	`addCommôãdPr›oßl
(
r
);

223 
zxid
 = 
¢≠Log
.
	`ª°‹e
(
d©aTªe
,
£ssi⁄sWôhTimeouts
,
li°íî
);

224 
öôülized
 = 
åue
;

225  
zxid
;

226 
	}
}

234 
public
 
	$addCommôãdPr›oßl
(
Reque°
 
ªque°
) {

235 
WrôeLock
 
wl
 = 
logLock
.
	`wrôeLock
();

236 
åy
 {

237 
wl
.
	`lock
();

238 i‡(
commôãdLog
.
	`size
(Ë> 
commôLogCou¡
) {

239 
commôãdLog
.
	`ªmoveFú°
();

240 
möCommôãdLog
 = 
commôãdLog
.
	`gëFú°
().
∑ckë
.
	`gëZxid
();

242 i‡(
commôãdLog
.
	`size
() == 0) {

243 
möCommôãdLog
 = 
ªque°
.
zxid
;

244 
maxCommôãdLog
 = 
ªque°
.
zxid
;

247 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

248 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

249 
åy
 {

250 
ªque°
.
hdr
.
	`£rülize
(
bﬂ
, "hdr");

251 i‡(
ªque°
.
txn
 !
nuŒ
) {

252 
ªque°
.
txn
.
	`£rülize
(
bﬂ
, "txn");

254 
baos
.
	`˛o£
();

255 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

256 
LOG
.
	`îr‹
("Thi†ªÆly should bêimpossibÀ", 
e
);

258 
Qu‹umPackë
 
µ
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
PROPOSAL
, 
ªque°
.
zxid
,

259 
baos
.
	`toByãAºay
(), 
nuŒ
);

260 
Pr›oßl
 
p
 = 
√w
 
	`Pr›oßl
();

261 
p
.
∑ckë
 = 
µ
;

262 
p
.
ªque°
 =Ñequest;

263 
commôãdLog
.
	`add
(
p
);

264 
maxCommôãdLog
 = 
p
.
∑ckë
.
	`gëZxid
();

265 } 
föÆly
 {

266 
wl
.
	`u∆ock
();

268 
	}
}

275 
public
 
	$ªmoveCnxn
(
SîvîCnxn
 
˙xn
) {

276 
d©aTªe
.
	`ªmoveCnxn
(
˙xn
);

277 
	}
}

284 
public
 
	$kûlSessi⁄
(
£ssi⁄Id
, 
zxid
) {

285 
d©aTªe
.
	`kûlSessi⁄
(
£ssi⁄Id
, 
zxid
);

286 
	}
}

292 
public
 
	$dumpEphemîÆs
(
PrötWrôî
 
pwrôî
) {

293 
d©aTªe
.
	`dumpEphemîÆs
(
pwrôî
);

294 
	}
}

300 
public
 
	$gëNodeCou¡
() {

301  
d©aTªe
.
	`gëNodeCou¡
();

302 
	}
}

309 
public
 
	gHashSë
<
	gSåög
> 
	$gëEphemîÆs
(
£ssi⁄Id
) {

310  
d©aTªe
.
	`gëEphemîÆs
(
£ssi⁄Id
);

311 
	}
}

317 
public
 
	$£éa°Pro˚s£dZxid
(
zxid
) {

318 
d©aTªe
.
œ°Pro˚s£dZxid
 = 
zxid
;

319 
	}
}

328 
public
 
Pro˚ssTxnResu…
 
	$¥o˚ssTxn
(
TxnHódî
 
hdr
, 
Rec‹d
 
txn
) {

329  
d©aTªe
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

330 
	}
}

339 
public
 
Sèt
 
	$°©Node
(
Såög
 
∑th
, 
SîvîCnxn
 
£rvîCnxn
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

340  
d©aTªe
.
	`°©Node
(
∑th
, 
£rvîCnxn
);

341 
	}
}

348 
public
 
D©aNode
 
	$gëNode
(
Såög
 
∑th
) {

349  
d©aTªe
.
	`gëNode
(
∑th
);

350 
	}
}

357 
public
 
	gLi°
<
	gACL
> 
	$c⁄vîtL⁄g
(
L⁄g
 
a˛L
) {

358  
d©aTªe
.
	`c⁄vîtL⁄g
(
a˛L
);

359 
	}
}

369 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
)

370 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

371  
d©aTªe
.
	`gëD©a
(
∑th
, 
°©
, 
w©chî
);

372 
	}
}

382 
public
 
£tW©ches
(
ªœtiveZxid
, 
Li°
<
Såög
> 
d©aW©ches
,

383 
Li°
<
Såög
> 
exi°W©ches
, Li°<Såög> 
chûdW©ches
, 
W©chî
 
w©chî
) {

384 
	gd©aTªe
.
£tW©ches
(
ªœtiveZxid
, 
d©aW©ches
, 
exi°W©ches
, 
chûdW©ches
, 
w©chî
);

394 
public
 
	gLi°
<
	gACL
> 
	$gëACL
(
Såög
 
∑th
, 
Sèt
 
°©
Ë
throws
 
NoNodeEx˚±i⁄
 {

395  
d©aTªe
.
	`gëACL
(
∑th
, 
°©
);

396 
	}
}

406 
public
 
	gLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
)

407 
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

408  
d©aTªe
.
	`gëChûdªn
(
∑th
, 
°©
, 
w©chî
);

409 
	}
}

416 
public
 
boﬁón
 
	$isS≥cülP©h
(
Såög
 
∑th
) {

417  
d©aTªe
.
	`isS≥cülP©h
(
∑th
);

418 
	}
}

424 
public
 
	$gëA˛Size
() {

425  
d©aTªe
.
l⁄gKeyM≠
.
	`size
();

426 
	}
}

434 
public
 
boﬁón
 
	$åunˇãLog
(
zxid
Ë
throws
 
IOEx˚±i⁄
 {

435 
	`˛ór
();

438 
boﬁón
 
åunˇãd
 = 
¢≠Log
.
	`åunˇãLog
(
zxid
);

440 i‡(!
åunˇãd
) {

441  
Ál£
;

444 
	`lﬂdD©aBa£
();

445  
åue
;

446 
	}
}

453 
public
 
	$de£rülizeS«pshŸ
(
I≈utArchive
 
ü
Ë
throws
 
IOEx˚±i⁄
 {

454 
	`˛ór
();

455 
SîülizeUtûs
.
	`de£rülizeS«pshŸ
(
	`gëD©aTªe
(),
ü
,
	`gëSessi⁄WôhTimeOuts
());

456 
öôülized
 = 
åue
;

457 
	}
}

465 
public
 
	$£rülizeS«pshŸ
(
OuçutArchive
 
ﬂ
Ë
throws
 
IOEx˚±i⁄
,

466 
I¡îru±edEx˚±i⁄
 {

467 
SîülizeUtûs
.
	`£rülizeS«pshŸ
(
	`gëD©aTªe
(), 
ﬂ
, 
	`gëSessi⁄WôhTimeOuts
());

468 
	}
}

475 
public
 
boﬁón
 
	$≠≥nd
(
Reque°
 
si
Ë
throws
 
IOEx˚±i⁄
 {

476  
this
.
¢≠Log
.
	`≠≥nd
(
si
);

477 
	}
}

482 
public
 
	$rﬁlLog
(Ë
throws
 
IOEx˚±i⁄
 {

483 
this
.
¢≠Log
.
	`rﬁlLog
();

484 
	}
}

490 
public
 
	$commô
(Ë
throws
 
IOEx˚±i⁄
 {

491 
this
.
¢≠Log
.
	`commô
();

492 
	}
}

498 
public
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

499 
this
.
¢≠Log
.
	`˛o£
();

500 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	g£curôy
.
	gPröcùÆ
;

22 
imp‹t
 
	gjava
.
	g£curôy
.
	gPrivûegedA˘i⁄Ex˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g£curôy
.
	gPrivûegedEx˚±i⁄A˘i⁄
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gSubje˘
;

27 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶
;

28 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Ex˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Sîvî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gLogö
;

32 
public
 cœs†
	cZooKì≥rSa¶Sîvî
 {

33 
public
 
föÆ
 
Såög
 
	mLOGIN_CONTEXT_NAME_KEY
 = "zookeeper.sasl.serverconfig";

34 
public
 
föÆ
 
Såög
 
	mDEFAULT_LOGIN_CONTEXT_NAME
 = "Server";

36 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSa¶Sîvî
.
˛ass
);

37 
¥iv©e
 
Sa¶Sîvî
 
	mß¶Sîvî
;

39 
	$ZooKì≥rSa¶Sîvî
(
föÆ
 
Logö
 
logö
) {

40 
ß¶Sîvî
 = 
	`¸óãSa¶Sîvî
(
logö
);

43 
¥iv©e
 
Sa¶Sîvî
 
	$¸óãSa¶Sîvî
(
föÆ
 
Logö
 
logö
) {

44 
	`synchr⁄ized
 (
logö
) {

45 
Subje˘
 
subje˘
 = 
logö
.
	`gëSubje˘
();

46 i‡(
subje˘
 !
nuŒ
) {

48 i‡(
subje˘
.
	`gëPröcùÆs
().
	`size
() > 0) {

49 
åy
 {

50 
föÆ
 
Obje˘
[] 
¥öcùÆs
 = 
subje˘
.
	`gëPröcùÆs
().
	`toAºay
();

51 
föÆ
 
PröcùÆ
 
£rvi˚PröcùÆ
 = (PröcùÆ)
¥öcùÆs
[0];

54 
föÆ
 
Såög
 
£rvi˚PröcùÆNameAndHo°«me
 = 
£rvi˚PröcùÆ
.
	`gëName
();

56 
ödexOf
 = 
£rvi˚PröcùÆNameAndHo°«me
.
	`ödexOf
("/");

59 
föÆ
 
Såög
 
£rvi˚PröcùÆName
 = 
£rvi˚PröcùÆNameAndHo°«me
.
	`sub°rög
(0, 
ödexOf
);

62 
föÆ
 
Såög
 
£rvi˚Ho°«meAndKîbDomaö
 = 
£rvi˚PröcùÆNameAndHo°«me
.
	`sub°rög
(
ödexOf
+1,£rvi˚PröcùÆNameAndHo°«me.
	`Àngth
());

64 
ödexOf
 = 
£rvi˚Ho°«meAndKîbDomaö
.
	`ödexOf
("@");

66 
föÆ
 
Såög
 
£rvi˚Ho°«me
 = 
£rvi˚Ho°«meAndKîbDomaö
.
	`sub°rög
(0,
ödexOf
);

68 
föÆ
 
Såög
 
mech
 = "GSSAPI";

70 
LOG
.
	`debug
("£rvi˚Ho°«mêi†'"+ 
£rvi˚Ho°«me
 + "'");

71 
LOG
.
	`debug
("£rvi˚PröcùÆNamêi†"+ 
£rvi˚PröcùÆName
 + "'");

72 
LOG
.
	`debug
("SASL mech™ism(mechËi†"+ 
mech
 +"'");

74 
åy
 {

75  
Subje˘
.
	`doAs
(
subje˘
,
√w
 
PrivûegedEx˚±i⁄A˘i⁄
<
Sa¶Sîvî
>() {

76 
public
 
Sa¶Sîvî
 
	`run
() {

77 
åy
 {

78 
Sa¶Sîvî
 
ß¶Sîvî
;

79 
ß¶Sîvî
 = 
Sa¶
.
	`¸óãSa¶Sîvî
(
mech
, 
£rvi˚PröcùÆName
, 
£rvi˚Ho°«me
, 
nuŒ
, 
logö
.
ˇŒbackH™dÀr
);

80  
ß¶Sîvî
;

82 
	`ˇtch
 (
Sa¶Ex˚±i⁄
 
e
) {

83 
LOG
.
	`îr‹
("Zookì≥∏Sîvî faûedÅÿ¸óãá Sa¶SîvîÅÿöãø˘ wôhá clõ¡ durög sessi⁄ inôüti⁄: " + 
e
);

84 
e
.
	`¥ötSèckTø˚
();

85  
nuŒ
;

91 
	`ˇtch
 (
PrivûegedA˘i⁄Ex˚±i⁄
 
e
) {

93 
LOG
.
	`îr‹
("Zookì≥∏Qu‹um membîÉx≥rõn˚dá PrivûegedA˘i⁄Ex˚±i⁄Éx˚±i⁄ whûê¸ótögá Sa¶Sîvî usögá JAASÖröcùÆ c⁄ãxt:" + 
e
);

94 
e
.
	`¥ötSèckTø˚
();

97 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

98 
LOG
.
	`îr‹
("£rvîÖröcùÆÇame/ho°«mêdëîmö©i⁄Éº‹: " + 
e
);

104 
åy
 {

105 
Sa¶Sîvî
 
ß¶Sîvî
 = 
Sa¶
.
	`¸óãSa¶Sîvî
("DIGEST-MD5","zookì≥r","zk-ß¶-md5",
nuŒ
, 
logö
.
ˇŒbackH™dÀr
);

106  
ß¶Sîvî
;

108 
	`ˇtch
 (
Sa¶Ex˚±i⁄
 
e
) {

109 
LOG
.
	`îr‹
("Zookì≥∏Qu‹um membî faûedÅÿ¸óãá Sa¶SîvîÅÿöãø˘ wôhá clõ¡ durög sessi⁄ inôüti⁄: " + 
e
);

114 
LOG
.
	`îr‹
("failedÅo create saslServer object.");

115  
nuŒ
;

116 
	}
}

118 
public
 
	gbyã
[] 
	$evÆu©eRe•⁄£
(
byã
[] 
ª•⁄£
Ë
throws
 
Sa¶Ex˚±i⁄
 {

119  
ß¶Sîvî
.
	`evÆu©eRe•⁄£
(
ª•⁄£
);

120 
	}
}

122 
public
 
boﬁón
 
	$isCom∂ëe
() {

123  
ß¶Sîvî
.
	`isCom∂ëe
();

124 
	}
}

126 
public
 
Såög
 
	$gëAuth‹iz©i⁄ID
() {

127  
ß¶Sîvî
.
	`gëAuth‹iz©i⁄ID
();

128 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

34 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gSa¶Ex˚±i⁄
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gEnvú⁄mít
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gAuthPackë
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Reque°
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Re•⁄£
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gGëSASLReque°
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gReque°Hódî
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëSASLRe•⁄£
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
.
	gPro˚ssTxnResu…
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
.
	gReque°Pro˚ss‹Ex˚±i⁄
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
.
	gClo£Reque°Ex˚±i⁄
;

58 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄Tøckî
.
	gSessi⁄
;

59 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄Tøckî
.
	gSessi⁄Expúî
;

60 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gAuthítiˇti⁄Providî
;

61 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
.
	gProvidîRegi°ry
;

62 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

63 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gRódO∆yZooKì≥rSîvî
;

64 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

65 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

66 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

67 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

75 
public
 
˛ass
 
ZooKì≥rSîvî
 
im∂emíts
 
	gSessi⁄Expúî
, 
	gSîvîSèts
.
	gProvidî
 {

76 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	gLOG
;

79 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSîvî
.
˛ass
);

81 
	gEnvú⁄mít
.
logEnv
("SîvîÉnvú⁄mít:", 
LOG
);

84 
¥Ÿe˘ed
 
ZooKì≥rSîvîBón
 
	gjmxSîvîBón
;

85 
¥Ÿe˘ed
 
D©aTªeBón
 
	gjmxD©aTªeBón
;

91 
public
 
öãrÁ˚
 
	gD©aTªeBuûdî
 {

92 
public
 
D©aTªe
 
buûd
();

95 
public
 cœs†
	cBasicD©aTªeBuûdî
 
im∂emíts
 
	gD©aTªeBuûdî
 {

96 
public
 
D©aTªe
 
buûd
() {

97  
√w
 
D©aTªe
();

101 
public
 
föÆ
 
	gDEFAULT_TICK_TIME
 = 3000;

102 
¥Ÿe˘ed
 
	gtickTime
 = 
DEFAULT_TICK_TIME
;

104 
¥Ÿe˘ed
 
	gmöSessi⁄Timeout
 = -1;

106 
¥Ÿe˘ed
 
	gmaxSessi⁄Timeout
 = -1;

107 
¥Ÿe˘ed
 
Sessi⁄Tøckî
 
	g£ssi⁄Tøckî
;

108 
¥iv©e
 
FûeTxnS«pLog
 
	gtxnLogFa˘‹y
 = 
nuŒ
;

109 
¥iv©e
 
ZKD©aba£
 
	gzkDb
;

110 
¥Ÿe˘ed
 
	ghzxid
 = 0;

111 
public
 
föÆ
 
Ex˚±i⁄
 
	gok
 = 
√w
 Exception("NoÖrob");

112 
¥Ÿe˘ed
 
Reque°Pro˚ss‹
 
	gfú°Pro˚ss‹
;

113 
¥Ÿe˘ed
 vﬁ©ûê
boﬁón
 
	gru¬ög
;

119 
föÆ
 
¥iv©e
 
	gsu≥rSe¸ë
 = 0XB3415C00L;

121 
	gªque°sInPro˚ss
;

122 
föÆ
 
	gLi°
<
	gCh™geRec‹d
> 
	gout°™dögCh™ges
 = 
√w
 
AºayLi°
<
Ch™geRec‹d
>();

124 
föÆ
 
	gHashM≠
<
	gSåög
, 
	gCh™geRec‹d
> 
	gout°™dögCh™gesF‹P©h
 =

125 
√w
 
HashM≠
<
Såög
, 
	gCh™geRec‹d
>();

127 
¥iv©e
 
SîvîCnxnFa˘‹y
 
	g£rvîCnxnFa˘‹y
;

129 
¥iv©e
 
föÆ
 
SîvîSèts
 
	g£rvîSèts
;

131 
	$ªmoveCnxn
(
SîvîCnxn
 
˙xn
) {

132 
zkDb
.
	`ªmoveCnxn
(
˙xn
);

133 
	}
}

142 
public
 
	$ZooKì≥rSîvî
() {

143 
£rvîSèts
 = 
√w
 
	`SîvîSèts
(
this
);

144 
	}
}

152 
public
 
	$ZooKì≥rSîvî
(
FûeTxnS«pLog
 
txnLogFa˘‹y
, 
tickTime
,

153 
möSessi⁄Timeout
, 
maxSessi⁄Timeout
,

154 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
) {

155 
£rvîSèts
 = 
√w
 
	`SîvîSèts
(
this
);

156 
this
.
txnLogFa˘‹y
 =ÅxnLogFactory;

157 
this
.
zkDb
 = zkDb;

158 
this
.
tickTime
 =ÅickTime;

159 
this
.
möSessi⁄Timeout
 = minSessionTimeout;

160 
this
.
maxSessi⁄Timeout
 = maxSessionTimeout;

162 
LOG
.
	`öfo
("Cª©ed sîvî wôhÅickTimê" + 
tickTime


163 + " möSessi⁄Timeouà" + 
	`gëMöSessi⁄Timeout
()

164 + " maxSessi⁄Timeouà" + 
	`gëMaxSessi⁄Timeout
()

165 + " d©adú " + 
txnLogFa˘‹y
.
	`gëD©aDú
()

166 + " s«pdú " + 
txnLogFa˘‹y
.
	`gëS«pDú
());

167 
	}
}

176 
public
 
	$ZooKì≥rSîvî
(
FûeTxnS«pLog
 
txnLogFa˘‹y
, 
tickTime
,

177 
D©aTªeBuûdî
 
åìBuûdî
Ë
throws
 
IOEx˚±i⁄
 {

178 
	`this
(
txnLogFa˘‹y
, 
tickTime
, -1, -1, 
åìBuûdî
,

179 
√w
 
	`ZKD©aba£
(
txnLogFa˘‹y
));

180 
	}
}

182 
public
 
SîvîSèts
 
	$£rvîSèts
() {

183  
£rvîSèts
;

184 
	}
}

186 
public
 
	$dumpC⁄f
(
PrötWrôî
 
pwrôî
) {

187 
pwrôî
.
	`¥öt
("clientPort=");

188 
pwrôî
.
	`¥öén
(
	`gëClõ¡P‹t
());

189 
pwrôî
.
	`¥öt
("dataDir=");

190 
pwrôî
.
	`¥öén
(
zkDb
.
¢≠Log
.
	`gëS«pDú
().
	`gëAbsﬁuãP©h
());

191 
pwrôî
.
	`¥öt
("dataLogDir=");

192 
pwrôî
.
	`¥öén
(
zkDb
.
¢≠Log
.
	`gëD©aDú
().
	`gëAbsﬁuãP©h
());

193 
pwrôî
.
	`¥öt
("tickTime=");

194 
pwrôî
.
	`¥öén
(
	`gëTickTime
());

195 
pwrôî
.
	`¥öt
("maxClientCnxns=");

196 
pwrôî
.
	`¥öén
(
£rvîCnxnFa˘‹y
.
	`gëMaxClõ¡CnxnsPîHo°
());

197 
pwrôî
.
	`¥öt
("minSessionTimeout=");

198 
pwrôî
.
	`¥öén
(
	`gëMöSessi⁄Timeout
());

199 
pwrôî
.
	`¥öt
("maxSessionTimeout=");

200 
pwrôî
.
	`¥öén
(
	`gëMaxSessi⁄Timeout
());

202 
pwrôî
.
	`¥öt
("serverId=");

203 
pwrôî
.
	`¥öén
(
	`gëSîvîId
());

204 
	}
}

211 
public
 
	$ZooKì≥rSîvî
(
Fûe
 
¢≠Dú
, Fûê
logDú
, 
tickTime
)

212 
throws
 
IOEx˚±i⁄
 {

213 
	`this
–
√w
 
	`FûeTxnS«pLog
(
¢≠Dú
, 
logDú
),

214 
tickTime
, 
√w
 
	`BasicD©aTªeBuûdî
());

215 
	}
}

222 
public
 
	$ZooKì≥rSîvî
(
FûeTxnS«pLog
 
txnLogFa˘‹y
,

223 
D©aTªeBuûdî
 
åìBuûdî
)

224 
throws
 
IOEx˚±i⁄


226 
	`this
(
txnLogFa˘‹y
, 
DEFAULT_TICK_TIME
, -1, -1, 
åìBuûdî
,

227 
√w
 
	`ZKD©aba£
(
txnLogFa˘‹y
));

228 
	}
}

234 
public
 
ZKD©aba£
 
	$gëZKD©aba£
() {

235  
this
.
zkDb
;

236 
	}
}

242 
public
 
	$£tZKD©aba£
(
ZKD©aba£
 
zkDb
) {

243 
this
.
zkDb
 = zkDb;

244 
	}
}

249 
public
 
	$lﬂdD©a
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

250 
	`£tZxid
(
zkDb
.
	`lﬂdD©aBa£
());

252 
LökedLi°
<
L⁄g
> 
dódSessi⁄s
 = 
√w
 LinkedList<Long>();

253 
L⁄g
 
£ssi⁄
 : 
zkDb
.
	`gëSessi⁄s
()) {

254 i‡(
zkDb
.
	`gëSessi⁄WôhTimeOuts
().
	`gë
(
£ssi⁄
Ë=
nuŒ
) {

255 
dódSessi⁄s
.
	`add
(
£ssi⁄
);

258 
zkDb
.
	`£tD©aTªeInô
(
åue
);

259 
£ssi⁄
 : 
dódSessi⁄s
) {

261 
	`kûlSessi⁄
(
£ssi⁄
, 
zkDb
.
	`gëD©aTªeLa°Pro˚s£dZxid
());

265 
	`èkeS«pshŸ
();

266 
	}
}

268 
public
 
	$èkeS«pshŸ
(){

269 
åy
 {

270 
txnLogFa˘‹y
.
	`ßve
(
zkDb
.
	`gëD©aTªe
(), zkDb.
	`gëSessi⁄WôhTimeOuts
());

271 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

272 
LOG
.
	`îr‹
("SevîêuƒecovîabÀÉº‹,Éxôög", 
e
);

275 
Sy°em
.
	`exô
(10);

277 
	}
}

283 
synchr⁄ized
 
public
 
	$gëZxid
() {

284  
hzxid
;

285 
	}
}

287 
synchr⁄ized
 
	$gëNextZxid
() {

288  ++
hzxid
;

289 
	}
}

291 
synchr⁄ized
 
public
 
	$£tZxid
(
zxid
) {

292 
hzxid
 = 
zxid
;

293 
	}
}

295 
	$gëTime
() {

296  
Sy°em
.
	`cuºítTimeMûlis
();

297 
	}
}

299 
¥iv©e
 
	$˛o£
(
£ssi⁄Id
) {

300 
	`submôReque°
(
nuŒ
, 
£ssi⁄Id
, 
OpCode
.
˛o£Sessi⁄
, 0,Çull,Çull);

301 
	}
}

303 
public
 
	$˛o£Sessi⁄
(
£ssi⁄Id
) {

304 
LOG
.
	`öfo
("Closög sessi⁄ 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

308 
	`˛o£
(
£ssi⁄Id
);

309 
	}
}

311 
¥Ÿe˘ed
 
	$kûlSessi⁄
(
£ssi⁄Id
, 
zxid
) {

312 
zkDb
.
	`kûlSessi⁄
(
£ssi⁄Id
, 
zxid
);

313 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

314 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

316 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
));

318 i‡(
£ssi⁄Tøckî
 !
nuŒ
) {

319 
£ssi⁄Tøckî
.
	`ªmoveSessi⁄
(
£ssi⁄Id
);

321 
	}
}

323 
public
 
	$expúe
(
Sessi⁄
 
£ssi⁄
) {

324 
£ssi⁄Id
 = 
£ssi⁄
.
	`gëSessi⁄Id
();

325 
LOG
.
	`öfo
("Expúög sessi⁄ 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

326 + ",Åimeouào‡" + 
£ssi⁄
.
	`gëTimeout
() + "msÉxceeded");

327 
	`˛o£
(
£ssi⁄Id
);

328 
	}
}

330 
public
 ˛as†
	cMissögSessi⁄Ex˚±i⁄
 
exãnds
 
	gIOEx˚±i⁄
 {

331 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = 7467414635467261007L;

333 
public
 
MissögSessi⁄Ex˚±i⁄
(
Såög
 
msg
) {

334 
su≥r
(
msg
);

338 
	$touch
(
SîvîCnxn
 
˙xn
Ë
throws
 
MissögSessi⁄Ex˚±i⁄
 {

339 i‡(
˙xn
 =
nuŒ
) {

342 
id
 = 
˙xn
.
	`gëSessi⁄Id
();

343 
to
 = 
˙xn
.
	`gëSessi⁄Timeout
();

344 i‡(!
£ssi⁄Tøckî
.
	`touchSessi⁄
(
id
, 
to
)) {

345 
throw
 
√w
 
	`MissögSessi⁄Ex˚±i⁄
(

346 "Nÿ£ssi⁄ wôh sessi⁄id 0x" + 
L⁄g
.
	`toHexSåög
(
id
)

349 
	}
}

351 
¥Ÿe˘ed
 
	$ªgi°îJMX
() {

353 
åy
 {

354 
jmxSîvîBón
 = 
√w
 
	`ZooKì≥rSîvîBón
(
this
);

355 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxSîvîBón
, 
nuŒ
);

357 
åy
 {

358 
jmxD©aTªeBón
 = 
√w
 
	`D©aTªeBón
(
zkDb
.
	`gëD©aTªe
());

359 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxD©aTªeBón
, 
jmxSîvîBón
);

360 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

361 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

362 
jmxD©aTªeBón
 = 
nuŒ
;

364 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

365 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

366 
jmxSîvîBón
 = 
nuŒ
;

368 
	}
}

370 
public
 
	$°¨td©a
()

371 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

373 i‡(
zkDb
 =
nuŒ
) {

374 
zkDb
 = 
√w
 
	`ZKD©aba£
(
this
.
txnLogFa˘‹y
);

376 i‡(!
zkDb
.
	`isInôülized
()) {

377 
	`lﬂdD©a
();

379 
	}
}

381 
public
 
	$°¨tup
() {

382 i‡(
£ssi⁄Tøckî
 =
nuŒ
) {

383 
	`¸óãSessi⁄Tøckî
();

385 
	`°¨tSessi⁄Tøckî
();

386 
	`£tupReque°Pro˚ss‹s
();

388 
	`ªgi°îJMX
();

390 
	`synchr⁄ized
 (
this
) {

391 
ru¬ög
 = 
åue
;

392 
	`nŸifyAŒ
();

394 
	}
}

396 
¥Ÿe˘ed
 
	$£tupReque°Pro˚ss‹s
() {

397 
Reque°Pro˚ss‹
 
föÆPro˚ss‹
 = 
√w
 
	`FöÆReque°Pro˚ss‹
(
this
);

398 
Reque°Pro˚ss‹
 
syncPro˚ss‹
 = 
√w
 
	`SyncReque°Pro˚ss‹
(
this
,

399 
föÆPro˚ss‹
);

400 ((
SyncReque°Pro˚ss‹
)
syncPro˚ss‹
).
	`°¨t
();

401 
fú°Pro˚ss‹
 = 
√w
 
	`PªpReque°Pro˚ss‹
(
this
, 
syncPro˚ss‹
);

402 ((
PªpReque°Pro˚ss‹
)
fú°Pro˚ss‹
).
	`°¨t
();

403 
	}
}

405 
¥Ÿe˘ed
 
	$¸óãSessi⁄Tøckî
() {

406 
£ssi⁄Tøckî
 = 
√w
 
	`Sessi⁄TøckîIm∂
(
this
, 
zkDb
.
	`gëSessi⁄WôhTimeOuts
(),

407 
tickTime
, 1);

408 
	}
}

410 
¥Ÿe˘ed
 
	$°¨tSessi⁄Tøckî
() {

411 ((
Sessi⁄TøckîIm∂
)
£ssi⁄Tøckî
).
	`°¨t
();

412 
	}
}

414 
public
 
boﬁón
 
	$isRu¬ög
() {

415  
ru¬ög
;

416 
	}
}

418 
public
 
	$shutdown
() {

419 
LOG
.
	`öfo
("shutting down");

422 
this
.
ru¬ög
 = 
Ál£
;

426 i‡(
£ssi⁄Tøckî
 !
nuŒ
) {

427 
£ssi⁄Tøckî
.
	`shutdown
();

429 i‡(
fú°Pro˚ss‹
 !
nuŒ
) {

430 
fú°Pro˚ss‹
.
	`shutdown
();

432 i‡(
zkDb
 !
nuŒ
) {

433 
zkDb
.
	`˛ór
();

436 
	`uƒegi°îJMX
();

437 
	}
}

439 
¥Ÿe˘ed
 
	$uƒegi°îJMX
() {

441 
åy
 {

442 i‡(
jmxD©aTªeBón
 !
nuŒ
) {

443 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxD©aTªeBón
);

445 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

446 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

448 
åy
 {

449 i‡(
jmxSîvîBón
 !
nuŒ
) {

450 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxSîvîBón
);

452 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

453 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

455 
jmxSîvîBón
 = 
nuŒ
;

456 
jmxD©aTªeBón
 = 
nuŒ
;

457 
	}
}

459 
synchr⁄ized
 
public
 
	$öcInPro˚ss
() {

460 
ªque°sInPro˚ss
++;

461 
	}
}

463 
synchr⁄ized
 
public
 
	$decInPro˚ss
() {

464 
ªque°sInPro˚ss
--;

465 
	}
}

467 
public
 
	$gëInPro˚ss
() {

468  
ªque°sInPro˚ss
;

469 
	}
}

475 ˛as†
	cCh™geRec‹d
 {

476 
Ch™geRec‹d
(
zxid
, 
Såög
 
∑th
, 
SètPîsi°ed
 
°©
, 
chûdCou¡
,

477 
Li°
<
ACL
> 
a˛
) {

478 
	gthis
.
	gzxid
 = 
zxid
;

479 
	gthis
.
	g∑th
 = 
∑th
;

480 
	gthis
.
	g°©
 = 
°©
;

481 
	gthis
.
	gchûdCou¡
 = 
chûdCou¡
;

482 
	gthis
.
	ga˛
 = 
a˛
;

485 
	gzxid
;

487 
Såög
 
	g∑th
;

489 
SètPîsi°ed
 
	g°©
;

491 
	gchûdCou¡
;

493 
	gLi°
<
	gACL
> 
	ga˛
;

495 @
SuµªssW¨nögs
("unchecked")

496 
Ch™geRec‹d
 
du∂iˇã
(
zxid
) {

497 
SètPîsi°ed
 
	g°©
 = 
√w
 StatPersisted();

498 i‡(
	gthis
.
	g°©
 !
nuŒ
) {

499 
D©aTªe
.
c›ySètPîsi°ed
(
this
.
°©
, stat);

501  
√w
 
Ch™geRec‹d
(
zxid
, 
∑th
, 
°©
, 
chûdCou¡
,

502 
a˛
 =
nuŒ
 ? 
√w
 
AºayLi°
<
ACL
>() :Çew ArrayList(acl));

506 
	gbyã
[] 
	$gíî©ePasswd
(
id
) {

507 
R™dom
 
r
 = 
√w
 
	`R™dom
(
id
 ^ 
su≥rSe¸ë
);

508 
byã
 
p
[] = 
√w
 byte[16];

509 
r
.
	`√xtByãs
(
p
);

510  
p
;

511 
	}
}

513 
¥Ÿe˘ed
 
boﬁón
 
	$checkPasswd
(
£ssi⁄Id
, 
byã
[] 
∑sswd
) {

514  
£ssi⁄Id
 != 0

515 && 
Aºays
.
	`equÆs
(
∑sswd
, 
	`gíî©ePasswd
(
£ssi⁄Id
));

516 
	}
}

518 
	$¸óãSessi⁄
(
SîvîCnxn
 
˙xn
, 
byã
 
∑sswd
[], 
timeout
) {

519 
£ssi⁄Id
 = 
£ssi⁄Tøckî
.
	`¸óãSessi⁄
(
timeout
);

520 
R™dom
 
r
 = 
√w
 
	`R™dom
(
£ssi⁄Id
 ^ 
su≥rSe¸ë
);

521 
r
.
	`√xtByãs
(
∑sswd
);

522 
ByãBuf„r
 
to
 = ByãBuf„r.
	`Æloˇã
(4);

523 
to
.
	`putI¡
(
timeout
);

524 
˙xn
.
	`£tSessi⁄Id
(
£ssi⁄Id
);

525 
	`submôReque°
(
˙xn
, 
£ssi⁄Id
, 
OpCode
.
¸óãSessi⁄
, 0, 
to
, 
nuŒ
);

526  
£ssi⁄Id
;

527 
	}
}

535 
public
 
	$£tOw√r
(
id
, 
Obje˘
 
ow√r
Ë
throws
 
Sessi⁄ExpúedEx˚±i⁄
 {

536 
£ssi⁄Tøckî
.
	`£tOw√r
(
id
, 
ow√r
);

537 
	}
}

539 
¥Ÿe˘ed
 
	$ªvÆid©eSessi⁄
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
,

540 
£ssi⁄Timeout
Ë
throws
 
IOEx˚±i⁄
 {

541 
boﬁón
 
rc
 = 
£ssi⁄Tøckî
.
	`touchSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

542 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

543 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,ZooTø˚.
SESSION_TRACE_MASK
,

544 "Sessi⁄ 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
) +

545 " i†vÆid: " + 
rc
);

547 
	`föishSessi⁄Inô
(
˙xn
, 
rc
);

548 
	}
}

550 
public
 
	$ª›íSessi⁄
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
, 
byã
[] 
∑sswd
,

551 
£ssi⁄Timeout
Ë
throws
 
IOEx˚±i⁄
 {

552 i‡(!
	`checkPasswd
(
£ssi⁄Id
, 
∑sswd
)) {

553 
	`föishSessi⁄Inô
(
˙xn
, 
Ál£
);

555 
	`ªvÆid©eSessi⁄
(
˙xn
, 
£ssi⁄Id
, 
£ssi⁄Timeout
);

557 
	}
}

559 
public
 
	$föishSessi⁄Inô
(
SîvîCnxn
 
˙xn
, 
boﬁón
 
vÆid
) {

561 
åy
 {

562 i‡(
vÆid
) {

563 
£rvîCnxnFa˘‹y
.
	`ªgi°îC⁄√˘i⁄
(
˙xn
);

565 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

566 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

569 
åy
 {

570 
C⁄√˘Re•⁄£
 
r•
 = 
√w
 
	`C⁄√˘Re•⁄£
(0, 
vÆid
 ? 
˙xn
.
	`gëSessi⁄Timeout
()

571 : 0, 
vÆid
 ? 
˙xn
.
	`gëSessi⁄Id
() : 0,

573 
vÆid
 ? 
	`gíî©ePasswd
(
˙xn
.
	`gëSessi⁄Id
()Ë: 
√w
 
byã
[16]);

574 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

575 
Bö¨yOuçutArchive
 
bos
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

576 
bos
.
	`wrôeI¡
(-1, "len");

577 
r•
.
	`£rülize
(
bos
, "connect");

578 i‡(!
˙xn
.
isOldClõ¡
) {

579 
bos
.
	`wrôeBoﬁ
(

580 
this
 
ö°™˚of
 
RódO∆yZooKì≥rSîvî
, "readOnly");

582 
baos
.
	`˛o£
();

583 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

584 
bb
.
	`putI¡
(bb.
	`ªmaöög
(Ë- 4).
	`ªwöd
();

585 
˙xn
.
	`£ndBuf„r
(
bb
);

587 i‡(!
vÆid
) {

588 
LOG
.
	`öfo
("Invalid session 0x"

589 + 
L⁄g
.
	`toHexSåög
(
˙xn
.
	`gëSessi⁄Id
())

591 + 
˙xn
.
	`gëRemŸeSockëAddªss
()

593 
˙xn
.
	`£ndBuf„r
(
SîvîCnxnFa˘‹y
.
˛o£C⁄n
);

595 
LOG
.
	`öfo
("Established session 0x"

596 + 
L⁄g
.
	`toHexSåög
(
˙xn
.
	`gëSessi⁄Id
())

597 + " wôhÇegŸüãdÅimeouà" + 
˙xn
.
	`gëSessi⁄Timeout
()

599 + 
˙xn
.
	`gëRemŸeSockëAddªss
());

602 
˙xn
.
	`íabÀRecv
();

603 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

604 
LOG
.
	`w¨n
("Ex˚±i⁄ whûêe°ablishög sessi⁄, closög", 
e
);

605 
˙xn
.
	`˛o£
();

607 
	}
}

609 
public
 
	$˛o£Sessi⁄
(
SîvîCnxn
 
˙xn
, 
Reque°Hódî
 
ªque°Hódî
) {

610 
	`˛o£Sessi⁄
(
˙xn
.
	`gëSessi⁄Id
());

611 
	}
}

613 
public
 
	$gëSîvîId
() {

615 
	}
}

623 
¥iv©e
 
submôReque°
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
, 
ty≥
,

624 
xid
, 
ByãBuf„r
 
bb
, 
Li°
<
Id
> 
authInfo
) {

625 
Reque°
 
	gsi
 = 
√w
 Reque°(
˙xn
, 
£ssi⁄Id
, 
xid
, 
ty≥
, 
bb
, 
authInfo
);

626 
submôReque°
(
si
);

629 
public
 
	$submôReque°
(
Reque°
 
si
) {

630 i‡(
fú°Pro˚ss‹
 =
nuŒ
) {

631 
	`synchr⁄ized
 (
this
) {

632 
åy
 {

633 !
ru¬ög
) {

634 
	`waô
(1000);

636 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

637 
LOG
.
	`w¨n
("U√x≥˘ed i¡îru±i⁄", 
e
);

639 i‡(
fú°Pro˚ss‹
 =
nuŒ
) {

640 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("Not started");

644 
åy
 {

645 
	`touch
(
si
.
˙xn
);

646 
boﬁón
 
vÆid∑ckë
 = 
Reque°
.
	`isVÆid
(
si
.
ty≥
);

647 i‡(
vÆid∑ckë
) {

648 
fú°Pro˚ss‹
.
	`¥o˚ssReque°
(
si
);

649 i‡(
si
.
˙xn
 !
nuŒ
) {

650 
	`öcInPro˚ss
();

653 
LOG
.
	`w¨n
("Dr›pögÖackëáà£rvî o‡ty≥ " + 
si
.
ty≥
);

656 } 
	`ˇtch
 (
MissögSessi⁄Ex˚±i⁄
 
e
) {

657 i‡(
LOG
.
	`isDebugE«bÀd
()) {

658 
LOG
.
	`debug
("Dr›pögÑeque°: " + 
e
.
	`gëMesßge
());

660 } 
	`ˇtch
 (
Reque°Pro˚ss‹Ex˚±i⁄
 
e
) {

661 
LOG
.
	`îr‹
("U«bÀÅÿ¥o˚s†ªque°:" + 
e
.
	`gëMesßge
(),É);

663 
	}
}

665 
public
 
	$gëS«pCou¡
() {

666 
Såög
 
sc
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.snapCount");

667 
åy
 {

668  
I¡egî
.
	`∑r£I¡
(
sc
);

669 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

672 
	}
}

674 
public
 
	$gëGlobÆOut°™dögLimô
() {

675 
Såög
 
sc
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.globalOutstandingLimit");

676 
limô
;

677 
åy
 {

678 
limô
 = 
I¡egî
.
	`∑r£I¡
(
sc
);

679 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

680 
limô
 = 1000;

682  
limô
;

683 
	}
}

685 
public
 
	$£tSîvîCnxnFa˘‹y
(
SîvîCnxnFa˘‹y
 
Á˘‹y
) {

686 
£rvîCnxnFa˘‹y
 = 
Á˘‹y
;

687 
	}
}

689 
public
 
SîvîCnxnFa˘‹y
 
	$gëSîvîCnxnFa˘‹y
() {

690  
£rvîCnxnFa˘‹y
;

691 
	}
}

697 
public
 
	$gëLa°Pro˚s£dZxid
() {

698  
zkDb
.
	`gëD©aTªeLa°Pro˚s£dZxid
();

699 
	}
}

706 
public
 
	$gëOut°™dögReque°s
() {

707  
	`gëInPro˚ss
();

708 
	}
}

717 
public
 
	$åunˇãLog
(
zxid
Ë
throws
 
IOEx˚±i⁄
 {

718 
this
.
zkDb
.
	`åunˇãLog
(
zxid
);

719 
	}
}

721 
public
 
	$gëTickTime
() {

722  
tickTime
;

723 
	}
}

725 
public
 
	$£tTickTime
(
tickTime
) {

726 
LOG
.
	`öfo
("tickTimê£àtÿ" + 
tickTime
);

727 
this
.
tickTime
 =ÅickTime;

728 
	}
}

730 
public
 
	$gëMöSessi⁄Timeout
() {

731  
möSessi⁄Timeout
 =-1 ? 
tickTime
 * 2 : minSessionTimeout;

732 
	}
}

734 
public
 
	$£tMöSessi⁄Timeout
(
mö
) {

735 
LOG
.
	`öfo
("möSessi⁄Timeouà£àtÿ" + 
mö
);

736 
this
.
möSessi⁄Timeout
 = 
mö
;

737 
	}
}

739 
public
 
	$gëMaxSessi⁄Timeout
() {

740  
maxSessi⁄Timeout
 =-1 ? 
tickTime
 * 20 : maxSessionTimeout;

741 
	}
}

743 
public
 
	$£tMaxSessi⁄Timeout
(
max
) {

744 
LOG
.
	`öfo
("maxSessi⁄Timeouà£àtÿ" + 
max
);

745 
this
.
maxSessi⁄Timeout
 = 
max
;

746 
	}
}

748 
public
 
	$gëClõ¡P‹t
() {

749  
£rvîCnxnFa˘‹y
 !
nuŒ
 ? sîvîCnxnFa˘‹y.
	`gëLoˇlP‹t
() : -1;

750 
	}
}

752 
public
 
	$£tTxnLogFa˘‹y
(
FûeTxnS«pLog
 
txnLog
) {

753 
this
.
txnLogFa˘‹y
 = 
txnLog
;

754 
	}
}

756 
public
 
FûeTxnS«pLog
 
	$gëTxnLogFa˘‹y
() {

757  
this
.
txnLogFa˘‹y
;

758 
	}
}

760 
public
 
Såög
 
	$gëSèã
() {

762 
	}
}

764 
public
 
	$dumpEphemîÆs
(
PrötWrôî
 
pwrôî
) {

765 
zkDb
.
	`dumpEphemîÆs
(
pwrôî
);

766 
	}
}

772 
public
 
	$gëNumAliveC⁄√˘i⁄s
() {

773  
£rvîCnxnFa˘‹y
.
	`gëNumAliveC⁄√˘i⁄s
();

774 
	}
}

776 
public
 
	$¥o˚ssC⁄√˘Reque°
(
SîvîCnxn
 
˙xn
, 
ByãBuf„r
 
öcomögBuf„r
Ë
throws
 
IOEx˚±i⁄
 {

777 
Bö¨yI≈utArchive
 
bü
 = Bö¨yI≈utArchive.
	`gëArchive
(
√w
 
	`ByãBuf„rI≈utSåóm
(
öcomögBuf„r
));

778 
C⁄√˘Reque°
 
c⁄nReq
 = 
√w
 
	`C⁄√˘Reque°
();

779 
c⁄nReq
.
	`de£rülize
(
bü
, "connect");

780 i‡(
LOG
.
	`isDebugE«bÀd
()) {

781 
LOG
.
	`debug
("SessionÉstablishmentÑequest from client "

782 + 
˙xn
.
	`gëRemŸeSockëAddªss
()

784 + 
L⁄g
.
	`toHexSåög
(
c⁄nReq
.
	`gëLa°ZxidSìn
()));

786 
boﬁón
 
ªadO∆y
 = 
Ál£
;

787 
åy
 {

788 
ªadO∆y
 = 
bü
.
	`ªadBoﬁ
("readOnly");

789 
˙xn
.
isOldClõ¡
 = 
Ál£
;

790 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

793 
LOG
.
	`w¨n
("ConnectionÑequest from old client "

794 + 
˙xn
.
	`gëRemŸeSockëAddªss
()

797 i‡(
ªadO∆y
 =
Ál£
 && 
this
 
ö°™˚of
 
RódO∆yZooKì≥rSîvî
) {

798 
Såög
 
msg
 = "Refusing sessionÑequest forÇot-read-only client "

799 + 
˙xn
.
	`gëRemŸeSockëAddªss
();

800 
LOG
.
	`öfo
(
msg
);

801 
throw
 
√w
 
	`Clo£Reque°Ex˚±i⁄
(
msg
);

803 i‡(
c⁄nReq
.
	`gëLa°ZxidSìn
(Ë> 
zkDb
.
d©aTªe
.
œ°Pro˚s£dZxid
) {

804 
Såög
 
msg
 = "Refusing sessionÑequest for client "

805 + 
˙xn
.
	`gëRemŸeSockëAddªss
()

807 + 
L⁄g
.
	`toHexSåög
(
c⁄nReq
.
	`gëLa°ZxidSìn
())

809 + 
L⁄g
.
	`toHexSåög
(
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
())

812 
LOG
.
	`öfo
(
msg
);

813 
throw
 
√w
 
	`Clo£Reque°Ex˚±i⁄
(
msg
);

815 
£ssi⁄Timeout
 = 
c⁄nReq
.
	`gëTimeOut
();

816 
byã
 
∑sswd
[] = 
c⁄nReq
.
	`gëPasswd
();

817 
möSessi⁄Timeout
 = 
	`gëMöSessi⁄Timeout
();

818 i‡(
£ssi⁄Timeout
 < 
möSessi⁄Timeout
) {

819 
£ssi⁄Timeout
 = 
möSessi⁄Timeout
;

821 
maxSessi⁄Timeout
 = 
	`gëMaxSessi⁄Timeout
();

822 i‡(
£ssi⁄Timeout
 > 
maxSessi⁄Timeout
) {

823 
£ssi⁄Timeout
 = 
maxSessi⁄Timeout
;

825 
˙xn
.
	`£tSessi⁄Timeout
(
£ssi⁄Timeout
);

828 
˙xn
.
	`dißbÀRecv
();

829 
£ssi⁄Id
 = 
c⁄nReq
.
	`gëSessi⁄Id
();

830 i‡(
£ssi⁄Id
 != 0) {

831 
˛õ¡Sessi⁄Id
 = 
c⁄nReq
.
	`gëSessi⁄Id
();

832 
LOG
.
	`öfo
("ClientáttemptingÅoÑenew session 0x"

833 + 
L⁄g
.
	`toHexSåög
(
˛õ¡Sessi⁄Id
)

834 + "áà" + 
˙xn
.
	`gëRemŸeSockëAddªss
());

835 
£rvîCnxnFa˘‹y
.
	`˛o£Sessi⁄
(
£ssi⁄Id
);

836 
˙xn
.
	`£tSessi⁄Id
(
£ssi⁄Id
);

837 
	`ª›íSessi⁄
(
˙xn
, 
£ssi⁄Id
, 
∑sswd
, 
£ssi⁄Timeout
);

839 
LOG
.
	`öfo
("ClientáttemptingÅoÉstablishÇew sessionát "

840 + 
˙xn
.
	`gëRemŸeSockëAddªss
());

841 
	`¸óãSessi⁄
(
˙xn
, 
∑sswd
, 
£ssi⁄Timeout
);

843 
	}
}

845 
public
 
boﬁón
 
	$shouldThrŸée
(
outSèndögCou¡
) {

846 i‡(
	`gëGlobÆOut°™dögLimô
(Ë< 
	`gëInPro˚ss
()) {

847  
outSèndögCou¡
 > 0;

849  
Ál£
;

850 
	}
}

852 
public
 
	$¥o˚ssPackë
(
SîvîCnxn
 
˙xn
, 
ByãBuf„r
 
öcomögBuf„r
Ë
throws
 
IOEx˚±i⁄
 {

854 
I≈utSåóm
 
bais
 = 
√w
 
	`ByãBuf„rI≈utSåóm
(
öcomögBuf„r
);

855 
Bö¨yI≈utArchive
 
bü
 = Bö¨yI≈utArchive.
	`gëArchive
(
bais
);

856 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
();

857 
h
.
	`de£rülize
(
bü
, "header");

861 
öcomögBuf„r
 = incomögBuf„r.
	`¶i˚
();

862 i‡(
h
.
	`gëTy≥
(Ë=
OpCode
.
auth
) {

863 
LOG
.
	`öfo
("gŸáuthÖackë " + 
˙xn
.
	`gëRemŸeSockëAddªss
());

864 
AuthPackë
 
authPackë
 = 
√w
 
	`AuthPackë
();

865 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
öcomögBuf„r
, 
authPackë
);

866 
Såög
 
scheme
 = 
authPackë
.
	`gëScheme
();

867 
Authítiˇti⁄Providî
 
≠
 = 
ProvidîRegi°ry
.
	`gëProvidî
(
scheme
);

868 
Code
 
authRëu∫
 = 
Kì≥rEx˚±i⁄
.Code.
AUTHFAILED
;

869 if(
≠
 !
nuŒ
) {

870 
åy
 {

871 
authRëu∫
 = 
≠
.
	`h™dÀAuthítiˇti⁄
(
˙xn
, 
authPackë
.
	`gëAuth
());

872 } 
	`ˇtch
(
Ru¡imeEx˚±i⁄
 
e
) {

873 
LOG
.
	`w¨n
("Caughàru¡imêex˚±i⁄ from Authítiˇti⁄Providî: " + 
scheme
 + " duêtÿ" + 
e
);

874 
authRëu∫
 = 
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
;

877 i‡(
authRëu∫
!
Kì≥rEx˚±i⁄
.
Code
.
OK
) {

878 i‡(
≠
 =
nuŒ
) {

879 
LOG
.
	`w¨n
("NoáuthenticationÖrovider for scheme: "

880 + 
scheme
 + " has "

881 + 
ProvidîRegi°ry
.
	`li°Providîs
());

883 
LOG
.
	`w¨n
("Authítiˇti⁄ faûed f‹ scheme: " + 
scheme
);

886 
RïlyHódî
 
rh
 = 
√w
 
	`RïlyHódî
(
h
.
	`gëXid
(), 0,

887 
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
.
	`ötVÆue
());

888 
˙xn
.
	`£ndRe•⁄£
(
rh
, 
nuŒ
,Çull);

890 
˙xn
.
	`£ndBuf„r
(
SîvîCnxnFa˘‹y
.
˛o£C⁄n
);

891 
˙xn
.
	`dißbÀRecv
();

893 i‡(
LOG
.
	`isDebugE«bÀd
()) {

894 
LOG
.
	`debug
("Authentication succeeded for scheme: "

895 + 
scheme
);

897 
LOG
.
	`öfo
("auth suc˚s†" + 
˙xn
.
	`gëRemŸeSockëAddªss
());

898 
RïlyHódî
 
rh
 = 
√w
 
	`RïlyHódî
(
h
.
	`gëXid
(), 0,

899 
Kì≥rEx˚±i⁄
.
Code
.
OK
.
	`ötVÆue
());

900 
˙xn
.
	`£ndRe•⁄£
(
rh
, 
nuŒ
,Çull);

904 i‡(
h
.
	`gëTy≥
(Ë=
OpCode
.
ß¶
) {

905 
Rec‹d
 
r•
 = 
	`¥o˚ssSa¶
(
öcomögBuf„r
,
˙xn
);

906 
RïlyHódî
 
rh
 = 
√w
 
	`RïlyHódî
(
h
.
	`gëXid
(), 0, 
Kì≥rEx˚±i⁄
.
Code
.
OK
.
	`ötVÆue
());

907 
˙xn
.
	`£ndRe•⁄£
(
rh
,
r•
, "response");

910 
Reque°
 
si
 = 
√w
 
	`Reque°
(
˙xn
, cnxn.
	`gëSessi⁄Id
(), 
h
.
	`gëXid
(),

911 
h
.
	`gëTy≥
(), 
öcomögBuf„r
, 
˙xn
.
	`gëAuthInfo
());

912 
si
.
	`£tOw√r
(
SîvîCnxn
.
me
);

913 
	`submôReque°
(
si
);

916 
˙xn
.
	`ö¸Out°™dögReque°s
(
h
);

917 
	}
}

919 
¥iv©e
 
Rec‹d
 
	$¥o˚ssSa¶
(
ByãBuf„r
 
öcomögBuf„r
, 
SîvîCnxn
 
˙xn
Ë
throws
 
IOEx˚±i⁄
 {

920 
LOG
.
	`debug
("RespondingÅo client SASLÅoken.");

921 
GëSASLReque°
 
˛õ¡TokíRec‹d
 = 
√w
 
	`GëSASLReque°
();

922 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
öcomögBuf„r
,
˛õ¡TokíRec‹d
);

923 
byã
[] 
˛õ¡Tokí
 = 
˛õ¡TokíRec‹d
.
	`gëTokí
();

924 
LOG
.
	`debug
("Sizêo‡˛õ¡ SASLÅokí: " + 
˛õ¡Tokí
.
Àngth
);

925 
byã
[] 
ª•⁄£Tokí
 = 
nuŒ
;

926 
åy
 {

927 
ZooKì≥rSa¶Sîvî
 
ß¶Sîvî
 = 
˙xn
.
zooKì≥rSa¶Sîvî
;

928 
åy
 {

932 
ª•⁄£Tokí
 = 
ß¶Sîvî
.
	`evÆu©eRe•⁄£
(
˛õ¡Tokí
);

933 i‡(
ß¶Sîvî
.
	`isCom∂ëe
(Ë=
åue
) {

934 
Såög
 
auth‹iz©i⁄ID
 = 
ß¶Sîvî
.
	`gëAuth‹iz©i⁄ID
();

935 
LOG
.
	`öfo
("addög SASLáuth‹iz©i⁄ f‹áuth‹iz©i⁄ID: " + 
auth‹iz©i⁄ID
);

936 
˙xn
.
	`addAuthInfo
(
√w
 
	`Id
("ß¶",
auth‹iz©i⁄ID
));

939 
	`ˇtch
 (
Sa¶Ex˚±i⁄
 
e
) {

940 
LOG
.
	`w¨n
("Clõ¡ faûedÅÿSASLáuthítiˇã: " + 
e
);

941 i‡((
Sy°em
.
	`gëPr›îty
("zookì≥r.ÆlowSa¶FaûedClõ¡s"Ë!
nuŒ
)

943 (
Sy°em
.
	`gëPr›îty
("zookì≥r.ÆlowSa¶FaûedClõ¡s").
	`equÆs
("true"))) {

944 
LOG
.
	`w¨n
("Maintaining client connection despite SASLáuthentication failure.");

946 
LOG
.
	`w¨n
("Closing client connection dueÅo SASLáuthentication failure.");

947 
˙xn
.
	`˛o£
();

951 
	`ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
e
) {

952 
LOG
.
	`îr‹
("cnxn.saslServer isÇull: cnxn object didÇot initialize its saslServerÖroperly.");

954 i‡(
ª•⁄£Tokí
 !
nuŒ
) {

955 
LOG
.
	`debug
("Sizêo‡£rvî SASLÑe•⁄£: " + 
ª•⁄£Tokí
.
Àngth
);

958  
√w
 
	`SëSASLRe•⁄£
(
ª•⁄£Tokí
);

959 
	}
}

961 
public
 
Pro˚ssTxnResu…
 
	$¥o˚ssTxn
(
TxnHódî
 
hdr
, 
Rec‹d
 
txn
) {

962 
Pro˚ssTxnResu…
 
rc
;

963 
›Code
 = 
hdr
.
	`gëTy≥
();

964 
£ssi⁄Id
 = 
hdr
.
	`gëClõ¡Id
();

965 
rc
 = 
	`gëZKD©aba£
().
	`¥o˚ssTxn
(
hdr
, 
txn
);

966 i‡(
›Code
 =
OpCode
.
¸óãSessi⁄
) {

967 i‡(
txn
 
ö°™˚of
 
Cª©eSessi⁄Txn
) {

968 
Cª©eSessi⁄Txn
 
c°
 = (Cª©eSessi⁄TxnË
txn
;

969 
£ssi⁄Tøckî
.
	`addSessi⁄
(
£ssi⁄Id
, 
c°


970 .
	`gëTimeOut
());

972 
LOG
.
	`w¨n
("*****>>>>> Got "

973 + 
txn
.
	`gëCœss
() + " "

974 + 
txn
.
	`toSåög
());

976 } i‡(
›Code
 =
OpCode
.
˛o£Sessi⁄
) {

977 
£ssi⁄Tøckî
.
	`ªmoveSessi⁄
(
£ssi⁄Id
);

979  
rc
;

980 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gVîsi⁄
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

31 
public
 
˛ass
 
ZooKì≥rSîvîBón
 
im∂emíts
 
	gZooKì≥rSîvîMXBón
, 
	gZKMBónInfo
 {

32 
¥iv©e
 
föÆ
 
D©e
 
	g°¨tTime
;

33 
¥iv©e
 
föÆ
 
Såög
 
	g«me
;

35 
¥Ÿe˘ed
 
föÆ
 
ZooKì≥rSîvî
 
	gzks
;

37 
public
 
ZooKì≥rSîvîBón
(
ZooKì≥rSîvî
 
zks
) {

38 
	g°¨tTime
 = 
√w
 
D©e
();

39 
	gthis
.
	gzks
 = 
zks
;

40 
	g«me
 = "SèndÆ⁄eSîvî_p‹t" + 
zks
.
gëClõ¡P‹t
();

43 
public
 
Såög
 
gëClõ¡P‹t
() {

44 
	gåy
 {

45  
	gI√tAddªss
.
gëLoˇlHo°
().
gëHo°Addªss
() + ":"

46 + 
	gzks
.
gëClõ¡P‹t
();

47 } 
ˇtch
 (
UnknownHo°Ex˚±i⁄
 
e
) {

48  "loˇlho°:" + 
	gzks
.
gëClõ¡P‹t
();

52 
public
 
Såög
 
gëName
() {

53  
	g«me
;

56 
public
 
boﬁón
 
isHiddí
() {

57  
	gÁl£
;

60 
public
 
Såög
 
gëSèπTime
() {

61  
	g°¨tTime
.
toSåög
();

64 
public
 
Såög
 
gëVîsi⁄
() {

65  
	gVîsi⁄
.
gëFuŒVîsi⁄
();

68 
public
 
gëAvgReque°L©ícy
() {

69  
	gzks
.
£rvîSèts
().
gëAvgL©ícy
();

72 
public
 
gëMaxReque°L©ícy
() {

73  
	gzks
.
£rvîSèts
().
gëMaxL©ícy
();

76 
public
 
gëMöReque°L©ícy
() {

77  
	gzks
.
£rvîSèts
().
gëMöL©ícy
();

80 
public
 
gëOut°™dögReque°s
() {

81  
	gzks
.
£rvîSèts
().
gëOut°™dögReque°s
();

84 
public
 
gëTickTime
() {

85  
	gzks
.
gëTickTime
();

88 
public
 
£tTickTime
(
tickTime
) {

89 
	gzks
.
£tTickTime
(
tickTime
);

92 
public
 
gëMaxClõ¡CnxnsPîHo°
() {

93 
SîvîCnxnFa˘‹y
 
	gÁc
 = 
zks
.
gëSîvîCnxnFa˘‹y
();

94 i‡(
	gÁc
 =
nuŒ
) {

97  
	gÁc
.
gëMaxClõ¡CnxnsPîHo°
();

100 
public
 
£tMaxClõ¡CnxnsPîHo°
(
max
) {

102 
	gzks
.
gëSîvîCnxnFa˘‹y
().
£tMaxClõ¡CnxnsPîHo°
(
max
);

105 
public
 
gëMöSessi⁄Timeout
() {

106  
	gzks
.
gëMöSessi⁄Timeout
();

109 
public
 
£tMöSessi⁄Timeout
(
mö
) {

110 
	gzks
.
£tMöSessi⁄Timeout
(
mö
);

113 
public
 
gëMaxSessi⁄Timeout
() {

114  
	gzks
.
gëMaxSessi⁄Timeout
();

117 
public
 
£tMaxSessi⁄Timeout
(
max
) {

118 
	gzks
.
£tMaxSessi⁄Timeout
(
max
);

122 
public
 
gëPackësRe˚ived
() {

123  
	gzks
.
£rvîSèts
().
gëPackësRe˚ived
();

126 
public
 
gëPackësSít
() {

127  
	gzks
.
£rvîSèts
().
gëPackësSít
();

130 
public
 
ª£tL©ícy
() {

131 
	gzks
.
£rvîSèts
().
ª£tL©ícy
();

134 
public
 
ª£tMaxL©ícy
() {

135 
	gzks
.
£rvîSèts
().
ª£tMaxL©ícy
();

138 
public
 
ª£tSèti°ics
() {

139 
SîvîSèts
 
	g£rvîSèts
 = 
zks
.
£rvîSèts
();

140 
	g£rvîSèts
.
ª£tReque°Cou¡îs
();

141 
	g£rvîSèts
.
ª£tL©ícy
();

144 
public
 
gëNumAliveC⁄√˘i⁄s
() {

145  
	gzks
.
gëNumAliveC⁄√˘i⁄s
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

24 
public
 
öãrÁ˚
 
	gZooKì≥rSîvîMXBón
 {

28 
public
 
Såög
 
gëClõ¡P‹t
();

32 
public
 
Såög
 
gëVîsi⁄
();

36 
public
 
Såög
 
gëSèπTime
();

40 
public
 
gëMöReque°L©ícy
();

44 
public
 
gëAvgReque°L©ícy
();

48 
public
 
gëMaxReque°L©ícy
();

52 
public
 
gëPackësRe˚ived
();

56 
public
 
gëPackësSít
();

60 
public
 
gëOut°™dögReque°s
();

64 
public
 
gëTickTime
();

68 
public
 
£tTickTime
(
tickTime
);

71 
public
 
gëMaxClõ¡CnxnsPîHo°
();

74 
public
 
£tMaxClõ¡CnxnsPîHo°
(
max
);

79 
public
 
gëMöSessi⁄Timeout
();

83 
public
 
£tMöSessi⁄Timeout
(
mö
);

88 
public
 
gëMaxSessi⁄Timeout
();

92 
public
 
£tMaxSessi⁄Timeout
(
max
);

97 
public
 
ª£tSèti°ics
();

101 
public
 
ª£tL©ícy
();

105 
public
 
ª£tMaxL©ícy
();

109 
public
 
gëNumAliveC⁄√˘i⁄s
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gJMEx˚±i⁄
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gM™agedUtû
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrC⁄fig
.
	gC⁄figEx˚±i⁄
;

35 
public
 cœs†
	cZooKì≥rSîvîMaö
 {

36 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

37 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSîvîMaö
.
˛ass
);

39 
¥iv©e
 
föÆ
 
Såög
 
	mUSAGE
 =

42 
¥iv©e
 
SîvîCnxnFa˘‹y
 
	m˙xnFa˘‹y
;

49 
public
 
	$maö
(
Såög
[] 
¨gs
) {

50 
ZooKì≥rSîvîMaö
 
maö
 = 
√w
 
	`ZooKì≥rSîvîMaö
();

51 
åy
 {

52 
maö
.
	`öôülizeAndRun
(
¨gs
);

53 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

54 
LOG
.
	`îr‹
("InvÆidárgumíts,Éxôögábn‹mÆly", 
e
);

55 
LOG
.
	`öfo
(
USAGE
);

56 
Sy°em
.
îr
.
	`¥öén
(
USAGE
);

57 
Sy°em
.
	`exô
(2);

58 } 
	`ˇtch
 (
C⁄figEx˚±i⁄
 
e
) {

59 
LOG
.
	`îr‹
("InvÆid c⁄fig,Éxôögábn‹mÆly", 
e
);

60 
Sy°em
.
îr
.
	`¥öén
("Invalid config,Éxitingábnormally");

61 
Sy°em
.
	`exô
(2);

62 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

63 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄,Éxôögábn‹mÆly", 
e
);

64 
Sy°em
.
	`exô
(1);

66 
LOG
.
	`öfo
("ExitingÇormally");

67 
Sy°em
.
	`exô
(0);

70 
¥Ÿe˘ed
 
	$öôülizeAndRun
(
Såög
[] 
¨gs
)

71 
throws
 
C⁄figEx˚±i⁄
, 
IOEx˚±i⁄


73 
åy
 {

74 
M™agedUtû
.
	`ªgi°îLog4jMBóns
();

75 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

76 
LOG
.
	`w¨n
("U«bÀÅÿªgi°îÜog4j JMX c⁄åﬁ", 
e
);

79 
SîvîC⁄fig
 
c⁄fig
 = 
√w
 
	`SîvîC⁄fig
();

80 i‡(
¨gs
.
Àngth
 == 1) {

81 
c⁄fig
.
	`∑r£
(
¨gs
[0]);

83 
c⁄fig
.
	`∑r£
(
¨gs
);

86 
	`runFromC⁄fig
(
c⁄fig
);

87 
	}
}

94 
public
 
	$runFromC⁄fig
(
SîvîC⁄fig
 
c⁄fig
Ë
throws
 
IOEx˚±i⁄
 {

95 
LOG
.
	`öfo
("Starting server");

96 
åy
 {

101 
ZooKì≥rSîvî
 
zkSîvî
 = 
√w
 
	`ZooKì≥rSîvî
();

103 
FûeTxnS«pLog
 
·xn
 = 
√w
 
	`FûeTxnS«pLog
(new

104 
	`Fûe
(
c⁄fig
.
d©aLogDú
), 
√w
 Fûe(c⁄fig.
d©aDú
));

105 
zkSîvî
.
	`£tTxnLogFa˘‹y
(
·xn
);

106 
zkSîvî
.
	`£tTickTime
(
c⁄fig
.
tickTime
);

107 
zkSîvî
.
	`£tMöSessi⁄Timeout
(
c⁄fig
.
möSessi⁄Timeout
);

108 
zkSîvî
.
	`£tMaxSessi⁄Timeout
(
c⁄fig
.
maxSessi⁄Timeout
);

109 
˙xnFa˘‹y
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
();

110 
˙xnFa˘‹y
.
	`c⁄figuª
(
c⁄fig
.
	`gëClõ¡P‹tAddªss
(),

111 
c⁄fig
.
	`gëMaxClõ¡Cnxns
());

112 
˙xnFa˘‹y
.
	`°¨tup
(
zkSîvî
);

113 
˙xnFa˘‹y
.
	`joö
();

114 i‡(
zkSîvî
.
	`isRu¬ög
()) {

115 
zkSîvî
.
	`shutdown
();

117 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

119 
LOG
.
	`w¨n
("Sîvî i¡îru±ed", 
e
);

121 
	}
}

126 
¥Ÿe˘ed
 
	$shutdown
() {

127 
˙xnFa˘‹y
.
	`shutdown
();

128 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooTrace.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPackë
;

32 
public
 cœs†
	cZooTø˚
 {

33 
föÆ
 
public
 
	mCLIENT_REQUEST_TRACE_MASK
 = 1 << 1;

35 
föÆ
 
public
 
	mCLIENT_DATA_PACKET_TRACE_MASK
 = 1 << 2;

37 
föÆ
 
public
 
	mCLIENT_PING_TRACE_MASK
 = 1 << 3;

39 
föÆ
 
public
 
	mSERVER_PACKET_TRACE_MASK
 = 1 << 4;

41 
föÆ
 
public
 
	mSESSION_TRACE_MASK
 = 1 << 5;

43 
föÆ
 
public
 
	mEVENT_DELIVERY_TRACE_MASK
 = 1 << 6;

45 
föÆ
 
public
 
	mSERVER_PING_TRACE_MASK
 = 1 << 7;

47 
föÆ
 
public
 
	mWARNING_TRACE_MASK
 = 1 << 8;

49 
föÆ
 
public
 
	mJMX_TRACE_MASK
 = 1 << 9;

51 
¥iv©e
 
	måa˚Mask
 = 
CLIENT_REQUEST_TRACE_MASK


52 | 
SERVER_PACKET_TRACE_MASK
 | 
SESSION_TRACE_MASK


53 | 
WARNING_TRACE_MASK
;

55 
public
 
	$gëTextTø˚Levñ
() {

56  
åa˚Mask
;

59 
public
 
	$£tTextTø˚Levñ
(
mask
) {

60 
åa˚Mask
 = 
mask
;

61 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
ZooTø˚
.
˛ass
);

62 
LOG
.
	`öfo
("SëÅexàåa˚ maskÅÿ0x" + 
L⁄g
.
	`toHexSåög
(
mask
));

63 
	}
}

65 
public
 
boﬁón
 
	$isTø˚E«bÀd
(
Loggî
 
log
, 
mask
) {

66  
log
.
	`isTø˚E«bÀd
(Ë&& (
mask
 & 
åa˚Mask
) != 0;

67 
	}
}

69 
public
 
	$logTø˚Mesßge
(
Loggî
 
log
, 
mask
, 
Såög
 
msg
) {

70 i‡(
	`isTø˚E«bÀd
(
log
, 
mask
)) {

71 
log
.
	`åa˚
(
msg
);

73 
	}
}

75 
public
 
	$logQu‹umPackë
(
Loggî
 
log
, 
mask
,

76 
dúe˘i⁄
, 
Qu‹umPackë
 
qp
)

84 
	}
}

86 
public
 
	$logReque°
(
Loggî
 
log
, 
mask
,

87 
Ω
, 
Reque°
 
ªque°
, 
Såög
 
hódî
)

89 i‡(
	`isTø˚E«bÀd
(
log
, 
mask
)) {

90 
log
.
	`åa˚
(
hódî
 + ":" + 
Ω
 + 
ªque°
.
	`toSåög
());

92 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

28 
public
 
öãrÁ˚
 
	gAuthítiˇti⁄Providî
 {

35 
Såög
 
gëScheme
();

49 
	gKì≥rEx˚±i⁄
.
Code
 
h™dÀAuthítiˇti⁄
(
SîvîCnxn
 
˙xn
, 
byã
 
authD©a
[]);

62 
boﬁón
 
m©ches
(
Såög
 
id
, Såög 
a˛Ex¥
);

72 
boﬁón
 
isAuthítiˇãd
();

81 
boﬁón
 
isVÆid
(
Såög
 
id
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	gjava
.
	g£curôy
.
	gMesßgeDige°
;

22 
imp‹t
 
	gjava
.
	g£curôy
.
	gNoSuchAlg‹ôhmEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

30 
public
 cœs†
	cDige°Authítiˇti⁄Providî
 
im∂emíts
 
	mAuthítiˇti⁄Providî
 {

31 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

32 
LoggîFa˘‹y
.
gëLoggî
(
Dige°Authítiˇti⁄Providî
.
˛ass
);

39 
¥iv©e
 
föÆ
 
Såög
 
	msu≥rDige°
 = 
Sy°em
.
gëPr›îty
(

42 
public
 
Såög
 
	$gëScheme
() {

46 
föÆ
 
¥iv©e
 
Såög
 
	$ba£64Encode
(
byã
 
b
[]) {

47 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

48 
i
 = 0; i < 
b
.
Àngth
;) {

49 
∑d
 = 0;

50 
v
 = (
b
[
i
++] & 0xff) << 16;

51 i‡(
i
 < 
b
.
Àngth
) {

52 
v
 |(
b
[
i
++] & 0xff) << 8;

54 
∑d
++;

56 i‡(
i
 < 
b
.
Àngth
) {

57 
v
 |(
b
[
i
++] & 0xff);

59 
∑d
++;

61 
sb
.
	`≠≥nd
(
	`ícode
(
v
 >> 18));

62 
sb
.
	`≠≥nd
(
	`ícode
(
v
 >> 12));

63 i‡(
∑d
 < 2) {

64 
sb
.
	`≠≥nd
(
	`ícode
(
v
 >> 6));

66 
sb
.
	`≠≥nd
('=');

68 i‡(
∑d
 < 1) {

69 
sb
.
	`≠≥nd
(
	`ícode
(
v
));

71 
sb
.
	`≠≥nd
('=');

74  
sb
.
	`toSåög
();

75 
	}
}

77 
föÆ
 
¥iv©e
 
	$ícode
(
i
) {

78 
i
 &= 0x3f;

79 i‡(
i
 < 26) {

80  (Ë('A' + 
i
);

82 i‡(
i
 < 52) {

83  (Ë('a' + 
i
 - 26);

85 i‡(
i
 < 62) {

86  (Ë('0' + 
i
 - 52);

88  
i
 == 62 ? '+' : '/';

89 
	}
}

91 
public
 
Såög
 
	$gíî©eDige°
(
Såög
 
idPassw‹d
)

92 
throws
 
NoSuchAlg‹ôhmEx˚±i⁄
 {

93 
Såög
 
∑πs
[] = 
idPassw‹d
.
	`•lô
(":", 2);

94 
byã
 
dige°
[] = 
MesßgeDige°
.
	`gëIn°™˚
("SHA1").
	`dige°
(

95 
idPassw‹d
.
	`gëByãs
());

96  
∑πs
[0] + ":" + 
	`ba£64Encode
(
dige°
);

97 
	}
}

99 
public
 
	gKì≥rEx˚±i⁄
.
Code


100 
	$h™dÀAuthítiˇti⁄
(
SîvîCnxn
 
˙xn
, 
byã
[] 
authD©a
)

102 
Såög
 
id
 = 
√w
 
	`Såög
(
authD©a
);

103 
åy
 {

104 
Såög
 
dige°
 = 
	`gíî©eDige°
(
id
);

105 i‡(
dige°
.
	`equÆs
(
su≥rDige°
)) {

106 
˙xn
.
	`addAuthInfo
(
√w
 
	`Id
("super", ""));

108 
˙xn
.
	`addAuthInfo
(
√w
 
	`Id
(
	`gëScheme
(), 
dige°
));

109  
Kì≥rEx˚±i⁄
.
Code
.
OK
;

110 } 
	`ˇtch
 (
NoSuchAlg‹ôhmEx˚±i⁄
 
e
) {

111 
LOG
.
	`îr‹
("Missögálg‹ôhm",
e
);

113  
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
;

114 
	}
}

116 
public
 
boﬁón
 
	$isAuthítiˇãd
() {

117  
åue
;

118 
	}
}

120 
public
 
boﬁón
 
	$isVÆid
(
Såög
 
id
) {

121 
Såög
 
∑πs
[] = 
id
.
	`•lô
(":");

122  
∑πs
.
Àngth
 == 2;

123 
	}
}

125 
public
 
boﬁón
 
	$m©ches
(
Såög
 
id
, Såög 
a˛Ex¥
) {

126  
id
.
	`equÆs
(
a˛Ex¥
);

127 
	}
}

134 
public
 
	$maö
(
Såög
 
¨gs
[]Ë
throws
 
NoSuchAlg‹ôhmEx˚±i⁄
 {

135 
i
 = 0; i < 
¨gs
.
Àngth
; i++) {

136 
Sy°em
.
out
.
	`¥öén
(
¨gs
[
i
] + "->" + 
	`gíî©eDige°
(args[i]));

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/DigestLoginModule.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gSubje˘
;

22 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlbackH™dÀr
;

23 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	g•i
.
	gLogöModuÀ
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

26 
public
 cœs†
	cDige°LogöModuÀ
 
im∂emíts
 
	mLogöModuÀ
 {

27 
¥iv©e
 
Subje˘
 
	msubje˘
;

29 
public
 
boﬁón
 
	$ab‹t
() {

30  
Ál£
;

33 
public
 
boﬁón
 
	$commô
() {

34  
åue
;

35 
	}
}

37 
public
 
öôülize
(
Subje˘
 
subje˘
, 
CÆlbackH™dÀr
 
ˇŒbackH™dÀr
, 
M≠
<
Såög
,?> 
sh¨edSèã
, M≠<Såög,?> 
›ti⁄s
) {

38 i‡(
	g›ti⁄s
.
c⁄èösKey
("username")) {

40 
	gthis
.
	gsubje˘
 = 
subje˘
;

41 
Såög
 
	gu£∫ame
 = (Såög)
›ti⁄s
.
gë
("username");

42 
	gthis
.
	gsubje˘
.
gëPublicCªdítüls
().
add
((
Obje˘
)
u£∫ame
);

43 
Såög
 
	g∑ssw‹d
 = (Såög)
›ti⁄s
.
gë
("password");

44 
	gthis
.
	gsubje˘
.
gëPriv©eCªdítüls
().
add
((
Obje˘
)
∑ssw‹d
);

49 
public
 
boﬁón
 
	$logout
() {

50  
åue
;

51 
	}
}

53 
public
 
boﬁón
 
	$logö
() {

56  
åue
;

57 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

25 
public
 cœs†
	cIPAuthítiˇti⁄Providî
 
im∂emíts
 
	mAuthítiˇti⁄Providî
 {

27 
public
 
Såög
 
	$gëScheme
() {

31 
public
 
Kì≥rEx˚±i⁄
.
Code


32 
	$h™dÀAuthítiˇti⁄
(
SîvîCnxn
 
˙xn
, 
byã
[] 
authD©a
)

34 
Såög
 
id
 = 
˙xn
.
	`gëRemŸeSockëAddªss
().
	`gëAddªss
().
	`gëHo°Addªss
();

35 
˙xn
.
	`addAuthInfo
(
√w
 
	`Id
(
	`gëScheme
(), 
id
));

36  
Kì≥rEx˚±i⁄
.
Code
.
OK
;

37 
	}
}

41 
¥iv©e
 
	gbyã
[] 
	$addr2Byãs
(
Såög
 
addr
) {

42 
byã
 
b
[] = 
	`v4addr2Byãs
(
addr
);

44  
b
;

45 
	}
}

47 
¥iv©e
 
	gbyã
[] 
	$v4addr2Byãs
(
Såög
 
addr
) {

48 
Såög
 
∑πs
[] = 
addr
.
	`•lô
("\\.", -1);

49 i‡(
∑πs
.
Àngth
 != 4) {

50  
nuŒ
;

52 
byã
 
b
[] = 
√w
 byte[4];

53 
i
 = 0; i < 4; i++) {

54 
åy
 {

55 
v
 = 
I¡egî
.
	`∑r£I¡
(
∑πs
[
i
]);

56 i‡(
v
 >= 0 && v <= 255) {

57 
b
[
i
] = (
byã
Ë
v
;

59  
nuŒ
;

61 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

62  
nuŒ
;

65  
b
;

66 
	}
}

68 
¥iv©e
 
	$mask
(
byã
 
b
[], 
bôs
) {

69 
°¨t
 = 
bôs
 / 8;

70 
°¨tMask
 = (1 << (8 - (
bôs
 % 8))) - 1;

71 
°¨tMask
 = ~startMask;

72 
°¨t
 < 
b
.
Àngth
) {

73 
b
[
°¨t
] &
°¨tMask
;

74 
°¨tMask
 = 0;

75 
°¨t
++;

77 
	}
}

79 
public
 
boﬁón
 
	$m©ches
(
Såög
 
id
, Såög 
a˛Ex¥
) {

80 
Såög
 
∑πs
[] = 
a˛Ex¥
.
	`•lô
("/", 2);

81 
byã
 
a˛Addr
[] = 
	`addr2Byãs
(
∑πs
[0]);

82 i‡(
a˛Addr
 =
nuŒ
) {

83  
Ál£
;

85 
bôs
 = 
a˛Addr
.
Àngth
 * 8;

86 i‡(
∑πs
.
Àngth
 == 2) {

87 
åy
 {

88 
bôs
 = 
I¡egî
.
	`∑r£I¡
(
∑πs
[1]);

89 i‡(
bôs
 < 0 || bô†> 
a˛Addr
.
Àngth
 * 8) {

90  
Ál£
;

92 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

93  
Ál£
;

96 
	`mask
(
a˛Addr
, 
bôs
);

97 
byã
 
ªmŸeAddr
[] = 
	`addr2Byãs
(
id
);

98 i‡(
ªmŸeAddr
 =
nuŒ
) {

99  
Ál£
;

101 
	`mask
(
ªmŸeAddr
, 
bôs
);

102 
i
 = 0; i < 
ªmŸeAddr
.
Àngth
; i++) {

103 i‡(
ªmŸeAddr
[
i
] !
a˛Addr
[i]) {

104  
Ál£
;

107  
åue
;

108 
	}
}

110 
public
 
boﬁón
 
	$isAuthítiˇãd
() {

111  
Ál£
;

112 
	}
}

114 
public
 
boﬁón
 
	$isVÆid
(
Såög
 
id
) {

115  
	`addr2Byãs
(
id
Ë!
nuŒ
;

116 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/KerberosName.java

28 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

30 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gKîbîosUtû
;

43 
public
 cœs†
	cKîbîosName
 {

45 
¥iv©e
 
föÆ
 
Såög
 
	m£rvi˚Name
;

47 
¥iv©e
 
föÆ
 
Såög
 
	mho°Name
;

49 
¥iv©e
 
föÆ
 
Såög
 
	mªÆm
;

54 
¥iv©e
 
föÆ
 
P©ã∫
 
	m«meP¨£r
 =

55 
P©ã∫
.
compûe
("([^/@]*)(/([^/@]*))?@([^/@]*)");

61 
¥iv©e
 
P©ã∫
 
	m∑ømëîP©ã∫
 =

62 
P©ã∫
.
compûe
("([^$]*)(\\$(\\d*))?");

67 
¥iv©e
 
föÆ
 
P©ã∫
 
	mruÀP¨£r
 =

68 
P©ã∫
.
compûe
("\\s*((DEFAULT)|(RULE:\\[(\\d*):([^\\]]*)](\\(([^)]*)\\))?"+

74 
¥iv©e
 
föÆ
 
P©ã∫
 
	mn⁄Sim∂eP©ã∫
 = P©ã∫.
compûe
("[/@]");

79 
¥iv©e
 
	mLi°
<
	mRuÀ
> 
	mruÀs
;

81 
¥iv©e
 
Såög
 
	mdeÁu…Rólm
;

84 
	måy
 {

85 
	mdeÁu…Rólm
 = 
KîbîosUtû
.
gëDeÁu…Rólm
();

86 } 
ˇtch
 (
Ex˚±i⁄
 
ke
) {

87 i‡((
	mSy°em
.
gëPr›îty
("zookì≥r.ªquúeKîbîosC⁄fig"Ë!
nuŒ
) &&

88 (
Sy°em
.
gëPr›îty
("zookì≥r.ªquúeKîbîosC⁄fig").
equÆs
("true"))) {

89 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
("C™'àgë Kîbîo†c⁄figuøti⁄",
ke
);

92 
	mdeÁu…Rólm
="";

94 
	måy
 {

99 
£tC⁄figuøti⁄
();

101 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

102 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
("CouldÇot configure KerberosÖrincipalÇame mapping.");

110 
public
 
	$KîbîosName
(
Såög
 
«me
) {

111 
M©chî
 
m©ch
 = 
«meP¨£r
.
	`m©chî
(
«me
);

112 i‡(!
m©ch
.
	`m©ches
()) {

113 i‡(
«me
.
	`c⁄èös
("@")) {

114 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("MÆf‹med Kîbîo†«me: " + 
«me
);

116 
£rvi˚Name
 = 
«me
;

117 
ho°Name
 = 
nuŒ
;

118 
ªÆm
 = 
nuŒ
;

121 
£rvi˚Name
 = 
m©ch
.
	`group
(1);

122 
ho°Name
 = 
m©ch
.
	`group
(3);

123 
ªÆm
 = 
m©ch
.
	`group
(4);

125 
	}
}

131 
public
 
Såög
 
	$gëDeÁu…Rólm
() {

132  
deÁu…Rólm
;

133 
	}
}

138 @
Ovîride


139 
public
 
Såög
 
	$toSåög
() {

140 
SåögBuûdî
 
ªsu…
 = 
√w
 
	`SåögBuûdî
();

141 
ªsu…
.
	`≠≥nd
(
£rvi˚Name
);

142 i‡(
ho°Name
 !
nuŒ
) {

143 
ªsu…
.
	`≠≥nd
('/');

144 
ªsu…
.
	`≠≥nd
(
ho°Name
);

146 i‡(
ªÆm
 !
nuŒ
) {

147 
ªsu…
.
	`≠≥nd
('@');

148 
ªsu…
.
	`≠≥nd
(
ªÆm
);

150  
ªsu…
.
	`toSåög
();

151 
	}
}

157 
public
 
Såög
 
	$gëSîvi˚Name
() {

158  
£rvi˚Name
;

159 
	}
}

165 
public
 
Såög
 
	$gëHo°Name
() {

166  
ho°Name
;

167 
	}
}

173 
public
 
Såög
 
	$gëRólm
() {

174  
ªÆm
;

175 
	}
}

180 
¥iv©e
 ˛as†
	cRuÀ
 {

181 
¥iv©e
 
föÆ
 
boﬁón
 
	gisDeÁu…
;

182 
¥iv©e
 
föÆ
 
	gnumOfComp⁄íts
;

183 
¥iv©e
 
föÆ
 
Såög
 
	gf‹m©
;

184 
¥iv©e
 
föÆ
 
P©ã∫
 
	gm©ch
;

185 
¥iv©e
 
föÆ
 
P©ã∫
 
	g‰omP©ã∫
;

186 
¥iv©e
 
föÆ
 
Såög
 
	gtoP©ã∫
;

187 
¥iv©e
 
föÆ
 
boﬁón
 
	gª≥©
;

189 
RuÀ
() {

190 
	gisDeÁu…
 = 
åue
;

191 
	gnumOfComp⁄íts
 = 0;

192 
	gf‹m©
 = 
nuŒ
;

193 
	gm©ch
 = 
nuŒ
;

194 
	g‰omP©ã∫
 = 
nuŒ
;

195 
	gtoP©ã∫
 = 
nuŒ
;

196 
	gª≥©
 = 
Ál£
;

199 
RuÀ
(
numOfComp⁄íts
, 
Såög
 
f‹m©
, Såög 
m©ch
, Såög 
‰omP©ã∫
,

200 
Såög
 
toP©ã∫
, 
boﬁón
 
ª≥©
) {

201 
	gisDeÁu…
 = 
Ál£
;

202 
	gthis
.
	gnumOfComp⁄íts
 = 
numOfComp⁄íts
;

203 
	gthis
.
	gf‹m©
 = 
f‹m©
;

204 
	gthis
.
	gm©ch
 = 
m©ch
 =
nuŒ
 ?ÇuŒ : 
P©ã∫
.
compûe
(match);

205 
	gthis
.
	g‰omP©ã∫
 =

206 
‰omP©ã∫
 =
nuŒ
 ?ÇuŒ : 
P©ã∫
.
compûe
(fromPattern);

207 
	gthis
.
	gtoP©ã∫
 = 
toP©ã∫
;

208 
	gthis
.
	gª≥©
 = 
ª≥©
;

211 @
Ovîride


212 
public
 
Såög
 
toSåög
() {

213 
SåögBuûdî
 
	gbuf
 = 
√w
 StringBuilder();

214 i‡(
	gisDeÁu…
) {

215 
	gbuf
.
≠≥nd
("DEFAULT");

217 
	gbuf
.
≠≥nd
("RULE:[");

218 
	gbuf
.
≠≥nd
(
numOfComp⁄íts
);

219 
	gbuf
.
≠≥nd
(':');

220 
	gbuf
.
≠≥nd
(
f‹m©
);

221 
	gbuf
.
≠≥nd
(']');

222 i‡(
	gm©ch
 !
nuŒ
) {

223 
buf
.
≠≥nd
('(');

224 
	gbuf
.
≠≥nd
(
m©ch
);

225 
	gbuf
.
≠≥nd
(')');

227 i‡(
	g‰omP©ã∫
 !
nuŒ
) {

228 
buf
.
≠≥nd
("s/");

229 
	gbuf
.
≠≥nd
(
‰omP©ã∫
);

230 
	gbuf
.
≠≥nd
('/');

231 
	gbuf
.
≠≥nd
(
toP©ã∫
);

232 
	gbuf
.
≠≥nd
('/');

233 i‡(
	gª≥©
) {

234 
	gbuf
.
≠≥nd
('g');

238  
	gbuf
.
toSåög
();

250 
Såög
 
ª∂a˚P¨amëîs
(Såög 
f‹m©
,

251 
Såög
[] 
∑øms
Ë
throws
 
	gBadF‹m©Såög
 {

252 
M©chî
 
	gm©ch
 = 
∑ømëîP©ã∫
.
m©chî
(
f‹m©
);

253 
	g°¨t
 = 0;

254 
SåögBuûdî
 
	gªsu…
 = 
√w
 StringBuilder();

255 
	g°¨t
 < 
	gf‹m©
.
Àngth
(Ë&& 
	gm©ch
.
föd
(
°¨t
)) {

256 
	gªsu…
.
≠≥nd
(
m©ch
.
group
(1));

257 
Såög
 
	g∑ømNum
 = 
m©ch
.
group
(3);

258 i‡(
	g∑ømNum
 !
nuŒ
) {

259 
åy
 {

260 
num
 = 
I¡egî
.
∑r£I¡
(
∑ømNum
);

261 i‡(
	gnum
 < 0 ||Çum > 
	g∑øms
.
	gÀngth
) {

262 
throw
 
√w
 
BadF‹m©Såög
("ödex " + 
num
 + " from " + 
f‹m©
 +

264 (
∑øms
.
Àngth
 - 1));

266 
	gªsu…
.
≠≥nd
(
∑øms
[
num
]);

267 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
n„
) {

268 
throw
 
√w
 
BadF‹m©Såög
("bad format in username mapping in " +

269 
∑ømNum
, 
n„
);

273 
	g°¨t
 = 
m©ch
.
íd
();

275  
	gªsu…
.
toSåög
();

287 
Såög
 
ª∂a˚Sub°ôuti⁄
(Såög 
ba£
, 
P©ã∫
 
‰om
, Såög 
to
,

288 
boﬁón
 
ª≥©
) {

289 
M©chî
 
	gm©ch
 = 
‰om
.
m©chî
(
ba£
);

290 i‡(
	gª≥©
) {

291  
	gm©ch
.
ª∂a˚AŒ
(
to
);

293  
	gm©ch
.
ª∂a˚Fú°
(
to
);

305 
Såög
 
≠∂y
(Såög[] 
∑øms
Ë
throws
 
	gIOEx˚±i⁄
 {

306 
Såög
 
	gªsu…
 = 
nuŒ
;

307 i‡(
	gisDeÁu…
) {

308 i‡(
	gdeÁu…Rólm
.
equÆs
(
∑øms
[0])) {

309 
	gªsu…
 = 
∑øms
[1];

311 } i‡(
	g∑øms
.
	gÀngth
 - 1 =
numOfComp⁄íts
) {

312 
Såög
 
ba£
 = 
ª∂a˚P¨amëîs
(
f‹m©
, 
∑øms
);

313 i‡(
	gm©ch
 =
nuŒ
 || 
m©ch
.
m©chî
(
ba£
).
m©ches
()) {

314 i‡(
‰omP©ã∫
 =
nuŒ
) {

315 
ªsu…
 = 
ba£
;

317 
	gªsu…
 = 
ª∂a˚Sub°ôuti⁄
(
ba£
, 
‰omP©ã∫
, 
toP©ã∫
, 
ª≥©
);

321 i‡(
	gªsu…
 !
nuŒ
 && 
n⁄Sim∂eP©ã∫
.
m©chî
(
ªsu…
).
föd
()) {

322 
throw
 
√w
 
NoM©chögRuÀ
("N⁄-sim∂ê«mê" + 
ªsu…
 +

323 "á·îáuth_to_loˇ»ruÀ " + 
this
);

325  
	gªsu…
;

329 
	gLi°
<
	gRuÀ
> 
	$∑r£RuÀs
(
Såög
 
ruÀs
) {

330 
Li°
<
RuÀ
> 
ªsu…
 = 
√w
 
AºayLi°
<Rule>();

331 
Såög
 
ªmaöög
 = 
ruÀs
.
	`åim
();

332 
ªmaöög
.
	`Àngth
() > 0) {

333 
M©chî
 
m©chî
 = 
ruÀP¨£r
.
	`m©chî
(
ªmaöög
);

334 i‡(!
m©chî
.
	`lookögAt
()) {

335 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("InvÆidÑuÀ: " + 
ªmaöög
);

337 i‡(
m©chî
.
	`group
(2Ë!
nuŒ
) {

338 
ªsu…
.
	`add
(
√w
 
	`RuÀ
());

340 
ªsu…
.
	`add
(
√w
 
	`RuÀ
(
I¡egî
.
	`∑r£I¡
(
m©chî
.
	`group
(4)),

341 
m©chî
.
	`group
(5),

342 
m©chî
.
	`group
(7),

343 
m©chî
.
	`group
(9),

344 
m©chî
.
	`group
(10),

345 "g".
	`equÆs
(
m©chî
.
	`group
(11))));

347 
ªmaöög
 =Ñemaöög.
	`sub°rög
(
m©chî
.
	`íd
());

349  
ªsu…
;

350 
	}
}

357 
public
 
	$£tC⁄figuøti⁄
(Ë
throws
 
IOEx˚±i⁄
 {

358 
Såög
 
ruÀSåög
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.security.auth_to_local", "DEFAULT");

359 
ruÀs
 = 
	`∑r£RuÀs
(
ruÀSåög
);

360 
	}
}

362 @
SuµªssW¨nögs
("serial")

363 
public
 ˛as†
	cBadF‹m©Såög
 
exãnds
 
	gIOEx˚±i⁄
 {

364 
BadF‹m©Såög
(
Såög
 
msg
) {

365 
su≥r
(
msg
);

367 
BadF‹m©Såög
(
Såög
 
msg
, 
ThrowabÀ
 
îr
) {

368 
su≥r
(
msg
, 
îr
);

372 @
SuµªssW¨nögs
("serial")

373 
public
 ˛as†
	cNoM©chögRuÀ
 
exãnds
 
	gIOEx˚±i⁄
 {

374 
NoM©chögRuÀ
(
Såög
 
msg
) {

375 
su≥r
(
msg
);

385 
public
 
Såög
 
	$gëSh‹tName
(Ë
throws
 
IOEx˚±i⁄
 {

386 
Såög
[] 
∑øms
;

387 i‡(
ho°Name
 =
nuŒ
) {

389 i‡(
ªÆm
 =
nuŒ
) {

390  
£rvi˚Name
;

392 
∑øms
 = 
√w
 
Såög
[]{
ªÆm
, 
£rvi˚Name
};

394 
∑øms
 = 
√w
 
Såög
[]{
ªÆm
, 
£rvi˚Name
, 
ho°Name
};

396 
RuÀ
 
r
: 
ruÀs
) {

397 
Såög
 
ªsu…
 = 
r
.
	`≠∂y
(
∑øms
);

398 i‡(
ªsu…
 !
nuŒ
) {

399  
ªsu…
;

402 
throw
 
√w
 
	`NoM©chögRuÀ
("NÿruÀ†≠∂õdÅÿ" + 
	`toSåög
());

403 
	}
}

405 
	$¥ötRuÀs
(Ë
throws
 
IOEx˚±i⁄
 {

406 
i
 = 0;

407 
RuÀ
 
r
: 
ruÀs
) {

408 
Sy°em
.
out
.
	`¥öén
(++
i
 + " " + 
r
);

410 
	}
}

412 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
Ex˚±i⁄
 {

413 
Såög
 
¨g
: 
¨gs
) {

414 
KîbîosName
 
«me
 = 
√w
 
	`KîbîosName
(
¨g
);

415 
Sy°em
.
out
.
	`¥öén
("Name: " + 
«me
 + "Åÿ" +Çame.
	`gëSh‹tName
());

417 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumî©i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

29 
public
 cœs†
	cProvidîRegi°ry
 {

30 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ProvidîRegi°ry
.
˛ass
);

32 
¥iv©e
 
boﬁón
 
	möôülized
 = 
Ál£
;

33 
¥iv©e
 
	mHashM≠
<
	mSåög
, 
	mAuthítiˇti⁄Providî
> 
	mauthítiˇti⁄Providîs
 =

34 
√w
 
HashM≠
<
Såög
, 
	mAuthítiˇti⁄Providî
>();

36 
public
 
	$öôülize
() {

37 
	`synchr⁄ized
 (
ProvidîRegi°ry
.
˛ass
) {

38 i‡(
öôülized
)

40 
IPAuthítiˇti⁄Providî
 
ùp
 = 
√w
 
	`IPAuthítiˇti⁄Providî
();

41 
Dige°Authítiˇti⁄Providî
 
digp
 = 
√w
 
	`Dige°Authítiˇti⁄Providî
();

42 
authítiˇti⁄Providîs
.
	`put
(
ùp
.
	`gëScheme
(), ipp);

43 
authítiˇti⁄Providîs
.
	`put
(
digp
.
	`gëScheme
(), digp);

44 
Enumî©i⁄
<
Obje˘
> 
í
 = 
Sy°em
.
	`gëPr›îtõs
().
	`keys
();

45 
í
.
	`hasM‹eEÀmíts
()) {

46 
Såög
 
k
 = (SåögË
í
.
	`√xtEÀmít
();

47 i‡(
k
.
	`°¨tsWôh
("zookeeper.authProvider.")) {

48 
Såög
 
˛assName
 = 
Sy°em
.
	`gëPr›îty
(
k
);

49 
åy
 {

50 
Cœss
<?> 
c
 = 
ZooKì≥rSîvî
.
˛ass
.
	`gëCœssLﬂdî
()

51 .
	`lﬂdCœss
(
˛assName
);

52 
Authítiˇti⁄Providî
 
≠
 = (Authítiˇti⁄ProvidîË
c


53 .
	`√wIn°™˚
();

54 
authítiˇti⁄Providîs
.
	`put
(
≠
.
	`gëScheme
(),áp);

55 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

56 
LOG
.
	`w¨n
("ProbÀm†lﬂdög " + 
˛assName
,
e
);

60 
öôülized
 = 
åue
;

64 
public
 
Authítiˇti⁄Providî
 
	$gëProvidî
(
Såög
 
scheme
) {

65 if(!
öôülized
)

66 
	`öôülize
();

67  
authítiˇti⁄Providîs
.
	`gë
(
scheme
);

68 
	}
}

70 
public
 
Såög
 
	$li°Providîs
() {

71 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

72 
Såög
 
s
: 
authítiˇti⁄Providîs
.
	`keySë
()) {

73 
sb
.
	`≠≥nd
(
s
 + " ");

75  
sb
.
	`toSåög
();

76 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

24 
public
 cœs†
	cSASLAuthítiˇti⁄Providî
 
im∂emíts
 
	mAuthítiˇti⁄Providî
 {

26 
public
 
Såög
 
	$gëScheme
() {

30 
public
 
Kì≥rEx˚±i⁄
.
Code


31 
	$h™dÀAuthítiˇti⁄
(
SîvîCnxn
 
˙xn
, 
byã
[] 
authD©a
)

36  
Kì≥rEx˚±i⁄
.
Code
.
AUTHFAILED
;

38 
	}
}

40 
public
 
boﬁón
 
	$m©ches
(
Såög
 
id
,Såög 
a˛Ex¥
) {

41 i‡(
Sy°em
.
	`gëPr›îty
("zookì≥r.su≥rU£r"Ë!
nuŒ
) {

42  (
id
.
	`equÆs
(
Sy°em
.
	`gëPr›îty
("zookì≥r.su≥rU£r")Ë|| id.equÆs(
a˛Ex¥
));

44  (
id
.
	`equÆs
("su≥r"Ë|| id.equÆs(
a˛Ex¥
));

45 
	}
}

47 
public
 
boﬁón
 
	$isAuthítiˇãd
() {

48  
åue
;

49 
	}
}

51 
public
 
boﬁón
 
	$isVÆid
(
Såög
 
id
) {

60 
åy
 {

61 
√w
 
	`KîbîosName
(
id
);

62  
åue
;

64 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

65  
Ál£
;

67 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gauth
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlback
;

28 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gCÆlbackH™dÀr
;

29 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gNameCÆlback
;

30 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gPassw‹dCÆlback
;

31 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	gˇŒback
.
	gUnsuµ‹ãdCÆlbackEx˚±i⁄
;

32 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
;

33 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gC⁄figuøti⁄
;

34 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gAuth‹izeCÆlback
;

35 
imp‹t
 
	gjavax
.
	g£curôy
.
	gß¶
.
	gRólmCÆlback
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSa¶Sîvî
;

39 
public
 cœs†
	cSa¶SîvîCÆlbackH™dÀr
 
im∂emíts
 
	mCÆlbackH™dÀr
 {

40 
¥iv©e
 
föÆ
 
Såög
 
	mUSER_PREFIX
 = "user_";

41 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sa¶SîvîCÆlbackH™dÀr
.
˛ass
);

42 
¥iv©e
 
föÆ
 
Såög
 
	mSYSPROP_SUPER_PASSWORD
 = "zookeeper.SASLAuthenticationProvider.superPassword";

43 
¥iv©e
 
föÆ
 
Såög
 
	mSYSPROP_REMOVE_HOST
 = "zookeeper.kerberos.removeHostFromPrincipal";

44 
¥iv©e
 
föÆ
 
Såög
 
	mSYSPROP_REMOVE_REALM
 = "zookeeper.kerberos.removeRealmFromPrincipal";

46 
¥iv©e
 
Såög
 
	mu£rName
;

47 
¥iv©e
 
föÆ
 
	mM≠
<
	mSåög
,Såög> 
	m¸edítüls
 = 
√w
 
HashM≠
<
Såög
,String>();

49 
public
 
	$Sa¶SîvîCÆlbackH™dÀr
(
C⁄figuøti⁄
 
c⁄figuøti⁄
Ë
throws
 
IOEx˚±i⁄
 {

50 
Såög
 
£rvîSe˘i⁄
 = 
Sy°em
.
	`gëPr›îty
(
ZooKì≥rSa¶Sîvî
.
LOGIN_CONTEXT_NAME_KEY
,

51 
ZooKì≥rSa¶Sîvî
.
DEFAULT_LOGIN_CONTEXT_NAME
);

52 
AµC⁄figuøti⁄E¡ry
 
c⁄figuøti⁄E¡rõs
[] = 
c⁄figuøti⁄
.
	`gëAµC⁄figuøti⁄E¡ry
(
£rvîSe˘i⁄
);

54 i‡(
c⁄figuøti⁄E¡rõs
 =
nuŒ
) {

55 
Såög
 
îr‹Mesßge
 = "CouldÇot findá 'Server'Éntry inÅhis configuration: Server cannot start.";

56 
LOG
.
	`îr‹
(
îr‹Mesßge
);

57 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹Mesßge
);

59 
¸edítüls
.
	`˛ór
();

60 
AµC⁄figuøti⁄E¡ry
 
íåy
: 
c⁄figuøti⁄E¡rõs
) {

61 
M≠
<
Såög
,?> 
›ti⁄s
 = 
íåy
.
	`gëO±i⁄s
();

64 
M≠
.
E¡ry
<
Såög
, ?> 
∑ú
 : 
›ti⁄s
.
	`íåySë
()) {

65 
Såög
 
key
 = 
∑ú
.
	`gëKey
();

66 i‡(
key
.
	`°¨tsWôh
(
USER_PREFIX
)) {

67 
Såög
 
u£rName
 = 
key
.
	`sub°rög
(
USER_PREFIX
.
	`Àngth
());

68 
¸edítüls
.
	`put
(
u£rName
,(
Såög
)
∑ú
.
	`gëVÆue
());

74 
public
 
	$h™dÀ
(
CÆlback
[] 
ˇŒbacks
Ë
throws
 
Unsuµ‹ãdCÆlbackEx˚±i⁄
 {

75 
CÆlback
 
ˇŒback
 : 
ˇŒbacks
) {

76 i‡(
ˇŒback
 
ö°™˚of
 
NameCÆlback
) {

77 
	`h™dÀNameCÆlback
((
NameCÆlback
Ë
ˇŒback
);

78 } i‡(
ˇŒback
 
ö°™˚of
 
Passw‹dCÆlback
) {

79 
	`h™dÀPassw‹dCÆlback
((
Passw‹dCÆlback
Ë
ˇŒback
);

80 } i‡(
ˇŒback
 
ö°™˚of
 
RólmCÆlback
) {

81 
	`h™dÀRólmCÆlback
((
RólmCÆlback
Ë
ˇŒback
);

82 } i‡(
ˇŒback
 
ö°™˚of
 
Auth‹izeCÆlback
) {

83 
	`h™dÀAuth‹izeCÆlback
((
Auth‹izeCÆlback
Ë
ˇŒback
);

86 
	}
}

88 
¥iv©e
 
	$h™dÀNameCÆlback
(
NameCÆlback
 
nc
) {

90 i‡(
¸edítüls
.
	`gë
(
nc
.
	`gëDeÁu…Name
()Ë=
nuŒ
) {

91 
LOG
.
	`w¨n
("U£∏'" + 
nc
.
	`gëDeÁu…Name
() + "'Çot found inÜist of DIGEST-MD5áuthenticateable users.");

94 
nc
.
	`£tName
“c.
	`gëDeÁu…Name
());

95 
u£rName
 = 
nc
.
	`gëDeÁu…Name
();

96 
	}
}

98 
¥iv©e
 
	$h™dÀPassw‹dCÆlback
(
Passw‹dCÆlback
 
pc
) {

99 i‡("su≥r".
	`equÆs
(
this
.
u£rName
Ë&& 
Sy°em
.
	`gëPr›îty
(
SYSPROP_SUPER_PASSWORD
Ë!
nuŒ
) {

101 
pc
.
	`£tPassw‹d
(
Sy°em
.
	`gëPr›îty
(
SYSPROP_SUPER_PASSWORD
).
	`toCh¨Aºay
());

102 } i‡(
¸edítüls
.
	`c⁄èösKey
(
u£rName
) ) {

103 
pc
.
	`£tPassw‹d
(
¸edítüls
.
	`gë
(
u£rName
).
	`toCh¨Aºay
());

105 
LOG
.
	`w¨n
("Nÿ∑ssw‹d found f‹ u£r: " + 
u£rName
);

107 
	}
}

109 
¥iv©e
 
	$h™dÀRólmCÆlback
(
RólmCÆlback
 
rc
) {

110 
LOG
.
	`debug
("˛õ¡ suµlõdÑólm: " + 
rc
.
	`gëDeÁu…Text
());

111 
rc
.
	`£tText
‘c.
	`gëDeÁu…Text
());

112 
	}
}

114 
¥iv©e
 
	$h™dÀAuth‹izeCÆlback
(
Auth‹izeCÆlback
 
ac
) {

115 
Såög
 
authítiˇti⁄ID
 = 
ac
.
	`gëAuthítiˇti⁄ID
();

116 
Såög
 
auth‹iz©i⁄ID
 = 
ac
.
	`gëAuth‹iz©i⁄ID
();

118 
LOG
.
	`öfo
("Suc˚ssfuŒyáuthítiˇãd clõ¡:áuthítiˇti⁄ID=" + 
authítiˇti⁄ID


119 + ";áuth‹iz©i⁄ID=" + 
auth‹iz©i⁄ID
 + ".");

120 
ac
.
	`£tAuth‹ized
(
åue
);

125 
KîbîosName
 
kîbîosName
 = 
√w
 
	`KîbîosName
(
authítiˇti⁄ID
);

126 
åy
 {

127 
SåögBuûdî
 
u£rNameBuûdî
 = 
√w
 
	`SåögBuûdî
(
kîbîosName
.
	`gëSh‹tName
());

128 i‡(
	`shouldAµídHo°
(
kîbîosName
)) {

129 
u£rNameBuûdî
.
	`≠≥nd
("/").≠≥nd(
kîbîosName
.
	`gëHo°Name
());

131 i‡(
	`shouldAµídRólm
(
kîbîosName
)) {

132 
u£rNameBuûdî
.
	`≠≥nd
("@").≠≥nd(
kîbîosName
.
	`gëRólm
());

134 
LOG
.
	`öfo
("Sëtögáuth‹izedID: " + 
u£rNameBuûdî
);

135 
ac
.
	`£tAuth‹izedID
(
u£rNameBuûdî
.
	`toSåög
());

136 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

137 
LOG
.
	`îr‹
("FailedÅo setÇame based on KerberosáuthenticationÑules.");

139 
	}
}

141 
¥iv©e
 
boﬁón
 
	$shouldAµídRólm
(
KîbîosName
 
kîbîosName
) {

142  !
	`isSy°emPr›îtyTrue
(
SYSPROP_REMOVE_REALM
Ë&& 
kîbîosName
.
	`gëRólm
(Ë!
nuŒ
;

143 
	}
}

145 
¥iv©e
 
boﬁón
 
	$shouldAµídHo°
(
KîbîosName
 
kîbîosName
) {

146  !
	`isSy°emPr›îtyTrue
(
SYSPROP_REMOVE_HOST
Ë&& 
kîbîosName
.
	`gëHo°Name
(Ë!
nuŒ
;

147 
	}
}

149 
¥iv©e
 
boﬁón
 
	$isSy°emPr›îtyTrue
(
Såög
 
¥›îtyName
) {

150  "åue".
	`equÆs
(
Sy°em
.
	`gëPr›îty
(
¥›îtyName
));

151 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

20 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

28 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gCheckedI≈utSåóm
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gCheckedOuçutSåóm
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

51 
public
 cœs†
	cFûeS«p
 
im∂emíts
 
	mS«pShŸ
 {

52 
Fûe
 
	m¢≠Dú
;

53 
¥iv©e
 vﬁ©ûê
boﬁón
 
	m˛o£
 = 
Ál£
;

54 
¥iv©e
 
föÆ
 
	mVERSION
=2;

55 
¥iv©e
 
föÆ
 
	mdbId
=-1;

56 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FûeS«p
.
˛ass
);

57 
public
 
föÆ
 
	mSNAP_MAGIC


58 
ByãBuf„r
.
wøp
("ZKSN".
gëByãs
()).
gëI¡
();

59 
public
 
	$FûeS«p
(
Fûe
 
¢≠Dú
) {

60 
this
.
¢≠Dú
 = snapDir;

67 
public
 
	`de£rülize
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
)

68 
throws
 
IOEx˚±i⁄
 {

72 
Li°
<
Fûe
> 
¢≠Li°
 = 
	`födNVÆidS«pshŸs
(100);

73 i‡(
¢≠Li°
.
	`size
() == 0) {

76 
Fûe
 
¢≠
 = 
nuŒ
;

77 
boﬁón
 
foundVÆid
 = 
Ál£
;

78 
i
 = 0; i < 
¢≠Li°
.
	`size
(); i++) {

79 
¢≠
 = 
¢≠Li°
.
	`gë
(
i
);

80 
I≈utSåóm
 
¢≠IS
 = 
nuŒ
;

81 
CheckedI≈utSåóm
 
¸cIn
 = 
nuŒ
;

82 
åy
 {

83 
LOG
.
	`öfo
("Ródög s«pshŸ " + 
¢≠
);

84 
¢≠IS
 = 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(
¢≠
));

85 
¸cIn
 = 
√w
 
	`CheckedI≈utSåóm
(
¢≠IS
,Çew 
	`AdÀr32
());

86 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
¸cIn
);

87 
	`de£rülize
(
dt
,
£ssi⁄s
, 
ü
);

88 
checkSum
 = 
¸cIn
.
	`gëChecksum
().
	`gëVÆue
();

89 
vÆ
 = 
ü
.
	`ªadL⁄g
("val");

90 i‡(
vÆ
 !
checkSum
) {

91 
throw
 
√w
 
	`IOEx˚±i⁄
("CRC c‹ru±i⁄ i¿¢≠shŸ : " + 
¢≠
);

93 
foundVÆid
 = 
åue
;

95 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

96 
LOG
.
	`w¨n
("¥obÀmÑódög s«∞fûê" + 
¢≠
, 
e
);

97 } 
föÆly
 {

98 i‡(
¢≠IS
 !
nuŒ
)

99 
¢≠IS
.
	`˛o£
();

100 i‡(
¸cIn
 !
nuŒ
)

101 
¸cIn
.
	`˛o£
();

104 i‡(!
foundVÆid
) {

105 
throw
 
√w
 
	`IOEx˚±i⁄
("NŸábÀÅÿföd vÆid s«pshŸ†ö " + 
¢≠Dú
);

107 
dt
.
œ°Pro˚s£dZxid
 = 
Utû
.
	`gëZxidFromName
(
¢≠
.
	`gëName
(), "snapshot");

108  
dt
.
œ°Pro˚s£dZxid
;

109 
	}
}

118 
public
 
de£rülize
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
,

119 
I≈utArchive
 
ü
Ë
throws
 
	gIOEx˚±i⁄
 {

120 
FûeHódî
 
	ghódî
 = 
√w
 FileHeader();

121 
	ghódî
.
de£rülize
(
ü
, "fileheader");

122 i‡(
	ghódî
.
gëMagic
(Ë!
SNAP_MAGIC
) {

123 
throw
 
√w
 
IOEx˚±i⁄
("mismatching magic headers "

124 + 
hódî
.
gëMagic
() +

125 " ! " + 
FûeS«p
.
SNAP_MAGIC
);

127 
	gSîülizeUtûs
.
de£rülizeS«pshŸ
(
dt
,
ü
,
£ssi⁄s
);

134 
public
 
Fûe
 
	$födMo°Re˚¡S«pshŸ
(Ë
throws
 
IOEx˚±i⁄
 {

135 
Li°
<
Fûe
> 
fûes
 = 
	`födNVÆidS«pshŸs
(1);

136 i‡(
fûes
.
	`size
() == 0) {

137  
nuŒ
;

139  
fûes
.
	`gë
(0);

140 
	}
}

154 
¥iv©e
 
	gLi°
<
	gFûe
> 
	$födNVÆidS«pshŸs
(
n
Ë
throws
 
IOEx˚±i⁄
 {

155 
Li°
<
Fûe
> 
fûes
 = 
Utû
.
	`s‹tD©aDú
(
¢≠Dú
.
	`li°Fûes
(),"¢≠shŸ", 
Ál£
);

156 
cou¡
 = 0;

157 
Li°
<
Fûe
> 
li°
 = 
√w
 
AºayLi°
<File>();

158 
Fûe
 
f
 : 
fûes
) {

162 
åy
 {

163 i‡(
Utû
.
	`isVÆidS«pshŸ
(
f
)) {

164 
li°
.
	`add
(
f
);

165 
cou¡
++;

166 i‡(
cou¡
 =
n
) {

170 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

171 
LOG
.
	`öfo
("övÆid s«pshŸ " + 
f
, 
e
);

174  
li°
;

175 
	}
}

184 
public
 
	gLi°
<
	gFûe
> 
	$födNRe˚¡S«pshŸs
(
n
Ë
throws
 
IOEx˚±i⁄
 {

185 
Li°
<
Fûe
> 
fûes
 = 
Utû
.
	`s‹tD©aDú
(
¢≠Dú
.
	`li°Fûes
(), "¢≠shŸ", 
Ál£
);

186 
i
 = 0;

187 
Li°
<
Fûe
> 
li°
 = 
√w
 
AºayLi°
<File>();

188 
Fûe
 
f
: 
fûes
) {

189 i‡(
i
==
n
)

191 
i
++;

192 
li°
.
	`add
(
f
);

194  
li°
;

195 
	}
}

205 
¥Ÿe˘ed
 
£rülize
(
D©aTªe
 
dt
,
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
,

206 
OuçutArchive
 
ﬂ
, 
FûeHódî
 
hódî
Ë
throws
 
	gIOEx˚±i⁄
 {

209 if(
	ghódî
==
nuŒ
)

210 
throw
 
√w
 
IŒegÆSèãEx˚±i⁄
(

212 
	ghódî
.
£rülize
(
ﬂ
, "fileheader");

213 
	gSîülizeUtûs
.
£rülizeS«pshŸ
(
dt
,
ﬂ
,
£ssi⁄s
);

222 
public
 
synchr⁄ized
 
£rülize
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
, 
Fûe
 
¢≠ShŸ
)

223 
throws
 
	gIOEx˚±i⁄
 {

224 i‡(!
	g˛o£
) {

225 
OuçutSåóm
 
	g£ssOS
 = 
√w
 
Buf„ªdOuçutSåóm
“ew 
FûeOuçutSåóm
(
¢≠ShŸ
));

226 
CheckedOuçutSåóm
 
	g¸cOut
 = 
√w
 CheckedOuçutSåóm(
£ssOS
,Çew 
AdÀr32
());

228 
OuçutArchive
 
	gﬂ
 = 
Bö¨yOuçutArchive
.
gëArchive
(
¸cOut
);

229 
FûeHódî
 
	ghódî
 = 
√w
 FûeHódî(
SNAP_MAGIC
, 
VERSION
, 
dbId
);

230 
£rülize
(
dt
,
£ssi⁄s
,
ﬂ
, 
hódî
);

231 
	gvÆ
 = 
¸cOut
.
gëChecksum
().
gëVÆue
();

232 
	gﬂ
.
wrôeL⁄g
(
vÆ
, "val");

233 
	gﬂ
.
wrôeSåög
("/", "path");

234 
	g£ssOS
.
Êush
();

235 
	g¸cOut
.
˛o£
();

236 
	g£ssOS
.
˛o£
();

245 @
Ovîride


246 
public
 
synchr⁄ized
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

247 
˛o£
 = 
åue
;

248 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

20 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûãrI≈utSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

29 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

30 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gChecksum
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

45 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

46 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

90 
public
 cœs†
	cFûeTxnLog
 
im∂emíts
 
	mTxnLog
 {

91 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
;

93 
	m¥eAŒocSize
 = 65536 * 1024;

95 
public
 
föÆ
 
	mTXNLOG_MAGIC
 =

96 
ByãBuf„r
.
wøp
("ZKLG".
gëByãs
()).
gëI¡
();

98 
public
 
föÆ
 
	mVERSION
 = 2;

101 
¥iv©e
 
föÆ
 
	mfsyncW¨nögThªshﬁdMS
;

104 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FûeTxnLog
.
˛ass
);

106 
Såög
 
	msize
 = 
Sy°em
.
gëPr›îty
("zookeeper.preAllocSize");

107 i‡(
	msize
 !
nuŒ
) {

108 
åy
 {

109 
¥eAŒocSize
 = 
L⁄g
.
∑r£L⁄g
(
size
) * 1024;

110 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

111 
	mLOG
.
w¨n
(
size
 + " isÇotá valid value forÖreAllocSize");

114 
	mfsyncW¨nögThªshﬁdMS
 = 
L⁄g
.
gëL⁄g
("fsync.warningthresholdms", 1000);

117 
	gœ°ZxidSìn
;

118 vﬁ©ûê
Buf„ªdOuçutSåóm
 
	glogSåóm
 = 
nuŒ
;

119 vﬁ©ûê
OuçutArchive
 
	gﬂ
;

120 vﬁ©ûê
FûeOuçutSåóm
 
	gfos
 = 
nuŒ
;

122 
Fûe
 
	glogDú
;

123 
¥iv©e
 
föÆ
 
boﬁón
 
	gf‹˚Sync
 = !
Sy°em
.
gëPr›îty
("zookì≥r.f‹˚Sync", "yes").
equÆs
("no");;

124 
	gdbId
;

125 
¥iv©e
 
	gLökedLi°
<
	gFûeOuçutSåóm
> 
	g°ªamsToFlush
 =

126 
√w
 
LökedLi°
<
FûeOuçutSåóm
>();

127 
	gcuºítSize
;

128 
Fûe
 
	glogFûeWrôe
 = 
nuŒ
;

135 
public
 
	$FûeTxnLog
(
Fûe
 
logDú
) {

136 
this
.
logDú
 =ÜogDir;

137 
	}
}

144 
public
 
	$£tPªÆlocSize
(
size
) {

145 
¥eAŒocSize
 = 
size
;

146 
	}
}

152 
¥Ÿe˘ed
 
Checksum
 
	$makeChecksumAlg‹ôhm
(){

153  
√w
 
	`AdÀr32
();

154 
	}
}

161 
public
 
synchr⁄ized
 
	$rﬁlLog
(Ë
throws
 
IOEx˚±i⁄
 {

162 i‡(
logSåóm
 !
nuŒ
) {

163 
this
.
logSåóm
.
	`Êush
();

164 
this
.
logSåóm
 = 
nuŒ
;

165 
ﬂ
 = 
nuŒ
;

167 
	}
}

173 
public
 
synchr⁄ized
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

174 i‡(
logSåóm
 !
nuŒ
) {

175 
logSåóm
.
	`˛o£
();

177 
FûeOuçutSåóm
 
log
 : 
°ªamsToFlush
) {

178 
log
.
	`˛o£
();

180 
	}
}

188 
public
 
synchr⁄ized
 
boﬁón
 
	$≠≥nd
(
TxnHódî
 
hdr
, 
Rec‹d
 
txn
)

189 
throws
 
IOEx˚±i⁄


191 i‡(
hdr
 !
nuŒ
) {

192 i‡(
hdr
.
	`gëZxid
(Ë<
œ°ZxidSìn
) {

193 
LOG
.
	`w¨n
("Cuºíàzxid " + 
hdr
.
	`gëZxid
()

194 + " i†<" + 
œ°ZxidSìn
 + " for "

195 + 
hdr
.
	`gëTy≥
());

197 i‡(
logSåóm
==
nuŒ
) {

198 if(
LOG
.
	`isInfoE«bÀd
()){

199 
LOG
.
	`öfo
("CreatingÇewÜog file:Üog." +

200 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëZxid
()));

203 
logFûeWrôe
 = 
√w
 
	`Fûe
(
logDú
, ("log." +

204 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëZxid
())));

205 
fos
 = 
√w
 
	`FûeOuçutSåóm
(
logFûeWrôe
);

206 
logSåóm
=
√w
 
	`Buf„ªdOuçutSåóm
(
fos
);

207 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
logSåóm
);

208 
FûeHódî
 
fhdr
 = 
√w
 
	`FûeHódî
(
TXNLOG_MAGIC
,
VERSION
, 
dbId
);

209 
fhdr
.
	`£rülize
(
ﬂ
, "fileheader");

211 
logSåóm
.
	`Êush
();

212 
cuºítSize
 = 
fos
.
	`gëCh™√l
().
	`posôi⁄
();

213 
°ªamsToFlush
.
	`add
(
fos
);

215 
	`∑dFûe
(
fos
);

216 
byã
[] 
buf
 = 
Utû
.
	`m¨shÆlTxnE¡ry
(
hdr
, 
txn
);

217 i‡(
buf
 =
nuŒ
 || buf.
Àngth
 == 0) {

218 
throw
 
√w
 
	`IOEx˚±i⁄
("Faulty serialization for header " +

221 
Checksum
 
¸c
 = 
	`makeChecksumAlg‹ôhm
();

222 
¸c
.
	`upd©e
(
buf
, 0, buf.
Àngth
);

223 
ﬂ
.
	`wrôeL⁄g
(
¸c
.
	`gëVÆue
(), "txnEntryCRC");

224 
Utû
.
	`wrôeTxnByãs
(
ﬂ
, 
buf
);

226  
åue
;

228  
Ál£
;

229 
	}
}

236 
¥iv©e
 
	$∑dFûe
(
FûeOuçutSåóm
 
out
Ë
throws
 
IOEx˚±i⁄
 {

237 
cuºítSize
 = 
Utû
.
	`∑dLogFûe
(
out
, cuºítSize, 
¥eAŒocSize
);

238 
	}
}

248 
public
 
	gFûe
[] 
	$gëLogFûes
(
Fûe
[] 
logDúLi°
,
¢≠shŸZxid
) {

249 
Li°
<
Fûe
> 
fûes
 = 
Utû
.
	`s‹tD©aDú
(
logDúLi°
, "log", 
åue
);

250 
logZxid
 = 0;

253 
Fûe
 
f
 : 
fûes
) {

254 
fzxid
 = 
Utû
.
	`gëZxidFromName
(
f
.
	`gëName
(), "log");

255 i‡(
fzxid
 > 
¢≠shŸZxid
) {

260 i‡(
fzxid
 > 
logZxid
) {

261 
logZxid
 = 
fzxid
;

264 
Li°
<
Fûe
> 
v
=
√w
 
AºayLi°
<File>(5);

265 
Fûe
 
f
 : 
fûes
) {

266 
fzxid
 = 
Utû
.
	`gëZxidFromName
(
f
.
	`gëName
(), "log");

267 i‡(
fzxid
 < 
logZxid
) {

270 
v
.
	`add
(
f
);

272  
v
.
	`toAºay
(
√w
 
Fûe
[0]);

274 
	}
}

280 
public
 
	$gëLa°LoggedZxid
() {

281 
Fûe
[] 
fûes
 = 
	`gëLogFûes
(
logDú
.
	`li°Fûes
(), 0);

282 
maxLog
=
fûes
.
Àngth
>0?

283 
Utû
.
	`gëZxidFromName
(
fûes
[fûes.
Àngth
-1].
	`gëName
(),"log"):-1;

287 
zxid
 = 
maxLog
;

288 
åy
 {

289 
FûeTxnLog
 
txn
 = 
√w
 
	`FûeTxnLog
(
logDú
);

290 
TxnIãøt‹
 
ôr
 = 
txn
.
	`ªad
(
maxLog
);

291 
åue
) {

292 if(!
ôr
.
	`√xt
())

294 
TxnHódî
 
hdr
 = 
ôr
.
	`gëHódî
();

295 
zxid
 = 
hdr
.
	`gëZxid
();

297 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

298 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

300  
zxid
;

301 
	}
}

307 
public
 
synchr⁄ized
 
	$commô
(Ë
throws
 
IOEx˚±i⁄
 {

308 i‡(
logSåóm
 !
nuŒ
) {

309 
logSåóm
.
	`Êush
();

311 
FûeOuçutSåóm
 
log
 : 
°ªamsToFlush
) {

312 
log
.
	`Êush
();

313 i‡(
f‹˚Sync
) {

314 
°¨tSyncNS
 = 
Sy°em
.
	`«noTime
();

316 
log
.
	`gëCh™√l
().
	`f‹˚
(
Ál£
);

318 
syncEœp£dMS
 =

319 
TimeUnô
.
NANOSECONDS
.
	`toMûlis
(
Sy°em
.
	`«noTime
(Ë- 
°¨tSyncNS
);

320 i‡(
syncEœp£dMS
 > 
fsyncW¨nögThªshﬁdMS
) {

321 
LOG
.
	`w¨n
("fsync-ingÅhe writeáheadÜog in "

322 + 
Thªad
.
	`cuºítThªad
().
	`gëName
()

323 + "Åook " + 
syncEœp£dMS


329 
°ªamsToFlush
.
	`size
() > 1) {

330 
°ªamsToFlush
.
	`ªmoveFú°
().
	`˛o£
();

332 
	}
}

340 
public
 
TxnIãøt‹
 
	$ªad
(
zxid
Ë
throws
 
IOEx˚±i⁄
 {

341  
√w
 
	`FûeTxnIãøt‹
(
logDú
, 
zxid
);

342 
	}
}

349 
public
 
boﬁón
 
	$åunˇã
(
zxid
Ë
throws
 
IOEx˚±i⁄
 {

350 
FûeTxnIãøt‹
 
ôr
 = 
√w
 
	`FûeTxnIãøt‹
(
this
.
logDú
, 
zxid
);

351 
Posôi⁄I≈utSåóm
 
öput
 = 
ôr
.
öputSåóm
;

352 
pos
 = 
öput
.
	`gëPosôi⁄
();

354 
R™domAc˚ssFûe
 
øf
=
√w
 
	`R™domAc˚ssFûe
(
ôr
.
logFûe
,"rw");

355 
øf
.
	`£tLígth
(
pos
);

356 
øf
.
	`˛o£
();

357 
ôr
.
	`goToNextLog
()) {

358 i‡(!
ôr
.
logFûe
.
	`dñëe
()) {

359 
LOG
.
	`w¨n
("U«bÀÅÿåunˇã " + 
ôr
.
logFûe
);

362  
åue
;

363 
	}
}

371 
¥iv©e
 
FûeHódî
 
	$ªadHódî
(
Fûe
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

372 
I≈utSåóm
 
is
 =
nuŒ
;

373 
åy
 {

374 
is
 = 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(
fûe
));

375 
I≈utArchive
 
ü
=
Bö¨yI≈utArchive
.
	`gëArchive
(
is
);

376 
FûeHódî
 
hdr
 = 
√w
 
	`FûeHódî
();

377 
hdr
.
	`de£rülize
(
ü
, "fileheader");

378  
hdr
;

379 } 
föÆly
 {

380 
åy
 {

381 i‡(
is
 !
nuŒ
Ëis.
	`˛o£
();

382 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

383 
LOG
.
	`w¨n
("Ign‹ögÉx˚±i⁄ durög clo£", 
e
);

386 
	}
}

392 
public
 
	$gëDbId
(Ë
throws
 
IOEx˚±i⁄
 {

393 
FûeTxnIãøt‹
 
ôr
 = 
√w
 
	`FûeTxnIãøt‹
(
logDú
, 0);

394 
FûeHódî
 
fh
=
	`ªadHódî
(
ôr
.
logFûe
);

395 
ôr
.
	`˛o£
();

396 if(
fh
==
nuŒ
)

397 
throw
 
√w
 
	`IOEx˚±i⁄
("Unsupported Format.");

398  
fh
.
	`gëDbid
();

399 
	}
}

405 
public
 
boﬁón
 
	$isF‹˚Sync
() {

406  
f‹˚Sync
;

407 
	}
}

416 ˛as†
	cPosôi⁄I≈utSåóm
 
exãnds
 
	gFûãrI≈utSåóm
 {

417 
	gposôi⁄
;

418 
¥Ÿe˘ed
 
Posôi⁄I≈utSåóm
(
I≈utSåóm
 
ö
) {

419 
su≥r
(
ö
);

420 
	gposôi⁄
 = 0;

423 @
Ovîride


424 
public
 
ªad
(Ë
throws
 
	gIOEx˚±i⁄
 {

425 
	grc
 = 
su≥r
.
ªad
();

426 i‡(
	grc
 > -1) {

427 
	gposôi⁄
++;

429  
	grc
;

432 
public
 
ªad
(
byã
[] 
b
Ë
throws
 
	gIOEx˚±i⁄
 {

433 
	grc
 = 
su≥r
.
ªad
(
b
);

434 i‡(
	grc
 > 0) {

435 
	gposôi⁄
 +
rc
;

437  
	grc
;

440 @
Ovîride


441 
public
 
ªad
(
byã
[] 
b
, 
off
, 
Àn
Ë
throws
 
	gIOEx˚±i⁄
 {

442 
	grc
 = 
su≥r
.
ªad
(
b
, 
off
, 
Àn
);

443 i‡(
	grc
 > 0) {

444 
	gposôi⁄
 +
rc
;

446  
	grc
;

449 @
Ovîride


450 
public
 
skù
(
n
Ë
throws
 
	gIOEx˚±i⁄
 {

451 
	grc
 = 
su≥r
.
skù
(
n
);

452 i‡(
	grc
 > 0) {

453 
	gposôi⁄
 +
rc
;

455  
	grc
;

457 
public
 
gëPosôi⁄
() {

458  
	gposôi⁄
;

461 @
Ovîride


462 
public
 
boﬁón
 
m¨kSuµ‹ãd
() {

463  
	gÁl£
;

466 @
Ovîride


467 
public
 
m¨k
(
ªadLimô
) {

468 
throw
 
√w
 
Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("mark");

471 @
Ovîride


472 
public
 
ª£t
() {

473 
throw
 
√w
 
Unsuµ‹ãdO≥øti⁄Ex˚±i⁄
("reset");

481 
public
 
˛ass
 
FûeTxnIãøt‹
 
im∂emíts
 
	gTxnLog
.
	gTxnIãøt‹
 {

482 
Fûe
 
	glogDú
;

483 
	gzxid
;

484 
TxnHódî
 
	ghdr
;

485 
Rec‹d
 
	gªc‹d
;

486 
Fûe
 
	glogFûe
;

487 
I≈utArchive
 
	gü
;

488 
föÆ
 
Såög
 
	gCRC_ERROR
="CRC check failed";

490 
Posôi⁄I≈utSåóm
 
	göputSåóm
=
nuŒ
;

493 
¥iv©e
 
	gAºayLi°
<
	gFûe
> 
	g°‹edFûes
;

501 
public
 
FûeTxnIãøt‹
(
Fûe
 
logDú
, 
zxid
Ë
throws
 
	gIOEx˚±i⁄
 {

502 
	gthis
.
	glogDú
 = 
logDú
;

503 
	gthis
.
	gzxid
 = 
zxid
;

504 
öô
();

512 
öô
(Ë
throws
 
	gIOEx˚±i⁄
 {

513 
	g°‹edFûes
 = 
√w
 
AºayLi°
<
Fûe
>();

514 
	gLi°
<
	gFûe
> 
	gfûes
 = 
Utû
.
s‹tD©aDú
(
FûeTxnLog
.
gëLogFûes
(
logDú
.
li°Fûes
(), 0), "log", 
Ál£
);

515 
Fûe
 
	gf
: 
fûes
) {

516 i‡(
Utû
.
gëZxidFromName
(
f
.
gëName
(), "log"Ë>
zxid
) {

517 
°‹edFûes
.
add
(
f
);

520 i‡(
	gUtû
.
gëZxidFromName
(
f
.
gëName
(), "log"Ë< 
	gzxid
) {

521 
	g°‹edFûes
.
add
(
f
);

525 
goToNextLog
();

526 i‡(!
√xt
())

528 
	ghdr
.
gëZxid
(Ë< 
	gzxid
) {

529 i‡(!
√xt
())

540 
¥iv©e
 
boﬁón
 
goToNextLog
(Ë
throws
 
	gIOEx˚±i⁄
 {

541 i‡(
	g°‹edFûes
.
size
() > 0) {

542 
	gthis
.
	glogFûe
 = 
°‹edFûes
.
ªmove
(°‹edFûes.
size
()-1);

543 
	gü
 = 
¸óãI≈utArchive
(
this
.
logFûe
);

544  
	gåue
;

546  
	gÁl£
;

555 
¥Ÿe˘ed
 
öSåómCª©ed
(
I≈utArchive
 
ü
, 
I≈utSåóm
 
is
)

556 
throws
 
	gIOEx˚±i⁄
{

557 
FûeHódî
 
	ghódî

√w
 FileHeader();

558 
	ghódî
.
de£rülize
(
ü
, "fileheader");

559 i‡(
	ghódî
.
gëMagic
(Ë!
FûeTxnLog
.
TXNLOG_MAGIC
) {

560 
throw
 
√w
 
IOEx˚±i⁄
("Tønß˘i⁄Üog: " + 
this
.
logFûe
 + " has invalid magicÇumber "

561 + 
hódî
.
gëMagic
()

562 + " !" + 
FûeTxnLog
.
TXNLOG_MAGIC
);

572 
¥Ÿe˘ed
 
I≈utArchive
 
¸óãI≈utArchive
(
Fûe
 
logFûe
Ë
throws
 
	gIOEx˚±i⁄
 {

573 if(
	göputSåóm
==
nuŒ
){

574 
öputSåóm

√w
 
Posôi⁄I≈utSåóm
“ew 
Buf„ªdI≈utSåóm
“ew 
FûeI≈utSåóm
(
logFûe
)));

575 
	gLOG
.
debug
("Cª©edÇew i≈uà°ªam " + 
logFûe
);

576 
	gü
 = 
Bö¨yI≈utArchive
.
gëArchive
(
öputSåóm
);

577 
öSåómCª©ed
(
ü
,
öputSåóm
);

578 
	gLOG
.
debug
("Cª©edÇew i≈uà¨chivê" + 
logFûe
);

580  
	gü
;

587 
¥Ÿe˘ed
 
Checksum
 
makeChecksumAlg‹ôhm
(){

588  
√w
 
AdÀr32
();

596 
public
 
boﬁón
 
√xt
(Ë
throws
 
	gIOEx˚±i⁄
 {

597 i‡(
	gü
 =
nuŒ
) {

598  
Ál£
;

600 
	gåy
 {

601 
	g¸cVÆue
 = 
ü
.
ªadL⁄g
("crcvalue");

602 
	gbyã
[] 
	gbyãs
 = 
Utû
.
ªadTxnByãs
(
ü
);

604 i‡(
	gbyãs
 =
nuŒ
 || 
byãs
.
Àngth
==0) {

605 
throw
 
√w
 
EOFEx˚±i⁄
("FaûedÅÿªad " + 
logFûe
);

609 
Checksum
 
	g¸c
 = 
makeChecksumAlg‹ôhm
();

610 
	g¸c
.
upd©e
(
byãs
, 0, byãs.
Àngth
);

611 i‡(
	g¸cVÆue
 !
¸c
.
gëVÆue
())

612 
throw
 
√w
 
IOEx˚±i⁄
(
CRC_ERROR
);

613 i‡(
	gbyãs
 =
nuŒ
 || 
byãs
.
Àngth
 == 0)

614  
Ál£
;

615 
	ghdr
 = 
√w
 
TxnHódî
();

616 
	gªc‹d
 = 
SîülizeUtûs
.
de£rülizeTxn
(
byãs
, 
hdr
);

617 } 
ˇtch
 (
EOFEx˚±i⁄
 
e
) {

618 
	gLOG
.
debug
("EOFÉx˚±⁄ " + 
e
);

619 
	göputSåóm
.
˛o£
();

620 
	göputSåóm
 = 
nuŒ
;

621 
	gü
 = 
nuŒ
;

622 
	ghdr
 = 
nuŒ
;

625 i‡(!
goToNextLog
()) {

626  
	gÁl£
;

629  
√xt
();

631  
	gåue
;

639 
public
 
TxnHódî
 
gëHódî
() {

640  
	ghdr
;

648 
public
 
Rec‹d
 
gëTxn
() {

649  
	gªc‹d
;

656 
public
 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
 {

657 
	göputSåóm
.
˛o£
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
.
	gPro˚ssTxnResu…
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gTxnLog
.
	gTxnIãøt‹
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

47 
public
 cœs†
	cFûeTxnS«pLog
 {

50 
¥iv©e
 
föÆ
 
Fûe
 
	md©aDú
;

53 
¥iv©e
 
föÆ
 
Fûe
 
	m¢≠Dú
;

54 
¥iv©e
 
TxnLog
 
	mtxnLog
;

55 
¥iv©e
 
S«pShŸ
 
	m¢≠Log
;

56 
public
 
föÆ
 
	mVERSION
 = 2;

57 
public
 
föÆ
 
Såög
 
	mvîsi⁄
 = "version-";

59 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FûeTxnS«pLog
.
˛ass
);

68 
public
 
öãrÁ˚
 
	mPœyBackLi°íî
 {

69 
⁄TxnLﬂded
(
TxnHódî
 
hdr
, 
Rec‹d
 
ªc
);

78 
public
 
	$FûeTxnS«pLog
(
Fûe
 
d©aDú
, Fûê
¢≠Dú
Ë
throws
 
IOEx˚±i⁄
 {

79 
LOG
.
	`debug
("O≥nög d©adú:{} s«pDú:{}", 
d©aDú
, 
¢≠Dú
);

81 
this
.
d©aDú
 = 
√w
 
	`Fûe
(d©aDú, 
vîsi⁄
 + 
VERSION
);

82 
this
.
¢≠Dú
 = 
√w
 
	`Fûe
(¢≠Dú, 
vîsi⁄
 + 
VERSION
);

83 i‡(!
this
.
d©aDú
.
	`exi°s
()) {

84 i‡(!
this
.
d©aDú
.
	`mkdús
()) {

85 
throw
 
√w
 
	`IOEx˚±i⁄
("UnableÅo create data directory "

86 + 
this
.
d©aDú
);

89 i‡(!
this
.
¢≠Dú
.
	`exi°s
()) {

90 i‡(!
this
.
¢≠Dú
.
	`mkdús
()) {

91 
throw
 
√w
 
	`IOEx˚±i⁄
("UnableÅo create snap directory "

92 + 
this
.
¢≠Dú
);

95 
txnLog
 = 
√w
 
	`FûeTxnLog
(
this
.
d©aDú
);

96 
¢≠Log
 = 
√w
 
	`FûeS«p
(
this
.
¢≠Dú
);

97 
	}
}

104 
public
 
Fûe
 
	$gëD©aDú
() {

105  
this
.
d©aDú
;

106 
	}
}

113 
public
 
Fûe
 
	$gëS«pDú
() {

114  
this
.
¢≠Dú
;

115 
	}
}

128 
public
 
ª°‹e
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
,

129 
PœyBackLi°íî
 
li°íî
Ë
throws
 
	gIOEx˚±i⁄
 {

130 
	g¢≠Log
.
de£rülize
(
dt
, 
£ssi⁄s
);

131 
FûeTxnLog
 
	gtxnLog
 = 
√w
 FûeTxnLog(
d©aDú
);

132 
TxnIãøt‹
 
	gôr
 = 
txnLog
.
ªad
(
dt
.
œ°Pro˚s£dZxid
+1);

133 
	ghighe°Zxid
 = 
dt
.
œ°Pro˚s£dZxid
;

134 
TxnHódî
 
	ghdr
;

135 
	gåue
) {

138 
	ghdr
 = 
ôr
.
gëHódî
();

139 i‡(
	ghdr
 =
nuŒ
) {

141  
dt
.
œ°Pro˚s£dZxid
;

143 i‡(
	ghdr
.
gëZxid
(Ë< 
	ghighe°Zxid
 && highestZxid != 0) {

144 
LOG
.
îr‹
(
highe°Zxid
 + "(higestZxid) > "

145 + 
hdr
.
gëZxid
() + "(nextÜog) forÅype "

146 + 
hdr
.
gëTy≥
());

148 
	ghighe°Zxid
 = 
hdr
.
gëZxid
();

150 
	gåy
 {

151 
¥o˚ssTønß˘i⁄
(
hdr
,
dt
,
£ssi⁄s
, 
ôr
.
gëTxn
());

152 } 
ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

153 
throw
 
√w
 
IOEx˚±i⁄
("FailedÅoÖrocessÅransactionÅype: " +

154 
hdr
.
gëTy≥
(Ë+ "Éº‹: " + 
e
.
gëMesßge
(),É);

156 
	gli°íî
.
⁄TxnLﬂded
(
hdr
, 
ôr
.
gëTxn
());

157 i‡(!
	gôr
.
√xt
())

160  
	ghighe°Zxid
;

170 
public
 
¥o˚ssTønß˘i⁄
(
TxnHódî
 
hdr
,
D©aTªe
 
dt
,

171 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
, 
Rec‹d
 
txn
)

172 
throws
 
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
 {

173 
Pro˚ssTxnResu…
 
	grc
;

174 
	ghdr
.
gëTy≥
()) {

175 
	gOpCode
.
	g¸óãSessi⁄
:

176 
£ssi⁄s
.
put
(
hdr
.
gëClõ¡Id
(),

177 ((
Cª©eSessi⁄Txn
Ë
txn
).
gëTimeOut
());

178 i‡(
	gLOG
.
isTø˚E«bÀd
()) {

179 
	gZooTø˚
.
logTø˚Mesßge
(
LOG
,
ZooTø˚
.
SESSION_TRACE_MASK
,

181 + 
L⁄g
.
toHexSåög
(
hdr
.
gëClõ¡Id
())

183 + ((
Cª©eSessi⁄Txn
Ë
txn
).
gëTimeOut
());

186 
	grc
 = 
dt
.
¥o˚ssTxn
(
hdr
, 
txn
);

188 
	gOpCode
.
	g˛o£Sessi⁄
:

189 
£ssi⁄s
.
ªmove
(
hdr
.
gëClõ¡Id
());

190 i‡(
	gLOG
.
isTø˚E«bÀd
()) {

191 
	gZooTø˚
.
logTø˚Mesßge
(
LOG
,
ZooTø˚
.
SESSION_TRACE_MASK
,

193 + 
L⁄g
.
toHexSåög
(
hdr
.
gëClõ¡Id
()));

195 
	grc
 = 
dt
.
¥o˚ssTxn
(
hdr
, 
txn
);

198 
rc
 = 
dt
.
¥o˚ssTxn
(
hdr
, 
txn
);

206 i‡(
	grc
.
	gîr
 !
Code
.
OK
.
ötVÆue
()) {

207 i‡(
hdr
.
gëTy≥
(Ë=
OpCode
.
¸óã
 && 
rc
.
îr
 =
Code
.
NONODE
.
ötVÆue
()) {

208 
œ°Sœsh
 = 
rc
.
∑th
.
œ°IndexOf
('/');

209 
Såög
 
	g∑ª¡Name
 = 
rc
.
∑th
.
sub°rög
(0, 
œ°Sœsh
);

210 
	gLOG
.
îr‹
("P¨íà{} missög f‹ {}", 
∑ª¡Name
, 
rc
.
∑th
);

211 
throw
 
√w
 
	gKì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
(
∑ª¡Name
);

213 
	gLOG
.
debug
("Ign‹ögÖro˚ssTx¿Áûuª hdr: " + 
hdr
.
gëTy≥
() +

214 " :Éº‹: " + 
rc
.
îr
);

223 
public
 
	$gëLa°LoggedZxid
() {

224 
FûeTxnLog
 
txnLog
 = 
√w
 
	`FûeTxnLog
(
d©aDú
);

225  
txnLog
.
	`gëLa°LoggedZxid
();

226 
	}
}

235 
public
 
ßve
(
D©aTªe
 
d©aTªe
,

236 
C⁄cuºítHashM≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄sWôhTimeouts
)

237 
throws
 
	gIOEx˚±i⁄
 {

238 
	gœ°Zxid
 = 
d©aTªe
.
œ°Pro˚s£dZxid
;

239 
Fûe
 
	g¢≠shŸFûe
 = 
√w
 Fûe(
¢≠Dú
, 
Utû
.
makeS«pshŸName
(
œ°Zxid
));

240 
	gLOG
.
öfo
("S«pshŸtög: 0x{}Åÿ{}", 
L⁄g
.
toHexSåög
(
œ°Zxid
),

241 
¢≠shŸFûe
);

242 
	g¢≠Log
.
£rülize
(
d©aTªe
, 
£ssi⁄sWôhTimeouts
, 
¢≠shŸFûe
);

253 
public
 
boﬁón
 
	$åunˇãLog
(
zxid
Ë
throws
 
IOEx˚±i⁄
 {

255 
	`˛o£
();

258 
FûeTxnLog
 
åuncLog
 = 
√w
 
	`FûeTxnLog
(
d©aDú
);

259 
boﬁón
 
åunˇãd
 = 
åuncLog
.
	`åunˇã
(
zxid
);

260 
åuncLog
.
	`˛o£
();

266 
txnLog
 = 
√w
 
	`FûeTxnLog
(
d©aDú
);

267 
¢≠Log
 = 
√w
 
	`FûeS«p
(
¢≠Dú
);

269  
åunˇãd
;

270 
	}
}

279 
public
 
Fûe
 
	$födMo°Re˚¡S«pshŸ
(Ë
throws
 
IOEx˚±i⁄
 {

280 
FûeS«p
 
¢≠log
 = 
√w
 
	`FûeS«p
(
¢≠Dú
);

281  
¢≠log
.
	`födMo°Re˚¡S«pshŸ
();

282 
	}
}

291 
public
 
	gLi°
<
	gFûe
> 
	$födNRe˚¡S«pshŸs
(
n
Ë
throws
 
IOEx˚±i⁄
 {

292 
FûeS«p
 
¢≠log
 = 
√w
 
	`FûeS«p
(
¢≠Dú
);

293  
¢≠log
.
	`födNRe˚¡S«pshŸs
(
n
);

294 
	}
}

303 
public
 
	gFûe
[] 
	$gëS«pshŸLogs
(
zxid
) {

304  
FûeTxnLog
.
	`gëLogFûes
(
d©aDú
.
	`li°Fûes
(), 
zxid
);

305 
	}
}

313 
public
 
boﬁón
 
	$≠≥nd
(
Reque°
 
si
Ë
throws
 
IOEx˚±i⁄
 {

314  
txnLog
.
	`≠≥nd
(
si
.
hdr
, si.
txn
);

315 
	}
}

321 
public
 
	$commô
(Ë
throws
 
IOEx˚±i⁄
 {

322 
txnLog
.
	`commô
();

323 
	}
}

329 
public
 
	$rﬁlLog
(Ë
throws
 
IOEx˚±i⁄
 {

330 
txnLog
.
	`rﬁlLog
();

331 
	}
}

337 
public
 
	$˛o£
(Ë
throws
 
IOEx˚±i⁄
 {

338 
txnLog
.
	`˛o£
();

339 
¢≠Log
.
	`˛o£
();

340 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/SnapShot.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

31 
public
 
öãrÁ˚
 
	gS«pShŸ
 {

41 
de£rülize
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
)

42 
throws
 
	gIOEx˚±i⁄
;

50 
£rülize
(
D©aTªe
 
dt
, 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
,

51 
Fûe
 
«me
)

52 
throws
 
	gIOEx˚±i⁄
;

59 
Fûe
 
födMo°Re˚¡S«pshŸ
(Ë
throws
 
	gIOEx˚±i⁄
;

65 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/TxnLog.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

30 
public
 
öãrÁ˚
 
	gTxnLog
 {

37 
rﬁlLog
(Ë
throws
 
	gIOEx˚±i⁄
;

45 
boﬁón
 
≠≥nd
(
TxnHódî
 
hdr
, 
Rec‹d
 
r
Ë
throws
 
	gIOEx˚±i⁄
;

55 
TxnIãøt‹
 
ªad
(
zxid
Ë
throws
 
	gIOEx˚±i⁄
;

62 
gëLa°LoggedZxid
(Ë
throws
 
	gIOEx˚±i⁄
;

70 
boﬁón
 
åunˇã
(
zxid
Ë
throws
 
	gIOEx˚±i⁄
;

77 
gëDbId
(Ë
throws
 
	gIOEx˚±i⁄
;

84 
commô
(Ë
throws
 
	gIOEx˚±i⁄
;

89 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
;

94 
public
 
öãrÁ˚
 
	gTxnIãøt‹
 {

99 
TxnHódî
 
gëHódî
();

105 
Rec‹d
 
gëTxn
();

111 
boﬁón
 
√xt
(Ë
throws
 
	gIOEx˚±i⁄
;

118 
˛o£
(Ë
throws
 
	gIOEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/Util.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

27 
imp‹t
 
	gjava
.
	gio
.
	gSîülizabÀ
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gURI
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

42 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

49 
public
 cœs†
	cUtû
 {

50 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Utû
.
˛ass
);

51 
¥iv©e
 
föÆ
 
Såög
 
	mSNAP_DIR
="snapDir";

52 
¥iv©e
 
föÆ
 
Såög
 
	mLOG_DIR
="logDir";

53 
¥iv©e
 
föÆ
 
Såög
 
	mDB_FORMAT_CONV
="dbFormatConversion";

54 
¥iv©e
 
föÆ
 
ByãBuf„r
 
	mfûl
 = ByãBuf„r.
ÆloˇãDúe˘
(1);

56 
public
 
Såög
 
	$makeURISåög
(
Såög
 
d©aDú
, Såög 
d©aLogDú
,

57 
Såög
 
c⁄vPﬁicy
){

58 
Såög
 
uri
="fûe:"+
SNAP_DIR
+"="+
d©aDú
+";"+
LOG_DIR
+"="+
d©aLogDú
;

59 if(
c⁄vPﬁicy
!=
nuŒ
)

60 
uri
+=";"+
DB_FORMAT_CONV
+"="+
c⁄vPﬁicy
;

61  
uri
.
	`ª∂a˚
('\\', '/');

73 
public
 
URI
 
	$makeFûeLoggîURL
(
Fûe
 
d©aDú
, Fûê
d©aLogDú
){

74  
URI
.
	`¸óã
(
	`makeURISåög
(
d©aDú
.
	`gëP©h
(),
d©aLogDú
.gëP©h(),
nuŒ
));

75 
	}
}

77 
public
 
URI
 
	$makeFûeLoggîURL
(
Fûe
 
d©aDú
, Fûê
d©aLogDú
,
Såög
 
c⁄vPﬁicy
){

78  
URI
.
	`¸óã
(
	`makeURISåög
(
d©aDú
.
	`gëP©h
(),
d©aLogDú
.gëP©h(),
c⁄vPﬁicy
));

79 
	}
}

87 
public
 
Såög
 
	$makeLogName
(
zxid
) {

88  "log." + 
L⁄g
.
	`toHexSåög
(
zxid
);

89 
	}
}

97 
public
 
Såög
 
	$makeS«pshŸName
(
zxid
) {

98  "¢≠shŸ." + 
L⁄g
.
	`toHexSåög
(
zxid
);

99 
	}
}

107 
public
 
Fûe
 
	$gëS«pDú
(
Pr›îtõs
 
¥›s
){

108  
√w
 
	`Fûe
(
¥›s
.
	`gëPr›îty
(
SNAP_DIR
));

109 
	}
}

117 
public
 
Fûe
 
	$gëLogDú
(
Pr›îtõs
 
¥›s
){

118  
√w
 
	`Fûe
(
¥›s
.
	`gëPr›îty
(
LOG_DIR
));

119 
	}
}

127 
public
 
Såög
 
	$gëF‹m©C⁄vîsi⁄Pﬁicy
(
Pr›îtõs
 
¥›s
){

128  
¥›s
.
	`gëPr›îty
(
DB_FORMAT_CONV
);

129 
	}
}

139 
public
 
	$gëZxidFromName
(
Såög
 
«me
, Såög 
¥efix
) {

140 
zxid
 = -1;

141 
Såög
 
«meP¨ts
[] = 
«me
.
	`•lô
("\\.");

142 i‡(
«meP¨ts
.
Àngth
 =2 &&ÇameP¨ts[0].
	`equÆs
(
¥efix
)) {

143 
åy
 {

144 
zxid
 = 
L⁄g
.
	`∑r£L⁄g
(
«meP¨ts
[1], 16);

145 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

148  
zxid
;

149 
	}
}

161 
public
 
boﬁón
 
	$isVÆidS«pshŸ
(
Fûe
 
f
Ë
throws
 
IOEx˚±i⁄
 {

162 i‡(
f
==
nuŒ
 || 
Utû
.
	`gëZxidFromName
(f.
	`gëName
(), "snapshot") == -1)

163  
Ál£
;

166 
R™domAc˚ssFûe
 
øf
 = 
√w
 
	`R™domAc˚ssFûe
(
f
, "r");

167 
åy
 {

170 i‡(
øf
.
	`Àngth
() < 10) {

171  
Ál£
;

173 
øf
.
	`£ek
‘af.
	`Àngth
() - 5);

174 
byã
 
byãs
[] = 
√w
 byte[5];

175 
ªadÀn
 = 0;

176 
l
;

177 
ªadÀn
 < 5 &&

178 (
l
 = 
øf
.
	`ªad
(
byãs
, 
ªadÀn
, byãs.
Àngth
 -Ñeadlen)) >= 0) {

179 
ªadÀn
 +
l
;

181 i‡(
ªadÀn
 !
byãs
.
Àngth
) {

182 
LOG
.
	`öfo
("InvÆid s«pshŸ " + 
f


183 + "Åoÿsh‹t,Üí = " + 
ªadÀn
);

184  
Ál£
;

186 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
byãs
);

187 
Àn
 = 
bb
.
	`gëI¡
();

188 
byã
 
b
 = 
bb
.
	`gë
();

189 i‡(
Àn
 !1 || 
b
 != '/') {

190 
LOG
.
	`öfo
("InvÆid s«pshŸ " + 
f
 + "Üí = " + 
Àn


191 + " byã = " + (
b
 & 0xff));

192  
Ál£
;

194 } 
föÆly
 {

195 
øf
.
	`˛o£
();

198  
åue
;

199 
	}
}

213 
public
 
	$∑dLogFûe
(
FûeOuçutSåóm
 
f
,
cuºítSize
,

214 
¥eAŒocSize
Ë
throws
 
IOEx˚±i⁄
{

215 
posôi⁄
 = 
f
.
	`gëCh™√l
().
	`posôi⁄
();

216 i‡(
posôi⁄
 + 4096 >
cuºítSize
) {

217 
cuºítSize
 = cuºítSizê+ 
¥eAŒocSize
;

218 
fûl
.
	`posôi⁄
(0);

219 
f
.
	`gëCh™√l
().
	`wrôe
(
fûl
, 
cuºítSize
-fûl.
	`ªmaöög
());

221  
cuºítSize
;

222 
	}
}

231 
public
 
	gbyã
[] 
	$ªadTxnByãs
(
I≈utArchive
 
ü
Ë
throws
 
IOEx˚±i⁄
 {

232 
åy
{

233 
byã
[] 
byãs
 = 
ü
.
	`ªadBuf„r
("txtEntry");

236 i‡(
byãs
.
Àngth
 == 0)

237  
byãs
;

238 i‡(
ü
.
	`ªadByã
("EOF") != 'B') {

239 
LOG
.
	`îr‹
("LastÅransaction wasÖartial.");

240  
nuŒ
;

242  
byãs
;

243 }
	`ˇtch
(
EOFEx˚±i⁄
 
e
){}

244  
nuŒ
;

245 
	}
}

256 
public
 
	gbyã
[] 
	$m¨shÆlTxnE¡ry
(
TxnHódî
 
hdr
, 
Rec‹d
 
txn
)

257 
throws
 
IOEx˚±i⁄
 {

258 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

259 
OuçutArchive
 
bﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
baos
);

261 
hdr
.
	`£rülize
(
bﬂ
, "hdr");

262 i‡(
txn
 !
nuŒ
) {

263 
txn
.
	`£rülize
(
bﬂ
, "txn");

265  
baos
.
	`toByãAºay
();

266 
	}
}

275 
public
 
	$wrôeTxnByãs
(
OuçutArchive
 
ﬂ
, 
byã
[] 
byãs
)

276 
throws
 
IOEx˚±i⁄
 {

277 
ﬂ
.
	`wrôeBuf„r
(
byãs
, "txnEntry");

278 
ﬂ
.
	`wrôeByã
((
byã
) 0x42, "EOR");

279 
	}
}

286 
¥iv©e
 
˛ass
 
D©aDúFûeCom∑øt‹


287 
im∂emíts
 
	gCom∑øt‹
<
	gFûe
>, 
	gSîülizabÀ


289 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = -2648639884525140318L;

291 
¥iv©e
 
Såög
 
	g¥efix
;

292 
¥iv©e
 
boﬁón
 
	gas˚ndög
;

293 
public
 
D©aDúFûeCom∑øt‹
(
Såög
 
¥efix
, 
boﬁón
 
as˚ndög
) {

294 
	gthis
.
	g¥efix
 = 
¥efix
;

295 
	gthis
.
	gas˚ndög
 = 
as˚ndög
;

298 
public
 
com∑ª
(
Fûe
 
o1
, Fûê
o2
) {

299 
	gz1
 = 
Utû
.
gëZxidFromName
(
o1
.
gëName
(), 
¥efix
);

300 
	gz2
 = 
Utû
.
gëZxidFromName
(
o2
.
gëName
(), 
¥efix
);

301 
	gªsu…
 = 
z1
 < 
z2
 ? -1 : (z1 > z2 ? 1 : 0);

302  
	gas˚ndög
 ? 
	gªsu…
 : -
ªsu…
;

317 
public
 
	gLi°
<
	gFûe
> 
	$s‹tD©aDú
(
Fûe
[] 
fûes
, 
Såög
 
¥efix
, 
boﬁón
 
as˚ndög
)

319 if(
fûes
==
nuŒ
)

320  
√w
 
AºayLi°
<
Fûe
>(0);

321 
Li°
<
Fûe
> 
fûñi°
 = 
Aºays
.
	`asLi°
(
fûes
);

322 
CﬁÀ˘i⁄s
.
	`s‹t
(
fûñi°
, 
√w
 
	`D©aDúFûeCom∑øt‹
(
¥efix
, 
as˚ndög
));

323  
fûñi°
;

324 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/AckRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

32 ˛as†
	cAckReque°Pro˚ss‹
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

33 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
AckReque°Pro˚ss‹
.
˛ass
);

34 
Lódî
 
	mÀadî
;

36 
	$AckReque°Pro˚ss‹
(
Lódî
 
Àadî
) {

37 
this
.
Àadî
 =Üeader;

43 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

44 
Qu‹umPìr
 
£lf
 = 
Àadî
.self;

45 if(
£lf
 !
nuŒ
)

46 
Àadî
.
	`¥o˚ssAck
(
£lf
.
	`gëId
(), 
ªque°
.
zxid
, 
nuŒ
);

48 
LOG
.
	`îr‹
("Null QuorumPeer");

49 
	}
}

51 
public
 
	$shutdown
() {

53 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømPackë
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømSockë
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gSem≠h‹e
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gEÀ˘i⁄
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

51 @
Dïªˇãd


52 
public
 cœs†
	cAuthFa°LódîEÀ˘i⁄
 
im∂emíts
 
	mEÀ˘i⁄
 {

53 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
AuthFa°LódîEÀ˘i⁄
.
˛ass
);

56 
	m£quí˚r
 = 0;

57 
	mmaxTag
 = 0;

63 
	mföÆizeWaô
 = 100;

69 
	mchÆÀngeCou¡î
 = 0;

75 
¥iv©e
 
boﬁón
 
	mauthE«bÀd
 = 
Ál£
;

77 
public
 cœs†
	cNŸifiˇti⁄
 {

81 
	mÀadî
;

86 
	mzxid
;

91 
	mïoch
;

96 
	mQu‹umPìr
.
SîvîSèã
 
	m°©e
;

101 
I√tSockëAddªss
 
	maddr
;

107 
public
 cœs†
	cToSíd
 {

108 
	emTy≥
 {

109 
	g¸eque°
, 
	gchÆÀnge
, 
	gnŸifiˇti⁄
, 
	gack


112 
ToSíd
(
mTy≥
 
ty≥
, 
èg
, 
Àadî
, 
zxid
, 
ïoch
,

113 
SîvîSèã
 
°©e
, 
I√tSockëAddªss
 
addr
) {

115 
	gty≥
) {

116 
	g¸eque°
:

117 
this
.
ty≥
 = 0;

118 
	gthis
.
	gèg
 = 
èg
;

119 
	gthis
.
	gÀadî
 = 
Àadî
;

120 
	gthis
.
	gzxid
 = 
zxid
;

121 
	gthis
.
	gïoch
 = 
ïoch
;

122 
	gthis
.
	g°©e
 = 
°©e
;

123 
	gthis
.
	gaddr
 = 
addr
;

126 
	gchÆÀnge
:

127 
this
.
ty≥
 = 1;

128 
	gthis
.
	gèg
 = 
èg
;

129 
	gthis
.
	gÀadî
 = 
Àadî
;

130 
	gthis
.
	gzxid
 = 
zxid
;

131 
	gthis
.
	gïoch
 = 
ïoch
;

132 
	gthis
.
	g°©e
 = 
°©e
;

133 
	gthis
.
	gaddr
 = 
addr
;

136 
	gnŸifiˇti⁄
:

137 
this
.
ty≥
 = 2;

138 
	gthis
.
	gÀadî
 = 
Àadî
;

139 
	gthis
.
	gzxid
 = 
zxid
;

140 
	gthis
.
	gïoch
 = 
ïoch
;

141 
	gthis
.
	g°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
;

142 
	gthis
.
	gèg
 = 
èg
;

143 
	gthis
.
	gaddr
 = 
addr
;

146 
	gack
:

147 
this
.
ty≥
 = 3;

148 
	gthis
.
	gèg
 = 
èg
;

149 
	gthis
.
	gÀadî
 = 
Àadî
;

150 
	gthis
.
	gzxid
 = 
zxid
;

151 
	gthis
.
	gïoch
 = 
ïoch
;

152 
	gthis
.
	g°©e
 = 
°©e
;

153 
	gthis
.
	gaddr
 = 
addr
;

164 
	gty≥
;

169 
	gÀadî
;

174 
	gzxid
;

179 
	gïoch
;

184 
	gQu‹umPìr
.
SîvîSèã
 
	g°©e
;

189 
	gèg
;

191 
I√tSockëAddªss
 
	gaddr
;

194 
	gLökedBlockögQueue
<
	gToSíd
> 
	g£ndqueue
;

196 
	gLökedBlockögQueue
<
	gNŸifiˇti⁄
> 
	gªcvqueue
;

198 
¥iv©e
 cœs†
	cMes£ngî
 {

200 
föÆ
 
D©agømSockë
 
	gmySockë
;

201 
	gœ°Pr›o£dLódî
;

202 
	gœ°Pr›o£dZxid
;

203 
	gœ°Epoch
;

204 
föÆ
 
	gSë
<
	gL⁄g
> 
	gack£t
;

205 
föÆ
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, L⁄g> 
	gchÆÀngeM≠
;

206 
föÆ
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gSem≠h‹e
> 
	gchÆÀngeMuãx
;

207 
föÆ
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gSem≠h‹e
> 
	gackMuãx
;

208 
föÆ
 
	gC⁄cuºítHashM≠
<
	gI√tSockëAddªss
, C⁄cuºítHashM≠<
	gL⁄g
, L⁄g>> 
	gaddrChÆÀngeM≠
;

210 ˛as†
	cW‹kîRe˚ivî
 
im∂emíts
 
	gRu¬abÀ
 {

212 
D©agømSockë
 
	gmySockë
;

213 
Mes£ngî
 
	gmyMsg
;

215 
W‹kîRe˚ivî
(
D©agømSockë
 
s
, 
Mes£ngî
 
msg
) {

216 
	gmySockë
 = 
s
;

217 
	gmyMsg
 = 
msg
;

220 
boﬁón
 
ßveChÆÀnge
(
èg
, 
chÆÀnge
) {

221 
Sem≠h‹e
 
	gs
 = 
chÆÀngeMuãx
.
gë
(
èg
);

222 i‡(
	gs
 !
nuŒ
) {

223 
synchr⁄ized
 (
Mes£ngî
.
this
) {

224 
chÆÀngeM≠
.
put
(
èg
, 
chÆÀnge
);

225 
	gchÆÀngeMuãx
.
ªmove
(
èg
);

229 
	gs
.
ªÀa£
();

231 
	gLOG
.
îr‹
("No challenge mutex object");

235  
	gåue
;

238 
public
 
run
() {

239 
byã
 
	gª•⁄£Byãs
[] = 
√w
 byte[48];

240 
ByãBuf„r
 
	gª•⁄£Buf„r
 = ByãBuf„r.
wøp
(
ª•⁄£Byãs
);

241 
D©agømPackë
 
	gª•⁄£Packë
 = 
√w
 DatagramPacket(

242 
ª•⁄£Byãs
,Ñe•⁄£Byãs.
Àngth
);

243 
	gåue
) {

245 
	gåy
 {

246 
	gª•⁄£Buf„r
.
˛ór
();

247 
	gmySockë
.
ª˚ive
(
ª•⁄£Packë
);

248 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

249 
	gLOG
.
w¨n
("Ign‹ögÉx˚±i⁄Ñe˚ivög", 
e
);

252 i‡(
	gª•⁄£Packë
.
gëLígth
(Ë!
ª•⁄£Byãs
.
Àngth
) {

253 
LOG
.
w¨n
("Gotá shortÑesponse: "

254 + 
ª•⁄£Packë
.
gëLígth
() + " "

255 + 
ª•⁄£Packë
.
toSåög
());

258 
	gª•⁄£Buf„r
.
˛ór
();

259 
	gty≥
 = 
ª•⁄£Buf„r
.
gëI¡
();

260 i‡((
	gty≥
 > 3) || (type < 0)) {

261 
	gLOG
.
w¨n
("GŸ bad MsgÅy≥: " + 
ty≥
);

264 
	gèg
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

266 
	gQu‹umPìr
.
SîvîSèã
 
	gack°©e
 = 
Qu‹umPìr
.SîvîSèã.
LOOKING
;

267 
	gª•⁄£Buf„r
.
gëI¡
()) {

269 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
;

272 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
LEADING
;

275 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
FOLLOWING
;

279 
VŸe
 
	gcuºít
 = 
£lf
.
gëCuºítVŸe
();

281 
	gty≥
) {

284 
ToSíd
 
c
 = 
√w
 ToSíd(ToSíd.
mTy≥
.
chÆÀnge
, 
èg
,

285 
cuºít
.
gëId
(), cuºít.
gëZxid
(),

286 
logiˇl˛ock
, 
£lf
.
gëPìrSèã
(),

287 (
I√tSockëAddªss
Ë
ª•⁄£Packë


288 .
gëSockëAddªss
());

289 
	g£ndqueue
.
of„r
(
c
);

293 
chÆÀnge
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

294 
ßveChÆÀnge
(
èg
, 
chÆÀnge
);

298 
NŸifiˇti⁄
 
n
 = 
√w
 Notification();

299 
	gn
.
	gÀadî
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

300 
	gn
.
	gzxid
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

301 
	gn
.
	gïoch
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

302 
	gn
.
	g°©e
 = 
ack°©e
;

303 
	gn
.
	gaddr
 = (
I√tSockëAddªss
Ë
ª•⁄£Packë


304 .
gëSockëAddªss
();

306 i‡((
	gmyMsg
.
	gœ°Epoch
 <
n
.
ïoch
)

307 && ((
n
.
zxid
 > 
myMsg
.
œ°Pr›o£dZxid
)

308 || ((
n
.
zxid
 =
myMsg
.
œ°Pr›o£dZxid
)

309 && (
n
.
Àadî
 > 
myMsg
.
œ°Pr›o£dLódî
)))) {

310 
myMsg
.
œ°Pr›o£dZxid
 = 
n
.
zxid
;

311 
	gmyMsg
.
	gœ°Pr›o£dLódî
 = 
n
.
Àadî
;

312 
	gmyMsg
.
	gœ°Epoch
 = 
n
.
ïoch
;

315 
	gªcChÆÀnge
;

316 
I√tSockëAddªss
 
	gaddr
 = (I√tSockëAddªssË
ª•⁄£Packë


317 .
gëSockëAddªss
();

318 i‡(
	gauthE«bÀd
) {

319 
	gC⁄cuºítHashM≠
<
	gL⁄g
, L⁄g> 
	gtmpM≠
 = 
addrChÆÀngeM≠
.
gë
(
addr
);

320 if(
	gtmpM≠
 !
nuŒ
){

321 i‡(
tmpM≠
.
gë
(
èg
Ë!
nuŒ
) {

322 
ªcChÆÀnge
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

324 i‡(
	gtmpM≠
.
gë
(
èg
Ë=
ªcChÆÀnge
) {

325 
ªcvqueue
.
of„r
(
n
);

327 
ToSíd
 
	ga
 = 
√w
 ToSíd(ToSíd.
mTy≥
.
ack
,

328 
èg
, 
cuºít
.
gëId
(),

329 
cuºít
.
gëZxid
(),

330 
logiˇl˛ock
, 
£lf
.
gëPìrSèã
(),

331 
addr
);

333 
	g£ndqueue
.
of„r
(
a
);

335 
	gLOG
.
w¨n
("Incorrect challenge: "

336 + 
ªcChÆÀnge
 + ", "

337 + 
addrChÆÀngeM≠
.
toSåög
());

340 
	gLOG
.
w¨n
("NÿchÆÀngêf‹ ho°: " + 
addr


341 + " " + 
èg
);

345 
	gªcvqueue
.
of„r
(
n
);

347 
ToSíd
 
	ga
 = 
√w
 ToSíd(ToSíd.
mTy≥
.
ack
, 
èg
,

348 
cuºít
.
gëId
(), cuºít.
gëZxid
(),

349 
logiˇl˛ock
, 
£lf
.
gëPìrSèã
(),

350 (
I√tSockëAddªss
Ë
ª•⁄£Packë


351 .
gëSockëAddªss
());

353 
	g£ndqueue
.
of„r
(
a
);

360 
Sem≠h‹e
 
s
 = 
ackMuãx
.
gë
(
èg
);

362 if(
	gs
 !
nuŒ
)

363 
s
.
ªÀa£
();

364 
	gLOG
.
îr‹
("Emptyáck semaphore");

366 
	gack£t
.
add
(
èg
);

368 i‡(
	gauthE«bÀd
) {

369 
	gC⁄cuºítHashM≠
<
	gL⁄g
, L⁄g> 
	gtmpM≠
 = 
addrChÆÀngeM≠
.
gë
(
ª•⁄£Packë


370 .
gëSockëAddªss
());

371 if(
	gtmpM≠
 !
nuŒ
) {

372 
tmpM≠
.
ªmove
(
èg
);

374 
	gLOG
.
w¨n
("Nÿsucháddªs†öÅhêí£mbÀ c⁄figuøti⁄ " + 
ª•⁄£Packë


375 .
gëSockëAddªss
());

379 i‡(
	gack°©e
 !
Qu‹umPìr
.
SîvîSèã
.
LOOKING
) {

380 
NŸifiˇti⁄
 
outofsync
 = 
√w
 Notification();

381 
	goutofsync
.
	gÀadî
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

382 
	goutofsync
.
	gzxid
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

383 
	goutofsync
.
	gïoch
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

384 
	goutofsync
.
	g°©e
 = 
ack°©e
;

385 
	goutofsync
.
	gaddr
 = (
I√tSockëAddªss
Ë
ª•⁄£Packë


386 .
gëSockëAddªss
();

388 
	gªcvqueue
.
of„r
(
outofsync
);

394 
LOG
.
w¨n
("Re˚ived mesßgêo‡öc‹ª˘Åy≥ " + 
ty≥
);

401 ˛as†
	cW‹kîSídî
 
im∂emíts
 
	gRu¬abÀ
 {

403 
R™dom
 
	gønd
;

404 
	gmaxAâem±s
;

405 
	gackWaô
 = 
föÆizeWaô
;

411 
W‹kîSídî
(
©ãm±s
) {

412 
	gmaxAâem±s
 = 
©ãm±s
;

413 
	gønd
 = 
√w
 
R™dom
(
java
.
œng
.
Thªad
.
cuºítThªad
().
gëId
()

414 + 
Sy°em
.
cuºítTimeMûlis
());

417 
gíChÆÀnge
() {

418 
byã
 
	gbuf
[] = 
√w
 byte[8];

420 
	gbuf
[0] = (
byã
Ë((
chÆÀngeCou¡î
 & 0xff000000) >>> 24);

421 
	gbuf
[1] = (
byã
Ë((
chÆÀngeCou¡î
 & 0x00ff0000) >>> 16);

422 
	gbuf
[2] = (
byã
Ë((
chÆÀngeCou¡î
 & 0x0000ff00) >>> 8);

423 
	gbuf
[3] = (
byã
Ë((
chÆÀngeCou¡î
 & 0x000000ff));

425 
	gchÆÀngeCou¡î
++;

426 
	g£¸ë
 = 
ønd
.
√xtI¡
(
java
.
œng
.
I¡egî
.
MAX_VALUE
);

428 
	gbuf
[4] = (
byã
Ë((
£¸ë
 & 0xff000000) >>> 24);

429 
	gbuf
[5] = (
byã
Ë((
£¸ë
 & 0x00ff0000) >>> 16);

430 
	gbuf
[6] = (
byã
Ë((
£¸ë
 & 0x0000ff00) >>> 8);

431 
	gbuf
[7] = (
byã
Ë((
£¸ë
 & 0x000000ff));

433  ((()(
	gbuf
[0] & 0xFF)) << 56)

434 + ((()(
	gbuf
[1] & 0xFF)) << 48)

435 + ((()(
	gbuf
[2] & 0xFF)) << 40)

436 + ((()(
	gbuf
[3] & 0xFF)) << 32)

437 + ((()(
	gbuf
[4] & 0xFF)) << 24)

438 + ((()(
	gbuf
[5] & 0xFF)) << 16)

439 + ((()(
	gbuf
[6] & 0xFF)) << 8)

440 + (()(
	gbuf
[7] & 0xFF));

443 
public
 
run
() {

444 
	gåue
) {

445 
	gåy
 {

446 
ToSíd
 
	gm
 = 
£ndqueue
.
èke
();

447 
¥o˚ss
(
m
);

448 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

455 
¥iv©e
 
¥o˚ss
(
ToSíd
 
m
) {

456 
	g©ãm±s
 = 0;

457 
byã
 
	gzî€s
[];

458 
byã
 
	gªque°Byãs
[] = 
√w
 byte[48];

459 
D©agømPackë
 
	gªque°Packë
 = 
√w
 D©agømPackë(
ªque°Byãs
,

460 
ªque°Byãs
.
Àngth
);

461 
ByãBuf„r
 
	gªque°Buf„r
 = ByãBuf„r.
wøp
(
ªque°Byãs
);

463 
	gm
.
	gty≥
) {

468 
ªque°Buf„r
.
˛ór
();

469 
	gªque°Buf„r
.
putI¡
(
ToSíd
.
mTy≥
.
¸eque°
.
‹döÆ
());

470 
	gªque°Buf„r
.
putL⁄g
(
m
.
èg
);

471 
	gªque°Buf„r
.
putI¡
(
m
.
°©e
.
‹döÆ
());

472 
	gzî€s
 = 
√w
 
byã
[32];

473 
	gªque°Buf„r
.
put
(
zî€s
);

475 
	gªque°Packë
.
£tLígth
(48);

476 
	gåy
 {

477 
	gªque°Packë
.
£tSockëAddªss
(
m
.
addr
);

478 } 
ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

482 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

484 + 
e
.
gëMesßge
(Ë+ " wôháddr:" + 
m
.
addr
,

485 
e
);

488 
	gåy
 {

489 i‡(
	gchÆÀngeM≠
.
gë
(
m
.
èg
Ë=
nuŒ
) {

490 
mySockë
.
£nd
(
ªque°Packë
);

492 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

493 
	gLOG
.
w¨n
("Ex˚±i⁄ whûê£ndög chÆÀnge: ", 
e
);

502 
√wChÆÀnge
;

503 
	gC⁄cuºítHashM≠
<
	gL⁄g
, L⁄g> 
	gtmpM≠
 = 
addrChÆÀngeM≠
.
gë
(
m
.
addr
);

504 if(
	gtmpM≠
 !
nuŒ
){

505 
L⁄g
 
tmpL⁄g
 = 
tmpM≠
.
gë
(
m
.
èg
);

506 i‡(
	gtmpL⁄g
 !
nuŒ
) {

507 
√wChÆÀnge
 = 
tmpL⁄g
;

509 
	g√wChÆÀnge
 = 
gíChÆÀnge
();

512 
	gtmpM≠
.
put
(
m
.
èg
, 
√wChÆÀnge
);

514 
	gªque°Buf„r
.
˛ór
();

515 
	gªque°Buf„r
.
putI¡
(
ToSíd
.
mTy≥
.
chÆÀnge
.
‹döÆ
());

516 
	gªque°Buf„r
.
putL⁄g
(
m
.
èg
);

517 
	gªque°Buf„r
.
putI¡
(
m
.
°©e
.
‹döÆ
());

518 
	gªque°Buf„r
.
putL⁄g
(
√wChÆÀnge
);

519 
	gzî€s
 = 
√w
 
byã
[24];

520 
	gªque°Buf„r
.
put
(
zî€s
);

522 
	gªque°Packë
.
£tLígth
(48);

523 
	gåy
 {

524 
	gªque°Packë
.
£tSockëAddªss
(
m
.
addr
);

525 } 
ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

529 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

531 + 
e
.
gëMesßge
(Ë+ " wôháddr:" + 
m
.
addr
,

532 
e
);

536 
	gåy
 {

537 
	gmySockë
.
£nd
(
ªque°Packë
);

538 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

539 
	gLOG
.
w¨n
("Ex˚±i⁄ whûê£ndög chÆÀnge: ", 
e
);

542 
	gLOG
.
îr‹
("Addªs†i†nŸ i¿thêc⁄figuøti⁄: " + 
m
.
addr
);

552 
ªque°Buf„r
.
˛ór
();

553 
	gªque°Buf„r
.
putI¡
(
m
.
ty≥
);

554 
	gªque°Buf„r
.
putL⁄g
(
m
.
èg
);

555 
	gªque°Buf„r
.
putI¡
(
m
.
°©e
.
‹döÆ
());

556 
	gªque°Buf„r
.
putL⁄g
(
m
.
Àadî
);

557 
	gªque°Buf„r
.
putL⁄g
(
m
.
zxid
);

558 
	gªque°Buf„r
.
putL⁄g
(
m
.
ïoch
);

559 
	gzî€s
 = 
√w
 
byã
[8];

560 
	gªque°Buf„r
.
put
(
zî€s
);

562 
	gªque°Packë
.
£tLígth
(48);

563 
	gåy
 {

564 
	gªque°Packë
.
£tSockëAddªss
(
m
.
addr
);

565 } 
ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

569 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

571 + 
e
.
gëMesßge
(Ë+ " wôháddr:" + 
m
.
addr
,

572 
e
);

576 
boﬁón
 
	gmyChÆÀnge
 = 
Ál£
;

577 
boﬁón
 
	gmyAck
 = 
Ál£
;

579 
	g©ãm±s
 < 
	gmaxAâem±s
) {

580 
	gåy
 {

586 i‡(!
	gmyChÆÀnge
 && 
	gauthE«bÀd
) {

587 
ToSíd
 
	g¸eque°
 = 
√w
 ToSend(

588 
ToSíd
.
mTy≥
.
¸eque°
, 
m
.
èg
, m.
Àadî
,

589 
m
.
zxid
, m.
ïoch
,

590 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
, 
m
.
addr
);

591 
	g£ndqueue
.
of„r
(
¸eque°
);

593 
	gåy
 {

594 
	gtimeout
 = 
ackWaô


595 * 
java
.
œng
.
M©h
.
pow
(2, 
©ãm±s
);

597 
Sem≠h‹e
 
	gs
 = 
√w
 Semaphore(0);

598 
synchr⁄ized
(
Mes£ngî
.
this
) {

599 
	gchÆÀngeMuãx
.
put
(
m
.
èg
, 
s
);

600 
	gs
.
åyAcquúe
((Ë
timeout
, 
TimeUnô
.
MILLISECONDS
);

601 
	gmyChÆÀnge
 = 
chÆÀngeM≠


602 .
c⁄èösKey
(
m
.
èg
);

604 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

605 
	gLOG
.
w¨n
("ChÆÀngêªque°Éx˚±i⁄: ", 
e
);

614 i‡(
	gauthE«bÀd
 && !
	gmyChÆÀnge
) {

615 
	g©ãm±s
++;

619 i‡(
	gauthE«bÀd
) {

620 
	gªque°Buf„r
.
posôi⁄
(40);

621 
L⁄g
 
	gtmpL⁄g
 = 
chÆÀngeM≠
.
gë
(
m
.
èg
);

622 if(
	gtmpL⁄g
 !
nuŒ
){

623 
ªque°Buf„r
.
putL⁄g
(
tmpL⁄g
);

625 
	gLOG
.
w¨n
("NÿchÆÀngêwôhÅag: " + 
m
.
èg
);

628 
	gmySockë
.
£nd
(
ªque°Packë
);

629 
	gåy
 {

630 
Sem≠h‹e
 
	gs
 = 
√w
 Semaphore(0);

631 
	gtimeout
 = 
ackWaô


632 * 
java
.
œng
.
M©h
.
pow
(10, 
©ãm±s
);

633 
	gackMuãx
.
put
(
m
.
èg
, 
s
);

634 
	gs
.
åyAcquúe
((Ë
timeout
, 
TimeUnô
.
MILLISECONDS
);

635 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

636 
	gLOG
.
w¨n
("AckÉx˚±i⁄: ", 
e
);

639 if(
	gack£t
.
ªmove
(
m
.
èg
)){

640 
	gmyAck
 = 
åue
;

643 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

644 
	gLOG
.
w¨n
("SídögÉx˚±i⁄: ", 
e
);

649 i‡(
	gmyAck
) {

653 
	gchÆÀngeM≠
.
ªmove
(
m
.
èg
);

657 
	g©ãm±s
++;

663 i‡(
	gm
.
	gïoch
 =
logiˇl˛ock
) {

664 
chÆÀngeM≠
.
ªmove
(
m
.
èg
);

665 
	g£ndqueue
.
of„r
(
m
);

670 
ªque°Buf„r
.
˛ór
();

671 
	gªque°Buf„r
.
putI¡
(
m
.
ty≥
);

672 
	gªque°Buf„r
.
putL⁄g
(
m
.
èg
);

673 
	gªque°Buf„r
.
putI¡
(
m
.
°©e
.
‹döÆ
());

674 
	gªque°Buf„r
.
putL⁄g
(
m
.
Àadî
);

675 
	gªque°Buf„r
.
putL⁄g
(
m
.
zxid
);

676 
	gªque°Buf„r
.
putL⁄g
(
m
.
ïoch
);

678 
	gªque°Packë
.
£tLígth
(48);

679 
	gåy
 {

680 
	gªque°Packë
.
£tSockëAddªss
(
m
.
addr
);

681 } 
ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

685 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

687 + 
e
.
gëMesßge
(Ë+ " wôháddr:" + 
m
.
addr
,

688 
e
);

692 
	gåy
 {

693 
	gmySockë
.
£nd
(
ªque°Packë
);

694 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

695 
	gLOG
.
w¨n
("Ex˚±i⁄ whûê£ndögáck: ", 
e
);

702 
public
 
boﬁón
 
queueEm±y
() {

703  (
	g£ndqueue
.
isEm±y
(Ë|| 
	gack£t
.isEm±y(Ë|| 
	gªcvqueue


704 .
isEm±y
());

707 
Mes£ngî
(
thªads
, 
D©agømSockë
 
s
) {

708 
	gmySockë
 = 
s
;

709 
	gack£t
 = 
CﬁÀ˘i⁄s
.<
L⁄g
>
√wSëFromM≠
(
√w
 
C⁄cuºítHashM≠
<L⁄g, 
Boﬁón
>());

710 
	gchÆÀngeM≠
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	gL⁄g
>();

711 
	gchÆÀngeMuãx
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	gSem≠h‹e
>();

712 
	gackMuãx
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	gSem≠h‹e
>();

713 
	gaddrChÆÀngeM≠
 = 
√w
 
C⁄cuºítHashM≠
<
I√tSockëAddªss
, 
	gC⁄cuºítHashM≠
<
	gL⁄g
, Long>>();

714 
	gœ°Pr›o£dLódî
 = 0;

715 
	gœ°Pr›o£dZxid
 = 0;

716 
	gœ°Epoch
 = 0;

718 
	gi
 = 0; i < 
	gthªads
; ++i) {

719 
Thªad
 
	gt
 = 
√w
 Thªad“ew 
W‹kîSídî
(3),

720 "W‹kîSídî Thªad: " + (
i
 + 1));

721 
	gt
.
£tD´m⁄
(
åue
);

722 
	gt
.
°¨t
();

725 
Qu‹umSîvî
 
	g£rvî
 : 
£lf
.
gëVŸögVõw
().
vÆues
()) {

726 
I√tSockëAddªss
 
ßddr
 = 
√w
 I√tSockëAddªss(
£rvî
.
addr


727 .
gëAddªss
(), 
p‹t
);

728 
	gaddrChÆÀngeM≠
.
put
(
ßddr
, 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, Long>());

731 
Thªad
 
	gt
 = 
√w
 Thªad“ew 
W‹kîRe˚ivî
(
s
, 
this
),

733 
	gt
.
°¨t
();

738 
Qu‹umPìr
 
	g£lf
;

739 
	gp‹t
;

740 vﬁ©ûê
	glogiˇl˛ock
;

741 
D©agømSockë
 
	gmySockë
;

742 
	g¥›o£dLódî
;

743 
	g¥›o£dZxid
;

745 
public
 
	$AuthFa°LódîEÀ˘i⁄
(
Qu‹umPìr
 
£lf
,

746 
boﬁón
 
auth
) {

747 
this
.
authE«bÀd
 = 
auth
;

748 
	`°¨ãr
(
£lf
);

749 
	}
}

751 
public
 
	$AuthFa°LódîEÀ˘i⁄
(
Qu‹umPìr
 
£lf
) {

752 
	`°¨ãr
(
£lf
);

753 
	}
}

755 
¥iv©e
 
	$°¨ãr
(
Qu‹umPìr
 
£lf
) {

756 
this
.
£lf
 = self;

757 
p‹t
 = 
£lf
.
	`gëVŸögVõw
().
	`gë
(£lf.
	`gëId
()).
ñe˘i⁄Addr
.
	`gëP‹t
();

758 
¥›o£dLódî
 = -1;

759 
¥›o£dZxid
 = -1;

761 
åy
 {

762 
mySockë
 = 
√w
 
	`D©agømSockë
(
p‹t
);

764 } 
	`ˇtch
 (
SockëEx˚±i⁄
 
e1
) {

765 
e1
.
	`¥ötSèckTø˚
();

766 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
();

768 
£ndqueue
 = 
√w
 
LökedBlockögQueue
<
ToSíd
>(2 * 
£lf
.
	`gëVŸögVõw
().
	`size
());

769 
ªcvqueue
 = 
√w
 
LökedBlockögQueue
<
NŸifiˇti⁄
>(2 * 
£lf
.
	`gëVŸögVõw
()

770 .
	`size
());

771 
√w
 
	`Mes£ngî
(
£lf
.
	`gëVŸögVõw
().
	`size
(Ë* 2, 
mySockë
);

772 
	}
}

774 
¥iv©e
 
	$ÀaveIn°™˚
() {

775 
logiˇl˛ock
++;

776 
	}
}

778 
¥iv©e
 
	$£ndNŸifiˇti⁄s
() {

779 
Qu‹umSîvî
 
£rvî
 : 
£lf
.
	`gëVõw
().
	`vÆues
()) {

781 
ToSíd
 
nŸmsg
 = 
√w
 
	`ToSíd
(ToSíd.
mTy≥
.
nŸifiˇti⁄
,

782 
AuthFa°LódîEÀ˘i⁄
.
£quí˚r
++, 
¥›o£dLódî
,

783 
¥›o£dZxid
, 
logiˇl˛ock
, 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
,

784 
£lf
.
	`gëVõw
().
	`gë
(
£rvî
.
id
).
ñe˘i⁄Addr
);

786 
£ndqueue
.
	`of„r
(
nŸmsg
);

788 
	}
}

790 
¥iv©e
 
boﬁón
 
	$tŸÆOrdîPªdiˇã
(
id
, 
zxid
) {

791 i‡((
zxid
 > 
¥›o£dZxid
)

792 || ((
zxid
 =
¥›o£dZxid
Ë&& (
id
 > 
¥›o£dLódî
)))

793  
åue
;

795  
Ál£
;

797 
	}
}

799 
¥iv©e
 
boﬁón
 
ãrmPªdiˇã
(
HashM≠
<
I√tSockëAddªss
, 
VŸe
> 
vŸes
,

800 
l
, 
zxid
) {

803 
	gCﬁÀ˘i⁄
<
	gVŸe
> 
	gvŸesCa°
 = 
vŸes
.
vÆues
();

804 
	gcou¡
 = 0;

809 
VŸe
 
	gv
 : 
vŸesCa°
) {

810 i‡((
v
.
gëId
(Ë=
l
Ë&& (v.
gëZxid
(Ë=
zxid
))

811 
cou¡
++;

814 i‡(
	gcou¡
 > (
	g£lf
.
gëVŸögVõw
().
size
() / 2))

815  
	gåue
;

817  
	gÁl£
;

825 
public
 
	$shutdown
(){
	}
}

832 
public
 
VŸe
 
	$lookF‹Lódî
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

833 
åy
 {

834 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
√w
 
	`LódîEÀ˘i⁄Bón
();

835 
MBónRegi°ry
.
	`gëIn°™˚
().(

836 
£lf
.
jmxLódîEÀ˘i⁄Bón
, sñf.
jmxLoˇlPìrBón
);

837 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

838 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

839 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

842 
åy
 {

843 
HashM≠
<
I√tSockëAddªss
, 
VŸe
> 
ªcv£t
 =

844 
√w
 
HashM≠
<
I√tSockëAddªss
, 
VŸe
>();

846 
HashM≠
<
I√tSockëAddªss
, 
VŸe
> 
outo„À˘i⁄
 =

847 
√w
 
HashM≠
<
I√tSockëAddªss
, 
VŸe
>();

849 
logiˇl˛ock
++;

851 
¥›o£dLódî
 = 
£lf
.
	`gëId
();

852 
¥›o£dZxid
 = 
£lf
.
	`gëLa°LoggedZxid
();

854 
LOG
.
	`öfo
("ElectionÅally");

855 
	`£ndNŸifiˇti⁄s
();

861 
£lf
.
	`gëPìrSèã
(Ë=
SîvîSèã
.
LOOKING
) {

866 
NŸifiˇti⁄
 
n
 = 
ªcvqueue
.
	`pﬁl
(2 * 
föÆizeWaô
,

867 
TimeUnô
.
MILLISECONDS
);

873 i‡(
n
 =
nuŒ
) {

874 i‡(((!
outo„À˘i⁄
.
	`isEm±y
()Ë|| (
ªcv£t
.
	`size
() > 1)))

875 
	`£ndNŸifiˇti⁄s
();

877 
n
.
°©e
) {

878 
LOOKING
:

879 i‡(
n
.
ïoch
 > 
logiˇl˛ock
) {

880 
logiˇl˛ock
 = 
n
.
ïoch
;

881 
ªcv£t
.
	`˛ór
();

882 i‡(
	`tŸÆOrdîPªdiˇã
(
n
.
Àadî
,Ç.
zxid
)) {

883 
¥›o£dLódî
 = 
n
.
Àadî
;

884 
¥›o£dZxid
 = 
n
.
zxid
;

886 
	`£ndNŸifiˇti⁄s
();

887 } i‡(
n
.
ïoch
 < 
logiˇl˛ock
) {

889 } i‡(
	`tŸÆOrdîPªdiˇã
(
n
.
Àadî
,Ç.
zxid
)) {

890 
¥›o£dLódî
 = 
n
.
Àadî
;

891 
¥›o£dZxid
 = 
n
.
zxid
;

893 
	`£ndNŸifiˇti⁄s
();

896 
ªcv£t
.
	`put
(
n
.
addr
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
));

899 i‡(
£lf
.
	`gëVŸögVõw
().
	`size
(Ë=
ªcv£t
.size()) {

900 
£lf
.
	`£tPìrSèã
((
¥›o£dLódî
 =£lf.
	`gëId
()) ?

901 
SîvîSèã
.
LEADING
: SîvîSèã.
FOLLOWING
);

905 
	`ÀaveIn°™˚
();

906  
√w
 
	`VŸe
(
¥›o£dLódî
, 
¥›o£dZxid
);

908 } i‡(
	`ãrmPªdiˇã
(
ªcv£t
, 
¥›o£dLódî
,

909 
¥›o£dZxid
)) {

911 
LOG
.
	`öfo
("PassedÖredicate");

912 
Thªad
.
	`¶ìp
(
föÆizeWaô
);

917 (!
ªcvqueue
.
	`isEm±y
())

918 && !
	`tŸÆOrdîPªdiˇã
(

919 
ªcvqueue
.
	`≥ek
().
Àadî
,Ñecvqueue

920 .
	`≥ek
().
zxid
)) {

921 
ªcvqueue
.
	`pﬁl
();

923 i‡(
ªcvqueue
.
	`isEm±y
()) {

926 
£lf
.
	`£tPìrSèã
(

927 (
¥›o£dLódî
 =
£lf
.
	`gëId
()) ?

928 
SîvîSèã
.
LEADING
 :

929 
SîvîSèã
.
FOLLOWING
);

931 
	`ÀaveIn°™˚
();

932  
√w
 
	`VŸe
(
¥›o£dLódî
, 
¥›o£dZxid
);

936 
LEADING
:

937 
outo„À˘i⁄
.
	`put
(
n
.
addr
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
));

939 i‡(
	`ãrmPªdiˇã
(
outo„À˘i⁄
, 
n
.
Àadî
,Ç.
zxid
)) {

941 
£lf
.
	`£tPìrSèã
((
n
.
Àadî
 =£lf.
	`gëId
()) ?

942 
SîvîSèã
.
LEADING
: SîvîSèã.
FOLLOWING
);

944 
	`ÀaveIn°™˚
();

945  
√w
 
	`VŸe
(
n
.
Àadî
,Ç.
zxid
);

948 
FOLLOWING
:

949 
outo„À˘i⁄
.
	`put
(
n
.
addr
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
));

951 i‡(
	`ãrmPªdiˇã
(
outo„À˘i⁄
, 
n
.
Àadî
,Ç.
zxid
)) {

953 
£lf
.
	`£tPìrSèã
((
n
.
Àadî
 =£lf.
	`gëId
()) ?

954 
SîvîSèã
.
LEADING
: SîvîSèã.
FOLLOWING
);

956 
	`ÀaveIn°™˚
();

957  
√w
 
	`VŸe
(
n
.
Àadî
,Ç.
zxid
);

965  
nuŒ
;

966 } 
föÆly
 {

967 
åy
 {

968 if(
£lf
.
jmxLódîEÀ˘i⁄Bón
 !
nuŒ
){

969 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(

970 
£lf
.
jmxLódîEÀ˘i⁄Bón
);

972 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

973 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

975 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

977 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

36 
public
 cœs†
	cCommôPro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

37 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
CommôPro˚ss‹
.
˛ass
);

42 
	mLökedLi°
<
	mReque°
> 
	mqueuedReque°s
 = 
√w
 
LökedLi°
<
Reque°
>();

47 
	mLökedLi°
<
	mReque°
> 
	mcommôãdReque°s
 = 
√w
 
LökedLi°
<
Reque°
>();

49 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

50 
	mAºayLi°
<
	mReque°
> 
	mtoPro˚ss
 = 
√w
 
AºayLi°
<
Reque°
>();

57 
boﬁón
 
	mm©chSyncs
;

59 
public
 
	$CommôPro˚ss‹
(
Reque°Pro˚ss‹
 
√xtPro˚ss‹
, 
Såög
 
id
, 
boﬁón
 
m©chSyncs
) {

60 
	`su≥r
("CommôPro˚ss‹:" + 
id
);

61 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

62 
this
.
m©chSyncs
 = matchSyncs;

65 vﬁ©ûê
boﬁón
 
föished
 = 
Ál£
;

67 @
Ovîride


68 
public
 
	$run
() {

69 
åy
 {

70 
Reque°
 
√xtPídög
 = 
nuŒ
;

71 !
föished
) {

72 
Àn
 = 
toPro˚ss
.
	`size
();

73 
i
 = 0; i < 
Àn
; i++) {

74 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
toPro˚ss
.
	`gë
(
i
));

76 
toPro˚ss
.
	`˛ór
();

77 
	`synchr⁄ized
 (
this
) {

78 i‡((
queuedReque°s
.
	`size
(Ë=0 || 
√xtPídög
 !
nuŒ
)

79 && 
commôãdReque°s
.
	`size
() == 0) {

80 
	`waô
();

85 i‡((
queuedReque°s
.
	`size
(Ë=0 || 
√xtPídög
 !
nuŒ
)

86 && 
commôãdReque°s
.
	`size
() > 0) {

87 
Reque°
 
r
 = 
commôãdReque°s
.
	`ªmove
();

94 i‡(
√xtPídög
 !
nuŒ


95 && 
√xtPídög
.
£ssi⁄Id
 =
r
.sessionId

96 && 
√xtPídög
.
cxid
 =
r
.cxid) {

99 
√xtPídög
.
hdr
 = 
r
.hdr;

100 
√xtPídög
.
txn
 = 
r
.txn;

101 
√xtPídög
.
zxid
 = 
r
.zxid;

102 
toPro˚ss
.
	`add
(
√xtPídög
);

103 
√xtPídög
 = 
nuŒ
;

107 
toPro˚ss
.
	`add
(
r
);

114 i‡(
√xtPídög
 !
nuŒ
) {

118 
	`synchr⁄ized
 (
this
) {

120 
√xtPídög
 =
nuŒ
 && 
queuedReque°s
.
	`size
() > 0) {

121 
Reque°
 
ªque°
 = 
queuedReque°s
.
	`ªmove
();

122 
ªque°
.
ty≥
) {

123 
OpCode
.
¸óã
:

124 
OpCode
.
dñëe
:

125 
OpCode
.
£tD©a
:

126 
OpCode
.
mu…i
:

127 
OpCode
.
£tACL
:

128 
OpCode
.
¸óãSessi⁄
:

129 
OpCode
.
˛o£Sessi⁄
:

130 
√xtPídög
 = 
ªque°
;

132 
OpCode
.
sync
:

133 i‡(
m©chSyncs
) {

134 
√xtPídög
 = 
ªque°
;

136 
toPro˚ss
.
	`add
(
ªque°
);

140 
toPro˚ss
.
	`add
(
ªque°
);

145 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

146 
LOG
.
	`w¨n
("I¡îru±edÉx˚±i⁄ whûêwaôög", 
e
);

147 } 
	`ˇtch
 (
ThrowabÀ
 
e
) {

148 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄ causög CommôPro˚ss‹Åÿexô", 
e
);

150 
LOG
.
	`öfo
("CommitProcessorÉxitedÜoop!");

151 
	}
}

153 
synchr⁄ized
 
public
 
	$commô
(
Reque°
 
ªque°
) {

154 i‡(!
föished
) {

155 i‡(
ªque°
 =
nuŒ
) {

156 
LOG
.
	`w¨n
("CommittedáÇull!",

157 
√w
 
	`Ex˚±i⁄
("committingáÇull! "));

160 i‡(
LOG
.
	`isDebugE«bÀd
()) {

161 
LOG
.
	`debug
("CommôtögÑeque°:: " + 
ªque°
);

163 
commôãdReque°s
.
	`add
(
ªque°
);

164 
	`nŸifyAŒ
();

166 
	}
}

168 
synchr⁄ized
 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

170 i‡(
LOG
.
	`isDebugE«bÀd
()) {

171 
LOG
.
	`debug
("Pro˚ssögÑeque°:: " + 
ªque°
);

174 i‡(!
föished
) {

175 
queuedReque°s
.
	`add
(
ªque°
);

176 
	`nŸifyAŒ
();

178 
	}
}

180 
public
 
	$shutdown
() {

181 
LOG
.
	`öfo
("Shutting down");

182 
	`synchr⁄ized
 (
this
) {

183 
föished
 = 
åue
;

184 
queuedReque°s
.
	`˛ór
();

185 
	`nŸifyAŒ
();

187 i‡(
√xtPro˚ss‹
 !
nuŒ
) {

188 
√xtPro˚ss‹
.
	`shutdown
();

190 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Election.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

24 
public
 
öãrÁ˚
 
	gEÀ˘i⁄
 {

25 
public
 
VŸe
 
lookF‹Lódî
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
;

26 
public
 
shutdown
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java

20 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
.
	gMesßge
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

51 
public
 cœs†
	cFa°LódîEÀ˘i⁄
 
im∂emíts
 
	mEÀ˘i⁄
 {

52 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Fa°LódîEÀ˘i⁄
.
˛ass
);

59 
föÆ
 
	mföÆizeWaô
 = 200;

68 
föÆ
 
	mmaxNŸifiˇti⁄I¡îvÆ
 = 60000;

76 
Qu‹umCnxM™agî
 
	mm™agî
;

86 
public
 cœs†
	cNŸifiˇti⁄
 {

90 
	mÀadî
;

95 
	mzxid
;

100 
	mñe˘i⁄Epoch
;

105 
	mQu‹umPìr
.
SîvîSèã
 
	m°©e
;

110 
	msid
;

115 
	m≥îEpoch
;

123 
public
 cœs†
	cToSíd
 {

124 
	emTy≥
 {
	g¸eque°
, 
	gchÆÀnge
, 
	gnŸifiˇti⁄
, 
	gack
}

126 
ToSíd
(
mTy≥
 
ty≥
,

127 
Àadî
,

128 
zxid
,

129 
ñe˘i⁄Epoch
,

130 
SîvîSèã
 
°©e
,

131 
sid
,

132 
≥îEpoch
) {

134 
	gthis
.
	gÀadî
 = 
Àadî
;

135 
	gthis
.
	gzxid
 = 
zxid
;

136 
	gthis
.
	gñe˘i⁄Epoch
 = 
ñe˘i⁄Epoch
;

137 
	gthis
.
	g°©e
 = 
°©e
;

138 
	gthis
.
	gsid
 = 
sid
;

139 
	gthis
.
	g≥îEpoch
 = 
≥îEpoch
;

145 
	gÀadî
;

150 
	gzxid
;

155 
	gñe˘i⁄Epoch
;

160 
	gQu‹umPìr
.
SîvîSèã
 
	g°©e
;

165 
	gsid
;

170 
	g≥îEpoch
;

173 
	gLökedBlockögQueue
<
	gToSíd
> 
	g£ndqueue
;

174 
	gLökedBlockögQueue
<
	gNŸifiˇti⁄
> 
	gªcvqueue
;

183 
¥iv©e
 cœs†
	cMes£ngî
 {

190 ˛as†
	cW‹kîRe˚ivî
 
im∂emíts
 
	gRu¬abÀ
 {

191 vﬁ©ûê
boﬁón
 
	g°›
;

192 
Qu‹umCnxM™agî
 
	gm™agî
;

194 
W‹kîRe˚ivî
(
Qu‹umCnxM™agî
 
m™agî
) {

195 
	gthis
.
	g°›
 = 
Ál£
;

196 
	gthis
.
	gm™agî
 = 
m™agî
;

199 
public
 
run
() {

201 
Mesßge
 
	gª•⁄£
;

202 !
	g°›
) {

204 
	gåy
{

205 
	gª•⁄£
 = 
m™agî
.
pﬁlRecvQueue
(3000, 
TimeUnô
.
MILLISECONDS
);

206 if(
	gª•⁄£
 =
nuŒ
) ;

216 if(!
	g£lf
.
gëVŸögVõw
().
c⁄èösKey
(
ª•⁄£
.
sid
)){

217 
VŸe
 
	gcuºít
 = 
£lf
.
gëCuºítVŸe
();

218 
ToSíd
 
	gnŸmsg
 = 
√w
 ToSíd(ToSíd.
mTy≥
.
nŸifiˇti⁄
,

219 
cuºít
.
gëId
(),

220 
cuºít
.
gëZxid
(),

221 
logiˇl˛ock
,

222 
£lf
.
gëPìrSèã
(),

223 
ª•⁄£
.
sid
,

224 
cuºít
.
gëPìrEpoch
());

226 
	g£ndqueue
.
of„r
(
nŸmsg
);

229 i‡(
	gLOG
.
isDebugE«bÀd
()) {

230 
	gLOG
.
debug
("ReceiveÇewÇotification message. My id = "

231 + 
£lf
.
gëId
());

237 i‡(
	gª•⁄£
.
	gbuf„r
.
ˇ∑côy
() < 28) {

238 
	gLOG
.
îr‹
("Gotá shortÑesponse: "

239 + 
ª•⁄£
.
buf„r
.
ˇ∑côy
());

242 
boﬁón
 
	gbackCom∑tibûôy
 = (
ª•⁄£
.
buf„r
.
ˇ∑côy
() == 28);

243 
	gª•⁄£
.
	gbuf„r
.
˛ór
();

246 
	gQu‹umPìr
.
SîvîSèã
 
	gack°©e
 = 
Qu‹umPìr
.SîvîSèã.
LOOKING
;

247 
	gª•⁄£
.
	gbuf„r
.
gëI¡
()) {

249 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
;

252 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
FOLLOWING
;

255 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
LEADING
;

258 
ack°©e
 = 
Qu‹umPìr
.
SîvîSèã
.
OBSERVING
;

263 
NŸifiˇti⁄
 
	gn
 = 
√w
 Notification();

264 
	gn
.
	gÀadî
 = 
ª•⁄£
.
buf„r
.
gëL⁄g
();

265 
	gn
.
	gzxid
 = 
ª•⁄£
.
buf„r
.
gëL⁄g
();

266 
	gn
.
	gñe˘i⁄Epoch
 = 
ª•⁄£
.
buf„r
.
gëL⁄g
();

267 
	gn
.
	g°©e
 = 
ack°©e
;

268 
	gn
.
	gsid
 = 
ª•⁄£
.
sid
;

269 if(!
	gbackCom∑tibûôy
){

270 
	gn
.
	g≥îEpoch
 = 
ª•⁄£
.
buf„r
.
gëL⁄g
();

272 if(
	gLOG
.
isInfoE«bÀd
()){

273 
	gLOG
.
öfo
("Backw¨d com∑tibûôy mode, sîvî id=" + 
n
.
sid
);

275 
	gn
.
	g≥îEpoch
 = 
ZxidUtûs
.
gëEpochFromZxid
(
n
.
zxid
);

281 if(
	gLOG
.
isInfoE«bÀd
()){

282 
¥ötNŸifiˇti⁄
(
n
);

289 if(
	g£lf
.
gëPìrSèã
(Ë=
Qu‹umPìr
.
SîvîSèã
.
LOOKING
){

290 
ªcvqueue
.
of„r
(
n
);

297 if((
	gack°©e
 =
Qu‹umPìr
.
SîvîSèã
.
LOOKING
)

298 && (
n
.
ñe˘i⁄Epoch
 < 
logiˇl˛ock
)){

299 
VŸe
 
v
 = 
gëVŸe
();

300 
ToSíd
 
	gnŸmsg
 = 
√w
 ToSíd(ToSíd.
mTy≥
.
nŸifiˇti⁄
,

301 
v
.
gëId
(),

302 
v
.
gëZxid
(),

303 
logiˇl˛ock
,

304 
£lf
.
gëPìrSèã
(),

305 
ª•⁄£
.
sid
,

306 
v
.
gëPìrEpoch
());

307 
	g£ndqueue
.
of„r
(
nŸmsg
);

314 
VŸe
 
	gcuºít
 = 
£lf
.
gëCuºítVŸe
();

315 if(
	gack°©e
 =
Qu‹umPìr
.
SîvîSèã
.
LOOKING
){

316 if(
LOG
.
isDebugE«bÀd
()){

317 
LOG
.
debug
("SendingÇewÇotification. My id = " +

318 
£lf
.
gëId
() + "Ñecipient=" +

319 
ª•⁄£
.
sid
 + " zxid=0x" +

320 
L⁄g
.
toHexSåög
(
cuºít
.
gëZxid
()) +

321 "Üódî=" + 
cuºít
.
gëId
());

323 
ToSíd
 
	gnŸmsg
 = 
√w
 ToSend(

324 
ToSíd
.
mTy≥
.
nŸifiˇti⁄
,

325 
cuºít
.
gëId
(),

326 
cuºít
.
gëZxid
(),

327 
logiˇl˛ock
,

328 
£lf
.
gëPìrSèã
(),

329 
ª•⁄£
.
sid
,

330 
cuºít
.
gëPìrEpoch
());

331 
	g£ndqueue
.
of„r
(
nŸmsg
);

335 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

336 
	gSy°em
.
	gout
.
¥öén
("Interrupted Exception while waiting forÇew message" +

337 
e
.
toSåög
());

340 
	gLOG
.
öfo
("WorkerReceiver is down");

350 ˛as†
	cW‹kîSídî
 
im∂emíts
 
	gRu¬abÀ
 {

351 vﬁ©ûê
boﬁón
 
	g°›
;

352 
Qu‹umCnxM™agî
 
	gm™agî
;

354 
W‹kîSídî
(
Qu‹umCnxM™agî
 
m™agî
){

355 
	gthis
.
	g°›
 = 
Ál£
;

356 
	gthis
.
	gm™agî
 = 
m™agî
;

359 
public
 
run
() {

360 !
	g°›
) {

361 
	gåy
 {

362 
ToSíd
 
	gm
 = 
£ndqueue
.
pﬁl
(3000, 
TimeUnô
.
MILLISECONDS
);

363 if(
	gm
 =
nuŒ
) ;

365 
¥o˚ss
(
m
);

366 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

370 
	gLOG
.
öfo
("WorkerSender is down");

378 
¥iv©e
 
¥o˚ss
(
ToSíd
 
m
) {

379 
byã
 
	gªque°Byãs
[] = 
√w
 byte[36];

380 
ByãBuf„r
 
	gªque°Buf„r
 = ByãBuf„r.
wøp
(
ªque°Byãs
);

386 
	gªque°Buf„r
.
˛ór
();

387 
	gªque°Buf„r
.
putI¡
(
m
.
°©e
.
‹döÆ
());

388 
	gªque°Buf„r
.
putL⁄g
(
m
.
Àadî
);

389 
	gªque°Buf„r
.
putL⁄g
(
m
.
zxid
);

390 
	gªque°Buf„r
.
putL⁄g
(
m
.
ñe˘i⁄Epoch
);

391 
	gªque°Buf„r
.
putL⁄g
(
m
.
≥îEpoch
);

393 
	gm™agî
.
toSíd
(
m
.
sid
, 
ªque°Buf„r
);

401 
public
 
boﬁón
 
queueEm±y
() {

402  (
	g£ndqueue
.
isEm±y
(Ë|| 
	gªcvqueue
.isEmpty());

406 
W‹kîSídî
 
	gws
;

407 
W‹kîRe˚ivî
 
	gwr
;

414 
Mes£ngî
(
Qu‹umCnxM™agî
 
m™agî
) {

416 
	gthis
.
	gws
 = 
√w
 
W‹kîSídî
(
m™agî
);

418 
Thªad
 
	gt
 = 
√w
 Thªad(
this
.
ws
,

419 "W‹kîSídî[myid=" + 
£lf
.
gëId
() + "]");

420 
	gt
.
£tD´m⁄
(
åue
);

421 
	gt
.
°¨t
();

423 
	gthis
.
	gwr
 = 
√w
 
W‹kîRe˚ivî
(
m™agî
);

425 
	gt
 = 
√w
 
Thªad
(
this
.
wr
,

426 "W‹kîRe˚ivî[myid=" + 
£lf
.
gëId
() + "]");

427 
	gt
.
£tD´m⁄
(
åue
);

428 
	gt
.
°¨t
();

434 
hÆt
(){

435 
	gthis
.
	gws
.
	g°›
 = 
åue
;

436 
	gthis
.
	gwr
.
	g°›
 = 
åue
;

441 
Qu‹umPìr
 
	g£lf
;

442 
Mes£ngî
 
	gmes£ngî
;

443 vﬁ©ûê
	glogiˇl˛ock
;

444 
	g¥›o£dLódî
;

445 
	g¥›o£dZxid
;

446 
	g¥›o£dEpoch
;

452 
public
 
	$gëLogiˇlClock
(){

453  
logiˇl˛ock
;

454 
	}
}

465 
public
 
	$Fa°LódîEÀ˘i⁄
(
Qu‹umPìr
 
£lf
, 
Qu‹umCnxM™agî
 
m™agî
){

466 
this
.
°›
 = 
Ál£
;

467 
this
.
m™agî
 = manager;

468 
	`°¨ãr
(
£lf
, 
m™agî
);

469 
	}
}

481 
¥iv©e
 
	$°¨ãr
(
Qu‹umPìr
 
£lf
, 
Qu‹umCnxM™agî
 
m™agî
) {

482 
this
.
£lf
 = self;

483 
¥›o£dLódî
 = -1;

484 
¥›o£dZxid
 = -1;

486 
£ndqueue
 = 
√w
 
LökedBlockögQueue
<
ToSíd
>();

487 
ªcvqueue
 = 
√w
 
LökedBlockögQueue
<
NŸifiˇti⁄
>();

488 
this
.
mes£ngî
 = 
√w
 
	`Mes£ngî
(
m™agî
);

489 
	}
}

491 
¥iv©e
 
	$ÀaveIn°™˚
(
VŸe
 
v
) {

492 if(
LOG
.
	`isDebugE«bÀd
()){

493 
LOG
.
	`debug
("AboutÅoÜeave FLE instance:Üeader="

494 + 
v
.
	`gëId
() + ", zxid=0x" +

495 
L⁄g
.
	`toHexSåög
(
v
.
	`gëZxid
()Ë+ ", my id=" + 
£lf
.
	`gëId
()

496 + ", my sèã=" + 
£lf
.
	`gëPìrSèã
());

498 
ªcvqueue
.
	`˛ór
();

499 
	}
}

501 
public
 
Qu‹umCnxM™agî
 
	$gëCnxM™agî
(){

502  
m™agî
;

503 
	}
}

505 vﬁ©ûê
boﬁón
 
	g°›
;

506 
public
 
	$shutdown
(){

507 
°›
 = 
åue
;

508 
LOG
.
	`debug
("Shutting down connection manager");

509 
m™agî
.
	`hÆt
();

510 
LOG
.
	`debug
("Shutting down messenger");

511 
mes£ngî
.
	`hÆt
();

512 
LOG
.
	`debug
("FLE is down");

513 
	}
}

519 
¥iv©e
 
	$£ndNŸifiˇti⁄s
() {

520 
Qu‹umSîvî
 
£rvî
 : 
£lf
.
	`gëVŸögVõw
().
	`vÆues
()) {

521 
sid
 = 
£rvî
.
id
;

523 
ToSíd
 
nŸmsg
 = 
√w
 
	`ToSíd
(ToSíd.
mTy≥
.
nŸifiˇti⁄
,

524 
¥›o£dLódî
,

525 
¥›o£dZxid
,

526 
logiˇl˛ock
,

527 
Qu‹umPìr
.
SîvîSèã
.
LOOKING
,

528 
sid
,

529 
¥›o£dEpoch
);

530 if(
LOG
.
	`isDebugE«bÀd
()){

531 
LOG
.
	`debug
("Sídög NŸifiˇti⁄: " + 
¥›o£dLódî
 + " (n.leader), 0x" +

532 
L⁄g
.
	`toHexSåög
(
¥›o£dZxid
Ë+ " (n.zxid), 0x" + L⁄g.toHexSåög(
logiˇl˛ock
) +

533 " (n.round), " + 
sid
 + " (ªcùõ¡), " + 
£lf
.
	`gëId
() +

534 " (myid), 0x" + 
L⁄g
.
	`toHexSåög
(
¥›o£dEpoch
) + " (n.peerEpoch)");

536 
£ndqueue
.
	`of„r
(
nŸmsg
);

538 
	}
}

541 
¥iv©e
 
	$¥ötNŸifiˇti⁄
(
NŸifiˇti⁄
 
n
){

542 
LOG
.
	`öfo
("NŸifiˇti⁄: " + 
n
.
Àadî
 + " (n.leader), 0x"

543 + 
L⁄g
.
	`toHexSåög
(
n
.
zxid
) + " (n.zxid), 0x"

544 + 
L⁄g
.
	`toHexSåög
(
n
.
ñe˘i⁄Epoch
Ë+ " (n.round), " +Ç.
°©e


545 + " (n.°©e), " + 
n
.
sid
 + " (n.sid), 0x"

546 + 
L⁄g
.
	`toHexSåög
(
n
.
≥îEpoch
) + " (n.peerEPoch), "

547 + 
£lf
.
	`gëPìrSèã
() + " (my state)");

548 
	}
}

557 
¥Ÿe˘ed
 
boﬁón
 
	$tŸÆOrdîPªdiˇã
(
√wId
, 
√wZxid
, 
√wEpoch
, 
curId
, 
curZxid
, 
curEpoch
) {

558 
LOG
.
	`debug
("id: " + 
√wId
 + ",Ör›o£d id: " + 
curId
 + ", zxid: 0x" +

559 
L⁄g
.
	`toHexSåög
(
√wZxid
Ë+ ",Ör›o£d zxid: 0x" + L⁄g.toHexSåög(
curZxid
));

560 if(
£lf
.
	`gëQu‹umVîifõr
().
	`gëWeight
(
√wId
) == 0){

561  
Ál£
;

572  ((
√wEpoch
 > 
curEpoch
) ||

573 ((
√wEpoch
 =
curEpoch
) &&

574 ((
√wZxid
 > 
curZxid
Ë|| (“ewZxid =curZxidË&& (
√wId
 > 
curId
)))));

575 
	}
}

585 
¥iv©e
 
boﬁón
 
ãrmPªdiˇã
(

586 
HashM≠
<
L⁄g
, 
VŸe
> 
vŸes
,

587 
VŸe
 
vŸe
) {

589 
	gHashSë
<
	gL⁄g
> 
	g£t
 = 
√w
 
HashSë
<
L⁄g
>();

595 
	gM≠
.
	gE¡ry
<
	gL⁄g
,
	gVŸe
> 
	gíåy
 : 
vŸes
.
íåySë
()) {

596 i‡(
vŸe
.
equÆs
(
íåy
.
gëVÆue
())){

597 
£t
.
add
(
íåy
.
gëKey
());

601  
	g£lf
.
gëQu‹umVîifõr
().
c⁄èösQu‹um
(
£t
);

615 
¥iv©e
 
boﬁón
 
checkLódî
(

616 
HashM≠
<
L⁄g
, 
VŸe
> 
vŸes
,

617 
Àadî
,

618 
ñe˘i⁄Epoch
){

620 
boﬁón
 
	g¥ediˇã
 = 
åue
;

629 if(
	gÀadî
 !
£lf
.
gëId
()){

630 if(
vŸes
.
gë
(
Àadî
Ë=
nuŒ
Ë
¥ediˇã
 = 
Ál£
;

631 if(
	gvŸes
.
gë
(
Àadî
).
gëSèã
(Ë!
SîvîSèã
.
LEADING
Ë
¥ediˇã
 = 
Ál£
;

632 } if(
	glogiˇl˛ock
 !
ñe˘i⁄Epoch
) {

633 
¥ediˇã
 = 
Ál£
;

636  
	g¥ediˇã
;

639 
synchr⁄ized
 
	$upd©ePr›oßl
(
Àadî
, 
zxid
, 
ïoch
){

640 if(
LOG
.
	`isDebugE«bÀd
()){

641 
LOG
.
	`debug
("Upd©ögÖr›oßl: " + 
Àadî
 + " (newleader), 0x"

642 + 
L⁄g
.
	`toHexSåög
(
zxid
Ë+ " (√wzxid), " + 
¥›o£dLódî


643 + " (ﬁdÀadî), 0x" + 
L⁄g
.
	`toHexSåög
(
¥›o£dZxid
) + " (oldzxid)");

645 
¥›o£dLódî
 = 
Àadî
;

646 
¥›o£dZxid
 = 
zxid
;

647 
¥›o£dEpoch
 = 
ïoch
;

648 
	}
}

650 
synchr⁄ized
 
VŸe
 
	$gëVŸe
(){

651  
√w
 
	`VŸe
(
¥›o£dLódî
, 
¥›o£dZxid
, 
¥›o£dEpoch
);

652 
	}
}

661 
¥iv©e
 
SîvîSèã
 
	$À¨nögSèã
(){

662 if(
£lf
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
){

663 
LOG
.
	`debug
("I'máÖ¨ticù™t: " + 
£lf
.
	`gëId
());

664  
SîvîSèã
.
FOLLOWING
;

667 
LOG
.
	`debug
("I'má¿ob£rvî: " + 
£lf
.
	`gëId
());

668  
SîvîSèã
.
OBSERVING
;

670 
	}
}

677 
¥iv©e
 
	$gëInôId
(){

678 if(
£lf
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
)

679  
£lf
.
	`gëId
();

680  
L⁄g
.
MIN_VALUE
;

681 
	}
}

688 
¥iv©e
 
	$gëInôLa°LoggedZxid
(){

689 if(
£lf
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
)

690  
£lf
.
	`gëLa°LoggedZxid
();

691  
L⁄g
.
MIN_VALUE
;

692 
	}
}

699 
¥iv©e
 
	$gëPìrEpoch
(){

700 if(
£lf
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
)

701 
åy
 {

702  
£lf
.
	`gëCuºítEpoch
();

703 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

704 
Ru¡imeEx˚±i⁄
 
ª
 = 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
.
	`gëMesßge
());

705 
ª
.
	`£tSèckTø˚
(
e
.
	`gëSèckTø˚
());

706 
throw
 
ª
;

708  
L⁄g
.
MIN_VALUE
;

709 
	}
}

716 
public
 
VŸe
 
	$lookF‹Lódî
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

717 
åy
 {

718 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
√w
 
	`LódîEÀ˘i⁄Bón
();

719 
MBónRegi°ry
.
	`gëIn°™˚
().(

720 
£lf
.
jmxLódîEÀ˘i⁄Bón
, sñf.
jmxLoˇlPìrBón
);

721 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

722 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

723 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

725 i‡(
£lf
.
°¨t_Êe
 == 0) {

726 
£lf
.
°¨t_Êe
 = 
Sy°em
.
	`cuºítTimeMûlis
();

728 
åy
 {

729 
HashM≠
<
L⁄g
, 
VŸe
> 
ªcv£t
 = 
√w
 HashMap<Long, Vote>();

731 
HashM≠
<
L⁄g
, 
VŸe
> 
outo„À˘i⁄
 = 
√w
 HashMap<Long, Vote>();

733 
nŸTimeout
 = 
föÆizeWaô
;

735 
	`synchr⁄ized
(
this
){

736 
logiˇl˛ock
++;

737 
	`upd©ePr›oßl
(
	`gëInôId
(), 
	`gëInôLa°LoggedZxid
(), 
	`gëPìrEpoch
());

740 
LOG
.
	`öfo
("NewÉÀ˘i⁄. My id = " + 
£lf
.
	`gëId
() +

741 ",Ör›o£d zxid=0x" + 
L⁄g
.
	`toHexSåög
(
¥›o£dZxid
));

742 
	`£ndNŸifiˇti⁄s
();

748 (
£lf
.
	`gëPìrSèã
(Ë=
SîvîSèã
.
LOOKING
) &&

749 (!
°›
)){

754 
NŸifiˇti⁄
 
n
 = 
ªcvqueue
.
	`pﬁl
(
nŸTimeout
,

755 
TimeUnô
.
MILLISECONDS
);

761 if(
n
 =
nuŒ
){

762 if(
m™agî
.
	`haveDñivîed
()){

763 
	`£ndNŸifiˇti⁄s
();

765 
m™agî
.
	`c⁄√˘AŒ
();

771 
tmpTimeOut
 = 
nŸTimeout
*2;

772 
nŸTimeout
 = (
tmpTimeOut
 < 
maxNŸifiˇti⁄I¡îvÆ
?

773 
tmpTimeOut
 : 
maxNŸifiˇti⁄I¡îvÆ
);

774 
LOG
.
	`öfo
("NŸifiˇti⁄Åimêout: " + 
nŸTimeout
);

776 if(
£lf
.
	`gëVŸögVõw
().
	`c⁄èösKey
(
n
.
sid
)) {

781 
n
.
°©e
) {

782 
LOOKING
:

784 i‡(
n
.
ñe˘i⁄Epoch
 > 
logiˇl˛ock
) {

785 
logiˇl˛ock
 = 
n
.
ñe˘i⁄Epoch
;

786 
ªcv£t
.
	`˛ór
();

787 if(
	`tŸÆOrdîPªdiˇã
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
,

788 
	`gëInôId
(), 
	`gëInôLa°LoggedZxid
(), 
	`gëPìrEpoch
())) {

789 
	`upd©ePr›oßl
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
);

791 
	`upd©ePr›oßl
(
	`gëInôId
(),

792 
	`gëInôLa°LoggedZxid
(),

793 
	`gëPìrEpoch
());

795 
	`£ndNŸifiˇti⁄s
();

796 } i‡(
n
.
ñe˘i⁄Epoch
 < 
logiˇl˛ock
) {

797 if(
LOG
.
	`isDebugE«bÀd
()){

798 
LOG
.
	`debug
("NotificationÉlectionÉpoch is smallerÅhanÜogicalclock.Ç.electionEpoch = 0x"

799 + 
L⁄g
.
	`toHexSåög
(
n
.
ñe˘i⁄Epoch
)

800 + ",Üogiˇl˛ock=0x" + 
L⁄g
.
	`toHexSåög
(
logiˇl˛ock
));

803 } i‡(
	`tŸÆOrdîPªdiˇã
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
,

804 
¥›o£dLódî
, 
¥›o£dZxid
, 
¥›o£dEpoch
)) {

805 
	`upd©ePr›oßl
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
);

806 
	`£ndNŸifiˇti⁄s
();

809 if(
LOG
.
	`isDebugE«bÀd
()){

810 
LOG
.
	`debug
("Addög vŸe: from=" + 
n
.
sid
 +

811 ",Ör›o£dÜódî=" + 
n
.
Àadî
 +

812 ",Ör›o£d zxid=0x" + 
L⁄g
.
	`toHexSåög
(
n
.
zxid
) +

813 ",Ör›o£dÉÀ˘i⁄Époch=0x" + 
L⁄g
.
	`toHexSåög
(
n
.
ñe˘i⁄Epoch
));

816 
ªcv£t
.
	`put
(
n
.
sid
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
,Ç.
ñe˘i⁄Epoch
,Ç.
≥îEpoch
));

818 i‡(
	`ãrmPªdiˇã
(
ªcv£t
,

819 
√w
 
	`VŸe
(
¥›o£dLódî
, 
¥›o£dZxid
,

820 
logiˇl˛ock
, 
¥›o£dEpoch
))) {

823 (
n
 = 
ªcvqueue
.
	`pﬁl
(
föÆizeWaô
,

824 
TimeUnô
.
MILLISECONDS
)Ë!
nuŒ
){

825 if(
	`tŸÆOrdîPªdiˇã
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
,

826 
¥›o£dLódî
, 
¥›o£dZxid
, 
¥›o£dEpoch
)){

827 
ªcvqueue
.
	`put
(
n
);

836 i‡(
n
 =
nuŒ
) {

837 
£lf
.
	`£tPìrSèã
((
¥›o£dLódî
 =£lf.
	`gëId
()) ?

838 
SîvîSèã
.
LEADING
: 
	`À¨nögSèã
());

840 
VŸe
 
ídVŸe
 = 
√w
 
	`VŸe
(
¥›o£dLódî
,

841 
¥›o£dZxid
, 
¥›o£dEpoch
);

842 
	`ÀaveIn°™˚
(
ídVŸe
);

843  
ídVŸe
;

847 
OBSERVING
:

848 
LOG
.
	`debug
("NŸifiˇti⁄ from ob£rvî: " + 
n
.
sid
);

850 
FOLLOWING
:

851 
LEADING
:

856 if(
n
.
ñe˘i⁄Epoch
 =
logiˇl˛ock
){

857 
ªcv£t
.
	`put
(
n
.
sid
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
,Ç.
ñe˘i⁄Epoch
,Ç.
≥îEpoch
));

858 if(
	`ãrmPªdiˇã
(
ªcv£t
, 
√w
 
	`VŸe
(
n
.
Àadî
,

859 
n
.
zxid
,Ç.
ñe˘i⁄Epoch
,Ç.
≥îEpoch
,Ç.
°©e
))

860 && 
	`checkLódî
(
outo„À˘i⁄
, 
n
.
Àadî
,Ç.
ñe˘i⁄Epoch
)) {

861 
£lf
.
	`£tPìrSèã
((
n
.
Àadî
 =£lf.
	`gëId
()) ?

862 
SîvîSèã
.
LEADING
: 
	`À¨nögSèã
());

864 
VŸe
 
ídVŸe
 = 
√w
 
	`VŸe
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
);

865 
	`ÀaveIn°™˚
(
ídVŸe
);

866  
ídVŸe
;

874 
outo„À˘i⁄
.
	`put
(
n
.
sid
, 
√w
 
	`VŸe
“.
Àadî
,Ç.
zxid
,

875 
n
.
ñe˘i⁄Epoch
,Ç.
≥îEpoch
,Ç.
°©e
));

876 i‡(
	`ãrmPªdiˇã
(
outo„À˘i⁄
, 
√w
 
	`VŸe
(
n
.
Àadî
,

877 
n
.
zxid
,Ç.
ñe˘i⁄Epoch
,Ç.
≥îEpoch
,Ç.
°©e
))

878 && 
	`checkLódî
(
outo„À˘i⁄
, 
n
.
Àadî
,Ç.
ñe˘i⁄Epoch
)) {

879 
	`synchr⁄ized
(
this
){

880 
logiˇl˛ock
 = 
n
.
ñe˘i⁄Epoch
;

881 
£lf
.
	`£tPìrSèã
((
n
.
Àadî
 =£lf.
	`gëId
()) ?

882 
SîvîSèã
.
LEADING
: 
	`À¨nögSèã
());

884 
VŸe
 
ídVŸe
 = 
√w
 
	`VŸe
(
n
.
Àadî
,Ç.
zxid
,Ç.
≥îEpoch
);

885 
	`ÀaveIn°™˚
(
ídVŸe
);

886  
ídVŸe
;

890 
LOG
.
	`w¨n
("NŸifiˇti⁄ sèã uƒecogöized: " + 
n
.
°©e


891 + " (n.°©e), " + 
n
.
sid
 + " (n.sid)");

895 
LOG
.
	`w¨n
("Ign‹ögÇŸifiˇti⁄ fromÇ⁄-˛u°î membî " + 
n
.
sid
);

898  
nuŒ
;

899 } 
föÆly
 {

900 
åy
 {

901 if(
£lf
.
jmxLódîEÀ˘i⁄Bón
 !
nuŒ
){

902 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(

903 
£lf
.
jmxLódîEÀ˘i⁄Bón
);

905 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

906 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

908 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

910 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Follower.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

34 
public
 cœs†
	cFﬁlowî
 
exãnds
 
	mLó∫î
{

36 
¥iv©e
 
	mœ°Queued
;

37 
I√tSockëAddªss
 
	maddr
;

39 
föÆ
 
FﬁlowîZooKì≥rSîvî
 
	mfzk
;

41 
	$Fﬁlowî
(
Qu‹umPìr
 
£lf
,
FﬁlowîZooKì≥rSîvî
 
zk
) {

42 
this
.
£lf
 = self;

43 
this
.
zk
=zk;

44 
this
.
fzk
 = 
zk
;

47 @
Ovîride


48 
public
 
Såög
 
	$toSåög
() {

49 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

50 
sb
.
	`≠≥nd
("Fﬁlowî ").≠≥nd(
sock
);

51 
sb
.
	`≠≥nd
("Üa°QueuedZxid:").≠≥nd(
œ°Queued
);

52 
sb
.
	`≠≥nd
("ÖendingRevalidationCount:")

53 .
	`≠≥nd
(
≥ndögRevÆid©i⁄s
.
	`size
());

54  
sb
.
	`toSåög
();

55 
	}
}

62 
	$fﬁlowLódî
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

63 
£lf
.
íd_Êe
 = 
Sy°em
.
	`cuºítTimeMûlis
();

64 
LOG
.
	`öfo
("FOLLOWING - LEADER ELECTION TOOK - " +

65 (
£lf
.
íd_Êe
 - sñf.
°¨t_Êe
));

66 
£lf
.
°¨t_Êe
 = 0;

67 
£lf
.
íd_Êe
 = 0;

68 
fzk
.
	`ªgi°îJMX
(
√w
 
	`FﬁlowîBón
(
this
, 
zk
), 
£lf
.
jmxLoˇlPìrBón
);

69 
åy
 {

70 
addr
 = 
	`födLódî
();

71 
åy
 {

72 
	`c⁄√˘ToLódî
(
addr
);

73 
√wEpochZxid
 = 
	`ªgi°îWôhLódî
(
Lódî
.
FOLLOWERINFO
);

77 
√wEpoch
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
√wEpochZxid
);

78 i‡(
√wEpoch
 < 
£lf
.
	`gëAc˚±edEpoch
()) {

79 
LOG
.
	`îr‹
("Pr›o£dÜódîÉpoch " + 
ZxidUtûs
.
	`zxidToSåög
(
√wEpochZxid
)

80 + " i†Às†th™ ou∏ac˚±edÉpoch " + 
ZxidUtûs
.
	`zxidToSåög
(
£lf
.
	`gëAc˚±edEpoch
()));

81 
throw
 
√w
 
	`IOEx˚±i⁄
("Error: Epoch ofÜeader isÜower");

83 
	`syncWôhLódî
(
√wEpochZxid
);

84 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

85 
£lf
.
	`isRu¬ög
()) {

86 
	`ªadPackë
(
qp
);

87 
	`¥o˚ssPackë
(
qp
);

89 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

90 
LOG
.
	`w¨n
("Ex˚±i⁄ whí fﬁlowögÅhêÀadî", 
e
);

91 
åy
 {

92 
sock
.
	`˛o£
();

93 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e1
) {

94 
e1
.
	`¥ötSèckTø˚
();

98 
≥ndögRevÆid©i⁄s
.
	`˛ór
();

100 } 
föÆly
 {

101 
zk
.
	`uƒegi°îJMX
((
Ló∫î
)
this
);

103 
	}
}

110 
¥Ÿe˘ed
 
	$¥o˚ssPackë
(
Qu‹umPackë
 
qp
Ë
throws
 
IOEx˚±i⁄
{

111 
qp
.
	`gëTy≥
()) {

112 
Lódî
.
PING
:

113 
	`pög
(
qp
);

115 
Lódî
.
PROPOSAL
:

116 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

117 
Rec‹d
 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
qp
.
	`gëD©a
(), 
hdr
);

118 i‡(
hdr
.
	`gëZxid
(Ë!
œ°Queued
 + 1) {

119 
LOG
.
	`w¨n
("Got zxid 0x"

120 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëZxid
())

122 + 
L⁄g
.
	`toHexSåög
(
œ°Queued
 + 1));

124 
œ°Queued
 = 
hdr
.
	`gëZxid
();

125 
fzk
.
	`logReque°
(
hdr
, 
txn
);

127 
Lódî
.
COMMIT
:

128 
fzk
.
	`commô
(
qp
.
	`gëZxid
());

130 
Lódî
.
UPTODATE
:

131 
LOG
.
	`îr‹
("Receivedán UPTODATE messageáfter Follower started");

133 
Lódî
.
REVALIDATE
:

134 
	`ªvÆid©e
(
qp
);

136 
Lódî
.
SYNC
:

137 
fzk
.
	`sync
();

140 
	}
}

146 
public
 
	$gëZxid
() {

147 
åy
 {

148 
	`synchr⁄ized
 (
fzk
) {

149  
fzk
.
	`gëZxid
();

151 } 
	`ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
e
) {

152 
LOG
.
	`w¨n
("îr‹ gëtög zxid", 
e
);

155 
	}
}

161 
¥Ÿe˘ed
 
	$gëLa°Queued
() {

162  
œ°Queued
;

163 
	}
}

165 @
Ovîride


166 
public
 
	$shutdown
() {

167 
LOG
.
	`öfo
("shutdow¿ˇŒed", 
√w
 
	`Ex˚±i⁄
("shutdown Follower"));

168 
su≥r
.
	`shutdown
();

169 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîBón
;

27 
public
 cœs†
	cFﬁlowîBón
 
exãnds
 
ZooKì≥rSîvîBón
 
im∂emíts
 
	mFﬁlowîMXBón
 {

28 
¥iv©e
 
föÆ
 
Fﬁlowî
 
	mfﬁlowî
;

30 
public
 
	$FﬁlowîBón
(
Fﬁlowî
 
fﬁlowî
, 
ZooKì≥rSîvî
 
zks
) {

31 
	`su≥r
(
zks
);

32 
this
.
fﬁlowî
 = follower;

35 
public
 
Såög
 
	$gëName
() {

37 
	}
}

39 
public
 
Såög
 
	$gëQu‹umAddªss
() {

40  
fﬁlowî
.
sock
.
	`toSåög
();

41 
	}
}

43 
public
 
Såög
 
	$gëLa°QueuedZxid
() {

44  "0x" + 
L⁄g
.
	`toHexSåög
(
fﬁlowî
.
	`gëLa°Queued
());

45 
	}
}

47 
public
 
	$gëPídögRevÆid©i⁄Cou¡
() {

48  
fﬁlowî
.
	`gëPídögRevÆid©i⁄sCou¡
();

49 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîMXBón
;

26 
public
 
öãrÁ˚
 
FﬁlowîMXBón
 
exãnds
 
	gZooKì≥rSîvîMXBón
 {

30 
public
 
Såög
 
gëQu‹umAddªss
();

35 
public
 
Såög
 
gëLa°QueuedZxid
();

40 
public
 
gëPídögRevÆid©i⁄Cou¡
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

35 
public
 cœs†
	cFﬁlowîReque°Pro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts


36 
	mReque°Pro˚ss‹
 {

37 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FﬁlowîReque°Pro˚ss‹
.
˛ass
);

39 
FﬁlowîZooKì≥rSîvî
 
	mzks
;

41 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

43 
	mLökedBlockögQueue
<
	mReque°
> 
	mqueuedReque°s
 = 
√w
 
LökedBlockögQueue
<
Reque°
>();

45 
boﬁón
 
	mföished
 = 
Ál£
;

47 
public
 
	$FﬁlowîReque°Pro˚ss‹
(
FﬁlowîZooKì≥rSîvî
 
zks
,

48 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

49 
	`su≥r
("FﬁlowîReque°Pro˚ss‹:" + 
zks
.
	`gëSîvîId
());

50 
this
.
zks
 = zks;

51 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

54 @
Ovîride


55 
public
 
	$run
() {

56 
åy
 {

57 !
föished
) {

58 
Reque°
 
ªque°
 = 
queuedReque°s
.
	`èke
();

59 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

60 
ZooTø˚
.
	`logReque°
(
LOG
, ZooTø˚.
CLIENT_REQUEST_TRACE_MASK
,

61 'F', 
ªque°
, "");

63 i‡(
ªque°
 =
Reque°
.
ªque°OfDóth
) {

69 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

76 
ªque°
.
ty≥
) {

77 
OpCode
.
sync
:

78 
zks
.
≥ndögSyncs
.
	`add
(
ªque°
);

79 
zks
.
	`gëFﬁlowî
().
	`ªque°
(
ªque°
);

81 
OpCode
.
¸óã
:

82 
OpCode
.
dñëe
:

83 
OpCode
.
£tD©a
:

84 
OpCode
.
£tACL
:

85 
OpCode
.
¸óãSessi⁄
:

86 
OpCode
.
˛o£Sessi⁄
:

87 
OpCode
.
mu…i
:

88 
zks
.
	`gëFﬁlowî
().
	`ªque°
(
ªque°
);

92 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

93 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄ causögÉxô", 
e
);

95 
LOG
.
	`öfo
("FollowerRequestProcessorÉxitedÜoop!");

96 
	}
}

98 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

99 i‡(!
föished
) {

100 
queuedReque°s
.
	`add
(
ªque°
);

102 
	}
}

104 
public
 
	$shutdown
() {

105 
LOG
.
	`öfo
("Shutting down");

106 
föished
 = 
åue
;

107 
queuedReque°s
.
	`˛ór
();

108 
queuedReque°s
.
	`add
(
Reque°
.
ªque°OfDóth
);

109 
√xtPro˚ss‹
.
	`shutdown
();

110 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítLökedQueue
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gFöÆReque°Pro˚ss‹
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

43 
public
 cœs†
	cFﬁlowîZooKì≥rSîvî
 
exãnds
 
	mLó∫îZooKì≥rSîvî
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

45 
LoggîFa˘‹y
.
gëLoggî
(
FﬁlowîZooKì≥rSîvî
.
˛ass
);

47 
CommôPro˚ss‹
 
	mcommôPro˚ss‹
;

49 
SyncReque°Pro˚ss‹
 
	msyncPro˚ss‹
;

54 
	mC⁄cuºítLökedQueue
<
	mReque°
> 
	m≥ndögSyncs
;

61 
	$FﬁlowîZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
,
Qu‹umPìr
 
£lf
,

62 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
Ë
throws
 
IOEx˚±i⁄
 {

63 
	`su≥r
(
logFa˘‹y
, 
£lf
.
tickTime
, sñf.
möSessi⁄Timeout
,

64 
£lf
.
maxSessi⁄Timeout
, 
åìBuûdî
, 
zkDb
, self);

65 
this
.
≥ndögSyncs
 = 
√w
 
C⁄cuºítLökedQueue
<
Reque°
>();

68 
public
 
Fﬁlowî
 
	$gëFﬁlowî
(){

69  
£lf
.
fﬁlowî
;

70 
	}
}

72 @
Ovîride


73 
¥Ÿe˘ed
 
	$£tupReque°Pro˚ss‹s
() {

74 
Reque°Pro˚ss‹
 
föÆPro˚ss‹
 = 
√w
 
	`FöÆReque°Pro˚ss‹
(
this
);

75 
commôPro˚ss‹
 = 
√w
 
	`CommôPro˚ss‹
(
föÆPro˚ss‹
,

76 
L⁄g
.
	`toSåög
(
	`gëSîvîId
()), 
åue
);

77 
commôPro˚ss‹
.
	`°¨t
();

78 
fú°Pro˚ss‹
 = 
√w
 
	`FﬁlowîReque°Pro˚ss‹
(
this
, 
commôPro˚ss‹
);

79 ((
FﬁlowîReque°Pro˚ss‹
Ë
fú°Pro˚ss‹
).
	`°¨t
();

80 
syncPro˚ss‹
 = 
√w
 
	`SyncReque°Pro˚ss‹
(
this
,

81 
√w
 
	`SídAckReque°Pro˚ss‹
((
Ló∫î
)
	`gëFﬁlowî
()));

82 
syncPro˚ss‹
.
	`°¨t
();

83 
	}
}

85 
	gLökedBlockögQueue
<
	gReque°
> 
	g≥ndögTxns
 = 
√w
 
LökedBlockögQueue
<
Reque°
>();

87 
public
 
	$logReque°
(
TxnHódî
 
hdr
, 
Rec‹d
 
txn
) {

88 
Reque°
 
ªque°
 = 
√w
 
	`Reque°
(
nuŒ
, 
hdr
.
	`gëClõ¡Id
(), hdr.
	`gëCxid
(),

89 
hdr
.
	`gëTy≥
(), 
nuŒ
,Çull);

90 
ªque°
.
hdr
 = hdr;

91 
ªque°
.
txn
 =Åxn;

92 
ªque°
.
zxid
 = 
hdr
.
	`gëZxid
();

93 i‡((
ªque°
.
zxid
 & 0xffffffffL) != 0) {

94 
≥ndögTxns
.
	`add
(
ªque°
);

96 
syncPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

97 
	}
}

105 
public
 
	$commô
(
zxid
) {

106 i‡(
≥ndögTxns
.
	`size
() == 0) {

107 
LOG
.
	`w¨n
("Commôtög " + 
L⁄g
.
	`toHexSåög
(
zxid
)

111 
fú°EÀmítZxid
 = 
≥ndögTxns
.
	`ñemít
().
zxid
;

112 i‡(
fú°EÀmítZxid
 !
zxid
) {

113 
LOG
.
	`îr‹
("Commôtög zxid 0x" + 
L⁄g
.
	`toHexSåög
(
zxid
)

115 + 
L⁄g
.
	`toHexSåög
(
fú°EÀmítZxid
));

116 
Sy°em
.
	`exô
(12);

118 
Reque°
 
ªque°
 = 
≥ndögTxns
.
	`ªmove
();

119 
commôPro˚ss‹
.
	`commô
(
ªque°
);

120 
	}
}

122 
synchr⁄ized
 
public
 
	$sync
(){

123 if(
≥ndögSyncs
.
	`size
() ==0){

124 
LOG
.
	`w¨n
("NotÉxpectingá sync.");

128 
Reque°
 
r
 = 
≥ndögSyncs
.
	`ªmove
();

129 
commôPro˚ss‹
.
	`commô
(
r
);

130 
	}
}

132 @
Ovîride


133 
public
 
	$gëGlobÆOut°™dögLimô
() {

134  
su≥r
.
	`gëGlobÆOut°™dögLimô
(Ë/ (
£lf
.
	`gëQu‹umSize
() - 1);

135 
	}
}

137 @
Ovîride


138 
public
 
	$shutdown
() {

139 
LOG
.
	`öfo
("Shutting down");

140 
åy
 {

141 
su≥r
.
	`shutdown
();

142 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

143 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄ durög shutdown", 
e
);

145 
åy
 {

146 i‡(
syncPro˚ss‹
 !
nuŒ
) {

147 
syncPro˚ss‹
.
	`shutdown
();

149 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

150 
LOG
.
	`w¨n
("Ignoring unexpectedÉxception in syncprocessor shutdown",

151 
e
);

153 
	}
}

155 @
Ovîride


156 
public
 
Såög
 
	$gëSèã
() {

158 
	}
}

160 @
Ovîride


161 
public
 
Ló∫î
 
	$gëLó∫î
() {

162  
	`gëFﬁlowî
();

163 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Leader.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gBödEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicL⁄g
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítLökedQueue
;

38 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítM≠
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gFöÆReque°Pro˚ss‹
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umVîifõr
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

47 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

48 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

53 
public
 cœs†
	cLódî
 {

54 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Lódî
.
˛ass
);

56 
föÆ
 
¥iv©e
 
boﬁón
 
	mnodñay
 = 
Sy°em
.
gëPr›îty
("Àadî.nodñay", "åue").
equÆs
("true");

58 
	mLOG
.
öfo
("TCP NoDñay sëÅo: " + 
nodñay
);

61 
public
 cœs†
	cPr›oßl
 {

62 
public
 
Qu‹umPackë
 
	g∑ckë
;

64 
public
 
	gHashSë
<
	gL⁄g
> 
	gackSë
 = 
√w
 
HashSë
<
L⁄g
>();

66 
public
 
Reque°
 
	gªque°
;

68 @
Ovîride


69 
public
 
Såög
 
toSåög
() {

70  
	g∑ckë
.
gëTy≥
(Ë+ ", " +Öackë.
gëZxid
(Ë+ ", " + 
	gªque°
;

74 
föÆ
 
LódîZooKì≥rSîvî
 
	gzk
;

76 
föÆ
 
Qu‹umPìr
 
	g£lf
;

79 
Ló∫îCnxAc˚±‹
 
	g˙xAc˚±‹
;

82 
¥iv©e
 
föÆ
 
	gHashSë
<
	gLó∫îH™dÀr
> 
	gÀ¨√rs
 =

83 
√w
 
HashSë
<
Ló∫îH™dÀr
>();

88 
public
 
	gLi°
<
	gLó∫îH™dÀr
> 
	$gëLó∫îs
() {

89 
	`synchr⁄ized
 (
À¨√rs
) {

90  
√w
 
AºayLi°
<
Ló∫îH™dÀr
>(
À¨√rs
);

92 
	}
}

95 
¥iv©e
 
föÆ
 
	gHashSë
<
	gLó∫îH™dÀr
> 
	gf‹w¨dögFﬁlowîs
 =

96 
√w
 
HashSë
<
Ló∫îH™dÀr
>();

101 
public
 
	gLi°
<
	gLó∫îH™dÀr
> 
	$gëF‹w¨dögFﬁlowîs
() {

102 
	`synchr⁄ized
 (
f‹w¨dögFﬁlowîs
) {

103  
√w
 
AºayLi°
<
Ló∫îH™dÀr
>(
f‹w¨dögFﬁlowîs
);

105 
	}
}

107 
¥iv©e
 
	$addF‹w¨dögFﬁlowî
(
Ló∫îH™dÀr
 
lh
) {

108 
	`synchr⁄ized
 (
f‹w¨dögFﬁlowîs
) {

109 
f‹w¨dögFﬁlowîs
.
	`add
(
lh
);

111 
	}
}

113 
¥iv©e
 
föÆ
 
	gHashSë
<
	gLó∫îH™dÀr
> 
	gob£rvögLó∫îs
 =

114 
√w
 
HashSë
<
Ló∫îH™dÀr
>();

119 
public
 
	gLi°
<
	gLó∫îH™dÀr
> 
	$gëOb£rvögLó∫îs
() {

120 
	`synchr⁄ized
 (
ob£rvögLó∫îs
) {

121  
√w
 
AºayLi°
<
Ló∫îH™dÀr
>(
ob£rvögLó∫îs
);

123 
	}
}

125 
¥iv©e
 
	$addOb£rvîLó∫îH™dÀr
(
Ló∫îH™dÀr
 
lh
) {

126 
	`synchr⁄ized
 (
ob£rvögLó∫îs
) {

127 
ob£rvögLó∫îs
.
	`add
(
lh
);

129 
	}
}

132 
¥iv©e
 
föÆ
 
	gHashM≠
<
	gL⁄g
,
	gLi°
<
	gLó∫îSyncReque°
>> 
	g≥ndögSyncs
 =

133 
√w
 
HashM≠
<
L⁄g
,
	gLi°
<
	gLó∫îSyncReque°
>>();

135 
synchr⁄ized
 
public
 
	$gëNumPídögSyncs
() {

136  
≥ndögSyncs
.
	`size
();

137 
	}
}

140 
föÆ
 
AtomicL⁄g
 
	gfﬁlowîCou¡î
 = 
√w
 AtomicLong(-1);

148 
	$addLó∫îH™dÀr
(
Ló∫îH™dÀr
 
À¨√r
) {

149 
	`synchr⁄ized
 (
À¨√rs
) {

150 
À¨√rs
.
	`add
(
À¨√r
);

152 
	}
}

159 
	$ªmoveLó∫îH™dÀr
(
Ló∫îH™dÀr
 
≥î
) {

160 
	`synchr⁄ized
 (
f‹w¨dögFﬁlowîs
) {

161 
f‹w¨dögFﬁlowîs
.
	`ªmove
(
≥î
);

163 
	`synchr⁄ized
 (
À¨√rs
) {

164 
À¨√rs
.
	`ªmove
(
≥î
);

166 
	`synchr⁄ized
 (
ob£rvögLó∫îs
) {

167 
ob£rvögLó∫îs
.
	`ªmove
(
≥î
);

169 
	}
}

171 
boﬁón
 
	$isLó∫îSyn˚d
(
Ló∫îH™dÀr
 
≥î
){

172 
	`synchr⁄ized
 (
f‹w¨dögFﬁlowîs
) {

173  
f‹w¨dögFﬁlowîs
.
	`c⁄èös
(
≥î
);

175 
	}
}

177 
SîvîSockë
 
	gss
;

179 
	$Lódî
(
Qu‹umPìr
 
£lf
,
LódîZooKì≥rSîvî
 
zk
Ë
throws
 
IOEx˚±i⁄
 {

180 
this
.
£lf
 = self;

181 
åy
 {

182 
ss
 = 
√w
 
	`SîvîSockë
();

183 
ss
.
	`£tReu£Addªss
(
åue
);

184 
ss
.
	`böd
(
√w
 
	`I√tSockëAddªss
(
£lf
.
	`gëQu‹umAddªss
().
	`gëP‹t
()));

185 } 
	`ˇtch
 (
BödEx˚±i⁄
 
e
) {

186 
LOG
.
	`îr‹
("Couldn't bindÅoÖort "

187 + 
£lf
.
	`gëQu‹umAddªss
().
	`gëP‹t
(), 
e
);

188 
throw
 
e
;

190 
this
.
zk
=zk;

191 
	}
}

196 
föÆ
 
	gDIFF
 = 13;

201 
föÆ
 
	gTRUNC
 = 14;

206 
föÆ
 
	gSNAP
 = 15;

211 
föÆ
 
	gOBSERVERINFO
 = 16;

217 
föÆ
 
	gNEWLEADER
 = 10;

223 
föÆ
 
	gFOLLOWERINFO
 = 11;

229 
föÆ
 
	gUPTODATE
 = 12;

235 
public
 
föÆ
 
	gLEADERINFO
 = 17;

240 
public
 
föÆ
 
	gACKEPOCH
 = 18;

246 
föÆ
 
	gREQUEST
 = 1;

251 
public
 
föÆ
 
	gPROPOSAL
 = 2;

256 
föÆ
 
	gACK
 = 3;

262 
föÆ
 
	gCOMMIT
 = 4;

268 
föÆ
 
	gPING
 = 5;

273 
föÆ
 
	gREVALIDATE
 = 6;

279 
föÆ
 
	gSYNC
 = 7;

284 
föÆ
 
	gINFORM
 = 8;

286 
	gC⁄cuºítM≠
<
	gL⁄g
, 
	gPr›oßl
> 
	gout°™dögPr›oßls
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, Proposal>();

288 
	gC⁄cuºítLökedQueue
<
	gPr›oßl
> 
	gtoBeAµlõd
 = 
√w
 
C⁄cuºítLökedQueue
<
Pr›oßl
>();

290 
Pr›oßl
 
	g√wLódîPr›oßl
 = 
√w
 Proposal();

292 ˛as†
	cLó∫îCnxAc˚±‹
 
exãnds
 
	gThªad
{

293 
¥iv©e
 vﬁ©ûê
boﬁón
 
	g°›
 = 
Ál£
;

295 @
Ovîride


296 
public
 
run
() {

297 
	gåy
 {

298 !
	g°›
) {

299 
	gåy
{

300 
Sockë
 
	gs
 = 
ss
.
ac˚±
();

303 
	gs
.
£tSoTimeout
(
£lf
.
tickTime
 * sñf.
öôLimô
);

304 
	gs
.
£tT˝NoDñay
(
nodñay
);

305 
Ló∫îH™dÀr
 
	gfh
 = 
√w
 Ló∫îH™dÀr(
s
, 
Lódî
.
this
);

306 
	gfh
.
°¨t
();

307 } 
ˇtch
 (
SockëEx˚±i⁄
 
e
) {

308 i‡(
	g°›
) {

309 
	gLOG
.
öfo
("exception while shutting downácceptor: "

310 + 
e
);

315 
	g°›
 = 
åue
;

317 
throw
 
	ge
;

321 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

322 
	gLOG
.
w¨n
("Ex˚±i⁄ whûêac˚±ög fﬁlowî", 
e
);

326 
public
 
hÆt
() {

327 
	g°›
 = 
åue
;

331 
SèãSumm¨y
 
	gÀadîSèãSumm¨y
;

333 
	gïoch
 = -1;

334 
boﬁón
 
	gwaôögF‹NewEpoch
 = 
åue
;

335 vﬁ©ûê
boﬁón
 
	gªadyToSèπ
 = 
Ál£
;

343 
	$Àad
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

344 
£lf
.
íd_Êe
 = 
Sy°em
.
	`cuºítTimeMûlis
();

345 
LOG
.
	`öfo
("LEADING - LEADER ELECTION TOOK - " +

346 (
£lf
.
íd_Êe
 - sñf.
°¨t_Êe
));

347 
£lf
.
°¨t_Êe
 = 0;

348 
£lf
.
íd_Êe
 = 0;

350 
zk
.
	`ªgi°îJMX
(
√w
 
	`LódîBón
(
this
, zk), 
£lf
.
jmxLoˇlPìrBón
);

352 
åy
 {

353 
£lf
.
tick
 = 0;

354 
zk
.
	`lﬂdD©a
();

356 
ÀadîSèãSumm¨y
 = 
√w
 
	`SèãSumm¨y
(
£lf
.
	`gëCuºítEpoch
(), 
zk
.
	`gëLa°Pro˚s£dZxid
());

360 
˙xAc˚±‹
 = 
√w
 
	`Ló∫îCnxAc˚±‹
();

361 
˙xAc˚±‹
.
	`°¨t
();

363 
ªadyToSèπ
 = 
åue
;

364 
ïoch
 = 
	`gëEpochToPr›o£
(
£lf
.
	`gëId
(), sñf.
	`gëAc˚±edEpoch
());

366 
zk
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(
ïoch
, 0));

368 
	`synchr⁄ized
(
this
){

369 
œ°Pr›o£d
 = 
zk
.
	`gëZxid
();

372 
√wLódîPr›oßl
.
∑ckë
 = 
√w
 
	`Qu‹umPackë
(
NEWLEADER
, 
zk
.
	`gëZxid
(),

373 
nuŒ
,Çull);

376 i‡((
√wLódîPr›oßl
.
∑ckë
.
	`gëZxid
() & 0xffffffffL) != 0) {

377 
LOG
.
	`öfo
("NEWLEADERÖroposal has Zxid of "

378 + 
L⁄g
.
	`toHexSåög
(
√wLódîPr›oßl
.
∑ckë
.
	`gëZxid
()));

380 
out°™dögPr›oßls
.
	`put
(
√wLódîPr›oßl
.
∑ckë
.
	`gëZxid
(),ÇewLeaderProposal);

381 
√wLódîPr›oßl
.
ackSë
.
	`add
(
£lf
.
	`gëId
());

383 
	`waôF‹EpochAck
(
£lf
.
	`gëId
(), 
ÀadîSèãSumm¨y
);

384 
£lf
.
	`£tCuºítEpoch
(
ïoch
);

389 !
£lf
.
	`gëQu‹umVîifõr
().
	`c⁄èösQu‹um
(
√wLódîPr›oßl
.
ackSë
)){

391 i‡(
£lf
.
tick
 > sñf.
öôLimô
) {

394 
SåögBuûdî
 
ackToSåög
 = 
√w
 
	`SåögBuûdî
();

395 
L⁄g
 
id
 : 
√wLódîPr›oßl
.
ackSë
)

396 
ackToSåög
.
	`≠≥nd
(
id
 + ": ");

398 
	`shutdown
("Waôög f‹á qu‹um o‡fﬁlowîs, o∆y syn˚d wôh: " + 
ackToSåög
);

399 
HashSë
<
L⁄g
> 
fﬁlowîSë
 = 
√w
 HashSet<Long>();

401 
Ló∫îH™dÀr
 
f
 : 
	`gëLó∫îs
()) {

402 
fﬁlowîSë
.
	`add
(
f
.
	`gëSid
());

405 i‡(
£lf
.
	`gëQu‹umVîifõr
().
	`c⁄èösQu‹um
(
fﬁlowîSë
)) {

407 
LOG
.
	`w¨n
("Enough followersÖresent. "+

412 
Thªad
.
	`¶ìp
(
£lf
.
tickTime
);

413 
£lf
.
tick
++;

428 
Såög
 
öôülZxid
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.testingonly.initialZxid");

429 i‡(
öôülZxid
 !
nuŒ
) {

430 
zxid
 = 
L⁄g
.
	`∑r£L⁄g
(
öôülZxid
);

431 
zk
.
	`£tZxid
((zk.
	`gëZxid
(Ë& 0xffffffff00000000LË| 
zxid
);

434 i‡(!
Sy°em
.
	`gëPr›îty
("zookì≥r.ÀadîSîves", "yes").
	`equÆs
("no")) {

435 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
zk
);

446 
boﬁón
 
tickSkù
 = 
åue
;

448 
åue
) {

449 
Thªad
.
	`¶ìp
(
£lf
.
tickTime
 / 2);

450 i‡(!
tickSkù
) {

451 
£lf
.
tick
++;

453 
HashSë
<
L⁄g
> 
syn˚dSë
 = 
√w
 HashSet<Long>();

456 
syn˚dSë
.
	`add
(
£lf
.
	`gëId
());

458 
Ló∫îH™dÀr
 
f
 : 
	`gëLó∫îs
()) {

461 i‡(
f
.
	`syn˚d
(Ë&& f.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
) {

462 
syn˚dSë
.
	`add
(
f
.
	`gëSid
());

464 
f
.
	`pög
();

467 i‡(!
tickSkù
 && !
£lf
.
	`gëQu‹umVîifõr
().
	`c⁄èösQu‹um
(
syn˚dSë
)) {

471 
	`shutdown
("O∆y " + 
syn˚dSë
.
	`size
() + " followers,Çeed "

472 + (
£lf
.
	`gëVŸögVõw
().
	`size
() / 2));

477 
tickSkù
 = !tickSkip;

479 } 
föÆly
 {

480 
zk
.
	`uƒegi°îJMX
(
this
);

482 
	}
}

484 
boﬁón
 
	gisShutdown
;

489 
	$shutdown
(
Såög
 
ªas⁄
) {

490 
LOG
.
	`öfo
("Shutting down");

492 i‡(
isShutdown
) {

496 
LOG
.
	`öfo
("Shutdown called",

497 
√w
 
	`Ex˚±i⁄
("shutdow¿Lódî!Ñós⁄: " + 
ªas⁄
));

499 i‡(
˙xAc˚±‹
 !
nuŒ
) {

500 
˙xAc˚±‹
.
	`hÆt
();

504 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
nuŒ
);

505 
åy
 {

506 
ss
.
	`˛o£
();

507 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

508 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄ durög clo£",
e
);

511 
£lf
.
˙xnFa˘‹y
.
	`˛o£AŒ
();

513 i‡(
zk
 !
nuŒ
) {

514 
zk
.
	`shutdown
();

516 
	`synchr⁄ized
 (
À¨√rs
) {

517 
Iãøt‹
<
Ló∫îH™dÀr
> 
ô
 = 
À¨√rs
.
	`ôî©‹
(); it

518 .
	`hasNext
();) {

519 
Ló∫îH™dÀr
 
f
 = 
ô
.
	`√xt
();

520 
ô
.
	`ªmove
();

521 
f
.
	`shutdown
();

524 
isShutdown
 = 
åue
;

525 
	}
}

535 
synchr⁄ized
 
public
 
	$¥o˚ssAck
(
sid
, 
zxid
, 
SockëAddªss
 
fﬁlowîAddr
) {

536 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

537 
LOG
.
	`åa˚
("Ack zxid: 0x{}", 
L⁄g
.
	`toHexSåög
(
zxid
));

538 
Pr›oßl
 
p
 : 
out°™dögPr›oßls
.
	`vÆues
()) {

539 
∑ckëZxid
 = 
p
.
∑ckë
.
	`gëZxid
();

540 
LOG
.
	`åa˚
("outstandingÖroposal: 0x{}",

541 
L⁄g
.
	`toHexSåög
(
∑ckëZxid
));

543 
LOG
.
	`åa˚
("outstandingÖroposalsáll");

546 i‡(
out°™dögPr›oßls
.
	`size
() == 0) {

547 i‡(
LOG
.
	`isDebugE«bÀd
()) {

548 
LOG
.
	`debug
("outstanding is 0");

552 i‡(
œ°Commôãd
 >
zxid
) {

553 i‡(
LOG
.
	`isDebugE«bÀd
()) {

554 
LOG
.
	`debug
("proposal hasálready been committed,Özxid: 0x{} zxid: 0x{}",

555 
L⁄g
.
	`toHexSåög
(
œ°Commôãd
), L⁄g.toHexSåög(
zxid
));

560 
Pr›oßl
 
p
 = 
out°™dögPr›oßls
.
	`gë
(
zxid
);

561 i‡(
p
 =
nuŒ
) {

562 
LOG
.
	`w¨n
("TryingÅo commit futureÖroposal: zxid 0x{} from {}",

563 
L⁄g
.
	`toHexSåög
(
zxid
), 
fﬁlowîAddr
);

567 
p
.
ackSë
.
	`add
(
sid
);

568 i‡(
LOG
.
	`isDebugE«bÀd
()) {

569 
LOG
.
	`debug
("Count for zxid: 0x{} is {}",

570 
L⁄g
.
	`toHexSåög
(
zxid
), 
p
.
ackSë
.
	`size
());

572 i‡(
£lf
.
	`gëQu‹umVîifõr
().
	`c⁄èösQu‹um
(
p
.
ackSë
)){

573 i‡(
zxid
 !
œ°Commôãd
+1) {

574 
LOG
.
	`w¨n
("Commiting zxid 0x{} from {}Çot first!",

575 
L⁄g
.
	`toHexSåög
(
zxid
), 
fﬁlowîAddr
);

576 
LOG
.
	`w¨n
("Fú° i†0x{}", 
L⁄g
.
	`toHexSåög
(
œ°Commôãd
 + 1));

578 
out°™dögPr›oßls
.
	`ªmove
(
zxid
);

579 i‡(
p
.
ªque°
 !
nuŒ
) {

580 
toBeAµlõd
.
	`add
(
p
);

583 i‡((
zxid
 & 0xffffffffL) != 0) {

584 i‡(
p
.
ªque°
 =
nuŒ
) {

585 
LOG
.
	`w¨n
("GoögÅÿcommmôÇuŒÑeque° f‹Ör›oßl: {}", 
p
);

587 
	`commô
(
zxid
);

588 
	`öf‹m
(
p
);

589 
zk
.
commôPro˚ss‹
.
	`commô
(
p
.
ªque°
);

590 if(
≥ndögSyncs
.
	`c⁄èösKey
(
zxid
)){

591 
Ló∫îSyncReque°
 
r
: 
≥ndögSyncs
.
	`ªmove
(
zxid
)) {

592 
	`£ndSync
(
r
);

597 
œ°Commôãd
 = 
zxid
;

598 
LOG
.
	`öfo
("Have quorum of supporters; starting upánd settingÜastÖrocessed zxid: 0x{}",

599 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëZxid
()));

600 
zk
.
	`°¨tup
();

601 
zk
.
	`gëZKD©aba£
().
	`£éa°Pro˚s£dZxid
(zk.
	`gëZxid
());

604 
	}
}

606 ˛as†
	cToBeAµlõdReque°Pro˚ss‹
 
im∂emíts
 
	gReque°Pro˚ss‹
 {

607 
¥iv©e
 
Reque°Pro˚ss‹
 
	g√xt
;

609 
¥iv©e
 
	gC⁄cuºítLökedQueue
<
	gPr›oßl
> 
	gtoBeAµlõd
;

620 
ToBeAµlõdReque°Pro˚ss‹
(
Reque°Pro˚ss‹
 
√xt
,

621 
C⁄cuºítLökedQueue
<
Pr›oßl
> 
toBeAµlõd
) {

622 i‡(!(
√xt
 
ö°™˚of
 
	gFöÆReque°Pro˚ss‹
)) {

623 
throw
 
√w
 
Ru¡imeEx˚±i⁄
(
ToBeAµlõdReque°Pro˚ss‹
.
˛ass


624 .
gëName
()

626 + 
FöÆReque°Pro˚ss‹
.
˛ass
.
gëName
()

628 + 
√xt
.
gëCœss
().
gëName
());

630 
	gthis
.
	gtoBeAµlõd
 = 
toBeAµlõd
;

631 
	gthis
.
	g√xt
 = 
√xt
;

639 
public
 
¥o˚ssReque°
(
Reque°
 
ªque°
Ë
throws
 
	gReque°Pro˚ss‹Ex˚±i⁄
 {

641 
	g√xt
.
¥o˚ssReque°
(
ªque°
);

642 
Pr›oßl
 
	gp
 = 
toBeAµlõd
.
≥ek
();

643 i‡(
	gp
 !
nuŒ
 && 
p
.
ªque°
 !=Çull

644 && 
p
.
ªque°
.
zxid
 ==Ñequest.zxid) {

645 
toBeAµlõd
.
ªmove
();

654 
public
 
shutdown
() {

655 
	gLOG
.
öfo
("Shutting down");

656 
	g√xt
.
shutdown
();

666 
	$£ndPackë
(
Qu‹umPackë
 
qp
) {

667 
	`synchr⁄ized
 (
f‹w¨dögFﬁlowîs
) {

668 
Ló∫îH™dÀr
 
f
 : 
f‹w¨dögFﬁlowîs
) {

669 
f
.
	`queuePackë
(
qp
);

672 
	}
}

677 
	$£ndOb£rvîPackë
(
Qu‹umPackë
 
qp
) {

678 
Ló∫îH™dÀr
 
f
 : 
	`gëOb£rvögLó∫îs
()) {

679 
f
.
	`queuePackë
(
qp
);

681 
	}
}

683 
	gœ°Commôãd
 = -1;

690 
public
 
	$commô
(
zxid
) {

691 
	`synchr⁄ized
(
this
){

692 
œ°Commôãd
 = 
zxid
;

694 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
COMMIT
, 
zxid
, 
nuŒ
,Çull);

695 
	`£ndPackë
(
qp
);

696 
	}
}

703 
public
 
	$öf‹m
(
Pr›oßl
 
¥›oßl
) {

704 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
INFORM
, 
¥›oßl
.
ªque°
.
zxid
,

705 
¥›oßl
.
∑ckë
.
	`gëD©a
(), 
nuŒ
);

706 
	`£ndOb£rvîPackë
(
qp
);

707 
	}
}

709 
	gœ°Pr›o£d
;

717 
public
 
	$gëEpoch
(){

718  
ZxidUtûs
.
	`gëEpochFromZxid
(
œ°Pr›o£d
);

719 
	}
}

721 @
SuµªssW¨nögs
("serial")

722 
public
 ˛as†
	cXidRﬁlovîEx˚±i⁄
 
exãnds
 
	gEx˚±i⁄
 {

723 
public
 
XidRﬁlovîEx˚±i⁄
(
Såög
 
mesßge
) {

724 
su≥r
(
mesßge
);

734 
public
 
Pr›oßl
 
	$¥›o£
(
Reque°
 
ªque°
Ë
throws
 
XidRﬁlovîEx˚±i⁄
 {

739 i‡((
ªque°
.
zxid
 & 0xffffffffL) == 0xffffffffL) {

740 
Såög
 
msg
 =

742 
	`shutdown
(
msg
);

743 
throw
 
√w
 
	`XidRﬁlovîEx˚±i⁄
(
msg
);

746 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

747 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

748 
åy
 {

749 
ªque°
.
hdr
.
	`£rülize
(
bﬂ
, "hdr");

750 i‡(
ªque°
.
txn
 !
nuŒ
) {

751 
ªque°
.
txn
.
	`£rülize
(
bﬂ
, "txn");

753 
baos
.
	`˛o£
();

754 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

755 
LOG
.
	`w¨n
("Thi†ªÆly should bêimpossibÀ", 
e
);

757 
Qu‹umPackë
 
µ
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
PROPOSAL
, 
ªque°
.
zxid
,

758 
baos
.
	`toByãAºay
(), 
nuŒ
);

760 
Pr›oßl
 
p
 = 
√w
 
	`Pr›oßl
();

761 
p
.
∑ckë
 = 
µ
;

762 
p
.
ªque°
 =Ñequest;

763 
	`synchr⁄ized
 (
this
) {

764 i‡(
LOG
.
	`isDebugE«bÀd
()) {

765 
LOG
.
	`debug
("Pr›osög:: " + 
ªque°
);

768 
œ°Pr›o£d
 = 
p
.
∑ckë
.
	`gëZxid
();

769 
out°™dögPr›oßls
.
	`put
(
œ°Pr›o£d
, 
p
);

770 
	`£ndPackë
(
µ
);

772  
p
;

773 
	}
}

781 
synchr⁄ized
 
public
 
	$¥o˚ssSync
(
Ló∫îSyncReque°
 
r
){

782 if(
out°™dögPr›oßls
.
	`isEm±y
()){

783 
	`£ndSync
(
r
);

785 
Li°
<
Ló∫îSyncReque°
> 
l
 = 
≥ndögSyncs
.
	`gë
(
œ°Pr›o£d
);

786 i‡(
l
 =
nuŒ
) {

787 
l
 = 
√w
 
AºayLi°
<
Ló∫îSyncReque°
>();

789 
l
.
	`add
(
r
);

790 
≥ndögSyncs
.
	`put
(
œ°Pr›o£d
, 
l
);

792 
	}
}

801 
public
 
	$£ndSync
(
Ló∫îSyncReque°
 
r
){

802 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
SYNC
, 0, 
nuŒ
,Çull);

803 
r
.
fh
.
	`queuePackë
(
qp
);

804 
	}
}

813 
synchr⁄ized
 
public
 
	$°¨tF‹w¨dög
(
Ló∫îH™dÀr
 
h™dÀr
,

814 
œ°SìnZxid
) {

817 i‡(
œ°Pr›o£d
 > 
œ°SìnZxid
) {

818 
Pr›oßl
 
p
 : 
toBeAµlõd
) {

819 i‡(
p
.
∑ckë
.
	`gëZxid
(Ë<
œ°SìnZxid
) {

822 
h™dÀr
.
	`queuePackë
(
p
.
∑ckë
);

825 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
COMMIT
, 
p
.
∑ckë


826 .
	`gëZxid
(), 
nuŒ
,Çull);

827 
h™dÀr
.
	`queuePackë
(
qp
);

829 
Li°
<
L⁄g
>
zxids
 = 
√w
 
AºayLi°
<L⁄g>(
out°™dögPr›oßls
.
	`keySë
());

830 
CﬁÀ˘i⁄s
.
	`s‹t
(
zxids
);

831 
L⁄g
 
zxid
: 
zxids
) {

832 i‡(
zxid
 <
œ°SìnZxid
) {

835 
h™dÀr
.
	`queuePackë
(
out°™dögPr›oßls
.
	`gë
(
zxid
).
∑ckë
);

838 i‡(
h™dÀr
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
PARTICIPANT
) {

839 
	`addF‹w¨dögFﬁlowî
(
h™dÀr
);

841 
	`addOb£rvîLó∫îH™dÀr
(
h™dÀr
);

844  
œ°Pr›o£d
;

845 
	}
}

847 
¥iv©e
 
	gHashSë
<
	gL⁄g
> 
	gc⁄√˘ögFﬁlowîs
 = 
√w
 
HashSë
<
L⁄g
>();

848 
public
 
	$gëEpochToPr›o£
(
sid
, 
œ°Ac˚±edEpoch
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
 {

849 
	`synchr⁄ized
(
c⁄√˘ögFﬁlowîs
) {

850 i‡(!
waôögF‹NewEpoch
) {

851  
ïoch
;

853 i‡(
œ°Ac˚±edEpoch
 >
ïoch
) {

854 
ïoch
 = 
œ°Ac˚±edEpoch
+1;

856 
c⁄√˘ögFﬁlowîs
.
	`add
(
sid
);

857 
Qu‹umVîifõr
 
vîifõr
 = 
£lf
.
	`gëQu‹umVîifõr
();

858 i‡(
c⁄√˘ögFﬁlowîs
.
	`c⁄èös
(
£lf
.
	`gëId
()) &&

859 
vîifõr
.
	`c⁄èösQu‹um
(
c⁄√˘ögFﬁlowîs
)) {

860 
waôögF‹NewEpoch
 = 
Ál£
;

861 
£lf
.
	`£tAc˚±edEpoch
(
ïoch
);

862 
c⁄√˘ögFﬁlowîs
.
	`nŸifyAŒ
();

864 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

865 
cur
 = 
°¨t
;

866 
íd
 = 
°¨t
 + 
£lf
.
	`gëInôLimô
()*£lf.
	`gëTickTime
();

867 
waôögF‹NewEpoch
 && 
cur
 < 
íd
) {

868 
c⁄√˘ögFﬁlowîs
.
	`waô
(
íd
 - 
cur
);

869 
cur
 = 
Sy°em
.
	`cuºítTimeMûlis
();

871 i‡(
waôögF‹NewEpoch
) {

872 
throw
 
√w
 
	`I¡îru±edEx˚±i⁄
("Timeout while waiting forÉpoch from quorum");

875  
ïoch
;

877 
	}
}

879 
¥iv©e
 
	gHashSë
<
	gL⁄g
> 
	gñe˘ögFﬁlowîs
 = 
√w
 
HashSë
<
L⁄g
>();

880 
¥iv©e
 
boﬁón
 
	gñe˘i⁄Föished
 = 
Ál£
;

881 
public
 
	$waôF‹EpochAck
(
id
, 
SèãSumm¨y
 
ss
Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

882 
	`synchr⁄ized
(
ñe˘ögFﬁlowîs
) {

883 i‡(
ñe˘i⁄Föished
) {

886 i‡(
ss
.
	`gëCuºítEpoch
() != -1) {

887 i‡(
ss
.
	`isM‹eRe˚¡Th™
(
ÀadîSèãSumm¨y
)) {

888 
throw
 
√w
 
	`IOEx˚±i⁄
("Follower isáhead ofÅheÜeader,Üeader summary: "

889 + 
ÀadîSèãSumm¨y
.
	`gëCuºítEpoch
()

891 + 
ÀadîSèãSumm¨y
.
	`gëLa°Zxid
()

894 
ñe˘ögFﬁlowîs
.
	`add
(
id
);

896 
Qu‹umVîifõr
 
vîifõr
 = 
£lf
.
	`gëQu‹umVîifõr
();

897 i‡(
ñe˘ögFﬁlowîs
.
	`c⁄èös
(
£lf
.
	`gëId
()Ë&& 
vîifõr
.
	`c⁄èösQu‹um
(electingFollowers)) {

898 
ñe˘i⁄Föished
 = 
åue
;

899 
ñe˘ögFﬁlowîs
.
	`nŸifyAŒ
();

901 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

902 
cur
 = 
°¨t
;

903 
íd
 = 
°¨t
 + 
£lf
.
	`gëInôLimô
()*£lf.
	`gëTickTime
();

904 !
ñe˘i⁄Föished
 && 
cur
 < 
íd
) {

905 
ñe˘ögFﬁlowîs
.
	`waô
(
íd
 - 
cur
);

906 
cur
 = 
Sy°em
.
	`cuºítTimeMûlis
();

908 i‡(!
ñe˘i⁄Föished
) {

909 
throw
 
√w
 
	`I¡îru±edEx˚±i⁄
("Timeout while waiting forÉpochÅo beácked by quorum");

913 
	}
}

920 
public
 
Såög
 
	$gëPackëTy≥
(
∑ckëTy≥
) {

921 
∑ckëTy≥
) {

922 
DIFF
:

924 
TRUNC
:

926 
SNAP
:

928 
OBSERVERINFO
:

930 
NEWLEADER
:

932 
FOLLOWERINFO
:

934 
UPTODATE
:

936 
LEADERINFO
:

938 
ACKEPOCH
:

940 
REQUEST
:

942 
PROPOSAL
:

944 
ACK
:

946 
COMMIT
:

948 
PING
:

950 
REVALIDATE
:

952 
SYNC
:

954 
INFORM
:

959 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîBón
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLó∫îH™dÀr
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

29 
public
 cœs†
	cLódîBón
 
exãnds
 
ZooKì≥rSîvîBón
 
im∂emíts
 
	mLódîMXBón
 {

30 
¥iv©e
 
föÆ
 
Lódî
 
	mÀadî
;

32 
public
 
	$LódîBón
(
Lódî
 
Àadî
, 
ZooKì≥rSîvî
 
zks
) {

33 
	`su≥r
(
zks
);

34 
this
.
Àadî
 =Üeader;

37 
public
 
Såög
 
	$gëName
() {

39 
	}
}

41 
public
 
Såög
 
	$gëCuºítZxid
() {

42  "0x" + 
L⁄g
.
	`toHexSåög
(
zks
.
	`gëZxid
());

43 
	}
}

45 
public
 
Såög
 
	$fﬁlowîInfo
() {

46 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

47 
Ló∫îH™dÀr
 
h™dÀr
 : 
Àadî
.
	`gëLó∫îs
()) {

48 
sb
.
	`≠≥nd
(
h™dÀr
.
	`toSåög
()).append("\n");

50  
sb
.
	`toSåög
();

51 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElection.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømPackë
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømSockë
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

35 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

47 @
Dïªˇãd


48 
public
 cœs†
	cLódîEÀ˘i⁄
 
im∂emíts
 
	mEÀ˘i⁄
 {

49 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
LódîEÀ˘i⁄
.
˛ass
);

50 
¥Ÿe˘ed
 
föÆ
 
R™dom
 
	mïochGí
 = 
√w
 Random();

52 
¥Ÿe˘ed
 
Qu‹umPìr
 
	m£lf
;

54 
public
 
	$LódîEÀ˘i⁄
(
Qu‹umPìr
 
£lf
) {

55 
this
.
£lf
 = self;

58 
¥Ÿe˘ed
 ˛as†
	cEÀ˘i⁄Resu…
 {

59 
public
 
VŸe
 
vŸe
;

61 
public
 
cou¡
;

63 
public
 
VŸe
 
wö√r
;

65 
public
 
wönögCou¡
;

67 
public
 
numVÆidVŸes
;

68 
	}
}

70 
¥Ÿe˘ed
 
EÀ˘i⁄Resu…
 
cou¡VŸes
(
HashM≠
<
I√tSockëAddªss
, 
VŸe
> 
vŸes
, 
HashSë
<
L⁄g
> 
hórdFrom
) {

71 
föÆ
 
EÀ˘i⁄Resu…
 
	gªsu…
 = 
√w
 ElectionResult();

73 
	gªsu…
.
	gvŸe
 = 
√w
 
VŸe
(
L⁄g
.
MIN_VALUE
, Long.MIN_VALUE);

74 
	gªsu…
.
	gwö√r
 = 
√w
 
VŸe
(
L⁄g
.
MIN_VALUE
, Long.MIN_VALUE);

79 
föÆ
 
	gHashM≠
<
	gI√tSockëAddªss
, 
	gVŸe
> 
	gvÆidVŸes
 = 
√w
 
HashM≠
<
I√tSockëAddªss
, Vote>();

80 
föÆ
 
	gM≠
<
	gL⁄g
, L⁄g> 
	gmaxZxids
 = 
√w
 
HashM≠
<
L⁄g
,Long>();

81 
	gM≠
.
	gE¡ry
<
	gI√tSockëAddªss
, 
	gVŸe
> 
	ge
 : 
vŸes
.
íåySë
()) {

83 
föÆ
 
VŸe
 
v
 = 
e
.
gëVÆue
();

84 i‡(
	ghórdFrom
.
c⁄èös
(
v
.
gëId
())) {

85 
	gvÆidVŸes
.
put
(
e
.
gëKey
(), 
v
);

86 
L⁄g
 
	gvÆ
 = 
maxZxids
.
gë
(
v
.
gëId
());

87 i‡(
	gvÆ
 =
nuŒ
 || 
vÆ
 < 
v
.
gëZxid
()) {

88 
maxZxids
.
put
(
v
.
gëId
(), v.
gëZxid
());

95 
	gM≠
.
	gE¡ry
<
	gI√tSockëAddªss
, 
	gVŸe
> 
	ge
 : 
vÆidVŸes
.
íåySë
()) {

96 
föÆ
 
VŸe
 
v
 = 
e
.
gëVÆue
();

97 
L⁄g
 
	gzxid
 = 
maxZxids
.
gë
(
v
.
gëId
());

98 i‡(
	gv
.
gëZxid
(Ë< 
	gzxid
) {

101 
	ge
.
£tVÆue
(
√w
 
VŸe
(
v
.
gëId
(), 
zxid
, v.
gëEÀ˘i⁄Epoch
(), v.
gëPìrEpoch
(), v.
gëSèã
()));

105 
	gªsu…
.
	gnumVÆidVŸes
 = 
vÆidVŸes
.
size
();

107 
föÆ
 
	gHashM≠
<
	gVŸe
, 
	gI¡egî
> 
	gcou¡TabÀ
 = 
√w
 
HashM≠
<
VŸe
, Integer>();

109 
VŸe
 
	gv
 : 
vÆidVŸes
.
vÆues
()) {

110 
I¡egî
 
cou¡
 = 
cou¡TabÀ
.
gë
(
v
);

111 i‡(
	gcou¡
 =
nuŒ
) {

112 
cou¡
 = 0;

114 
	gcou¡TabÀ
.
put
(
v
, 
cou¡
 + 1);

115 i‡(
	gv
.
gëId
(Ë=
ªsu…
.
vŸe
.getId()) {

116 
ªsu…
.
cou¡
++;

117 } i‡(
	gv
.
gëZxid
(Ë> 
	gªsu…
.
	gvŸe
.getZxid()

118 || (
	gv
.
gëZxid
(Ë=
ªsu…
.
vŸe
.gëZxid(Ë&& 
v
.
gëId
() >Ñesult.vote.getId())) {

119 
ªsu…
.
vŸe
 = 
v
;

120 
	gªsu…
.
	gcou¡
 = 1;

123 
	gªsu…
.
	gwönögCou¡
 = 0;

124 
	gLOG
.
öfo
("ElectionÅally: ");

125 
	gE¡ry
<
	gVŸe
, 
	gI¡egî
> 
	gíåy
 : 
cou¡TabÀ
.
íåySë
()) {

126 i‡(
íåy
.
gëVÆue
(Ë> 
ªsu…
.
wönögCou¡
) {

127 
ªsu…
.
wönögCou¡
 = 
íåy
.
gëVÆue
();

128 
	gªsu…
.
	gwö√r
 = 
íåy
.
gëKey
();

130 
	gLOG
.
öfo
(
íåy
.
gëKey
().
gëId
(Ë+ "\t-> " +É¡ry.
gëVÆue
());

132  
	gªsu…
;

139 
public
 
	$shutdown
(){
	}
}

146 
public
 
VŸe
 
	$lookF‹Lódî
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

147 
åy
 {

148 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
√w
 
	`LódîEÀ˘i⁄Bón
();

149 
MBónRegi°ry
.
	`gëIn°™˚
().(

150 
£lf
.
jmxLódîEÀ˘i⁄Bón
, sñf.
jmxLoˇlPìrBón
);

151 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

152 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

153 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

156 
åy
 {

157 
£lf
.
	`£tCuºítVŸe
(
√w
 
	`VŸe
(£lf.
	`gëId
(),

158 
£lf
.
	`gëLa°LoggedZxid
()));

160 
byã
 
ªque°Byãs
[] = 
√w
 byte[4];

161 
ByãBuf„r
 
ªque°Buf„r
 = ByãBuf„r.
	`wøp
(
ªque°Byãs
);

162 
byã
 
ª•⁄£Byãs
[] = 
√w
 byte[28];

163 
ByãBuf„r
 
ª•⁄£Buf„r
 = ByãBuf„r.
	`wøp
(
ª•⁄£Byãs
);

165 
D©agømSockë
 
s
 = 
nuŒ
;

166 
åy
 {

167 
s
 = 
√w
 
	`D©agømSockë
();

168 
s
.
	`£tSoTimeout
(200);

169 } 
	`ˇtch
 (
SockëEx˚±i⁄
 
e1
) {

170 
LOG
.
	`îr‹
("SockëÉx˚±i⁄ whí cª©ög sockë f‹ÜódîÉÀ˘i⁄", 
e1
);

171 
Sy°em
.
	`exô
(4);

173 
D©agømPackë
 
ªque°Packë
 = 
√w
 
	`D©agømPackë
(
ªque°Byãs
,

174 
ªque°Byãs
.
Àngth
);

175 
D©agømPackë
 
ª•⁄£Packë
 = 
√w
 
	`D©agømPackë
(
ª•⁄£Byãs
,

176 
ª•⁄£Byãs
.
Àngth
);

177 
xid
 = 
ïochGí
.
	`√xtI¡
();

178 
£lf
.
	`isRu¬ög
()) {

179 
HashM≠
<
I√tSockëAddªss
, 
VŸe
> 
vŸes
 =

180 
√w
 
HashM≠
<
I√tSockëAddªss
, 
VŸe
>(
£lf
.
	`gëVŸögVõw
().
	`size
());

182 
ªque°Buf„r
.
	`˛ór
();

183 
ªque°Buf„r
.
	`putI¡
(
xid
);

184 
ªque°Packë
.
	`£tLígth
(4);

185 
HashSë
<
L⁄g
> 
hórdFrom
 = 
√w
 HashSet<Long>();

186 
Qu‹umSîvî
 
£rvî
 : 
£lf
.
	`gëVŸögVõw
().
	`vÆues
()) {

187 
LOG
.
	`öfo
("Sîvîáddªss: " + 
£rvî
.
addr
);

188 
åy
 {

189 
ªque°Packë
.
	`£tSockëAddªss
(
£rvî
.
addr
);

190 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

194 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

196 + 
e
.
	`gëMesßge
(Ë+ " wôháddr:" + 
£rvî
.
addr
,

197 
e
);

200 
åy
 {

201 
s
.
	`£nd
(
ªque°Packë
);

202 
ª•⁄£Packë
.
	`£tLígth
(
ª•⁄£Byãs
.
Àngth
);

203 
s
.
	`ª˚ive
(
ª•⁄£Packë
);

204 i‡(
ª•⁄£Packë
.
	`gëLígth
(Ë!
ª•⁄£Byãs
.
Àngth
) {

205 
LOG
.
	`îr‹
("Gotá shortÑesponse: "

206 + 
ª•⁄£Packë
.
	`gëLígth
());

209 
ª•⁄£Buf„r
.
	`˛ór
();

210 
ªcvedXid
 = 
ª•⁄£Buf„r
.
	`gëI¡
();

211 i‡(
ªcvedXid
 !
xid
) {

212 
LOG
.
	`îr‹
("GŸ bad xid:Éx≥˘ed " + 
xid


213 + " gŸ " + 
ªcvedXid
);

216 
≥îId
 = 
ª•⁄£Buf„r
.
	`gëL⁄g
();

217 
hórdFrom
.
	`add
(
≥îId
);

219 
VŸe
 
vŸe
 = 
√w
 
	`VŸe
(
ª•⁄£Buf„r
.
	`gëL⁄g
(),

220 
ª•⁄£Buf„r
.
	`gëL⁄g
());

221 
I√tSockëAddªss
 
addr
 =

222 (
I√tSockëAddªss
Ë
ª•⁄£Packë


223 .
	`gëSockëAddªss
();

224 
vŸes
.
	`put
(
addr
, 
vŸe
);

226 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

227 
LOG
.
	`w¨n
("IgnoringÉxception whileÜooking forÜeader",

228 
e
);

234 
EÀ˘i⁄Resu…
 
ªsu…
 = 
	`cou¡VŸes
(
vŸes
, 
hórdFrom
);

239 i‡(
ªsu…
.
numVÆidVŸes
 == 0) {

240 
£lf
.
	`£tCuºítVŸe
(
√w
 
	`VŸe
(£lf.
	`gëId
(),

241 
£lf
.
	`gëLa°LoggedZxid
()));

243 i‡(
ªsu…
.
wö√r
.
	`gëId
() >= 0) {

244 
£lf
.
	`£tCuºítVŸe
(
ªsu…
.
vŸe
);

246 i‡(
ªsu…
.
wönögCou¡
 > (
£lf
.
	`gëVŸögVõw
().
	`size
() / 2)) {

247 
£lf
.
	`£tCuºítVŸe
(
ªsu…
.
wö√r
);

248 
s
.
	`˛o£
();

249 
VŸe
 
cuºít
 = 
£lf
.
	`gëCuºítVŸe
();

250 
LOG
.
	`öfo
("FoundÜódî: myÅy≥ is: " + 
£lf
.
	`gëLó∫îTy≥
());

258 i‡(
£lf
.
	`gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
OBSERVER
) {

259 i‡(
cuºít
.
	`gëId
(Ë=
£lf
.getId()) {

261 
LOG
.
	`îr‹
("OBSERVERÉlectedásÜeader!");

262 
Thªad
.
	`¶ìp
(100);

265 
£lf
.
	`£tPìrSèã
(
SîvîSèã
.
OBSERVING
);

266 
Thªad
.
	`¶ìp
(100);

267  
cuºít
;

270 
£lf
.
	`£tPìrSèã
((
cuºít
.
	`gëId
() == self.getId())

271 ? 
SîvîSèã
.
LEADING
: SîvîSèã.
FOLLOWING
);

272 i‡(
£lf
.
	`gëPìrSèã
(Ë=
SîvîSèã
.
FOLLOWING
) {

273 
Thªad
.
	`¶ìp
(100);

275  
cuºít
;

280 
Thªad
.
	`¶ìp
(1000);

282  
nuŒ
;

283 } 
föÆly
 {

284 
åy
 {

285 if(
£lf
.
jmxLódîEÀ˘i⁄Bón
 !
nuŒ
){

286 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(

287 
£lf
.
jmxLódîEÀ˘i⁄Bón
);

289 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

290 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

292 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

294 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElectionBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

28 
public
 
˛ass
 
LódîEÀ˘i⁄Bón
 
im∂emíts
 
	gLódîEÀ˘i⁄MXBón
, 
	gZKMBónInfo
 {

29 
¥iv©e
 
föÆ
 
D©e
 
	g°¨tTime
 = 
√w
 Date();

31 
public
 
Såög
 
gëName
() {

35 
public
 
boﬁón
 
isHiddí
() {

36  
	gÁl£
;

39 
public
 
Såög
 
gëSèπTime
() {

40  
	g°¨tTime
.
toSåög
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElectionMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

25 
public
 
öãrÁ˚
 
	gLódîEÀ˘i⁄MXBón
 {

30 
public
 
Såög
 
gëSèπTime
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîMXBón
;

26 
public
 
öãrÁ˚
 
LódîMXBón
 
exãnds
 
	gZooKì≥rSîvîMXBón
 {

30 
public
 
Såög
 
gëCuºítZxid
();

35 
public
 
Såög
 
fﬁlowîInfo
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªeBón
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gFöÆReque°Pro˚ss‹
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gPªpReque°Pro˚ss‹
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄TøckîIm∂
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

41 
public
 cœs†
	cLódîZooKì≥rSîvî
 
exãnds
 
	mQu‹umZooKì≥rSîvî
 {

42 
CommôPro˚ss‹
 
	mcommôPro˚ss‹
;

49 
	$LódîZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
, 
Qu‹umPìr
 
£lf
,

50 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
Ë
throws
 
IOEx˚±i⁄
 {

51 
	`su≥r
(
logFa˘‹y
, 
£lf
.
tickTime
, sñf.
möSessi⁄Timeout
,

52 
£lf
.
maxSessi⁄Timeout
, 
åìBuûdî
, 
zkDb
, self);

55 
public
 
Lódî
 
	$gëLódî
(){

56  
£lf
.
Àadî
;

57 
	}
}

59 @
Ovîride


60 
¥Ÿe˘ed
 
	$£tupReque°Pro˚ss‹s
() {

61 
Reque°Pro˚ss‹
 
föÆPro˚ss‹
 = 
√w
 
	`FöÆReque°Pro˚ss‹
(
this
);

62 
Reque°Pro˚ss‹
 
toBeAµlõdPro˚ss‹
 = 
√w
 
Lódî
.
	`ToBeAµlõdReque°Pro˚ss‹
(

63 
föÆPro˚ss‹
, 
	`gëLódî
().
toBeAµlõd
);

64 
commôPro˚ss‹
 = 
√w
 
	`CommôPro˚ss‹
(
toBeAµlõdPro˚ss‹
,

65 
L⁄g
.
	`toSåög
(
	`gëSîvîId
()), 
Ál£
);

66 
commôPro˚ss‹
.
	`°¨t
();

67 
Pr›oßlReque°Pro˚ss‹
 
¥›oßlPro˚ss‹
 = 
√w
 
	`Pr›oßlReque°Pro˚ss‹
(
this
,

68 
commôPro˚ss‹
);

69 
¥›oßlPro˚ss‹
.
	`öôülize
();

70 
fú°Pro˚ss‹
 = 
√w
 
	`PªpReque°Pro˚ss‹
(
this
, 
¥›oßlPro˚ss‹
);

71 ((
PªpReque°Pro˚ss‹
)
fú°Pro˚ss‹
).
	`°¨t
();

72 
	}
}

74 @
Ovîride


75 
public
 
	$gëGlobÆOut°™dögLimô
() {

76  
su≥r
.
	`gëGlobÆOut°™dögLimô
(Ë/ (
£lf
.
	`gëQu‹umSize
() - 1);

77 
	}
}

79 @
Ovîride


80 
public
 
	$¸óãSessi⁄Tøckî
() {

81 
£ssi⁄Tøckî
 = 
√w
 
	`Sessi⁄TøckîIm∂
(
this
, 
	`gëZKD©aba£
().
	`gëSessi⁄WôhTimeOuts
(),

82 
tickTime
, 
£lf
.
	`gëId
());

83 
	}
}

85 @
Ovîride


86 
¥Ÿe˘ed
 
	$°¨tSessi⁄Tøckî
() {

87 ((
Sessi⁄TøckîIm∂
)
£ssi⁄Tøckî
).
	`°¨t
();

88 
	}
}

91 
public
 
boﬁón
 
	$touch
(
£ss
, 
to
) {

92  
£ssi⁄Tøckî
.
	`touchSessi⁄
(
£ss
, 
to
);

93 
	}
}

95 @
Ovîride


96 
¥Ÿe˘ed
 
	$ªgi°îJMX
() {

98 
åy
 {

99 
jmxD©aTªeBón
 = 
√w
 
	`D©aTªeBón
(
	`gëZKD©aba£
().
	`gëD©aTªe
());

100 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxD©aTªeBón
, 
jmxSîvîBón
);

101 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

102 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

103 
jmxD©aTªeBón
 = 
nuŒ
;

105 
	}
}

107 
public
 
	$ªgi°îJMX
(
LódîBón
 
ÀadîBón
,

108 
LoˇlPìrBón
 
loˇlPìrBón
)

111 i‡(
£lf
.
jmxLódîEÀ˘i⁄Bón
 !
nuŒ
) {

112 
åy
 {

113 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
£lf
.
jmxLódîEÀ˘i⁄Bón
);

114 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

115 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

117 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

120 
åy
 {

121 
jmxSîvîBón
 = 
ÀadîBón
;

122 
MBónRegi°ry
.
	`gëIn°™˚
().(
ÀadîBón
, 
loˇlPìrBón
);

123 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

124 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

125 
jmxSîvîBón
 = 
nuŒ
;

127 
	}
}

129 @
Ovîride


130 
¥Ÿe˘ed
 
	$uƒegi°îJMX
() {

132 
åy
 {

133 i‡(
jmxD©aTªeBón
 !
nuŒ
) {

134 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxD©aTªeBón
);

136 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

137 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

139 
jmxD©aTªeBón
 = 
nuŒ
;

140 
	}
}

142 
¥Ÿe˘ed
 
	$uƒegi°îJMX
(
Lódî
 
Àadî
) {

144 
åy
 {

145 i‡(
jmxSîvîBón
 !
nuŒ
) {

146 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxSîvîBón
);

148 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

149 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

151 
jmxSîvîBón
 = 
nuŒ
;

152 
	}
}

154 @
Ovîride


155 
public
 
Såög
 
	$gëSèã
() {

157 
	}
}

163 @
Ovîride


164 
public
 
	$gëSîvîId
() {

165  
£lf
.
	`gëId
();

166 
	}
}

168 @
Ovîride


169 
¥Ÿe˘ed
 
	$ªvÆid©eSessi⁄
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
,

170 
£ssi⁄Timeout
Ë
throws
 
IOEx˚±i⁄
 {

171 
su≥r
.
	`ªvÆid©eSessi⁄
(
˙xn
, 
£ssi⁄Id
, 
£ssi⁄Timeout
);

172 
åy
 {

175 
	`£tOw√r
(
£ssi⁄Id
, 
SîvîCnxn
.
me
);

176 } 
	`ˇtch
 (
Sessi⁄ExpúedEx˚±i⁄
 
e
) {

179 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Learner.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈utSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gC⁄√˘Ex˚±i⁄
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

30 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

42 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

56 
public
 cœs†
	cLó∫î
 {

57 ˛as†
	cPackëInFlight
 {

58 
TxnHódî
 
	mhdr
;

59 
Rec‹d
 
	mªc
;

61 
Qu‹umPìr
 
	g£lf
;

62 
Ló∫îZooKì≥rSîvî
 
	gzk
;

64 
¥Ÿe˘ed
 
Buf„ªdOuçutSåóm
 
	gbuf„ªdOuçut
;

66 
¥Ÿe˘ed
 
Sockë
 
	gsock
;

72 
public
 
Sockë
 
	$gëSockë
() {

73  
sock
;

74 
	}
}

76 
¥Ÿe˘ed
 
I≈utArchive
 
	gÀadîIs
;

77 
¥Ÿe˘ed
 
OuçutArchive
 
	gÀadîOs
;

79 
¥Ÿe˘ed
 
	gÀadîPrŸocﬁVîsi⁄
 = 0x01;

81 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Ló∫î
.
˛ass
);

83 
föÆ
 
¥iv©e
 
boﬁón
 
	gnodñay
 = 
Sy°em
.
gëPr›îty
("fﬁlowî.nodñay", "åue").
equÆs
("true");

85 
	gLOG
.
öfo
("TCP NoDñay sëÅo: " + 
nodñay
);

88 
föÆ
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gSîvîCnxn
> 
	g≥ndögRevÆid©i⁄s
 =

89 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	gSîvîCnxn
>();

91 
public
 
	$gëPídögRevÆid©i⁄sCou¡
() {

92  
≥ndögRevÆid©i⁄s
.
	`size
();

93 
	}
}

105 
	$vÆid©eSessi⁄
(
SîvîCnxn
 
˙xn
, 
˛õ¡Id
, 
timeout
)

106 
throws
 
IOEx˚±i⁄
 {

107 
LOG
.
	`öfo
("RevÆid©ög clõ¡: 0x" + 
L⁄g
.
	`toHexSåög
(
˛õ¡Id
));

108 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

109 
D©aOuçutSåóm
 
dos
 = 
√w
 
	`D©aOuçutSåóm
(
baos
);

110 
dos
.
	`wrôeL⁄g
(
˛õ¡Id
);

111 
dos
.
	`wrôeI¡
(
timeout
);

112 
dos
.
	`˛o£
();

113 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
REVALIDATE
, -1, 
baos


114 .
	`toByãAºay
(), 
nuŒ
);

115 
≥ndögRevÆid©i⁄s
.
	`put
(
˛õ¡Id
, 
˙xn
);

116 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

117 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

118 
ZooTø˚
.
SESSION_TRACE_MASK
,

120 + 
L⁄g
.
	`toHexSåög
(
˛õ¡Id
));

122 
	`wrôePackë
(
qp
, 
åue
);

123 
	}
}

132 
	$wrôePackë
(
Qu‹umPackë
 
µ
, 
boﬁón
 
Êush
Ë
throws
 
IOEx˚±i⁄
 {

133 
	`synchr⁄ized
 (
ÀadîOs
) {

134 i‡(
µ
 !
nuŒ
) {

135 
ÀadîOs
.
	`wrôeRec‹d
(
µ
, "packet");

137 i‡(
Êush
) {

138 
buf„ªdOuçut
.
	`Êush
();

141 
	}
}

150 
	$ªadPackë
(
Qu‹umPackë
 
µ
Ë
throws
 
IOEx˚±i⁄
 {

151 
	`synchr⁄ized
 (
ÀadîIs
) {

152 
ÀadîIs
.
	`ªadRec‹d
(
µ
, "packet");

154 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PACKET_TRACE_MASK
;

155 i‡(
µ
.
	`gëTy≥
(Ë=
Lódî
.
PING
) {

156 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PING_TRACE_MASK
;

158 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

159 
ZooTø˚
.
	`logQu‹umPackë
(
LOG
, 
åa˚Mask
, 'i', 
µ
);

161 
	}
}

170 
	$ªque°
(
Reque°
 
ªque°
Ë
throws
 
IOEx˚±i⁄
 {

171 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

172 
D©aOuçutSåóm
 
ﬂ
 = 
√w
 
	`D©aOuçutSåóm
(
baos
);

173 
ﬂ
.
	`wrôeL⁄g
(
ªque°
.
£ssi⁄Id
);

174 
ﬂ
.
	`wrôeI¡
(
ªque°
.
cxid
);

175 
ﬂ
.
	`wrôeI¡
(
ªque°
.
ty≥
);

176 i‡(
ªque°
.ªque° !
nuŒ
) {

177 
ªque°
.ªque°.
	`ªwöd
();

178 
Àn
 = 
ªque°
.ªque°.
	`ªmaöög
();

179 
byã
 
b
[] = 
√w
 byã[
Àn
];

180 
ªque°
.ªque°.
	`gë
(
b
);

181 
ªque°
.ªque°.
	`ªwöd
();

182 
ﬂ
.
	`wrôe
(
b
);

184 
ﬂ
.
	`˛o£
();

185 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
REQUEST
, -1, 
baos


186 .
	`toByãAºay
(), 
ªque°
.
authInfo
);

187 
	`wrôePackë
(
qp
, 
åue
);

188 
	}
}

193 
¥Ÿe˘ed
 
I√tSockëAddªss
 
	$födLódî
() {

194 
I√tSockëAddªss
 
addr
 = 
nuŒ
;

196 
VŸe
 
cuºít
 = 
£lf
.
	`gëCuºítVŸe
();

197 
Qu‹umSîvî
 
s
 : 
£lf
.
	`gëVõw
().
	`vÆues
()) {

198 i‡(
s
.
id
 =
cuºít
.
	`gëId
()) {

199 
addr
 = 
s
.addr;

203 i‡(
addr
 =
nuŒ
) {

204 
LOG
.
	`w¨n
("Couldn't findÅheÜeader with id = "

205 + 
cuºít
.
	`gëId
());

207  
addr
;

208 
	}
}

218 
¥Ÿe˘ed
 
	$c⁄√˘ToLódî
(
I√tSockëAddªss
 
addr
)

219 
throws
 
IOEx˚±i⁄
, 
C⁄√˘Ex˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

220 
sock
 = 
√w
 
	`Sockë
();

221 
sock
.
	`£tSoTimeout
(
£lf
.
tickTime
 * sñf.
öôLimô
);

222 
åõs
 = 0;Åries < 5;Åries++) {

223 
åy
 {

224 
sock
.
	`c⁄√˘
(
addr
, 
£lf
.
tickTime
 * sñf.
syncLimô
);

225 
sock
.
	`£tT˝NoDñay
(
nodñay
);

227 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

228 i‡(
åõs
 == 4) {

229 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄",
e
);

230 
throw
 
e
;

232 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄,Årõs="+
åõs
+

233 ", c⁄√˘ögÅÿ" + 
addr
,
e
);

234 
sock
 = 
√w
 
	`Sockë
();

235 
sock
.
	`£tSoTimeout
(
£lf
.
tickTime
 * sñf.
öôLimô
);

238 
Thªad
.
	`¶ìp
(1000);

240 
ÀadîIs
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
√w
 
	`Buf„ªdI≈utSåóm
(

241 
sock
.
	`gëI≈utSåóm
()));

242 
buf„ªdOuçut
 = 
√w
 
	`Buf„ªdOuçutSåóm
(
sock
.
	`gëOuçutSåóm
());

243 
ÀadîOs
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
buf„ªdOuçut
);

244 
	}
}

253 
¥Ÿe˘ed
 
	$ªgi°îWôhLódî
(
pktTy≥
Ë
throws
 
IOEx˚±i⁄
{

257 
œ°LoggedZxid
 = 
£lf
.
	`gëLa°LoggedZxid
();

258 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

259 
qp
.
	`£tTy≥
(
pktTy≥
);

260 
qp
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(
£lf
.
	`gëAc˚±edEpoch
(), 0));

265 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
(
£lf
.
	`gëId
(), 0x10000);

266 
ByãAºayOuçutSåóm
 
bsid
 = 
√w
 
	`ByãAºayOuçutSåóm
();

267 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
bsid
);

268 
bﬂ
.
	`wrôeRec‹d
(
li
, "LearnerInfo");

269 
qp
.
	`£tD©a
(
bsid
.
	`toByãAºay
());

271 
	`wrôePackë
(
qp
, 
åue
);

272 
	`ªadPackë
(
qp
);

273 
föÆ
 
√wEpoch
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
qp
.
	`gëZxid
());

274 i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
LEADERINFO
) {

276 
ÀadîPrŸocﬁVîsi⁄
 = 
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
();

277 
byã
 
ïochByãs
[] = 
√w
 byte[4];

278 
föÆ
 
ByãBuf„r
 
wøµedEpochByãs
 = ByãBuf„r.
	`wøp
(
ïochByãs
);

279 i‡(
√wEpoch
 > 
£lf
.
	`gëAc˚±edEpoch
()) {

280 
wøµedEpochByãs
.
	`putI¡
(()
£lf
.
	`gëCuºítEpoch
());

281 
£lf
.
	`£tAc˚±edEpoch
(
√wEpoch
);

282 } i‡(
√wEpoch
 =
£lf
.
	`gëAc˚±edEpoch
()) {

287 
wøµedEpochByãs
.
	`putI¡
(-1);

289 
throw
 
√w
 
	`IOEx˚±i⁄
("Lódî†ïoch, " + 
√wEpoch
 + " i†Às†th™ác˚±edÉpoch, " + 
£lf
.
	`gëAc˚±edEpoch
());

291 
Qu‹umPackë
 
ackNewEpoch
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACKEPOCH
, 
œ°LoggedZxid
, 
ïochByãs
, 
nuŒ
);

292 
	`wrôePackë
(
ackNewEpoch
, 
åue
);

293  
ZxidUtûs
.
	`makeZxid
(
√wEpoch
, 0);

295 i‡(
√wEpoch
 > 
£lf
.
	`gëAc˚±edEpoch
()) {

296 
£lf
.
	`£tAc˚±edEpoch
(
√wEpoch
);

298 i‡(
qp
.
	`gëTy≥
(Ë!
Lódî
.
NEWLEADER
) {

299 
LOG
.
	`îr‹
("FirstÖacket should have been NEWLEADER");

300 
throw
 
√w
 
	`IOEx˚±i⁄
("FirstÖacket should have been NEWLEADER");

302  
qp
.
	`gëZxid
();

304 
	}
}

312 
¥Ÿe˘ed
 
	$syncWôhLódî
(
√wLódîZxid
Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
{

313 
Qu‹umPackë
 
ack
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, 0, 
nuŒ
,Çull);

314 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

315 
√wEpoch
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
√wLódîZxid
);

317 
	`ªadPackë
(
qp
);

318 
LökedLi°
<
L⁄g
> 
∑ckësCommôãd
 = 
√w
 LinkedList<Long>();

319 
LökedLi°
<
PackëInFlight
> 
∑ckësNŸCommôãd
 = 
√w
 LinkedList<PacketInFlight>();

320 
	`synchr⁄ized
 (
zk
) {

321 i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
DIFF
) {

322 
LOG
.
	`öfo
("Gëtögá dif‡‰omÅhêÀadî 0x" + 
L⁄g
.
	`toHexSåög
(
qp
.
	`gëZxid
()));

324 i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
SNAP
) {

325 
LOG
.
	`öfo
("Gettingá snapshot fromÜeader");

328 
zk
.
	`gëZKD©aba£
().
	`˛ór
();

329 
zk
.
	`gëZKD©aba£
().
	`de£rülizeS«pshŸ
(
ÀadîIs
);

330 
Såög
 
sig«tuª
 = 
ÀadîIs
.
	`ªadSåög
("signature");

331 i‡(!
sig«tuª
.
	`equÆs
("BenWasHere")) {

332 
LOG
.
	`îr‹
("Missög sig«tuª. GŸ " + 
sig«tuª
);

333 
throw
 
√w
 
	`IOEx˚±i⁄
("Missing signature");

335 } i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
TRUNC
) {

337 
LOG
.
	`w¨n
("TruncatingÜogÅo get in sync withÅheÜeader 0x"

338 + 
L⁄g
.
	`toHexSåög
(
qp
.
	`gëZxid
()));

339 
boﬁón
 
åunˇãd
=
zk
.
	`gëZKD©aba£
().
	`åunˇãLog
(
qp
.
	`gëZxid
());

340 i‡(!
åunˇãd
) {

342 
LOG
.
	`îr‹
("NotábleÅoÅruncateÅheÜog "

343 + 
L⁄g
.
	`toHexSåög
(
qp
.
	`gëZxid
()));

344 
Sy°em
.
	`exô
(13);

349 
LOG
.
	`îr‹
("Got unexpectedÖacket fromÜeader "

350 + 
qp
.
	`gëTy≥
() + "Éxiting ... " );

351 
Sy°em
.
	`exô
(13);

354 
zk
.
	`gëZKD©aba£
().
	`£éa°Pro˚s£dZxid
(
qp
.
	`gëZxid
());

355 
zk
.
	`¸óãSessi⁄Tøckî
();

357 
œ°Queued
 = 0;

362 
boﬁón
 
¢≠shŸTakí
 = 
Ál£
;

364 
ouãrLo›
:

365 
£lf
.
	`isRu¬ög
()) {

366 
	`ªadPackë
(
qp
);

367 
qp
.
	`gëTy≥
()) {

368 
Lódî
.
PROPOSAL
:

369 
PackëInFlight
 
pif
 = 
√w
 
	`PackëInFlight
();

370 
pif
.
hdr
 = 
√w
 
	`TxnHódî
();

371 
pif
.
ªc
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
qp
.
	`gëD©a
(),Öif.
hdr
);

372 i‡(
pif
.
hdr
.
	`gëZxid
(Ë!
œ°Queued
 + 1) {

373 
LOG
.
	`w¨n
("Got zxid 0x"

374 + 
L⁄g
.
	`toHexSåög
(
pif
.
hdr
.
	`gëZxid
())

376 + 
L⁄g
.
	`toHexSåög
(
œ°Queued
 + 1));

378 
œ°Queued
 = 
pif
.
hdr
.
	`gëZxid
();

379 
∑ckësNŸCommôãd
.
	`add
(
pif
);

381 
Lódî
.
COMMIT
:

382 i‡(!
¢≠shŸTakí
) {

383 
pif
 = 
∑ckësNŸCommôãd
.
	`≥ekFú°
();

384 i‡(
pif
.
hdr
.
	`gëZxid
(Ë!
qp
.getZxid()) {

385 
LOG
.
	`w¨n
("Commôtög " + 
qp
.
	`gëZxid
(Ë+ ", buà√xà¥›oß»i†" + 
pif
.
hdr
.getZxid());

387 
zk
.
	`¥o˚ssTxn
(
pif
.
hdr
,Öif.
ªc
);

388 
∑ckësNŸCommôãd
.
	`ªmove
();

391 
∑ckësCommôãd
.
	`add
(
qp
.
	`gëZxid
());

394 
Lódî
.
INFORM
:

395 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

396 
Rec‹d
 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
qp
.
	`gëD©a
(), 
hdr
);

397 
zk
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

399 
Lódî
.
UPTODATE
:

400 i‡(!
¢≠shŸTakí
) {

401 
zk
.
	`èkeS«pshŸ
();

402 
£lf
.
	`£tCuºítEpoch
(
√wEpoch
);

404 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
zk
);

405  
ouãrLo›
;

406 
Lódî
.
NEWLEADER
:

407 
zk
.
	`èkeS«pshŸ
();

408 
£lf
.
	`£tCuºítEpoch
(
√wEpoch
);

409 
¢≠shŸTakí
 = 
åue
;

410 
	`wrôePackë
(
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, 
√wLódîZxid
, 
nuŒ
,ÇuŒ), 
åue
);

415 
ack
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(
√wEpoch
, 0));

416 
	`wrôePackë
(
ack
, 
åue
);

417 
sock
.
	`£tSoTimeout
(
£lf
.
tickTime
 * sñf.
syncLimô
);

418 
zk
.
	`°¨tup
();

420 i‡(
zk
 
ö°™˚of
 
FﬁlowîZooKì≥rSîvî
) {

421 
FﬁlowîZooKì≥rSîvî
 
fzk
 = (FﬁlowîZooKì≥rSîvî)
zk
;

422 
PackëInFlight
 
p
: 
∑ckësNŸCommôãd
) {

423 
fzk
.
	`logReque°
(
p
.
hdr
,Ö.
ªc
);

425 
L⁄g
 
zxid
: 
∑ckësCommôãd
) {

426 
fzk
.
	`commô
(
zxid
);

429 
	}
}

431 
¥Ÿe˘ed
 
	$ªvÆid©e
(
Qu‹umPackë
 
qp
Ë
throws
 
IOEx˚±i⁄
 {

432 
ByãAºayI≈utSåóm
 
bis
 = 
√w
 
	`ByãAºayI≈utSåóm
(
qp


433 .
	`gëD©a
());

434 
D©aI≈utSåóm
 
dis
 = 
√w
 
	`D©aI≈utSåóm
(
bis
);

435 
£ssi⁄Id
 = 
dis
.
	`ªadL⁄g
();

436 
boﬁón
 
vÆid
 = 
dis
.
	`ªadBoﬁón
();

437 
SîvîCnxn
 
˙xn
 = 
≥ndögRevÆid©i⁄s


438 .
	`ªmove
(
£ssi⁄Id
);

439 i‡(
˙xn
 =
nuŒ
) {

440 
LOG
.
	`w¨n
("Missing session 0x"

441 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

444 
zk
.
	`föishSessi⁄Inô
(
˙xn
, 
vÆid
);

446 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

447 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

448 
ZooTø˚
.
SESSION_TRACE_MASK
,

449 "Sessi⁄ 0x" + 
L⁄g
.
	`toHexSåög
(
£ssi⁄Id
)

450 + " i†vÆid: " + 
vÆid
);

452 
	}
}

454 
¥Ÿe˘ed
 
	$pög
(
Qu‹umPackë
 
qp
Ë
throws
 
IOEx˚±i⁄
 {

456 
ByãAºayOuçutSåóm
 
bos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

457 
D©aOuçutSåóm
 
dos
 = 
√w
 
	`D©aOuçutSåóm
(
bos
);

458 
HashM≠
<
L⁄g
, 
I¡egî
> 
touchTabÀ
 = 
zk


459 .
	`gëTouchS«pshŸ
();

460 
E¡ry
<
L⁄g
, 
I¡egî
> 
íåy
 : 
touchTabÀ
.
	`íåySë
()) {

461 
dos
.
	`wrôeL⁄g
(
íåy
.
	`gëKey
());

462 
dos
.
	`wrôeI¡
(
íåy
.
	`gëVÆue
());

464 
qp
.
	`£tD©a
(
bos
.
	`toByãAºay
());

465 
	`wrôePackë
(
qp
, 
åue
);

466 
	}
}

472 
public
 
	$shutdown
() {

474 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
nuŒ
);

476 
£lf
.
˙xnFa˘‹y
.
	`˛o£AŒ
();

478 i‡(
zk
 !
nuŒ
) {

479 
zk
.
	`shutdown
();

481 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈utSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	glocks
.
	gRì¡ø¡RódWrôeLock
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	glocks
.
	gRì¡ø¡RódWrôeLock
.
	gRódLock
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gPr›oßl
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

48 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

49 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

56 
public
 cœs†
	cLó∫îH™dÀr
 
exãnds
 
	mThªad
 {

57 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Ló∫îH™dÀr
.
˛ass
);

59 
¥Ÿe˘ed
 
föÆ
 
Sockë
 
	msock
;

61 
public
 
Sockë
 
	$gëSockë
() {

62  
sock
;

65 
föÆ
 
Lódî
 
Àadî
;

67 
tickOfLa°Ack
;

72 
¥Ÿe˘ed
 
sid
 = 0;

74 
	$gëSid
(){

75  
sid
;

76 
	}
}

78 
¥Ÿe˘ed
 
	gvîsi⁄
 = 0x1;

80 
	$gëVîsi⁄
() {

81  
vîsi⁄
;

82 
	}
}

87 
föÆ
 
	gLökedBlockögQueue
<
	gQu‹umPackë
> 
	gqueuedPackës
 =

88 
√w
 
LökedBlockögQueue
<
Qu‹umPackë
>();

90 
¥iv©e
 
Bö¨yI≈utArchive
 
	gü
;

92 
¥iv©e
 
Bö¨yOuçutArchive
 
	gﬂ
;

94 
¥iv©e
 
Buf„ªdOuçutSåóm
 
	gbuf„ªdOuçut
;

96 
	$Ló∫îH™dÀr
(
Sockë
 
sock
, 
Lódî
 
Àadî
Ë
throws
 
IOEx˚±i⁄
 {

97 
	`su≥r
("Ló∫îH™dÀr-" + 
sock
.
	`gëRemŸeSockëAddªss
());

98 
this
.
sock
 = sock;

99 
this
.
Àadî
 =Üeader;

100 
Àadî
.
	`addLó∫îH™dÀr
(
this
);

101 
	}
}

103 @
Ovîride


104 
public
 
Såög
 
	$toSåög
() {

105 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

106 
sb
.
	`≠≥nd
("Ló∫îH™dÀ∏").≠≥nd(
sock
);

107 
sb
.
	`≠≥nd
("ÅickOfLa°Ack:").≠≥nd(
	`tickOfLa°Ack
());

108 
sb
.
	`≠≥nd
(" syn˚d?:").≠≥nd(
	`syn˚d
());

109 
sb
.
	`≠≥nd
(" queuedPackëLígth:").≠≥nd(
queuedPackës
.
	`size
());

110  
sb
.
	`toSåög
();

111 
	}
}

116 
föÆ
 
Qu‹umPackë
 
	g¥›oßlOfDóth
 = 
√w
 QuorumPacket();

118 
¥iv©e
 
Ló∫îTy≥
 
	gÀ¨√rTy≥
 = Ló∫îTy≥.
PARTICIPANT
;

119 
public
 
Ló∫îTy≥
 
	$gëLó∫îTy≥
() {

120  
À¨√rTy≥
;

121 
	}
}

129 
¥iv©e
 
	$£ndPackës
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

130 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PACKET_TRACE_MASK
;

131 
åue
) {

132 
åy
 {

133 
Qu‹umPackë
 
p
;

134 
p
 = 
queuedPackës
.
	`pﬁl
();

135 i‡(
p
 =
nuŒ
) {

136 
buf„ªdOuçut
.
	`Êush
();

137 
p
 = 
queuedPackës
.
	`èke
();

140 i‡(
p
 =
¥›oßlOfDóth
) {

144 i‡(
p
.
	`gëTy≥
(Ë=
Lódî
.
PING
) {

145 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PING_TRACE_MASK
;

147 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

148 
ZooTø˚
.
	`logQu‹umPackë
(
LOG
, 
åa˚Mask
, 'o', 
p
);

150 
ﬂ
.
	`wrôeRec‹d
(
p
, "packet");

151 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

152 i‡(!
sock
.
	`isClo£d
()) {

153 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄áà" + 
this
, 
e
);

154 
åy
 {

158 
sock
.
	`˛o£
();

159 } 
	`ˇtch
(
IOEx˚±i⁄
 
õ
) {

160 
LOG
.
	`w¨n
("Eº‹ closög sockë f‹ h™dÀ∏" + 
this
, 
õ
);

166 
	}
}

168 
public
 
Såög
 
	$∑ckëToSåög
(
Qu‹umPackë
 
p
) {

169 i‡(
åue
)

170  
nuŒ
;

171 
Såög
 
ty≥
 = 
nuŒ
;

172 
Såög
 
mess
 = 
nuŒ
;

173 
Rec‹d
 
txn
 = 
nuŒ
;

175 
p
.
	`gëTy≥
()) {

176 
Lódî
.
ACK
:

177 
ty≥
 = "ACK";

179 
Lódî
.
COMMIT
:

180 
ty≥
 = "COMMIT";

182 
Lódî
.
FOLLOWERINFO
:

183 
ty≥
 = "FOLLOWERINFO";

185 
Lódî
.
NEWLEADER
:

186 
ty≥
 = "NEWLEADER";

188 
Lódî
.
PING
:

189 
ty≥
 = "PING";

191 
Lódî
.
PROPOSAL
:

192 
ty≥
 = "PROPOSAL";

193 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

194 
åy
 {

195 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
p
.
	`gëD©a
(), 
hdr
);

197 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

198 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄",
e
);

201 
Lódî
.
REQUEST
:

202 
ty≥
 = "REQUEST";

204 
Lódî
.
REVALIDATE
:

205 
ty≥
 = "REVALIDATE";

206 
ByãAºayI≈utSåóm
 
bis
 = 
√w
 
	`ByãAºayI≈utSåóm
(
p
.
	`gëD©a
());

207 
D©aI≈utSåóm
 
dis
 = 
√w
 
	`D©aI≈utSåóm
(
bis
);

208 
åy
 {

209 
id
 = 
dis
.
	`ªadL⁄g
();

210 
mess
 = " sessi⁄id = " + 
id
;

211 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

212 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

216 
Lódî
.
UPTODATE
:

217 
ty≥
 = "UPTODATE";

220 
ty≥
 = "UNKNOWN" + 
p
.
	`gëTy≥
();

222 
Såög
 
íåy
 = 
nuŒ
;

223 i‡(
ty≥
 !
nuŒ
) {

224 
íåy
 = 
ty≥
 + " " + 
L⁄g
.
	`toHexSåög
(
p
.
	`gëZxid
()Ë+ " " + 
mess
;

226  
íåy
;

227 
	}
}

233 @
Ovîride


234 
public
 
	$run
() {

235 
åy
 {

236 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
√w
 
	`Buf„ªdI≈utSåóm
(
sock


237 .
	`gëI≈utSåóm
()));

238 
buf„ªdOuçut
 = 
√w
 
	`Buf„ªdOuçutSåóm
(
sock
.
	`gëOuçutSåóm
());

239 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
buf„ªdOuçut
);

241 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

242 
ü
.
	`ªadRec‹d
(
qp
, "packet");

243 if(
qp
.
	`gëTy≥
(Ë!
Lódî
.
FOLLOWERINFO
 && qp.gëTy≥(Ë!Lódî.
OBSERVERINFO
){

244 
LOG
.
	`îr‹
("Fú°Öackë " + 
qp
.
	`toSåög
()

248 
byã
 
À¨√rInfoD©a
[] = 
qp
.
	`gëD©a
();

249 i‡(
À¨√rInfoD©a
 !
nuŒ
) {

250 i‡(
À¨√rInfoD©a
.
Àngth
 == 8) {

251 
ByãBuf„r
 
bbsid
 = ByãBuf„r.
	`wøp
(
À¨√rInfoD©a
);

252 
this
.
sid
 = 
bbsid
.
	`gëL⁄g
();

254 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
();

255 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ByãBuf„r
.
	`wøp
(
À¨√rInfoD©a
), 
li
);

256 
this
.
sid
 = 
li
.
	`gëSîvîid
();

257 
this
.
vîsi⁄
 = 
li
.
	`gëPrŸocﬁVîsi⁄
();

260 
this
.
sid
 = 
Àadî
.
fﬁlowîCou¡î
.
	`gëAndDe¸emít
();

263 
LOG
.
	`öfo
("Fﬁlowî sid: " + 
sid
 + " : info : "

264 + 
Àadî
.
£lf
.
qu‹umPìrs
.
	`gë
(
sid
));

266 i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
OBSERVERINFO
) {

267 
À¨√rTy≥
 = 
Ló∫îTy≥
.
OBSERVER
;

270 
œ°Ac˚±edEpoch
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
qp
.
	`gëZxid
());

272 
≥îLa°Zxid
;

273 
SèãSumm¨y
 
ss
 = 
nuŒ
;

274 
zxid
 = 
qp
.
	`gëZxid
();

275 
√wEpoch
 = 
Àadî
.
	`gëEpochToPr›o£
(
this
.
	`gëSid
(), 
œ°Ac˚±edEpoch
);

277 i‡(
this
.
	`gëVîsi⁄
() < 0x10000) {

279 
ïoch
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
zxid
);

280 
ss
 = 
√w
 
	`SèãSumm¨y
(
ïoch
, 
zxid
);

282 
Àadî
.
	`waôF‹EpochAck
(
this
.
	`gëSid
(), 
ss
);

284 
byã
 
vî
[] = 
√w
 byte[4];

285 
ByãBuf„r
.
	`wøp
(
vî
).
	`putI¡
(0x10000);

286 
Qu‹umPackë
 
√wEpochPackë
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
LEADERINFO
, 
ZxidUtûs
.
	`makeZxid
(
√wEpoch
, 0), 
vî
, 
nuŒ
);

287 
ﬂ
.
	`wrôeRec‹d
(
√wEpochPackë
, "packet");

288 
buf„ªdOuçut
.
	`Êush
();

289 
Qu‹umPackë
 
ackEpochPackë
 = 
√w
 
	`Qu‹umPackë
();

290 
ü
.
	`ªadRec‹d
(
ackEpochPackë
, "packet");

291 i‡(
ackEpochPackë
.
	`gëTy≥
(Ë!
Lódî
.
ACKEPOCH
) {

292 
LOG
.
	`îr‹
(
ackEpochPackë
.
	`toSåög
()

296 
ByãBuf„r
 
bbïoch
 = ByãBuf„r.
	`wøp
(
ackEpochPackë
.
	`gëD©a
());

297 
ss
 = 
√w
 
	`SèãSumm¨y
(
bbïoch
.
	`gëI¡
(), 
ackEpochPackë
.
	`gëZxid
());

298 
Àadî
.
	`waôF‹EpochAck
(
this
.
	`gëSid
(), 
ss
);

300 
≥îLa°Zxid
 = 
ss
.
	`gëLa°Zxid
();

303 
∑ckëToSíd
 = 
Lódî
.
SNAP
;

304 
zxidToSíd
 = 0;

305 
ÀadîLa°Zxid
 = 0;

307 
upd©es
 = 
≥îLa°Zxid
;

312 
Rì¡ø¡RódWrôeLock
 
lock
 = 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëLogLock
();

313 
RódLock
 
æ
 = 
lock
.
	`ªadLock
();

314 
åy
 {

315 
æ
.
	`lock
();

316 
föÆ
 
maxCommôãdLog
 = 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëmaxCommôãdLog
();

317 
föÆ
 
möCommôãdLog
 = 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëmöCommôãdLog
();

318 
LOG
.
	`öfo
("Synchr⁄izög wôh Fﬁlowî sid: " + 
sid


319 +" maxCommôãdLog=0x"+
L⁄g
.
	`toHexSåög
(
maxCommôãdLog
)

320 +" möCommôãdLog=0x"+
L⁄g
.
	`toHexSåög
(
möCommôãdLog
)

321 +"ÖìrLa°Zxid=0x"+
L⁄g
.
	`toHexSåög
(
≥îLa°Zxid
));

323 
LökedLi°
<
Pr›oßl
> 
¥›oßls
 = 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëCommôãdLog
();

325 i‡(
¥›oßls
.
	`size
() != 0) {

326 
LOG
.
	`debug
("¥›oß»sizêi†{}", 
¥›oßls
.
	`size
());

327 i‡((
maxCommôãdLog
 >
≥îLa°Zxid
)

328 && (
möCommôãdLog
 <
≥îLa°Zxid
)) {

329 
LOG
.
	`debug
("SendingÖroposalsÅo follower");

333 
¥evPr›oßlZxid
 = 
möCommôãdLog
;

338 
boﬁón
 
fú°Packë
=
åue
;

343 
∑ckëToSíd
 = 
Lódî
.
DIFF
;

344 
zxidToSíd
 = 
maxCommôãdLog
;

346 
Pr›oßl
 
¥›o£
: 
¥›oßls
) {

348 i‡(
¥›o£
.
∑ckë
.
	`gëZxid
(Ë<
≥îLa°Zxid
) {

349 
¥evPr›oßlZxid
 = 
¥›o£
.
∑ckë
.
	`gëZxid
();

354 i‡(
fú°Packë
) {

355 
fú°Packë
 = 
Ál£
;

357 i‡(
¥evPr›oßlZxid
 < 
≥îLa°Zxid
) {

359 
∑ckëToSíd
 = 
Lódî
.
TRUNC
;

360 
zxidToSíd
 = 
¥evPr›oßlZxid
;

361 
upd©es
 = 
zxidToSíd
;

364 
	`queuePackë
(
¥›o£
.
∑ckë
);

365 
Qu‹umPackë
 
qcommô
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
COMMIT
, 
¥›o£
.
∑ckë
.
	`gëZxid
(),

366 
nuŒ
,Çull);

367 
	`queuePackë
(
qcommô
);

370 } i‡(
≥îLa°Zxid
 > 
maxCommôãdLog
) {

371 
LOG
.
	`debug
("Sending TRUNCÅo follower zxidToSend=0x{} updates=0x{}",

372 
L⁄g
.
	`toHexSåög
(
maxCommôãdLog
),

373 
L⁄g
.
	`toHexSåög
(
upd©es
));

375 
∑ckëToSíd
 = 
Lódî
.
TRUNC
;

376 
zxidToSíd
 = 
maxCommôãdLog
;

377 
upd©es
 = 
zxidToSíd
;

379 
LOG
.
	`w¨n
("UnhandledÖroposal scenario");

381 } i‡(
≥îLa°Zxid
 =
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
()) {

385 
LOG
.
	`debug
("committedLog isÉmpty butÜeaderánd follower "

387 
L⁄g
.
	`toHexSåög
(
≥îLa°Zxid
));

388 
∑ckëToSíd
 = 
Lódî
.
DIFF
;

389 
zxidToSíd
 = 
≥îLa°Zxid
;

392 
LOG
.
	`debug
("proposals isÉmpty");

395 
LOG
.
	`öfo
("Sídög " + 
Lódî
.
	`gëPackëTy≥
(
∑ckëToSíd
));

396 
ÀadîLa°Zxid
 = 
Àadî
.
	`°¨tF‹w¨dög
(
this
, 
upd©es
);

398 } 
föÆly
 {

399 
æ
.
	`u∆ock
();

402 
Qu‹umPackë
 
√wLódîQP
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
NEWLEADER
,

403 
ZxidUtûs
.
	`makeZxid
(
√wEpoch
, 0), 
nuŒ
,Çull);

404 i‡(
	`gëVîsi⁄
() < 0x10000) {

405 
ﬂ
.
	`wrôeRec‹d
(
√wLódîQP
, "packet");

407 
queuedPackës
.
	`add
(
√wLódîQP
);

409 
buf„ªdOuçut
.
	`Êush
();

411 i‡(
∑ckëToSíd
 =
Lódî
.
SNAP
) {

412 
zxidToSíd
 = 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
();

414 
ﬂ
.
	`wrôeRec‹d
(
√w
 
	`Qu‹umPackë
(
∑ckëToSíd
, 
zxidToSíd
, 
nuŒ
,Çull), "packet");

415 
buf„ªdOuçut
.
	`Êush
();

418 i‡(
∑ckëToSíd
 =
Lódî
.
SNAP
) {

419 
LOG
.
	`öfo
("Sending snapshotÜast zxid ofÖeer is 0x"

420 + 
L⁄g
.
	`toHexSåög
(
≥îLa°Zxid
) + " "

422 + 
L⁄g
.
	`toHexSåög
(
ÀadîLa°Zxid
)

424 + 
L⁄g
.
	`toHexSåög
(
zxidToSíd
));

426 
Àadî
.
zk
.
	`gëZKD©aba£
().
	`£rülizeS«pshŸ
(
ﬂ
);

427 
ﬂ
.
	`wrôeSåög
("BenWasHere", "signature");

429 
buf„ªdOuçut
.
	`Êush
();

432 
√w
 
	`Thªad
() {

433 
public
 
	`run
() {

434 
Thªad
.
	`cuºítThªad
().
	`£tName
(

435 "Sídî-" + 
sock
.
	`gëRemŸeSockëAddªss
());

436 
åy
 {

437 
	`£ndPackës
();

438 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

439 
LOG
.
	`w¨n
("U√x≥˘ed i¡îru±i⁄",
e
);

442 }.
	`°¨t
();

449 
qp
 = 
√w
 
	`Qu‹umPackë
();

450 
ü
.
	`ªadRec‹d
(
qp
, "packet");

451 if(
qp
.
	`gëTy≥
(Ë!
Lódî
.
ACK
){

452 
LOG
.
	`îr‹
("NextÖacket was supposedÅo beán ACK");

455 
Àadî
.
	`¥o˚ssAck
(
this
.
sid
, 
qp
.
	`gëZxid
(), 
sock
.
	`gëLoˇlSockëAddªss
());

458 
sock
.
	`£tSoTimeout
(
Àadî
.
£lf
.
tickTime
 *Üódî.£lf.
syncLimô
);

463 
	`synchr⁄ized
(
Àadî
.
zk
){

464 !
Àadî
.
zk
.
	`isRu¬ög
(Ë&& !
this
.
	`isI¡îru±ed
()){

465 
Àadî
.
zk
.
	`waô
(20);

472 
queuedPackës
.
	`add
(
√w
 
	`Qu‹umPackë
(
Lódî
.
UPTODATE
, -1, 
nuŒ
,Çull));

474 
åue
) {

475 
qp
 = 
√w
 
	`Qu‹umPackë
();

476 
ü
.
	`ªadRec‹d
(
qp
, "packet");

478 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PACKET_TRACE_MASK
;

479 i‡(
qp
.
	`gëTy≥
(Ë=
Lódî
.
PING
) {

480 
åa˚Mask
 = 
ZooTø˚
.
SERVER_PING_TRACE_MASK
;

482 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

483 
ZooTø˚
.
	`logQu‹umPackë
(
LOG
, 
åa˚Mask
, 'i', 
qp
);

485 
tickOfLa°Ack
 = 
Àadî
.
£lf
.
tick
;

488 
ByãBuf„r
 
bb
;

489 
£ssi⁄Id
;

490 
cxid
;

491 
ty≥
;

493 
qp
.
	`gëTy≥
()) {

494 
Lódî
.
ACK
:

495 i‡(
this
.
À¨√rTy≥
 =
Ló∫îTy≥
.
OBSERVER
) {

496 i‡(
LOG
.
	`isDebugE«bÀd
()) {

497 
LOG
.
	`debug
("Re˚ived ACK from Ob£rvî " + 
this
.
sid
);

500 
Àadî
.
	`¥o˚ssAck
(
this
.
sid
, 
qp
.
	`gëZxid
(), 
sock
.
	`gëLoˇlSockëAddªss
());

502 
Lódî
.
PING
:

504 
ByãAºayI≈utSåóm
 
bis
 = 
√w
 
	`ByãAºayI≈utSåóm
(
qp


505 .
	`gëD©a
());

506 
D©aI≈utSåóm
 
dis
 = 
√w
 
	`D©aI≈utSåóm
(
bis
);

507 
dis
.
	`avaûabÀ
() > 0) {

508 
£ss
 = 
dis
.
	`ªadL⁄g
();

509 
to
 = 
dis
.
	`ªadI¡
();

510 
Àadî
.
zk
.
	`touch
(
£ss
, 
to
);

513 
Lódî
.
REVALIDATE
:

514 
bis
 = 
√w
 
	`ByãAºayI≈utSåóm
(
qp
.
	`gëD©a
());

515 
dis
 = 
√w
 
	`D©aI≈utSåóm
(
bis
);

516 
id
 = 
dis
.
	`ªadL⁄g
();

517 
to
 = 
dis
.
	`ªadI¡
();

518 
ByãAºayOuçutSåóm
 
bos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

519 
D©aOuçutSåóm
 
dos
 = 
√w
 
	`D©aOuçutSåóm
(
bos
);

520 
dos
.
	`wrôeL⁄g
(
id
);

521 
boﬁón
 
vÆid
 = 
Àadî
.
zk
.
	`touch
(
id
, 
to
);

522 i‡(
vÆid
) {

523 
åy
 {

527 
Àadî
.
zk
.
	`£tOw√r
(
id
, 
this
);

528 } 
	`ˇtch
 (
Sessi⁄ExpúedEx˚±i⁄
 
e
) {

529 
LOG
.
	`îr‹
("Somehow sessi⁄ " + 
L⁄g
.
	`toHexSåög
(
id
Ë+ "ÉxpúedÑighàa·î beögÑíewed! (impossibÀ)", 
e
);

532 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

533 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

534 
ZooTø˚
.
SESSION_TRACE_MASK
,

535 "Sessi⁄ 0x" + 
L⁄g
.
	`toHexSåög
(
id
)

536 + " i†vÆid: "+ 
vÆid
);

538 
dos
.
	`wrôeBoﬁón
(
vÆid
);

539 
qp
.
	`£tD©a
(
bos
.
	`toByãAºay
());

540 
queuedPackës
.
	`add
(
qp
);

542 
Lódî
.
REQUEST
:

543 
bb
 = 
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
());

544 
£ssi⁄Id
 = 
bb
.
	`gëL⁄g
();

545 
cxid
 = 
bb
.
	`gëI¡
();

546 
ty≥
 = 
bb
.
	`gëI¡
();

547 
bb
 = bb.
	`¶i˚
();

548 
Reque°
 
si
;

549 if(
ty≥
 =
OpCode
.
sync
){

550 
si
 = 
√w
 
	`Ló∫îSyncReque°
(
this
, 
£ssi⁄Id
, 
cxid
, 
ty≥
, 
bb
, 
qp
.
	`gëAuthöfo
());

552 
si
 = 
√w
 
	`Reque°
(
nuŒ
, 
£ssi⁄Id
, 
cxid
, 
ty≥
, 
bb
, 
qp
.
	`gëAuthöfo
());

554 
si
.
	`£tOw√r
(
this
);

555 
Àadî
.
zk
.
	`submôReque°
(
si
);

560 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

561 i‡(
sock
 !
nuŒ
 && !sock.
	`isClo£d
()) {

562 
LOG
.
	`îr‹
("UnexpectedÉxception causing shutdown while sock "

563 + "°û»›í", 
e
);

566 
åy
 {

567 
sock
.
	`˛o£
();

568 } 
	`ˇtch
(
IOEx˚±i⁄
 
õ
) {

572 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

573 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄ causög shutdown", 
e
);

574 } 
föÆly
 {

575 
LOG
.
	`w¨n
("******* GOODBYE "

576 + (
sock
 !
nuŒ
 ? sock.
	`gëRemŸeSockëAddªss
() : "<null>")

578 
	`shutdown
();

580 
	}
}

582 
public
 
	$shutdown
() {

584 
åy
 {

585 
queuedPackës
.
	`put
(
¥›oßlOfDóth
);

586 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

587 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄", 
e
);

589 
åy
 {

590 i‡(
sock
 !
nuŒ
 && !sock.
	`isClo£d
()) {

591 
sock
.
	`˛o£
();

593 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

594 
LOG
.
	`w¨n
("Ign‹ög u√x≥˘edÉx˚±i⁄ durög sockë clo£", 
e
);

596 
this
.
	`öãºu±
();

597 
Àadî
.
	`ªmoveLó∫îH™dÀr
(
this
);

598 
	}
}

600 
public
 
	$tickOfLa°Ack
() {

601  
tickOfLa°Ack
;

602 
	}
}

607 
public
 
	$pög
() {

608 
id
;

609 
	`synchr⁄ized
(
Àadî
) {

610 
id
 = 
Àadî
.
œ°Pr›o£d
;

612 
Qu‹umPackë
 
pög
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
PING
, 
id
,

613 
nuŒ
,Çull);

614 
	`queuePackë
(
pög
);

615 
	}
}

617 
	$queuePackë
(
Qu‹umPackë
 
p
) {

618 
queuedPackës
.
	`add
(
p
);

619 
	}
}

621 
public
 
boﬁón
 
	$syn˚d
() {

622  
	`isAlive
()

623 && 
tickOfLa°Ack
 >
Àadî
.
£lf
.
tick
 -Üódî.£lf.
syncLimô
;

624 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄Tøckî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄TøckîIm∂
;

32 
public
 cœs†
	cLó∫îSessi⁄Tøckî
 
im∂emíts
 
	mSessi⁄Tøckî
 {

33 
Sessi⁄Expúî
 
	mexpúî
;

35 
	mHashM≠
<
	mL⁄g
, 
	mI¡egî
> 
	mtouchTabÀ
 = 
√w
 
HashM≠
<
L⁄g
, Integer>();

36 
	m£rvîId
 = 1;

37 
	m√xtSessi⁄Id
=0;

39 
¥iv©e
 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mI¡egî
> 
	m£ssi⁄sWôhTimeouts
;

41 
public
 
Ló∫îSessi⁄Tøckî
(
Sessi⁄Expúî
 
expúî
,

42 
C⁄cuºítHashM≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄sWôhTimeouts
, 
id
) {

43 
	mthis
.
	mexpúî
 = 
expúî
;

44 
	mthis
.
	m£ssi⁄sWôhTimeouts
 = 
£ssi⁄sWôhTimeouts
;

45 
	mthis
.
	m£rvîId
 = 
id
;

46 
	m√xtSessi⁄Id
 = 
Sessi⁄TøckîIm∂
.
öôülizeNextSessi⁄
(
this
.
£rvîId
);

50 
synchr⁄ized
 
public
 
	$ªmoveSessi⁄
(
£ssi⁄Id
) {

51 
£ssi⁄sWôhTimeouts
.
	`ªmove
(
£ssi⁄Id
);

52 
touchTabÀ
.
	`ªmove
(
£ssi⁄Id
);

53 
	}
}

55 
public
 
	$shutdown
() {

56 
	}
}

58 
synchr⁄ized
 
public
 
	$addSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
) {

59 
£ssi⁄sWôhTimeouts
.
	`put
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

60 
touchTabÀ
.
	`put
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

61 
	}
}

63 
synchr⁄ized
 
public
 
boﬁón
 
	$touchSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
) {

64 
touchTabÀ
.
	`put
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

65  
åue
;

66 
	}
}

68 
synchr⁄ized
 
	gHashM≠
<
	gL⁄g
, 
	gI¡egî
> 
	$¢≠shŸ
() {

69 
HashM≠
<
L⁄g
, 
I¡egî
> 
ﬁdTouchTabÀ
 = 
touchTabÀ
;

70 
touchTabÀ
 = 
√w
 
HashM≠
<
L⁄g
, 
I¡egî
>();

71  
ﬁdTouchTabÀ
;

72 
	}
}

75 
synchr⁄ized
 
public
 
	$¸óãSessi⁄
(
£ssi⁄Timeout
) {

76  (
√xtSessi⁄Id
++);

77 
	}
}

79 
public
 
	$checkSessi⁄
(
£ssi⁄Id
, 
Obje˘
 
ow√r
) {

81 
	}
}

83 
public
 
	$£tOw√r
(
£ssi⁄Id
, 
Obje˘
 
ow√r
) {

85 
	}
}

87 
public
 
	$dumpSessi⁄s
(
PrötWrôî
 
pwrôî
) {

90 
pwrôî
.
	`¥öén
(
	`toSåög
());

91 
	}
}

93 
public
 
	$£tSessi⁄Closög
(
£ssi⁄Id
) {

95 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerSyncRequest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

27 
public
 cœs†
	cLó∫îSyncReque°
 
exãnds
 
	mReque°
 {

28 
Ló∫îH™dÀr
 
	mfh
;

29 
public
 
Ló∫îSyncReque°
(
Ló∫îH™dÀr
 
fh
, 
£ssi⁄Id
, 
xid
, 
ty≥
,

30 
ByãBuf„r
 
bb
, 
Li°
<
Id
> 
authInfo
) {

31 
su≥r
(
nuŒ
, 
£ssi⁄Id
, 
xid
, 
ty≥
, 
bb
, 
authInfo
);

32 
	mthis
.
	mfh
 = 
fh
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªeBón
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîBón
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

33 
public
 
ab°ø˘
 cœs†
	cLó∫îZooKì≥rSîvî
 
exãnds
 
	mQu‹umZooKì≥rSîvî
 {

34 
public
 
	$Ló∫îZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
, 
tickTime
,

35 
möSessi⁄Timeout
, 
maxSessi⁄Timeout
,

36 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
, 
Qu‹umPìr
 
£lf
)

37 
throws
 
IOEx˚±i⁄


39 
	`su≥r
(
logFa˘‹y
, 
tickTime
, 
möSessi⁄Timeout
, 
maxSessi⁄Timeout
,

40 
åìBuûdî
, 
zkDb
, 
£lf
);

49 
ab°ø˘
 
public
 
Ló∫î
 
	`gëLó∫î
();

56 
¥Ÿe˘ed
 
HashM≠
<
L⁄g
, 
I¡egî
> 
	$gëTouchS«pshŸ
() {

57 i‡(
£ssi⁄Tøckî
 !
nuŒ
) {

58  ((
Ló∫îSessi⁄Tøckî
Ë
£ssi⁄Tøckî
).
	`¢≠shŸ
();

60  
√w
 
HashM≠
<
L⁄g
, 
I¡egî
>();

61 
	}
}

67 @
Ovîride


68 
public
 
	$gëSîvîId
() {

69  
£lf
.
	`gëId
();

70 
	}
}

72 @
Ovîride


73 
public
 
	$¸óãSessi⁄Tøckî
() {

74 
£ssi⁄Tøckî
 = 
√w
 
	`Ló∫îSessi⁄Tøckî
(
this
, 
	`gëZKD©aba£
().
	`gëSessi⁄WôhTimeOuts
(),

75 
£lf
.
	`gëId
());

76 
	}
}

78 @
Ovîride


79 
¥Ÿe˘ed
 
	$°¨tSessi⁄Tøckî
(Ë{
	}
}

81 @
Ovîride


82 
¥Ÿe˘ed
 
	$ªvÆid©eSessi⁄
(
SîvîCnxn
 
˙xn
, 
£ssi⁄Id
,

83 
£ssi⁄Timeout
Ë
throws
 
IOEx˚±i⁄
 {

84 
	`gëLó∫î
().
	`vÆid©eSessi⁄
(
˙xn
, 
£ssi⁄Id
, 
£ssi⁄Timeout
);

85 
	}
}

87 @
Ovîride


88 
¥Ÿe˘ed
 
	$ªgi°îJMX
() {

90 
åy
 {

91 
jmxD©aTªeBón
 = 
√w
 
	`D©aTªeBón
(
	`gëZKD©aba£
().
	`gëD©aTªe
());

92 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxD©aTªeBón
, 
jmxSîvîBón
);

93 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

94 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

95 
jmxD©aTªeBón
 = 
nuŒ
;

97 
	}
}

99 
public
 
	$ªgi°îJMX
(
ZooKì≥rSîvîBón
 
£rvîBón
,

100 
LoˇlPìrBón
 
loˇlPìrBón
)

103 i‡(
£lf
.
jmxLódîEÀ˘i⁄Bón
 !
nuŒ
) {

104 
åy
 {

105 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
£lf
.
jmxLódîEÀ˘i⁄Bón
);

106 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

107 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

109 
£lf
.
jmxLódîEÀ˘i⁄Bón
 = 
nuŒ
;

112 
åy
 {

113 
jmxSîvîBón
 = 
£rvîBón
;

114 
MBónRegi°ry
.
	`gëIn°™˚
().(
£rvîBón
, 
loˇlPìrBón
);

115 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

116 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

117 
jmxSîvîBón
 = 
nuŒ
;

119 
	}
}

121 @
Ovîride


122 
¥Ÿe˘ed
 
	$uƒegi°îJMX
() {

124 
åy
 {

125 i‡(
jmxD©aTªeBón
 !
nuŒ
) {

126 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxD©aTªeBón
);

128 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

129 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

131 
jmxD©aTªeBón
 = 
nuŒ
;

132 
	}
}

134 
¥Ÿe˘ed
 
	$uƒegi°îJMX
(
Ló∫î
 
≥î
) {

136 
åy
 {

137 i‡(
jmxSîvîBón
 !
nuŒ
) {

138 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxSîvîBón
);

140 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

141 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

143 
jmxSîvîBón
 = 
nuŒ
;

144 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LocalPeerBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

25 
public
 cœs†
	cLoˇlPìrBón
 
exãnds
 
SîvîBón
 
im∂emíts
 
	mLoˇlPìrMXBón
 {

26 
¥iv©e
 
föÆ
 
Qu‹umPìr
 
	m≥î
;

28 
public
 
	$LoˇlPìrBón
(
Qu‹umPìr
 
≥î
) {

29 
this
.
≥î
 =Öeer;

32 
public
 
Såög
 
	$gëName
() {

33  "ª∂iˇ." + 
≥î
.
	`gëId
();

34 
	}
}

36 
public
 
boﬁón
 
	$isHiddí
() {

37  
Ál£
;

38 
	}
}

40 
public
 
	$gëTickTime
() {

41  
≥î
.
	`gëTickTime
();

42 
	}
}

44 
public
 
	$gëMaxClõ¡CnxnsPîHo°
() {

45  
≥î
.
	`gëMaxClõ¡CnxnsPîHo°
();

46 
	}
}

48 
public
 
	$gëMöSessi⁄Timeout
() {

49  
≥î
.
	`gëMöSessi⁄Timeout
();

50 
	}
}

52 
public
 
	$gëMaxSessi⁄Timeout
() {

53  
≥î
.
	`gëMaxSessi⁄Timeout
();

54 
	}
}

56 
public
 
	$gëInôLimô
() {

57  
≥î
.
	`gëInôLimô
();

58 
	}
}

60 
public
 
	$gëSyncLimô
() {

61  
≥î
.
	`gëSyncLimô
();

62 
	}
}

64 
public
 
	$gëTick
() {

65  
≥î
.
	`gëTick
();

66 
	}
}

68 
public
 
Såög
 
	$gëSèã
() {

69  
≥î
.
	`gëSèã
().
	`toSåög
();

70 
	}
}

72 
public
 
Såög
 
	$gëQu‹umAddªss
() {

73  
≥î
.
	`gëQu‹umAddªss
().
	`toSåög
();

74 
	}
}

76 
public
 
	$gëEÀ˘i⁄Ty≥
() {

77  
≥î
.
	`gëEÀ˘i⁄Ty≥
();

78 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LocalPeerMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

27 
public
 
öãrÁ˚
 
LoˇlPìrMXBón
 
exãnds
 
	gSîvîMXBón
 {

32 
public
 
gëTickTime
();

35 
public
 
gëMaxClõ¡CnxnsPîHo°
();

40 
public
 
gëMöSessi⁄Timeout
();

45 
public
 
gëMaxSessi⁄Timeout
();

50 
public
 
gëInôLimô
();

56 
public
 
gëSyncLimô
();

61 
public
 
gëTick
();

66 
public
 
Såög
 
gëSèã
();

71 
public
 
Såög
 
gëQu‹umAddªss
();

76 
public
 
gëEÀ˘i⁄Ty≥
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Observer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gOb£rvîBón
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

41 
public
 cœs†
	cOb£rvî
 
exãnds
 
	mLó∫î
{

43 
	$Ob£rvî
(
Qu‹umPìr
 
£lf
,
Ob£rvîZooKì≥rSîvî
 
ob£rvîZooKì≥rSîvî
) {

44 
this
.
£lf
 = self;

45 
this
.
zk
=
ob£rvîZooKì≥rSîvî
;

48 @
Ovîride


49 
public
 
Såög
 
	$toSåög
() {

50 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

51 
sb
.
	`≠≥nd
("Ob£rvî ").≠≥nd(
sock
);

52 
sb
.
	`≠≥nd
("ÖendingRevalidationCount:")

53 .
	`≠≥nd
(
≥ndögRevÆid©i⁄s
.
	`size
());

54  
sb
.
	`toSåög
();

55 
	}
}

62 
	$ob£rveLódî
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

63 
zk
.
	`ªgi°îJMX
(
√w
 
	`Ob£rvîBón
(
this
, zk), 
£lf
.
jmxLoˇlPìrBón
);

65 
åy
 {

66 
I√tSockëAddªss
 
addr
 = 
	`födLódî
();

67 
LOG
.
	`öfo
("Ob£rvög " + 
addr
);

68 
åy
 {

69 
	`c⁄√˘ToLódî
(
addr
);

70 
√wLódîZxid
 = 
	`ªgi°îWôhLódî
(
Lódî
.
OBSERVERINFO
);

72 
	`syncWôhLódî
(
√wLódîZxid
);

73 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

74 
£lf
.
	`isRu¬ög
()) {

75 
	`ªadPackë
(
qp
);

76 
	`¥o˚ssPackë
(
qp
);

78 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

79 
LOG
.
	`w¨n
("Ex˚±i⁄ whí ob£rvögÅhêÀadî", 
e
);

80 
åy
 {

81 
sock
.
	`˛o£
();

82 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e1
) {

83 
e1
.
	`¥ötSèckTø˚
();

87 
≥ndögRevÆid©i⁄s
.
	`˛ór
();

89 } 
föÆly
 {

90 
zk
.
	`uƒegi°îJMX
(
this
);

92 
	}
}

99 
¥Ÿe˘ed
 
	$¥o˚ssPackë
(
Qu‹umPackë
 
qp
Ë
throws
 
IOEx˚±i⁄
{

100 
qp
.
	`gëTy≥
()) {

101 
Lódî
.
PING
:

102 
	`pög
(
qp
);

104 
Lódî
.
PROPOSAL
:

105 
LOG
.
	`w¨n
("IgnoringÖroposal");

107 
Lódî
.
COMMIT
:

108 
LOG
.
	`w¨n
("Ignoring commit");

110 
Lódî
.
UPTODATE
:

111 
LOG
.
	`îr‹
("Receivedán UPTODATE messageáfter Observer started");

113 
Lódî
.
REVALIDATE
:

114 
	`ªvÆid©e
(
qp
);

116 
Lódî
.
SYNC
:

117 ((
Ob£rvîZooKì≥rSîvî
)
zk
).
	`sync
();

119 
Lódî
.
INFORM
:

120 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

121 
Rec‹d
 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
qp
.
	`gëD©a
(), 
hdr
);

122 
Reque°
 
ªque°
 = 
√w
 
	`Reque°
 (
nuŒ
, 
hdr
.
	`gëClõ¡Id
(),

123 
hdr
.
	`gëCxid
(),

124 
hdr
.
	`gëTy≥
(), 
nuŒ
,Çull);

125 
ªque°
.
txn
 =Åxn;

126 
ªque°
.
hdr
 = hdr;

127 
Ob£rvîZooKì≥rSîvî
 
obs
 = (Ob£rvîZooKì≥rSîvî)
zk
;

128 
obs
.
	`commôReque°
(
ªque°
);

131 
	}
}

136 
public
 
	$shutdown
() {

137 
LOG
.
	`öfo
("shutdow¿ˇŒed", 
√w
 
	`Ex˚±i⁄
("shutdown Observer"));

138 
su≥r
.
	`shutdown
();

139 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîMXBón
;

27 
public
 
öãrÁ˚
 
Ob£rvîMXBón
 
exãnds
 
	gZooKì≥rSîvîMXBón
 {

31 
public
 
gëPídögRevÆid©i⁄Cou¡
();

36 
public
 
Såög
 
gëQu‹umAddªss
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

35 
public
 cœs†
	cOb£rvîReque°Pro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts


36 
	mReque°Pro˚ss‹
 {

37 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Ob£rvîReque°Pro˚ss‹
.
˛ass
);

39 
Ob£rvîZooKì≥rSîvî
 
	mzks
;

41 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

45 
	mLökedBlockögQueue
<
	mReque°
> 
	mqueuedReque°s
 = 
√w
 
LökedBlockögQueue
<
Reque°
>();

47 
boﬁón
 
	mföished
 = 
Ál£
;

55 
public
 
	$Ob£rvîReque°Pro˚ss‹
(
Ob£rvîZooKì≥rSîvî
 
zks
,

56 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

57 
	`su≥r
("Ob£rvîReque°Pro˚ss‹:" + 
zks
.
	`gëSîvîId
());

58 
this
.
zks
 = zks;

59 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

62 @
Ovîride


63 
public
 
	$run
() {

64 
åy
 {

65 !
föished
) {

66 
Reque°
 
ªque°
 = 
queuedReque°s
.
	`èke
();

67 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

68 
ZooTø˚
.
	`logReque°
(
LOG
, ZooTø˚.
CLIENT_REQUEST_TRACE_MASK
,

69 'F', 
ªque°
, "");

71 i‡(
ªque°
 =
Reque°
.
ªque°OfDóth
) {

77 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

84 
ªque°
.
ty≥
) {

85 
OpCode
.
sync
:

86 
zks
.
≥ndögSyncs
.
	`add
(
ªque°
);

87 
zks
.
	`gëOb£rvî
().
	`ªque°
(
ªque°
);

89 
OpCode
.
¸óã
:

90 
OpCode
.
dñëe
:

91 
OpCode
.
£tD©a
:

92 
OpCode
.
£tACL
:

93 
OpCode
.
¸óãSessi⁄
:

94 
OpCode
.
˛o£Sessi⁄
:

95 
OpCode
.
mu…i
:

96 
zks
.
	`gëOb£rvî
().
	`ªque°
(
ªque°
);

100 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

101 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄ causögÉxô", 
e
);

103 
LOG
.
	`öfo
("ObserverRequestProcessorÉxitedÜoop!");

104 
	}
}

109 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

110 i‡(!
föished
) {

111 
queuedReque°s
.
	`add
(
ªque°
);

113 
	}
}

118 
public
 
	$shutdown
() {

119 
LOG
.
	`öfo
("Shutting down");

120 
föished
 = 
åue
;

121 
queuedReque°s
.
	`˛ór
();

122 
queuedReque°s
.
	`add
(
Reque°
.
ªque°OfDóth
);

123 
√xtPro˚ss‹
.
	`shutdown
();

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítLökedQueue
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gFöÆReque°Pro˚ss‹
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

37 
public
 cœs†
	cOb£rvîZooKì≥rSîvî
 
exãnds
 
	mLó∫îZooKì≥rSîvî
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

39 
LoggîFa˘‹y
.
gëLoggî
(
Ob£rvîZooKì≥rSîvî
.
˛ass
);

44 
¥iv©e
 
CommôPro˚ss‹
 
	mcommôPro˚ss‹
;

45 
¥iv©e
 
SyncReque°Pro˚ss‹
 
	msyncPro˚ss‹
;

50 
	mC⁄cuºítLökedQueue
<
	mReque°
> 
	m≥ndögSyncs
 =

51 
√w
 
C⁄cuºítLökedQueue
<
Reque°
>();

53 
	$Ob£rvîZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
, 
Qu‹umPìr
 
£lf
,

54 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
Ë
throws
 
IOEx˚±i⁄
 {

55 
	`su≥r
(
logFa˘‹y
, 
£lf
.
tickTime
, sñf.
möSessi⁄Timeout
,

56 
£lf
.
maxSessi⁄Timeout
, 
åìBuûdî
, 
zkDb
, self);

59 
public
 
Ob£rvî
 
	$gëOb£rvî
() {

60  
£lf
.
ob£rvî
;

61 
	}
}

63 @
Ovîride


64 
public
 
Ló∫î
 
	$gëLó∫î
() {

65  
£lf
.
ob£rvî
;

66 
	}
}

76 
public
 
	$commôReque°
(
Reque°
 
ªque°
) {

77 
commôPro˚ss‹
.
	`commô
(
ªque°
);

78 
	}
}

84 @
Ovîride


85 
¥Ÿe˘ed
 
	$£tupReque°Pro˚ss‹s
() {

89 
Reque°Pro˚ss‹
 
föÆPro˚ss‹
 = 
√w
 
	`FöÆReque°Pro˚ss‹
(
this
);

90 
commôPro˚ss‹
 = 
√w
 
	`CommôPro˚ss‹
(
föÆPro˚ss‹
,

91 
L⁄g
.
	`toSåög
(
	`gëSîvîId
()), 
åue
);

92 
commôPro˚ss‹
.
	`°¨t
();

93 
fú°Pro˚ss‹
 = 
√w
 
	`Ob£rvîReque°Pro˚ss‹
(
this
, 
commôPro˚ss‹
);

94 ((
Ob£rvîReque°Pro˚ss‹
Ë
fú°Pro˚ss‹
).
	`°¨t
();

95 
syncPro˚ss‹
 = 
√w
 
	`SyncReque°Pro˚ss‹
(
this
,

96 
√w
 
	`SídAckReque°Pro˚ss‹
(
	`gëOb£rvî
()));

97 
syncPro˚ss‹
.
	`°¨t
();

98 
	}
}

103 
synchr⁄ized
 
public
 
	$sync
(){

104 if(
≥ndögSyncs
.
	`size
() ==0){

105 
LOG
.
	`w¨n
("NotÉxpectingá sync.");

109 
Reque°
 
r
 = 
≥ndögSyncs
.
	`ªmove
();

110 
commôPro˚ss‹
.
	`commô
(
r
);

111 
	}
}

113 @
Ovîride


114 
public
 
Såög
 
	$gëSèã
() {

116 
	}
};

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ProposalRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gXidRﬁlovîEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

32 
public
 cœs†
	cPr›oßlReque°Pro˚ss‹
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

33 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

34 
LoggîFa˘‹y
.
gëLoggî
(
Pr›oßlReque°Pro˚ss‹
.
˛ass
);

36 
LódîZooKì≥rSîvî
 
	mzks
;

38 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

40 
SyncReque°Pro˚ss‹
 
	msyncPro˚ss‹
;

42 
public
 
	$Pr›oßlReque°Pro˚ss‹
(
LódîZooKì≥rSîvî
 
zks
,

43 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

44 
this
.
zks
 = zks;

45 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

46 
AckReque°Pro˚ss‹
 
ackPro˚ss‹
 = 
√w
 
	`AckReque°Pro˚ss‹
(
zks
.
	`gëLódî
());

47 
syncPro˚ss‹
 = 
√w
 
	`SyncReque°Pro˚ss‹
(
zks
, 
ackPro˚ss‹
);

53 
public
 
	$öôülize
() {

54 
syncPro˚ss‹
.
	`°¨t
();

55 
	}
}

57 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
Ë
throws
 
Reque°Pro˚ss‹Ex˚±i⁄
 {

71 if(
ªque°
 
ö°™˚of
 
Ló∫îSyncReque°
){

72 
zks
.
	`gëLódî
().
	`¥o˚ssSync
((
Ló∫îSyncReque°
)
ªque°
);

74 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

75 i‡(
ªque°
.
hdr
 !
nuŒ
) {

77 
åy
 {

78 
zks
.
	`gëLódî
().
	`¥›o£
(
ªque°
);

79 } 
	`ˇtch
 (
XidRﬁlovîEx˚±i⁄
 
e
) {

80 
throw
 
√w
 
	`Reque°Pro˚ss‹Ex˚±i⁄
(
e
.
	`gëMesßge
(),É);

82 
syncPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

85 
	}
}

87 
public
 
	$shutdown
() {

88 
LOG
.
	`öfo
("Shutting down");

89 
√xtPro˚ss‹
.
	`shutdown
();

90 
syncPro˚ss‹
.
	`shutdown
();

91 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

24 
public
 
˛ass
 
Qu‹umBón
 
im∂emíts
 
	gQu‹umMXBón
, 
	gZKMBónInfo
 {

25 
¥iv©e
 
föÆ
 
Qu‹umPìr
 
	g≥î
;

26 
¥iv©e
 
föÆ
 
Såög
 
	g«me
;

28 
public
 
Qu‹umBón
(
Qu‹umPìr
 
≥î
){

29 
	gthis
.
	g≥î
 = 
≥î
;

30 
	g«me
 = "RïliˇãdSîvî_id" + 
≥î
.
gëMyid
();

33 
public
 
Såög
 
gëName
() {

34  
	g«me
;

37 
public
 
boﬁón
 
isHiddí
() {

38  
	gÁl£
;

41 
public
 
gëQu‹umSize
() {

42  
	g≥î
.
gëQu‹umSize
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gD©aI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gD©aOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gnio
.
	gBuf„rUndîÊowEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

30 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gUƒesﬁvedAddªssEx˚±i⁄
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gEnumî©i⁄
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gAºayBlockögQueue
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

62 
public
 cœs†
	cQu‹umCnxM™agî
 {

63 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umCnxM™agî
.
˛ass
);

68 
föÆ
 
	mRECV_CAPACITY
 = 100;

71 
föÆ
 
	mSEND_CAPACITY
 = 1;

73 
föÆ
 
	mPACKETMAXSIZE
 = 1024 * 1024;

78 
föÆ
 
	mMAX_CONNECTION_ATTEMPTS
 = 2;

84 
¥iv©e
 
	mob£rvîCou¡î
 = -1;

90 
¥iv©e
 
	m˙xTO
 = 5000;

95 
föÆ
 
Qu‹umPìr
 
	m£lf
;

100 
föÆ
 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mSídW‹kî
> 
	m£ndîW‹kîM≠
;

101 
föÆ
 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mAºayBlockögQueue
<
	mByãBuf„r
>> 
	mqueueSídM≠
;

102 
föÆ
 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mByãBuf„r
> 
	mœ°MesßgeSít
;

107 
public
 
föÆ
 
	mAºayBlockögQueue
<
	mMesßge
> 
	mªcvQueue
;

111 
¥iv©e
 
föÆ
 
Obje˘
 
	mªcvQLock
 = 
√w
 Object();

117 vﬁ©ûê
boﬁón
 
	mshutdown
 = 
Ál£
;

122 
public
 
föÆ
 
Li°íî
 
	mli°íî
;

127 
¥iv©e
 
AtomicI¡egî
 
	mthªadC¡
 = 
√w
 AtomicInteger(0);

129 
public
 cœs†
	cMesßge
 {

130 
Mesßge
(
ByãBuf„r
 
buf„r
, 
sid
) {

131 
	mthis
.
	mbuf„r
 = 
buf„r
;

132 
	mthis
.
	msid
 = 
sid
;

135 
ByãBuf„r
 
	mbuf„r
;

136 
	msid
;

139 
public
 
	$Qu‹umCnxM™agî
(
Qu‹umPìr
 
£lf
) {

140 
this
.
ªcvQueue
 = 
√w
 
AºayBlockögQueue
<
Mesßge
>(
RECV_CAPACITY
);

141 
this
.
queueSídM≠
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
AºayBlockögQueue
<
ByãBuf„r
>>();

142 
this
.
£ndîW‹kîM≠
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
SídW‹kî
>();

143 
this
.
œ°MesßgeSít
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
ByãBuf„r
>();

145 
Såög
 
˙xToVÆue
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.cnxTimeout");

146 if(
˙xToVÆue
 !
nuŒ
){

147 
this
.
˙xTO
 = 
√w
 
	`I¡egî
(
˙xToVÆue
);

150 
this
.
£lf
 = self;

153 
li°íî
 = 
√w
 
	`Li°íî
();

154 
	}
}

161 
public
 
	$ã°InôüãC⁄√˘i⁄
(
sid
Ë
throws
 
Ex˚±i⁄
 {

162 i‡(
LOG
.
	`isDebugE«bÀd
()) {

163 
LOG
.
	`debug
("O≥nög ch™√»tÿ£rvî " + 
sid
);

165 
Sockë
 
sock
 = 
√w
 
	`Sockë
();

166 
	`£tSockO±s
(
sock
);

167 
sock
.
	`c⁄√˘
(
£lf
.
	`gëVŸögVõw
().
	`gë
(
sid
).
ñe˘i⁄Addr
, 
˙xTO
);

168 
	`öôüãC⁄√˘i⁄
(
sock
, 
sid
);

169 
	}
}

175 
public
 
boﬁón
 
	$öôüãC⁄√˘i⁄
(
Sockë
 
sock
, 
L⁄g
 
sid
) {

176 
D©aOuçutSåóm
 
dout
 = 
nuŒ
;

177 
åy
 {

179 
dout
 = 
√w
 
	`D©aOuçutSåóm
(
sock
.
	`gëOuçutSåóm
());

180 
dout
.
	`wrôeL⁄g
(
£lf
.
	`gëId
());

181 
dout
.
	`Êush
();

182 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

183 
LOG
.
	`w¨n
("Ign‹ögÉx˚±i⁄Ñódög o∏wrôög chÆÀnge: ", 
e
);

184 
	`˛o£Sockë
(
sock
);

185  
Ál£
;

189 i‡(
sid
 > 
£lf
.
	`gëId
()) {

190 
LOG
.
	`öfo
("Have smaller server identifier, so droppingÅhe " +

191 "c⁄√˘i⁄: (" + 
sid
 + ", " + 
£lf
.
	`gëId
() + ")");

192 
	`˛o£Sockë
(
sock
);

195 
SídW‹kî
 
sw
 = 
√w
 
	`SídW‹kî
(
sock
, 
sid
);

196 
RecvW‹kî
 
rw
 = 
√w
 
	`RecvW‹kî
(
sock
, 
sid
, 
sw
);

197 
sw
.
	`£tRecv
(
rw
);

199 
SídW‹kî
 
vsw
 = 
£ndîW‹kîM≠
.
	`gë
(
sid
);

201 if(
vsw
 !
nuŒ
)

202 
vsw
.
	`föish
();

204 
£ndîW‹kîM≠
.
	`put
(
sid
, 
sw
);

205 i‡(!
queueSídM≠
.
	`c⁄èösKey
(
sid
)) {

206 
queueSídM≠
.
	`put
(
sid
, 
√w
 
AºayBlockögQueue
<
ByãBuf„r
>(

207 
SEND_CAPACITY
));

210 
sw
.
	`°¨t
();

211 
rw
.
	`°¨t
();

213  
åue
;

216  
Ál£
;

217 
	}
}

228 
public
 
boﬁón
 
	$ª˚iveC⁄√˘i⁄
(
Sockë
 
sock
) {

229 
L⁄g
 
sid
 = 
nuŒ
;

231 
åy
 {

233 
D©aI≈utSåóm
 
dö
 = 
√w
 
	`D©aI≈utSåóm
(
sock
.
	`gëI≈utSåóm
());

234 
sid
 = 
dö
.
	`ªadL⁄g
();

235 i‡(
sid
 =
Qu‹umPìr
.
OBSERVER_ID
) {

241 
sid
 = 
ob£rvîCou¡î
--;

242 
LOG
.
	`öfo
("Sëtögárbôøry idítifõ∏tÿob£rvî: " + 
sid
);

244 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

245 
	`˛o£Sockë
(
sock
);

246 
LOG
.
	`w¨n
("Ex˚±i⁄Ñódög o∏wrôög chÆÀnge: " + 
e
.
	`toSåög
());

247  
Ál£
;

251 i‡(
sid
 < 
£lf
.
	`gëId
()) {

257 
SídW‹kî
 
sw
 = 
£ndîW‹kîM≠
.
	`gë
(
sid
);

258 i‡(
sw
 !
nuŒ
) {

259 
sw
.
	`föish
();

265 
LOG
.
	`debug
("Cª©ê√w c⁄√˘i⁄Åÿ£rvî: " + 
sid
);

266 
	`˛o£Sockë
(
sock
);

267 
	`c⁄√˘O√
(
sid
);

271 
SídW‹kî
 
sw
 = 
√w
 
	`SídW‹kî
(
sock
, 
sid
);

272 
RecvW‹kî
 
rw
 = 
√w
 
	`RecvW‹kî
(
sock
, 
sid
, 
sw
);

273 
sw
.
	`£tRecv
(
rw
);

275 
SídW‹kî
 
vsw
 = 
£ndîW‹kîM≠
.
	`gë
(
sid
);

277 if(
vsw
 !
nuŒ
)

278 
vsw
.
	`föish
();

280 
£ndîW‹kîM≠
.
	`put
(
sid
, 
sw
);

282 i‡(!
queueSídM≠
.
	`c⁄èösKey
(
sid
)) {

283 
queueSídM≠
.
	`put
(
sid
, 
√w
 
AºayBlockögQueue
<
ByãBuf„r
>(

284 
SEND_CAPACITY
));

287 
sw
.
	`°¨t
();

288 
rw
.
	`°¨t
();

290  
åue
;

292  
Ál£
;

293 
	}
}

299 
public
 
	$toSíd
(
L⁄g
 
sid
, 
ByãBuf„r
 
b
) {

303 i‡(
£lf
.
	`gëId
(Ë=
sid
) {

304 
b
.
	`posôi⁄
(0);

305 
	`addToRecvQueue
(
√w
 
	`Mesßge
(
b
.
	`du∂iˇã
(), 
sid
));

313 i‡(!
queueSídM≠
.
	`c⁄èösKey
(
sid
)) {

314 
AºayBlockögQueue
<
ByãBuf„r
> 
bq
 = 
√w
 ArrayBlockingQueue<ByteBuffer>(

315 
SEND_CAPACITY
);

316 
queueSídM≠
.
	`put
(
sid
, 
bq
);

317 
	`addToSídQueue
(
bq
, 
b
);

320 
AºayBlockögQueue
<
ByãBuf„r
> 
bq
 = 
queueSídM≠
.
	`gë
(
sid
);

321 if(
bq
 !
nuŒ
){

322 
	`addToSídQueue
(
bq
, 
b
);

324 
LOG
.
	`îr‹
("Nÿqueuêf‹ sîvî " + 
sid
);

327 
	`c⁄√˘O√
(
sid
);

330 
	}
}

338 
synchr⁄ized
 
	$c⁄√˘O√
(
sid
){

339 i‡(
£ndîW‹kîM≠
.
	`gë
(
sid
Ë=
nuŒ
){

340 
I√tSockëAddªss
 
ñe˘i⁄Addr
;

341 i‡(
£lf
.
qu‹umPìrs
.
	`c⁄èösKey
(
sid
)) {

342 
ñe˘i⁄Addr
 = 
£lf
.
qu‹umPìrs
.
	`gë
(
sid
).electionAddr;

344 
LOG
.
	`w¨n
("InvÆid sîvî id: " + 
sid
);

347 
åy
 {

349 i‡(
LOG
.
	`isDebugE«bÀd
()) {

350 
LOG
.
	`debug
("O≥nög ch™√»tÿ£rvî " + 
sid
);

352 
Sockë
 
sock
 = 
√w
 
	`Sockë
();

353 
	`£tSockO±s
(
sock
);

354 
sock
.
	`c⁄√˘
(
£lf
.
	`gëVõw
().
	`gë
(
sid
).
ñe˘i⁄Addr
, 
˙xTO
);

355 i‡(
LOG
.
	`isDebugE«bÀd
()) {

356 
LOG
.
	`debug
("C⁄√˘edÅÿ£rvî " + 
sid
);

358 
	`öôüãC⁄√˘i⁄
(
sock
, 
sid
);

359 } 
	`ˇtch
 (
UƒesﬁvedAddªssEx˚±i⁄
 
e
) {

364 
LOG
.
	`w¨n
("C™nŸ o≥¿ch™√»tÿ" + 
sid


365 + "áàñe˘i⁄áddªs†" + 
ñe˘i⁄Addr
, 
e
);

366 
throw
 
e
;

367 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

368 
LOG
.
	`w¨n
("C™nŸ o≥¿ch™√»tÿ" + 
sid


369 + "áàñe˘i⁄áddªs†" + 
ñe˘i⁄Addr
,

370 
e
);

373 
LOG
.
	`debug
("Thîêi†®c⁄√˘i⁄áÃódy f‹ sîvî " + 
sid
);

375 
	}
}

383 
public
 
	$c⁄√˘AŒ
(){

384 
sid
;

385 
Enumî©i⁄
<
L⁄g
> 
í
 = 
queueSídM≠
.
	`keys
();

386 
í
.
	`hasM‹eEÀmíts
();){

387 
sid
 = 
í
.
	`√xtEÀmít
();

388 
	`c⁄√˘O√
(
sid
);

390 
	}
}

396 
boﬁón
 
	$haveDñivîed
() {

397 
AºayBlockögQueue
<
ByãBuf„r
> 
queue
 : 
queueSídM≠
.
	`vÆues
()) {

398 
LOG
.
	`debug
("Queuêsize: " + 
queue
.
	`size
());

399 i‡(
queue
.
	`size
() == 0) {

400  
åue
;

404  
Ál£
;

405 
	}
}

410 
public
 
	$hÆt
() {

411 
shutdown
 = 
åue
;

412 
LOG
.
	`debug
("HaltingÜistener");

413 
li°íî
.
	`hÆt
();

415 
	`so·HÆt
();

416 
	}
}

421 
public
 
	$so·HÆt
() {

422 
SídW‹kî
 
sw
 : 
£ndîW‹kîM≠
.
	`vÆues
()) {

423 
LOG
.
	`debug
("HÆtög sídî: " + 
sw
);

424 
sw
.
	`föish
();

426 
	}
}

434 
¥iv©e
 
	$£tSockO±s
(
Sockë
 
sock
Ë
throws
 
SockëEx˚±i⁄
 {

435 
sock
.
	`£tT˝NoDñay
(
åue
);

436 
sock
.
	`£tSoTimeout
(
£lf
.
tickTime
 * sñf.
syncLimô
);

437 
	}
}

445 
¥iv©e
 
	$˛o£Sockë
(
Sockë
 
sock
) {

446 
åy
 {

447 
sock
.
	`˛o£
();

448 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

449 
LOG
.
	`îr‹
("Ex˚±i⁄ whûê˛osög", 
õ
);

451 
	}
}

456 
public
 
	$gëThªadCou¡
() {

457  
thªadC¡
.
	`gë
();

458 
	}
}

462 
public
 
Qu‹umPìr
 
	$gëQu‹umPìr
() {

463  
£lf
;

464 
	}
}

469 
public
 cœs†
	cLi°íî
 
exãnds
 
	gThªad
 {

471 vﬁ©ûê
SîvîSockë
 
	gss
 = 
nuŒ
;

476 @
Ovîride


477 
public
 
run
() {

478 
	gnumRërõs
 = 0;

479 (!
	gshutdown
Ë&& (
	gnumRërõs
 < 3)){

480 
	gåy
 {

481 
	gss
 = 
√w
 
SîvîSockë
();

482 
	gss
.
£tReu£Addªss
(
åue
);

483 
	gp‹t
 = 
£lf
.
qu‹umPìrs
.
gë
(£lf.
gëId
()).
ñe˘i⁄Addr


484 .
gëP‹t
();

485 
I√tSockëAddªss
 
	gaddr
 = 
√w
 I√tSockëAddªss(
p‹t
);

486 
	gLOG
.
öfo
("MyÉÀ˘i⁄ bödÖ‹t: " + 
addr
.
toSåög
());

487 
£tName
(
£lf
.
qu‹umPìrs
.
gë
(£lf.
gëId
()).
ñe˘i⁄Addr


488 .
toSåög
());

489 
	gss
.
böd
(
addr
);

490 !
	gshutdown
) {

491 
Sockë
 
	g˛õ¡
 = 
ss
.
ac˚±
();

492 
£tSockO±s
(
˛õ¡
);

493 
	gLOG
.
öfo
("Received connectionÑequest "

494 + 
˛õ¡
.
gëRemŸeSockëAddªss
());

495 
ª˚iveC⁄√˘i⁄
(
˛õ¡
);

496 
	gnumRërõs
 = 0;

498 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

499 
	gLOG
.
îr‹
("Ex˚±i⁄ whûêli°íög", 
e
);

500 
	gnumRërõs
++;

501 
	gåy
 {

502 
	gss
.
˛o£
();

503 
	gThªad
.
¶ìp
(1000);

504 } 
ˇtch
 (
IOEx˚±i⁄
 
õ
) {

505 
	gLOG
.
îr‹
("Eº‹ closög sîvî sockë", 
õ
);

506 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
õ
) {

507 
	gLOG
.
îr‹
("Interrupted while sleeping. " +

508 "Ign‹ögÉx˚±i⁄", 
õ
);

512 
	gLOG
.
öfo
("LeavingÜistener");

513 i‡(!
	gshutdown
) {

514 
	gLOG
.
îr‹
("As I'mÜeavingÅheÜistenerÅhread, "

517 + 
£lf
.
qu‹umPìrs
.
gë
(£lf.
gëId
()).
ñe˘i⁄Addr
);

524 
hÆt
(){

525 
	gåy
{

526 
	gLOG
.
debug
("TryögÅÿ˛o£Üi°íî: " + 
ss
);

527 if(
	gss
 !
nuŒ
) {

528 
LOG
.
debug
("ClosögÜi°íî: " + 
£lf
.
gëId
());

529 
	gss
.
˛o£
();

531 } 
ˇtch
 (
IOEx˚±i⁄
 
e
){

532 
	gLOG
.
w¨n
("Ex˚±i⁄ whí shuâög dow¿li°íî: " + 
e
);

542 ˛as†
	cSídW‹kî
 
exãnds
 
	gThªad
 {

543 
L⁄g
 
	gsid
;

544 
Sockë
 
	gsock
;

545 
RecvW‹kî
 
	gªcvW‹kî
;

546 vﬁ©ûê
boﬁón
 
	gru¬ög
 = 
åue
;

547 
D©aOuçutSåóm
 
	gdout
;

558 
SídW‹kî
(
Sockë
 
sock
, 
L⁄g
 
sid
) {

559 
su≥r
("SídW‹kî:" + 
sid
);

560 
	gthis
.
	gsid
 = 
sid
;

561 
	gthis
.
	gsock
 = 
sock
;

562 
	gªcvW‹kî
 = 
nuŒ
;

563 
	gåy
 {

564 
	gdout
 = 
√w
 
D©aOuçutSåóm
(
sock
.
gëOuçutSåóm
());

565 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

566 
	gLOG
.
îr‹
("U«bÀÅÿac˚s†sockë ouçuà°ªam", 
e
);

567 
˛o£Sockë
(
sock
);

568 
	gru¬ög
 = 
Ál£
;

570 
	gLOG
.
debug
("Addªs†o‡ªmŸê≥î: " + 
this
.
sid
);

573 
synchr⁄ized
 
£tRecv
(
RecvW‹kî
 
ªcvW‹kî
) {

574 
	gthis
.
	gªcvW‹kî
 = 
ªcvW‹kî
;

582 
synchr⁄ized
 
RecvW‹kî
 
gëRecvW‹kî
(){

583  
	gªcvW‹kî
;

586 
synchr⁄ized
 
boﬁón
 
föish
() {

587 i‡(
	gLOG
.
isDebugE«bÀd
()) {

588 
	gLOG
.
debug
("CÆlög föish f‹ " + 
sid
);

591 if(!
	gru¬ög
){

595  
	gru¬ög
;

598 
	gru¬ög
 = 
Ál£
;

599 
˛o£Sockë
(
sock
);

602 
	gthis
.
öãºu±
();

603 i‡(
	gªcvW‹kî
 !
nuŒ
) {

604 
ªcvW‹kî
.
föish
();

607 i‡(
	gLOG
.
isDebugE«bÀd
()) {

608 
	gLOG
.
debug
("RemovögÉ¡ry from sídîW‹kîM≠ sid=" + 
sid
);

610 
	g£ndîW‹kîM≠
.
ªmove
(
sid
, 
this
);

611 
	gthªadC¡
.
de¸emítAndGë
();

612  
	gru¬ög
;

615 
synchr⁄ized
 
£nd
(
ByãBuf„r
 
b
Ë
throws
 
	gIOEx˚±i⁄
 {

616 
	gbyã
[] 
	gmsgByãs
 = 
√w
 
byã
[
b
.
ˇ∑côy
()];

617 
	gåy
 {

618 
	gb
.
posôi⁄
(0);

619 
	gb
.
gë
(
msgByãs
);

620 } 
ˇtch
 (
Buf„rUndîÊowEx˚±i⁄
 
be
) {

621 
	gLOG
.
îr‹
("Buf„rUndîÊowEx˚±i⁄ ", 
be
);

624 
	gdout
.
wrôeI¡
(
b
.
ˇ∑côy
());

625 
	gdout
.
wrôe
(
b
.
¨øy
());

626 
	gdout
.
Êush
();

629 @
Ovîride


630 
public
 
run
() {

631 
	gthªadC¡
.
ö¸emítAndGë
();

632 
	gåy
 {

646 
	gAºayBlockögQueue
<
	gByãBuf„r
> 
	gbq
 = 
queueSídM≠
.
gë
(
sid
);

647 i‡(
	gbq
 =
nuŒ
 || 
isSídQueueEm±y
(
bq
)) {

648 
ByãBuf„r
 
b
 = 
œ°MesßgeSít
.
gë
(
sid
);

649 i‡(
	gb
 !
nuŒ
) {

650 
LOG
.
debug
("Aâem±ögÅÿ£ndÜa°Mesßgêtÿsid=" + 
sid
);

651 
£nd
(
b
);

654 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

655 
	gLOG
.
îr‹
("FaûedÅÿ£ndÜa° mesßge. Shuâög dow¿thªad.", 
e
);

656 
	gthis
.
föish
();

659 
	gåy
 {

660 
	gru¬ög
 && !
	gshutdown
 && 
	gsock
 !
nuŒ
) {

662 
ByãBuf„r
 
b
 = 
nuŒ
;

663 
	gåy
 {

664 
	gAºayBlockögQueue
<
	gByãBuf„r
> 
	gbq
 = 
queueSídM≠


665 .
gë
(
sid
);

666 i‡(
	gbq
 !
nuŒ
) {

667 
b
 = 
pﬁlSídQueue
(
bq
, 1000, 
TimeUnô
.
MILLISECONDS
);

669 
	gLOG
.
îr‹
("No queue of incoming messages for " +

670 "£rvî " + 
sid
);

674 if(
	gb
 !
nuŒ
){

675 
œ°MesßgeSít
.
put
(
sid
, 
b
);

676 
£nd
(
b
);

678 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

679 
	gLOG
.
w¨n
("Interrupted while waiting for message on queue",

680 
e
);

683 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

684 
	gLOG
.
w¨n
("Ex˚±i⁄ whí usög ch™√l: f‹ id " + 
sid
 + " my id = " +

685 
£lf
.
gëId
(Ë+ "Éº‹ = " + 
e
);

687 
	gthis
.
föish
();

688 
	gLOG
.
w¨n
("Send workerÜeavingÅhread");

696 ˛as†
	cRecvW‹kî
 
exãnds
 
	gThªad
 {

697 
L⁄g
 
	gsid
;

698 
Sockë
 
	gsock
;

699 vﬁ©ûê
boﬁón
 
	gru¬ög
 = 
åue
;

700 
D©aI≈utSåóm
 
	gdö
;

701 
föÆ
 
SídW‹kî
 
	gsw
;

703 
RecvW‹kî
(
Sockë
 
sock
, 
L⁄g
 
sid
, 
SídW‹kî
 
sw
) {

704 
su≥r
("RecvW‹kî:" + 
sid
);

705 
	gthis
.
	gsid
 = 
sid
;

706 
	gthis
.
	gsock
 = 
sock
;

707 
	gthis
.
	gsw
 = 
sw
;

708 
	gåy
 {

709 
	gdö
 = 
√w
 
D©aI≈utSåóm
(
sock
.
gëI≈utSåóm
());

711 
	gsock
.
£tSoTimeout
(0);

712 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

713 
	gLOG
.
îr‹
("Eº‹ whûêac˚ssög sockë f‹ " + 
sid
, 
e
);

714 
˛o£Sockë
(
sock
);

715 
	gru¬ög
 = 
Ál£
;

724 
synchr⁄ized
 
boﬁón
 
föish
() {

725 if(!
	gru¬ög
){

729  
	gru¬ög
;

731 
	gru¬ög
 = 
Ál£
;

733 
	gthis
.
öãºu±
();

734 
	gthªadC¡
.
de¸emítAndGë
();

735  
	gru¬ög
;

738 @
Ovîride


739 
public
 
run
() {

740 
	gthªadC¡
.
ö¸emítAndGë
();

741 
	gåy
 {

742 
	gru¬ög
 && !
	gshutdown
 && 
	gsock
 !
nuŒ
) {

747 
Àngth
 = 
dö
.
ªadI¡
();

748 i‡(
	gÀngth
 <0 || 
Àngth
 > 
PACKETMAXSIZE
) {

749 
throw
 
√w
 
IOEx˚±i⁄
(

751 + 
Àngth
);

756 
	gbyã
[] 
	gmsgAºay
 = 
√w
 
byã
[
Àngth
];

757 
	gdö
.
ªadFuŒy
(
msgAºay
, 0, 
Àngth
);

758 
ByãBuf„r
 
	gmesßge
 = ByãBuf„r.
wøp
(
msgAºay
);

759 
addToRecvQueue
(
√w
 
Mesßge
(
mesßge
.
du∂iˇã
(), 
sid
));

761 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

762 
	gLOG
.
w¨n
("C⁄√˘i⁄ brokí f‹ id " + 
sid
 + ", my id = " +

763 
£lf
.
gëId
(Ë+ ",Éº‹ = " , 
e
);

764 } 
	gföÆly
 {

765 
	gLOG
.
w¨n
("Interrupting SendWorker");

766 
	gsw
.
föish
();

767 i‡(
	gsock
 !
nuŒ
) {

768 
˛o£Sockë
(
sock
);

792 
¥iv©e
 
addToSídQueue
(
AºayBlockögQueue
<
ByãBuf„r
> 
queue
,

793 
ByãBuf„r
 
buf„r
) {

794 i‡(
	gqueue
.
ªmaöögC≠acôy
() == 0) {

795 
åy
 {

796 
queue
.
ªmove
();

797 } 
ˇtch
 (
NoSuchEÀmítEx˚±i⁄
 
√
) {

799 
	gLOG
.
debug
("TryingÅoÑemove frománÉmpty " +

800 "Queue. Ign‹ögÉx˚±i⁄ " + 
√
);

803 
	gåy
 {

804 
	gqueue
.
add
(
buf„r
);

805 } 
ˇtch
 (
IŒegÆSèãEx˚±i⁄
 
õ
) {

807 
	gLOG
.
îr‹
("U«bÀÅÿö£πá¿ñemíàöÅhêqueuê" + 
õ
);

818 
¥iv©e
 
boﬁón
 
isSídQueueEm±y
(
AºayBlockögQueue
<
ByãBuf„r
> 
queue
) {

819  
	gqueue
.
isEm±y
();

829 
¥iv©e
 
ByãBuf„r
 
pﬁlSídQueue
(
AºayBlockögQueue
<ByãBuf„r> 
queue
,

830 
timeout
, 
TimeUnô
 
unô
Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

831  
	gqueue
.
pﬁl
(
timeout
, 
unô
);

854 
public
 
	$addToRecvQueue
(
Mesßge
 
msg
) {

855 
	`synchr⁄ized
(
ªcvQLock
) {

856 i‡(
ªcvQueue
.
	`ªmaöögC≠acôy
() == 0) {

857 
åy
 {

858 
ªcvQueue
.
	`ªmove
();

859 } 
	`ˇtch
 (
NoSuchEÀmítEx˚±i⁄
 
√
) {

861 
LOG
.
	`debug
("TryingÅoÑemove frománÉmpty " +

862 "ªcvQueue. Ign‹ögÉx˚±i⁄ " + 
√
);

865 
åy
 {

866 
ªcvQueue
.
	`add
(
msg
);

867 } 
	`ˇtch
 (
IŒegÆSèãEx˚±i⁄
 
õ
) {

869 
LOG
.
	`îr‹
("U«bÀÅÿö£πÉÀmíàöÅhêªcvQueuê" + 
õ
);

872 
	}
}

881 
public
 
Mesßge
 
	$pﬁlRecvQueue
(
timeout
, 
TimeUnô
 
unô
)

882 
throws
 
I¡îru±edEx˚±i⁄
 {

883  
ªcvQueue
.
	`pﬁl
(
timeout
, 
unô
);

884 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

24 
public
 
öãrÁ˚
 
	gQu‹umMXBón
 {

28 
public
 
Såög
 
gëName
();

33 
public
 
gëQu‹umSize
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdWrôî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåómWrôî
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømPackë
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømSockë
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

31 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gAtomicFûeOuçutSåóm
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umMaj
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umVîifõr
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

48 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

49 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

78 
public
 
˛ass
 
Qu‹umPìr
 
exãnds
 
Thªad
 
im∂emíts
 
	gQu‹umSèts
.
	gProvidî
 {

79 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umPìr
.
˛ass
);

81 
Qu‹umBón
 
	gjmxQu‹umBón
;

82 
LoˇlPìrBón
 
	gjmxLoˇlPìrBón
;

83 
LódîEÀ˘i⁄Bón
 
	gjmxLódîEÀ˘i⁄Bón
;

84 
Qu‹umCnxM™agî
 
	gqcm
;

92 
¥iv©e
 
ZKD©aba£
 
	gzkDb
;

94 
public
 ˛as†
	cQu‹umSîvî
 {

95 
public
 
Qu‹umSîvî
(
id
, 
I√tSockëAddªss
 
addr
,

96 
I√tSockëAddªss
 
ñe˘i⁄Addr
) {

97 
	gthis
.
	gid
 = 
id
;

98 
	gthis
.
	gaddr
 = 
addr
;

99 
	gthis
.
	gñe˘i⁄Addr
 = 
ñe˘i⁄Addr
;

102 
public
 
Qu‹umSîvî
(
id
, 
I√tSockëAddªss
 
addr
) {

103 
	gthis
.
	gid
 = 
id
;

104 
	gthis
.
	gaddr
 = 
addr
;

105 
	gthis
.
	gñe˘i⁄Addr
 = 
nuŒ
;

108 
public
 
Qu‹umSîvî
(
id
, 
I√tSockëAddªss
 
addr
,

109 
I√tSockëAddªss
 
ñe˘i⁄Addr
, 
Ló∫îTy≥
 
ty≥
) {

110 
	gthis
.
	gid
 = 
id
;

111 
	gthis
.
	gaddr
 = 
addr
;

112 
	gthis
.
	gñe˘i⁄Addr
 = 
ñe˘i⁄Addr
;

113 
	gthis
.
	gty≥
 = 
ty≥
;

116 
public
 
I√tSockëAddªss
 
	gaddr
;

118 
public
 
I√tSockëAddªss
 
	gñe˘i⁄Addr
;

120 
public
 
	gid
;

122 
public
 
Ló∫îTy≥
 
	gty≥
 = Ló∫îTy≥.
PARTICIPANT
;

125 
public
 
	eSîvîSèã
 {

126 
	gLOOKING
, 
	gFOLLOWING
, 
	gLEADING
, 
	gOBSERVING
;

137 
public
 
	eLó∫îTy≥
 {

138 
	gPARTICIPANT
, 
	gOBSERVER
;

147 
föÆ
 
	gOBSERVER_ID
 = 
L⁄g
.
MAX_VALUE
;

152 
public
 
	g°¨t_Êe
, 
	gíd_Êe
;

157 
¥iv©e
 
Ló∫îTy≥
 
	gÀ¨√rTy≥
 = Ló∫îTy≥.
PARTICIPANT
;

159 
public
 
Ló∫îTy≥
 
	$gëLó∫îTy≥
() {

160  
À¨√rTy≥
;

161 
	}
}

166 
public
 
	$£tLó∫îTy≥
(
Ló∫îTy≥
 
p
) {

167 
À¨√rTy≥
 = 
p
;

168 i‡(
qu‹umPìrs
.
	`c⁄èösKey
(
this
.
myid
)) {

169 
this
.
qu‹umPìrs
.
	`gë
(
myid
).
ty≥
 = 
p
;

171 
LOG
.
	`îr‹
("Sëtög Ló∫îTy≥Åÿ" + 
p
 + " buà" + 
myid


175 
	}
}

179 
¥Ÿe˘ed
 
	gM≠
<
	gL⁄g
, 
	gQu‹umSîvî
> 
	gqu‹umPìrs
;

180 
public
 
	$gëQu‹umSize
(){

181  
	`gëVŸögVõw
().
	`size
();

182 
	}
}

188 
¥iv©e
 
Qu‹umVîifõr
 
	gqu‹umC⁄fig
;

193 
¥iv©e
 
	gmyid
;

199 
public
 
	$gëId
() {

200  
myid
;

201 
	}
}

206 vﬁ©ûê
¥iv©e
 
VŸe
 
	gcuºítVŸe
;

208 
public
 
synchr⁄ized
 
VŸe
 
	$gëCuºítVŸe
(){

209  
cuºítVŸe
;

210 
	}
}

212 
public
 
synchr⁄ized
 
	$£tCuºítVŸe
(
VŸe
 
v
){

213 
cuºítVŸe
 = 
v
;

214 
	}
}

216 vﬁ©ûê
boﬁón
 
	gru¬ög
 = 
åue
;

221 
¥Ÿe˘ed
 
	gtickTime
;

227 
¥Ÿe˘ed
 
	gmöSessi⁄Timeout
 = -1;

233 
¥Ÿe˘ed
 
	gmaxSessi⁄Timeout
 = -1;

238 
¥Ÿe˘ed
 
	göôLimô
;

244 
¥Ÿe˘ed
 
	gsyncLimô
;

249 
¥Ÿe˘ed
 
	gtick
;

266 @
Dïªˇãd


267 ˛as†
	cRe•⁄dîThªad
 
exãnds
 
	gThªad
 {

268 
Re•⁄dîThªad
() {

269 
su≥r
("ResponderThread");

272 vﬁ©ûê
boﬁón
 
	gru¬ög
 = 
åue
;

274 @
Ovîride


275 
public
 
run
() {

276 
	gåy
 {

277 
byã
 
	gb
[] = 
√w
 byte[36];

278 
ByãBuf„r
 
	gª•⁄£Buf„r
 = ByãBuf„r.
wøp
(
b
);

279 
D©agømPackë
 
	g∑ckë
 = 
√w
 D©agømPackë(
b
, b.
Àngth
);

280 
	gru¬ög
) {

281 
	gudpSockë
.
ª˚ive
(
∑ckë
);

282 i‡(
	g∑ckë
.
gëLígth
() != 4) {

283 
LOG
.
w¨n
("Got moreÅhan justán xid! Len = "

284 + 
∑ckë
.
gëLígth
());

286 
	gª•⁄£Buf„r
.
˛ór
();

287 
	gª•⁄£Buf„r
.
gëI¡
();

288 
	gª•⁄£Buf„r
.
putL⁄g
(
myid
);

289 
VŸe
 
	gcuºít
 = 
gëCuºítVŸe
();

290 
gëPìrSèã
()) {

291 
	gLOOKING
:

292 
ª•⁄£Buf„r
.
putL⁄g
(
cuºít
.
gëId
());

293 
	gª•⁄£Buf„r
.
putL⁄g
(
cuºít
.
gëZxid
());

295 
	gLEADING
:

296 
ª•⁄£Buf„r
.
putL⁄g
(
myid
);

297 
	gåy
 {

298 
	g¥›o£d
;

299 
synchr⁄ized
(
Àadî
) {

300 
	g¥›o£d
 = 
Àadî
.
œ°Pr›o£d
;

302 
	gª•⁄£Buf„r
.
putL⁄g
(
¥›o£d
);

303 } 
ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
≈e
) {

308 
	gFOLLOWING
:

309 
ª•⁄£Buf„r
.
putL⁄g
(
cuºít
.
gëId
());

310 
	gåy
 {

311 
	gª•⁄£Buf„r
.
putL⁄g
(
fﬁlowî
.
gëZxid
());

312 } 
ˇtch
 (
NuŒPoöãrEx˚±i⁄
 
≈e
) {

317 
	gOBSERVING
:

322 
	g∑ckë
.
£tD©a
(
b
);

323 
	gudpSockë
.
£nd
(
∑ckë
);

325 
	g∑ckë
.
£tLígth
(
b
.
Àngth
);

327 } 
ˇtch
 (
Ru¡imeEx˚±i⁄
 
e
) {

328 
	gLOG
.
w¨n
("U√x≥˘edÑu¡imêex˚±i⁄ i¿Re•⁄dîThªad",
e
);

329 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

330 
	gLOG
.
w¨n
("U√x≥˘ed IOÉx˚±i⁄ i¿Re•⁄dîThªad",
e
);

331 } 
	gföÆly
 {

332 
	gLOG
.
w¨n
("QuorumPeerÑesponderÅhreadÉxited");

337 
¥iv©e
 
SîvîSèã
 
	g°©e
 = SîvîSèã.
LOOKING
;

339 
public
 
synchr⁄ized
 
	$£tPìrSèã
(
SîvîSèã
 
√wSèã
){

340 
°©e
=
√wSèã
;

341 
	}
}

343 
public
 
synchr⁄ized
 
SîvîSèã
 
	$gëPìrSèã
(){

344  
°©e
;

345 
	}
}

347 
D©agømSockë
 
	gudpSockë
;

349 
¥iv©e
 
I√tSockëAddªss
 
	gmyQu‹umAddr
;

351 
public
 
I√tSockëAddªss
 
	$gëQu‹umAddªss
(){

352  
myQu‹umAddr
;

353 
	}
}

355 
¥iv©e
 
	gñe˘i⁄Ty≥
;

357 
EÀ˘i⁄
 
	gñe˘i⁄Alg
;

359 
SîvîCnxnFa˘‹y
 
	g˙xnFa˘‹y
;

360 
¥iv©e
 
FûeTxnS«pLog
 
	glogFa˘‹y
 = 
nuŒ
;

362 
¥iv©e
 
föÆ
 
Qu‹umSèts
 
	gqu‹umSèts
;

364 
public
 
	$Qu‹umPìr
() {

365 
	`su≥r
("QuorumPeer");

366 
qu‹umSèts
 = 
√w
 
	`Qu‹umSèts
(
this
);

367 
	}
}

374 
public
 
Qu‹umPìr
(
M≠
<
L⁄g
, 
Qu‹umSîvî
> 
qu‹umPìrs
, 
Fûe
 
d©aDú
,

375 
Fûe
 
d©aLogDú
, 
ñe˘i⁄Ty≥
,

376 
myid
, 
tickTime
, 
öôLimô
, 
syncLimô
,

377 
SîvîCnxnFa˘‹y
 
˙xnFa˘‹y
Ë
throws
 
	gIOEx˚±i⁄
 {

378 
this
(
qu‹umPìrs
, 
d©aDú
, 
d©aLogDú
, 
ñe˘i⁄Ty≥
, 
myid
, 
tickTime
,

379 
öôLimô
, 
syncLimô
, 
˙xnFa˘‹y
,

380 
√w
 
Qu‹umMaj
(
cou¡P¨ticù™ts
(
qu‹umPìrs
)));

383 
public
 
Qu‹umPìr
(
M≠
<
L⁄g
, 
Qu‹umSîvî
> 
qu‹umPìrs
, 
Fûe
 
d©aDú
,

384 
Fûe
 
d©aLogDú
, 
ñe˘i⁄Ty≥
,

385 
myid
, 
tickTime
, 
öôLimô
, 
syncLimô
,

386 
SîvîCnxnFa˘‹y
 
˙xnFa˘‹y
,

387 
Qu‹umVîifõr
 
qu‹umC⁄fig
Ë
throws
 
	gIOEx˚±i⁄
 {

388 
this
();

389 
	gthis
.
	g˙xnFa˘‹y
 = 
˙xnFa˘‹y
;

390 
	gthis
.
	gqu‹umPìrs
 = 
qu‹umPìrs
;

391 
	gthis
.
	gñe˘i⁄Ty≥
 = 
ñe˘i⁄Ty≥
;

392 
	gthis
.
	gmyid
 = 
myid
;

393 
	gthis
.
	gtickTime
 = 
tickTime
;

394 
	gthis
.
	göôLimô
 = 
öôLimô
;

395 
	gthis
.
	gsyncLimô
 = 
syncLimô
;

396 
	gthis
.
	glogFa˘‹y
 = 
√w
 
FûeTxnS«pLog
(
d©aLogDú
, 
d©aDú
);

397 
	gthis
.
	gzkDb
 = 
√w
 
ZKD©aba£
(
this
.
logFa˘‹y
);

398 if(
	gqu‹umC⁄fig
 =
nuŒ
)

399 
this
.
qu‹umC⁄fig
 = 
√w
 
Qu‹umMaj
(
cou¡P¨ticù™ts
(
qu‹umPìrs
));

400 
	gthis
.
	gqu‹umC⁄fig
 = 
qu‹umC⁄fig
;

403 
Qu‹umSèts
 
	$qu‹umSèts
() {

404  
qu‹umSèts
;

405 
	}
}

407 @
Ovîride


408 
public
 
synchr⁄ized
 
	$°¨t
() {

409 
	`lﬂdD©aBa£
();

410 
˙xnFa˘‹y
.
	`°¨t
();

411 
	`°¨tLódîEÀ˘i⁄
();

412 
su≥r
.
	`°¨t
();

413 
	}
}

415 
¥iv©e
 
	$lﬂdD©aBa£
() {

416 
åy
 {

417 
zkDb
.
	`lﬂdD©aBa£
();

420 
œ°Pro˚s£dZxid
 = 
zkDb
.
	`gëD©aTªe
().lastProcessedZxid;

421 
ïochOfZxid
 = 
ZxidUtûs
.
	`gëEpochFromZxid
(
œ°Pro˚s£dZxid
);

422 
åy
 {

423 
cuºítEpoch
 = 
	`ªadL⁄gFromFûe
(
CURRENT_EPOCH_FILENAME
);

424 } 
	`ˇtch
(
FûeNŸFoundEx˚±i⁄
 
e
) {

428 
cuºítEpoch
 = 
ïochOfZxid
;

429 
LOG
.
	`öfo
(
CURRENT_EPOCH_FILENAME


431 
cuºítEpoch
);

432 
	`wrôeL⁄gToFûe
(
CURRENT_EPOCH_FILENAME
, 
cuºítEpoch
);

434 i‡(
ïochOfZxid
 > 
cuºítEpoch
) {

435 
throw
 
√w
 
	`IOEx˚±i⁄
("Thêcuºíàïoch, " + 
ZxidUtûs
.
	`zxidToSåög
(
cuºítEpoch
Ë+ ", i†ﬁdîÅh™Åhêœ° zxid, " + 
œ°Pro˚s£dZxid
);

437 
åy
 {

438 
ac˚±edEpoch
 = 
	`ªadL⁄gFromFûe
(
ACCEPTED_EPOCH_FILENAME
);

439 } 
	`ˇtch
(
FûeNŸFoundEx˚±i⁄
 
e
) {

443 
ac˚±edEpoch
 = 
ïochOfZxid
;

444 
LOG
.
	`öfo
(
ACCEPTED_EPOCH_FILENAME


446 
ac˚±edEpoch
);

447 
	`wrôeL⁄gToFûe
(
CURRENT_EPOCH_FILENAME
, 
ac˚±edEpoch
);

449 i‡(
ac˚±edEpoch
 < 
cuºítEpoch
) {

450 
throw
 
√w
 
	`IOEx˚±i⁄
("Thêcuºíàïoch, " + 
ZxidUtûs
.
	`zxidToSåög
(
cuºítEpoch
Ë+ " i†Às†th™Åhêac˚±edÉpoch, " + ZxidUtûs.zxidToSåög(
ac˚±edEpoch
));

452 } 
	`ˇtch
(
IOEx˚±i⁄
 
õ
) {

453 
LOG
.
	`îr‹
("U«bÀÅÿlﬂd d©aba£ o¿disk", 
õ
);

454 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("U«bÀÅÿru¿qu‹um sîvî ", 
õ
);

456 
	}
}

458 
Re•⁄dîThªad
 
	gª•⁄dî
;

460 
synchr⁄ized
 
public
 
	$°›LódîEÀ˘i⁄
() {

461 
ª•⁄dî
.
ru¬ög
 = 
Ál£
;

462 
ª•⁄dî
.
	`öãºu±
();

463 
	}
}

464 
synchr⁄ized
 
public
 
	$°¨tLódîEÀ˘i⁄
() {

465 
åy
 {

466 
cuºítVŸe
 = 
√w
 
	`VŸe
(
myid
, 
	`gëLa°LoggedZxid
(), 
	`gëCuºítEpoch
());

467 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

468 
Ru¡imeEx˚±i⁄
 
ª
 = 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
.
	`gëMesßge
());

469 
ª
.
	`£tSèckTø˚
(
e
.
	`gëSèckTø˚
());

470 
throw
 
ª
;

472 
Qu‹umSîvî
 
p
 : 
	`gëVõw
().
	`vÆues
()) {

473 i‡(
p
.
id
 =
myid
) {

474 
myQu‹umAddr
 = 
p
.
addr
;

478 i‡(
myQu‹umAddr
 =
nuŒ
) {

479 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("My id " + 
myid
 + "Çot inÅheÖeerÜist");

481 i‡(
ñe˘i⁄Ty≥
 == 0) {

482 
åy
 {

483 
udpSockë
 = 
√w
 
	`D©agømSockë
(
myQu‹umAddr
.
	`gëP‹t
());

484 
ª•⁄dî
 = 
√w
 
	`Re•⁄dîThªad
();

485 
ª•⁄dî
.
	`°¨t
();

486 } 
	`ˇtch
 (
SockëEx˚±i⁄
 
e
) {

487 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
);

490 
this
.
ñe˘i⁄Alg
 = 
	`¸óãEÀ˘i⁄Alg‹ôhm
(
ñe˘i⁄Ty≥
);

491 
	}
}

498 
¥Ÿe˘ed
 
cou¡P¨ticù™ts
(
M≠
<
L⁄g
,
Qu‹umSîvî
> 
≥îs
) {

499 
	gcou¡
 = 0;

500 
Qu‹umSîvî
 
	gq
 : 
≥îs
.
vÆues
()) {

501 i‡(
q
.
ty≥
 =
Ló∫îTy≥
.
PARTICIPANT
) {

502 
cou¡
++;

505  
	gcou¡
;

512 
public
 
Qu‹umPìr
(
M≠
<
L⁄g
,
Qu‹umSîvî
> 
qu‹umPìrs
, 
Fûe
 
¢≠Dú
,

513 
Fûe
 
logDú
, 
˛õ¡P‹t
, 
ñe˘i⁄Alg
,

514 
myid
, 
tickTime
, 
öôLimô
, 
syncLimô
)

515 
throws
 
	gIOEx˚±i⁄


517 
this
(
qu‹umPìrs
, 
¢≠Dú
, 
logDú
, 
ñe˘i⁄Alg
,

518 
myid
,
tickTime
, 
öôLimô
,
syncLimô
,

519 
SîvîCnxnFa˘‹y
.
¸óãFa˘‹y
(
√w
 
I√tSockëAddªss
(
˛õ¡P‹t
), -1),

520 
√w
 
Qu‹umMaj
(
cou¡P¨ticù™ts
(
qu‹umPìrs
)));

527 
public
 
Qu‹umPìr
(
M≠
<
L⁄g
,
Qu‹umSîvî
> 
qu‹umPìrs
, 
Fûe
 
¢≠Dú
,

528 
Fûe
 
logDú
, 
˛õ¡P‹t
, 
ñe˘i⁄Alg
,

529 
myid
, 
tickTime
, 
öôLimô
, 
syncLimô
,

530 
Qu‹umVîifõr
 
qu‹umC⁄fig
)

531 
throws
 
	gIOEx˚±i⁄


533 
this
(
qu‹umPìrs
, 
¢≠Dú
, 
logDú
, 
ñe˘i⁄Alg
,

534 
myid
,
tickTime
, 
öôLimô
,
syncLimô
,

535 
SîvîCnxnFa˘‹y
.
¸óãFa˘‹y
(
√w
 
I√tSockëAddªss
(
˛õ¡P‹t
), -1),

536 
qu‹umC⁄fig
);

544 
public
 
	$gëLa°LoggedZxid
() {

545 i‡(!
zkDb
.
	`isInôülized
()) {

546 
	`lﬂdD©aBa£
();

548  
zkDb
.
	`gëD©aTªeLa°Pro˚s£dZxid
();

549 
	}
}

551 
public
 
Fﬁlowî
 
	gfﬁlowî
;

552 
public
 
Lódî
 
	gÀadî
;

553 
public
 
Ob£rvî
 
	gob£rvî
;

555 
¥Ÿe˘ed
 
Fﬁlowî
 
	$makeFﬁlowî
(
FûeTxnS«pLog
 
logFa˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

556  
√w
 
	`Fﬁlowî
(
this
,Çew 
	`FﬁlowîZooKì≥rSîvî
(
logFa˘‹y
,

557 
this
,
√w
 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(),Åhis.
zkDb
));

558 
	}
}

560 
¥Ÿe˘ed
 
Lódî
 
	$makeLódî
(
FûeTxnS«pLog
 
logFa˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

561  
√w
 
	`Lódî
(
this
,Çew 
	`LódîZooKì≥rSîvî
(
logFa˘‹y
,

562 
this
,
√w
 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(),Åhis.
zkDb
));

563 
	}
}

565 
¥Ÿe˘ed
 
Ob£rvî
 
	$makeOb£rvî
(
FûeTxnS«pLog
 
logFa˘‹y
Ë
throws
 
IOEx˚±i⁄
 {

566  
√w
 
	`Ob£rvî
(
this
,Çew 
	`Ob£rvîZooKì≥rSîvî
(
logFa˘‹y
,

567 
this
, 
√w
 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(),Åhis.
zkDb
));

568 
	}
}

570 
¥Ÿe˘ed
 
EÀ˘i⁄
 
	$¸óãEÀ˘i⁄Alg‹ôhm
(
ñe˘i⁄Alg‹ôhm
){

571 
EÀ˘i⁄
 
À
=
nuŒ
;

574 
ñe˘i⁄Alg‹ôhm
) {

576 
À
 = 
√w
 
	`LódîEÀ˘i⁄
(
this
);

579 
À
 = 
√w
 
	`AuthFa°LódîEÀ˘i⁄
(
this
);

582 
À
 = 
√w
 
	`AuthFa°LódîEÀ˘i⁄
(
this
, 
åue
);

585 
qcm
 = 
√w
 
	`Qu‹umCnxM™agî
(
this
);

586 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
qcm
.listener;

587 if(
li°íî
 !
nuŒ
){

588 
li°íî
.
	`°¨t
();

589 
À
 = 
√w
 
	`Fa°LódîEÀ˘i⁄
(
this
, 
qcm
);

591 
LOG
.
	`îr‹
("NullÜistener when initializing cnx manager");

595 
as£π
 
Ál£
;

597  
À
;

598 
	}
}

600 
¥Ÿe˘ed
 
EÀ˘i⁄
 
	$makeLESå©egy
(){

601 
LOG
.
	`debug
("InitializingÜeaderÉlectionÖrotocol...");

602 i‡(
	`gëEÀ˘i⁄Ty≥
() == 0) {

603 
ñe˘i⁄Alg
 = 
√w
 
	`LódîEÀ˘i⁄
(
this
);

605  
ñe˘i⁄Alg
;

606 
	}
}

608 
synchr⁄ized
 
¥Ÿe˘ed
 
	$£tLódî
(
Lódî
 
√wLódî
){

609 
Àadî
=
√wLódî
;

610 
	}
}

612 
synchr⁄ized
 
¥Ÿe˘ed
 
	$£tFﬁlowî
(
Fﬁlowî
 
√wFﬁlowî
){

613 
fﬁlowî
=
√wFﬁlowî
;

614 
	}
}

616 
synchr⁄ized
 
¥Ÿe˘ed
 
	$£tOb£rvî
(
Ob£rvî
 
√wOb£rvî
){

617 
ob£rvî
=
√wOb£rvî
;

618 
	}
}

620 
synchr⁄ized
 
public
 
ZooKì≥rSîvî
 
	$gëA˘iveSîvî
(){

621 if(
Àadî
!=
nuŒ
)

622  
Àadî
.
zk
;

623 if(
fﬁlowî
!=
nuŒ
)

624  
fﬁlowî
.
zk
;

625 i‡(
ob£rvî
 !
nuŒ
)

626  
ob£rvî
.
zk
;

627  
nuŒ
;

628 
	}
}

630 @
Ovîride


631 
public
 
	$run
() {

632 
	`£tName
("Qu‹umPìr" + "[myid=" + 
	`gëId
() + "]" +

633 
˙xnFa˘‹y
.
	`gëLoˇlAddªss
());

635 
LOG
.
	`debug
("Starting quorumÖeer");

636 
åy
 {

637 
jmxQu‹umBón
 = 
√w
 
	`Qu‹umBón
(
this
);

638 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxQu‹umBón
, 
nuŒ
);

639 
Qu‹umSîvî
 
s
: 
	`gëVõw
().
	`vÆues
()){

640 
ZKMBónInfo
 
p
;

641 i‡(
	`gëId
(Ë=
s
.
id
) {

642 
p
 = 
jmxLoˇlPìrBón
 = 
√w
 
	`LoˇlPìrBón
(
this
);

643 
åy
 {

644 
MBónRegi°ry
.
	`gëIn°™˚
().(
p
, 
jmxQu‹umBón
);

645 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

646 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

647 
jmxLoˇlPìrBón
 = 
nuŒ
;

650 
p
 = 
√w
 
	`RemŸePìrBón
(
s
);

651 
åy
 {

652 
MBónRegi°ry
.
	`gëIn°™˚
().(
p
, 
jmxQu‹umBón
);

653 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

654 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

658 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

659 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

660 
jmxQu‹umBón
 = 
nuŒ
;

663 
åy
 {

667 
ru¬ög
) {

668 
	`gëPìrSèã
()) {

669 
LOOKING
:

670 
LOG
.
	`öfo
("LOOKING");

672 i‡(
Boﬁón
.
	`gëBoﬁón
("readonlymode.enabled")) {

673 
LOG
.
	`öfo
("AttemptingÅo start ReadOnlyZooKeeperServer");

676 
föÆ
 
RódO∆yZooKì≥rSîvî
 
roZk
 = 
√w
 
	`RódO∆yZooKì≥rSîvî
(

677 
logFa˘‹y
, 
this
,

678 
√w
 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(),

679 
this
.
zkDb
);

687 
Thªad
 
roZkMgr
 = 
√w
 
	`Thªad
() {

688 
public
 
	`run
() {

689 
åy
 {

691 
	`¶ìp
(
M©h
.
	`max
(2000, 
tickTime
));

692 i‡(
SîvîSèã
.
LOOKING
.
	`equÆs
(
	`gëPìrSèã
())) {

693 
roZk
.
	`°¨tup
();

695 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

696 
LOG
.
	`öfo
("Interrupted whileáttemptingÅo start ReadOnlyZooKeeperServer,Çot started");

697 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

698 
LOG
.
	`îr‹
("FAILEDÅÿ°¨àRódO∆yZooKì≥rSîvî", 
e
);

702 
åy
 {

703 
roZkMgr
.
	`°¨t
();

704 
	`£tCuºítVŸe
(
	`makeLESå©egy
().
	`lookF‹Lódî
());

705 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

706 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄",
e
);

707 
	`£tPìrSèã
(
SîvîSèã
.
LOOKING
);

708 } 
föÆly
 {

711 
roZkMgr
.
	`öãºu±
();

712 
roZk
.
	`shutdown
();

715 
åy
 {

716 
	`£tCuºítVŸe
(
	`makeLESå©egy
().
	`lookF‹Lódî
());

717 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

718 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄", 
e
);

719 
	`£tPìrSèã
(
SîvîSèã
.
LOOKING
);

723 
OBSERVING
:

724 
åy
 {

725 
LOG
.
	`öfo
("OBSERVING");

726 
	`£tOb£rvî
(
	`makeOb£rvî
(
logFa˘‹y
));

727 
ob£rvî
.
	`ob£rveLódî
();

728 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

729 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄",
e
 );

730 } 
föÆly
 {

731 
ob£rvî
.
	`shutdown
();

732 
	`£tOb£rvî
(
nuŒ
);

733 
	`£tPìrSèã
(
SîvîSèã
.
LOOKING
);

736 
FOLLOWING
:

737 
åy
 {

738 
LOG
.
	`öfo
("FOLLOWING");

739 
	`£tFﬁlowî
(
	`makeFﬁlowî
(
logFa˘‹y
));

740 
fﬁlowî
.
	`fﬁlowLódî
();

741 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

742 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄",
e
);

743 } 
föÆly
 {

744 
fﬁlowî
.
	`shutdown
();

745 
	`£tFﬁlowî
(
nuŒ
);

746 
	`£tPìrSèã
(
SîvîSèã
.
LOOKING
);

749 
LEADING
:

750 
LOG
.
	`öfo
("LEADING");

751 
åy
 {

752 
	`£tLódî
(
	`makeLódî
(
logFa˘‹y
));

753 
Àadî
.
	`Àad
();

754 
	`£tLódî
(
nuŒ
);

755 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

756 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄",
e
);

757 } 
föÆly
 {

758 i‡(
Àadî
 !
nuŒ
) {

759 
Àadî
.
	`shutdown
("Forcing shutdown");

760 
	`£tLódî
(
nuŒ
);

762 
	`£tPìrSèã
(
SîvîSèã
.
LOOKING
);

767 } 
föÆly
 {

768 
LOG
.
	`w¨n
("QuorumPeer mainÅhreadÉxited");

769 
åy
 {

770 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°îAŒ
();

771 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

772 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

774 
jmxQu‹umBón
 = 
nuŒ
;

775 
jmxLoˇlPìrBón
 = 
nuŒ
;

777 
	}
}

779 
public
 
	$shutdown
() {

780 
ru¬ög
 = 
Ál£
;

781 i‡(
Àadî
 !
nuŒ
) {

782 
Àadî
.
	`shutdown
("quorum Peer shutdown");

784 i‡(
fﬁlowî
 !
nuŒ
) {

785 
fﬁlowî
.
	`shutdown
();

787 
˙xnFa˘‹y
.
	`shutdown
();

788 if(
udpSockë
 !
nuŒ
) {

789 
udpSockë
.
	`˛o£
();

792 if(
	`gëEÀ˘i⁄Alg
(Ë!
nuŒ
){

793 
this
.
	`öãºu±
();

794 
	`gëEÀ˘i⁄Alg
().
	`shutdown
();

796 
åy
 {

797 
zkDb
.
	`˛o£
();

798 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

799 
LOG
.
	`w¨n
("Eº‹ closögÜog†", 
õ
);

801 
	}
}

807 
public
 
	gM≠
<
	gL⁄g
,
	gQu‹umPìr
.
	gQu‹umSîvî
> 
	$gëVõw
() {

808  
CﬁÀ˘i⁄s
.
	`unmodifübÀM≠
(
this
.
qu‹umPìrs
);

809 
	}
}

815 
public
 
	gM≠
<
	gL⁄g
,
	gQu‹umPìr
.
	gQu‹umSîvî
> 
	$gëVŸögVõw
() {

816 
M≠
<
L⁄g
,
Qu‹umPìr
.
Qu‹umSîvî
> 
ªt
 =

817 
√w
 
HashM≠
<
L⁄g
, 
Qu‹umPìr
.
Qu‹umSîvî
>();

818 
M≠
<
L⁄g
,
Qu‹umPìr
.
Qu‹umSîvî
> 
võw
 = 
	`gëVõw
();

819 
Qu‹umSîvî
 
£rvî
 : 
võw
.
	`vÆues
()) {

820 i‡(
£rvî
.
ty≥
 =
Ló∫îTy≥
.
PARTICIPANT
) {

821 
ªt
.
	`put
(
£rvî
.
id
, server);

824  
ªt
;

825 
	}
}

830 
public
 
	gM≠
<
	gL⁄g
,
	gQu‹umPìr
.
	gQu‹umSîvî
> 
	$gëOb£rvögVõw
() {

831 
M≠
<
L⁄g
,
Qu‹umPìr
.
Qu‹umSîvî
> 
ªt
 =

832 
√w
 
HashM≠
<
L⁄g
, 
Qu‹umPìr
.
Qu‹umSîvî
>();

833 
M≠
<
L⁄g
,
Qu‹umPìr
.
Qu‹umSîvî
> 
võw
 = 
	`gëVõw
();

834 
Qu‹umSîvî
 
£rvî
 : 
võw
.
	`vÆues
()) {

835 i‡(
£rvî
.
ty≥
 =
Ló∫îTy≥
.
OBSERVER
) {

836 
ªt
.
	`put
(
£rvî
.
id
, server);

839  
ªt
;

840 
	}
}

847 
public
 
boﬁón
 
	$võwC⁄èös
(
L⁄g
 
sid
) {

848  
this
.
qu‹umPìrs
.
	`c⁄èösKey
(
sid
);

849 
	}
}

854 
public
 
	gSåög
[] 
	$gëQu‹umPìrs
() {

855 
Li°
<
Såög
> 
l
 = 
√w
 
AºayLi°
<String>();

856 
	`synchr⁄ized
 (
this
) {

857 i‡(
Àadî
 !
nuŒ
) {

858 
Ló∫îH™dÀr
 
fh
 : 
Àadî
.
	`gëLó∫îs
()) {

859 i‡(
fh
.
	`gëSockë
(Ë!
nuŒ
) {

860 
Såög
 
s
 = 
fh
.
	`gëSockë
().
	`gëRemŸeSockëAddªss
().
	`toSåög
();

861 i‡(
Àadî
.
	`isLó∫îSyn˚d
(
fh
))

862 
s
 += "*";

863 
l
.
	`add
(
s
);

866 } i‡(
fﬁlowî
 !
nuŒ
) {

867 
l
.
	`add
(
fﬁlowî
.
sock
.
	`gëRemŸeSockëAddªss
().
	`toSåög
());

870  
l
.
	`toAºay
(
√w
 
Såög
[0]);

871 
	}
}

873 
public
 
Såög
 
	$gëSîvîSèã
() {

874 
	`gëPìrSèã
()) {

875 
LOOKING
:

876  
Qu‹umSèts
.
Providî
.
LOOKING_STATE
;

877 
LEADING
:

878  
Qu‹umSèts
.
Providî
.
LEADING_STATE
;

879 
FOLLOWING
:

880  
Qu‹umSèts
.
Providî
.
FOLLOWING_STATE
;

881 
OBSERVING
:

882  
Qu‹umSèts
.
Providî
.
OBSERVING_STATE
;

884  
Qu‹umSèts
.
Providî
.
UNKNOWN_STATE
;

885 
	}
}

891 
public
 
	$gëMyid
() {

892  
myid
;

893 
	}
}

898 
public
 
	$£tMyid
(
myid
) {

899 
this
.
myid
 = myid;

900 
	}
}

905 
public
 
	$gëTickTime
() {

906  
tickTime
;

907 
	}
}

912 
public
 
	$£tTickTime
(
tickTime
) {

913 
LOG
.
	`öfo
("tickTimê£àtÿ" + 
tickTime
);

914 
this
.
tickTime
 =ÅickTime;

915 
	}
}

918 
public
 
	$gëMaxClõ¡CnxnsPîHo°
() {

919 
SîvîCnxnFa˘‹y
 
Ác
 = 
	`gëCnxnFa˘‹y
();

920 i‡(
Ác
 =
nuŒ
) {

923  
Ác
.
	`gëMaxClõ¡CnxnsPîHo°
();

924 
	}
}

927 
public
 
	$gëMöSessi⁄Timeout
() {

928  
möSessi⁄Timeout
 =-1 ? 
tickTime
 * 2 : minSessionTimeout;

929 
	}
}

932 
public
 
	$£tMöSessi⁄Timeout
(
mö
) {

933 
LOG
.
	`öfo
("möSessi⁄Timeouà£àtÿ" + 
mö
);

934 
this
.
möSessi⁄Timeout
 = 
mö
;

935 
	}
}

938 
public
 
	$gëMaxSessi⁄Timeout
() {

939  
maxSessi⁄Timeout
 =-1 ? 
tickTime
 * 20 : maxSessionTimeout;

940 
	}
}

943 
public
 
	$£tMaxSessi⁄Timeout
(
max
) {

944 
LOG
.
	`öfo
("maxSessi⁄Timeouà£àtÿ" + 
max
);

945 
this
.
maxSessi⁄Timeout
 = 
max
;

946 
	}
}

951 
public
 
	$gëInôLimô
() {

952  
öôLimô
;

953 
	}
}

958 
public
 
	$£tInôLimô
(
öôLimô
) {

959 
LOG
.
	`öfo
("öôLimô sëÅÿ" + 
öôLimô
);

960 
this
.
öôLimô
 = initLimit;

961 
	}
}

966 
public
 
	$gëTick
() {

967  
tick
;

968 
	}
}

974 
public
 
Qu‹umVîifõr
 
	$gëQu‹umVîifõr
(){

975  
qu‹umC⁄fig
;

977 
	}
}

979 
public
 
	$£tQu‹umVîifõr
(
Qu‹umVîifõr
 
qu‹umC⁄fig
){

980 
this
.
qu‹umC⁄fig
 = quorumConfig;

981 
	}
}

987 
public
 
EÀ˘i⁄
 
	$gëEÀ˘i⁄Alg
(){

988  
ñe˘i⁄Alg
;

989 
	}
}

994 
public
 
	$gëSyncLimô
() {

995  
syncLimô
;

996 
	}
}

1001 
public
 
	$£tSyncLimô
(
syncLimô
) {

1002 
this
.
syncLimô
 = syncLimit;

1003 
	}
}

1008 
public
 
	$gëEÀ˘i⁄Ty≥
() {

1009  
ñe˘i⁄Ty≥
;

1010 
	}
}

1015 
public
 
	$£tEÀ˘i⁄Ty≥
(
ñe˘i⁄Ty≥
) {

1016 
this
.
ñe˘i⁄Ty≥
 =ÉlectionType;

1017 
	}
}

1019 
public
 
SîvîCnxnFa˘‹y
 
	$gëCnxnFa˘‹y
() {

1020  
˙xnFa˘‹y
;

1021 
	}
}

1023 
public
 
	$£tCnxnFa˘‹y
(
SîvîCnxnFa˘‹y
 
˙xnFa˘‹y
) {

1024 
this
.
˙xnFa˘‹y
 = cnxnFactory;

1025 
	}
}

1027 
public
 
£tQu‹umPìrs
(
M≠
<
L⁄g
,
Qu‹umSîvî
> 
qu‹umPìrs
) {

1028 
	gthis
.
	gqu‹umPìrs
 = 
qu‹umPìrs
;

1031 
public
 
	$gëClõ¡P‹t
() {

1032  
˙xnFa˘‹y
.
	`gëLoˇlP‹t
();

1033 
	}
}

1035 
public
 
	$£tClõ¡P‹tAddªss
(
I√tSockëAddªss
 
addr
) {

1036 
	}
}

1038 
public
 
	$£tTxnFa˘‹y
(
FûeTxnS«pLog
 
Á˘‹y
) {

1039 
this
.
logFa˘‹y
 = 
Á˘‹y
;

1040 
	}
}

1042 
public
 
FûeTxnS«pLog
 
	$gëTxnFa˘‹y
() {

1043  
this
.
logFa˘‹y
;

1044 
	}
}

1050 
public
 
	$£tZKD©aba£
(
ZKD©aba£
 
d©aba£
) {

1051 
this
.
zkDb
 = 
d©aba£
;

1052 
	}
}

1054 
public
 
	$£tRu¬ög
(
boﬁón
 
ru¬ög
) {

1055 
this
.
ru¬ög
 =Ñunning;

1056 
	}
}

1058 
public
 
boﬁón
 
	$isRu¬ög
() {

1059  
ru¬ög
;

1060 
	}
}

1065 
public
 
Qu‹umCnxM™agî
 
	$gëQu‹umCnxM™agî
() {

1066  
qcm
;

1067 
	}
}

1068 
¥iv©e
 
	$ªadL⁄gFromFûe
(
Såög
 
«me
Ë
throws
 
IOEx˚±i⁄
 {

1069 
Fûe
 
fûe
 = 
√w
 
	`Fûe
(
logFa˘‹y
.
	`gëS«pDú
(), 
«me
);

1070 
Buf„ªdRódî
 
br
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`FûeRódî
(
fûe
));

1071 
Såög
 
löe
 = "";

1072 
åy
 {

1073 
löe
 = 
br
.
	`ªadLöe
();

1074  
L⁄g
.
	`∑r£L⁄g
(
löe
);

1075 } 
	`ˇtch
(
NumbîF‹m©Ex˚±i⁄
 
e
) {

1076 
throw
 
√w
 
	`IOEx˚±i⁄
("Found " + 
löe
 + " i¿" + 
fûe
);

1077 } 
föÆly
 {

1078 
br
.
	`˛o£
();

1080 
	}
}

1082 
¥iv©e
 
	gac˚±edEpoch
 = -1;

1083 
¥iv©e
 
	gcuºítEpoch
 = -1;

1085 
public
 
föÆ
 
Såög
 
	gCURRENT_EPOCH_FILENAME
 = "currentEpoch";

1087 
public
 
föÆ
 
Såög
 
	gACCEPTED_EPOCH_FILENAME
 = "acceptedEpoch";

1096 
¥iv©e
 
	$wrôeL⁄gToFûe
(
Såög
 
«me
, 
vÆue
Ë
throws
 
IOEx˚±i⁄
 {

1097 
Fûe
 
fûe
 = 
√w
 
	`Fûe
(
logFa˘‹y
.
	`gëS«pDú
(), 
«me
);

1098 
AtomicFûeOuçutSåóm
 
out
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
fûe
);

1099 
Buf„ªdWrôî
 
bw
 = 
√w
 
	`Buf„ªdWrôî
“ew 
	`OuçutSåómWrôî
(
out
));

1100 
boﬁón
 
ab‹ãd
 = 
Ál£
;

1101 
åy
 {

1102 
bw
.
	`wrôe
(
L⁄g
.
	`toSåög
(
vÆue
));

1103 
bw
.
	`Êush
();

1105 
out
.
	`Êush
();

1106 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

1107 
LOG
.
	`îr‹
("FaûedÅÿwrôê√w fûê" + 
fûe
, 
e
);

1110 
ab‹ãd
 = 
åue
;

1111 
out
.
	`ab‹t
();

1112 
throw
 
e
;

1113 } 
föÆly
 {

1114 i‡(!
ab‹ãd
) {

1117 
out
.
	`˛o£
();

1120 
	}
}

1122 
public
 
	$gëCuºítEpoch
(Ë
throws
 
IOEx˚±i⁄
 {

1123 i‡(
cuºítEpoch
 == -1) {

1124 
cuºítEpoch
 = 
	`ªadL⁄gFromFûe
(
CURRENT_EPOCH_FILENAME
);

1126  
cuºítEpoch
;

1127 
	}
}

1129 
public
 
	$gëAc˚±edEpoch
(Ë
throws
 
IOEx˚±i⁄
 {

1130 i‡(
ac˚±edEpoch
 == -1) {

1131 
ac˚±edEpoch
 = 
	`ªadL⁄gFromFûe
(
ACCEPTED_EPOCH_FILENAME
);

1133  
ac˚±edEpoch
;

1134 
	}
}

1136 
public
 
	$£tCuºítEpoch
(
e
Ë
throws
 
IOEx˚±i⁄
 {

1137 
cuºítEpoch
 = 
e
;

1138 
	`wrôeL⁄gToFûe
(
CURRENT_EPOCH_FILENAME
, 
e
);

1140 
	}
}

1142 
public
 
	$£tAc˚±edEpoch
(
e
Ë
throws
 
IOEx˚±i⁄
 {

1143 
ac˚±edEpoch
 = 
e
;

1144 
	`wrôeL⁄gToFûe
(
ACCEPTED_EPOCH_FILENAME
, 
e
);

1145 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

35 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gMDC
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umHõørchiˇl
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umMaj
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umVîifõr
;

45 
public
 cœs†
	cQu‹umPìrC⁄fig
 {

46 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umPìrC⁄fig
.
˛ass
);

48 
¥Ÿe˘ed
 
I√tSockëAddªss
 
	m˛õ¡P‹tAddªss
;

49 
¥Ÿe˘ed
 
Såög
 
	md©aDú
;

50 
¥Ÿe˘ed
 
Såög
 
	md©aLogDú
;

51 
¥Ÿe˘ed
 
	mtickTime
 = 
ZooKì≥rSîvî
.
DEFAULT_TICK_TIME
;

52 
¥Ÿe˘ed
 
	mmaxClõ¡Cnxns
 = 60;

54 
¥Ÿe˘ed
 
	mmöSessi⁄Timeout
 = -1;

56 
¥Ÿe˘ed
 
	mmaxSessi⁄Timeout
 = -1;

58 
¥Ÿe˘ed
 
	möôLimô
;

59 
¥Ÿe˘ed
 
	msyncLimô
;

60 
¥Ÿe˘ed
 
	mñe˘i⁄Alg
 = 3;

61 
¥Ÿe˘ed
 
	mñe˘i⁄P‹t
 = 2182;

62 
¥Ÿe˘ed
 
föÆ
 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m£rvîs
 =

63 
√w
 
HashM≠
<
L⁄g
, 
	mQu‹umSîvî
>();

64 
¥Ÿe˘ed
 
föÆ
 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	mob£rvîs
 =

65 
√w
 
HashM≠
<
L⁄g
, 
	mQu‹umSîvî
>();

67 
¥Ÿe˘ed
 
	m£rvîId
;

68 
¥Ÿe˘ed
 
	mHashM≠
<
	mL⁄g
, L⁄g> 
	m£rvîWeight
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

69 
¥Ÿe˘ed
 
	mHashM≠
<
	mL⁄g
, L⁄g> 
	m£rvîGroup
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

70 
¥Ÿe˘ed
 
	mnumGroups
 = 0;

71 
¥Ÿe˘ed
 
Qu‹umVîifõr
 
	mqu‹umVîifõr
;

72 
¥Ÿe˘ed
 
	m¢≠RëaöCou¡
 = 3;

73 
¥Ÿe˘ed
 
	mpurgeI¡îvÆ
 = 0;

75 
¥Ÿe˘ed
 
Ló∫îTy≥
 
	m≥îTy≥
 = Ló∫îTy≥.
PARTICIPANT
;

81 
¥iv©e
 
föÆ
 
	mMIN_SNAP_RETAIN_COUNT
 = 3;

83 @
SuµªssW¨nögs
("serial")

84 
public
 ˛as†
	cC⁄figEx˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

85 
public
 
C⁄figEx˚±i⁄
(
Såög
 
msg
) {

86 
su≥r
(
msg
);

88 
public
 
C⁄figEx˚±i⁄
(
Såög
 
msg
, 
Ex˚±i⁄
 
e
) {

89 
su≥r
(
msg
, 
e
);

98 
public
 
	$∑r£
(
Såög
 
∑th
Ë
throws
 
C⁄figEx˚±i⁄
 {

99 
Fûe
 
c⁄figFûe
 = 
√w
 
	`Fûe
(
∑th
);

101 
LOG
.
	`öfo
("Ródög c⁄figuøti⁄ from: " + 
c⁄figFûe
);

103 
åy
 {

104 i‡(!
c⁄figFûe
.
	`exi°s
()) {

105 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
c⁄figFûe
.
	`toSåög
()

109 
Pr›îtõs
 
cfg
 = 
√w
 
	`Pr›îtõs
();

110 
FûeI≈utSåóm
 
ö
 = 
√w
 
	`FûeI≈utSåóm
(
c⁄figFûe
);

111 
åy
 {

112 
cfg
.
	`lﬂd
(
ö
);

113 } 
föÆly
 {

114 
ö
.
	`˛o£
();

117 
	`∑r£Pr›îtõs
(
cfg
);

118 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

119 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Eº‹Öro˚ssög " + 
∑th
, 
e
);

120 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

121 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Eº‹Öro˚ssög " + 
∑th
, 
e
);

123 
	}
}

131 
public
 
	$∑r£Pr›îtõs
(
Pr›îtõs
 
zkPr›
)

132 
throws
 
IOEx˚±i⁄
, 
C⁄figEx˚±i⁄
 {

133 
˛õ¡P‹t
 = 0;

134 
Såög
 
˛õ¡P‹tAddªss
 = 
nuŒ
;

135 
E¡ry
<
Obje˘
, Obje˘> 
íåy
 : 
zkPr›
.
	`íåySë
()) {

136 
Såög
 
key
 = 
íåy
.
	`gëKey
().
	`toSåög
().
	`åim
();

137 
Såög
 
vÆue
 = 
íåy
.
	`gëVÆue
().
	`toSåög
().
	`åim
();

138 i‡(
key
.
	`equÆs
("dataDir")) {

139 
d©aDú
 = 
vÆue
;

140 } i‡(
key
.
	`equÆs
("dataLogDir")) {

141 
d©aLogDú
 = 
vÆue
;

142 } i‡(
key
.
	`equÆs
("clientPort")) {

143 
˛õ¡P‹t
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

144 } i‡(
key
.
	`equÆs
("clientPortAddress")) {

145 
˛õ¡P‹tAddªss
 = 
vÆue
.
	`åim
();

146 } i‡(
key
.
	`equÆs
("tickTime")) {

147 
tickTime
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

148 } i‡(
key
.
	`equÆs
("maxClientCnxns")) {

149 
maxClõ¡Cnxns
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

150 } i‡(
key
.
	`equÆs
("minSessionTimeout")) {

151 
möSessi⁄Timeout
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

152 } i‡(
key
.
	`equÆs
("maxSessionTimeout")) {

153 
maxSessi⁄Timeout
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

154 } i‡(
key
.
	`equÆs
("initLimit")) {

155 
öôLimô
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

156 } i‡(
key
.
	`equÆs
("syncLimit")) {

157 
syncLimô
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

158 } i‡(
key
.
	`equÆs
("electionAlg")) {

159 
ñe˘i⁄Alg
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

160 } i‡(
key
.
	`equÆs
("peerType")) {

161 i‡(
vÆue
.
	`toLowîCa£
().
	`equÆs
("observer")) {

162 
≥îTy≥
 = 
Ló∫îTy≥
.
OBSERVER
;

163 } i‡(
vÆue
.
	`toLowîCa£
().
	`equÆs
("participant")) {

164 
≥îTy≥
 = 
Ló∫îTy≥
.
PARTICIPANT
;

167 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Uƒecogni£dÖìπy≥: " + 
vÆue
);

169 } i‡(
key
.
	`equÆs
("autopurge.snapRetainCount")) {

170 
¢≠RëaöCou¡
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

171 } i‡(
key
.
	`equÆs
("autopurge.purgeInterval")) {

172 
purgeI¡îvÆ
 = 
I¡egî
.
	`∑r£I¡
(
vÆue
);

173 } i‡(
key
.
	`°¨tsWôh
("server.")) {

174 
dŸ
 = 
key
.
	`ödexOf
('.');

175 
sid
 = 
L⁄g
.
	`∑r£L⁄g
(
key
.
	`sub°rög
(
dŸ
 + 1));

176 
Såög
 
∑πs
[] = 
vÆue
.
	`•lô
(":");

177 i‡((
∑πs
.
Àngth
 != 2) && (parts.length != 3) && (parts.length !=4)) {

178 
LOG
.
	`îr‹
(
vÆue


182 
I√tSockëAddªss
 
addr
 = 
√w
 
	`I√tSockëAddªss
(
∑πs
[0],

183 
I¡egî
.
	`∑r£I¡
(
∑πs
[1]));

184 i‡(
∑πs
.
Àngth
 == 2) {

185 
£rvîs
.
	`put
(
L⁄g
.
	`vÆueOf
(
sid
), 
√w
 
	`Qu‹umSîvî
(sid, 
addr
));

186 } i‡(
∑πs
.
Àngth
 == 3) {

187 
I√tSockëAddªss
 
ñe˘i⁄Addr
 = 
√w
 
	`I√tSockëAddªss
(

188 
∑πs
[0], 
I¡egî
.
	`∑r£I¡
(parts[2]));

189 
£rvîs
.
	`put
(
L⁄g
.
	`vÆueOf
(
sid
), 
√w
 
	`Qu‹umSîvî
(sid, 
addr
,

190 
ñe˘i⁄Addr
));

191 } i‡(
∑πs
.
Àngth
 == 4) {

192 
I√tSockëAddªss
 
ñe˘i⁄Addr
 = 
√w
 
	`I√tSockëAddªss
(

193 
∑πs
[0], 
I¡egî
.
	`∑r£I¡
(parts[2]));

194 
Ló∫îTy≥
 
ty≥
 = Ló∫îTy≥.
PARTICIPANT
;

195 i‡(
∑πs
[3].
	`toLowîCa£
().
	`equÆs
("observer")) {

196 
ty≥
 = 
Ló∫îTy≥
.
OBSERVER
;

197 
ob£rvîs
.
	`put
(
L⁄g
.
	`vÆueOf
(
sid
), 
√w
 
	`Qu‹umSîvî
(sid, 
addr
,

198 
ñe˘i⁄Addr
,
ty≥
));

199 } i‡(
∑πs
[3].
	`toLowîCa£
().
	`equÆs
("participant")) {

200 
ty≥
 = 
Ló∫îTy≥
.
PARTICIPANT
;

201 
£rvîs
.
	`put
(
L⁄g
.
	`vÆueOf
(
sid
), 
√w
 
	`Qu‹umSîvî
(sid, 
addr
,

202 
ñe˘i⁄Addr
,
ty≥
));

204 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Uƒecogni£dÖìπy≥: " + 
vÆue
);

207 } i‡(
key
.
	`°¨tsWôh
("group")) {

208 
dŸ
 = 
key
.
	`ödexOf
('.');

209 
gid
 = 
L⁄g
.
	`∑r£L⁄g
(
key
.
	`sub°rög
(
dŸ
 + 1));

211 
numGroups
++;

213 
Såög
 
∑πs
[] = 
vÆue
.
	`•lô
(":");

214 
Såög
 
s
 : 
∑πs
){

215 
sid
 = 
L⁄g
.
	`∑r£L⁄g
(
s
);

216 if(
£rvîGroup
.
	`c⁄èösKey
(
sid
))

217 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Sîvî " + 
sid
 + "is in multiple groups");

219 
£rvîGroup
.
	`put
(
sid
, 
gid
);

222 } if(
key
.
	`°¨tsWôh
("weight")) {

223 
dŸ
 = 
key
.
	`ödexOf
('.');

224 
sid
 = 
L⁄g
.
	`∑r£L⁄g
(
key
.
	`sub°rög
(
dŸ
 + 1));

225 
£rvîWeight
.
	`put
(
sid
, 
L⁄g
.
	`∑r£L⁄g
(
vÆue
));

227 
Sy°em
.
	`£tPr›îty
("zookì≥r." + 
key
, 
vÆue
);

234 i‡(
¢≠RëaöCou¡
 < 
MIN_SNAP_RETAIN_COUNT
) {

235 
LOG
.
	`w¨n
("InvÆidáut›urge.¢≠RëaöCou¡: " + 
¢≠RëaöCou¡


236 + ". DeÁu…ögÅÿ" + 
MIN_SNAP_RETAIN_COUNT
);

237 
¢≠RëaöCou¡
 = 
MIN_SNAP_RETAIN_COUNT
;

240 i‡(
d©aDú
 =
nuŒ
) {

241 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("dataDir isÇot set");

243 i‡(
d©aLogDú
 =
nuŒ
) {

244 
d©aLogDú
 = 
d©aDú
;

246 i‡(!
√w
 
	`Fûe
(
d©aLogDú
).
	`isDúe˘‹y
()) {

247 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("d©aLogDú " + 
d©aLogDú


251 i‡(
˛õ¡P‹t
 == 0) {

252 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("clientPort isÇot set");

254 i‡(
˛õ¡P‹tAddªss
 !
nuŒ
) {

255 
this
.
˛õ¡P‹tAddªss
 = 
√w
 
	`I√tSockëAddªss
(

256 
I√tAddªss
.
	`gëByName
(
˛õ¡P‹tAddªss
), 
˛õ¡P‹t
);

258 
this
.
˛õ¡P‹tAddªss
 = 
√w
 
	`I√tSockëAddªss
(
˛õ¡P‹t
);

261 i‡(
tickTime
 == 0) {

262 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("tickTime isÇot set");

264 i‡(
möSessi⁄Timeout
 > 
maxSessi⁄Timeout
) {

265 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

268 i‡(
£rvîs
.
	`size
() == 0) {

269 i‡(
ob£rvîs
.
	`size
() > 0) {

270 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("Observers w/oÖarticipants isán invalid configuration");

276 } i‡(
£rvîs
.
	`size
() == 1) {

277 i‡(
ob£rvîs
.
	`size
() > 0) {

278 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("Observers w/o quorum isán invalid configuration");

283 
LOG
.
	`îr‹
("Invalid configuration, only one server specified (ignoring)");

284 
£rvîs
.
	`˛ór
();

285 } i‡(
£rvîs
.
	`size
() > 1) {

286 i‡(
£rvîs
.
	`size
() == 2) {

287 
LOG
.
	`w¨n
("No server failure will beÅolerated. " +

289 } i‡(
£rvîs
.
	`size
() % 2 == 0) {

290 
LOG
.
	`w¨n
("Non-optimial configuration, considerán oddÇumber of servers.");

292 i‡(
öôLimô
 == 0) {

293 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("initLimit isÇot set");

295 i‡(
syncLimô
 == 0) {

296 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("syncLimit isÇot set");

302 i‡(
ñe˘i⁄Alg
 != 0) {

303 
Qu‹umSîvî
 
s
 : 
£rvîs
.
	`vÆues
()) {

304 i‡(
s
.
ñe˘i⁄Addr
 =
nuŒ
)

305 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(

306 "MissögÉÀ˘i⁄Ö‹àf‹ sîvî: " + 
s
.
id
);

313 if(
£rvîGroup
.
	`size
() > 0){

314 if(
£rvîs
.
	`size
(Ë!
£rvîGroup
.size())

315 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Every server must be inÉxactly one group");

319 
Qu‹umSîvî
 
s
 : 
£rvîs
.
	`vÆues
()){

320 if(!
£rvîWeight
.
	`c⁄èösKey
(
s
.
id
))

321 
£rvîWeight
.
	`put
(
s
.
id
, () 1);

327 
qu‹umVîifõr
 = 
√w
 
	`Qu‹umHõørchiˇl
(
numGroups
,

328 
£rvîWeight
, 
£rvîGroup
);

334 
LOG
.
	`öfo
("DefaultingÅo majority quorums");

335 
qu‹umVîifõr
 = 
√w
 
	`Qu‹umMaj
(
£rvîs
.
	`size
());

340 
£rvîs
.
	`putAŒ
(
ob£rvîs
);

342 
Fûe
 
myIdFûe
 = 
√w
 
	`Fûe
(
d©aDú
, "myid");

343 i‡(!
myIdFûe
.
	`exi°s
()) {

344 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
myIdFûe
.
	`toSåög
()

347 
Buf„ªdRódî
 
br
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`FûeRódî
(
myIdFûe
));

348 
Såög
 
myIdSåög
;

349 
åy
 {

350 
myIdSåög
 = 
br
.
	`ªadLöe
();

351 } 
föÆly
 {

352 
br
.
	`˛o£
();

354 
åy
 {

355 
£rvîId
 = 
L⁄g
.
	`∑r£L⁄g
(
myIdSåög
);

356 
MDC
.
	`put
("myid", 
myIdSåög
);

357 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

358 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
("£rvîid " + 
myIdSåög


363 
Ló∫îTy≥
 
rﬁeBySîvîsLi°
 = 
ob£rvîs
.
	`c⁄èösKey
(
£rvîId
Ë? Ló∫îTy≥.
OBSERVER


364 : 
Ló∫îTy≥
.
PARTICIPANT
;

365 i‡(
rﬁeBySîvîsLi°
 !
≥îTy≥
) {

366 
LOG
.
	`w¨n
("Pì∏ty≥ from sîvî†li° (" + 
rﬁeBySîvîsLi°


367 + "Ëd€¢'àm©chÖìrTy≥ (" + 
≥îTy≥


370 
≥îTy≥
 = 
rﬁeBySîvîsLi°
;

373 
	}
}

375 
public
 
I√tSockëAddªss
 
	$gëClõ¡P‹tAddªss
(Ë{  
˛õ¡P‹tAddªss
; 
	}
}

376 
public
 
Såög
 
	$gëD©aDú
(Ë{  
d©aDú
; 
	}
}

377 
public
 
Såög
 
	$gëD©aLogDú
(Ë{  
d©aLogDú
; 
	}
}

378 
public
 
	$gëTickTime
(Ë{  
tickTime
; 
	}
}

379 
public
 
	$gëMaxClõ¡Cnxns
(Ë{  
maxClõ¡Cnxns
; 
	}
}

380 
public
 
	$gëMöSessi⁄Timeout
(Ë{  
möSessi⁄Timeout
; 
	}
}

381 
public
 
	$gëMaxSessi⁄Timeout
(Ë{  
maxSessi⁄Timeout
; 
	}
}

383 
public
 
	$gëInôLimô
(Ë{  
öôLimô
; 
	}
}

384 
public
 
	$gëSyncLimô
(Ë{  
syncLimô
; 
	}
}

385 
public
 
	$gëEÀ˘i⁄Alg
(Ë{  
ñe˘i⁄Alg
; 
	}
}

386 
public
 
	$gëEÀ˘i⁄P‹t
(Ë{  
ñe˘i⁄P‹t
; 
	}
}

388 
public
 
	$gëS«pRëaöCou¡
() {

389  
¢≠RëaöCou¡
;

390 
	}
}

392 
public
 
	$gëPurgeI¡îvÆ
() {

393  
purgeI¡îvÆ
;

394 
	}
}

396 
public
 
Qu‹umVîifõr
 
	$gëQu‹umVîifõr
() {

397  
qu‹umVîifõr
;

398 
	}
}

400 
public
 
	gM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	$gëSîvîs
() {

401  
CﬁÀ˘i⁄s
.
	`unmodifübÀM≠
(
£rvîs
);

402 
	}
}

404 
public
 
	$gëSîvîId
(Ë{  
£rvîId
; 
	}
}

406 
public
 
boﬁón
 
	$isDi°ribuãd
(Ë{  
£rvîs
.
	`size
(Ë> 1; 
	}
}

408 
public
 
Ló∫îTy≥
 
	$gëPìrTy≥
() {

409  
≥îTy≥
;

410 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gJMEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gM™agedUtû
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©adúCÀ™upM™agî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîMaö
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrC⁄fig
.
	gC⁄figEx˚±i⁄
;

63 
public
 cœs†
	cQu‹umPìrMaö
 {

64 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umPìrMaö
.
˛ass
);

66 
¥iv©e
 
föÆ
 
Såög
 
	mUSAGE
 = "Usage: QuorumPeerMain configfile";

68 
¥Ÿe˘ed
 
Qu‹umPìr
 
	mqu‹umPìr
;

75 
public
 
	$maö
(
Såög
[] 
¨gs
) {

76 
Qu‹umPìrMaö
 
maö
 = 
√w
 
	`Qu‹umPìrMaö
();

77 
åy
 {

78 
maö
.
	`öôülizeAndRun
(
¨gs
);

79 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

80 
LOG
.
	`îr‹
("InvÆidárgumíts,Éxôögábn‹mÆly", 
e
);

81 
LOG
.
	`öfo
(
USAGE
);

82 
Sy°em
.
îr
.
	`¥öén
(
USAGE
);

83 
Sy°em
.
	`exô
(2);

84 } 
	`ˇtch
 (
C⁄figEx˚±i⁄
 
e
) {

85 
LOG
.
	`îr‹
("InvÆid c⁄fig,Éxôögábn‹mÆly", 
e
);

86 
Sy°em
.
îr
.
	`¥öén
("Invalid config,Éxitingábnormally");

87 
Sy°em
.
	`exô
(2);

88 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

89 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄,Éxôögábn‹mÆly", 
e
);

90 
Sy°em
.
	`exô
(1);

92 
LOG
.
	`öfo
("ExitingÇormally");

93 
Sy°em
.
	`exô
(0);

96 
¥Ÿe˘ed
 
	$öôülizeAndRun
(
Såög
[] 
¨gs
)

97 
throws
 
C⁄figEx˚±i⁄
, 
IOEx˚±i⁄


99 
Qu‹umPìrC⁄fig
 
c⁄fig
 = 
√w
 
	`Qu‹umPìrC⁄fig
();

100 i‡(
¨gs
.
Àngth
 == 1) {

101 
c⁄fig
.
	`∑r£
(
¨gs
[0]);

105 
D©adúCÀ™upM™agî
 
purgeMgr
 = 
√w
 
	`D©adúCÀ™upM™agî
(
c⁄fig


106 .
	`gëD©aDú
(), 
c⁄fig
.
	`gëD©aLogDú
(), config

107 .
	`gëS«pRëaöCou¡
(), 
c⁄fig
.
	`gëPurgeI¡îvÆ
());

108 
purgeMgr
.
	`°¨t
();

110 i‡(
¨gs
.
Àngth
 =1 && 
c⁄fig
.
£rvîs
.
	`size
() > 0) {

111 
	`runFromC⁄fig
(
c⁄fig
);

113 
LOG
.
	`w¨n
("EitherÇo config orÇo quorum defined in config,Ñunning "

116 
ZooKì≥rSîvîMaö
.
	`maö
(
¨gs
);

118 
	}
}

120 
public
 
	$runFromC⁄fig
(
Qu‹umPìrC⁄fig
 
c⁄fig
Ë
throws
 
IOEx˚±i⁄
 {

121 
åy
 {

122 
M™agedUtû
.
	`ªgi°îLog4jMBóns
();

123 } 
	`ˇtch
 (
JMEx˚±i⁄
 
e
) {

124 
LOG
.
	`w¨n
("U«bÀÅÿªgi°îÜog4j JMX c⁄åﬁ", 
e
);

127 
LOG
.
	`öfo
("Starting quorumÖeer");

128 
åy
 {

129 
SîvîCnxnFa˘‹y
 
˙xnFa˘‹y
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
();

130 
˙xnFa˘‹y
.
	`c⁄figuª
(
c⁄fig
.
	`gëClõ¡P‹tAddªss
(),

131 
c⁄fig
.
	`gëMaxClõ¡Cnxns
());

133 
qu‹umPìr
 = 
√w
 
	`Qu‹umPìr
();

134 
qu‹umPìr
.
	`£tClõ¡P‹tAddªss
(
c⁄fig
.
	`gëClõ¡P‹tAddªss
());

135 
qu‹umPìr
.
	`£tTxnFa˘‹y
(
√w
 
	`FûeTxnS«pLog
(

136 
√w
 
	`Fûe
(
c⁄fig
.
	`gëD©aLogDú
()),

137 
√w
 
	`Fûe
(
c⁄fig
.
	`gëD©aDú
())));

138 
qu‹umPìr
.
	`£tQu‹umPìrs
(
c⁄fig
.
	`gëSîvîs
());

139 
qu‹umPìr
.
	`£tEÀ˘i⁄Ty≥
(
c⁄fig
.
	`gëEÀ˘i⁄Alg
());

140 
qu‹umPìr
.
	`£tMyid
(
c⁄fig
.
	`gëSîvîId
());

141 
qu‹umPìr
.
	`£tTickTime
(
c⁄fig
.
	`gëTickTime
());

142 
qu‹umPìr
.
	`£tMöSessi⁄Timeout
(
c⁄fig
.
	`gëMöSessi⁄Timeout
());

143 
qu‹umPìr
.
	`£tMaxSessi⁄Timeout
(
c⁄fig
.
	`gëMaxSessi⁄Timeout
());

144 
qu‹umPìr
.
	`£tInôLimô
(
c⁄fig
.
	`gëInôLimô
());

145 
qu‹umPìr
.
	`£tSyncLimô
(
c⁄fig
.
	`gëSyncLimô
());

146 
qu‹umPìr
.
	`£tQu‹umVîifõr
(
c⁄fig
.
	`gëQu‹umVîifõr
());

147 
qu‹umPìr
.
	`£tCnxnFa˘‹y
(
˙xnFa˘‹y
);

148 
qu‹umPìr
.
	`£tZKD©aba£
(
√w
 
	`ZKD©aba£
(qu‹umPìr.
	`gëTxnFa˘‹y
()));

149 
qu‹umPìr
.
	`£tLó∫îTy≥
(
c⁄fig
.
	`gëPìrTy≥
());

151 
qu‹umPìr
.
	`°¨t
();

152 
qu‹umPìr
.
	`joö
();

153 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

155 
LOG
.
	`w¨n
("Qu‹um Pì∏öãºu±ed", 
e
);

157 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumStats.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
public
 cœs†
	cQu‹umSèts
 {

22 
¥iv©e
 
föÆ
 
Providî
 
	m¥ovidî
;

24 
public
 
öãrÁ˚
 
	mProvidî
 {

25 
public
 
föÆ
 
Såög
 
	mUNKNOWN_STATE
 = "unknown";

26 
public
 
föÆ
 
Såög
 
	mLOOKING_STATE
 = "leaderelection";

27 
public
 
föÆ
 
Såög
 
	mLEADING_STATE
 = "leading";

28 
public
 
föÆ
 
Såög
 
	mFOLLOWING_STATE
 = "following";

29 
public
 
föÆ
 
Såög
 
	mOBSERVING_STATE
 = "observing";

30 
public
 
	mSåög
[] 
gëQu‹umPìrs
();

31 
public
 
Såög
 
gëSîvîSèã
();

34 
¥Ÿe˘ed
 
	$Qu‹umSèts
(
Providî
 
¥ovidî
) {

35 
this
.
¥ovidî
 =Örovider;

36 
	}
}

38 
public
 
Såög
 
	$gëSîvîSèã
(){

39  
¥ovidî
.
	`gëSîvîSèã
();

40 
	}
}

42 
public
 
	gSåög
[] 
	$gëQu‹umPìrs
(){

43  
¥ovidî
.
	`gëQu‹umPìrs
();

44 
	}
}

46 @
Ovîride


47 
public
 
Såög
 
	$toSåög
(){

48 
SåögBuûdî
 
sb
=
√w
 
	`SåögBuûdî
(
su≥r
.
	`toSåög
());

49 
Såög
 
°©e
=
	`gëSîvîSèã
();

50 if(
°©e
.
	`equÆs
(
Providî
.
LEADING_STATE
)){

51 
sb
.
	`≠≥nd
("Followers:");

52 
Såög
 
f
: 
	`gëQu‹umPìrs
()){

53 
sb
.
	`≠≥nd
(" ").≠≥nd(
f
);

55 
sb
.
	`≠≥nd
("\n");

56 }if(
°©e
.
	`equÆs
(
Providî
.
FOLLOWING_STATE
)

57 || 
°©e
.
	`equÆs
(
Providî
.
OBSERVING_STATE
)){

58 
sb
.
	`≠≥nd
("Leader: ");

59 
Såög
[] 
ldr
=
	`gëQu‹umPìrs
();

60 if(
ldr
.
Àngth
>0)

61 
sb
.
	`≠≥nd
(
ldr
[0]);

63 
sb
.
	`≠≥nd
("not connected");

64 
sb
.
	`≠≥nd
("\n");

66  
sb
.
	`toSåög
();

67 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

20 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

30 
public
 
ab°ø˘
 cœs†
	cQu‹umZooKì≥rSîvî
 
exãnds
 
	mZooKì≥rSîvî
 {

31 
¥Ÿe˘ed
 
föÆ
 
Qu‹umPìr
 
	m£lf
;

33 
¥Ÿe˘ed
 
	$Qu‹umZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
, 
tickTime
,

34 
möSessi⁄Timeout
, 
maxSessi⁄Timeout
,

35 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
, 
Qu‹umPìr
 
£lf
)

37 
	`su≥r
(
logFa˘‹y
, 
tickTime
, 
möSessi⁄Timeout
, 
maxSessi⁄Timeout
,

38 
åìBuûdî
, 
zkDb
);

39 
this
.
£lf
 = self;

42 @
Ovîride


43 
public
 
	$dumpC⁄f
(
PrötWrôî
 
pwrôî
) {

44 
su≥r
.
	`dumpC⁄f
(
pwrôî
);

46 
pwrôî
.
	`¥öt
("initLimit=");

47 
pwrôî
.
	`¥öén
(
£lf
.
	`gëInôLimô
());

48 
pwrôî
.
	`¥öt
("syncLimit=");

49 
pwrôî
.
	`¥öén
(
£lf
.
	`gëSyncLimô
());

50 
pwrôî
.
	`¥öt
("electionAlg=");

51 
pwrôî
.
	`¥öén
(
£lf
.
	`gëEÀ˘i⁄Ty≥
());

52 
pwrôî
.
	`¥öt
("electionPort=");

53 
pwrôî
.
	`¥öén
(
£lf
.
qu‹umPìrs
.
	`gë
(£lf.
	`gëId
()).
ñe˘i⁄Addr


54 .
	`gëP‹t
());

55 
pwrôî
.
	`¥öt
("quorumPort=");

56 
pwrôî
.
	`¥öén
(
£lf
.
qu‹umPìrs
.
	`gë
(£lf.
	`gëId
()).
addr
.
	`gëP‹t
());

57 
pwrôî
.
	`¥öt
("peerType=");

58 
pwrôî
.
	`¥öén
(
£lf
.
	`gëLó∫îTy≥
().
	`‹döÆ
());

59 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîBón
;

28 
public
 cœs†
	cRódO∆yBón
 
exãnds
 
	mZooKì≥rSîvîBón
 {

30 
public
 
	$RódO∆yBón
(
ZooKì≥rSîvî
 
zks
) {

31 
	`su≥r
(
zks
);

34 
public
 
Såög
 
	$gëName
() {

36 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gRïlyHódî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
.
	gReque°Pro˚ss‹Ex˚±i⁄
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gXidRﬁlovîEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

42 
public
 cœs†
	cRódO∆yReque°Pro˚ss‹
 
exãnds
 
Thªad
 
im∂emíts
 
	mReque°Pro˚ss‹
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
RódO∆yReque°Pro˚ss‹
.
˛ass
);

46 
¥iv©e
 
	mLökedBlockögQueue
<
	mReque°
> 
	mqueuedReque°s
 = 
√w
 
LökedBlockögQueue
<
Reque°
>();

48 
¥iv©e
 
boﬁón
 
	mföished
 = 
Ál£
;

50 
¥iv©e
 
Reque°Pro˚ss‹
 
	m√xtPro˚ss‹
;

52 
¥iv©e
 
ZooKì≥rSîvî
 
	mzks
;

54 
public
 
	$RódO∆yReque°Pro˚ss‹
(
ZooKì≥rSîvî
 
zks
, 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

55 
	`su≥r
("RódO∆yReque°Pro˚ss‹:" + 
zks
.
	`gëSîvîId
());

56 
this
.
zks
 = zks;

57 
this
.
√xtPro˚ss‹
 =ÇextProcessor;

60 
public
 
	$run
() {

61 
åy
 {

62 !
föished
) {

63 
Reque°
 
ªque°
 = 
queuedReque°s
.
	`èke
();

66 
åa˚Mask
 = 
ZooTø˚
.
CLIENT_REQUEST_TRACE_MASK
;

67 i‡(
ªque°
.
ty≥
 =
OpCode
.
pög
) {

68 
åa˚Mask
 = 
ZooTø˚
.
CLIENT_PING_TRACE_MASK
;

70 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

71 
ZooTø˚
.
	`logReque°
(
LOG
, 
åa˚Mask
, 'R', 
ªque°
, "");

73 i‡(
Reque°
.
ªque°OfDóth
 =
ªque°
) {

78 
ªque°
.
ty≥
) {

79 
OpCode
.
sync
:

80 
OpCode
.
¸óã
:

81 
OpCode
.
dñëe
:

82 
OpCode
.
£tD©a
:

83 
OpCode
.
£tACL
:

85 
RïlyHódî
 
hdr
 = 
√w
 
	`RïlyHódî
(
ªque°
.
cxid
, 
zks
.
	`gëZKD©aba£
()

86 .
	`gëD©aTªeLa°Pro˚s£dZxid
(), 
Code
.
NOTREADONLY
.
	`ötVÆue
());

87 
åy
 {

88 
ªque°
.
˙xn
.
	`£ndRe•⁄£
(
hdr
, 
nuŒ
,Çull);

89 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

90 
LOG
.
	`îr‹
("IOÉx˚±i⁄ whûê£ndögÑe•⁄£", 
e
);

96 i‡(
√xtPro˚ss‹
 !
nuŒ
) {

97 
√xtPro˚ss‹
.
	`¥o˚ssReque°
(
ªque°
);

100 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

101 
LOG
.
	`îr‹
("U√x≥˘ed i¡îru±i⁄", 
e
);

102 } 
	`ˇtch
 (
Reque°Pro˚ss‹Ex˚±i⁄
 
e
) {

103 i‡(
e
.
	`gëCau£
(Ë
ö°™˚of
 
XidRﬁlovîEx˚±i⁄
) {

104 
LOG
.
	`öfo
(
e
.
	`gëCau£
().
	`gëMesßge
());

106 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

107 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

108 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

110 
LOG
.
	`öfo
("ReadOnlyRequestProcessorÉxitedÜoop!");

111 
	}
}

113 @
Ovîride


114 
public
 
	$¥o˚ssReque°
(
Reque°
 
ªque°
) {

115 i‡(!
föished
) {

116 
queuedReque°s
.
	`add
(
ªque°
);

118 
	}
}

120 @
Ovîride


121 
public
 
	$shutdown
() {

122 
föished
 = 
åue
;

123 
queuedReque°s
.
	`˛ór
();

124 
queuedReque°s
.
	`add
(
Reque°
.
ªque°OfDóth
);

125 
√xtPro˚ss‹
.
	`shutdown
();

126 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªeBón
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gFöÆReque°Pro˚ss‹
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gPªpReque°Pro˚ss‹
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvîBón
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

39 
public
 cœs†
	cRódO∆yZooKì≥rSîvî
 
exãnds
 
	mQu‹umZooKì≥rSîvî
 {

41 
¥iv©e
 vﬁ©ûê
boﬁón
 
	mshutdown
 = 
Ál£
;

42 
	$RódO∆yZooKì≥rSîvî
(
FûeTxnS«pLog
 
logFa˘‹y
, 
Qu‹umPìr
 
£lf
,

43 
D©aTªeBuûdî
 
åìBuûdî
, 
ZKD©aba£
 
zkDb
) {

44 
	`su≥r
(
logFa˘‹y
, 
£lf
.
tickTime
, sñf.
möSessi⁄Timeout
, sñf.
maxSessi⁄Timeout
,

45 
åìBuûdî
, 
zkDb
, 
£lf
);

48 @
Ovîride


49 
¥Ÿe˘ed
 
	$£tupReque°Pro˚ss‹s
() {

50 
Reque°Pro˚ss‹
 
föÆPro˚ss‹
 = 
√w
 
	`FöÆReque°Pro˚ss‹
(
this
);

51 
Reque°Pro˚ss‹
 
¥ïPro˚ss‹
 = 
√w
 
	`PªpReque°Pro˚ss‹
(
this
, 
föÆPro˚ss‹
);

52 ((
PªpReque°Pro˚ss‹
Ë
¥ïPro˚ss‹
).
	`°¨t
();

53 
fú°Pro˚ss‹
 = 
√w
 
	`RódO∆yReque°Pro˚ss‹
(
this
, 
¥ïPro˚ss‹
);

54 ((
RódO∆yReque°Pro˚ss‹
Ë
fú°Pro˚ss‹
).
	`°¨t
();

55 
	}
}

57 @
Ovîride


58 
public
 
synchr⁄ized
 
	$°¨tup
() {

60 i‡(
shutdown
) {

61 
LOG
.
	`w¨n
("Not starting Read-only serverás startup follows shutdown!");

64 
	`ªgi°îJMX
(
√w
 
	`RódO∆yBón
(
this
), 
£lf
.
jmxLoˇlPìrBón
);

65 
su≥r
.
	`°¨tup
();

66 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
this
);

67 
LOG
.
	`öfo
("Read-only server started");

68 
	}
}

70 @
Ovîride


71 
¥Ÿe˘ed
 
	$ªgi°îJMX
() {

73 
åy
 {

74 
jmxD©aTªeBón
 = 
√w
 
	`D©aTªeBón
(
	`gëZKD©aba£
().
	`gëD©aTªe
());

75 
MBónRegi°ry
.
	`gëIn°™˚
().(
jmxD©aTªeBón
, 
jmxSîvîBón
);

76 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

77 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

78 
jmxD©aTªeBón
 = 
nuŒ
;

80 
	}
}

82 
public
 
	$ªgi°îJMX
(
ZooKì≥rSîvîBón
 
£rvîBón
, 
LoˇlPìrBón
 
loˇlPìrBón
) {

84 
åy
 {

85 
jmxSîvîBón
 = 
£rvîBón
;

86 
MBónRegi°ry
.
	`gëIn°™˚
().(
£rvîBón
, 
loˇlPìrBón
);

87 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

88 
LOG
.
	`w¨n
("FaûedÅÿªgi°î wôh JMX", 
e
);

89 
jmxSîvîBón
 = 
nuŒ
;

91 
	}
}

93 @
Ovîride


94 
¥Ÿe˘ed
 
	$uƒegi°îJMX
() {

96 
åy
 {

97 i‡(
jmxD©aTªeBón
 !
nuŒ
) {

98 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxD©aTªeBón
);

100 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

101 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

103 
jmxD©aTªeBón
 = 
nuŒ
;

104 
	}
}

106 
¥Ÿe˘ed
 
	$uƒegi°îJMX
(
ZooKì≥rSîvî
 
zks
) {

108 
åy
 {

109 i‡(
jmxSîvîBón
 !
nuŒ
) {

110 
MBónRegi°ry
.
	`gëIn°™˚
().
	`uƒegi°î
(
jmxSîvîBón
);

112 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

113 
LOG
.
	`w¨n
("FaûedÅÿuƒegi°î wôh JMX", 
e
);

115 
jmxSîvîBón
 = 
nuŒ
;

116 
	}
}

118 @
Ovîride


119 
public
 
Såög
 
	$gëSèã
() {

121 
	}
}

127 @
Ovîride


128 
public
 
	$gëSîvîId
() {

129  
£lf
.
	`gëId
();

130 
	}
}

132 @
Ovîride


133 
public
 
synchr⁄ized
 
	$shutdown
() {

134 
shutdown
 = 
åue
;

135 
	`uƒegi°îJMX
(
this
);

138 
£lf
.
˙xnFa˘‹y
.
	`£tZooKì≥rSîvî
(
nuŒ
);

140 
£lf
.
˙xnFa˘‹y
.
	`˛o£AŒ
();

143 
su≥r
.
	`shutdown
();

144 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/RemotePeerBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

28 
public
 
˛ass
 
RemŸePìrBón
 
im∂emíts
 
	gRemŸePìrMXBón
,
	gZKMBónInfo
 {

29 
¥iv©e
 
	gQu‹umPìr
.
Qu‹umSîvî
 
	g≥î
;

31 
public
 
RemŸePìrBón
(
Qu‹umPìr
.
Qu‹umSîvî
 
≥î
){

32 
	gthis
.
	g≥î
=
≥î
;

34 
public
 
Såög
 
gëName
() {

35  "ª∂iˇ."+
	g≥î
.
	gid
;

37 
public
 
boﬁón
 
isHiddí
() {

38  
	gÁl£
;

41 
public
 
Såög
 
gëQu‹umAddªss
() {

42  
	g≥î
.
	gaddr
.
gëHo°Name
()+":"+≥î.addr.
gëP‹t
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/RemotePeerMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

24 
public
 
öãrÁ˚
 
	gRemŸePìrMXBón
 {

28 
public
 
Såög
 
gëName
();

32 
public
 
Såög
 
gëQu‹umAddªss
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/SendAckRequestProcessor.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFlushabÀ
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

31 
public
 
˛ass
 
SídAckReque°Pro˚ss‹
 
im∂emíts
 
	gReque°Pro˚ss‹
, 
	gFlushabÀ
 {

32 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
SídAckReque°Pro˚ss‹
.
˛ass
);

34 
Ló∫î
 
	gÀ¨√r
;

36 
SídAckReque°Pro˚ss‹
(
Ló∫î
 
≥î
) {

37 
	gthis
.
	gÀ¨√r
 = 
≥î
;

40 
public
 
¥o˚ssReque°
(
Reque°
 
si
) {

41 if(
	gsi
.
	gty≥
 !
OpCode
.
sync
){

42 
Qu‹umPackë
 
qp
 = 
√w
 Qu‹umPackë(
Lódî
.
ACK
, 
si
.
hdr
.
gëZxid
(), 
nuŒ
,

43 
nuŒ
);

44 
	gåy
 {

45 
	gÀ¨√r
.
wrôePackë
(
qp
, 
Ál£
);

46 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

47 
	gLOG
.
w¨n
("Closög c⁄√˘i⁄ÅÿÀadî,Éx˚±i⁄ durögÖackë síd", 
e
);

48 
	gåy
 {

49 i‡(!
	gÀ¨√r
.
	gsock
.
isClo£d
()) {

50 
	gÀ¨√r
.
	gsock
.
˛o£
();

52 } 
ˇtch
 (
IOEx˚±i⁄
 
e1
) {

54 
	gLOG
.
debug
("Ign‹ögÉº‹ closögÅhêc⁄√˘i⁄", 
e1
);

60 
public
 
Êush
(Ë
throws
 
	gIOEx˚±i⁄
 {

61 
	gåy
 {

62 
	gÀ¨√r
.
wrôePackë
(
nuŒ
, 
åue
);

63 } 
ˇtch
(
IOEx˚±i⁄
 
e
) {

64 
	gLOG
.
w¨n
("Closög c⁄√˘i⁄ÅÿÀadî,Éx˚±i⁄ durögÖackë síd", 
e
);

65 
	gåy
 {

66 i‡(!
	gÀ¨√r
.
	gsock
.
isClo£d
()) {

67 
	gÀ¨√r
.
	gsock
.
˛o£
();

69 } 
ˇtch
 (
IOEx˚±i⁄
 
e1
) {

71 
	gLOG
.
debug
("Ign‹ögÉº‹ closögÅhêc⁄√˘i⁄", 
e1
);

76 
public
 
shutdown
() {

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ServerBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gZKMBónInfo
;

28 
public
 
ab°ø˘
 
˛ass
 
SîvîBón
 
im∂emíts
 
	gSîvîMXBón
, 
	gZKMBónInfo
 {

29 
¥iv©e
 
föÆ
 
D©e
 
	g°¨tTime
=
√w
 Date();

31 
public
 
boﬁón
 
isHiddí
() {

32  
	gÁl£
;

35 
public
 
Såög
 
gëSèπTime
() {

36  
	g°¨tTime
.
toSåög
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ServerMXBean.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

24 
public
 
öãrÁ˚
 
	gSîvîMXBón
 {

28 
public
 
Såög
 
gëName
();

32 
public
 
Såög
 
gëSèπTime
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/StateSummary.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

25 
public
 cœs†
	cSèãSumm¨y
 {

26 
¥iv©e
 
	mcuºítEpoch
;

27 
¥iv©e
 
	mœ°Zxid
;

28 
public
 
	$SèãSumm¨y
(
cuºítEpoch
, 
œ°Zxid
) {

29 
this
.
cuºítEpoch
 = currentEpoch;

30 
this
.
œ°Zxid
 =ÜastZxid;

33 
public
 
	$gëCuºítEpoch
() {

34  
cuºítEpoch
;

35 
	}
}

37 
public
 
	$gëLa°Zxid
() {

38  
œ°Zxid
;

39 
	}
}

41 
public
 
boﬁón
 
	$isM‹eRe˚¡Th™
(
SèãSumm¨y
 
ss
) {

42  (
cuºítEpoch
 > 
ss
.cuºítEpochË|| (cuºítEpoch =ss.cuºítEpoch && 
œ°Zxid
 > ss.lastZxid);

43 
	}
}

44 @
Ovîride


45 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
obj
) {

46 i‡(!(
obj
 
ö°™˚of
 
SèãSumm¨y
)) {

47  
Ál£
;

49 
SèãSumm¨y
 
ss
 = (SèãSumm¨y)
obj
;

50  
cuºítEpoch
 =
ss
.cuºítEpoch && 
œ°Zxid
 == ss.lastZxid;

51 
	}
}

53 @
Ovîride


54 
public
 
	$hashCode
() {

55  ()(
cuºítEpoch
 ^ 
œ°Zxid
);

56 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Vote.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

24 
public
 cœs†
	cVŸe
 {

26 
public
 
	$VŸe
(
id
, 
zxid
) {

27 
this
.
id
 = id;

28 
this
.
zxid
 = zxid;

29 
this
.
ñe˘i⁄Epoch
 = -1;

30 
this
.
≥îEpoch
 = -1;

31 
this
.
°©e
 = 
SîvîSèã
.
LOOKING
;

34 
public
 
	$VŸe
(
id
, 
zxid
, 
≥îEpoch
) {

35 
this
.
id
 = id;

36 
this
.
zxid
 = zxid;

37 
this
.
ñe˘i⁄Epoch
 = -1;

38 
this
.
≥îEpoch
 =ÖeerEpoch;

39 
this
.
°©e
 = 
SîvîSèã
.
LOOKING
;

40 
	}
}

42 
public
 
	$VŸe
(
id
, 
zxid
, 
ñe˘i⁄Epoch
, 
≥îEpoch
) {

43 
this
.
id
 = id;

44 
this
.
zxid
 = zxid;

45 
this
.
ñe˘i⁄Epoch
 =ÉlectionEpoch;

46 
this
.
≥îEpoch
 =ÖeerEpoch;

47 
this
.
°©e
 = 
SîvîSèã
.
LOOKING
;

48 
	}
}

50 
public
 
	$VŸe
(
id
, 
zxid
, 
ñe˘i⁄Epoch
, 
≥îEpoch
, 
SîvîSèã
 
°©e
) {

51 
this
.
id
 = id;

52 
this
.
zxid
 = zxid;

53 
this
.
ñe˘i⁄Epoch
 =ÉlectionEpoch;

54 
this
.
°©e
 = state;

55 
this
.
≥îEpoch
 =ÖeerEpoch;

56 
	}
}

58 
föÆ
 
¥iv©e
 
	gid
;

60 
föÆ
 
¥iv©e
 
	gzxid
;

62 
föÆ
 
¥iv©e
 
	gñe˘i⁄Epoch
;

64 
föÆ
 
¥iv©e
 
	g≥îEpoch
;

66 
public
 
	$gëId
() {

67  
id
;

68 
	}
}

70 
public
 
	$gëZxid
() {

71  
zxid
;

72 
	}
}

74 
public
 
	$gëEÀ˘i⁄Epoch
() {

75  
ñe˘i⁄Epoch
;

76 
	}
}

78 
public
 
	$gëPìrEpoch
() {

79  
≥îEpoch
;

80 
	}
}

82 
public
 
SîvîSèã
 
	$gëSèã
() {

83  
°©e
;

84 
	}
}

86 
föÆ
 
¥iv©e
 
SîvîSèã
 
	g°©e
;

88 @
Ovîride


89 
public
 
boﬁón
 
	$equÆs
(
Obje˘
 
o
) {

90 i‡(!(
o
 
ö°™˚of
 
VŸe
)) {

91  
Ál£
;

93 
VŸe
 
Ÿhî
 = (VŸeË
o
;

94  (
id
 =
Ÿhî
.id && 
zxid
 =Ÿhî.zxid && 
ñe˘i⁄Epoch
 =Ÿhî.ñe˘i⁄Epoch && 
≥îEpoch
 == other.peerEpoch);

96 
	}
}

98 @
Ovîride


99 
public
 
	$hashCode
() {

100  (Ë(
id
 & 
zxid
);

101 
	}
}

103 
public
 
Såög
 
	$toSåög
() {

104  "(" + 
id
 + ", " + 
L⁄g
.
	`toHexSåög
(
zxid
Ë+ ", " + L⁄g.toHexSåög(
≥îEpoch
) + ")";

105 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeRódî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrC⁄fig
.
	gC⁄figEx˚±i⁄
;

67 
public
 cœs†
	cQu‹umHõørchiˇl
 
im∂emíts
 
	mQu‹umVîifõr
 {

68 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umHõørchiˇl
.
˛ass
);

70 
	mHashM≠
<
	mL⁄g
, L⁄g> 
	m£rvîWeight
;

71 
	mHashM≠
<
	mL⁄g
, L⁄g> 
	m£rvîGroup
;

72 
	mHashM≠
<
	mL⁄g
, L⁄g> 
	mgroupWeight
;

74 
	mnumGroups
;

81 
public
 
	$Qu‹umHõørchiˇl
(
Såög
 
fûíame
)

82 
throws
 
C⁄figEx˚±i⁄
 {

83 
this
.
£rvîWeight
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

84 
this
.
£rvîGroup
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

85 
this
.
groupWeight
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

86 
this
.
numGroups
 = 0;

88 
	`ªadC⁄figFûe
(
fûíame
);

96 
public
 
	$Qu‹umHõørchiˇl
(
Pr›îtõs
 
qp
)

97 
throws
 
C⁄figEx˚±i⁄
 {

98 
this
.
£rvîWeight
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

99 
this
.
£rvîGroup
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

100 
this
.
groupWeight
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

101 
this
.
numGroups
 = 0;

103 
	`∑r£
(
qp
);

105 
LOG
.
	`öfo
(
£rvîWeight
.
	`size
(Ë+ ", " + 
£rvîGroup
.size(Ë+ ", " + 
groupWeight
.size());

106 
	}
}

117 
public
 
Qu‹umHõørchiˇl
(
numGroups
,

118 
HashM≠
<
L⁄g
, L⁄g> 
£rvîWeight
,

119 
HashM≠
<
L⁄g
, L⁄g> 
£rvîGroup
)

121 
	gthis
.
	g£rvîWeight
 = 
£rvîWeight
;

122 
	gthis
.
	g£rvîGroup
 = 
£rvîGroup
;

123 
	gthis
.
	ggroupWeight
 = 
√w
 
HashM≠
<
L⁄g
, 
	gL⁄g
>();

125 
	gthis
.
	gnumGroups
 = 
numGroups
;

126 
compuãGroupWeight
();

135 
public
 
	$gëWeight
(
id
){

136  
£rvîWeight
.
	`gë
(
id
);

137 
	}
}

143 
¥iv©e
 
	$ªadC⁄figFûe
(
Såög
 
fûíame
)

144 
throws
 
C⁄figEx˚±i⁄
{

145 
Fûe
 
c⁄figFûe
 = 
√w
 
	`Fûe
(
fûíame
);

147 
LOG
.
	`öfo
("Ródög c⁄figuøti⁄ from: " + 
c⁄figFûe
);

149 
åy
 {

150 i‡(!
c⁄figFûe
.
	`exi°s
()) {

151 
throw
 
√w
 
	`IŒegÆArgumítEx˚±i⁄
(
c⁄figFûe
.
	`toSåög
()

155 
Pr›îtõs
 
cfg
 = 
√w
 
	`Pr›îtõs
();

156 
FûeI≈utSåóm
 
ö
 = 
√w
 
	`FûeI≈utSåóm
(
c⁄figFûe
);

157 
åy
 {

158 
cfg
.
	`lﬂd
(
ö
);

159 } 
föÆly
 {

160 
ö
.
	`˛o£
();

163 
	`∑r£
(
cfg
);

164 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

165 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Eº‹Öro˚ssög " + 
fûíame
, 
e
);

166 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

167 
throw
 
√w
 
	`C⁄figEx˚±i⁄
("Eº‹Öro˚ssög " + 
fûíame
, 
e
);

170 
	}
}

176 
¥iv©e
 
	$∑r£
(
Pr›îtõs
 
qu‹umPr›
){

177 
E¡ry
<
Obje˘
, Obje˘> 
íåy
 : 
qu‹umPr›
.
	`íåySë
()) {

178 
Såög
 
key
 = 
íåy
.
	`gëKey
().
	`toSåög
();

179 
Såög
 
vÆue
 = 
íåy
.
	`gëVÆue
().
	`toSåög
();

180 i‡(
key
.
	`°¨tsWôh
("group")) {

181 
dŸ
 = 
key
.
	`ödexOf
('.');

182 
gid
 = 
L⁄g
.
	`∑r£L⁄g
(
key
.
	`sub°rög
(
dŸ
 + 1));

184 
numGroups
++;

186 
Såög
 
∑πs
[] = 
vÆue
.
	`•lô
(":");

187 
Såög
 
s
 : 
∑πs
){

188 
sid
 = 
L⁄g
.
	`∑r£L⁄g
(
s
);

189 
£rvîGroup
.
	`put
(
sid
, 
gid
);

193 } if(
key
.
	`°¨tsWôh
("weight")) {

194 
dŸ
 = 
key
.
	`ödexOf
('.');

195 
sid
 = 
L⁄g
.
	`∑r£L⁄g
(
key
.
	`sub°rög
(
dŸ
 + 1));

196 
£rvîWeight
.
	`put
(
sid
, 
L⁄g
.
	`∑r£L⁄g
(
vÆue
));

200 
	`compuãGroupWeight
();

201 
	}
}

208 
¥iv©e
 
	$compuãGroupWeight
(){

209 
sid
 : 
£rvîGroup
.
	`keySë
()){

210 
L⁄g
 
gid
 = 
£rvîGroup
.
	`gë
(
sid
);

211 if(!
groupWeight
.
	`c⁄èösKey
(
gid
))

212 
groupWeight
.
	`put
(
gid
, 
£rvîWeight
.
	`gë
(
sid
));

214 
tŸÆWeight
 = 
£rvîWeight
.
	`gë
(
sid
Ë+ 
groupWeight
.gë(
gid
);

215 
groupWeight
.
	`put
(
gid
, 
tŸÆWeight
);

222 
weight
: 
groupWeight
.
	`vÆues
()){

223 
LOG
.
	`debug
("Grou∞weight: " + 
weight
);

224 if(
weight
 == (() 0)){

225 
numGroups
--;

226 
LOG
.
	`debug
("O√ zîo-weighàgroup: " + 1 + ", " + 
numGroups
);

229 
	}
}

234 
public
 
boﬁón
 
c⁄èösQu‹um
(
HashSë
<
L⁄g
> 
£t
){

235 
	gHashM≠
<
	gL⁄g
, L⁄g> 
	gex∑nsi⁄
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

240 if(
	g£t
.
size
(Ë=0Ë 
Ál£
;

241 
	gLOG
.
debug
("Së size: " + 
£t
.
size
());

243 
	gsid
 : 
£t
){

244 
L⁄g
 
gid
 = 
£rvîGroup
.
gë
(
sid
);

245 if(!
	gex∑nsi⁄
.
c⁄èösKey
(
gid
))

246 
	gex∑nsi⁄
.
put
(
gid
, 
£rvîWeight
.
gë
(
sid
));

248 
	gtŸÆWeight
 = 
£rvîWeight
.
gë
(
sid
Ë+ 
ex∑nsi⁄
.gë(
gid
);

249 
	gex∑nsi⁄
.
put
(
gid
, 
tŸÆWeight
);

256 
	gmajGroupCou¡î
 = 0;

257 
	ggid
 : 
ex∑nsi⁄
.
keySë
()) {

258 
LOG
.
debug
("Grou∞öfo: " + 
ex∑nsi⁄
.
gë
(
gid
Ë+ ", " + gid + ", " + 
groupWeight
.get(gid));

259 if(
	gex∑nsi⁄
.
gë
(
gid
Ë> (
	ggroupWeight
.get(gid) / 2) )

260 
	gmajGroupCou¡î
++;

263 
	gLOG
.
debug
("Maj‹ôy grou∞cou¡î: " + 
majGroupCou¡î
 + ", " + 
numGroups
);

264 if((
	gmajGroupCou¡î
 > (
	gnumGroups
 / 2))){

265 
	gLOG
.
debug
("Posôivê£àsize: " + 
£t
.
size
());

266  
	gåue
;

269 
	gLOG
.
debug
("Neg©ivê£àsize: " + 
£t
.
size
());

270  
	gÁl£
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

29 
public
 cœs†
	cQu‹umMaj
 
im∂emíts
 
	mQu‹umVîifõr
 {

30 
	mhÆf
;

37 
public
 
	$Qu‹umMaj
(
n
){

38 
this
.
hÆf
 = 
n
/2;

46 
public
 
	$gëWeight
(
id
){

48 
	}
}

53 
public
 
boﬁón
 
c⁄èösQu‹um
(
HashSë
<
L⁄g
> 
£t
){

54  (
	g£t
.
size
(Ë> 
	ghÆf
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

30 
public
 
öãrÁ˚
 
	gQu‹umVîifõr
 {

31 
gëWeight
(
id
);

32 
boﬁón
 
c⁄èösQu‹um
(
HashSë
<
L⁄g
> 
£t
);

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/DataNodeV1.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gIndex
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°edV1
;

41 
public
 cœs†
	cD©aNodeV1
 
im∂emíts
 
	mRec‹d
 {

42 
	$D©aNodeV1
() {

46 
	`D©aNodeV1
(
D©aNodeV1
 
∑ª¡
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
, 
SètPîsi°edV1
 
°©
) {

47 
this
.
∑ª¡
 =Öarent;

48 
this
.
d©a
 = data;

49 
this
.
a˛
 =ácl;

50 
this
.
°©
 = stat;

51 
this
.
chûdªn
 = 
√w
 
HashSë
<
Såög
>();

52 
	}
}

60 
public
 
£tChûdªn
(
HashSë
<
Såög
> 
chûdªn
) {

61 
	gthis
.
	gchûdªn
 = 
chûdªn
;

68 
public
 
	gHashSë
<
	gSåög
> 
	$gëChûdªn
() {

69  
this
.
chûdªn
;

70 
	}
}

72 
D©aNodeV1
 
	g∑ª¡
;

74 
byã
 
	gd©a
[];

76 
	gLi°
<
	gACL
> 
	ga˛
;

78 
public
 
SètPîsi°edV1
 
	g°©
;

80 
	gHashSë
<
	gSåög
> 
	gchûdªn
 = 
√w
 
HashSë
<
Såög
>();

82 
public
 
	$c›ySèt
(
Sèt
 
to
) {

83 
to
.
	`£tAvîsi⁄
(
°©
.
	`gëAvîsi⁄
());

84 
to
.
	`£tCtime
(
°©
.
	`gëCtime
());

85 
to
.
	`£tCvîsi⁄
(
°©
.
	`gëCvîsi⁄
());

86 
to
.
	`£tCzxid
(
°©
.
	`gëCzxid
());

87 
to
.
	`£tMtime
(
°©
.
	`gëMtime
());

88 
to
.
	`£tMzxid
(
°©
.
	`gëMzxid
());

89 
to
.
	`£tVîsi⁄
(
°©
.
	`gëVîsi⁄
());

90 
to
.
	`£tEphemîÆOw√r
(
°©
.
	`gëEphemîÆOw√r
());

91 
to
.
	`£tD©aLígth
(
d©a
.
Àngth
);

92 
to
.
	`£tNumChûdªn
(
chûdªn
.
	`size
());

93 
	}
}

95 
public
 
	$de£rülize
(
I≈utArchive
 
¨chive
, 
Såög
 
èg
)

96 
throws
 
IOEx˚±i⁄
 {

97 
¨chive
.
	`°¨tRec‹d
("node");

98 
d©a
 = 
¨chive
.
	`ªadBuf„r
("data");

99 
Index
 
i
 = 
¨chive
.
	`°¨tVe˘‹
("acl");

100 i‡(
i
 !
nuŒ
) {

101 
a˛
 = 
√w
 
AºayLi°
<
ACL
>();

102 !
i
.
	`d⁄e
()) {

103 
ACL
 
a
 = 
√w
 
	`ACL
();

104 
a
.
	`de£rülize
(
¨chive
, "aclEntry");

105 
a˛
.
	`add
(
a
);

106 
i
.
	`ö¸
();

109 
¨chive
.
	`ídVe˘‹
("acl");

110 
°©
 = 
√w
 
	`SètPîsi°edV1
();

111 
°©
.
	`de£rülize
(
¨chive
, "stat");

112 
¨chive
.
	`ídRec‹d
("node");

113 
	}
}

115 
synchr⁄ized
 
public
 
	$£rülize
(
OuçutArchive
 
¨chive
, 
Såög
 
èg
)

116 
throws
 
IOEx˚±i⁄
 {

117 
¨chive
.
	`°¨tRec‹d
(
this
, "node");

118 
¨chive
.
	`wrôeBuf„r
(
d©a
, "data");

119 
¨chive
.
	`°¨tVe˘‹
(
a˛
, "acl");

120 i‡(
a˛
 !
nuŒ
) {

121 
ACL
 
a
 : 
a˛
) {

122 
a
.
	`£rülize
(
¨chive
, "aclEntry");

125 
¨chive
.
	`ídVe˘‹
(
a˛
, "acl");

126 
°©
.
	`£rülize
(
¨chive
, "stat");

127 
¨chive
.
	`ídRec‹d
(
this
, "node");

128 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/DataTreeV1.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°edV1
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gW©chM™agî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

62 
public
 cœs†
	cD©aTªeV1
 {

63 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
D©aTªeV1
.
˛ass
);

69 
¥iv©e
 
	mC⁄cuºítHashM≠
<
	mSåög
, 
	mD©aNodeV1
> 
	mnodes
 = 
√w
 
C⁄cuºítHashM≠
<
Såög
, DataNodeV1>();

71 
¥iv©e
 
W©chM™agî
 
	md©aW©ches
 = 
√w
 WatchManager();

73 
¥iv©e
 
W©chM™agî
 
	mchûdW©ches
 = 
√w
 WatchManager();

78 
¥iv©e
 
	mM≠
<
	mL⁄g
, 
	mHashSë
<
	mSåög
>> 
	mïhemîÆs
 = 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, HashSet<String>>();

84 
public
 
	mM≠
<
	mL⁄g
, 
	mHashSë
<
	mSåög
>> 
	$gëEphemîÆsM≠
() {

85  
this
.
ïhemîÆs
;

88 
public
 
	`£tEphemîÆsM≠
(
M≠
<
L⁄g
, 
HashSë
<
Såög
>> 
ïhemîÆs
) {

89 
this
.
ïhemîÆs
 =Éphemerals;

90 
	}
}

92 @
SuµªssW¨nögs
("unchecked")

93 
public
 
	gHashSë
<
	gSåög
> 
	$gëEphemîÆs
(
£ssi⁄Id
) {

94 
HashSë
<
Såög
> 
ªtv
 = 
ïhemîÆs
.
	`gë
(
£ssi⁄Id
);

95 i‡(
ªtv
 =
nuŒ
) {

96  
√w
 
HashSë
<
Såög
>();

98 
HashSë
<
Såög
> 
˛⁄ed
 = 
nuŒ
;

99 
	`synchr⁄ized
(
ªtv
) {

100 
˛⁄ed
 = (
HashSë
<
Såög
>Ë
ªtv
.
	`˛⁄e
();

102  
˛⁄ed
;

103 
	}
}

105 
public
 
	gCﬁÀ˘i⁄
<
	gL⁄g
> 
	$gëSessi⁄s
() {

106  
ïhemîÆs
.
	`keySë
();

107 
	}
}

109 
public
 
D©aNodeV1
 
	$gëNode
(
Såög
 
∑th
) {

110  
nodes
.
	`gë
(
∑th
);

111 
	}
}

117 
¥iv©e
 
D©aNodeV1
 
	groŸ
 = 
√w
 D©aNodeV1(
nuŒ
,Çew 
byã
[0],ÇuŒ,Çew 
SètPîsi°edV1
());

119 
public
 
	$D©aTªeV1
() {

121 
nodes
.
	`put
("", 
roŸ
);

122 
nodes
.
	`put
("/", 
roŸ
);

123 
	}
}

125 
public
 
	$c›ySètPîsi°ed
(
SètPîsi°edV1
 
‰om
, SètPîsi°edV1 
to
) {

126 
to
.
	`£tAvîsi⁄
(
‰om
.
	`gëAvîsi⁄
());

127 
to
.
	`£tCtime
(
‰om
.
	`gëCtime
());

128 
to
.
	`£tCvîsi⁄
(
‰om
.
	`gëCvîsi⁄
());

129 
to
.
	`£tCzxid
(
‰om
.
	`gëCzxid
());

130 
to
.
	`£tMtime
(
‰om
.
	`gëMtime
());

131 
to
.
	`£tMzxid
(
‰om
.
	`gëMzxid
());

132 
to
.
	`£tVîsi⁄
(
‰om
.
	`gëVîsi⁄
());

133 
to
.
	`£tEphemîÆOw√r
(
‰om
.
	`gëEphemîÆOw√r
());

134 
	}
}

136 
public
 
	$c›ySèt
(
Sèt
 
‰om
, Sèà
to
) {

137 
to
.
	`£tAvîsi⁄
(
‰om
.
	`gëAvîsi⁄
());

138 
to
.
	`£tCtime
(
‰om
.
	`gëCtime
());

139 
to
.
	`£tCvîsi⁄
(
‰om
.
	`gëCvîsi⁄
());

140 
to
.
	`£tCzxid
(
‰om
.
	`gëCzxid
());

141 
to
.
	`£tMtime
(
‰om
.
	`gëMtime
());

142 
to
.
	`£tMzxid
(
‰om
.
	`gëMzxid
());

143 
to
.
	`£tVîsi⁄
(
‰om
.
	`gëVîsi⁄
());

144 
to
.
	`£tEphemîÆOw√r
(
‰om
.
	`gëEphemîÆOw√r
());

145 
to
.
	`£tD©aLígth
(
‰om
.
	`gëD©aLígth
());

146 
to
.
	`£tNumChûdªn
(
‰om
.
	`gëNumChûdªn
());

147 
	}
}

178 
public
 
Såög
 
¸óãNode
(Såög 
∑th
, 
byã
 
d©a
[], 
Li°
<
ACL
> 
a˛
,

179 
ïhemîÆOw√r
, 
zxid
, 
time
)

180 
throws
 
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
, Kì≥rEx˚±i⁄.
	gNodeExi°sEx˚±i⁄
 {

181 
	gœ°Sœsh
 = 
∑th
.
œ°IndexOf
('/');

182 
Såög
 
	g∑ª¡Name
 = 
∑th
.
sub°rög
(0, 
œ°Sœsh
);

183 
Såög
 
	gchûdName
 = 
∑th
.
sub°rög
(
œ°Sœsh
 + 1);

184 
SètPîsi°edV1
 
	g°©
 = 
√w
 StatPersistedV1();

185 
	g°©
.
£tCtime
(
time
);

186 
	g°©
.
£tMtime
(
time
);

187 
	g°©
.
£tCzxid
(
zxid
);

188 
	g°©
.
£tMzxid
(
zxid
);

189 
	g°©
.
£tVîsi⁄
(0);

190 
	g°©
.
£tAvîsi⁄
(0);

191 
	g°©
.
£tEphemîÆOw√r
(
ïhemîÆOw√r
);

192 
D©aNodeV1
 
	g∑ª¡
 = 
nodes
.
gë
(
∑ª¡Name
);

193 i‡(
	g∑ª¡
 =
nuŒ
) {

194 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
();

196 
synchr⁄ized
 (
∑ª¡
) {

197 i‡(
	g∑ª¡
.
	gchûdªn
.
c⁄èös
(
chûdName
)) {

198 
throw
 
√w
 
	gKì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
();

200 
	gcvî
 = 
∑ª¡
.
°©
.
gëCvîsi⁄
();

201 
	gcvî
++;

202 
	g∑ª¡
.
	g°©
.
£tCvîsi⁄
(
cvî
);

203 
D©aNodeV1
 
	gchûd
 = 
√w
 D©aNodeV1(
∑ª¡
, 
d©a
, 
a˛
, 
°©
);

204 
	g∑ª¡
.
	gchûdªn
.
add
(
chûdName
);

205 
	gnodes
.
put
(
∑th
, 
chûd
);

206 i‡(
	gïhemîÆOw√r
 != 0) {

207 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
gë
(
ïhemîÆOw√r
);

208 i‡(
	gli°
 =
nuŒ
) {

209 
li°
 = 
√w
 
HashSë
<
Såög
>();

210 
	gïhemîÆs
.
put
(
ïhemîÆOw√r
, 
li°
);

212 
synchr⁄ized
(
li°
) {

213 
	gli°
.
add
(
∑th
);

217 
	gd©aW©ches
.
åiggîW©ch
(
∑th
, 
Evít
.
EvítTy≥
.
NodeCª©ed
);

218 
	gchûdW©ches
.
åiggîW©ch
(
∑ª¡Name
.
equÆs
("")?"/":∑ª¡Name, 
Evít
.
EvítTy≥
.
NodeChûdªnCh™ged
);

219  
	g∑th
;

222 
public
 
	$dñëeNode
(
Såög
 
∑th
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

223 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

224 
Såög
 
∑ª¡Name
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

225 
Såög
 
chûdName
 = 
∑th
.
	`sub°rög
(
œ°Sœsh
 + 1);

226 
D©aNodeV1
 
node
 = 
nodes
.
	`gë
(
∑th
);

227 i‡(
node
 =
nuŒ
) {

228 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

230 
nodes
.
	`ªmove
(
∑th
);

231 
D©aNodeV1
 
∑ª¡
 = 
nodes
.
	`gë
(
∑ª¡Name
);

232 i‡(
∑ª¡
 =
nuŒ
) {

233 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

235 
	`synchr⁄ized
 (
∑ª¡
) {

236 
∑ª¡
.
chûdªn
.
	`ªmove
(
chûdName
);

237 
∑ª¡
.
°©
.
	`£tCvîsi⁄
’¨ít.°©.
	`gëCvîsi⁄
() + 1);

238 
eow√r
 = 
node
.
°©
.
	`gëEphemîÆOw√r
();

239 i‡(
eow√r
 != 0) {

240 
HashSë
<
Såög
> 
nodes
 = 
ïhemîÆs
.
	`gë
(
eow√r
);

241 i‡(
nodes
 !
nuŒ
) {

242 
	`synchr⁄ized
(
nodes
) {

243 
nodes
.
	`ªmove
(
∑th
);

247 
node
.
∑ª¡
 = 
nuŒ
;

249 
Së
<
W©chî
> 
¥o˚s£d
 =

250 
d©aW©ches
.
	`åiggîW©ch
(
∑th
, 
EvítTy≥
.
NodeDñëed
);

251 
chûdW©ches
.
	`åiggîW©ch
(
∑th
, 
EvítTy≥
.
NodeDñëed
, 
¥o˚s£d
);

252 
chûdW©ches
.
	`åiggîW©ch
(
∑ª¡Name
.
	`equÆs
("")?"/":∑ª¡Name, 
EvítTy≥
.
NodeChûdªnCh™ged
);

253 
	}
}

255 
public
 
Sèt
 
	$£tD©a
(
Såög
 
∑th
, 
byã
 
d©a
[], 
vîsi⁄
, 
zxid
,

256 
time
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

257 
Sèt
 
s
 = 
√w
 
	`Sèt
();

258 
D©aNodeV1
 
n
 = 
nodes
.
	`gë
(
∑th
);

259 i‡(
n
 =
nuŒ
) {

260 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

262 
	`synchr⁄ized
 (
n
) {

263 
n
.
d©a
 = data;

264 
n
.
°©
.
	`£tMtime
(
time
);

265 
n
.
°©
.
	`£tMzxid
(
zxid
);

266 
n
.
°©
.
	`£tVîsi⁄
(
vîsi⁄
);

267 
n
.
	`c›ySèt
(
s
);

269 
d©aW©ches
.
	`åiggîW©ch
(
∑th
, 
EvítTy≥
.
NodeD©aCh™ged
);

270  
s
;

271 
	}
}

273 
public
 
	gbyã
[] 
	$gëD©a
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

274 
D©aNodeV1
 
n
 = 
nodes
.
	`gë
(
∑th
);

275 i‡(
n
 =
nuŒ
) {

276 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

278 
	`synchr⁄ized
 (
n
) {

279 
n
.
	`c›ySèt
(
°©
);

280 i‡(
w©chî
 !
nuŒ
) {

281 
d©aW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

283  
n
.
d©a
;

285 
	}
}

287 
public
 
Sèt
 
	$°©Node
(
Såög
 
∑th
, 
W©chî
 
w©chî
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

288 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

289 
D©aNodeV1
 
n
 = 
nodes
.
	`gë
(
∑th
);

290 i‡(
w©chî
 !
nuŒ
) {

291 
d©aW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

293 i‡(
n
 =
nuŒ
) {

294 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

296 
	`synchr⁄ized
 (
n
) {

297 
n
.
	`c›ySèt
(
°©
);

298  
°©
;

300 
	}
}

302 
public
 
	gAºayLi°
<
	gSåög
> 
	$gëChûdªn
(
Såög
 
∑th
, 
Sèt
 
°©
, 
W©chî
 
w©chî
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

303 
D©aNodeV1
 
n
 = 
nodes
.
	`gë
(
∑th
);

304 i‡(
n
 =
nuŒ
) {

305 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

307 
	`synchr⁄ized
 (
n
) {

308 
AºayLi°
<
Såög
> 
chûdªn
 = 
√w
 ArrayList<String>();

309 
chûdªn
.
	`addAŒ
(
n
.children);

310 i‡(
w©chî
 !
nuŒ
) {

311 
chûdW©ches
.
	`addW©ch
(
∑th
, 
w©chî
);

313  
chûdªn
;

315 
	}
}

317 
public
 
Sèt
 
£tACL
(
Såög
 
∑th
, 
Li°
<
ACL
> 
a˛
, 
vîsi⁄
Ë
throws
 
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
 {

318 
Sèt
 
	g°©
 = 
√w
 Stat();

319 
D©aNodeV1
 
	gn
 = 
nodes
.
gë
(
∑th
);

320 i‡(
	gn
 =
nuŒ
) {

321 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
();

323 
synchr⁄ized
 (
n
) {

324 
	gn
.
	g°©
.
£tAvîsi⁄
(
vîsi⁄
);

325 
	gn
.
	ga˛
 = 
a˛
;

326 
	gn
.
c›ySèt
(
°©
);

327  
	g°©
;

331 @
SuµªssW¨nögs
("unchecked")

332 
public
 
	gLi°
<
	gACL
> 
	$gëACL
(
Såög
 
∑th
, 
Sèt
 
°©
Ë
throws
 
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 {

333 
D©aNodeV1
 
n
 = 
nodes
.
	`gë
(
∑th
);

334 i‡(
n
 =
nuŒ
) {

335 
throw
 
√w
 
Kì≥rEx˚±i⁄
.
	`NoNodeEx˚±i⁄
();

337 
	`synchr⁄ized
 (
n
) {

338 
n
.
	`c›ySèt
(
°©
);

339  
√w
 
AºayLi°
<
ACL
>(
n
.
a˛
);

341 
	}
}

343 
public
 cœs†
	cPro˚ssTxnResu…
 {

344 
public
 
	g˛õ¡Id
;

346 
public
 
	gcxid
;

348 
public
 
	gzxid
;

350 
public
 
	gîr
;

352 
public
 
	gty≥
;

354 
public
 
Såög
 
	g∑th
;

356 
public
 
Sèt
 
	g°©
;

364 @
Ovîride


365 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

366 i‡(
o
 
ö°™˚of
 
	gPro˚ssTxnResu…
) {

367 
Pro˚ssTxnResu…
 
	gŸhî
 = (Pro˚ssTxnResu…Ë
o
;

368  
	gŸhî
.
	g˛õ¡Id
 =
˛õ¡Id
 && 
Ÿhî
.
cxid
 == cxid;

370  
	gÁl£
;

379 @
Ovîride


380 
public
 
hashCode
() {

381  (Ë((
	g˛õ¡Id
 ^ 
	gcxid
Ë% 
	gI¡egî
.
	gMAX_VALUE
);

386 
public
 vﬁ©ûê
	gœ°Pro˚s£dZxid
 = 0;

388 @
SuµªssW¨nögs
("unchecked")

389 
public
 
Pro˚ssTxnResu…
 
	$¥o˚ssTxn
(
TxnHódî
 
hódî
, 
Rec‹d
 
txn
) {

390 
Pro˚ssTxnResu…
 
rc
 = 
√w
 
	`Pro˚ssTxnResu…
();

392 
Såög
 
debug
 = "";

393 
åy
 {

394 
rc
.
˛õ¡Id
 = 
hódî
.
	`gëClõ¡Id
();

395 
rc
.
cxid
 = 
hódî
.
	`gëCxid
();

396 
rc
.
zxid
 = 
hódî
.
	`gëZxid
();

397 
rc
.
ty≥
 = 
hódî
.
	`gëTy≥
();

398 
rc
.
îr
 = 0;

399 i‡(
rc
.
zxid
 > 
œ°Pro˚s£dZxid
) {

400 
œ°Pro˚s£dZxid
 = 
rc
.
zxid
;

402 
hódî
.
	`gëTy≥
()) {

403 
OpCode
.
¸óã
:

404 
Cª©eTxn
 
¸óãTxn
 = (Cª©eTxnË
txn
;

405 
debug
 = "Cª©êå™ß˘i⁄ f‹ " + 
¸óãTxn
.
	`gëP©h
();

406 
	`¸óãNode
(
¸óãTxn
.
	`gëP©h
(), cª©eTxn.
	`gëD©a
(), createTxn

407 .
	`gëA˛
(), 
¸óãTxn
.
	`gëEphemîÆ
(Ë? 
hódî


408 .
	`gëClõ¡Id
(Ë: 0, 
hódî
.
	`gëZxid
(), hódî.
	`gëTime
());

409 
rc
.
∑th
 = 
¸óãTxn
.
	`gëP©h
();

411 
OpCode
.
dñëe
:

412 
DñëeTxn
 
dñëeTxn
 = (DñëeTxnË
txn
;

413 
debug
 = "Dñëêå™ß˘i⁄ f‹ " + 
dñëeTxn
.
	`gëP©h
();

414 
	`dñëeNode
(
dñëeTxn
.
	`gëP©h
());

416 
OpCode
.
£tD©a
:

417 
SëD©aTxn
 
£tD©aTxn
 = (SëD©aTxnË
txn
;

418 
debug
 = "Së d©®f‹Åønß˘i⁄ f‹ " + 
£tD©aTxn
.
	`gëP©h
();

419 
rc
.
°©
 = 
	`£tD©a
(
£tD©aTxn
.
	`gëP©h
(), sëD©aTxn.
	`gëD©a
(),

420 
£tD©aTxn
.
	`gëVîsi⁄
(), 
hódî
.
	`gëZxid
(), header

421 .
	`gëTime
());

423 
OpCode
.
£tACL
:

424 
SëACLTxn
 
£tACLTxn
 = (SëACLTxnË
txn
;

425 
debug
 = "Së ACL f‹Åønß˘i⁄ f‹ " + 
£tACLTxn
.
	`gëP©h
();

426 
rc
.
°©
 = 
	`£tACL
(
£tACLTxn
.
	`gëP©h
(), sëACLTxn.
	`gëA˛
(),

427 
£tACLTxn
.
	`gëVîsi⁄
());

429 
OpCode
.
˛o£Sessi⁄
:

430 
	`kûlSessi⁄
(
hódî
.
	`gëClõ¡Id
());

432 
OpCode
.
îr‹
:

433 
Eº‹Txn
 
îrTxn
 = (Eº‹TxnË
txn
;

434 
rc
.
îr
 = 
îrTxn
.
	`gëEº
();

437 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

439 i‡(
öôülized


440 || (
e
.
	`code
(Ë!
Code
.
NONODE


441 && 
e
.
	`code
(Ë!
Code
.
NODEEXISTS
)) {

442 
LOG
.
	`w¨n
("Faûed:" + 
debug
, 
e
);

445  
rc
;

446 
	}
}

448 
	$kûlSessi⁄
(
£ssi⁄
) {

455 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
	`ªmove
(
£ssi⁄
);

456 i‡(
li°
 !
nuŒ
) {

457 
Såög
 
∑th
 : 
li°
) {

458 
åy
 {

459 
	`dñëeNode
(
∑th
);

460 i‡(
LOG
.
	`isDebugE«bÀd
()) {

461 
LOG
.
	`debug
("DñëögÉphemîÆÇodê" + 
∑th


463 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄
));

465 } 
	`ˇtch
 (
NoNodeEx˚±i⁄
 
e
) {

466 
LOG
.
	`w¨n
("Ign‹ög NoNodeEx˚±i⁄ f‹Ö©h " + 
∑th


468 + 
L⁄g
.
	`toHexSåög
(
£ssi⁄
));

472 
	}
}

483 
	$£rülizeNode
(
OuçutArchive
 
ﬂ
, 
SåögBuûdî
 
∑th
)

484 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

485 
Såög
 
∑thSåög
 = 
∑th
.
	`toSåög
();

486 
D©aNodeV1
 
node
 = 
	`gëNode
(
∑thSåög
);

487 i‡(
node
 =
nuŒ
) {

490 
Såög
 
chûdªn
[] = 
nuŒ
;

491 
	`synchr⁄ized
 (
node
) {

492 
scou¡
++;

493 
ﬂ
.
	`wrôeSåög
(
∑thSåög
, "path");

494 
ﬂ
.
	`wrôeRec‹d
(
node
, "node");

495 
chûdªn
 = 
node
.chûdªn.
	`toAºay
(
√w
 
Såög
[node.chûdªn.
	`size
()]);

497 
∑th
.
	`≠≥nd
('/');

498 
off
 = 
∑th
.
	`Àngth
();

499 i‡(
chûdªn
 !
nuŒ
) {

500 
Såög
 
chûd
 : 
chûdªn
) {

504 
∑th
.
	`dñëe
(
off
, 
I¡egî
.
MAX_VALUE
);

505 
∑th
.
	`≠≥nd
(
chûd
);

506 
	`£rülizeNode
(
ﬂ
, 
∑th
);

509 
	}
}

511 
	gscou¡
;

513 
public
 
boﬁón
 
	göôülized
 = 
Ál£
;

515 
public
 
	$£rülize
(
OuçutArchive
 
ﬂ
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
,

516 
I¡îru±edEx˚±i⁄
 {

517 
scou¡
 = 0;

518 
	`£rülizeNode
(
ﬂ
, 
√w
 
	`SåögBuûdî
(""));

521 i‡(
roŸ
 !
nuŒ
) {

522 
ﬂ
.
	`wrôeSåög
("/", "path");

524 
	}
}

526 
public
 
	$de£rülize
(
I≈utArchive
 
ü
, 
Såög
 
èg
Ë
throws
 
IOEx˚±i⁄
 {

527 
nodes
.
	`˛ór
();

528 
Såög
 
∑th
 = 
ü
.
	`ªadSåög
("path");

529 !
∑th
.
	`equÆs
("/")) {

530 
D©aNodeV1
 
node
 = 
√w
 
	`D©aNodeV1
();

531 
ü
.
	`ªadRec‹d
(
node
, "node");

532 
nodes
.
	`put
(
∑th
, 
node
);

533 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

534 i‡(
œ°Sœsh
 == -1) {

535 
roŸ
 = 
node
;

537 
Såög
 
∑ª¡P©h
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

538 
node
.
∑ª¡
 = 
nodes
.
	`gë
(
∑ª¡P©h
);

539 
node
.
∑ª¡
.
chûdªn
.
	`add
(
∑th
.
	`sub°rög
(
œ°Sœsh
 + 1));

540 
eow√r
 = 
node
.
°©
.
	`gëEphemîÆOw√r
();

541 i‡(
eow√r
 != 0) {

542 
HashSë
<
Såög
> 
li°
 = 
ïhemîÆs
.
	`gë
(
eow√r
);

543 i‡(
li°
 =
nuŒ
) {

544 
li°
 = 
√w
 
HashSë
<
Såög
>();

545 
ïhemîÆs
.
	`put
(
eow√r
, 
li°
);

547 
li°
.
	`add
(
∑th
);

550 
∑th
 = 
ü
.
	`ªadSåög
("path");

552 
nodes
.
	`put
("/", 
roŸ
);

553 
	}
}

555 
public
 
Såög
 
	$dumpEphemîÆs
() {

556 
Së
<
L⁄g
> 
keys
 = 
ïhemîÆs
.
	`keySë
();

557 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
("Sessions with Ephemerals ("

558 + 
keys
.
	`size
() + "):\n");

559 
k
 : 
keys
) {

560 
sb
.
	`≠≥nd
("0x" + 
L⁄g
.
	`toHexSåög
(
k
));

561 
sb
.
	`≠≥nd
(":\n");

562 
HashSë
<
Såög
> 
tmp
 = 
ïhemîÆs
.
	`gë
(
k
);

563 
	`synchr⁄ized
(
tmp
) {

564 
Såög
 
∑th
 : 
tmp
) {

565 
sb
.
	`≠≥nd
("\t" + 
∑th
 + "\n");

569  
sb
.
	`toSåög
();

570 
	}
}

572 
public
 
	$ªmoveCnxn
(
W©chî
 
w©chî
) {

573 
d©aW©ches
.
	`ªmoveW©chî
(
w©chî
);

574 
chûdW©ches
.
	`ªmoveW©chî
(
w©chî
);

575 
	}
}

577 
public
 
	$˛ór
() {

578 
roŸ
 = 
nuŒ
;

579 
nodes
.
	`˛ór
();

580 
ïhemîÆs
.
	`˛ór
();

583 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeMain.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

39 
public
 cœs†
	cUpgødeMaö
 {

40 
Fûe
 
	m¢≠ShŸDú
;

41 
Fûe
 
	md©aDú
;

42 
Fûe
 
	mbkup¢≠ShŸDú
;

43 
Fûe
 
	mbkupd©aDú
;

44 
Fûe
 
	mcuºítd©aDú
;

45 
Fûe
 
	mcuºít¢≠ShŸDú
;

47 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
UpgødeMaö
.
˛ass
);

48 
¥iv©e
 
föÆ
 
Såög
 
	mUSAGE
 = "Usage: UpgradeMain dataDir snapShotDir";

49 
¥iv©e
 
föÆ
 
	mLASTVERSION
 = 1;

50 
¥iv©e
 
föÆ
 
	mCURRENTVERSION
 = 
FûeTxnS«pLog
.
VERSION
;

51 
¥iv©e
 
föÆ
 
Såög
 
	mdúName
 = 
FûeTxnS«pLog
.
vîsi⁄
;

52 
¥iv©e
 
föÆ
 
Såög
 
	mm™uÆ
 = "PleaseÅake manual stepsÅo " +

63 
public
 
	$UpgødeMaö
(
Fûe
 
d©aDú
, Fûê
¢≠ShŸDú
) {

64 
this
.
¢≠ShŸDú
 = snapShotDir;

65 
this
.
d©aDú
 = dataDir;

66 
this
.
bkupd©aDú
 = 
√w
 
	`Fûe
(
d©aDú
, 
dúName
 + 
LASTVERSION
);

67 
this
.
bkup¢≠ShŸDú
 = 
√w
 
	`Fûe
(
¢≠ShŸDú
, 
dúName
 + 
LASTVERSION
 );

68 
this
.
cuºít¢≠ShŸDú
 = 
√w
 
	`Fûe
(
¢≠ShŸDú
, 
dúName
 + 
CURRENTVERSION
);

69 
this
.
cuºítd©aDú
 = 
√w
 
	`Fûe
(
d©aDú
, 
dúName
 + 
CURRENTVERSION
);

77 
¥iv©e
 
	$¸óãAŒDús
(Ë
throws
 
IOEx˚±i⁄
 {

78 
Såög
 
îr‹
 = "backu∞dúe˘‹y " + 
bkupd©aDú
 + "álreadyÉxists";

79 
LOG
.
	`öfo
("Cª©ögÖªviou†vîsi⁄ d©®dú " + 
bkupd©aDú
);

80 i‡(!
bkupd©aDú
.
	`mkdús
()) {

81 
LOG
.
	`îr‹
(
îr‹
);

82 
LOG
.
	`îr‹
(
m™uÆ
);

83 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹
);

85 
LOG
.
	`öfo
("Cª©ögÖªviou†vîsi⁄ s«pshŸ dú " + 
bkupd©aDú
);

86 i‡(!
bkup¢≠ShŸDú
.
	`mkdús
(Ë&& !bkup¢≠ShŸDú.
	`exi°s
()) {

87 
LOG
.
	`îr‹
(
îr‹
);

88 
LOG
.
	`îr‹
(
m™uÆ
);

89 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹
);

91 
îr‹
 = "cuºíàdúe˘‹y " + 
cuºítd©aDú
 + "álreadyÉxists";

92 
LOG
.
	`öfo
("Cª©ög cuºíàd©®dú " + 
cuºítd©aDú
);

93 i‡(!
cuºítd©aDú
.
	`mkdús
()) {

94 
LOG
.
	`îr‹
(
îr‹
);

95 
LOG
.
	`îr‹
(
m™uÆ
);

96 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹
);

98 
LOG
.
	`öfo
("Cª©ög cuºíà¢≠shŸ dú " + 
cuºítd©aDú
);

99 i‡(!
cuºít¢≠ShŸDú
.
	`mkdús
(Ë&& !cuºít¢≠ShŸDú.
	`exi°s
()) {

100 
LOG
.
	`îr‹
(
îr‹
);

101 
LOG
.
	`îr‹
(
m™uÆ
);

102 
throw
 
√w
 
	`IOEx˚±i⁄
(
îr‹
);

104 
	}
}

115 
	$c›yFûes
(
Fûe
 
§cDú
, Fûê
d°Dú
, 
Såög
 
fûãr
Ë
throws
 
IOEx˚±i⁄
 {

116 
Fûe
[] 
li°
 = 
§cDú
.
	`li°Fûes
();

117 
Fûe
 
fûe
: 
li°
) {

118 
Såög
 
«me
 = 
fûe
.
	`gëName
();

119 i‡(
«me
.
	`°¨tsWôh
(
fûãr
)) {

121 
Fûe
 
de°
 = 
√w
 
	`Fûe
(
d°Dú
, 
«me
);

122 
LOG
.
	`öfo
("Ríamög " + 
fûe
 + "Åÿ" + 
de°
);

123 i‡(!
fûe
.
	`ª«meTo
(
de°
)) {

124 
throw
 
√w
 
	`IOEx˚±i⁄
("UnableÅoÑename "

125 + 
fûe
 + "Åÿ" + 
de°
);

129 
	}
}

135 
public
 
	$runUpgøde
(Ë
throws
 
IOEx˚±i⁄
 {

136 i‡(!
d©aDú
.
	`exi°s
()) {

137 
throw
 
√w
 
	`IOEx˚±i⁄
(
d©aDú
 + " doesÇotÉxist");

139 i‡(!
¢≠ShŸDú
.
	`exi°s
()) {

140 
throw
 
√w
 
	`IOEx˚±i⁄
(
¢≠ShŸDú
 + " doesÇotÉxist");

143 
	`¸óãAŒDús
();

145 
åy
 {

146 
	`c›yFûes
(
d©aDú
, 
bkupd©aDú
, "log");

147 
	`c›yFûes
(
¢≠ShŸDú
, 
bkup¢≠ShŸDú
, "snapshot");

148 } 
	`ˇtch
(
IOEx˚±i⁄
 
io
) {

149 
LOG
.
	`îr‹
("Failed in backing up.");

150 
throw
 
io
;

156 
UpgødeS«pShŸV1
 
upgøde
 = 
√w
 
	`UpgødeS«pShŸV1
(
bkupd©aDú
,

157 
bkup¢≠ShŸDú
);

158 
LOG
.
	`öfo
("CreatingÇew dataÅree");

159 
D©aTªe
 
dt
 = 
upgøde
.
	`gëNewD©aTªe
();

160 
FûeTxnS«pLog
 
fûe¢≠Log
 = 
√w
 
	`FûeTxnS«pLog
(
d©aDú
,

161 
¢≠ShŸDú
);

162 
LOG
.
	`öfo
("snapshottingÅheÇew datatree");

163 
fûe¢≠Log
.
	`ßve
(
dt
, 
upgøde
.
	`gëSessi⁄WôhTimeOuts
());

165 
LOG
.
	`öfo
("Upgrade is complete");

166 
	}
}

168 
public
 
	$maö
(
Såög
[] 
¨gv
) {

169 i‡(
¨gv
.
Àngth
 < 2) {

170 
LOG
.
	`îr‹
(
USAGE
);

171 
Sy°em
.
	`exô
(-1);

173 
åy
 {

174 
UpgødeMaö
 
upgøde
 = 
√w
 
	`UpgødeMaö
“ew 
	`Fûe
(
¨gv
[0]),Çew File(argv[1]));

175 
upgøde
.
	`runUpgøde
();

176 } 
	`ˇtch
(
ThrowabÀ
 
th
) {

177 
LOG
.
	`îr‹
("Upgrade Error: PleaseÑeadÅhe " +

178 "doc†f‹ m™uÆ faûuªÑecovîy ", 
th
);

180 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShot.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

30 
public
 
öãrÁ˚
 
	gUpgødeS«pShŸ
 {

31 
public
 
D©aTªe
 
gëNewD©aTªe
(Ë
throws
 
	gIOEx˚±i⁄
;

32 
public
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gI¡egî
> 
gëSessi⁄WôhTimeOuts
();

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°ed
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSètPîsi°edV1
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aNode
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gUtû
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gSîülizeUtûs
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

58 
public
 cœs†
	cUpgødeS«pShŸV1
 
im∂emíts
 
	mUpgødeS«pShŸ
 {

59 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
UpgødeS«pShŸV1
.
˛ass
);

61 
	mC⁄cuºítHashM≠
<
	mL⁄g
, 
	mI¡egî
> 
	m£ssi⁄sWôhTimeouts
 =

62 
√w
 
C⁄cuºítHashM≠
<
L⁄g
, 
	mI¡egî
>();

63 
Fûe
 
	md©aDú
;

64 
Fûe
 
	m¢≠ShŸDú
;

65 
D©aTªeV1
 
	mﬁdD©aTªe
;

72 
public
 
	$UpgødeS«pShŸV1
(
Fûe
 
d©aDú
, Fûê
¢≠ShŸDú
) {

73 
this
.
d©aDú
 = dataDir;

74 
this
.
¢≠ShŸDú
 = snapShotDir;

75 
ﬁdD©aTªe
 = 
√w
 
	`D©aTªeV1
();

85 
¥iv©e
 
	`de£rülizeS«pshŸ
(
D©aTªeV1
 
ﬁdTªe
, 
I≈utArchive
 
ü
,

86 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
Ë
throws
 
IOEx˚±i⁄
 {

87 
cou¡
 = 
ü
.
	`ªadI¡
("count");

88 
cou¡
 > 0) {

89 
id
 = 
ü
.
	`ªadL⁄g
("id");

90 
to
 = 
ü
.
	`ªadI¡
("timeout");

91 
£ssi⁄s
.
	`put
(
id
, 
to
);

92 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

93 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

94 "lﬂdD©®--- sessi⁄ i¿¨chive: " + 
id


95 + " wôhÅimeout: " + 
to
);

97 
cou¡
--;

99 
ﬁdTªe
.
	`de£rülize
(
ü
, "tree");

100 
	}
}

108 
public
 
	$∂ayLog
(
I≈utArchive
 
logSåóm
Ë
throws
 
IOEx˚±i⁄
 {

109 
highe°Zxid
 = 0;

110 
åy
 {

111 
åue
) {

112 
byã
[] 
byãs
 = 
logSåóm
.
	`ªadBuf„r
("txnEntry");

113 i‡(
byãs
.
Àngth
 == 0) {

116 
throw
 
√w
 
	`EOFEx˚±i⁄
();

118 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
();

119 
Rec‹d
 
txn
 = 
SîülizeUtûs
.
	`de£rülizeTxn
(
byãs
, 
hdr
);

120 i‡(
logSåóm
.
	`ªadByã
("EOR") != 'B') {

121 
LOG
.
	`w¨n
("LastÅransaction wasÖartial.");

122 
throw
 
√w
 
	`EOFEx˚±i⁄
("LastÅransaction wasÖartial.");

124 i‡(
hdr
.
	`gëZxid
(Ë<
highe°Zxid
 && highestZxid != 0) {

125 
LOG
.
	`îr‹
(
highe°Zxid
 + "(higestZxid) >= "

126 + 
hdr
.
	`gëZxid
() + "(nextÜog) forÅype "

127 + 
hdr
.
	`gëTy≥
());

129 
highe°Zxid
 = 
hdr
.
	`gëZxid
();

131 
hdr
.
	`gëTy≥
()) {

132 
OpCode
.
¸óãSessi⁄
:

133 
£ssi⁄sWôhTimeouts
.
	`put
(
hdr
.
	`gëClõ¡Id
(),

134 ((
Cª©eSessi⁄Txn
Ë
txn
).
	`gëTimeOut
());

135 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

136 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

137 
ZooTø˚
.
SESSION_TRACE_MASK
,

139 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëClõ¡Id
())

141 + ((
Cª©eSessi⁄Txn
Ë
txn
).
	`gëTimeOut
());

144 
ﬁdD©aTªe
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

146 
OpCode
.
˛o£Sessi⁄
:

147 
£ssi⁄sWôhTimeouts
.
	`ªmove
(
hdr
.
	`gëClõ¡Id
());

148 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

149 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
,

150 
ZooTø˚
.
SESSION_TRACE_MASK
,

152 + 
L⁄g
.
	`toHexSåög
(
hdr
.
	`gëClõ¡Id
()));

154 
ﬁdD©aTªe
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

157 
ﬁdD©aTªe
.
	`¥o˚ssTxn
(
hdr
, 
txn
);

159 
Reque°
 
r
 = 
√w
 
	`Reque°
(
nuŒ
, 0, 
hdr
.
	`gëCxid
(), hdr.
	`gëTy≥
(),

160 
nuŒ
,Çull);

161 
r
.
txn
 =Åxn;

162 
r
.
hdr
 = hdr;

163 
r
.
zxid
 = 
hdr
.
	`gëZxid
();

165 } 
	`ˇtch
 (
EOFEx˚±i⁄
 
e
) {

168  
highe°Zxid
;

169 
	}
}

179 
¥iv©e
 
	$¥o˚ssLogFûes
(
D©aTªeV1
 
ﬁdTªe
,

180 
Fûe
[] 
logFûes
Ë
throws
 
IOEx˚±i⁄
 {

181 
zxid
 = 0;

182 
Fûe
 
f
: 
logFûes
) {

183 
LOG
.
	`öfo
("Pro˚ssögÜog fûe: " + 
f
);

184 
I≈utSåóm
 
logIs
 =

185 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(
f
));

186 
zxid
 = 
	`∂ayLog
(
Bö¨yI≈utArchive
.
	`gëArchive
(
logIs
));

187 
logIs
.
	`˛o£
();

189  
zxid
;

190 
	}
}

198 
¥iv©e
 
	$lﬂdThisS«pShŸ
(Ë
throws
 
IOEx˚±i⁄
 {

200 
Fûe
 
¢≠shŸ
 = 
	`födMo°Re˚¡S«pshŸ
();

201 i‡(
¢≠shŸ
 =
nuŒ
) {

202 
throw
 
√w
 
	`IOEx˚±i⁄
("Invalid snapshots " +

203 "‹ÇŸ s«pshŸ†ö " + 
¢≠ShŸDú
);

205 
I≈utSåóm
 
öput°ªam
 = 
√w
 
	`Buf„ªdI≈utSåóm
(

206 
√w
 
	`FûeI≈utSåóm
(
¢≠shŸ
));

207 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
öput°ªam
);

208 
	`de£rülizeS«pshŸ
(
ﬁdD©aTªe
, 
ü
, 
£ssi⁄sWôhTimeouts
);

211 
¢≠shŸZxid
 = 
ﬁdD©aTªe
.
œ°Pro˚s£dZxid
;

212 
Fûe
[] 
fûes
 = 
FûeTxnLog
.
	`gëLogFûes
(

213 
d©aDú
.
	`li°Fûes
(), 
¢≠shŸZxid
);

214 
zxid
 = 
	`¥o˚ssLogFûes
(
ﬁdD©aTªe
, 
fûes
);

216 i‡(
zxid
 !
ﬁdD©aTªe
.
œ°Pro˚s£dZxid
) {

217 
LOG
.
	`îr‹
("ZxidsÇotÉqual " + "Üog zxid " +

218 
zxid
 + " d©©ªê¥o˚s£d " + 
ﬁdD©aTªe
.
œ°Pro˚s£dZxid
);

220 
	}
}

228 
¥iv©e
 
Fûe
 
	$födMo°Re˚¡S«pshŸ
(Ë
throws
 
IOEx˚±i⁄
 {

229 
Li°
<
Fûe
> 
fûes
 = 
Utû
.
	`s‹tD©aDú
(
¢≠ShŸDú
.
	`li°Fûes
(),

230 "¢≠shŸ", 
Ál£
);

231 
Fûe
 
f
: 
fûes
) {

232 
åy
 {

233 i‡(
Utû
.
	`isVÆidS«pshŸ
(
f
))

234  
f
;

235 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

236 
LOG
.
	`öfo
("InvÆid s«pshŸ " + 
f
, 
e
);

239  
nuŒ
;

240 
	}
}

247 
¥iv©e
 
SètPîsi°ed
 
	$c⁄vîtSèt
(
SètPîsi°edV1
 
ﬁdSèt
) {

248 
SètPîsi°ed
 
°©
 = 
√w
 
	`SètPîsi°ed
();

249 
°©
.
	`£tAvîsi⁄
(
ﬁdSèt
.
	`gëAvîsi⁄
());

250 
°©
.
	`£tCtime
(
ﬁdSèt
.
	`gëCtime
());

251 
°©
.
	`£tCvîsi⁄
(
ﬁdSèt
.
	`gëCvîsi⁄
());

252 
°©
.
	`£tCzxid
(
ﬁdSèt
.
	`gëCzxid
());

253 
°©
.
	`£tEphemîÆOw√r
(
ﬁdSèt
.
	`gëEphemîÆOw√r
());

254 
°©
.
	`£tMtime
(
ﬁdSèt
.
	`gëMtime
());

255 
°©
.
	`£tMzxid
(
ﬁdSèt
.
	`gëMzxid
());

256 
°©
.
	`£tVîsi⁄
(
ﬁdSèt
.
	`gëVîsi⁄
());

257  
°©
;

258 
	}
}

267 
¥iv©e
 
D©aNode
 
	$c⁄vîtD©aNode
(
D©aTªe
 
dt
, 
D©aNode
 
∑ª¡
,

268 
D©aNodeV1
 
ﬁdD©aNode
) {

269 
SètPîsi°ed
 
°©
 = 
	`c⁄vîtSèt
(
ﬁdD©aNode
.stat);

270 
D©aNode
 
d©aNode
 = 
√w
 
	`D©aNode
(
∑ª¡
, 
ﬁdD©aNode
.
d©a
,

271 
dt
.
	`c⁄vîtA˛s
(
ﬁdD©aNode
.
a˛
), 
°©
);

272 
d©aNode
.
	`£tChûdªn
(
ﬁdD©aNode
.
chûdªn
);

273  
d©aNode
;

274 
	}
}

282 
¥iv©e
 
	$ªcur£ThroughD©aTªe
(
D©aTªe
 
d©aTªe
, 
Såög
 
∑th
) {

283 i‡(
∑th
 =
nuŒ
)

285 
D©aNodeV1
 
ﬁdD©aNode
 = 
ﬁdD©aTªe
.
	`gëNode
(
∑th
);

286 
HashSë
<
Såög
> 
chûdªn
 = 
ﬁdD©aNode
.children;

287 
D©aNode
 
∑ª¡
 = 
nuŒ
;

288 i‡("".
	`equÆs
(
∑th
)) {

289 
∑ª¡
 = 
nuŒ
;

292 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

293 
Såög
 
∑ª¡P©h
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

294 
∑ª¡
 = 
d©aTªe
.
	`gëNode
(
∑ª¡P©h
);

296 
D©aNode
 
thisD©Node
 = 
	`c⁄vîtD©aNode
(
d©aTªe
, 
∑ª¡
,

297 
ﬁdD©aNode
);

298 
d©aTªe
.
	`addD©aNode
(
∑th
, 
thisD©Node
);

299 i‡(
chûdªn
 =
nuŒ
 || chûdªn.
	`size
() == 0) {

303 
Såög
 
chûd
: 
chûdªn
) {

304 
	`ªcur£ThroughD©aTªe
(
d©aTªe
, 
∑th
 + "/" +
chûd
);

307 
	}
}

309 
¥iv©e
 
D©aTªe
 
	$c⁄vîtThisS«pShŸ
(Ë
throws
 
IOEx˚±i⁄
 {

311 
D©aTªe
 
d©aTªe
 = 
√w
 
	`D©aTªe
();

312 
D©aNodeV1
 
ﬁdD©aNode
 = 
ﬁdD©aTªe
.
	`gëNode
("");

313 i‡(
ﬁdD©aNode
 =
nuŒ
) {

315 
LOG
.
	`îr‹
("Upgrading frománÉmpty snapshot.");

318 
	`ªcur£ThroughD©aTªe
(
d©aTªe
, "");

319 
d©aTªe
.
œ°Pro˚s£dZxid
 = 
ﬁdD©aTªe
.lastProcessedZxid;

320  
d©aTªe
;

321 
	}
}

323 
public
 
D©aTªe
 
	$gëNewD©aTªe
(Ë
throws
 
IOEx˚±i⁄
 {

324 
	`lﬂdThisS«pShŸ
();

325 
D©aTªe
 
dt
 = 
	`c⁄vîtThisS«pShŸ
();

326  
dt
;

327 
	}
}

329 
public
 
	gC⁄cuºítHashM≠
<
	gL⁄g
, 
	gI¡egî
> 
	$gëSessi⁄WôhTimeOuts
() {

330  
this
.
£ssi⁄sWôhTimeouts
;

331 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/KerberosUtil.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
;

21 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gInvoˇti⁄T¨gëEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gMëhod
;

24 
public
 cœs†
	cKîbîosUtû
 {

26 
public
 
Såög
 
	$gëDeÁu…Rólm
()

27 
throws
 
CœssNŸFoundEx˚±i⁄
, 
NoSuchMëhodEx˚±i⁄
,

28 
IŒegÆArgumítEx˚±i⁄
, 
IŒegÆAc˚ssEx˚±i⁄
,

29 
Invoˇti⁄T¨gëEx˚±i⁄
 {

30 
Obje˘
 
kîbC⁄f
;

31 
Cœss
<?> 
˛assRef
;

32 
Mëhod
 
gëIn°™˚Mëhod
;

33 
Mëhod
 
gëDeÁu…RólmMëhod
;

34 i‡(
Sy°em
.
	`gëPr›îty
("java.víd‹").
	`c⁄èös
("IBM")) {

35 
˛assRef
 = 
Cœss
.
	`f‹Name
("com.ibm.security.krb5.internal.Config");

37 
˛assRef
 = 
Cœss
.
	`f‹Name
("sun.security.krb5.Config");

39 
gëIn°™˚Mëhod
 = 
˛assRef
.
	`gëMëhod
("gëIn°™˚", 
√w
 
Cœss
[0]);

40 
kîbC⁄f
 = 
gëIn°™˚Mëhod
.
	`övoke
(
˛assRef
, 
√w
 
Obje˘
[0]);

41 
gëDeÁu…RólmMëhod
 = 
˛assRef
.
	`gëDe˛¨edMëhod
("getDefaultRealm",

42 
√w
 
Cœss
[0]);

43  (
Såög
)
gëDeÁu…RólmMëhod
.
	`övoke
(
kîbC⁄f
, 
√w
 
Obje˘
[0]);

45 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/Profiler.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

24 
public
 cœs†
	cProfûî
 {

25 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Profûî
.
˛ass
);

27 
public
 
öãrÁ˚
 
	mO≥øti⁄
<
	mT
> {

28 
public
 
T
 
execuã
(Ë
throws
 
	mEx˚±i⁄
;

31 
public
 <
	gT
> 
T
 
¥ofûe
(
O≥øti⁄
<T> 
›
, 
timeout
, 
Såög
 
mesßge
)

32 
throws
 
	gEx˚±i⁄
 {

33 
	g°¨t
 = 
Sy°em
.
cuºítTimeMûlis
();

34 
T
 
	gªs
 = 
›
.
execuã
();

35 
	gíd
 = 
Sy°em
.
cuºítTimeMûlis
();

36 i‡(
	gíd
 - 
	g°¨t
 > 
	gtimeout
) {

37 
	gLOG
.
öfo
("Eœp£d "+(
íd
 - 
°¨t
Ë+ " ms: " + 
mesßge
);

39  
	gªs
;

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooTø˚
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxnV0
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëACLTxn
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gMu…iTxn
;

48 
public
 cœs†
	cSîülizeUtûs
 {

49 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
SîülizeUtûs
.
˛ass
);

51 
public
 
Rec‹d
 
	$de£rülizeTxn
(
byã
 
txnByãs
[], 
TxnHódî
 
hdr
)

52 
throws
 
IOEx˚±i⁄
 {

53 
föÆ
 
ByãAºayI≈utSåóm
 
bais
 = 
√w
 
	`ByãAºayI≈utSåóm
(
txnByãs
);

54 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
bais
);

56 
hdr
.
	`de£rülize
(
ü
, "hdr");

57 
bais
.
	`m¨k
(bais.
	`avaûabÀ
());

58 
Rec‹d
 
txn
 = 
nuŒ
;

59 
hdr
.
	`gëTy≥
()) {

60 
OpCode
.
¸óãSessi⁄
:

63 
txn
 = 
√w
 
	`Cª©eSessi⁄Txn
();

65 
OpCode
.
˛o£Sessi⁄
:

66  
nuŒ
;

67 
OpCode
.
¸óã
:

68 
txn
 = 
√w
 
	`Cª©eTxn
();

70 
OpCode
.
dñëe
:

71 
txn
 = 
√w
 
	`DñëeTxn
();

73 
OpCode
.
£tD©a
:

74 
txn
 = 
√w
 
	`SëD©aTxn
();

76 
OpCode
.
£tACL
:

77 
txn
 = 
√w
 
	`SëACLTxn
();

79 
OpCode
.
îr‹
:

80 
txn
 = 
√w
 
	`Eº‹Txn
();

82 
OpCode
.
mu…i
:

83 
txn
 = 
√w
 
	`Mu…iTxn
();

86 
throw
 
√w
 
	`IOEx˚±i⁄
("Unsuµ‹ãd Tx¿wôhÅy≥=%d" + 
hdr
.
	`gëTy≥
());

88 i‡(
txn
 !
nuŒ
) {

89 
åy
 {

90 
txn
.
	`de£rülize
(
ü
, "txn");

91 } 
	`ˇtch
(
EOFEx˚±i⁄
 
e
) {

93 i‡(
hdr
.
	`gëTy≥
(Ë=
OpCode
.
¸óã
) {

94 
Cª©eTxn
 
¸óã
 = (Cª©eTxn)
txn
;

95 
bais
.
	`ª£t
();

96 
Cª©eTxnV0
 
¸óãv0
 = 
√w
 
	`Cª©eTxnV0
();

97 
¸óãv0
.
	`de£rülize
(
ü
, "txn");

100 
¸óã
.
	`£tP©h
(
¸óãv0
.
	`gëP©h
());

101 
¸óã
.
	`£tD©a
(
¸óãv0
.
	`gëD©a
());

102 
¸óã
.
	`£tA˛
(
¸óãv0
.
	`gëA˛
());

103 
¸óã
.
	`£tEphemîÆ
(
¸óãv0
.
	`gëEphemîÆ
());

104 
¸óã
.
	`£tP¨ítCVîsi⁄
(-1);

106 
throw
 
e
;

110  
txn
;

113 
public
 
	`de£rülizeS«pshŸ
(
D©aTªe
 
dt
,
I≈utArchive
 
ü
,

114 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
Ë
throws
 
IOEx˚±i⁄
 {

115 
cou¡
 = 
ü
.
	`ªadI¡
("count");

116 
cou¡
 > 0) {

117 
id
 = 
ü
.
	`ªadL⁄g
("id");

118 
to
 = 
ü
.
	`ªadI¡
("timeout");

119 
£ssi⁄s
.
	`put
(
id
, 
to
);

120 i‡(
LOG
.
	`isTø˚E«bÀd
()) {

121 
ZooTø˚
.
	`logTø˚Mesßge
(
LOG
, ZooTø˚.
SESSION_TRACE_MASK
,

122 "lﬂdD©®--- sessi⁄ i¿¨chive: " + 
id


123 + " wôhÅimeout: " + 
to
);

125 
cou¡
--;

127 
dt
.
	`de£rülize
(
ü
, "tree");

128 
	}
}

130 
public
 
£rülizeS«pshŸ
(
D©aTªe
 
dt
,
OuçutArchive
 
ﬂ
,

131 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
Ë
throws
 
	gIOEx˚±i⁄
 {

132 
	gHashM≠
<
	gL⁄g
, 
	gI¡egî
> 
	g£ssS«p
 = 
√w
 
HashM≠
<
L⁄g
, I¡egî>(
	g£ssi⁄s
);

133 
	gﬂ
.
wrôeI¡
(
£ssS«p
.
size
(), "count");

134 
	gE¡ry
<
	gL⁄g
, 
	gI¡egî
> 
	gíåy
 : 
£ssS«p
.
íåySë
()) {

135 
ﬂ
.
wrôeL⁄g
(
íåy
.
gëKey
().
l⁄gVÆue
(), "id");

136 
	gﬂ
.
wrôeI¡
(
íåy
.
gëVÆue
().
ötVÆue
(), "timeout");

138 
	gdt
.
£rülize
(
ﬂ
, "tree");

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/ZxidUtils.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
;

21 
public
 cœs†
	cZxidUtûs
 {

22 
public
 
	$gëEpochFromZxid
(
zxid
) {

23  
zxid
 >> 32L;

25 
public
 
	$gëCou¡îFromZxid
(
zxid
) {

26  
zxid
 & 0xffffffffL;

27 
	}
}

28 
public
 
	$makeZxid
(
ïoch
, 
cou¡î
) {

29  (
ïoch
 << 32LË| (
cou¡î
 & 0xffffffffL);

30 
	}
}

31 
public
 
Såög
 
	$zxidToSåög
(
zxid
) {

32  
L⁄g
.
	`toHexSåög
(
zxid
);

33 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/version/util/VerGen.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gvîsi⁄
.
	gutû
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gM©chî
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

27 
public
 cœs†
	cVîGí
 {

28 
¥iv©e
 
föÆ
 
Såög
 
	mPACKAGE_NAME
 = "org.apache.zookeeper.version";

29 
¥iv©e
 
föÆ
 
Såög
 
	mTYPE_NAME
 = "Info";

31 
	$¥ötUßge
() {

32 
Sy°em
.
out
.
	`¥öt
("Usage:\tjava -cp <classpath> org.apache.zookeeper."

34 
Sy°em
.
	`exô
(1);

37 
public
 
	$gíî©eFûe
(
Fûe
 
ouçutDú
, 
Vîsi⁄
 
vîsi⁄
, 
ªv
, 
Såög
 
buûdD©e
)

39 
Såög
 
∑th
 = 
PACKAGE_NAME
.
	`ª∂a˚AŒ
("\\.", "/");

40 
Fûe
 
pkgdú
 = 
√w
 
	`Fûe
(
ouçutDú
, 
∑th
);

41 i‡(!
pkgdú
.
	`exi°s
()) {

43 
boﬁón
 
ªt
 = 
pkgdú
.
	`mkdús
();

44 i‡(!
ªt
) {

45 
Sy°em
.
out
.
	`¥öén
("C™¬Ÿ cª©êdúe˘‹y: " + 
∑th
);

46 
Sy°em
.
	`exô
(1);

48 } i‡(!
pkgdú
.
	`isDúe˘‹y
()) {

50 
Sy°em
.
out
.
	`¥öén
(
∑th
 + " isÇotá directory.");

51 
Sy°em
.
	`exô
(1);

53 
Fûe
 
fûe
 = 
√w
 
	`Fûe
(
pkgdú
, 
TYPE_NAME
 + ".java");

54 
FûeWrôî
 
w
 = 
nuŒ
;

55 
åy
 {

56 
w
 = 
√w
 
	`FûeWrôî
(
fûe
);

57 
w
.
	`wrôe
("// DoÇotÉdit!\n// File generated by org.apache.zookeeper"

59 
w
.
	`wrôe
("/**\n");

60 
w
.
	`wrôe
("* LicensedÅoÅhe Apache Software Foundation (ASF) under one\n");

61 
w
.
	`wrôe
("* or more contributorÜicenseágreements. SeeÅhe NOTICE file\n");

62 
w
.
	`wrôe
("* distributed withÅhis work forádditional information\n");

63 
w
.
	`wrôe
("*Ñegarding copyright ownership. The ASFÜicensesÅhis file\n");

64 
w
.
	`wrôe
("*Åo you underÅhe Apache License, Version 2.0 (the\n");

65 
w
.
	`wrôe
("* \"License\"); you mayÇot useÅhis fileÉxcept in compliance\n");

66 
w
.
	`wrôe
("* withÅhe License. You may obtainá copy ofÅhe Licenseát\n");

67 
w
.
	`wrôe
("*\n");

68 
w
.
	`wrôe
("* http://www.apache.org/licenses/LICENSE-2.0\n");

69 
w
.
	`wrôe
("*\n");

70 
w
.
	`wrôe
("* UnlessÑequired byápplicableÜaw orágreedÅo in writing, software\n");

71 
w
.
	`wrôe
("* distributed underÅhe License is distributed onán \"AS IS\" BASIS,\n");

72 
w
.
	`wrôe
("* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,ÉitherÉxpress or implied.\n");

73 
w
.
	`wrôe
("* SeeÅhe License forÅhe specificÜanguage governingÖermissionsánd\n");

74 
w
.
	`wrôe
("*Üimitations underÅhe License.\n");

75 
w
.
	`wrôe
("*/\n");

76 
w
.
	`wrôe
("\n");

77 
w
.
	`wrôe
("∑ckagê" + 
PACKAGE_NAME
 + ";\n\n");

78 
w
.
	`wrôe
("publi¯öãrÁ˚ " + 
TYPE_NAME
 + " {\n");

79 
w
.
	`wrôe
("Öubli¯°©i¯föÆ i¡ MAJOR=" + 
vîsi⁄
.
maj
 + ";\n");

80 
w
.
	`wrôe
("Öubli¯°©i¯föÆ i¡ MINOR=" + 
vîsi⁄
.
mö
 + ";\n");

81 
w
.
	`wrôe
("Öubli¯°©i¯föÆ i¡ MICRO=" + 
vîsi⁄
.
mi¸o
 + ";\n");

82 
w
.
	`wrôe
("Öublic static final String QUALIFIER="

83 + (
vîsi⁄
.
quÆifõr
 =
nuŒ
 ?Çull :

84 "\"" + 
vîsi⁄
.
quÆifõr
 + "\"")

86 i‡(
ªv
 < 0) {

87 
Sy°em
.
out
.
	`¥öén
("Unknow¿REVISIONÇumbî, usög " + 
ªv
);

89 
w
.
	`wrôe
("Öubli¯°©i¯föÆ i¡ REVISION=" + 
ªv
 + ";\n");

90 
w
.
	`wrôe
("Öubli¯°©i¯föÆ Såög BUILD_DATE=\"" + 
buûdD©e


92 
w
.
	`wrôe
("}\n");

93 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

94 
Sy°em
.
out
.
	`¥öén
("UnableÅo generate version.Info file: "

95 + 
e
.
	`gëMesßge
());

96 
Sy°em
.
	`exô
(1);

97 } 
föÆly
 {

98 i‡(
w
 !
nuŒ
) {

99 
åy
 {

100 
w
.
	`˛o£
();

101 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

102 
Sy°em
.
out
.
	`¥öén
("UnableÅo close file writer"

103 + 
e
.
	`gëMesßge
());

107 
	}
}

109 
public
 ˛as†
	cVîsi⁄
 {

110 
public
 
	gmaj
;

111 
public
 
	gmö
;

112 
public
 
	gmi¸o
;

113 
public
 
Såög
 
	gquÆifõr
;

116 
public
 
Vîsi⁄
 
	$∑r£Vîsi⁄Såög
(
Såög
 
öput
) {

117 
Vîsi⁄
 
ªsu…
 = 
√w
 
	`Vîsi⁄
();

119 
P©ã∫
 
p
 = P©ã∫.
	`compûe
("^(\\d+).(\\d+).(\\d+)(-(.+))?$");

120 
M©chî
 
m
 = 
p
.
	`m©chî
(
öput
);

122 i‡(!
m
.
	`m©ches
()) {

123  
nuŒ
;

125 
ªsu…
.
maj
 = 
I¡egî
.
	`∑r£I¡
(
m
.
	`group
(1));

126 
ªsu…
.
mö
 = 
I¡egî
.
	`∑r£I¡
(
m
.
	`group
(2));

127 
ªsu…
.
mi¸o
 = 
I¡egî
.
	`∑r£I¡
(
m
.
	`group
(3));

128 i‡(
m
.
	`groupCou¡
() == 5) {

129 
ªsu…
.
quÆifõr
 = 
m
.
	`group
(5);

131 
ªsu…
.
quÆifõr
 = 
nuŒ
;

133  
ªsu…
;

134 
	}
}

153 
public
 
	$maö
(
Såög
[] 
¨gs
) {

154 i‡(
¨gs
.
Àngth
 != 3)

155 
	`¥ötUßge
();

156 
åy
 {

157 
Vîsi⁄
 
vîsi⁄
 = 
	`∑r£Vîsi⁄Såög
(
¨gs
[0]);

158 i‡(
vîsi⁄
 =
nuŒ
) {

159 
Sy°em
.
îr
.
	`¥öén
(

161 
Sy°em
.
	`exô
(1);

163 
ªv
;

164 
åy
 {

165 
ªv
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[1]);

166 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

167 
ªv
 = -1;

169 
	`gíî©eFûe
(
√w
 
	`Fûe
("."), 
vîsi⁄
, 
ªv
, 
¨gs
[2]);

170 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

171 
Sy°em
.
îr
.
	`¥öén
(

173 
throw
 
e
;

175 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

28 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gIgn‹e
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gJUnôC‹e
;

38 @
Ign‹e
("NoÅests inÅhis class.")

39 
public
 cœs†
	cBa£SysTe°
 
exãnds
 
	mTe°Ca£
 {

40 
¥iv©e
 
	mÁkeBa£P‹t
 = 33222;

41 
¥iv©e
 
Såög
 
	mzkHo°P‹t
;

42 
¥Ÿe˘ed
 
Såög
 
	m¥efix
 = "/sysTest";

43 
ZooKì≥r
 
	mzk
;

45 
	måy
 {

46 
	mzkHo°P‹t
 = 
Sy°em
.
gëPr›îty
("sysTe°.zkHo°P‹t", 
I√tAddªss
.
gëLoˇlHo°
().
gëC™⁄iˇlHo°Name
() + ":2181");

47 } 
ˇtch
 (
UnknownHo°Ex˚±i⁄
 
e
) {

48 
	me
.
¥ötSèckTø˚
();

51 
In°™˚M™agî
 
	gim
;

52 @
Ovîride


53 
¥Ÿe˘ed
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

54 i‡(!
ÁkeMachöes
) {

55 
Såög
 
loˇlHo°
 = 
I√tAddªss
.
	`gëLoˇlHo°
().
	`gëC™⁄iˇlHo°Name
();

56 
zk
 = 
√w
 
	`ZooKì≥r
(
zkHo°P‹t
, 15000,Çew 
	`W©chî
(Ë{
public
 
	`¥o˚ss
(
W©chedEvít
 
e
){}});

57 
im
 = 
√w
 
	`In°™˚M™agî
(
zk
, 
¥efix
);

59 
	}
}

60 @
Ovîride


61 
¥Ÿe˘ed
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

62 
im
.
	`˛o£
();

63 
	}
}

65 
	g£rvîCou¡
 = 
deÁu…SîvîCou¡
;

66 
	g˛õ¡Cou¡
 = 
deÁu…Clõ¡Cou¡
;

67 
	gdeÁu…SîvîCou¡
 = 5;

68 
	gdeÁu…Clõ¡Cou¡
 = 7;

70 
	gdeÁu…SîvîCou¡
 = 
I¡egî
.
∑r£I¡
(
Sy°em
.
gëPr›îty
("sim∂eSysTe°.deÁu…SîvîCou¡", I¡egî.
toSåög
(
deÁu…SîvîCou¡
)));

71 
	gdeÁu…Clõ¡Cou¡
 = 
I¡egî
.
∑r£I¡
(
Sy°em
.
gëPr›îty
("sim∂eSysTe°.deÁu…Clõ¡Cou¡", I¡egî.
toSåög
(
deÁu…Clõ¡Cou¡
)));

74 
Såög
 
	g£rvîHo°P‹t
;

75 
Såög
 
	gqu‹umHo°P‹t
;

76 
public
 
Såög
 
	$gëHo°P‹t
() {

77  
£rvîHo°P‹t
;

78 
	}
}

79 
public
 
	$gëSîvîCou¡
() {

80  
£rvîCou¡
;

81 
	}
}

82 
public
 
	$gëClõ¡Cou¡
() {

83  
˛õ¡Cou¡
;

84 
	}
}

86 
public
 
	$°¨tSîvîs
(Ë
throws
 
IOEx˚±i⁄
 {

87 
i
 = 0; i < 
£rvîCou¡
; i++) {

88 
	`°¨tSîvî
(
i
);

90 
	}
}

91 
public
 
	$°›Sîvîs
(Ë
throws
 
IOEx˚±i⁄
 {

92 
i
 = 0; i < 
£rvîCou¡
; i++) {

93 
	`°›Sîvî
(
i
);

95 
	}
}

96 
public
 
	$°¨tClõ¡s
(Ë
throws
 
IOEx˚±i⁄
 {

97 
i
 = 0; i < 
˛õ¡Cou¡
; i++) {

98 
	`°¨tClõ¡
(
i
);

100 
	}
}

101 
public
 
	$°›Clõ¡s
(Ë
throws
 
IOEx˚±i⁄
 {

102 
i
 = 0; i < 
˛õ¡Cou¡
; i++) {

103 
	`°›Clõ¡
(
i
);

105 
	}
}

107 
¥iv©e
 
boﬁón
 
	gÁkeMachöes
 = 
Sy°em
.
gëPr›îty
("ba£SysTe°.ÁkeMachöes", "no").
equÆs
("yes");

109 
public
 
	$c⁄figuªSîvîs
(
cou¡
Ë
throws
 
Ex˚±i⁄
 {

110 
£rvîCou¡
 = 
cou¡
;

111 i‡(
ÁkeMachöes
) {

112 
	`ÁkeC⁄figuªSîvîs
(
cou¡
);

114 
	`di°ribuãdC⁄figuªSîvîs
(
cou¡
);

116 
	}
}

118 
¥iv©e
 
	$di°ribuãdC⁄figuªSîvîs
(
cou¡
Ë
throws
 
IOEx˚±i⁄
 {

119 
SåögBuûdî
 
sbClõ¡
 = 
√w
 
	`SåögBuûdî
();

120 
SåögBuûdî
 
sbSîvî
 = 
√w
 
	`SåögBuûdî
();

121 
åy
 {

122 
i
 = 0; i < 
cou¡
; i++) {

123 
Såög
 
r
[] = 
Qu‹umPìrIn°™˚
.
	`¸óãSîvî
(
im
, 
i
);

124 i‡(
i
 > 0) {

125 
sbClõ¡
.
	`≠≥nd
(',');

126 
sbSîvî
.
	`≠≥nd
(',');

128 
sbClõ¡
.
	`≠≥nd
(
r
[0]);

129 
sbSîvî
.
	`≠≥nd
(
r
[1]);

131 
£rvîHo°P‹t
 = 
sbClõ¡
.
	`toSåög
();

132 
qu‹umHo°P‹t
 = 
sbSîvî
.
	`toSåög
();

133 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

134 
IOEx˚±i⁄
 
i€
 = 
√w
 
	`IOEx˚±i⁄
(
e
.
	`gëMesßge
());

135 
i€
.
	`£tSèckTø˚
(
e
.
	`gëSèckTø˚
());

136 
throw
 
i€
;

138 
	}
}

140 
¥iv©e
 
Qu‹umPìr
 
	gqps
[];

141 
¥iv©e
 
Fûe
 
	gqpsDús
[];

142 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
;

143 
¥iv©e
 
	$ÁkeC⁄figuªSîvîs
(
cou¡
Ë
throws
 
IOEx˚±i⁄
 {

144 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>();

145 
qps
 = 
√w
 
Qu‹umPìr
[
cou¡
];

146 
qpsDús
 = 
√w
 
Fûe
[
cou¡
];

147 
i
 = 1; i <
cou¡
; i++) {

148 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
), 
√w
 
	`Qu‹umSîvî
(i,Çew 
	`I√tSockëAddªss
("127.0.0.1", 
ÁkeBa£P‹t
 + i)));

150 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

151 
i
 = 0; i < 
cou¡
; i++) {

152 
qpsDús
[
i
] = 
Fûe
.
	`¸óãTempFûe
("sysTest", ".tmp");

153 
qpsDús
[
i
].
	`dñëe
();

154 
qpsDús
[
i
].
	`mkdú
();

155 
p‹t
 = 
ÁkeBa£P‹t
+10+
i
;

156 i‡(
sb
.
	`Àngth
() > 0) {

157 
sb
.
	`≠≥nd
(',');

159 
sb
.
	`≠≥nd
("localhost:");

160 
sb
.
	`≠≥nd
(
p‹t
);

162 
£rvîHo°P‹t
 = 
sb
.
	`toSåög
();

163 
	}
}

164 
föÆ
 
	gtickTime
 = 2000;

165 
föÆ
 
	göôLimô
 = 3;

166 
föÆ
 
	gsyncLimô
 = 3;

168 
public
 
	$°¨tSîvî
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

169 
p‹t
 = 
ÁkeBa£P‹t
+10+
ödex
;

170 i‡(
ÁkeMachöes
) {

171 
qps
[
ödex
] = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
qpsDús
[ödex], qpsDús[ödex], 
p‹t
, 0, index+1, 
tickTime
, 
öôLimô
, 
syncLimô
);

172 
qps
[
ödex
].
	`°¨t
();

174 
åy
 {

175 
Qu‹umPìrIn°™˚
.
	`°¨tIn°™˚
(
im
, 
qu‹umHo°P‹t
, 
ödex
);

176 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

177 
IOEx˚±i⁄
 
i€
 = 
√w
 
	`IOEx˚±i⁄
(
e
.
	`gëCœss
().
	`gëName
(Ë+ ": " +É.
	`gëMesßge
());

178 
i€
.
	`£tSèckTø˚
(
e
.
	`gëSèckTø˚
());

179 
throw
 
i€
;

182 
	}
}

183 
public
 
	$°›Sîvî
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

184 i‡(
ÁkeMachöes
) {

185 
qps
[
ödex
].
	`shutdown
();

187 
åy
 {

188 
Qu‹umPìrIn°™˚
.
	`°›In°™˚
(
im
, 
ödex
);

189 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

190 
IOEx˚±i⁄
 
i€
 = 
√w
 
	`IOEx˚±i⁄
(
e
.
	`gëMesßge
());

191 
i€
.
	`£tSèckTø˚
(
e
.
	`gëSèckTø˚
());

192 
throw
 
i€
;

195 
	}
}

197 
public
 
c⁄figuªClõ¡s
(
cou¡
, 
Cœss
<? 
exãnds
 
In°™˚
> 
˛azz
, 
Såög
 
∑øms
Ë
throws
 
	gEx˚±i⁄
 {

198 
	g˛õ¡Cou¡
 = 
cou¡
;

199 i‡(
	gÁkeMachöes
) {

200 
ÁkeC⁄figuªClõ¡s
(
cou¡
, 
˛azz
, 
∑øms
);

202 
di°ribuãdC⁄figuªClõ¡s
(
cou¡
, 
˛azz
, 
∑øms
);

205 
¥iv©e
 
	gCœss
<? 
exãnds
 
	gIn°™˚
> 
	g˛azz
;

206 
Såög
 
	g∑øms
;

207 
¥iv©e
 
di°ribuãdC⁄figuªClõ¡s
(
cou¡
, 
Cœss
<? 
exãnds
 
In°™˚
> 
˛azz
, 
Såög
 
∑øms
Ë
throws
 
	gIOEx˚±i⁄
 {

208 
	gthis
.
	g˛azz
 = 
˛azz
;

209 
	gthis
.
	g∑øms
 = 
∑øms
;

212 
¥iv©e
 
In°™˚
 
	gÁkeBa£Clõ¡s
[];

213 
¥iv©e
 
ÁkeC⁄figuªClõ¡s
(
cou¡
, 
Cœss
<? 
exãnds
 
In°™˚
> 
˛azz
, 
Såög
 
∑øms
Ë
throws
 
	gIOEx˚±i⁄
, 
	gCœssNŸFoundEx˚±i⁄
 {

214 
	gÁkeBa£Clõ¡s
 = 
√w
 
In°™˚
[
cou¡
];

215 
	gi
 = 0; i < 
	gcou¡
; i++) {

216 
	gåy
 {

217 
	gÁkeBa£Clõ¡s
[
i
] = 
˛azz
.
√wIn°™˚
();

218 } 
ˇtch
 (
In°™tüti⁄Ex˚±i⁄
 
e
) {

219 
	ge
.
¥ötSèckTø˚
();

221 } 
ˇtch
 (
IŒegÆAc˚ssEx˚±i⁄
 
e
) {

222 
	ge
.
¥ötSèckTø˚
();

225 
	gÁkeBa£Clõ¡s
[
i
].
c⁄figuª
(ò+ " " + 
∑øms
);

228 
public
 
	$°¨tClõ¡
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

229 i‡(
ÁkeMachöes
) {

230 
	`ÁkeSèπClõ¡
(
ödex
);

232 
	`di°ribuãdSèπClõ¡
(
ödex
);

234 
	}
}

235 
¥iv©e
 
	$di°ribuãdSèπClõ¡
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

236 
åy
 {

237 
im
.
	`assignIn°™˚
("˛õ¡" + 
ödex
, 
˛azz
, index + " " + 
∑øms
, 1);

238 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

239 
throw
 
√w
 
	`IOEx˚±i⁄
(
e
.
	`gëMesßge
());

241 
	}
}

242 
¥iv©e
 
	$ÁkeSèπClõ¡
(
ödex
) {

243 
ÁkeBa£Clõ¡s
[
ödex
].
	`°¨t
();

244 
	}
}

245 
public
 
	$°›Clõ¡
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

246 i‡(
ÁkeMachöes
) {

247 
	`ÁkeSt›Clõ¡
(
ödex
);

249 
	`di°ribuãdSt›Clõ¡
(
ödex
);

251 
	}
}

252 
¥iv©e
 
	$di°ribuãdSt›Clõ¡
(
ödex
Ë
throws
 
IOEx˚±i⁄
 {

253 
åy
 {

254 
im
.
	`ªmoveIn°™˚
("˛õ¡"+
ödex
);

255 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

256 
throw
 
√w
 
	`IOEx˚±i⁄
(
e
.
	`gëMesßge
());

258 
	}
}

259 
¥iv©e
 
	$ÁkeSt›Clõ¡
(
ödex
) {

260 
ÁkeBa£Clõ¡s
[
ödex
].
	`°›
();

261 
	}
}

263 
public
 
	$maö
(
Såög
 
¨gs
[]) {

264 
JUnôC‹e
.
	`maö
(
¨gs
);

265 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/DuplicateNameException.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
public
 cœs†
	cDu∂iˇãNameEx˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

22 
¥iv©e
 
föÆ
 
	m£rülVîsi⁄UID
 = 1L;

23 
public
 
	$Du∂iˇãNameEx˚±i⁄
(
Såög
 
mess
) {

24 
	`su≥r
(
mess
);

26 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/GenerateLoad.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåómRódî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gPrötSåóm
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

31 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gCÆíd¨
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

38 
imp‹t
 
	gjava
.
	gutû
.
	gIãøt‹
;

39 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

40 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

41 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

43 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

44 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

57 
public
 cœs†
	cGíî©eLﬂd
 {

58 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Gíî©eLﬂd
.
˛ass
);

60 
SîvîSockë
 
	mss
;

62 
	mSë
<
	mSœveThªad
> 
	m¶aves
 = 
CﬁÀ˘i⁄s


63 .
synchr⁄izedSë
(
√w
 
HashSë
<
SœveThªad
>());

65 
	mM≠
<
	mL⁄g
, L⁄g> 
	mtŸÆByTime
 = 
√w
 
HashM≠
<
L⁄g
, Long>();

67 vﬁ©ûê
	mcuºítI¡îvÆ
;

69 
	mœ°Ch™ge
;

71 
PrötSåóm
 
	msf
;

72 
PrötSåóm
 
	mtf
;

74 
	måy
 {

75 
	mtf
 = 
√w
 
PrötSåóm
“ew 
FûeOuçutSåóm
("trace"));

76 } 
ˇtch
 (
FûeNŸFoundEx˚±i⁄
 
e
) {

77 
	me
.
¥ötSèckTø˚
();

81 
föÆ
 
	gINTERVAL
 = 6000;

83 
synchr⁄ized
 
	$add
(
time
, 
cou¡
, 
Sockë
 
s
) {

84 
öãrvÆ
 = 
time
 / 
INTERVAL
;

85 i‡(
cuºítI¡îvÆ
 =0 || cuºítI¡îvÆ > 
öãrvÆ
) {

86 
Sy°em
.
out
.
	`¥öén
("Dr›pög " + 
cou¡
 + " f‹ " + 
√w
 
	`D©e
(
time
)

87 + " " + 
cuºítI¡îvÆ
 + ">" + 
öãrvÆ
);

91 
L⁄g
 
tŸÆ
 = 
tŸÆByTime
.
	`gë
(
öãrvÆ
);

92 i‡(
tŸÆ
 =
nuŒ
) {

93 
tŸÆByTime
.
	`put
(
öãrvÆ
, (Ë
cou¡
);

95 
tŸÆByTime
.
	`put
(
öãrvÆ
, 
tŸÆ
.
	`l⁄gVÆue
(Ë+ 
cou¡
);

97 
tf
.
	`¥öén
(
öãrvÆ
 + " " + 
cou¡
 + " " + 
s
);

98 
	}
}

100 
synchr⁄ized
 
	$ªmove
(
öãrvÆ
) {

101 
L⁄g
 
tŸÆ
 = 
tŸÆByTime
.
	`ªmove
(
öãrvÆ
);

102  
tŸÆ
 =
nuŒ
 ? -1 :Åotal;

103 
	}
}

105 ˛as†
	cSœveThªad
 
exãnds
 
	gThªad
 {

106 
Sockë
 
	gs
;

108 
SœveThªad
(
Sockë
 
s
) {

109 
£tD´m⁄
(
åue
);

110 
	gthis
.
	gs
 = 
s
;

111 
°¨t
();

114 
public
 
run
() {

115 
	gåy
 {

116 
	gSy°em
.
	gout
.
¥öén
("C⁄√˘edÅÿ" + 
s
);

117 
Buf„ªdRódî
 
	gis
 = 
√w
 Buf„ªdRódî“ew 
I≈utSåómRódî
(
s


118 .
gëI≈utSåóm
()));

119 
Såög
 
	gªsu…
;

120 (
	gªsu…
 = 
is
.
ªadLöe
()Ë!
nuŒ
) {

121 
Såög
 
timePî˚¡Cou¡
[] = 
ªsu…
.
•lô
(" ");

122 i‡(
	gtimePî˚¡Cou¡
.
	gÀngth
 != 5) {

123 
Sy°em
.
îr
.
¥öén
("GŸ " + 
ªsu…
 + " from " + 
s


125 
throw
 
√w
 
IOEx˚±i⁄
(
ªsu…
);

127 
	gtime
 = 
L⁄g
.
∑r£L⁄g
(
timePî˚¡Cou¡
[0]);

129 
	gcou¡
 = 
I¡egî
.
∑r£I¡
(
timePî˚¡Cou¡
[2]);

130 
	gîrs
 = 
I¡egî
.
∑r£I¡
(
timePî˚¡Cou¡
[3]);

131 i‡(
	gîrs
 > 0) {

132 
	gSy°em
.
	gout
.
¥öén
(
s
 + " GŸá¿îr‹! " + 
îrs
);

134 
add
(
time
, 
cou¡
, 
s
);

136 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

137 
	ge
.
¥ötSèckTø˚
();

138 } 
	gföÆly
 {

139 
˛o£
();

143 
£nd
(
≥r˚¡age
) {

144 
	gåy
 {

145 
	gs
.
gëOuçutSåóm
().
wrôe
((
≥r˚¡age
 + "\n").
gëByãs
());

146 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

147 
	ge
.
¥ötSèckTø˚
();

151 
˛o£
() {

152 
	gåy
 {

153 
	gSy°em
.
	gîr
.
¥öén
("Closög " + 
s
);

154 
	g¶aves
.
ªmove
(
this
);

155 
	gs
.
˛o£
();

156 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

157 
	ge
.
¥ötSèckTø˚
();

162 ˛as†
	cAc˚±‹Thªad
 
exãnds
 
	gThªad
 {

163 
Ac˚±‹Thªad
() {

164 
£tD´m⁄
(
åue
);

165 
°¨t
();

168 
public
 
run
() {

169 
	gåy
 {

170 
	gåue
) {

171 
Sockë
 
	gs
 = 
ss
.
ac˚±
();

172 
	gSy°em
.
	gîr
.
¥öén
("Ac˚±ed c⁄√˘i⁄ from " + 
s
);

173 
	g¶aves
.
add
(
√w
 
SœveThªad
(
s
));

175 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

176 
	ge
.
¥ötSèckTø˚
();

177 } 
	gföÆly
 {

178 
	gIãøt‹
<
	gSœveThªad
> 
	gô
 = 
¶aves
.
ôî©‹
(); it.
hasNext
();) {

179 
SœveThªad
 
	g°
 = 
ô
.
√xt
();

180 
	gô
.
ªmove
();

181 
	g°
.
˛o£
();

187 ˛as†
	cRï‹ãrThªad
 
exãnds
 
	gThªad
 {

188 
	g≥r˚¡age
;

190 
Rï‹ãrThªad
() {

191 
£tD´m⁄
(
åue
);

192 
°¨t
();

195 
public
 
run
() {

196 
	gåy
 {

197 
	gcuºítI¡îvÆ
 = 
Sy°em
.
cuºítTimeMûlis
(Ë/ 
INTERVAL
;

199 
	gThªad
.
¶ìp
(
INTERVAL
 * 2);

200 
	gmö
 = 99999;

201 
	gmax
 = 0;

202 
	gtŸÆ
 = 0;

203 
	gnumbî
 = 0;

204 
	gåue
) {

205 
	gnow
 = 
Sy°em
.
cuºítTimeMûlis
();

206 
	gœ°I¡îvÆ
 = 
cuºítI¡îvÆ
;

207 
	gcuºítI¡îvÆ
 += 1;

208 
	gcou¡
 = 
ªmove
(
œ°I¡îvÆ
);

209 
	gcou¡
 = 
cou¡
 * 1000 / 
INTERVAL
;

211 i‡(
	gœ°Ch™ge
 != 0

212 && (
œ°Ch™ge
 + 
INTERVAL
 * 3Ë< 
now
) {

216 i‡(
cou¡
 < 
mö
) {

217 
mö
 = 
cou¡
;

219 i‡(
	gcou¡
 > 
	gmax
) {

220 
	gmax
 = 
cou¡
;

222 
	gtŸÆ
 +
cou¡
;

223 
	gnumbî
++;

224 
CÆíd¨
 
	gˇÀnd¨
 = CÆíd¨.
gëIn°™˚
();

225 
	gˇÀnd¨
.
£tTimeInMûlis
(
œ°I¡îvÆ
 * 
INTERVAL
);

226 
Såög
 
	gªp‹t
 = 
œ°I¡îvÆ
 + " "

227 + 
ˇÀnd¨
.
gë
(
CÆíd¨
.
HOUR_OF_DAY
) + ":"

228 + 
ˇÀnd¨
.
gë
(
CÆíd¨
.
MINUTE
) + ":"

229 + 
ˇÀnd¨
.
gë
(
CÆíd¨
.
SECOND
) + " "

230 + 
≥r˚¡age
 + "% " + 
cou¡
 + " " + 
mö
 + " "

231 + ((Ë
tŸÆ
 / (Ë
numbî
) + " "

232 + 
max
;

233 
	gSy°em
.
	gîr
.
¥öén
(
ªp‹t
);

234 i‡(
	gsf
 !
nuŒ
) {

235 
sf
.
¥öén
(
ªp‹t
);

238 
	gmax
 = 
tŸÆ
 = 0;

239 
	gmö
 = 999999999;

240 
	gnumbî
 = 0;

242 
	gThªad
.
¶ìp
(
INTERVAL
);

244 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

245 
	ge
.
¥ötSèckTø˚
();

251 
synchr⁄ized
 
	$£ndCh™ge
(
≥r˚¡age
) {

252 
now
 = 
Sy°em
.
	`cuºítTimeMûlis
();

253 
°¨t
 = 
now
;

254 
Rï‹ãrThªad
.
≥r˚¡age
 =Öercentage;

255 
SœveThªad
 
°
 : 
¶aves
.
	`toAºay
(
√w
 SlaveThread[0])) {

256 
°
.
	`£nd
(
≥r˚¡age
);

258 
now
 = 
Sy°em
.
	`cuºítTimeMûlis
();

259 
dñay
 = 
now
 - 
°¨t
;

260 i‡(
dñay
 > 1000) {

261 
Sy°em
.
out
.
	`¥öén
("Dñay o‡" + 
dñay
 + "Åo sendÇewÖercentage");

263 
œ°Ch™ge
 = 
now
;

264 
	}
}

266 
public
 cœs†
	cGíî©‹In°™˚
 
im∂emíts
 
	gIn°™˚
 {

268 
byã
 
	gbyãs
[];

270 
	g≥r˚¡age
 = -1;

272 
	gîr‹s
;

274 
föÆ
 
Obje˘
 
	g°©Sync
 = 
√w
 Object();

276 
	gföished
;

278 
	gªads
;

280 
	gwrôes
;

282 
	gæ©ícy
;

284 
	gwœãncy
;

286 
	gout°™dög
;

288 vﬁ©ûê
boﬁón
 
	gÆive
;

290 
˛ass
 
ZooKì≥rThªad
 
exãnds
 
Thªad
 
im∂emíts
 
	gW©chî
, 
	gD©aCÆlback
,

291 
	gSètCÆlback
 {

292 
Såög
 
	gho°
;

294 
ZooKì≥rThªad
(
Såög
 
ho°
) {

295 
£tD´m⁄
(
åue
);

296 
	gÆive
 = 
åue
;

297 
	gthis
.
	gho°
 = 
ho°
;

298 
°¨t
();

301 
föÆ
 
	gout°™dögLimô
 = 100;

303 
synchr⁄ized
 
öcOut°™dög
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

304 
	gout°™dög
++;

305 
	gout°™dög
 > 
	gout°™dögLimô
) {

306 
waô
();

310 
synchr⁄ized
 
decOut°™dög
() {

311 
	gout°™dög
--;

312 
nŸifyAŒ
();

315 
R™dom
 
	gr
 = 
√w
 Random();

317 
Såög
 
	g∑th
;

319 
ZooKì≥r
 
	gzk
;

321 
boﬁón
 
	gc⁄√˘ed
;

323 
public
 
run
() {

324 
	gåy
 {

325 
	gzk
 = 
√w
 
ZooKì≥r
(
ho°
, 60000, 
this
);

326 
synchr⁄ized
 (
this
) {

327 i‡(!
	gc⁄√˘ed
) {

328 
waô
(20000);

331 
	gi
 = 0; i < 300; i++) {

332 
	gåy
 {

333 
	gThªad
.
¶ìp
(100);

334 
	g∑th
 = 
zk
.
¸óã
("/˛õ¡", 
√w
 
byã
[16],

335 
Ids
.
OPEN_ACL_UNSAFE
,

336 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
);

338 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

339 
	gLOG
.
îr‹
("kì≥∏ex˚±i⁄Åhrown", 
e
);

342 i‡(
	g∑th
 =
nuŒ
) {

343 
Sy°em
.
îr
.
¥öén
("Couldn't createáÇode in /!");

346 
	gÆive
) {

347 i‡(
	gr
.
√xtI¡
(100Ë< 
	g≥r˚¡age
) {

348 
	gzk
.
£tD©a
(
∑th
, 
byãs
, -1, 
this
, 
Sy°em


349 .
cuºítTimeMûlis
());

351 
	gzk
.
gëD©a
(
∑th
, 
Ál£
, 
this
, 
Sy°em


352 .
cuºítTimeMûlis
());

354 
öcOut°™dög
();

356 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

357 
	ge
.
¥ötSèckTø˚
();

358 } 
	gföÆly
 {

359 
	gÆive
 = 
Ál£
;

360 
	gåy
 {

361 
	gzk
.
˛o£
();

362 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

363 
	ge
.
¥ötSèckTø˚
();

368 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

369 
	gSy°em
.
	gîr
.
¥öén
(
evít
);

370 
synchr⁄ized
 (
this
) {

371 i‡(
	gevít
.
gëTy≥
(Ë=
EvítTy≥
.
N⁄e
) {

372 
c⁄√˘ed
 = (
evít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
);

373 
nŸifyAŒ
();

378 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

379 
Sèt
 
°©
) {

380 
decOut°™dög
();

381 
synchr⁄ized
 (
°©Sync
) {

382 i‡(!
	gÆive
) {

385 i‡(
	grc
 != 0) {

386 
Sy°em
.
îr
.
¥öén
("GŸÑ¯" + 
rc
);

387 
	gîr‹s
++;

389 
	gföished
++;

390 
	gæ©ícy
 +
Sy°em
.
cuºítTimeMûlis
(Ë- (
L⁄g
Ë
˘x
;

391 
	gªads
++;

396 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

397 
decOut°™dög
();

398 
synchr⁄ized
 (
°©Sync
) {

399 i‡(
	grc
 != 0) {

400 
Sy°em
.
îr
.
¥öén
("GŸÑ¯" + 
rc
);

401 
	gîr‹s
++;

403 
	gföished
++;

404 
	gwœãncy
 +
Sy°em
.
cuºítTimeMûlis
(Ë- (
L⁄g
Ë
˘x
;

405 
	gwrôes
++;

411 ˛as†
	cSídîThªad
 
exãnds
 
	gThªad
 {

412 
Sockë
 
	gs
;

414 
SídîThªad
(
Sockë
 
s
) {

415 
	gthis
.
	gs
 = 
s
;

416 
£tD´m⁄
(
åue
);

417 
°¨t
();

420 
public
 
run
() {

421 
	gåy
 {

422 
OuçutSåóm
 
	gos
 = 
s
.
gëOuçutSåóm
();

423 
	gföished
 = 0;

424 
	gîr‹s
 = 0;

425 
	gÆive
) {

426 
	gThªad
.
¶ìp
(300);

427 i‡(
	g≥r˚¡age
 =-1 || (
föished
 =0 && 
îr‹s
 == 0)) {

430 
Såög
 
	gªp‹t
 = 
Sy°em
.
cuºítTimeMûlis
() + " "

431 + 
≥r˚¡age
 + " " + 
föished
 + " " + 
îr‹s
 + " "

432 + 
out°™dög
 + "\n";

436 
synchr⁄ized
 (
°©Sync
) {

437 
	gföished
 = 0;

438 
	gîr‹s
 = 0;

439 
	gªads
 = 0;

440 
	gwrôes
 = 0;

441 
	gæ©ícy
 = 0;

442 
	gwœãncy
 = 0;

444 
	gos
.
wrôe
(
ªp‹t
.
gëByãs
());

447 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

448 
	ge
.
¥ötSèckTø˚
();

454 
Sockë
 
	gs
;

455 
ZooKì≥rThªad
 
	gzkThªad
;

456 
SídîThªad
 
	g£ndThªad
;

457 
Rï‹ãr
 
	gr
;

459 
public
 
c⁄figuª
(
föÆ
 
Såög
 
∑øms
) {

460 
	gSy°em
.
	gîr
.
¥öén
("GŸ " + 
∑øms
);

461 
√w
 
Thªad
() {

462 
public
 
run
() {

463 
	gåy
 {

464 
Såög
 
	g∑πs
[] = 
∑øms
.
•lô
(" ");

465 
Såög
 
	gho°P‹t
[] = 
∑πs
[1].
•lô
(":");

466 
	gbyãsSize
 = 1024;

467 i‡(
	g∑πs
.
	gÀngth
 == 3) {

468 
åy
 {

469 
byãsSize
 = 
I¡egî
.
∑r£I¡
(
∑πs
[2]);

470 } 
ˇtch
(
Ex˚±i⁄
 
e
) {

471 
	gSy°em
.
	gîr
.
¥öén
("NŸá¿öãgî: " + 
∑πs
[2]);

474 
	gbyãs
 = 
√w
 
byã
[
byãsSize
];

475 
	gs
 = 
√w
 
Sockë
(
ho°P‹t
[0], 
I¡egî
.
∑r£I¡
(hostPort[1]));

476 
	gzkThªad
 = 
√w
 
ZooKì≥rThªad
(
∑πs
[0]);

477 
	g£ndThªad
 = 
√w
 
SídîThªad
(
s
);

478 
Buf„ªdRódî
 
	gis
 = 
√w
 Buf„ªdRódî“ew 
I≈utSåómRódî
(
s


479 .
gëI≈utSåóm
()));

480 
Såög
 
	glöe
;

481 (
	glöe
 = 
is
.
ªadLöe
()Ë!
nuŒ
) {

482 
≥r˚¡age
 = 
I¡egî
.
∑r£I¡
(
löe
);

484 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

485 
	ge
.
¥ötSèckTø˚
();

488 }.
°¨t
();

492 
public
 
£tRï‹ãr
(
Rï‹ãr
 
r
) {

493 
	gthis
.
	gr
 = 
r
;

496 
public
 
°¨t
() {

497 
	gåy
 {

498 
	gr
.
ªp‹t
("started");

499 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

500 
	ge
.
¥ötSèckTø˚
();

504 
public
 
°›
() {

505 
	gÆive
 = 
Ál£
;

506 
	gzkThªad
.
öãºu±
();

507 
	g£ndThªad
.
öãºu±
();

508 
	gåy
 {

509 
	gzkThªad
.
joö
();

510 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

511 
	ge
.
¥ötSèckTø˚
();

513 
	gåy
 {

514 
	g£ndThªad
.
joö
();

515 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

516 
	ge
.
¥ötSèckTø˚
();

518 
	gåy
 {

519 
	gr
.
ªp‹t
("stopped");

520 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

521 
	ge
.
¥ötSèckTø˚
();

523 
	gåy
 {

524 
	gs
.
˛o£
();

525 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

526 
	ge
.
¥ötSèckTø˚
();

532 
¥iv©e
 ˛as†
	cSètusW©chî
 
im∂emíts
 
	gW©chî
 {

533 vﬁ©ûê
boﬁón
 
	gc⁄√˘ed
;

535 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

536 i‡(
	gevít
.
gëTy≥
(Ë=
W©chî
.
Evít
.
EvítTy≥
.
N⁄e
) {

537 
synchr⁄ized
 (
this
) {

538 
c⁄√˘ed
 = 
evít
.
gëSèã
(Ë=
W©chî
.
Evít
.
Kì≥rSèã
.
SyncC⁄√˘ed
;

539 
nŸifyAŒ
();

544 
public
 
boﬁón
 
isC⁄√˘ed
() {

545  
	gc⁄√˘ed
;

548 
synchr⁄ized
 
public
 
boﬁón
 
waôC⁄√˘ed
(
timeout
)

549 
throws
 
	gI¡îru±edEx˚±i⁄
 {

550 
	gídTime
 = 
Sy°em
.
cuºítTimeMûlis
(Ë+ 
timeout
;

551 !
	gc⁄√˘ed
 && 
	gSy°em
.
cuºítTimeMûlis
(Ë< 
	gídTime
) {

552 
waô
(
ídTime
 - 
Sy°em
.
cuºítTimeMûlis
());

554  
	gc⁄√˘ed
;

558 
¥iv©e
 
boﬁón
 
	gÀadîO∆y
;

559 
¥iv©e
 
boﬁón
 
	gÀadîSîves
;

561 
¥iv©e
 
	gSåög
 []
	$¥o˚ssO±i⁄s
(
Såög
 
¨gs
[]) {

562 
AºayLi°
<
Såög
> 
√wArgs
 = 
√w
 ArrayList<String>();

563 
Såög
 
a
: 
¨gs
) {

564 i‡(
a
.
	`equÆs
("--leaderOnly")) {

565 
ÀadîO∆y
 = 
åue
;

566 
ÀadîSîves
 = 
åue
;

567 } i‡(
a
.
	`equÆs
("--leaderServes")) {

568 
ÀadîSîves
 = 
åue
;

570 
√wArgs
.
	`add
(
a
);

573  
√wArgs
.
	`toAºay
(
√w
 
Såög
[0]);

574 
	}
}

584 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
I¡îru±edEx˚±i⁄
,

585 
Kì≥rEx˚±i⁄
, 
NoAvaûabÀC⁄èöîs
, 
Du∂iˇãNameEx˚±i⁄
,

586 
NoAssignmítEx˚±i⁄
 {

588 
¨gs
 = 
	`¥o˚ssO±i⁄s
(args);

589 i‡(
¨gs
.
Àngth
 == 5) {

590 
åy
 {

591 
SètusW©chî
 
°©usW©chî
 = 
√w
 
	`SètusW©chî
();

592 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
¨gs
[0], 15000, 
°©usW©chî
);

593 i‡(!
°©usW©chî
.
	`waôC⁄√˘ed
(5000)) {

594 
Sy°em
.
îr
.
	`¥öén
("CouldÇŸ c⁄√˘Åÿ" + 
¨gs
[0]);

597 
In°™˚M™agî
 
im
 = 
√w
 
	`In°™˚M™agî
(
zk
, 
¨gs
[1]);

598 
ss
 = 
√w
 
	`SîvîSockë
(0);

599 
p‹t
 = 
ss
.
	`gëLoˇlP‹t
();

600 
£rvîCou¡
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[2]);

601 
˛õ¡Cou¡
 = 
I¡egî
.
	`∑r£I¡
(
¨gs
[3]);

602 
SåögBuûdî
 
qu‹umHo°P‹t
 = 
√w
 
	`SåögBuûdî
();

603 
SåögBuûdî
 
zkHo°P‹t
 = 
√w
 
	`SåögBuûdî
();

604 
i
 = 0; i < 
£rvîCou¡
; i++) {

605 
Såög
 
r
[] = 
Qu‹umPìrIn°™˚
.
	`¸óãSîvî
(
im
, 
i
, 
ÀadîSîves
);

606 i‡(
i
 > 0) {

607 
qu‹umHo°P‹t
.
	`≠≥nd
(',');

608 
zkHo°P‹t
.
	`≠≥nd
(',');

610 
zkHo°P‹t
.
	`≠≥nd
(
r
[0]);

611 
qu‹umHo°P‹t
.
	`≠≥nd
(
r
[1]);

613 
i
 = 0; i < 
£rvîCou¡
; i++) {

614 
Qu‹umPìrIn°™˚
.
	`°¨tIn°™˚
(
im
, 
qu‹umHo°P‹t


615 .
	`toSåög
(), 
i
);

617 i‡(
ÀadîO∆y
) {

618 
åõs
 = 0;

619 
ouãr
:

620 
åue
) {

621 
Thªad
.
	`¶ìp
(1000);

622 
IOEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

623 
Såög
 
∑πs
[] = 
zkHo°P‹t
.
	`toSåög
().
	`•lô
(",");

624 
i
 = 0; i < 
∑πs
.
Àngth
; i++) {

625 
åy
 {

626 
Såög
 
mode
 = 
	`gëMode
(
∑πs
[
i
]);

627 i‡(
mode
.
	`equÆs
("leader")) {

628 
zkHo°P‹t
 = 
√w
 
	`SåögBuûdî
(
∑πs
[
i
]);

629 
Sy°em
.
out
.
	`¥öén
("C⁄√˘ögÉx˛usivñyÅÿ" + 
zkHo°P‹t
.
	`toSåög
());

630  
ouãr
;

632 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

633 
œ°Ex˚±i⁄
 = 
e
;

636 i‡(
åõs
++ > 3) {

637 
throw
 
œ°Ex˚±i⁄
;

641 
i
 = 0; i < 
˛õ¡Cou¡
; i++) {

642 
im
.
	`assignIn°™˚
("˛õ¡" + 
i
, 
Gíî©‹In°™˚
.
˛ass
,

643 
zkHo°P‹t
.
	`toSåög
()

645 + 
I√tAddªss
.
	`gëLoˇlHo°
()

646 .
	`gëC™⁄iˇlHo°Name
() + ':'

647 + 
p‹t
, 1);

649 
√w
 
	`Ac˚±‹Thªad
();

650 
√w
 
	`Rï‹ãrThªad
();

651 
Buf„ªdRódî
 
is
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(

652 
Sy°em
.
ö
));

653 
Såög
 
löe
;

654 (
löe
 = 
is
.
	`ªadLöe
()Ë!
nuŒ
) {

655 
åy
 {

656 
Såög
 
cmdNumbî
[] = 
löe
.
	`•lô
(" ");

657 i‡(
cmdNumbî
[0].
	`equÆs
("percentage")

658 && 
cmdNumbî
.
Àngth
 > 1) {

659 
numbî
 = 
I¡egî
.
	`∑r£I¡
(
cmdNumbî
[1]);

660 i‡(
numbî
 < 0 ||Çumber > 100) {

661 
throw
 
√w
 
	`NumbîF‹m©Ex˚±i⁄
(

664 
	`£ndCh™ge
(
numbî
);

665 } i‡(
cmdNumbî
[0].
	`equÆs
("sleep")

666 && 
cmdNumbî
.
Àngth
 > 1) {

667 
numbî
 = 
I¡egî
.
	`∑r£I¡
(
cmdNumbî
[1]);

668 
Thªad
.
	`¶ìp
(
numbî
 * 1000);

669 } i‡(
cmdNumbî
[0].
	`equÆs
("save")

670 && 
cmdNumbî
.
Àngth
 > 1) {

671 
sf
 = 
√w
 
	`PrötSåóm
(
cmdNumbî
[1]);

673 
Sy°em
.
îr
.
	`¥öén
("Commands must be:");

674 
Sy°em
.
îr


675 .
	`¥öén
("\tpercentageÇew_write_percentage");

676 
Sy°em
.
îr
.
	`¥öén
("\tsleep seconds_to_sleep");

677 
Sy°em
.
îr
.
	`¥öén
("\tsave file_to_save_output");

679 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

680 
Sy°em
.
out
.
	`¥öén
("Notá validÇumber: "

681 + 
e
.
	`gëMesßge
());

684 } 
	`ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

685 
	`doUßge
();

686 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

687 
e
.
	`¥ötSèckTø˚
();

688 
Sy°em
.
	`exô
(2);

691 
	`doUßge
();

694 
	}
}

696 
¥iv©e
 
Såög
 
	$gëMode
(
Såög
 
ho°P‹t
Ë
throws
 
NumbîF‹m©Ex˚±i⁄
, 
UnknownHo°Ex˚±i⁄
, 
IOEx˚±i⁄
 {

697 
Såög
 
∑πs
[] = 
ho°P‹t
.
	`•lô
(":");

698 
Sockë
 
s
 = 
√w
 
	`Sockë
(
∑πs
[0], 
I¡egî
.
	`∑r£I¡
(parts[1]));

699 
s
.
	`gëOuçutSåóm
().
	`wrôe
("°©".
	`gëByãs
());

700 
Buf„ªdRódî
 
br
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`I≈utSåómRódî
(
s
.
	`gëI≈utSåóm
()));

701 
Såög
 
löe
;

702 (
löe
 = 
br
.
	`ªadLöe
()Ë!
nuŒ
) {

703 i‡(
löe
.
	`°¨tsWôh
("Mode: ")) {

704  
löe
.
	`sub°rög
(6);

708 
	}
}

710 
¥iv©e
 
	$doUßge
() {

711 
Sy°em
.
îr
.
	`¥öén
("USAGE: " + 
Gíî©eLﬂd
.
˛ass
.
	`gëName
()

713 
Sy°em
.
	`exô
(2);

714 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/Instance.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
public
 
öãrÁ˚
 
	gIn°™˚
 {

32 
öãrÁ˚
 
	gRï‹ãr
 {

33 
ªp‹t
(
Såög
Ñï‹tË
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
;

42 
£tRï‹ãr
(
Rï‹ãr
 
r
);

50 
c⁄figuª
(
Såög
 
∑øms
);

54 
°¨t
();

58 
°›
();

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/InstanceContainer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gC⁄√˘i⁄LossEx˚±i⁄
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNodeExi°sEx˚±i⁄
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
.
	gIn°™˚
.
	gRï‹ãr
;

47 
public
 
˛ass
 
In°™˚C⁄èöî
 
im∂emíts
 
	gW©chî
, 
	gAsyncCÆlback
.
	gChûdªnCÆlback
 {

48 
¥iv©e
 
föÆ
 cœs†
	cMyW©chî
 
im∂emíts
 
	gW©chî
 {

49 
Såög
 
	gmyNode
;

50 
D©aCÆlback
 
	gdc
;

51 
MyW©chî
(
Såög
 
myNode
, 
D©aCÆlback
 
dc
) {

52 
	gthis
.
	gmyNode
 = 
myNode
;

53 
	gthis
.
	gdc
 = 
dc
;

55 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

56 i‡(
	gevít
.
gëP©h
(Ë!
nuŒ
 && 
evít
.gëP©h().
equÆs
(
myNode
)) {

57 
zk
.
gëD©a
(
myNode
, 
this
, 
dc
,Åhis);

61 
¥iv©e
 
föÆ
 cœs†
	cMyD©aCÆlback
 
im∂emíts
 
	gD©aCÆlback
 {

62 
	gœ°Vî
;

63 
Såög
 
	gmyNode
;

64 
In°™˚
 
	gmyIn°™˚
;

66 
MyD©aCÆlback
(
Såög
 
myNode
, 
In°™˚
 
myIn°™˚
, 
vî
) {

67 
	gthis
.
	gmyNode
 = 
myNode
;

68 
	gthis
.
	gmyIn°™˚
 = 
myIn°™˚
;

69 
	gœ°Vî
 = 
vî
;

71 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
,

72 
Obje˘
 
˘x
, 
byã
[] 
d©a
, 
Sèt
 
°©
) {

73 i‡(
	grc
 =
Kì≥rEx˚±i⁄
.
Code
.
NONODE
.
ötVÆue
()) {

77 i‡(
	grc
 !
Kì≥rEx˚±i⁄
.
Code
.
OK
.
ötVÆue
()) {

78 
zk
.
gëD©a
(
myNode
, (
W©chî
)
˘x
, 
this
, ctx);

80 
	gcuºVî
 = 
°©
.
gëVîsi⁄
();

81 i‡(
	gcuºVî
 !
œ°Vî
) {

82 
Såög
 
∑πs
[] = 
√w
 Såög(
d©a
).
•lô
(" ", 2);

83 
	gmyIn°™˚
.
c⁄figuª
(
∑πs
[1]);

84 
	gœ°Vî
 = 
cuºVî
;

88 
¥iv©e
 
föÆ
 cœs†
	cMyRï‹ãr
 
im∂emíts
 
	gRï‹ãr
 {

89 
Såög
 
	gmyRï‹tNode
;

91 
public
 
MyRï‹ãr
(
Såög
 
chûd
) {

92 
	gmyRï‹tNode
 = 
ªp‹tsNode
 + '/' + 
chûd
;

95 
public
 
ªp‹t
(
Såög
Ñï‹tË
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

96 
	gj
 = 0; j < 
	gmaxTrõs
; j++) {

97 
	gåy
 {

98 
	gåy
 {

99 
	gzk
.
£tD©a
(
myRï‹tNode
, 
ªp‹t
.
gëByãs
(), -1);

100 } 
ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

101 
	gzk
.
¸óã
(
myRï‹tNode
, 
ªp‹t
.
gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

104 } 
ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {}

108 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
In°™˚C⁄èöî
.
˛ass
);

109 
Såög
 
	g«me
;

110 
Såög
 
	gzkHo°P‹t
;

112 
Såög
 
	g¥efixNode
;

113 
Såög
 
	g°©usNode
 = "available";

114 
Såög
 
	gªp‹tsNode
 = "reports";

115 
Såög
 
	gassignmítsNode
 = "assignments";

116 
ZooKì≥r
 
	gzk
;

117 
föÆ
 
	g£ssTimeout
 = 5000;

118 
föÆ
 
	gmaxTrõs
 = 3;

119 
public
 
	$In°™˚C⁄èöî
(
Såög
 
«me
, Såög 
zkHo°P‹t
, Såög 
¥efix
Ë
throws
 
UnknownHo°Ex˚±i⁄
 {

120 i‡(
«me
.
	`Àngth
(Ë=0 ||Çame.
	`equÆs
("hostname")) {

121 
«me
 = 
I√tAddªss
.
	`gëLoˇlHo°
().
	`gëC™⁄iˇlHo°Name
();

123 
this
.
«me
 =Çame;

124 
this
.
zkHo°P‹t
 = zkHostPort;

125 
this
.
¥efixNode
 = 
¥efix
;

126 
this
.
°©usNode
 = 
¥efix
 + '/' +Åhis.°©usNodê+ '/' + 
«me
;

127 
this
.
ªp‹tsNode
 = 
¥efix
 + '/' +Åhis.reportsNode;

128 
this
.
assignmítsNode
 = 
¥efix
 + '/' +Åhis.assignmítsNodê+ '/' + 
«me
;

129 
	}
}

131 
¥iv©e
 
	$rmnod
(
Såög
 
∑th
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

132 
Kì≥rEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

133 
i
 = 0; i < 
maxTrõs
; i++) {

134 
åy
 {

135 
zk
.
	`dñëe
(
∑th
, -1);

136 
œ°Ex˚±i⁄
 = 
nuŒ
;

138 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

141 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

142 
œ°Ex˚±i⁄
 = 
e
;

145 i‡(
œ°Ex˚±i⁄
 !
nuŒ
) {

146 
throw
 
œ°Ex˚±i⁄
;

148 
	}
}

149 
¥iv©e
 
	$mknod_ö√r
(
Såög
 
∑th
, 
Cª©eMode
 
mode
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

150 
i
 = 0; i < 
maxTrõs
; i++) {

151 
åy
 {

152 
zk
.
	`¸óã
(
∑th
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
mode
);

154 } 
	`ˇtch
 (
NodeExi°sEx˚±i⁄
 
e
) {

155 i‡(
mode
 !
Cª©eMode
.
EPHEMERAL
) {

158 
Sèt
 
°©
 = 
zk
.
	`exi°s
(
∑th
, 
Ál£
);

159 i‡(
°©
 =
nuŒ
) {

162 i‡(
°©
.
	`gëEphemîÆOw√r
(Ë!
zk
.
	`gëSessi⁄Id
()) {

163 
throw
 
e
;

166 } 
	`ˇtch
 (
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

167 
e
.
	`¥ötSèckTø˚
();

170 
	}
}

172 
¥iv©e
 
	$mknod
(
Såög
 
∑th
, 
Cª©eMode
 
mode
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

173 
Såög
 
sub∑th
[] = 
∑th
.
	`•lô
("/");

174 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

176 
i
 = 1; i < 
sub∑th
.
Àngth
; i++) {

177 
sb
.
	`≠≥nd
("/");

178 
sb
.
	`≠≥nd
(
sub∑th
[
i
]);

179 
Cª©eMode
 
m
 = Cª©eMode.
PERSISTENT
;

180 i‡(
i
 =
sub∑th
.
Àngth
-1) {

181 
m
 = 
mode
;

183 
	`mknod_ö√r
(
sb
.
	`toSåög
(), 
m
);

185 
	}
}

187 
public
 
	$run
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

188 
zk
 = 
√w
 
	`ZooKì≥r
(
zkHo°P‹t
, 
£ssTimeout
, 
this
);

189 
	`mknod
(
assignmítsNode
, 
Cª©eMode
.
PERSISTENT
);

190 
	`mknod
(
°©usNode
, 
Cª©eMode
.
EPHEMERAL
);

191 
	`mknod
(
ªp‹tsNode
, 
Cª©eMode
.
PERSISTENT
);

193 
zk
.
	`gëChûdªn
(
assignmítsNode
, 
åue
, 
this
, 
nuŒ
);

194 
	}
}

205 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
UnknownHo°Ex˚±i⁄
, 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

206 i‡(
¨gs
.
Àngth
 != 3) {

207 
Sy°em
.
îr
.
	`¥öén
("USAGE: " + 
In°™˚C⁄èöî
.
˛ass
.
	`gëName
() + "Çame zkHostPort znodePrefix");

208 
Sy°em
.
	`exô
(2);

210 
√w
 
	`In°™˚C⁄èöî
(
¨gs
[0],árgs[1],árgs[2]).
	`run
();

211 
åue
) {

212 
Thªad
.
	`¶ìp
(1000);

214 
	}
}

216 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

217 i‡(
Kì≥rSèã
.
Expúed
 =
evít
.
	`gëSèã
()) {

219 
LOG
.
	`îr‹
("Lost session");

220 
Sy°em
.
	`exô
(4);

222 i‡(
evít
.
	`gëP©h
(Ë!
nuŒ
 &&Évít.gëP©h().
	`equÆs
(
assignmítsNode
)) {

224 
zk
.
	`gëChûdªn
(
assignmítsNode
, 
åue
, 
this
, 
nuŒ
);

226 
	}
}

228 
	gHashM≠
<
	gSåög
, 
	gIn°™˚
> 
	gö°™˚s
 = 
√w
 
HashM≠
<
Såög
, Instance>();

229 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

230 
Li°
<
Såög
> 
chûdªn
) {

231 i‡(
	grc
 !
Kì≥rEx˚±i⁄
.
Code
.
OK
.
ötVÆue
()) {

233 
zk
.
gëChûdªn
(
assignmítsNode
, 
åue
, 
this
, 
nuŒ
);

236 
	gHashM≠
<
	gSåög
, 
	gIn°™˚
> 
	g√wLi°
 = 
√w
 
HashM≠
<
Såög
, Instance>();

238 
Sèt
 
	g°©
 = 
√w
 Stat();

239 
Såög
 
	gchûd
: 
chûdªn
) {

240 
In°™˚
 
i
 = 
ö°™˚s
.
ªmove
(
chûd
);

241 i‡(
	gi
 =
nuŒ
) {

243 
byã
 
d©a
[] = 
nuŒ
;

244 
Såög
 
	gmyNode
 = 
assignmítsNode
 + '/' + 
chûd
;

245 
	gåue
) {

246 
	gåy
 {

247 
	gd©a
 = 
zk
.
gëD©a
(
myNode
, 
åue
, 
°©
);

249 } 
ˇtch
 (
NoNodeEx˚±i⁄
 
e
) {

252 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

253 
	ge
.
¥ötSèckTø˚
();

254 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

258 i‡(
	gd©a
 !
nuŒ
) {

259 
Såög
 
ö°™˚S≥c
 = 
√w
 Såög(
d©a
);

260 
	g•a˚Index
 = 
ö°™˚S≥c
.
ödexOf
(' ');

261 
Såög
 
	g˛azz
;

262 
Såög
 
	gc⁄f
;

263 i‡(
	g•a˚Index
 == -1) {

264 
˛azz
 = 
ö°™˚S≥c
;

265 
	gc⁄f
 = 
nuŒ
;

267 
	g˛azz
 = 
ö°™˚S≥c
.
sub°rög
(0, 
•a˚Index
);

268 
	gc⁄f
 = 
ö°™˚S≥c
.
sub°rög
(
•a˚Index
+1);

270 
	gåy
 {

271 
Cœss
 
	gc
 = Cœss.
f‹Name
(
˛azz
);

272 
	gi
 = (
In°™˚
)
c
.
√wIn°™˚
();

273 
Rï‹ãr
 
	gªp‹ãr
 = 
√w
 
MyRï‹ãr
(
chûd
);

274 
	gi
.
£tRï‹ãr
(
ªp‹ãr
);

275 
	gi
.
c⁄figuª
(
c⁄f
);

276 
	gi
.
°¨t
();

277 
	g√wLi°
.
put
(
chûd
, 
i
);

278 
	gvî
 = 
°©
.
gëVîsi⁄
();

279 
In°™˚
 
	gmyIn°™˚
 = 
i
;

280 
D©aCÆlback
 
	gdc
 = 
√w
 
MyD©aCÆlback
(
myNode
, 
myIn°™˚
, 
vî
);

281 
W©chî
 
	gw©chî
 = 
√w
 
MyW©chî
(
myNode
, 
dc
);

282 
	gzk
.
gëD©a
(
myNode
, 
w©chî
, 
dc
, watcher);

283 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

284 
	gLOG
.
w¨n
("Skùpög " + 
chûd
, 
e
);

285 i‡(
	ge
.
gëCau£
(Ë!
nuŒ
) {

286 
LOG
.
w¨n
("Cau£d by", 
e
.
gëCau£
());

293 
	g√wLi°
.
put
(
chûd
, 
i
);

297 
	gM≠
.
	gE¡ry
<
	gSåög
,
	gIn°™˚
> 
	gi
: 
ö°™˚s
.
íåySë
()) {

298 
i
.
gëVÆue
().
°›
();

299 
	gåy
 {

300 
rmnod
(
ªp‹tsNode
 + '/' + 
i
.
gëKey
());

301 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

302 
	gThªad
.
cuºítThªad
().
öãºu±
();

303 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

304 
	ge
.
¥ötSèckTø˚
();

307 
	gö°™˚s
 = 
√wLi°
;

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/InstanceManager.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gC⁄√˘i⁄LossEx˚±i⁄
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNodeExi°sEx˚±i⁄
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

54 
public
 
˛ass
 
In°™˚M™agî
 
im∂emíts
 
	gAsyncCÆlback
.
	gChûdªnCÆlback
, 
	gW©chî
 {

55 
föÆ
 
¥iv©e
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
In°™˚M™agî
.
˛ass
);

56 
¥iv©e
 
ZooKì≥r
 
	gzk
;

57 
¥iv©e
 
Såög
 
	g¥efixNode
;

58 
¥iv©e
 
Såög
 
	gªp‹tsNode
 = "reports";

59 
¥iv©e
 
Såög
 
	gªadyNode
 = "ready";

60 
¥iv©e
 
Såög
 
	gassignmítsNode
 = "assignments";

61 
¥iv©e
 
Såög
 
	g°©usNode
 = "available";

62 
¥iv©e
 
föÆ
 
	gmaxTrõs
 = 3;

63 
¥iv©e
 
föÆ
 cœs†
	cAssig√d
 {

64 
Såög
 
	gc⁄èöî
;

65 
Såög
 
	gö°™˚
;

66 
	gweight
;

67 
Assig√d
(
Såög
 
c⁄èöî
, Såög 
ö°™˚
, 
weight
) {

68 
	gthis
.
	gc⁄èöî
 = 
c⁄èöî
;

69 
	gthis
.
	gö°™˚
 = 
ö°™˚
;

70 
	gthis
.
	gweight
 = 
weight
;

73 
¥iv©e
 
	gLi°
<
	gSåög
> 
	g¥e„ºedLi°
 = 
√w
 
AºayLi°
<
Såög
>();

75 
Såög
 
	gli°
 = 
Sy°em
.
gëPr›îty
("ic.preferredList");

76 i‡(
	gli°
 !
nuŒ
) {

77 
¥e„ºedLi°
 = 
Aºays
.
asLi°
(
li°
.
•lô
(","));

78 
	gSy°em
.
	gîr
.
¥öén
("Pª„ºed Li°: " + 
¥e„ºedLi°
);

80 
	gSy°em
.
	gîr
.
¥öén
("Preferred List isÉmpty");

83 
¥iv©e
 
	gHashM≠
<
	gSåög
, 
	gHashSë
<
	gAssig√d
>> 
	gassignmíts
 = 
√w
 
HashM≠
<
Såög
, HashSet<Assigned>>();

84 
¥iv©e
 
	gHashM≠
<
	gSåög
, 
	gAssig√d
> 
	gö°™˚ToAssignmít
 = 
√w
 
HashM≠
<
Såög
, Assigned>();

85 
public
 
	$In°™˚M™agî
(
ZooKì≥r
 
zk
, 
Såög
 
¥efix
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

86 
this
.
zk
 = zk;

87 
this
.
¥efixNode
 = 
¥efix
;

88 
this
.
ªadyNode
 = 
¥efix
 + '/' +Åhis.readyNode;

89 
this
.
assignmítsNode
 = 
¥efix
 + '/' +Åhis.assignmentsNode;

90 
this
.
ªp‹tsNode
 = 
¥efix
 + '/' +Åhis.reportsNode;

91 
this
.
°©usNode
 = 
¥efix
 + '/' +Åhis.statusNode;

92 
i
 = 0; i < 
maxTrõs
; i++) {

93 
åy
 {

94 
	`£tupNodes
(
zk
);

96 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {}

98 
C⁄√˘i⁄LossEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

99 
i
 = 0; i < 
maxTrõs
; i++) {

100 
åy
 {

101 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
°©usNode
, 
this
);

102 
	`¥o˚ssResu…
(0, 
°©usNode
, 
nuŒ
, 
chûdªn
);

103 
œ°Ex˚±i⁄
 = 
nuŒ
;

105 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

106 
œ°Ex˚±i⁄
 = 
e
;

109 i‡(
œ°Ex˚±i⁄
 !
nuŒ
) {

110 
throw
 
œ°Ex˚±i⁄
;

112 
	}
}

113 
¥iv©e
 
	$£tupNodes
(
ZooKì≥r
 
zk
Ë
throws
 
Kì≥rEx˚±i⁄
,

114 
I¡îru±edEx˚±i⁄
 {

115 
åy
 {

116 
zk
.
	`¸óã
(
¥efixNode
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

117 } 
	`ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) { }

118 
åy
 {

119 
zk
.
	`¸óã
(
assignmítsNode
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

120 } 
	`ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) { }

121 
åy
 {

122 
zk
.
	`¸óã
(
°©usNode
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

123 } 
	`ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) { }

124 
åy
 {

125 
zk
.
	`¸óã
(
ªp‹tsNode
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

126 } 
	`ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) { }

127 
åy
 {

128 
zk
.
	`¸óã
(
ªadyNode
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

129 } 
	`ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) { }

130 
	}
}

132 
synchr⁄ized
 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

133 
Li°
<
Såög
> 
chûdªn
) {

134 i‡(
	grc
 !
Kì≥rEx˚±i⁄
.
Code
.
OK
.
ötVÆue
()) {

135 
zk
.
gëChûdªn
(
°©usNode
, 
this
,Åhis, 
nuŒ
);

138 i‡(
	gLOG
.
isDebugE«bÀd
()) {

139 
	gLOG
.
debug
("GŸ " + 
chûdªn
 + " chûdª¿‰om " + 
∑th
);

141 
	gHashM≠
<
	gSåög
, 
	gHashSë
<
	gAssig√d
>> 
	g√wAssignmíts
 = 
√w
 
HashM≠
<
Såög
, HashSet<Assigned>>();

142 
Såög
 
	gc
: 
chûdªn
) {

143 
HashSë
<
Assig√d
> 
a
 = 
assignmíts
.
ªmove
(
c
);

144 i‡(
	ga
 !
nuŒ
) {

145 
√wAssignmíts
.
put
(
c
, 
a
);

147 
	g√wAssignmíts
.
put
(
c
, 
√w
 
HashSë
<
Assig√d
>());

151 
Såög
 
	gdód
: 
assignmíts
.
keySë
()) {

152 
åy
 {

153 
ªmoveIn°™˚
(
dód
);

154 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

155 
	ge
.
¥ötSèckTø˚
();

156 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

157 
	gThªad
.
cuºítThªad
().
öãºu±
();

160 
	gassignmíts
 = 
√wAssignmíts
;

162 
¥iv©e
 
	$ªmoveAssignmítNode
(
Såög
 
dód
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

163 
Såög
 
dódNode
 = 
assignmítsNode
 + '/' + 
dód
;

164 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
dódNode
, 
Ál£
);

165 
Såög
 
c
: 
chûdªn
) {

166 
zk
.
	`dñëe
(
dódNode
 + '/' + 
c
, -1);

168 
åy
 {

169 
zk
.
	`dñëe
(
dódNode
, -1);

170 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) { }

171 
	}
}

173 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

174 i‡(
evít
.
	`gëP©h
().
	`equÆs
(
°©usNode
)) {

175 
zk
.
	`gëChûdªn
(
°©usNode
, 
this
,Åhis, 
nuŒ
);

177 
	}
}

178 
synchr⁄ized
 
public
 
Såög
 
assignIn°™˚
(Såög 
«me
, 
Cœss
<? 
exãnds
 
In°™˚
> 
˛azz
, Såög 
∑øms
, 
weight
Ë
throws
 
	gNoAvaûabÀC⁄èöîs
, 
	gDu∂iˇãNameEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

179 i‡(
	gweight
 < 1) {

181 
	gweight
 = 1;

183 
Såög
 
	gö°™˚S≥c
 = 
˛azz
.
gëName
(Ë+ ' ' + 
∑øms
;

184 i‡(
	gö°™˚ToAssignmít
.
gë
(
«me
Ë!
nuŒ
) {

185 
throw
 
√w
 
Du∂iˇãNameEx˚±i⁄
(
«me
 + "álreadyÉxists");

188 
Såög
 
	gmo°IdÀ
 = 
nuŒ
;

189 
	gmo°IdÀWeight
 = 
I¡egî
.
MAX_VALUE
;

190 
Såög
 
	g¥e„ºed
: 
¥e„ºedLi°
) {

191 
HashSë
<
Assig√d
> 
assignmítLi°
 = 
assignmíts
.
gë
(
¥e„ºed
);

192 
	gw
 = 0;

193 i‡(
	gassignmítLi°
 !
nuŒ
) {

194 
Assig√d
 
a
: 
assignmítLi°
) {

195 
w
 +
a
.
weight
;

197 i‡(
	gw
 < 
	gmo°IdÀWeight
) {

198 
	gmo°IdÀWeight
 = 
w
;

199 
	gmo°IdÀ
 = 
¥e„ºed
;

203 
	gE¡ry
<
	gSåög
, 
	gHashSë
<
	gAssig√d
>> 
	ge
: 
assignmíts
.
íåySë
()) {

204 
w
 = 0;

205 
Assig√d
 
	ga
: 
e
.
gëVÆue
()) {

206 
w
 +
a
.
weight
;

208 i‡(
	gw
 < 
	gmo°IdÀWeight
) {

209 
	gmo°IdÀWeight
 = 
w
;

210 
	gmo°IdÀ
 = 
e
.
gëKey
();

213 i‡(
	gmo°IdÀ
 =
nuŒ
) {

214 
throw
 
√w
 
NoAvaûabÀC⁄èöîs
("Noávailable containers");

216 
Assig√d
 
	ga
 = 
√w
 Assig√d(
mo°IdÀ
, 
«me
, 
weight
);

217 
	gö°™˚ToAssignmít
.
put
(
«me
, 
a
);

218 
	gHashSë
<
	gAssig√d
> 
	gas
 = 
assignmíts
.
gë
(
mo°IdÀ
);

219 i‡(
	gas
 =
nuŒ
) {

220 
as
 = 
√w
 
HashSë
<
Assig√d
>();

221 
	gassignmíts
.
put
(
mo°IdÀ
, 
as
);

223 
	gas
.
add
(
a
);

224 
Kì≥rEx˚±i⁄
 
	gœ°Ex˚±i⁄
 = 
nuŒ
;

225 
	gi
 = 0; i < 
	gmaxTrõs
; i++) {

226 
	gåy
 {

227 
	gzk
.
¸óã
(
assignmítsNode
 + '/' + 
mo°IdÀ
 + '/' + 
«me
, 
ö°™˚S≥c
.
gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

228  
	gmo°IdÀ
;

229 } 
ˇtch
(
NodeExi°sEx˚±i⁄
 
e
) {

230  
	gmo°IdÀ
;

231 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

232 
	gœ°Ex˚±i⁄
 = 
e
;

235 
throw
 
	gœ°Ex˚±i⁄
;

238 
public
 
	$ªc⁄figuªIn°™˚
(
Såög
 
«me
, Såög 
∑øms
Ë
throws
 
NoAssignmítEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

239 i‡(
LOG
.
	`isDebugE«bÀd
()) {

240 
LOG
.
	`debug
("Rec⁄figurög " + 
«me
 + " wôh " + 
∑øms
);

242 
Assig√d
 
assig√d
 = 
ö°™˚ToAssignmít
.
	`gë
(
«me
);

243 i‡(
assig√d
 =
nuŒ
) {

244 
throw
 
√w
 
	`NoAssignmítEx˚±i⁄
();

246 
Kì≥rEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

247 
i
 = 0; i < 
maxTrõs
; i++) {

248 
åy
 {

249 
zk
.
	`£tD©a
(
assignmítsNode
 + '/' + 
assig√d
.
c⁄èöî
 + '/' + 
«me
, ("upd©ê" + 
∑øms
).
	`gëByãs
(), -1);

251 } 
	`ˇtch
 (
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

252 
œ°Ex˚±i⁄
 = 
e
;

255 i‡(
œ°Ex˚±i⁄
 !
nuŒ
) {

256 
throw
 
œ°Ex˚±i⁄
;

258 
	}
}

260 
¥iv©e
 
	$doDñëe
(
Såög
 
∑th
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

261 
Kì≥rEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

262 
i
 = 0; i < 
maxTrõs
; i++) {

263 
åy
 {

264 
zk
.
	`dñëe
(
∑th
, -1);

266 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

268 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

269 
œ°Ex˚±i⁄
 = 
e
;

272 
throw
 
œ°Ex˚±i⁄
;

273 
	}
}

274 
synchr⁄ized
 
public
 
	$ªmoveIn°™˚
(
Såög
 
«me
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

275 
Assig√d
 
assig√d
 = 
ö°™˚ToAssignmít
.
	`ªmove
(
«me
);

276 i‡(
assig√d
 =
nuŒ
) {

279 
assignmíts
.
	`gë
(
assig√d
.
c⁄èöî
).
	`ªmove
(
«me
);

280 
	`doDñëe
(
assignmítsNode
 + '/' + 
assig√d
.
c⁄èöî
 + '/' + 
«me
);

281 
	`doDñëe
(
ªp‹tsNode
 + '/' + 
«me
);

282 
	}
}

284 
synchr⁄ized
 
boﬁón
 
	$isAlive
(
Såög
 
«me
) {

285  
ö°™˚ToAssignmít
.
	`gë
(
«me
Ë!
nuŒ
;

286 
	}
}

288 
public
 
	$ª£tSètus
(
Såög
 
«me
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

289 
Kì≥rEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

290 
i
 = 0; i < 
maxTrõs
; i++) {

291 
åy
 {

292 
zk
.
	`dñëe
(
ªp‹tsNode
 + '/' + 
«me
, -1);

293 
œ°Ex˚±i⁄
 = 
nuŒ
;

295 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

296 
œ°Ex˚±i⁄
 = 
e
;

297 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

301 i‡(
œ°Ex˚±i⁄
 !
nuŒ
) {

302 
throw
 
œ°Ex˚±i⁄
;

304 
	}
}

306 
public
 
Såög
 
	$gëSètus
(
Såög
 
«me
, 
timeout
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

307 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

308 
byã
 
d©a
[] = 
nuŒ
;

309 
ídTime
 = 
Sy°em
.
	`cuºítTimeMûlis
(Ë+ 
timeout
;

310 
Kì≥rEx˚±i⁄
 
œ°Ex˚±i⁄
 = 
nuŒ
;

311 
i
 = 0; i < 
maxTrõs
 && 
ídTime
 > 
Sy°em
.
	`cuºítTimeMûlis
(); i++) {

312 
åy
 {

313 
d©a
 = 
zk
.
	`gëD©a
(
ªp‹tsNode
 + '/' + 
«me
, 
Ál£
, 
°©
);

314 i‡(
LOG
.
	`isDebugE«bÀd
()) {

315 
LOG
.
	`debug
("GŸ D©a: " + ((
d©a
 =
nuŒ
Ë? "nuŒ" : 
√w
 
	`Såög
(data)));

317 
œ°Ex˚±i⁄
 = 
nuŒ
;

319 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

320 
œ°Ex˚±i⁄
 = 
e
;

321 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

322 
föÆ
 
Obje˘
 
evítObj
 = 
√w
 
	`Obje˘
();

323 
	`synchr⁄ized
(
evítObj
) {

325 
Sèt
 
eSèt
 = 
zk
.
	`exi°s
(
ªp‹tsNode
 + '/' + 
«me
, 
√w
 
	`W©chî
() {

326 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

327 
	`synchr⁄ized
(
evítObj
) {

328 
evítObj
.
	`nŸifyAŒ
();

331 i‡(
eSèt
 =
nuŒ
) {

332 
evítObj
.
	`waô
(
ídTime
 - 
Sy°em
.
	`cuºítTimeMûlis
());

335 
œ°Ex˚±i⁄
 = 
e
;

338 i‡(
œ°Ex˚±i⁄
 !
nuŒ
) {

339 
throw
 
œ°Ex˚±i⁄
;

341  
√w
 
	`Såög
(
d©a
);

342 
	}
}

343 
synchr⁄ized
 
public
 
	$˛o£
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

344 
Såög
 
«me
: 
ö°™˚ToAssignmít
.
	`keySë
().
	`toAºay
(
√w
 String[0])) {

345 
åy
 {

346 
	`ªmoveIn°™˚
(
«me
);

347 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
 
e
) {

348 
e
.
	`¥ötSèckTø˚
();

351 
åy
 {

352 
	`doDñëe
(
ªadyNode
);

353 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

354 
e
.
	`¥ötSèckTø˚
();

356 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/NoAssignmentException.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
public
 cœs†
	cNoAssignmítEx˚±i⁄
 
exãnds
 
	mEx˚±i⁄
 {

22 
¥iv©e
 
föÆ
 
	m£rülVîsi⁄UID
 = 1L;

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/NoAvailableContainers.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
public
 cœs†
	cNoAvaûabÀC⁄èöîs
 
exãnds
 
	mEx˚±i⁄
 {

22 
public
 
	$NoAvaûabÀC⁄èöîs
(
Såög
 
°rög
) {

23 
	`su≥r
(
°rög
);

26 
¥iv©e
 
föÆ
 
£rülVîsi⁄UID
 = 1L;

28 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

37 ˛as†
	cQu‹umPìrIn°™˚
 
im∂emíts
 
	mIn°™˚
 {

38 
föÆ
 
¥iv©e
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umPìrIn°™˚
.
˛ass
);

39 
¥iv©e
 
föÆ
 
	msyncLimô
 = 3;

40 
¥iv©e
 
föÆ
 
	möôLimô
 = 3;

41 
¥iv©e
 
föÆ
 
	mtickTime
 = 2000;

42 
Såög
 
	m£rvîHo°P‹t
;

43 
	m£rvîId
;

44 
Rï‹ãr
 
	mr
;

45 
Qu‹umPìr
 
	m≥î
;

47 
public
 
	$£tRï‹ãr
(
Rï‹ãr
 
r
) {

48 
this
.
r
 =Ñ;

51 
I√tSockëAddªss
 
˛õ¡Addr
;

52 
I√tSockëAddªss
 
qu‹umAddr
;

53 
HashM≠
<
L⁄g
, 
Qu‹umSîvî
> 
≥îs
;

54 
Fûe
 
¢≠Dú
, 
logDú
;

56 
public
 
	$Qu‹umPìrIn°™˚
() {

57 
åy
 {

58 
Fûe
 
tmpFûe
 = Fûe.
	`¸óãTempFûe
("test", ".dir");

59 
Fûe
 
tmpDú
 = 
tmpFûe
.
	`gëP¨ítFûe
();

60 
tmpFûe
.
	`dñëe
();

61 
Fûe
 
zkDús
 = 
√w
 
	`Fûe
(
tmpDú
, "zktmp.cfg");

62 
logDú
 = 
tmpDú
;

63 
¢≠Dú
 = 
tmpDú
;

64 
Pr›îtõs
 
p
;

65 i‡(
zkDús
.
	`exi°s
()) {

66 
p
 = 
√w
 
	`Pr›îtõs
();

67 
p
.
	`lﬂd
(
√w
 
	`FûeI≈utSåóm
(
zkDús
));

69 
p
 = 
Sy°em
.
	`gëPr›îtõs
();

71 
logDú
 = 
√w
 
	`Fûe
(
p
.
	`gëPr›îty
("logDú", 
tmpDú
.
	`gëAbsﬁuãP©h
()));

72 
¢≠Dú
 = 
√w
 
	`Fûe
(
p
.
	`gëPr›îty
("¢≠Dú", 
tmpDú
.
	`gëAbsﬁuãP©h
()));

73 
logDú
 = 
Fûe
.
	`¸óãTempFûe
("zktst", ".dir",ÜogDir);

74 
logDú
.
	`dñëe
();

75 
logDú
.
	`mkdús
();

76 
¢≠Dú
 = 
Fûe
.
	`¸óãTempFûe
("zktst", ".dir", snapDir);

77 
¢≠Dú
.
	`dñëe
();

78 
¢≠Dú
.
	`mkdús
();

79 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

80 
e
.
	`¥ötSèckTø˚
();

82 
	}
}

84 
public
 
	$c⁄figuª
(
Såög
 
∑øms
) {

85 i‡(
˛õ¡Addr
 =
nuŒ
) {

86 
Såög
 
∑πs
[] = 
∑øms
.
	`•lô
(" ");

89 
£rvîId
 = 
I¡egî
.
	`∑r£I¡
(
∑πs
[0]);

90 i‡(
LOG
.
	`isDebugE«bÀd
()) {

91 
LOG
.
	`öfo
("Sëtög u∞£rvî " + 
£rvîId
);

93 i‡(
∑πs
.
Àngth
 > 1 &&Ö¨ts[1].
	`equÆs
("false")) {

94 
Sy°em
.
	`£tPr›îty
("zookeeper.leaderServes", "no");

96 
Sy°em
.
	`£tPr›îty
("zookeeper.leaderServes", "yes");

99 
åy
 {

100 
SîvîSockë
 
ss
 = 
√w
 
	`SîvîSockë
(0, 1, 
I√tAddªss
.
	`gëLoˇlHo°
());

101 
˛õ¡Addr
 = (
I√tSockëAddªss
Ë
ss
.
	`gëLoˇlSockëAddªss
();

102 
ss
.
	`˛o£
();

103 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

104 
e
.
	`¥ötSèckTø˚
();

106 
åy
 {

107 
SîvîSockë
 
ss
 = 
√w
 
	`SîvîSockë
(0, 1, 
I√tAddªss
.
	`gëLoˇlHo°
());

108 
qu‹umAddr
 = (
I√tSockëAddªss
Ë
ss
.
	`gëLoˇlSockëAddªss
();

109 
ss
.
	`˛o£
();

110 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {

111 
e
.
	`¥ötSèckTø˚
();

113 
Såög
 
ªp‹t
 = 
˛õ¡Addr
.
	`gëHo°Name
(Ë+ ':' + clõ¡Addr.
	`gëP‹t
() +

114 ',' + 
qu‹umAddr
.
	`gëHo°Name
(Ë+ ':' + qu‹umAddr.
	`gëP‹t
();

115 
åy
 {

116 i‡(
LOG
.
	`isDebugE«bÀd
()) {

117 
LOG
.
	`debug
("Rï‹tög " + 
ªp‹t
);

119 
r
.
	`ªp‹t
(
ªp‹t
);

120 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

121 
e
.
	`¥ötSèckTø˚
();

125 
•a˚Index
 = 
∑øms
.
	`ödexOf
(' ');

126 i‡(
•a˚Index
 == -1) {

127 
LOG
.
	`w¨n
("lookög f‹ ho°:p‹t,... sèπ|°›, buàfound " + 
∑øms
);

130 
Såög
 
qu‹umS≥cs
 = 
∑øms
.
	`sub°rög
(0, 
•a˚Index
);

131 
Såög
 
cmd
 = 
∑øms
.
	`sub°rög
(
•a˚Index
+1);

132 i‡(
LOG
.
	`isDebugE«bÀd
()) {

133 
LOG
.
	`debug
("Ru¬ög comm™d: " + 
cmd
);

135 i‡(!
cmd
.
	`equÆs
("start")) {

136 i‡(
≥î
 !
nuŒ
) {

137 
≥î
.
	`shutdown
();

139 
≥î
 = 
nuŒ
;

140 
åy
 {

141 
i
 = 0; i < 5; i++) {

142 
Thªad
.
	`¶ìp
(500);

143 
åy
 {

145 
√w
 
	`Sockë
("127.0.0.1", 
˛õ¡Addr
.
	`gëP‹t
()).
	`˛o£
();

146 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) { ; }

148 
r
.
	`ªp‹t
("stopped");

149 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

150 
LOG
.
	`îr‹
("Unh™dÀdÉº‹", 
e
);

154 
Såög
 
∑πs
[] = 
qu‹umS≥cs
.
	`•lô
(",");

155 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>();

156 
i
 = 0; i < 
∑πs
.
Àngth
; i++) {

157 
Såög
 
sub∑πs
[] = 
∑πs
[
i
].
	`•lô
(":");

158 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
), 
√w
 
	`Qu‹umSîvî
(i,Çew 
	`I√tSockëAddªss
(
sub∑πs
[0], 
I¡egî
.
	`∑r£I¡
(subparts[1]))));

160 
åy
 {

161 i‡(
LOG
.
	`isDebugE«bÀd
()) {

162 
LOG
.
	`debug
("Sèπög qu‹umPì∏" + 
£rvîId
 + " o¿p‹à" + 
˛õ¡Addr
.
	`gëP‹t
());

164 i‡(
≥î
 !
nuŒ
) {

165 
LOG
.
	`w¨n
("Pì∏" + 
£rvîId
 + "álready started");

168 
Sy°em
.
îr
.
	`¥öén
("S«pDú = " + 
¢≠Dú
 + " LogDú = " + 
logDú
);

169 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
¢≠Dú
, 
logDú
, 
˛õ¡Addr
.
	`gëP‹t
(), 0, 
£rvîId
, 
tickTime
, 
öôLimô
, 
syncLimô
);

170 
≥î
.
	`°¨t
();

171 
i
 = 0; i < 5; i++) {

172 
Thªad
.
	`¶ìp
(500);

173 
åy
 {

175 
√w
 
	`Sockë
("127.0.0.1", 
˛õ¡Addr
.
	`gëP‹t
()).
	`˛o£
();

177 } 
	`ˇtch
(
IOEx˚±i⁄
 
e
) {}

179 
r
.
	`ªp‹t
("started");

180 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

181 
LOG
.
	`îr‹
("Unh™dÀdÉx˚±i⁄", 
e
);

184 
	}
}

186 
public
 
	$°¨t
() {

187 
	}
}

189 
¥iv©e
 
	$ªcursiveDñëe
(
Fûe
 
dú
) {

190 i‡(!
dú
.
	`isDúe˘‹y
()) {

191 
dú
.
	`dñëe
();

194 
Fûe
 
f
: 
dú
.
	`li°Fûes
()) {

195 
	`ªcursiveDñëe
(
f
);

197 
dú
.
	`dñëe
();

198 
	}
}

200 
public
 
	$°›
() {

201 i‡(
LOG
.
	`isDebugE«bÀd
()) {

202 
LOG
.
	`debug
("St›pögÖì∏" + 
£rvîId
);

204 i‡(
≥î
 !
nuŒ
) {

205 
≥î
.
	`shutdown
();

207 i‡(
logDú
 !
nuŒ
) {

208 
	`ªcursiveDñëe
(
logDú
);

210 i‡(
¢≠Dú
 !
nuŒ
) {

211 
	`ªcursiveDñëe
(
¢≠Dú
);

213 
	}
}

225 
public
 
	gSåög
[] 
	$¸óãSîvî
(
In°™˚M™agî
 
im
, 
i
Ë
throws
 
NoAvaûabÀC⁄èöîs
, 
Du∂iˇãNameEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

226  
	`¸óãSîvî
(
im
, 
i
, 
åue
);

227 
	}
}

240 
public
 
	gSåög
[] 
	$¸óãSîvî
(
In°™˚M™agî
 
im
, 
i
, 
boﬁón
 
ÀadîSîves
Ë
throws
 
NoAvaûabÀC⁄èöîs
, 
Du∂iˇãNameEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

241 
im
.
	`assignIn°™˚
("£rvî"+
i
, 
Qu‹umPìrIn°™˚
.
˛ass
, 
I¡egî
.
	`toSåög
(iË+ " " + 
ÀadîSîves
, 50);

242  
im
.
	`gëSètus
("£rvî"+
i
, 3000).
	`•lô
(",");

244 
	}
}

255 
public
 
	$°¨tIn°™˚
(
In°™˚M™agî
 
im
, 
Såög
 
qu‹umHo°P‹t
, 
ödex
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
NoAssignmítEx˚±i⁄
 {

256 
im
.
	`ª£tSètus
("£rvî" + 
ödex
);

257 
im
.
	`ªc⁄figuªIn°™˚
("£rvî"+
ödex
, 
qu‹umHo°P‹t
 + " start");

258 
im
.
	`gëSètus
("£rvî" + 
ödex
, 5000);

259 
	}
}

269 
public
 
	$°›In°™˚
(
In°™˚M™agî
 
im
, 
ödex
Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
NoAssignmítEx˚±i⁄
 {

270 
im
.
	`ª£tSètus
("£rvî" + 
ödex
);

271 
im
.
	`ªc⁄figuªIn°™˚
("£rvî"+
ödex
, 
I¡egî
.
	`toSåög
(index) + " stop");

272 
im
.
	`gëSètus
("£rvî" + 
ödex
, 3000);

274 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/SimpleClient.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

37 
public
 
˛ass
 
Sim∂eClõ¡
 
im∂emíts
 
	gIn°™˚
, 
	gW©chî
, 
	gAsyncCÆlback
.
	gD©aCÆlback
, 
	gSåögCÆlback
, 
	gSètCÆlback
 {

38 
¥iv©e
 
föÆ
 
	g£rülVîsi⁄UID
 = 1L;

39 
Såög
 
	gho°P‹t
;

40 
ZooKì≥r
 
	gzk
;

41 
å™sõ¡
 
	gödex
;

42 
å™sõ¡
 
Såög
 
	gmyP©h
;

43 
byã
 
	gd©a
[];

44 
boﬁón
 
	g¸óãdEphemîÆ
;

45 
public
 
c⁄figuª
(
Såög
 
∑øms
) {

46 
Såög
 
	g∑πs
[] = 
∑øms
.
•lô
(" ");

47 
	gho°P‹t
 = 
∑πs
[1];

48 
	gthis
.
	gödex
 = 
I¡egî
.
∑r£I¡
(
∑πs
[0]);

49 
	gmyP©h
 = "/sim∂eCa£/" + 
ödex
;

52 
public
 
°¨t
() {

53 
	gåy
 {

54 
	gzk
 = 
√w
 
ZooKì≥r
(
ho°P‹t
, 15000, 
this
);

55 
	gzk
.
gëD©a
("/sim∂eCa£", 
åue
, 
this
, 
nuŒ
);

56 
	gr
.
ªp‹t
("Clõ¡ " + 
ödex
 + " c⁄√˘ögÅÿ" + 
ho°P‹t
);

57 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

58 
	ge
.
¥ötSèckTø˚
();

62 
public
 
°›
() {

63 
	gåy
 {

64 i‡(
	gzk
 !
nuŒ
) {

65 
zk
.
˛o£
();

67 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

68 
	ge
.
¥ötSèckTø˚
();

71 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

72 i‡(
	gevít
.
gëP©h
(Ë!
nuŒ
 && 
evít
.gëP©h().
equÆs
("/simpleCase")) {

73 
zk
.
gëD©a
("/sim∂eCa£", 
åue
, 
this
, 
nuŒ
);

77 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

78 
Sèt
 
°©
) {

79 i‡(
	grc
 != 0) {

80 
zk
.
gëD©a
("/sim∂eCa£", 
åue
, 
this
, 
nuŒ
);

82 
	gthis
.
	gd©a
 = 
d©a
;

83 
Såög
 
	gc⁄ã¡
 = 
√w
 Såög(
d©a
);

84 i‡(
	gc⁄ã¡
.
equÆs
("die")) {

85 
	gthis
.
°›
();

88 i‡(!
	g¸óãdEphemîÆ
) {

89 
	gzk
.
¸óã
(
myP©h
, 
d©a
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
, 
this
, 
nuŒ
);

90 
	g¸óãdEphemîÆ
 = 
åue
;

92 
	gzk
.
£tD©a
(
myP©h
, 
d©a
, -1, 
this
, 
nuŒ
);

97 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

98 i‡(
	grc
 != 0) {

99 
zk
.
¸óã
(
myP©h
, 
d©a
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
, 
this
, 
nuŒ
);

102 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

103 i‡(
	grc
 != 0) {

104 
zk
.
£tD©a
(
myP©h
, 
d©a
, -1, 
this
, 
nuŒ
);

107 @
Ovîride


108 
public
 
Såög
 
toSåög
() {

109  
	gSim∂eClõ¡
.
	g˛ass
.
gëName
(Ë+ "[" + 
	gödex
 + "] usög " + 
	gho°P‹t
;

112 
Rï‹ãr
 
	gr
;

113 
public
 
£tRï‹ãr
(
Rï‹ãr
 
r
) {

114 
	gthis
.
	gr
 = 
r
;

	@/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/SimpleSysTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gsy°em
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gC⁄√˘i⁄LossEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

42 
public
 cœs†
	cSim∂eSysTe°
 
exãnds
 
Ba£SysTe°
 
im∂emíts
 
	mW©chî
 {

43 
	mmaxTrõs
 = 10;

44 
boﬁón
 
	mc⁄√˘ed
;

45 
föÆ
 
¥iv©e
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sim∂eSysTe°
.
˛ass
);

47 
synchr⁄ized
 
¥iv©e
 
boﬁón
 
	$waôF‹C⁄√˘
(
ZooKì≥r
 
zk
, 
timeout
Ë
throws
 
I¡îru±edEx˚±i⁄
 {

48 
c⁄√˘ed
 = (
zk
.
	`gëSèã
(Ë=
Sèãs
.
CONNECTED
);

49 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
(Ë+ 
timeout
;

50 !
c⁄√˘ed
 && 
íd
 > 
Sy°em
.
	`cuºítTimeMûlis
()) {

51 
	`waô
(
timeout
);

52 
c⁄√˘ed
 = (
zk
.
	`gëSèã
(Ë=
Sèãs
.
CONNECTED
);

54  
c⁄√˘ed
;

67 @
Te°


68 
public
 
	$ã°Sim∂eCa£
(Ë
throws
 
Ex˚±i⁄
 {

69 
	`c⁄figuªSîvîs
(
£rvîCou¡
);

70 
	`c⁄figuªClõ¡s
(
˛õ¡Cou¡
, 
Sim∂eClõ¡
.
˛ass
, 
	`gëHo°P‹t
());

71 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

72 
	`°¨tSîvîs
();

73 
LOG
.
	`debug
("C⁄√˘ögÅÿ" + 
	`gëHo°P‹t
());

74 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
	`gëHo°P‹t
(), 15000, 
this
);

75 
	`waôF‹C⁄√˘
(
zk
, 10000);

76 
zk
.
	`¸óã
("/sim∂eCa£", "‹ig".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

77 
	`°¨tClõ¡s
();

80 
i
 = 0; i < 
	`gëClõ¡Cou¡
(); i++) {

81 
j
 = 0; j < 
maxTrõs
; j++) {

82 
åy
 {

83 
byã
 
b
[] = 
zk
.
	`gëD©a
("/sim∂eCa£/" + 
i
, 
Ál£
, 
°©
);

84 
	`as£πEquÆs
("‹ig", 
√w
 
	`Såög
(
b
));

85 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

86 i‡(
j
+1 =
maxTrõs
) {

87 
	`Áû
("MaxÅrõ†ex˚eded o¿˛õ¡ " + 
i
);

89 
Thªad
.
	`¶ìp
(1000);

96 
i
 = 0; i < 
	`gëSîvîCou¡
(); i++) {

97 
	`°›Sîvî
(
i
);

98 i‡(
i
+1 > 
	`gëSîvîCou¡
()/2) {

99 
	`°¨tSîvî
(
i
);

100 } i‡(
i
+1 =
	`gëSîvîCou¡
()/2) {

101 
	`as£πTrue
("C⁄√˘i⁄ didn'àªcovî", 
	`waôF‹C⁄√˘
(
zk
, 10000));

102 
åy
 {

103 
zk
.
	`£tD©a
("/sim∂eCa£", "√w".
	`gëByãs
(), -1);

104 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

105 
	`as£πTrue
("C⁄√˘i⁄ didn'àªcovî", 
	`waôF‹C⁄√˘
(
zk
, 10000));

106 
zk
.
	`£tD©a
("/sim∂eCa£", "√w".
	`gëByãs
(), -1);

108 
j
 = 0; j < 
i
; j++) {

109 
LOG
.
	`öfo
("Sèπög sîvî " + 
j
);

110 
	`°¨tSîvî
(
i
);

114 
Thªad
.
	`¶ìp
(100);

115 
	`as£πTrue
("Sîvî†didn'àboun˚", 
	`waôF‹C⁄√˘
(
zk
, 15000));

116 
åy
 {

117 
zk
.
	`gëD©a
("/sim∂eCa£", 
Ál£
, 
°©
);

118 } 
	`ˇtch
(
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

119 
	`as£πTrue
("Sîvî†didn'àboun˚", 
	`waôF‹C⁄√˘
(
zk
, 15000));

123 
i
 = 0; i < 
	`gëClõ¡Cou¡
(); i++) {

124 
j
 = 0; j < 
maxTrõs
; j++) {

125 
byã
 
d©a
[] = 
zk
.
	`gëD©a
("/sim∂eCa£/" + 
i
, 
Ál£
, 
°©
);

126 i‡(
√w
 
	`Såög
(
d©a
).
	`equÆs
("new")) {

129 i‡(
j
+1 =
maxTrõs
) {

130 
	`Áû
("maxÅrõ†ex˚eded f‹ " + 
i
);

132 
Thªad
.
	`¶ìp
(1000);

137 
zk
.
	`£tD©a
("/sim∂eCa£", "dõ".
	`gëByãs
(), -1);

140 
i
 = 0; i < 
	`gëClõ¡Cou¡
(); i++) {

141 
åy
 {

142 
j
 = 0; j < 
maxTrõs
; j++) {

143 
zk
.
	`gëD©a
("/sim∂eCa£/" + 
i
, 
Ál£
, 
°©
);

144 i‡(
j
+1 =
maxTrõs
) {

145 
	`Áû
("maxÅrõ†ex˚eded waôög f‹ chûd " + 
i
 + "Åo die");

147 
Thªad
.
	`¶ìp
(200);

149 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

154 
	`°›Clõ¡s
();

155 
	`°›Sîvîs
();

156 
	}
}

158 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

159 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

160 
	`synchr⁄ized
(
this
) {

161 
c⁄√˘ed
 = 
åue
;

162 
	`nŸifyAŒ
();

164 } i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
Disc⁄√˘ed
) {

165 
	`synchr⁄ized
(
this
) {

166 
c⁄√˘ed
 = 
Ál£
;

167 
	`nŸifyAŒ
();

170 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ClientReconnectTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	gmockôo
.
	gM©chîs
.
	g™yL⁄g
;

22 
imp‹t
 
	g‹g
.
	gmockôo
.
	gMockôo
.
	gmock
;

23 
imp‹t
 
	g‹g
.
	gmockôo
.
	gMockôo
.
	gwhí
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

27 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

31 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

32 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gHo°Providî
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

37 
public
 cœs†
	cClõ¡Rec⁄√˘Te°
 
exãnds
 
	mTe°Ca£
 {

38 
¥iv©e
 
SockëCh™√l
 
	msc
;

39 
¥iv©e
 
Cou¡DownL©ch
 
	mcou¡DownL©ch
 = 
√w
 CountDownLatch(3);

41 ˛as†
	cMockCnxn
 
exãnds
 
	mClõ¡CnxnSockëNIO
 {

42 
MockCnxn
(Ë
throws
 
	mIOEx˚±i⁄
 {

43 
su≥r
();

46 @
Ovîride


47 
ªgi°îAndC⁄√˘
(
SockëCh™√l
 
sock
, 
I√tSockëAddªss
 
addr
Ë
throws


48 
	mIOEx˚±i⁄
 {

49 
	mcou¡DownL©ch
.
cou¡Down
();

50 
throw
 
√w
 
IOEx˚±i⁄
("failedÅoÑegister");

53 @
Ovîride


54 
SockëCh™√l
 
¸óãSock
() {

55  
	msc
;

59 @
Te°


60 
public
 
	$ã°Clõ¡Rec⁄√˘
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

61 
Ho°Providî
 
ho°Providî
 = 
	`mock
(Ho°Providî.
˛ass
);

62 
	`whí
(
ho°Providî
.
	`size
()).
	`thíRëu∫
(1);

63 
I√tSockëAddªss
 
öaddr
 = 
√w
 
	`I√tSockëAddªss
(1111);

64 
	`whí
(
ho°Providî
.
	`√xt
(
	`™yL⁄g
())).
	`thíRëu∫
(
öaddr
);

65 
ZooKì≥r
 
zk
 = 
	`mock
(ZooKì≥r.
˛ass
);

66 
sc
 = 
SockëCh™√l
.
	`›í
();

68 
Clõ¡CnxnSockëNIO
 
nioCnxn
 = 
√w
 
	`MockCnxn
();

69 
Clõ¡W©chM™agî
 
w©chî
 = 
	`mock
(Clõ¡W©chM™agî.
˛ass
);

70 
Clõ¡Cnxn
 
˛õ¡Cnxn
 = 
√w
 
	`Clõ¡Cnxn
(

71 "tmp", 
ho°Providî
, 5000,

72 
zk
, 
w©chî
, 
nioCnxn
, 
Ál£
);

73 
˛õ¡Cnxn
.
	`°¨t
();

74 
cou¡DownL©ch
.
	`awaô
(5000, 
TimeUnô
.
MILLISECONDS
);

75 
As£π
.
	`as£πTrue
(
cou¡DownL©ch
.
	`gëCou¡
() == 0);

76 
˛õ¡Cnxn
.
	`˛o£
();

77 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/JUnit4ZKTestRunner.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	göã∫Æ
.
	gru¬îs
.
	g°©emíts
.
	gInvokeMëhod
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gBlockJUnô4CœssRu¬î
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gmodñ
.
	gFømew‹kMëhod
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gmodñ
.
	gInôüliz©i⁄Eº‹
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gmodñ
.
	gSèãmít
;

33 
public
 cœs†
	cJUnô4ZKTe°Ru¬î
 
exãnds
 
	mBlockJUnô4CœssRu¬î
 {

34 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
JUnô4ZKTe°Ru¬î
.
˛ass
);

36 
public
 
JUnô4ZKTe°Ru¬î
(
Cœss
<?> 
kœss
Ë
throws
 
	mInôüliz©i⁄Eº‹
 {

37 
su≥r
(
kœss
);

40 
public
 cœs†
	cLoggedInvokeMëhod
 
exãnds
 
	gInvokeMëhod
 {

41 
¥iv©e
 
Såög
 
	g«me
;

43 
public
 
LoggedInvokeMëhod
(
Fømew‹kMëhod
 
mëhod
, 
Obje˘
 
èrgë
) {

44 
su≥r
(
mëhod
, 
èrgë
);

45 
	g«me
 = 
mëhod
.
gëName
();

48 @
Ovîride


49 
public
 
evÆu©e
(Ë
throws
 
	gThrowabÀ
 {

50 
	gLOG
.
öfo
("RUNNING TEST METHOD " + 
«me
);

51 
	gåy
 {

52 
	gsu≥r
.
evÆu©e
();

53 } 
ˇtch
 (
ThrowabÀ
 
t
) {

54 
	gLOG
.
öfo
("TEST METHOD FAILED " + 
«me
, 
t
);

55 
throw
 
	gt
;

57 
	gLOG
.
öfo
("FINISHED TEST METHOD " + 
«me
);

61 @
Ovîride


62 
¥Ÿe˘ed
 
Sèãmít
 
	$mëhodInvokî
(
Fømew‹kMëhod
 
mëhod
, 
Obje˘
 
ã°
) {

63  
√w
 
	`LoggedInvokeMëhod
(
mëhod
, 
ã°
);

64 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/JaasConfiguration.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

24 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
;

25 
imp‹t
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gAµC⁄figuøti⁄E¡ry
.
	gLogöModuÀC⁄åﬁFœg
;

37 
public
 
˛ass
 
JØsC⁄figuøti⁄
 
exãnds
 
	gjavax
.
	g£curôy
.
	gauth
.
	glogö
.
	gC⁄figuøti⁄
 {

38 
¥iv©e
 
föÆ
 
	gM≠
<
	gSåög
, 
	gAµC⁄figuøti⁄E¡ry
[]> 
	g£˘i⁄s
 =

39 
√w
 
HashM≠
<
Såög
, 
	gAµC⁄figuøti⁄E¡ry
[]>();

41 
public
 
JØsC⁄figuøti⁄
() {

50 
public
 
addSe˘i⁄
(
Såög
 
«me
, Såög 
logöModuÀName
, Såög... 
¨gs
) {

51 
	gM≠
<
	gSåög
, Såög> 
	gc⁄f
 = 
√w
 
HashM≠
<
Såög
, String>();

53 
	gi
 = 0; i < 
	g¨gs
.
	gÀngth
 - 1; i += 2) {

54 
c⁄f
.
put
(
¨gs
[
i
],árgs[i + 1]);

56 
addSe˘i⁄
(
«me
, 
logöModuÀName
, 
c⁄f
);

65 
public
 
addSe˘i⁄
(
Såög
 
«me
, Såög 
logöModuÀName
, 
föÆ
 
M≠
<Såög,Såög> 
c⁄f
) {

66 
	gAµC⁄figuøti⁄E¡ry
[] 
	gíåõs
 = 
√w
 
AµC⁄figuøti⁄E¡ry
[1];

67 
	gíåõs
[0] = 
√w
 
AµC⁄figuøti⁄E¡ry
(
logöModuÀName
, 
LogöModuÀC⁄åﬁFœg
.
REQUIRED
, 
c⁄f
);

68 
	gthis
.
	g£˘i⁄s
.
put
(
«me
, 
íåõs
);

71 @
Ovîride


72 
public
 
	gAµC⁄figuøti⁄E¡ry
[] 
gëAµC⁄figuøti⁄E¡ry
(
Såög
 
≠pName
) {

73  
	g£˘i⁄s
.
gë
(
≠pName
);

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/MultiResponseTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

27 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
public
 cœs†
	cMu…iRe•⁄£Te°
 
exãnds
 
	mTe°Ca£
 {

32 
public
 
	$ã°RoundTrù
(Ë
throws
 
IOEx˚±i⁄
 {

33 
Mu…iRe•⁄£
 
ª•⁄£
 = 
√w
 
	`Mu…iRe•⁄£
();

35 
ª•⁄£
.
	`add
(
√w
 
OpResu…
.
	`CheckResu…
());

36 
ª•⁄£
.
	`add
(
√w
 
OpResu…
.
	`Cª©eResu…
("foo-bar"));

37 
ª•⁄£
.
	`add
(
√w
 
OpResu…
.
	`DñëeResu…
());

39 
Sèt
 
s
 = 
√w
 
	`Sèt
();

40 
s
.
	`£tCzxid
(546);

41 
ª•⁄£
.
	`add
(
√w
 
OpResu…
.
	`SëD©aResu…
(
s
));

43 
Mu…iRe•⁄£
 
decodedRe•⁄£
 = 
	`codeDecode
(
ª•⁄£
);

45 
	`as£πEquÆs
(
ª•⁄£
, 
decodedRe•⁄£
);

46 
	`as£πEquÆs
(
ª•⁄£
.
	`hashCode
(), 
decodedRe•⁄£
.hashCode());

49 @
Te°


50 
public
 
	$ã°Em±yRoundTrù
(Ë
throws
 
IOEx˚±i⁄
 {

51 
Mu…iRe•⁄£
 
ªsu…
 = 
√w
 
	`Mu…iRe•⁄£
();

52 
Mu…iRe•⁄£
 
decodedResu…
 = 
	`codeDecode
(
ªsu…
);

54 
	`as£πEquÆs
(
ªsu…
, 
decodedResu…
);

55 
	`as£πEquÆs
(
ªsu…
.
	`hashCode
(), 
decodedResu…
.hashCode());

56 
	}
}

58 
¥iv©e
 
Mu…iRe•⁄£
 
	$codeDecode
(
Mu…iRe•⁄£
 
ªque°
Ë
throws
 
IOEx˚±i⁄
 {

59 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

60 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

61 
ªque°
.
	`£rülize
(
bﬂ
, "result");

62 
baos
.
	`˛o£
();

63 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

64 
bb
.
	`ªwöd
();

66 
Bö¨yI≈utArchive
 
bü
 = Bö¨yI≈utArchive.
	`gëArchive
(
√w
 
	`ByãBuf„rI≈utSåóm
(
bb
));

67 
Mu…iRe•⁄£
 
decodedReque°
 = 
√w
 
	`Mu…iRe•⁄£
();

68 
decodedReque°
.
	`de£rülize
(
bü
, "result");

69  
decodedReque°
;

70 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

27 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

31 
public
 cœs†
	cMu…iTønß˘i⁄Rec‹dTe°
 
exãnds
 
	mTe°Ca£
 {

32 @
Te°


33 
public
 
	$ã°RoundTrù
(Ë
throws
 
IOEx˚±i⁄
 {

34 
Mu…iTønß˘i⁄Rec‹d
 
ªque°
 = 
√w
 
	`Mu…iTønß˘i⁄Rec‹d
();

35 
ªque°
.
	`add
(
Op
.
	`check
("check", 1));

36 
ªque°
.
	`add
(
Op
.
	`¸óã
("¸óã", "¸óã d©a".
	`gëByãs
(), 
ZooDefs
.
Ids
.
CREATOR_ALL_ACL
, ZooDefs.
Pîms
.
ALL
));

37 
ªque°
.
	`add
(
Op
.
	`dñëe
("delete", 17));

38 
ªque°
.
	`add
(
Op
.
	`£tD©a
("£tD©a", "£àd©a".
	`gëByãs
(), 19));

40 
Mu…iTønß˘i⁄Rec‹d
 
decodedReque°
 = 
	`codeDecode
(
ªque°
);

42 
	`as£πEquÆs
(
ªque°
, 
decodedReque°
);

43 
	`as£πEquÆs
(
ªque°
.
	`hashCode
(), 
decodedReque°
.hashCode());

46 @
Te°


47 
public
 
	$ã°Em±yRoundTrù
(Ë
throws
 
IOEx˚±i⁄
 {

48 
Mu…iTønß˘i⁄Rec‹d
 
ªque°
 = 
√w
 
	`Mu…iTønß˘i⁄Rec‹d
();

49 
Mu…iTønß˘i⁄Rec‹d
 
decodedReque°
 = 
	`codeDecode
(
ªque°
);

51 
	`as£πEquÆs
(
ªque°
, 
decodedReque°
);

52 
	`as£πEquÆs
(
ªque°
.
	`hashCode
(), 
decodedReque°
.hashCode());

53 
	}
}

55 
¥iv©e
 
Mu…iTønß˘i⁄Rec‹d
 
	$codeDecode
(
Mu…iTønß˘i⁄Rec‹d
 
ªque°
Ë
throws
 
IOEx˚±i⁄
 {

56 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

57 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

58 
ªque°
.
	`£rülize
(
bﬂ
, "request");

59 
baos
.
	`˛o£
();

60 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

61 
bb
.
	`ªwöd
();

63 
Bö¨yI≈utArchive
 
bü
 = Bö¨yI≈utArchive.
	`gëArchive
(
√w
 
	`ByãBuf„rI≈utSåóm
(
bb
));

64 
Mu…iTønß˘i⁄Rec‹d
 
decodedReque°
 = 
√w
 
	`Mu…iTønß˘i⁄Rec‹d
();

65 
decodedReque°
.
	`de£rülize
(
bü
, "request");

66  
decodedReque°
;

67 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/PortAssignment.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

25 
public
 cœs†
	cP‹tAssignmít
 {

26 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
P‹tAssignmít
.
˛ass
);

28 
¥iv©e
 
	m√xtP‹t
 = 11221;

31 
public
 
synchr⁄ized
 
	$unique
() {

32 
LOG
.
	`öfo
("assignögÖ‹à" + 
√xtP‹t
);

33  
√xtP‹t
++;

35 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/TestableZooKeeper.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
public
 cœs†
	cTe°abÀZooKì≥r
 
exãnds
 
	mZooKì≥r
 {

27 
public
 
	$Te°abÀZooKì≥r
(
Såög
 
ho°
, 
£ssi⁄Timeout
,

28 
W©chî
 
w©chî
Ë
throws
 
IOEx˚±i⁄
 {

29 
	`su≥r
(
ho°
, 
£ssi⁄Timeout
, 
w©chî
);

32 @
Ovîride


33 
public
 
Li°
<
Såög
> 
	$gëChûdW©ches
() {

34  
su≥r
.
	`gëChûdW©ches
();

35 
	}
}

38 @
Ovîride


39 
public
 
	gLi°
<
	gSåög
> 
	$gëD©aW©ches
() {

40  
su≥r
.
	`gëD©aW©ches
();

41 
	}
}

44 @
Ovîride


45 
public
 
	gLi°
<
	gSåög
> 
	$gëExi°W©ches
() {

46  
su≥r
.
	`gëExi°W©ches
();

47 
	}
}

53 
public
 
	$ã°abÀC⁄∆oss
(Ë
throws
 
IOEx˚±i⁄
 {

54 
	`synchr⁄ized
(
˙xn
) {

55 
˙xn
.
£ndThªad
.
	`ã°abÀClo£Sockë
();

57 
	}
}

64 
public
 
	$∑u£Cnxn
(
föÆ
 
ms
) {

65 
√w
 
	`Thªad
() {

66 
public
 
	`run
() {

67 
	`synchr⁄ized
(
˙xn
) {

68 
åy
 {

69 
åy
 {

70 
˙xn
.
£ndThªad
.
	`ã°abÀClo£Sockë
();

71 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

72 
e
.
	`¥ötSèckTø˚
();

74 
Thªad
.
	`¶ìp
(
ms
);

75 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

79 }.
	`°¨t
();

80 
	}
}

82 
public
 
boﬁón
 
	$ã°abÀWaôF‹Shutdown
(
waô
)

83 
throws
 
I¡îru±edEx˚±i⁄


85  
su≥r
.
	`ã°abÀWaôF‹Shutdown
(
waô
);

86 
	}
}

88 
public
 
SockëAddªss
 
	$ã°abÀLoˇlSockëAddªss
() {

89  
su≥r
.
	`ã°abÀLoˇlSockëAddªss
();

90 
	}
}

92 
public
 
SockëAddªss
 
	$ã°abÀRemŸeSockëAddªss
() {

93  
su≥r
.
	`ã°abÀRemŸeSockëAddªss
();

94 
	}
}

99 
public
 
	$ã°abÀLa°Zxid
() {

100  
˙xn
.
	`gëLa°Zxid
();

101 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/VerGenTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gvîsi⁄
.
	gutû
.
	gVîGí
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gP¨amëîized
.
	gP¨amëîs
;

38 @
	$RunWôh
(
P¨amëîized
.
˛ass
)

39 
public
 cœs†
	cVîGíTe°
 
exãnds
 
ZKTe°Ca£
 {

40 @
P¨amëîs


41 
public
 
CﬁÀ˘i⁄
<
Obje˘
[]> 
	$d©a
() {

42  
Aºays
.
	`asLi°
(
√w
 
Obje˘
[][] {

43 {"1.2.3", 
√w
 
Obje˘
[] {1, 2, 3, 
nuŒ
}},

44 {"1.2.3-dev", 
√w
 
Obje˘
[] {1, 2, 3, "dev"}},

45 {"1.2.3-SNAPSHOT", 
√w
 
Obje˘
[] {1, 2, 3, "SNAPSHOT"}},

46 {"1.2.3-foo-b¨+123", 
√w
 
Obje˘
[] {1, 2, 3, "foo-bar+123"}}

50 
¥iv©e
 
Såög
 
öput
;

52 
¥iv©e
 
Obje˘
[] 
ex≥˘ed
;

54 
public
 
	$VîGíTe°
(
Såög
 
öput
, 
Obje˘
[] 
ex≥˘ed
) {

55 
this
.
öput
 = input;

56 
this
.
ex≥˘ed
 =Éxpected;

57 
	}
}

59 @
Te°


60 
public
 
	$ã°P¨£r
() {

61 
VîGí
.
Vîsi⁄
 
v
 = VîGí.
	`∑r£Vîsi⁄Såög
(
öput
);

62 
As£π
.
	`as£πEquÆs
(
ex≥˘ed
[0], 
v
.
maj
);

63 
As£π
.
	`as£πEquÆs
(
ex≥˘ed
[1], 
v
.
mö
);

64 
As£π
.
	`as£πEquÆs
(
ex≥˘ed
[2], 
v
.
mi¸o
);

65 
As£π
.
	`as£πEquÆs
(
ex≥˘ed
[3], 
v
.
quÆifõr
);

66 
	}
}

68 @
Te°


69 
public
 
	$ã°GíFûe
(Ë
throws
 
Ex˚±i⁄
 {

70 
VîGí
.
Vîsi⁄
 
v
 = VîGí.
	`∑r£Vîsi⁄Såög
(
öput
);

71 
Fûe
 
ouçutDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

72 
VîGí
.
	`gíî©eFûe
(
ouçutDú
, 
v
, 1, "Nov1");

73 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
ouçutDú
);

74 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ZKTestCase.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gRuÀ
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gruÀs
.
	gMëhodRuÀ
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gruÀs
.
	gTe°W©chm™
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gmodñ
.
	gFømew‹kMëhod
;

35 @
	$RunWôh
(
JUnô4ZKTe°Ru¬î
.
˛ass
)

36 
public
 cœs†
	cZKTe°Ca£
 {

37 
¥iv©e
 
föÆ
 
Loggî
 
LOG
 = 
LoggîFa˘‹y
.
	`gëLoggî
(
ZKTe°Ca£
.
˛ass
);

39 
¥iv©e
 
Såög
 
ã°Name
;

41 
¥Ÿe˘ed
 
Såög
 
	$gëTe°Name
() {

42  
ã°Name
;

45 @
RuÀ


46 
public
 
MëhodRuÀ
 
w©chm™
 = 
√w
 
	$Te°W©chm™
() {

47 @
Ovîride


48 
public
 
	`°¨tög
(
Fømew‹kMëhod
 
mëhod
) {

49 
ã°Name
 = 
mëhod
.
	`gëName
();

50 
LOG
.
	`öfo
("STARTING " + 
ã°Name
);

53 @
Ovîride


54 
public
 
	`föished
(
Fømew‹kMëhod
 
mëhod
) {

55 
LOG
.
	`öfo
("FINISHED " + 
ã°Name
);

58 @
Ovîride


59 
public
 
	`suc˚eded
(
Fømew‹kMëhod
 
mëhod
) {

60 
LOG
.
	`öfo
("SUCCEEDED " + 
ã°Name
);

63 @
Ovîride


64 
public
 
	`Áûed
(
ThrowabÀ
 
e
, 
Fømew‹kMëhod
 
mëhod
) {

65 
LOG
.
	`öfo
("FAILED " + 
ã°Name
, 
e
);

68 
	}
};

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ZooKeeperTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
;

20 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.*;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

37 
public
 cœs†
	cZooKì≥rTe°
 
exãnds
 
	mClõ¡Ba£
 {

39 @
Te°


40 
public
 
	$ã°DñëeRecursive
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

41 
Kì≥rEx˚±i⁄
 {

42 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

44 
zk
.
	`£tD©a
("/", "some".
	`gëByãs
(), -1);

45 
zk
.
	`¸óã
("/a", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

46 
Cª©eMode
.
PERSISTENT
);

48 
zk
.
	`¸óã
("/a/b", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

49 
Cª©eMode
.
PERSISTENT
);

51 
zk
.
	`¸óã
("/a/b/v", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

52 
Cª©eMode
.
PERSISTENT
);

54 
zk
.
	`¸óã
("/a/b/v/1", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

55 
Cª©eMode
.
PERSISTENT
);

57 
zk
.
	`¸óã
("/a/c", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

58 
Cª©eMode
.
PERSISTENT
);

60 
zk
.
	`¸óã
("/a/c/v", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

61 
Cª©eMode
.
PERSISTENT
);

63 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
("/a", 
Ál£
);

65 
As£π
.
	`as£πEquÆs
("2 chûdª¿- b & c should bê¥e£¡ ", 
chûdªn


66 .
	`size
(), 2);

67 
As£π
.
	`as£πTrue
(
chûdªn
.
	`c⁄èös
("b"));

68 
As£π
.
	`as£πTrue
(
chûdªn
.
	`c⁄èös
("c"));

70 
ZKUtû
.
	`dñëeRecursive
(
zk
, "/a");

71 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/a", 
nuŒ
));

74 @
Te°


75 
public
 
	$ã°DñëeRecursiveAsync
(Ë
throws
 
IOEx˚±i⁄
,

76 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

77 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

79 
zk
.
	`£tD©a
("/", "some".
	`gëByãs
(), -1);

80 
zk
.
	`¸óã
("/a", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

81 
Cª©eMode
.
PERSISTENT
);

83 
zk
.
	`¸óã
("/a/b", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

84 
Cª©eMode
.
PERSISTENT
);

86 
zk
.
	`¸óã
("/a/b/v", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

87 
Cª©eMode
.
PERSISTENT
);

89 
zk
.
	`¸óã
("/a/b/v/1", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

90 
Cª©eMode
.
PERSISTENT
);

92 
zk
.
	`¸óã
("/a/c", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

93 
Cª©eMode
.
PERSISTENT
);

95 
zk
.
	`¸óã
("/a/c/v", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

96 
Cª©eMode
.
PERSISTENT
);

98 
i
 = 0; i < 50; ++i) {

99 
zk
.
	`¸óã
("/a/c/" + 
i
, "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

100 
Cª©eMode
.
PERSISTENT
);

102 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
("/a", 
Ál£
);

104 
As£π
.
	`as£πEquÆs
("2 chûdª¿- b & c should bê¥e£¡ ", 
chûdªn


105 .
	`size
(), 2);

106 
As£π
.
	`as£πTrue
(
chûdªn
.
	`c⁄èös
("b"));

107 
As£π
.
	`as£πTrue
(
chûdªn
.
	`c⁄èös
("c"));

109 
VoidCÆlback
 
cb
 = 
√w
 
	`VoidCÆlback
() {

111 @
Ovîride


112 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

113 
	`synchr⁄ized
 (
˘x
) {

114 ((
AtomicI¡egî
Ë
˘x
).
	`£t
(4);

115 
˘x
.
	`nŸify
();

120 
föÆ
 
AtomicI¡egî
 
˘x
 = 
√w
 
	`AtomicI¡egî
(3);

121 
ZKUtû
.
	`dñëeRecursive
(
zk
, "/a", 
cb
, 
˘x
);

122 
	`synchr⁄ized
 (
˘x
) {

123 
˘x
.
	`waô
();

125 
As£π
.
	`as£πEquÆs
(4, ((
AtomicI¡egî
Ë
˘x
).
	`gë
());

126 
	}
}

128 @
Te°


129 
public
 
	$ã°SètWhíP©hD€sNŸExi°
(Ë
throws
 
IOEx˚±i⁄
,

130 
I¡îru±edEx˚±i⁄
 {

131 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

132 
ZooKì≥rMaö
 
maö
 = 
√w
 
	`ZooKì≥rMaö
(
zk
);

133 
Såög
 
cmd°rög
 = "stat /invalidPath";

134 
maö
.
˛
.
	`∑r£Comm™d
(
cmd°rög
);

135 
åy
 {

136 
maö
.
	`¥o˚ssZKCmd
(maö.
˛
);

137 
As£π
.
	`Áû
("As Node doesÇotÉxist, command should fail byÅhrowing No Node Exception.");

138 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

139 
As£π
.
	`as£πEquÆs
("Kì≥rEº‹CodêNoNodêf‹ /övÆidP©h", 
e
.
	`gëMesßge
());

141 
	}
}

143 @
Te°


144 
public
 
	$ã°P¨£WôhExåaS∑˚s
(Ë
throws
 
Ex˚±i⁄
 {

145 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

146 
ZooKì≥rMaö
 
zkMaö
 = 
√w
 
	`ZooKì≥rMaö
(
zk
);

147 
Såög
 
cmd°rög
 = "Üs / ";

148 
zkMaö
.
˛
.
	`∑r£Comm™d
(
cmd°rög
);

149 
As£π
.
	`as£πEquÆs
("S∑˚†Æsÿc⁄sidîedá†ch¨a˘îs", 
zkMaö
.
˛
.
	`gëNumArgumíts
(), 2);

150 
As£π
.
	`as£πEquÆs
("l†i†nŸÅakíá†fú°árgumít", 
zkMaö
.
˛
.
	`gëCmdArgumít
(0), "ls");

151 
As£π
.
	`as£πEquÆs
("/ i†nŸÅakíá†£c⁄dárgumít", 
zkMaö
.
˛
.
	`gëCmdArgumít
(1), "/");

152 
	}
}

154 @
Te°


155 
public
 
	$ã°CheckInvÆidA˛s
(Ë
throws
 
Ex˚±i⁄
 {

156 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

157 
ZooKì≥rMaö
 
zkMaö
 = 
√w
 
	`ZooKì≥rMaö
(
zk
);

158 
Såög
 
cmd°rög
 = "create -s -e /node data ip:scheme:gggsd";

159 
åy
{

160 
zkMaö
.
	`execuãLöe
(
cmd°rög
);

161 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
 
e
){

162 
	`Áû
("For Invalid ACls shouldÇotÅhrowÉxception");

164 
	}
}

166 @
Te°


167 
public
 
	$ã°DñëeWôhInvÆidVîsi⁄No
(Ë
throws
 
Ex˚±i⁄
 {

168 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

169 
ZooKì≥rMaö
 
zkMaö
 = 
√w
 
	`ZooKì≥rMaö
(
zk
);

170 
Såög
 
cmd°rög
 = "create -s -e /node1 data ";

171 
Såög
 
cmd°rög1
 = "delete /node1 2";

172 
zkMaö
.
	`execuãLöe
(
cmd°rög
);

173 
åy
{

174 
zkMaö
.
	`execuãLöe
(
cmd°rög1
);

176 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
BadVîsi⁄Ex˚±i⁄
 
e
){

177 
	`Áû
("For Invalid dataversionÇumber shouldÇotÅhrowÉxception");

179 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/CRCTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

28 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gC⁄cuºítHashM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gAdÀr32
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gzù
.
	gCheckedI≈utSåóm
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeS«p
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gTxnLog
.
	gTxnIãøt‹
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

52 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

53 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

55 
public
 cœs†
	cCRCTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

56 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
CRCTe°
.
˛ass
);

58 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 =

59 "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

60 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	m°¨tSig«l
;

68 
¥iv©e
 
	$c‹ru±Fûe
(
Fûe
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

70 
R™domAc˚ssFûe
 
øf
 = 
√w
 
	`R™domAc˚ssFûe
(
fûe
, "rw");

71 
byã
[] 
b
 = "mahadev".
	`gëByãs
();

72 
wrôeLí
 = 500L;

73 
øf
.
	`£ek
(
wrôeLí
);

75 
øf
.
	`wrôe
(
b
);

76 
øf
.
	`˛o£
();

80 
¥iv©e
 
boﬁón
 
	$gëCheckSum
(
FûeS«p
 
¢≠
, 
Fûe
 
¢≠Fûe
Ë
throws
 
IOEx˚±i⁄
 {

81 
D©aTªe
 
dt
 = 
√w
 
	`D©aTªe
();

82 
M≠
<
L⁄g
, 
I¡egî
> 
£ssi⁄s
 = 
√w
 
C⁄cuºítHashM≠
<Long, Integer>();

83 
I≈utSåóm
 
¢≠IS
 = 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(

84 
¢≠Fûe
));

85 
CheckedI≈utSåóm
 
¸cIn
 = 
√w
 
	`CheckedI≈utSåóm
(
¢≠IS
,Çew 
	`AdÀr32
());

86 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
¸cIn
);

87 
åy
 {

88 
¢≠
.
	`de£rülize
(
dt
, 
£ssi⁄s
, 
ü
);

89 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

94 
¢≠IS
.
	`˛o£
();

95 
¸cIn
.
	`˛o£
();

96 
throw
 
õ
;

99 
checksum
 = 
¸cIn
.
	`gëChecksum
().
	`gëVÆue
();

100 
vÆ
 = 
ü
.
	`ªadL⁄g
("val");

101 
¢≠IS
.
	`˛o£
();

102 
¸cIn
.
	`˛o£
();

103  (
vÆ
 !
checksum
);

104 
	}
}

112 @
Te°


113 
public
 
	$ã°Checksums
(Ë
throws
 
Ex˚±i⁄
 {

114 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

115 
Clõ¡Ba£
.
	`£tupTe°Env
();

116 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

117 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(150);

118 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

119 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

120 
f
.
	`°¨tup
(
zks
);

121 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

122 
As£π
.
	`as£πTrue
("waiting for server being up",

123 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,
CONNECTION_TIMEOUT
));

124 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

125 
åy
 {

126 
i
 =0; i < 2000; i++) {

127 
zk
.
	`¸óã
("/¸˘e°- " + 
i
 , ("/¸˘e°- " + i).
	`gëByãs
(),

128 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

130 } 
föÆly
 {

131 
zk
.
	`˛o£
();

133 
f
.
	`shutdown
();

134 
As£π
.
	`as£πTrue
("waiting for server down",

135 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

136 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

138 
Fûe
 
vîsi⁄Dú
 = 
√w
 
	`Fûe
(
tmpDú
, "version-2");

139 
Fûe
[] 
li°
 = 
vîsi⁄Dú
.
	`li°Fûes
();

142 
Fûe
 
¢≠Fûe
 = 
nuŒ
;

143 
Fûe
 
logFûe
 = 
nuŒ
;

144 
Fûe
 
fûe
: 
li°
) {

145 
LOG
.
	`öfo
("fûêi†" + 
fûe
);

146 i‡(
fûe
.
	`gëName
().
	`°¨tsWôh
("log")) {

147 
logFûe
 = 
fûe
;

148 
	`c‹ru±Fûe
(
logFûe
);

151 
FûeTxnLog
 
Êog
 = 
√w
 
	`FûeTxnLog
(
vîsi⁄Dú
);

152 
TxnIãøt‹
 
ôr
 = 
Êog
.
	`ªad
(1);

154 
åy
 {

155 
ôr
.
	`√xt
()) {

157 
As£π
.
	`as£πTrue
(
Ál£
);

158 } 
	`ˇtch
(
IOEx˚±i⁄
 
õ
) {

159 
LOG
.
	`öfo
("¸¯c‹ru±i⁄", 
õ
);

161 
ôr
.
	`˛o£
();

163 
FûeS«p
 
¢≠
 = 
√w
 
	`FûeS«p
(
vîsi⁄Dú
);

164 
Li°
<
Fûe
> 
¢≠Fûes
 = 
¢≠
.
	`födNRe˚¡S«pshŸs
(2);

165 
¢≠Fûe
 = 
¢≠Fûes
.
	`gë
(0);

166 
	`c‹ru±Fûe
(
¢≠Fûe
);

167 
boﬁón
 
cfûe
 = 
Ál£
;

168 
åy
 {

169 
cfûe
 = 
	`gëCheckSum
(
¢≠
, 
¢≠Fûe
);

170 } 
	`ˇtch
(
IOEx˚±i⁄
 
õ
) {

174 
¢≠Fûe
 = 
¢≠Fûes
.
	`gë
(1);

175 
	`c‹ru±Fûe
(
¢≠Fûe
);

176 
cfûe
 = 
	`gëCheckSum
(
¢≠
, 
¢≠Fûe
);

178 
As£π
.
	`as£πTrue
(
cfûe
);

179 
	}
}

181 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

182 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
(Ë+ " " +Évít.
	`gëP©h
());

183 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


184 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0)

186 
°¨tSig«l
.
	`cou¡Down
();

188 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DataTreeUnitTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cD©aTªeUnôTe°
 
exãnds
 
	mZKTe°Ca£
 {

31 
D©aTªe
 
	mdt
;

33 @
Bef‹e


34 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

35 
dt
=
√w
 
	`D©aTªe
();

38 @
A·î


39 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

40 
dt
=
nuŒ
;

41 
	}
}

43 @
Te°


44 
public
 
	$ã°RoŸW©chTriggîed
(Ë
throws
 
Ex˚±i⁄
 {

45 ˛as†
	cMyW©chî
 
im∂emíts
 
W©chî
{

46 
boﬁón
 
fúed
=
Ál£
;

47 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

48 if(
evít
.
	`gëP©h
().
	`equÆs
("/"))

49 
fúed
=
åue
;

52 
MyW©chî
 
w©chî
=
√w
 
	`MyW©chî
();

54 
dt
.
	`gëChûdªn
("/", 
√w
 
	`Sèt
(), 
w©chî
);

56 
dt
.
	`¸óãNode
("/xyz", 
√w
 
byã
[0], 
nuŒ
, 0, dt.
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
()+1, 1, 1);

57 
As£π
.
	`as£πFÆ£
("RoŸÇodêw©chÇŸÅriggîed",!
w©chî
.
fúed
);

58 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DatadirCleanupManagerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©adúCÀ™upM™agî
.
	gPurgeTaskSètus
.
	gCOMPLETED
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©adúCÀ™upM™agî
.
	gPurgeTaskSètus
.
	gNOT_STARTED
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©adúCÀ™upM™agî
.
	gPurgeTaskSètus
.
	gSTARTED
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

27 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cD©adúCÀ™upM™agîTe°
 {

36 
¥iv©e
 
D©adúCÀ™upM™agî
 
	mpurgeMgr
;

37 
¥iv©e
 
Såög
 
	m¢≠Dú
;

38 
¥iv©e
 
Såög
 
	md©aLogDú
;

40 @
Bef‹e


41 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

42 
Fûe
 
d©aDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

43 
¢≠Dú
 = 
d©aDú
.
	`gëAbsﬁuãP©h
();

44 
d©aLogDú
 = 
d©aDú
.
	`gëAbsﬁuãP©h
();

47 @
Te°


48 
public
 
	$ã°PurgeTask
(Ë
throws
 
Ex˚±i⁄
 {

49 
purgeMgr
 = 
√w
 
	`D©adúCÀ™upM™agî
(
¢≠Dú
, 
d©aLogDú
, 3, 1);

50 
purgeMgr
.
	`°¨t
();

51 
As£π
.
	`as£πEquÆs
("DataÜog directory isÇot setás configured",

52 
d©aLogDú
, 
purgeMgr
.
	`gëD©aLogDú
());

53 
As£π
.
	`as£πEquÆs
("Snapshot directory isÇot setás configured",

54 
¢≠Dú
, 
purgeMgr
.
	`gëS«pDú
());

55 
As£π
.
	`as£πEquÆs
("SnapshotÑetain count isÇot setás configured",

56 3, 
purgeMgr
.
	`gëS«pRëaöCou¡
());

57 
As£π
.
	`as£πEquÆs
("Purgêèsk i†nŸ sèπed", 
STARTED
, 
purgeMgr
.
	`gëPurgeTaskSètus
());

58 
purgeMgr
.
	`shutdown
();

59 
As£π
.
	`as£πEquÆs
("Purgêèsk i†°û»ru¬ögá·î shutdown", 
COMPLETED
,

60 
purgeMgr
.
	`gëPurgeTaskSètus
());

61 
	}
}

63 @
Te°


64 
public
 
	$ã°WôhZîoPurgeI¡îvÆ
(Ë
throws
 
Ex˚±i⁄
 {

65 
purgeMgr
 = 
√w
 
	`D©adúCÀ™upM™agî
(
¢≠Dú
, 
d©aLogDú
, 3, 0);

66 
purgeMgr
.
	`°¨t
();

67 
As£π
.
	`as£πEquÆs
("Purgêèsk i†scheduÀd wôh zîÿpurgêöãrvÆ", 
NOT_STARTED
,

68 
purgeMgr
.
	`gëPurgeTaskSètus
());

69 
purgeMgr
.
	`shutdown
();

70 
As£π
.
	`as£πEquÆs
("Purgêèsk i†scheduÀd wôh zîÿpurgêöãrvÆ", 
NOT_STARTED
,

71 
purgeMgr
.
	`gëPurgeTaskSètus
());

72 
	}
}

74 @
Te°


75 
public
 
	$ã°WôhNeg©ivePurgeI¡îvÆ
(Ë
throws
 
Ex˚±i⁄
 {

76 
purgeMgr
 = 
√w
 
	`D©adúCÀ™upM™agî
(
¢≠Dú
, 
d©aLogDú
, 3, -1);

77 
purgeMgr
.
	`°¨t
();

78 
As£π
.
	`as£πEquÆs
("PurgeÅask is scheduled withÇegativeÖurge interval",

79 
NOT_STARTED
, 
purgeMgr
.
	`gëPurgeTaskSètus
());

80 
purgeMgr
.
	`shutdown
();

81 
As£π
.
	`as£πEquÆs
("Purgêèsk i†scheduÀd wôhÇeg©ivêpurgêöãrvÆ", 
NOT_STARTED
,

82 
purgeMgr
.
	`gëPurgeTaskSètus
());

83 
	}
}

85 @
A·î


86 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

87 i‡(
purgeMgr
 !
nuŒ
) {

88 
purgeMgr
.
	`shutdown
();

90 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cDe£rüliz©i⁄PîfTe°
 
exãnds
 
	mZKTe°Ca£
 {

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
De£rüliz©i⁄PîfTe°
.
˛ass
);

37 
¥iv©e
 
	$de£rülizeTªe
(
dïth
, 
width
, 
Àn
)

38 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

39 
Bö¨yI≈utArchive
 
ü
;

40 
cou¡
;

42 
D©aTªe
 
åì
 = 
√w
 
	`D©aTªe
();

43 
Sîüliz©i⁄PîfTe°
.
	`¸óãNodes
(
åì
, "/", 
dïth
,Åªe.
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
(), 
width
, 
√w
 
byã
[
Àn
]);

44 
cou¡
 = 
åì
.
	`gëNodeCou¡
();

46 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

47 
Bö¨yOuçutArchive
 
ﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

48 
åì
.
	`£rülize
(
ﬂ
, "test");

49 
baos
.
	`Êush
();

51 
ByãAºayI≈utSåóm
 
bais
 = 
√w
 
	`ByãAºayI≈utSåóm
(
baos
.
	`toByãAºay
());

52 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
bais
);

55 
D©aTªe
 
d£rTªe
 = 
√w
 
	`D©aTªe
();

57 
Sy°em
.
	`gc
();

58 
°¨t
 = 
Sy°em
.
	`«noTime
();

59 
d£rTªe
.
	`de£rülize
(
ü
, "test");

60 
íd
 = 
Sy°em
.
	`«noTime
();

61 
duøti⁄ms
 = (
íd
 - 
°¨t
) / 1000000L;

62 
≥∫odeus
 = ((
íd
 - 
°¨t
Ë/ 1000LË/ 
cou¡
;

64 
As£π
.
	`as£πEquÆs
(
cou¡
, 
d£rTªe
.
	`gëNodeCou¡
());

66 
LOG
.
	`öfo
("De£rülized " + 
cou¡
 + "Çode†ö " + 
duøti⁄ms


67 + " m†(" + 
≥∫odeus
 + "us/node), dïth=" + 
dïth
 + " width="

68 + 
width
 + " d©Æí=" + 
Àn
);

71 @
Te°


72 
public
 
	$ã°SögÀDe£rülize
(Ë
throws


73 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

74 
	`de£rülizeTªe
(1, 0, 20);

75 
	}
}

77 @
Te°


78 
public
 
	$ã°WideDe£rülize
(Ë
throws


79 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

80 
	`de£rülizeTªe
(2, 10000, 20);

81 
	}
}

83 @
Te°


84 
public
 
	$ã°DìpDe£rülize
(Ë
throws


85 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

86 
	`de£rülizeTªe
(400, 1, 20);

87 
	}
}

89 @
Te°


90 
public
 
	$ã°10Wide5DìpDe£rülize
(Ë
throws


91 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

92 
	`de£rülizeTªe
(5, 10, 20);

93 
	}
}

95 @
Te°


96 
public
 
	$ã°15Wide5DìpDe£rülize
(Ë
throws


97 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

98 
	`de£rülizeTªe
(5, 15, 20);

99 
	}
}

101 @
Te°


102 
public
 
	$ã°25Wide4DìpDe£rülize
(Ë
throws


103 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

104 
	`de£rülizeTªe
(4, 25, 20);

105 
	}
}

107 @
Te°


108 
public
 
	$ã°40Wide4DìpDe£rülize
(Ë
throws


109 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

110 
	`de£rülizeTªe
(4, 40, 20);

111 
	}
}

113 @
Te°


114 
public
 
	$ã°300Wide3DìpDe£rülize
(Ë
throws


115 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

116 
	`de£rülizeTªe
(3, 300, 20);

117 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/InvalidSnapshotTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

39 
public
 cœs†
	cInvÆidS«pshŸTe°
 
exãnds
 
	mClõ¡Ba£
 {

40 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

41 
LoggîFa˘‹y
.
gëLoggî
(
InvÆidS«pshŸTe°
.
˛ass
);

43 
public
 
	$InvÆidS«pshŸTe°
() {

44 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

51 @
Te°


52 
public
 
	$ã°InvÆidS«pshŸ
(Ë
throws
 
Ex˚±i⁄
 {

53 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

54 
åy
 {

55 
i
 = 0; i < 2000; i++) {

56 
zk
.
	`¸óã
("/övÆid¢≠-" + 
i
, 
√w
 
byã
[0],

57 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

59 } 
föÆly
 {

60 
zk
.
	`˛o£
();

62 
NIOSîvîCnxnFa˘‹y
 
Á˘‹y
 = (NIOSîvîCnxnFa˘‹y)
£rvîFa˘‹y
;

63 
	`°›Sîvî
();

66 
Fûe
 
¢≠Fûe
 = 
Á˘‹y
.
zkSîvî
.
	`gëTxnLogFa˘‹y
().
	`födMo°Re˚¡S«pshŸ
();

67 
LOG
.
	`öfo
("C‹ru±ög " + 
¢≠Fûe
);

68 
R™domAc˚ssFûe
 
øf
 = 
√w
 
	`R™domAc˚ssFûe
(
¢≠Fûe
, "rws");

69 
øf
.
	`£tLígth
(3);

70 
øf
.
	`˛o£
();

73 
	`°¨tSîvî
();

76 
zk
 = 
	`¸óãClõ¡
();

77 
åy
 {

78 
	`as£πTrue
("theÇode shouldÉxist",

79 (
zk
.
	`exi°s
("/övÆid¢≠-1999", 
Ál£
Ë!
nuŒ
));

80 } 
föÆly
 {

81 
zk
.
	`˛o£
();

83 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.*;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gPrötWrôî
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄ExpúedEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gSessi⁄MovedEx˚±i⁄
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gPªpReque°Pro˚ss‹
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°Pro˚ss‹
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gEº‹Txn
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

43 
public
 cœs†
	cPªpReque°Pro˚ss‹Te°
 
exãnds
 
	mClõ¡Ba£
 {

44 
¥iv©e
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

45 
¥iv©e
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 3000;

47 @
Te°


48 
public
 
	$ã°PReque°
(Ë
throws
 
Ex˚±i⁄
 {

49 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

50 
Clõ¡Ba£
.
	`£tupTe°Env
();

51 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

52 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

53 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

54 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

55 
f
.
	`°¨tup
(
zks
);

56 
As£π
.
	`as£πTrue
("waiting for server being up ",

57 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,
CONNECTION_TIMEOUT
));

58 
zks
.
£ssi⁄Tøckî
 = 
√w
 
	`MySessi⁄Tøckî
();

59 
PªpReque°Pro˚ss‹
 
¥o˚ss‹
 = 
√w
 
	`PªpReque°Pro˚ss‹
(
zks
,Çew 
	`MyReque°Pro˚ss‹
());

60 
Reque°
 
foo
 = 
√w
 
	`Reque°
(
nuŒ
, 1l, 1, 
OpCode
.
¸óã
, 
ByãBuf„r
.
	`Æloˇã
(3),Çull);

61 
¥o˚ss‹
.
	`pReque°
(
foo
);

65 
¥iv©e
 cœs†
	cMyReque°Pro˚ss‹
 
im∂emíts
 
Reque°Pro˚ss‹
 {

66 @
Ovîride


67 
public
 
	`¥o˚ssReque°
(
Reque°
 
ªque°
) {

68 
As£π
.
	`as£πEquÆs
("Reque° should havêm¨shÆlögÉº‹", 
√w
 
	`Eº‹Txn
(
Code
.
MARSHALLINGERROR
.
	`ötVÆue
()), 
ªque°
.
txn
);

71 @
Ovîride


72 
public
 
	`shutdown
() {

76 
	}
}

78 
¥iv©e
 cœs†
	cMySessi⁄Tøckî
 
im∂emíts
 
	gSessi⁄Tøckî
 {

79 @
Ovîride


80 
public
 
addSessi⁄
(
id
, 
to
) {

84 @
Ovîride


85 
public
 
checkSessi⁄
(
£ssi⁄Id
, 
Obje˘
 
ow√r
)

86 
throws
 
	gSessi⁄ExpúedEx˚±i⁄
, 
	gSessi⁄MovedEx˚±i⁄
 {

90 @
Ovîride


91 
public
 
¸óãSessi⁄
(
£ssi⁄Timeout
) {

95 @
Ovîride


96 
public
 
dumpSessi⁄s
(
PrötWrôî
 
pwrôî
) {

100 @
Ovîride


101 
public
 
ªmoveSessi⁄
(
£ssi⁄Id
) {

105 @
Ovîride


106 
public
 
£tOw√r
(
id
, 
Obje˘
 
ow√r
)

107 
throws
 
	gSessi⁄ExpúedEx˚±i⁄
 {

111 @
Ovîride


112 
public
 
shutdown
() {

116 @
Ovîride


117 
public
 
boﬁón
 
touchSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
) {

119  
	gÁl£
;

121 @
Ovîride


122 
public
 
£tSessi⁄Closög
(
£ssi⁄Id
) {

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/SerializationPerfTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
public
 cœs†
	cSîüliz©i⁄PîfTe°
 
exãnds
 
	mZKTe°Ca£
 {

32 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sîüliz©i⁄PîfTe°
.
˛ass
);

34 
¥iv©e
 ˛as†
	cNuŒOuçutSåóm
 
exãnds
 
	mOuçutSåóm
 {

35 
public
 
wrôe
(
b
) {

40 
	$¸óãNodes
(
D©aTªe
 
åì
, 
Såög
 
∑th
, 
dïth
,

41 
chûdcou¡
, 
∑ª¡CVîsi⁄
, 
byã
[] 
d©a
Ë
throws
 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

42 
∑th
 +"node" + 
dïth
;

43 
åì
.
	`¸óãNode
(
∑th
, 
d©a
, 
nuŒ
, -1, ++
∑ª¡CVîsi⁄
, 1, 1);

45 i‡(--
dïth
 == 0) {

49 
∑th
 += "/";

51 
cou¡
 = 1;

52 
i
 = 0; i < 
chûdcou¡
; i++) {

53 
cou¡
 +
	`¸óãNodes
(
åì
, 
∑th
 + 
i
, 
dïth
, 
chûdcou¡
, 1, 
d©a
);

56  
cou¡
;

57 
	}
}

59 
¥iv©e
 
	$£rülizeTªe
(
dïth
, 
width
, 
Àn
)

60 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

61 
D©aTªe
 
åì
 = 
√w
 
	`D©aTªe
();

62 
	`¸óãNodes
(
åì
, "/", 
dïth
, 
width
,Åªe.
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
(), 
√w
 
byã
[
Àn
]);

63 
cou¡
 = 
åì
.
	`gëNodeCou¡
();

65 
Bö¨yOuçutArchive
 
ﬂ
 =

66 
Bö¨yOuçutArchive
.
	`gëArchive
(
√w
 
	`NuŒOuçutSåóm
());

67 
Sy°em
.
	`gc
();

68 
°¨t
 = 
Sy°em
.
	`«noTime
();

69 
åì
.
	`£rülize
(
ﬂ
, "test");

70 
íd
 = 
Sy°em
.
	`«noTime
();

71 
duøti⁄ms
 = (
íd
 - 
°¨t
)/1000000L;

72 
≥∫odeus
 = ((
íd
 - 
°¨t
)/1000L)/
cou¡
;

73 
LOG
.
	`öfo
("Sîülized " + 
cou¡
 + "Çodes in "

74 + 
duøti⁄ms
 + " m†(" + 
≥∫odeus
 + "us/node), depth="

75 + 
dïth
 + " width=" + 
width
 + " d©Æí=" + 
Àn
);

76 
	}
}

78 @
Te°


79 
public
 
	$ã°SögÀSîülize
()

80 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

81 
	`£rülizeTªe
(1, 0, 20);

82 
	}
}

84 @
Te°


85 
public
 
	$ã°WideSîülize
()

86 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

87 
	`£rülizeTªe
(2, 10000, 20);

88 
	}
}

90 @
Te°


91 
public
 
	$ã°DìpSîülize
()

92 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

93 
	`£rülizeTªe
(400, 1, 20);

94 
	}
}

96 @
Te°


97 
public
 
	$ã°10Wide5DìpSîülize
()

98 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

99 
	`£rülizeTªe
(5, 10, 20);

100 
	}
}

102 @
Te°


103 
public
 
	$ã°15Wide5DìpSîülize
()

104 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

105 
	`£rülizeTªe
(5, 15, 20);

106 
	}
}

108 @
Te°


109 
public
 
	$ã°25Wide4DìpSîülize
()

110 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

111 
	`£rülizeTªe
(4, 25, 20);

112 
	}
}

114 @
Te°


115 
public
 
	$ã°40Wide4DìpSîülize
()

116 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

117 
	`£rülizeTªe
(4, 40, 20);

118 
	}
}

120 @
Te°


121 
public
 
	$ã°300Wide3DìpSîülize
()

122 
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
, Kì≥rEx˚±i⁄.
NoNodeEx˚±i⁄
 {

123 
	`£rülizeTªe
(3, 300, 20);

124 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ServerCnxnFactoryAccessor.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

20 
public
 cœs†
	cSîvîCnxnFa˘‹yAc˚ss‹
 {

21 
public
 
ZooKì≥rSîvî
 
	$gëZkSîvî
(
SîvîCnxnFa˘‹y
 
Ác
) {

22  
Ác
.
zkSîvî
;

24 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/SessionTrackerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSessi⁄TøckîIm∂
.
	gSessi⁄Im∂
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

38 
public
 cœs†
	cSessi⁄TøckîTe°
 
exãnds
 
	mZKTe°Ca£
 {

40 
¥iv©e
 
föÆ
 
	m£ssi⁄Id
 = 339900;

41 
¥iv©e
 
föÆ
 
	m£ssi⁄Timeout
 = 3000;

42 
¥iv©e
 
Fú°Pro˚ss‹
 
	mfú°Pro˚ss‹
;

43 
¥iv©e
 
Cou¡DownL©ch
 
	mœtch
;

49 @
	$Te°
(
timeout
 = 20000)

50 
public
 
	$ã°AddSessi⁄A·îSessi⁄Expúy
(Ë
throws
 
Ex˚±i⁄
 {

51 
ZooKì≥rSîvî
 
zks
 = 
	`£tupSessi⁄Tøckî
();

53 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

54 
zks
.
£ssi⁄Tøckî
.
	`addSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

55 
Sessi⁄TøckîIm∂
 
£ssi⁄TøckîIm∂
 = (Sessi⁄TøckîIm∂Ë
zks
.
£ssi⁄Tøckî
;

56 
Sessi⁄Im∂
 
£ssi⁄Im∂
 = 
£ssi⁄TøckîIm∂
.
£ssi⁄sById


57 .
	`gë
(
£ssi⁄Id
);

58 
As£π
.
	`as£πNŸNuŒ
("Sessi⁄id:" + 
£ssi⁄Id


59 + " d€¢'àexi°†ö sessi⁄åackî", 
£ssi⁄Im∂
);

62 
Obje˘
 
£ssi⁄Ow√r
 = 
√w
 
	`Obje˘
();

63 
£ssi⁄TøckîIm∂
.
	`checkSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Ow√r
);

66 
œtch
.
	`awaô
(
£ssi⁄Timeout
 * 2, 
TimeUnô
.
MILLISECONDS
);

71 
£ssi⁄TøckîIm∂
.
	`addSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

72 
åy
 {

73 
£ssi⁄TøckîIm∂
.
	`checkSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Ow√r
);

74 
As£π
.
	`Áû
("ShouldÅhrow sessionÉxpiryÉxception "

76 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
Sessi⁄ExpúedEx˚±i⁄
 
e
) {

79 
As£π
.
	`as£πTrue
("Sessi⁄ didn'àexpúed", 
£ssi⁄Im∂
.
	`isClosög
());

80 
As£π
.
	`as£πFÆ£
("Sessi⁄ didn'àexpúed", 
£ssi⁄TøckîIm∂


81 .
	`touchSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
));

82 
As£π
.
	`as£πEquÆs
(

84 
fú°Pro˚ss‹
.
	`gëCou¡OfClo£Sessi⁄Req
());

91 @
	$Te°
(
timeout
 = 20000)

92 
public
 
	$ã°Clo£Sessi⁄Reque°A·îSessi⁄Expúy
(Ë
throws
 
Ex˚±i⁄
 {

93 
ZooKì≥rSîvî
 
zks
 = 
	`£tupSessi⁄Tøckî
();

95 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

96 
zks
.
£ssi⁄Tøckî
.
	`addSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Timeout
);

97 
Sessi⁄TøckîIm∂
 
£ssi⁄TøckîIm∂
 = (Sessi⁄TøckîIm∂Ë
zks
.
£ssi⁄Tøckî
;

98 
Sessi⁄Im∂
 
£ssi⁄Im∂
 = 
£ssi⁄TøckîIm∂
.
£ssi⁄sById


99 .
	`gë
(
£ssi⁄Id
);

100 
As£π
.
	`as£πNŸNuŒ
("Sessi⁄id:" + 
£ssi⁄Id


101 + " d€¢'àexi°†ö sessi⁄åackî", 
£ssi⁄Im∂
);

104 
Obje˘
 
£ssi⁄Ow√r
 = 
√w
 
	`Obje˘
();

105 
£ssi⁄TøckîIm∂
.
	`checkSessi⁄
(
£ssi⁄Id
, 
£ssi⁄Ow√r
);

108 
œtch
.
	`awaô
(
£ssi⁄Timeout
 * 2, 
TimeUnô
.
MILLISECONDS
);

112 
£ssi⁄TøckîIm∂
.
	`ªmoveSessi⁄
(
£ssi⁄Id
);

113 
Sessi⁄Im∂
 
a˘uÆSessi⁄
 = 
£ssi⁄TøckîIm∂
.
£ssi⁄sById


114 .
	`gë
(
£ssi⁄Id
);

115 
As£π
.
	`as£πNuŒ
("Sessi⁄:" + 
£ssi⁄Id


116 + " stû»exi°†a·îÑemovÆ", 
a˘uÆSessi⁄
);

117 
	}
}

119 
¥iv©e
 
ZooKì≥rSîvî
 
	$£tupSessi⁄Tøckî
(Ë
throws
 
IOEx˚±i⁄
 {

120 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

121 
Clõ¡Ba£
.
	`£tupTe°Env
();

122 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

123 
zks
.
	`£tupReque°Pro˚ss‹s
();

124 
fú°Pro˚ss‹
 = 
√w
 
	`Fú°Pro˚ss‹
(
zks
, 
nuŒ
);

125 
zks
.
fú°Pro˚ss‹
 = firstProcessor;

128 
zks
.
	`¸óãSessi⁄Tøckî
();

129 
zks
.
	`°¨tSessi⁄Tøckî
();

130  
zks
;

131 
	}
}

134 
¥iv©e
 cœs†
	cFú°Pro˚ss‹
 
exãnds
 
	gPªpReque°Pro˚ss‹
 {

135 
¥iv©e
 vﬁ©ûê
	gcou¡OfClo£Sessi⁄Req
 = 0;

137 
public
 
Fú°Pro˚ss‹
(
ZooKì≥rSîvî
 
zks
,

138 
Reque°Pro˚ss‹
 
√xtPro˚ss‹
) {

139 
su≥r
(
zks
, 
√xtPro˚ss‹
);

142 @
Ovîride


143 
public
 
¥o˚ssReque°
(
Reque°
 
ªque°
) {

145 i‡(
	gªque°
.
	gty≥
 =
OpCode
.
˛o£Sessi⁄
) {

146 
œtch
.
cou¡Down
();

147 
	gcou¡OfClo£Sessi⁄Req
++;

152 
gëCou¡OfClo£Sessi⁄Req
() {

153  
	gcou¡OfClo£Sessi⁄Req
;

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ToStringTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gSëD©aReque°
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cToSåögTe°
 
exãnds
 
	mZKTe°Ca£
 {

33 @
Te°


34 
public
 
	$ã°JuãToSåög
() {

35 
SëD©aReque°
 
ªq
 = 
√w
 
	`SëD©aReque°
(
nuŒ
,Çull, 0);

36 
As£π
.
	`as£πNŸSame
("ERROR", 
ªq
.
	`toSåög
());

38 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/TruncateCorruptionTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gFourLëãrW‹dMaö
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrTe°Ba£
.
	gMaöThªad
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gP‹tF‹w¨dî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

48 
public
 cœs†
	cTrunˇãC‹ru±i⁄Te°
 
exãnds
 
	mZKTe°Ca£
 {

50 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


51 .
gëLoggî
(
TrunˇãC‹ru±i⁄Te°
.
˛ass
);

53 
public
 
öãrÁ˚
 
	mCheck
 {

54 
boﬁón
 
doCheck
();

57 
public
 
boﬁón
 
	$awaô
(
Check
 
check
, 
timeoutMûlis
)

58 
throws
 
I¡îru±edEx˚±i⁄
 {

59 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
(Ë+ 
timeoutMûlis
;

60 
íd
 > 
Sy°em
.
	`cuºítTimeMûlis
()) {

61 i‡(
check
.
	`doCheck
()) {

62 
LOG
.
	`debug
("await succeededáfter "

63 + (
Sy°em
.
	`cuºítTimeMûlis
(Ë- 
íd
 + 
timeoutMûlis
));

64  
åue
;

66 
Thªad
.
	`¶ìp
(50);

68 
LOG
.
	`debug
("awaô faûed i¿{}", 
timeoutMûlis
);

69  
Ál£
;

70 
	}
}

72 @
Te°


73 
public
 
	$ã°Tønß˘i⁄LogC‹ru±i⁄
(Ë
throws
 
Ex˚±i⁄
 {

76 
Zookì≥rSîvîWøµî
 
wøµî1
 = 
√w
 
	`Zookì≥rSîvîWøµî
(1, 7000);

77 
Zookì≥rSîvîWøµî
 
wøµî2
 = 
√w
 
	`Zookì≥rSîvîWøµî
(2, 8000);

78 
Zookì≥rSîvîWøµî
 
wøµî3
 = 
√w
 
	`Zookì≥rSîvîWøµî
(3, 8000);

80 
wøµî2
.
	`°¨t
();

81 
wøµî3
.
	`°¨t
();

83 
åy
 {

84 
wøµî2
.
	`awaô
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

85 
wøµî3
.
	`awaô
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

86 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

87 
Clõ¡Ba£
.
	`logAŒSèckTø˚s
();

88 
throw
 
e
;

90 
Li°
<
P‹tF‹w¨dî
> 
pfs
 = 
	`°¨tF‹w¨dög
();

91 
Thªad
.
	`¶ìp
(1000);

92 
wøµî1
.
	`°¨t
();

93 
wøµî1
.
	`awaô
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

95 
föÆ
 
ZooKì≥r
 
zk1
 = 
√w
 
	`ZooKì≥r
("localhost:8201",

96 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`ZkW©chî
("zk1"));

97 
	`waôF‹C⁄√˘i⁄
(
zk1
);

98 
zk1
.
	`¸óã
("/ã°", "ã°d©a".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

99 
Cª©eMode
.
PERSISTENT
);

102 
Thªad
.
	`¶ìp
(1000);

103 
wøµî2
.
	`°›
();

105 
	`waôF‹C⁄√˘i⁄
(
zk1
);

106 
zk1
.
	`¸óã
("/ã°2", "ã°d©a".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

107 
Cª©eMode
.
PERSISTENT
);

110 
wøµî3
.
	`°›
();

113 
	`°›F‹w¨dög
(
pfs
);

114 
LOG
.
	`öfo
("interruptedÇetwork connection ... waiting for zk1ánd zk2ÅoÑealize");

116 
As£π
.
	`as£πTrue
(
	`awaô
(
√w
 
	`Check
() {

118 
public
 
boﬁón
 
	`doCheck
() {

119 i‡(
zk1
.
	`gëSèã
(Ë=
Sèãs
.
CONNECTING
) {

120 
Li°
<
Såög
> 
chûdªn
;

121 
åy
 {

122 
chûdªn
 = 
zk1
.
	`gëChûdªn
("/", 
Ál£
);

124  
chûdªn
.
	`size
() != 0;

125 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

127  
åue
;

128 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

132  
Ál£
;

134 }, 
TimeUnô
.
MINUTES
.
	`toMûlis
(2)));

139 
wøµî3
.
	`˛ón
();

140 
wøµî2
.
	`°¨t
();

141 
wøµî3
.
	`°¨t
();

142 
LOG
.
	`öfo
("Waiting for zk2ánd zk3Åo formá quorum");

144 
wøµî2
.
	`awaô
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

145 
wøµî3
.
	`awaô
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

146 
ZooKì≥r
 
zk2
 = 
√w
 
	`ZooKì≥r
("localhost:8202",

147 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`ZkW©chî
("zk2"));

148 
	`waôF‹C⁄√˘i⁄
(
zk2
);

150 
LOG
.
	`öfo
("re-establishingÇetwork connectionánd waiting for zk1ÅoÑeconnect");

151 
pfs
 = 
	`°¨tF‹w¨dög
();

152 
	`waôF‹C⁄√˘i⁄
(
zk1
);

155 
LOG
.
	`öfo
("CreatingÇodeÅest3");

156 
zk1
.
	`¸óã
("/ã°3", "ã°d©a".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

157 
Cª©eMode
.
PERSISTENT
);

158 
Thªad
.
	`¶ìp
(250);

159 
LOG
.
	`öfo
("List of childrenát zk2 before zk1 became master");

160 
Li°
<
Såög
> 
chûdªn2
 = 
zk2
.
	`gëChûdªn
("/", 
Ál£
);

161 
LOG
.
	`öfo
(
chûdªn2
.
	`toSåög
());

163 
LOG
.
	`öfo
("List of childrenát zk1 before zk1 became master");

164 
Li°
<
Såög
> 
chûdªn1
 = 
zk1
.
	`gëChûdªn
("/", 
Ál£
);

165 
LOG
.
	`öfo
(
chûdªn1
.
	`toSåög
());

168 
LOG
.
	`öfo
("restarting zk2ánd zk3 while cleaning zk3ÅoÉnforce zk1Åo become master");

169 
wøµî2
.
	`°›
();

170 
wøµî3
.
	`°›
();

171 
wøµî3
.
	`˛ón
();

172 
wøµî3
.
	`°¨t
();

173 
wøµî3
.
	`awaô
(
TimeUnô
.
MINUTES
.
	`toMûlis
(2));

174 
ZooKì≥r
 
zk3
 = 
√w
 
	`ZooKì≥r
("localhost:8203",

175 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`ZkW©chî
("zk3"));

176 
	`waôF‹C⁄√˘i⁄
(
zk3
);

177 
LOG
.
	`öfo
("Zk1ánd zk3 haveá quorum,Çow starting zk2");

178 
wøµî2
.
	`°¨t
();

179 
	`waôF‹C⁄√˘i⁄
(
zk2
);

180 
LOG
.
	`öfo
("List of childrenát zk2");

181 
chûdªn2
 = 
zk2
.
	`gëChûdªn
("/", 
Ál£
);

182 
LOG
.
	`öfo
(
chûdªn2
.
	`toSåög
());

184 
	`waôF‹C⁄√˘i⁄
(
zk1
);

185 
LOG
.
	`öfo
("List of childrenát zk1");

186 
chûdªn1
 = 
zk1
.
	`gëChûdªn
("/", 
Ál£
);

187 
As£π
.
	`as£πTrue
("test3Çode is missing on zk1",

188 
chûdªn1
.
	`c⁄èös
("test3"));

189 
As£π
.
	`as£πTrue
("test3Çode is missing on zk2",

190 
chûdªn2
.
	`c⁄èös
("test3"));

191 
As£π
.
	`as£πEquÆs
(
chûdªn1
, 
chûdªn2
);

192 
	`°›F‹w¨dög
(
pfs
);

193 
	}
}

199 
¥iv©e
 
°›F‹w¨dög
(
Li°
<
P‹tF‹w¨dî
> 
pfs
Ë
throws
 
	gEx˚±i⁄
 {

200 
P‹tF‹w¨dî
 
	gpf
 : 
pfs
) {

201 
pf
.
shutdown
();

209 
¥iv©e
 
	gLi°
<
	gP‹tF‹w¨dî
> 
	$°¨tF‹w¨dög
(Ë
throws
 
IOEx˚±i⁄
 {

210 
Li°
<
P‹tF‹w¨dî
> 
ªs
 = 
√w
 
AºayLi°
<PortForwarder>();

211 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(8301, 7301));

212 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(8401, 7401));

213 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(7302, 8302));

214 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(7402, 8402));

215 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(7303, 8303));

216 
ªs
.
	`add
(
√w
 
	`P‹tF‹w¨dî
(7403, 8403));

217  
ªs
;

218 
	}
}

224 
¥iv©e
 
	$waôF‹C⁄√˘i⁄
(
föÆ
 
ZooKì≥r
 
zk
)

225 
throws
 
I¡îru±edEx˚±i⁄
 {

226 
As£π
.
	`as£πTrue
(
	`awaô
(
√w
 
	`Check
() {

228 
public
 
boﬁón
 
	`doCheck
() {

229 i‡(
zk
.
	`gëSèã
(Ë=
Sèãs
.
CONNECTED
) {

230 
Li°
<
Såög
> 
chûdªn
;

231 
åy
 {

232 
chûdªn
 = 
zk
.
	`gëChûdªn
("/", 
Ál£
);

234  
chûdªn
.
	`size
() != 0;

235 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

239  
Ál£
;

241 }, 
TimeUnô
.
MINUTES
.
	`toMûlis
(2)));

242 
	}
}

244 ˛as†
	cZkW©chî
 
im∂emíts
 
	gW©chî
 {

246 
¥iv©e
 
föÆ
 
Såög
 
	g˛õ¡Id
;

248 
ZkW©chî
(
Såög
 
˛õ¡Id
) {

249 
	gthis
.
	g˛õ¡Id
 = 
˛õ¡Id
;

252 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

253 
	gLOG
.
öfo
("<<<EVENT>>> " + 
˛õ¡Id
 + " - WatchedEvent: "

254 + 
evít
);

258 
public
 ˛as†
	cZookì≥rSîvîWøµî
 {

260 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y


261 .
gëLoggî
(
Zookì≥rSîvîWøµî
.
˛ass
);

263 
¥iv©e
 
föÆ
 
MaöThªad
 
	g£rvî
;

264 
¥iv©e
 
föÆ
 
	g˛õ¡P‹t
;

266 
public
 
Zookì≥rSîvîWøµî
(
£rvîId
, 
p‹tBa£
)

267 
throws
 
	gIOEx˚±i⁄
 {

268 
	g˛õ¡P‹t
 = 8200 + 
£rvîId
;

272 
Såög
 
	gqu‹umCfgSe˘i⁄
 = "£rvî.1=127.0.0.1:" + (
p‹tBa£
 + 301)

273 + ":" + (
p‹tBa£
 + 401)

274 + "\n£rvî.2=127.0.0.1:" + (
p‹tBa£
 + 302) + ":"

275 + (
p‹tBa£
 + 402)

276 + "\n£rvî.3=127.0.0.1:" + (
p‹tBa£
 + 303) + ":"

277 + (
p‹tBa£
 + 403);

279 
	g£rvî
 = 
√w
 
MaöThªad
(
£rvîId
, 
˛õ¡P‹t
, 
qu‹umCfgSe˘i⁄
);

282 
public
 
°¨t
(Ë
throws
 
	gEx˚±i⁄
 {

283 
	g£rvî
.
°¨t
();

286 
public
 
awaô
(
timeout
Ë
throws
 
	gEx˚±i⁄
 {

287 
	gdódlöe
 = 
Sy°em
.
cuºítTimeMûlis
(Ë+ 
timeout
;

288 
Såög
 
	gªsu…
 = "?";

289 
	gdódlöe
 > 
	gSy°em
.
cuºítTimeMûlis
()) {

290 
	gåy
 {

291 
	gªsu…
 = 
FourLëãrW‹dMaö
.
£nd4LëãrW‹d
("127.0.0.1",

292 
˛õ¡P‹t
, "stat");

293 i‡(
	gªsu…
.
°¨tsWôh
("Zookeeper version:")) {

294 
	gLOG
.
öfo
("Started zookeeper server onÖort "

295 + 
˛õ¡P‹t
);

298 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

301 
	gåy
 {

302 
	gThªad
.
¶ìp
(100);

303 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

307 
	gLOG
.
öfo
(
ªsu…
);

308 
throw
 
√w
 
Ex˚±i⁄
("FailedÅo connectÅo zookeeper server");

311 
public
 
°›
() {

312 
	gåy
 {

313 
	g£rvî
.
shutdown
();

314 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

315 
	gLOG
.
öfo
("Interrupted while shutting down");

319 
public
 
˛ón
(Ë
throws
 
	gIOEx˚±i⁄
 {

320 
	g£rvî
.
˛ón
();

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZooKeeperServerMainTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

43 
public
 cœs†
	cZooKì≥rSîvîMaöTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

44 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

45 
LoggîFa˘‹y
.
gëLoggî
(
ZooKì≥rSîvîMaöTe°
.
˛ass
);

47 
public
 ˛as†
	cMaöThªad
 
exãnds
 
	mThªad
 {

48 
föÆ
 
Fûe
 
	mc⁄fFûe
;

49 
föÆ
 
Te°ZKSMaö
 
	mmaö
;

51 
public
 
MaöThªad
(
˛õ¡P‹t
Ë
throws
 
	mIOEx˚±i⁄
 {

52 
su≥r
("SèndÆ⁄ê£rvî wôh clõ¡P‹t:" + 
˛õ¡P‹t
);

53 
Fûe
 
	mtmpDú
 = 
Clõ¡Ba£
.
¸óãTmpDú
();

54 
	mc⁄fFûe
 = 
√w
 
Fûe
(
tmpDú
, "zoo.cfg");

56 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
c⁄fFûe
);

57 
	mfwrôî
.
wrôe
("tickTime=2000\n");

58 
	mfwrôî
.
wrôe
("initLimit=10\n");

59 
	mfwrôî
.
wrôe
("syncLimit=5\n");

61 
Fûe
 
	md©aDú
 = 
√w
 Fûe(
tmpDú
, "data");

62 i‡(!
	md©aDú
.
mkdú
()) {

63 
throw
 
√w
 
IOEx˚±i⁄
("u«bÀÅÿmkdú " + 
d©aDú
);

67 
Såög
 
	mdú
 = 
d©aDú
.
toSåög
();

68 
Såög
 
	mo¢ame
 = 
java
.
œng
.
Sy°em
.
gëPr›îty
("os.name");

69 i‡(
	mo¢ame
.
toLowîCa£
().
c⁄èös
("windows")) {

70 
	mdú
 = 
dú
.
ª∂a˚
('\\', '/');

72 
	mfwrôî
.
wrôe
("d©aDú=" + 
dú
 + "\n");

74 
	mfwrôî
.
wrôe
("˛õ¡P‹t=" + 
˛õ¡P‹t
 + "\n");

75 
	mfwrôî
.
Êush
();

76 
	mfwrôî
.
˛o£
();

78 
	mmaö
 = 
√w
 
Te°ZKSMaö
();

81 
public
 
run
() {

82 
Såög
 
	m¨gs
[] = 
√w
 String[1];

83 
	m¨gs
[0] = 
c⁄fFûe
.
toSåög
();

84 
	måy
 {

85 
	mmaö
.
öôülizeAndRun
(
¨gs
);

86 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

88 
	mLOG
.
îr‹
("u√x≥˘edÉx˚±i⁄ i¿run", 
e
);

92 
public
 
shutdown
() {

93 
	mmaö
.
shutdown
();

97 
public
 ˛as†
	cTe°ZKSMaö
 
exãnds
 
	gZooKì≥rSîvîMaö
 {

98 
public
 
shutdown
() {

99 
	gsu≥r
.
shutdown
();

106 @
Te°


107 
public
 
	$ã°SèndÆ⁄e
(Ë
throws
 
Ex˚±i⁄
 {

108 
Clõ¡Ba£
.
	`£tupTe°Env
();

110 
föÆ
 
CLIENT_PORT
 = 3181;

112 
MaöThªad
 
maö
 = 
√w
 
	`MaöThªad
(
CLIENT_PORT
);

113 
maö
.
	`°¨t
();

115 
As£π
.
	`as£πTrue
("waiting for server being up",

116 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT
,

117 
CONNECTION_TIMEOUT
));

120 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
CLIENT_PORT
,

121 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

123 
zk
.
	`¸óã
("/foo", "foob¨".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

124 
Cª©eMode
.
PERSISTENT
);

125 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
("/foo", 
nuŒ
,Çull)), "foobar");

126 
zk
.
	`˛o£
();

128 
maö
.
	`shutdown
();

130 
As£π
.
	`as£πTrue
("waiting for server down",

131 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT
,

132 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

133 
	}
}

135 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

137 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZooKeeperServerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gUtû
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

32 
public
 cœs†
	cZooKì≥rSîvîTe°
 
exãnds
 
	mZKTe°Ca£
 {

33 @
Te°


34 
public
 
	$ã°S‹tD©aDúAs˚ndög
() {

35 
Fûe
[] 
fûes
 = 
√w
 File[5];

37 
fûes
[0] = 
√w
 
	`Fûe
("foo.10027c6de");

38 
fûes
[1] = 
√w
 
	`Fûe
("foo.10027c6df");

39 
fûes
[2] = 
√w
 
	`Fûe
("bar.10027c6dd");

40 
fûes
[3] = 
√w
 
	`Fûe
("foo.10027c6dc");

41 
fûes
[4] = 
√w
 
	`Fûe
("foo.20027c6dc");

43 
Fûe
[] 
‹ig
 = 
fûes
.
	`˛⁄e
();

45 
Li°
<
Fûe
> 
fûñi°
 = 
Utû
.
	`s‹tD©aDú
(
fûes
, "foo", 
åue
);

47 
As£π
.
	`as£πEquÆs
(
‹ig
[2], 
fûñi°
.
	`gë
(0));

48 
As£π
.
	`as£πEquÆs
(
‹ig
[3], 
fûñi°
.
	`gë
(1));

49 
As£π
.
	`as£πEquÆs
(
‹ig
[0], 
fûñi°
.
	`gë
(2));

50 
As£π
.
	`as£πEquÆs
(
‹ig
[1], 
fûñi°
.
	`gë
(3));

51 
As£π
.
	`as£πEquÆs
(
‹ig
[4], 
fûñi°
.
	`gë
(4));

54 @
Te°


55 
public
 
	$ã°S‹tD©aDúDes˚ndög
() {

56 
Fûe
[] 
fûes
 = 
√w
 File[5];

58 
fûes
[0] = 
√w
 
	`Fûe
("foo.10027c6de");

59 
fûes
[1] = 
√w
 
	`Fûe
("foo.10027c6df");

60 
fûes
[2] = 
√w
 
	`Fûe
("bar.10027c6dd");

61 
fûes
[3] = 
√w
 
	`Fûe
("foo.10027c6dc");

62 
fûes
[4] = 
√w
 
	`Fûe
("foo.20027c6dc");

64 
Fûe
[] 
‹ig
 = 
fûes
.
	`˛⁄e
();

66 
Li°
<
Fûe
> 
fûñi°
 = 
Utû
.
	`s‹tD©aDú
(
fûes
, "foo", 
Ál£
);

68 
As£π
.
	`as£πEquÆs
(
‹ig
[4], 
fûñi°
.
	`gë
(0));

69 
As£π
.
	`as£πEquÆs
(
‹ig
[1], 
fûñi°
.
	`gë
(1));

70 
As£π
.
	`as£πEquÆs
(
‹ig
[0], 
fûñi°
.
	`gë
(2));

71 
As£π
.
	`as£πEquÆs
(
‹ig
[3], 
fûñi°
.
	`gë
(3));

72 
As£π
.
	`as£πEquÆs
(
‹ig
[2], 
fûñi°
.
	`gë
(4));

73 
	}
}

75 @
Te°


76 
public
 
	$ã°GëLogFûes
() {

77 
Fûe
[] 
fûes
 = 
√w
 File[5];

79 
fûes
[0] = 
√w
 
	`Fûe
("log.10027c6de");

80 
fûes
[1] = 
√w
 
	`Fûe
("log.10027c6df");

81 
fûes
[2] = 
√w
 
	`Fûe
("snapshot.10027c6dd");

82 
fûes
[3] = 
√w
 
	`Fûe
("log.10027c6dc");

83 
fûes
[4] = 
√w
 
	`Fûe
("log.20027c6dc");

85 
Fûe
[] 
‹ig
 = 
fûes
.
	`˛⁄e
();

87 
Fûe
[] 
fûñi°
 =

88 
FûeTxnLog
.
	`gëLogFûes
(
fûes
,

89 
L⁄g
.
	`∑r£L⁄g
("10027c6de", 16));

91 
As£π
.
	`as£πEquÆs
(3, 
fûñi°
.
Àngth
);

92 
As£π
.
	`as£πEquÆs
(
‹ig
[0], 
fûñi°
[0]);

93 
As£π
.
	`as£πEquÆs
(
‹ig
[1], 
fûñi°
[1]);

94 
As£π
.
	`as£πEquÆs
(
‹ig
[4], 
fûñi°
[2]);

95 
	}
}

97 @
Te°


98 
public
 
	$ã°F‹˚SyncDeÁu…E«bÀd
() {

99 
Fûe
 
fûe
 = 
√w
 
	`Fûe
("foo.10027c6de");

100 
FûeTxnLog
 
log
 = 
√w
 
	`FûeTxnLog
(
fûe
);

101 
As£π
.
	`as£πTrue
(
log
.
	`isF‹˚Sync
());

102 
	}
}

104 @
Te°


105 
public
 
	$ã°F‹˚SyncDeÁu…DißbÀd
() {

106 
åy
 {

107 
Fûe
 
fûe
 = 
√w
 
	`Fûe
("foo.10027c6de");

108 
Sy°em
.
	`£tPr›îty
("zookeeper.forceSync","no");

109 
FûeTxnLog
 
log
 = 
√w
 
	`FûeTxnLog
(
fûe
);

110 
As£π
.
	`as£πFÆ£
(
log
.
	`isF‹˚Sync
());

112 
föÆly
 {

114 
Sy°em
.
	`£tPr›îty
("zookeeper.forceSync","yes");

116 
	}
}

118 @
Te°


119 
public
 
	$ã°InvÆidS«pshŸ
() {

120 
Fûe
 
f
 = 
nuŒ
;

121 
Fûe
 
tmpFûeDú
 = 
nuŒ
;

122 
åy
 {

123 
tmpFûeDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

124 
f
 = 
√w
 
	`Fûe
(
tmpFûeDú
, "snapshot.0");

125 i‡(!
f
.
	`exi°s
()) {

126 
f
.
	`¸óãNewFûe
();

128 
As£π
.
	`as£πFÆ£
("S«pshŸ fûêsizêi†gª©îÅh™ 9 byãs", 
Utû
.
	`isVÆidS«pshŸ
(
f
));

129 
As£π
.
	`as£πTrue
("C™'àdñëêfûe", 
f
.
	`dñëe
());

130 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

131 } 
föÆly
 {

132 i‡(
nuŒ
 !
tmpFûeDú
) {

133 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
tmpFûeDú
);

136 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZxidRolloverTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
;

21 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£πi⁄FaûedEº‹
;

22 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gC⁄√˘i⁄LossEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCou¡downW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Te°
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gQu‹umUtû
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gQu‹umUtû
.
	gPìrSåu˘
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

41 
public
 cœs†
	cZxidRﬁlovîTe°
 
exãnds
 
	mTe°Ca£
 {

42 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
ZxidRﬁlovîTe°
.
˛ass
);

44 
¥iv©e
 
Qu‹umUtû
 
	mqu
;

45 
¥iv©e
 
ZooKì≥rSîvî
 
	mzksLódî
;

46 
¥iv©e
 
	mZooKì≥r
[] 
	mzkClõ¡s
 = 
√w
 
ZooKì≥r
[3];

47 
¥iv©e
 
	mCou¡downW©chî
[] 
	mzkClõ¡W©chîs
 = 
√w
 
Cou¡downW©chî
[3];

48 
¥iv©e
 
	midxLódî
;

49 
¥iv©e
 
	midxFﬁlowî
;

51 
¥iv©e
 
ZooKì≥r
 
	$gëClõ¡
(
idx
) {

52  
zkClõ¡s
[
idx
-1];

55 @
Ovîride


56 
¥Ÿe˘ed
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

57 
LOG
.
	`öfo
("STARTING " + 
	`gëName
());

61 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(7);

63 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

64 
	`°¨tAŒ
();

66 
i
 = 0; i < 
zkClõ¡s
.
Àngth
; i++) {

67 
zkClõ¡W©chîs
[
i
] = 
√w
 
	`Cou¡downW©chî
();

68 
PìrSåu˘
 
≥î
 = 
qu
.
	`gëPìr
(
i
 + 1);

69 
zkClõ¡s
[
i
] = 
√w
 
	`ZooKì≥r
(

70 "127.0.0.1:" + 
≥î
.
˛õ¡P‹t
,

71 
Clõ¡Te°
.
CONNECTION_TIMEOUT
, 
zkClõ¡W©chîs
[
i
]);

73 
	`waôF‹Clõ¡sC⁄√˘ed
();

74 
	}
}

76 
¥iv©e
 
	$waôF‹Clõ¡sC⁄√˘ed
(Ë
throws
 
Ex˚±i⁄
 {

77 
i
 = 0; i < 
zkClõ¡s
.
Àngth
; i++) {

78 
zkClõ¡W©chîs
[
i
].
	`waôF‹C⁄√˘ed
(
Clõ¡Te°
.
CONNECTION_TIMEOUT
);

79 
zkClõ¡W©chîs
[
i
].
	`ª£t
();

81 
	}
}

86 
¥iv©e
 
	$checkClõ¡sC⁄√˘ed
(Ë
throws
 
Ex˚±i⁄
 {

87 
i
 = 0; i < 
zkClõ¡s
.
Àngth
; i++) {

88 
	`checkClõ¡C⁄√˘ed
(
i
 + 1);

90 
	}
}

97 
¥iv©e
 
	$checkClõ¡C⁄√˘ed
(
idx
Ë
throws
 
Ex˚±i⁄
 {

98 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idx
);

99 i‡(
zk
 =
nuŒ
) {

102 
åy
 {

103 
	`as£πNuŒ
(
zk
.
	`exi°s
("/foofoofoo-c⁄√˘ed", 
Ál£
));

104 } 
	`ˇtch
 (
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

113 
PìrSåu˘
 
≥î
 = 
qu
.
	`gëPìr
(
idx
);

114 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(

115 "127.0.0.1:" + 
≥î
.
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

117 
	`as£πNuŒ
(
zk
.
	`exi°s
("/foofoofoo-c⁄√˘ed", 
Ál£
));

119 
	}
}

124 
¥iv©e
 
	$checkClõ¡sDisc⁄√˘ed
(Ë
throws
 
Ex˚±i⁄
 {

125 
i
 = 0; i < 
zkClõ¡s
.
Àngth
; i++) {

126 
	`checkClõ¡Disc⁄√˘ed
(
i
 + 1);

128 
	}
}

135 
¥iv©e
 
	$checkClõ¡Disc⁄√˘ed
(
idx
Ë
throws
 
Ex˚±i⁄
 {

136 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idx
);

137 i‡(
zk
 =
nuŒ
) {

140 
åy
 {

141 
	`as£πNuŒ
(
zk
.
	`exi°s
("/foofoofoo-disc⁄√˘ed", 
Ál£
));

142 
	`Áû
("expected clientÅo be disconnected");

143 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

146 
	}
}

148 
¥iv©e
 
	$°¨tAŒ
(Ë
throws
 
Ex˚±i⁄
 {

149 
qu
.
	`°¨tAŒ
();

150 
	`checkLódî
();

152 
	`checkClõ¡sC⁄√˘ed
();

153 
	}
}

154 
¥iv©e
 
	$°¨t
(
idx
Ë
throws
 
Ex˚±i⁄
 {

155 
qu
.
	`°¨t
(
idx
);

156 
Såög
 
hp
 : 
qu
.
	`gëC⁄nSåög
().
	`•lô
(",")) {

157 
As£π
.
	`as£πTrue
("waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
hp
,

158 
Clõ¡Te°
.
CONNECTION_TIMEOUT
));

161 
	`checkLódî
();

163 
	`checkClõ¡sC⁄√˘ed
();

164 
	}
}

166 
¥iv©e
 
	$checkLódî
() {

167 
idxLódî
 = 1;

168 
qu
.
	`gëPìr
(
idxLódî
).
≥î
.
Àadî
 =
nuŒ
) {

169 
idxLódî
++;

171 
idxFﬁlowî
 = (
idxLódî
 == 1 ? 2 : 1);

173 
zksLódî
 = 
qu
.
	`gëPìr
(
idxLódî
).
≥î
.
	`gëA˘iveSîvî
();

174 
	}
}

176 
¥iv©e
 
	$shutdownAŒ
(Ë
throws
 
Ex˚±i⁄
 {

177 
qu
.
	`shutdownAŒ
();

179 
	`checkClõ¡sDisc⁄√˘ed
();

180 
	}
}

182 
¥iv©e
 
	$shutdown
(
idx
Ë
throws
 
Ex˚±i⁄
 {

183 
qu
.
	`shutdown
(
idx
);

186 
PìrSåu˘
 
≥î
 = 
qu
.
	`gëPìr
(
idx
);

187 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(

188 "127.0.0.1:" + 
≥î
.
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

193 i‡(
idx
 =
idxLódî
) {

194 
	`checkClõ¡Disc⁄√˘ed
(
idx
);

195 
åy
 {

196 
	`checkClõ¡sDisc⁄√˘ed
();

197 } 
	`ˇtch
 (
As£πi⁄FaûedEº‹
 
e
) {

202 
	`checkClõ¡Disc⁄√˘ed
(
idx
);

204 
	}
}

207 
¥iv©e
 
	$adju°EpochNórEnd
() {

208 
zksLódî
.
	`£tZxid
((zksLódî.
	`gëZxid
() & 0xffffffff00000000L) | 0xfffffffcL);

209 
	}
}

211 @
Ovîride


212 
¥Ÿe˘ed
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

213 
LOG
.
	`öfo
("tearDown starting");

214 
i
 = 0; i < 
zkClõ¡s
.
Àngth
; i++) {

215 
zkClõ¡s
[
i
].
	`˛o£
();

217 
qu
.
	`shutdownAŒ
();

218 
	}
}

224 
¥iv©e
 
	$¸óãNodes
(
ZooKì≥r
 
zk
, 
°¨t
, 
cou¡
Ë
throws
 
Ex˚±i⁄
 {

225 
LOG
.
	`öfo
("Cª©ögÇode†" + 
°¨t
 + "Åhru " + (°¨à+ 
cou¡
));

226 
j
 = 0;

227 
åy
 {

228 
i
 = 
°¨t
; i < sèπ + 
cou¡
; i++) {

229 
zk
.
	`¸óã
("/foo" + 
i
, 
√w
 
byã
[0], 
Ids
.
READ_ACL_UNSAFE
,

230 
Cª©eMode
.
EPHEMERAL
);

231 
j
++;

233 } 
	`ˇtch
 (
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

235 
	`waôF‹Clõ¡sC⁄√˘ed
();

237  
j
;

238 
	}
}

243 
¥iv©e
 
	$checkNodes
(
ZooKì≥r
 
zk
, 
°¨t
, 
cou¡
Ë
throws
 
Ex˚±i⁄
 {

244 
LOG
.
	`öfo
("VÆid©ögÇode†" + 
°¨t
 + "Åhru " + (°¨à+ 
cou¡
));

245 
i
 = 
°¨t
; i < sèπ + 
cou¡
; i++) {

246 
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/foo" + 
i
, 
Ál£
));

247 
LOG
.
	`îr‹
("Exi°†zxid:" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`exi°s
("/foo" + 
i
, 
Ál£
).
	`gëCzxid
()));

249 
	`as£πNuŒ
(
zk
.
	`exi°s
("/foo" + (
°¨t
 + 
cou¡
), 
Ál£
));

250 
	}
}

256 @
Te°


257 
public
 
	$ã°Sim∂eRﬁlovîFﬁlowî
(Ë
throws
 
Ex˚±i⁄
 {

258 
	`adju°EpochNórEnd
();

260 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
((
idxLódî
 == 1 ? 2 : 1));

261 
cou¡Cª©ed
 = 
	`¸óãNodes
(
zk
, 0, 10);

263 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

264 
	}
}

270 @
Te°


271 
public
 
	$ã°RﬁlovîThíRe°¨t
(Ë
throws
 
Ex˚±i⁄
 {

272 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

274 
cou¡Cª©ed
 = 
	`¸óãNodes
(
zk
, 0, 10);

276 
	`adju°EpochNórEnd
();

278 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

280 
	`shutdownAŒ
();

281 
	`°¨tAŒ
();

282 
zk
 = 
	`gëClõ¡
(
idxLódî
);

284 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

285 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

287 
	`adju°EpochNórEnd
();

289 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

290 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

292 
	`shutdownAŒ
();

293 
	`°¨tAŒ
();

294 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

296 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

297 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

299 
	`shutdownAŒ
();

300 
	`°¨tAŒ
();

301 
zk
 = 
	`gëClõ¡
(
idxLódî
);

303 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

304 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

307 
	`as£πTrue
(
cou¡Cª©ed
 > 0);

308 
	`as£πTrue
(
cou¡Cª©ed
 < 60);

309 
	}
}

315 @
Te°


316 
public
 
	$ã°RﬁlovîThíFﬁlowîRe°¨t
(Ë
throws
 
Ex˚±i⁄
 {

317 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

319 
cou¡Cª©ed
 = 
	`¸óãNodes
(
zk
, 0, 10);

321 
	`adju°EpochNórEnd
();

323 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

325 
	`shutdown
(
idxFﬁlowî
);

326 
	`°¨t
(
idxFﬁlowî
);

328 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

329 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

331 
	`adju°EpochNórEnd
();

333 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

334 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

336 
	`shutdown
(
idxFﬁlowî
);

337 
	`°¨t
(
idxFﬁlowî
);

339 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

340 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

342 
	`shutdown
(
idxFﬁlowî
);

343 
	`°¨t
(
idxFﬁlowî
);

345 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

346 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

349 
	`as£πTrue
(
cou¡Cª©ed
 > 0);

350 
	`as£πTrue
(
cou¡Cª©ed
 < 60);

351 
	}
}

357 @
Te°


358 
public
 
	$ã°RﬁlovîThíLódîRe°¨t
(Ë
throws
 
Ex˚±i⁄
 {

359 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idxLódî
);

361 
cou¡Cª©ed
 = 
	`¸óãNodes
(
zk
, 0, 10);

363 
	`adju°EpochNórEnd
();

365 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

367 
	`shutdown
(
idxLódî
);

368 
	`°¨t
(
idxLódî
);

369 
zk
 = 
	`gëClõ¡
(
idxLódî
);

371 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

372 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

374 
	`adju°EpochNórEnd
();

376 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

377 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

379 
	`shutdown
(
idxLódî
);

380 
	`°¨t
(
idxLódî
);

381 
zk
 = 
	`gëClõ¡
(
idxLódî
);

383 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

384 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

386 
	`shutdown
(
idxLódî
);

387 
	`°¨t
(
idxLódî
);

388 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

390 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

391 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

394 
	`as£πTrue
(
cou¡Cª©ed
 > 0);

395 
	`as£πTrue
(
cou¡Cª©ed
 < 50);

396 
	}
}

402 @
Te°


403 
public
 
	$ã°Mu…ùÀRﬁlovî
(Ë
throws
 
Ex˚±i⁄
 {

404 
ZooKì≥r
 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

406 
cou¡Cª©ed
 = 
	`¸óãNodes
(
zk
, 0, 10);

408 
	`adju°EpochNórEnd
();

410 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

412 
	`adju°EpochNórEnd
();

414 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

416 
	`adju°EpochNórEnd
();

418 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

420 
	`adju°EpochNórEnd
();

422 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

424 
	`shutdownAŒ
();

425 
	`°¨tAŒ
();

426 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

428 
	`adju°EpochNórEnd
();

430 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

431 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

433 
	`shutdown
(
idxLódî
);

434 
	`°¨t
(
idxLódî
);

435 
zk
 = 
	`gëClõ¡
(
idxFﬁlowî
);

437 
	`checkNodes
(
zk
, 0, 
cou¡Cª©ed
);

438 
cou¡Cª©ed
 +
	`¸óãNodes
(
zk
, countCreated, 10);

441 
	`as£πTrue
(
cou¡Cª©ed
 > 0);

442 
	`as£πTrue
(
cou¡Cª©ed
 < 70);

443 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/LearnerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gEOFEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gIndex
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLó∫î
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

46 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

47 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

49 
public
 cœs†
	cLó∫îTe°
 
exãnds
 
	mZKTe°Ca£
 {

50 ˛as†
	cSim∂eLó∫îZooKì≥rSîvî
 
exãnds
 
	mLó∫îZooKì≥rSîvî
 {

51 
boﬁón
 
	m°¨tupCÆÀd
;

53 
public
 
Sim∂eLó∫îZooKì≥rSîvî
(
FûeTxnS«pLog
 
·¶
, 
Qu‹umPìr
 
£lf
Ë
throws
 
	mIOEx˚±i⁄
 {

54 
su≥r
(
·¶
, 2000, 2000, 2000, 
nuŒ
, 
√w
 
ZKD©aba£
(·¶), 
£lf
);

56 
Ló∫î
 
	mÀ¨√r
;

57 @
Ovîride


58 
public
 
Ló∫î
 
gëLó∫î
() {

59  
	mÀ¨√r
;

62 @
Ovîride


63 
public
 
°¨tup
() {

64 
	m°¨tupCÆÀd
 = 
åue
;

67 ˛as†
	cSim∂eLó∫î
 
exãnds
 
	gLó∫î
 {

68 
Sim∂eLó∫î
(
FûeTxnS«pLog
 
·¶
Ë
throws
 
	gIOEx˚±i⁄
 {

69 
	g£lf
 = 
√w
 
Qu‹umPìr
();

70 
	gzk
 = 
√w
 
Sim∂eLó∫îZooKì≥rSîvî
(
·¶
, 
£lf
);

71 ((
	gSim∂eLó∫îZooKì≥rSîvî
)
	gzk
).
	gÀ¨√r
 = 
this
;

74 
¥iv©e
 
	$ªcursiveDñëe
(
Fûe
 
dú
) {

75 i‡(
dú
 =
nuŒ
 || !dú.
	`exi°s
()) {

78 i‡(!
dú
.
	`isDúe˘‹y
()) {

79 
dú
.
	`dñëe
();

81 
Fûe
 
chûd
: 
dú
.
	`li°Fûes
()) {

82 
	`ªcursiveDñëe
(
chûd
);

84 
	}
}

85 @
Te°


86 
public
 
	$syncTe°
(Ë
throws
 
Ex˚±i⁄
 {

87 
Fûe
 
tmpFûe
 = Fûe.
	`¸óãTempFûe
("test", ".dir");

88 
tmpFûe
.
	`dñëe
();

89 
åy
 {

90 
FûeTxnS«pLog
 
·¶
 = 
√w
 
	`FûeTxnS«pLog
(
tmpFûe
,ÅmpFile);

91 
Sim∂eLó∫î
 
¶
 = 
√w
 
	`Sim∂eLó∫î
(
·¶
);

92 
°¨tZxid
 = 
¶
.
zk
.
	`gëLa°Pro˚s£dZxid
();

95 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

96 
Bö¨yOuçutArchive
 
ﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

97 
¶
.
ÀadîOs
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
√w
 
	`ByãAºayOuçutSåóm
());

100 
¶
.
buf„ªdOuçut
 = 
√w
 
	`Buf„ªdOuçutSåóm
(
Sy°em
.
out
);

101 
¶
.
sock
 = 
√w
 
	`Sockë
();

104 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
SNAP
, 0, 
nuŒ
,Çull);

105 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

106 
¶
.
zk
.
	`gëZKD©aba£
().
	`£rülizeS«pshŸ
(
ﬂ
);

107 
ﬂ
.
	`wrôeSåög
("BenWasHere", "signature");

108 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
(0, 0, 0, 0, 
ZooDefs
.
OpCode
.
¸óã
);

109 
Cª©eTxn
 
txn
 = 
√w
 
	`Cª©eTxn
("/foo",Çew 
byã
[0],Çew 
AºayLi°
<
ACL
>(), 
Ál£
, 
¶
.
zk
.
	`gëZKD©aba£
().
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
());

110 
ByãAºayOuçutSåóm
 
tbaos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

111 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
tbaos
);

112 
hdr
.
	`£rülize
(
bﬂ
, "hdr");

113 
txn
.
	`£rülize
(
bﬂ
, "txn");

114 
tbaos
.
	`˛o£
();

115 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
PROPOSAL
, 1, 
tbaos
.
	`toByãAºay
(), 
nuŒ
);

116 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

119 
¶
.
ÀadîIs
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
√w
 
	`ByãAºayI≈utSåóm
(
baos
.
	`toByãAºay
()));

121 
åy
 {

122 
¶
.
	`syncWôhLódî
(3);

123 } 
	`ˇtch
(
EOFEx˚±i⁄
 
e
) {}

125 
¶
.
zk
.
	`shutdown
();

126 
¶
 = 
√w
 
	`Sim∂eLó∫î
(
·¶
);

127 
As£π
.
	`as£πEquÆs
(
°¨tZxid
, 
¶
.
zk
.
	`gëLa°Pro˚s£dZxid
());

128 } 
föÆly
 {

129 
	`ªcursiveDñëe
(
tmpFûe
);

131 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gLöeNumbîRódî
;

25 
imp‹t
 
	gjava
.
	gio
.
	gSåögRódî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

28 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

29 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLayout
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLevñ
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gWrôîAµídî
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gPr›oßl
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrTe°Ba£
.
	gMaöThªad
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

50 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

51 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

58 
public
 cœs†
	cQu‹umPìrMaöTe°
 
exãnds
 
	mQu‹umPìrTe°Ba£
 {

62 @
Te°


63 
public
 
	$ã°Qu‹um
(Ë
throws
 
Ex˚±i⁄
 {

64 
Clõ¡Ba£
.
	`£tupTe°Env
();

66 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

67 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

69 
Såög
 
qu‹umCfgSe˘i⁄
 =

70 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

71 + ":" + 
P‹tAssignmít
.
	`unique
()

72 + "\n£rvî.2=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

73 + ":" + 
P‹tAssignmít
.
	`unique
();

75 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

76 
MaöThªad
 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

77 
q1
.
	`°¨t
();

78 
q2
.
	`°¨t
();

80 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

81 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

82 
CONNECTION_TIMEOUT
));

83 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

84 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

85 
CONNECTION_TIMEOUT
));

88 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

89 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

91 
zk
.
	`¸óã
("/foo_q1", "foob¨1".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

92 
Cª©eMode
.
PERSISTENT
);

93 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
("/foo_q1", 
nuŒ
,Çull)), "foobar1");

94 
zk
.
	`˛o£
();

96 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

97 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

99 
zk
.
	`¸óã
("/foo_q2", "foob¨2".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

100 
Cª©eMode
.
PERSISTENT
);

101 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
("/foo_q2", 
nuŒ
,Çull)), "foobar2");

102 
zk
.
	`˛o£
();

104 
q1
.
	`shutdown
();

105 
q2
.
	`shutdown
();

107 
As£π
.
	`as£πTrue
("waiting for server 1 down",

108 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

109 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

110 
As£π
.
	`as£πTrue
("waiting for server 2 down",

111 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

112 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

118 @
Te°


119 
public
 
	$ã°E¨lyLódîAb™d⁄mít
(Ë
throws
 
Ex˚±i⁄
 {

120 
Clõ¡Ba£
.
	`£tupTe°Env
();

122 
föÆ
 
SERVER_COUNT
 = 3;

123 
föÆ
 
˛õ¡P‹ts
[] = 
√w
 [
SERVER_COUNT
];

124 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

125 
i
 = 0; i < 
SERVER_COUNT
; i++) {

126 
˛õ¡P‹ts
[
i
] = 
P‹tAssignmít
.
	`unique
();

127 
sb
.
	`≠≥nd
("£rvî."+
i
+"=127.0.0.1:"+
P‹tAssignmít
.
	`unique
()+":"+PortAssignment.unique()+"\n");

129 
Såög
 
qu‹umCfgSe˘i⁄
 = 
sb
.
	`toSåög
();

131 
MaöThªad
 
mt
[] = 
√w
 MaöThªad[
SERVER_COUNT
];

132 
ZooKì≥r
 
zk
[] = 
√w
 ZooKì≥r[
SERVER_COUNT
];

133 
i
 = 0; i < 
SERVER_COUNT
; i++) {

134 
mt
[
i
] = 
√w
 
	`MaöThªad
(i, 
˛õ¡P‹ts
[i], 
qu‹umCfgSe˘i⁄
);

135 
mt
[
i
].
	`°¨t
();

136 
zk
[
i
] = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
˛õ¡P‹ts
[i], 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

139 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTED
);

143 
i
 = 0; i < 
SERVER_COUNT
; i++) {

144 
mt
[
i
].
	`shutdown
();

147 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTING
);

149 
i
 = 0; i < 
SERVER_COUNT
; i++) {

150 
mt
[
i
].
	`°¨t
();

153 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTED
);

157 
Àadî
 = -1;

158 
M≠
<
L⁄g
, 
Pr›oßl
> 
out°™dög
 = 
nuŒ
;

159 
i
 = 0; i < 
SERVER_COUNT
; i++) {

160 i‡(
mt
[
i
].
maö
.
qu‹umPìr
.
Àadî
 =
nuŒ
) {

161 
mt
[
i
].
	`shutdown
();

163 
Àadî
 = 
i
;

164 
out°™dög
 = 
mt
[
Àadî
].
maö
.
qu‹umPìr
.Àadî.
out°™dögPr›oßls
;

168 
åy
 {

169 
zk
[
Àadî
].
	`¸óã
("/zk"+Àadî, "zk".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

170 
Cª©eMode
.
PERSISTENT
);

171 
As£π
.
	`Áû
("¸óã /zk" + 
Àadî
 + " should have failed");

172 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
 
e
) {}

176 
As£π
.
	`as£πTrue
(
out°™dög
.
	`size
() == 1);

177 
As£π
.
	`as£πTrue
(((
Pr›oßl
)
out°™dög
.
	`vÆues
().
	`ôî©‹
().
	`√xt
()).
ªque°
.
hdr
.
	`gëTy≥
(Ë=
OpCode
.
¸óã
);

179 
Thªad
.
	`¶ìp
(1000);

180 
mt
[
Àadî
].
	`shutdown
();

181 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTING
);

182 
i
 = 0; i < 
SERVER_COUNT
; i++) {

183 i‡(
i
 !
Àadî
) {

184 
mt
[
i
].
	`°¨t
();

187 
i
 = 0; i < 
SERVER_COUNT
; i++) {

188 i‡(
i
 !
Àadî
) {

189 
	`waôF‹O√
(
zk
[
i
], 
Sèãs
.
CONNECTED
);

190 
zk
[
i
].
	`¸óã
("/zk" + i, "zk".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

194 
mt
[
Àadî
].
	`°¨t
();

195 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTED
);

197 
i
 = 0; i < 
SERVER_COUNT
; i++) {

198 
j
 = 0; j < 
SERVER_COUNT
; j++) {

199 i‡(
i
 =
Àadî
) {

200 
As£π
.
	`as£πTrue
((
j
==
Àadî
?("Lódî ("+Àadî+")"):("Fﬁlowî "+j))+" shouldÇŸ havê/zk" + 
i
, 
zk
[j].
	`exi°s
("/zk"+i, 
Ál£
Ë=
nuŒ
);

202 
As£π
.
	`as£πTrue
((
j
==
Àadî
?("Lódî ("+Àadî+")"):("Fﬁlowî "+j))+" d€†nŸ havê/zk" + 
i
, 
zk
[j].
	`exi°s
("/zk"+i, 
Ál£
Ë!
nuŒ
);

206 
i
 = 0; i < 
SERVER_COUNT
; i++) {

207 
zk
[
i
].
	`˛o£
();

209 
i
 = 0; i < 
SERVER_COUNT
; i++) {

210 
mt
[
i
].
	`shutdown
();

212 
	}
}

219 @
Te°


220 
public
 
	$ã°Highe°ZxidJoöL©e
(Ë
throws
 
Ex˚±i⁄
 {

221 
numSîvîs
 = 3;

222 
Sîvîs
 
svrs
 = 
	`LaunchSîvîs
(
numSîvîs
);

223 
Såög
 
∑th
 = "/hzxidtest";

224 
Àadî
=-1;

227 
i
=0; i < 
numSîvîs
; i++) {

228 i‡(
svrs
.
mt
[
i
].
maö
.
qu‹umPìr
.
Àadî
 !
nuŒ
) {

229 
Àadî
 = 
i
;

234 
As£π
.
	`as£πTrue
("Thîêshould bê®Àadî", 
Àadî
 >=0);

236 
n⁄Àadî
 = (
Àadî
+1)%
numSîvîs
;

238 
byã
[] 
öput
 = 
√w
 byte[1];

239 
öput
[0] = 1;

240 
byã
[] 
ouçut
;

243 
svrs
.
zk
[
Àadî
].
	`¸óã
(
∑th
+Àadî, 
öput
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

244 
svrs
.
zk
[
Àadî
].
	`¸óã
(
∑th
+
n⁄Àadî
, 
öput
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

248 
ouçut
 = 
svrs
.
zk
[
Àadî
].
	`gëD©a
(
∑th
+
n⁄Àadî
, 
Ál£
, 
nuŒ
);

251 
i
=0; i < 
numSîvîs
; i++) {

252 i‡(
i
 !
Àadî
) {

253 
svrs
.
mt
[
i
].
	`shutdown
();

257 
öput
[0] = 2;

260 
svrs
.
zk
[
Àadî
].
	`£tD©a
(
∑th
+Àadî, 
öput
, -1, 
nuŒ
,Çull);

263 
Thªad
.
	`¶ìp
(500);

266 
svrs
.
mt
[
Àadî
].
	`shutdown
();

268 
Sy°em
.
	`gc
();

270 
	`waôF‹AŒ
(
svrs
.
zk
, 
Sèãs
.
CONNECTING
);

273 
i
=0; i < 
numSîvîs
; i++) {

274 i‡(
i
 !
Àadî
) {

275 
svrs
.
mt
[
i
].
	`°¨t
();

280 
	`waôF‹O√
(
svrs
.
zk
[
n⁄Àadî
], 
Sèãs
.
CONNECTED
);

283 
ouçut
 = 
svrs
.
zk
[
n⁄Àadî
].
	`gëD©a
(
∑th
+
Àadî
, 
Ál£
, 
nuŒ
);

285 
As£π
.
	`as£πEquÆs
(

287 
ouçut
[0], 1);

291 
svrs
.
zk
[
n⁄Àadî
].
	`£tD©a
(
∑th
+n⁄Àadî, 
öput
, -1);

294 
svrs
.
mt
[
Àadî
].
	`°¨t
();

297 
	`waôF‹O√
(
svrs
.
zk
[
Àadî
], 
Sèãs
.
CONNECTED
);

300 
ouçut
 = 
svrs
.
zk
[
Àadî
].
	`gëD©a
(
∑th
+Àadî, 
Ál£
, 
nuŒ
);

301 
As£π
.
	`as£πEquÆs
(

303 
ouçut
[0], 1);

306 
ouçut
 = 
svrs
.
zk
[
Àadî
].
	`gëD©a
(
∑th
+
n⁄Àadî
, 
Ál£
, 
nuŒ
);

307 
As£π
.
	`as£πEquÆs
(

309 
ouçut
[0], 2);

310 
	}
}

312 
¥iv©e
 
	$waôF‹O√
(
ZooKì≥r
 
zk
, 
Sèãs
 
°©e
Ë
throws
 
I¡îru±edEx˚±i⁄
 {

313 
zk
.
	`gëSèã
(Ë!
°©e
) {

314 
Thªad
.
	`¶ìp
(500);

316 
	}
}

318 
¥iv©e
 
	$waôF‹AŒ
(
ZooKì≥r
[] 
zks
, 
Sèãs
 
°©e
Ë
throws
 
I¡îru±edEx˚±i⁄
 {

319 
ôî©i⁄s
 = 10;

320 
boﬁón
 
some⁄eNŸC⁄√˘ed
 = 
åue
;

321 
some⁄eNŸC⁄√˘ed
) {

322 i‡(
ôî©i⁄s
-- == 0) {

323 
Clõ¡Ba£
.
	`logAŒSèckTø˚s
();

324 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("WaitingÅooÜong");

327 
some⁄eNŸC⁄√˘ed
 = 
Ál£
;

328 
ZooKì≥r
 
zk
: 
zks
) {

329 i‡(
zk
.
	`gëSèã
(Ë!
°©e
) {

330 
some⁄eNŸC⁄√˘ed
 = 
åue
;

333 
Thªad
.
	`¶ìp
(1000);

335 
	}
}

338 
¥iv©e
 cœs†
	cSîvîs
 {

339 
MaöThªad
 
	gmt
[];

340 
ZooKì≥r
 
	gzk
[];

351 
¥iv©e
 
Sîvîs
 
	$LaunchSîvîs
(
numSîvîs
Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

352 
SERVER_COUNT
 = 
numSîvîs
;

353 
Sîvîs
 
svrs
 = 
√w
 
	`Sîvîs
();

354 
föÆ
 
˛õ¡P‹ts
[] = 
√w
 [
SERVER_COUNT
];

355 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

356 
i
 = 0; i < 
SERVER_COUNT
; i++) {

357 
˛õ¡P‹ts
[
i
] = 
P‹tAssignmít
.
	`unique
();

358 
sb
.
	`≠≥nd
("£rvî."+
i
+"=127.0.0.1:"+
P‹tAssignmít
.
	`unique
()+":"+PortAssignment.unique()+"\n");

360 
Såög
 
qu‹umCfgSe˘i⁄
 = 
sb
.
	`toSåög
();

362 
MaöThªad
 
mt
[] = 
√w
 MaöThªad[
SERVER_COUNT
];

363 
ZooKì≥r
 
zk
[] = 
√w
 ZooKì≥r[
SERVER_COUNT
];

364 
i
 = 0; i < 
SERVER_COUNT
; i++) {

365 
mt
[
i
] = 
√w
 
	`MaöThªad
(i, 
˛õ¡P‹ts
[i], 
qu‹umCfgSe˘i⁄
);

366 
mt
[
i
].
	`°¨t
();

367 
zk
[
i
] = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
˛õ¡P‹ts
[i], 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

370 
	`waôF‹AŒ
(
zk
, 
Sèãs
.
CONNECTED
);

372 
svrs
.
mt
 = mt;

373 
svrs
.
zk
 = zk;

374  
svrs
;

375 
	}
}

381 @
Te°


382 
public
 
	$ã°BadPìrAddªssInQu‹um
(Ë
throws
 
Ex˚±i⁄
 {

383 
Clõ¡Ba£
.
	`£tupTe°Env
();

386 
Layout
 
œyout
 =

387 
Loggî
.
	`gëRoŸLoggî
().
	`gëAµídî
("CONSOLE").
	`gëLayout
();

388 
ByãAºayOuçutSåóm
 
os
 = 
√w
 
	`ByãAºayOuçutSåóm
();

389 
WrôîAµídî
 
≠≥ndî
 = 
√w
 
	`WrôîAµídî
(
œyout
, 
os
);

390 
≠≥ndî
.
	`£tThªshﬁd
(
Levñ
.
WARN
);

391 
Loggî
 
qloggî
 = Loggî.
	`gëLoggî
("org.apache.zookeeper.server.quorum");

392 
qloggî
.
	`addAµídî
(
≠≥ndî
);

394 
åy
 {

395 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

396 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

398 
Såög
 
qu‹umCfgSe˘i⁄
 =

399 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

400 + ":" + 
P‹tAssignmít
.
	`unique
()

401 + "\n£rvî.2=„e.fii.foo.fum:" + 
P‹tAssignmít
.
	`unique
()

402 + ":" + 
P‹tAssignmít
.
	`unique
();

404 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

405 
q1
.
	`°¨t
();

407 
boﬁón
 
isup
 =

408 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

411 
As£π
.
	`as£πFÆ£
("SîvîÇevî camêup", 
isup
);

413 
q1
.
	`shutdown
();

415 
As£π
.
	`as£πTrue
("waiting for server 1 down",

416 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

417 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

419 } 
föÆly
 {

420 
qloggî
.
	`ªmoveAµídî
(
≠≥ndî
);

423 
LöeNumbîRódî
 
r
 = 
√w
 
	`LöeNumbîRódî
“ew 
	`SåögRódî
(
os
.
	`toSåög
()));

424 
Såög
 
löe
;

425 
boﬁón
 
found
 = 
Ál£
;

426 
P©ã∫
 
p
 =

427 
P©ã∫
.
	`compûe
(".*Cannot open channelÅo .*átÉlectionáddress .*");

428 (
löe
 = 
r
.
	`ªadLöe
()Ë!
nuŒ
) {

429 
found
 = 
p
.
	`m©chî
(
löe
).
	`m©ches
();

430 i‡(
found
) {

434 
As£π
.
	`as£πTrue
("com∂aö†abouàho°", 
found
);

435 
	}
}

440 @
Te°


441 
public
 
	$ã°Inc⁄si°ítPìrTy≥
(Ë
throws
 
Ex˚±i⁄
 {

442 
Clõ¡Ba£
.
	`£tupTe°Env
();

445 
Layout
 
œyout
 =

446 
Loggî
.
	`gëRoŸLoggî
().
	`gëAµídî
("CONSOLE").
	`gëLayout
();

447 
ByãAºayOuçutSåóm
 
os
 = 
√w
 
	`ByãAºayOuçutSåóm
();

448 
WrôîAµídî
 
≠≥ndî
 = 
√w
 
	`WrôîAµídî
(
œyout
, 
os
);

449 
≠≥ndî
.
	`£tThªshﬁd
(
Levñ
.
INFO
);

450 
Loggî
 
qloggî
 = Loggî.
	`gëLoggî
("org.apache.zookeeper.server.quorum");

451 
qloggî
.
	`addAµídî
(
≠≥ndî
);

455 
åy
 {

456 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

457 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

458 
föÆ
 
CLIENT_PORT_QP3
 = 
P‹tAssignmít
.
	`unique
();

460 
Såög
 
qu‹umCfgSe˘i⁄
 =

461 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

462 + ":" + 
P‹tAssignmít
.
	`unique
()

463 + "\n£rvî.2=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

464 + ":" + 
P‹tAssignmít
.
	`unique
()

465 + "\n£rvî.3=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

466 + ":" + 
P‹tAssignmít
.
	`unique
() + ":observer";

468 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

469 
MaöThªad
 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

470 
MaöThªad
 
q3
 = 
√w
 
	`MaöThªad
(3, 
CLIENT_PORT_QP3
, 
qu‹umCfgSe˘i⁄
);

471 
q1
.
	`°¨t
();

472 
q2
.
	`°¨t
();

473 
q3
.
	`°¨t
();

475 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

476 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

477 
CONNECTION_TIMEOUT
));

478 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

479 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

480 
CONNECTION_TIMEOUT
));

481 
As£π
.
	`as£πTrue
("waiting for server 3 being up",

482 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP3
,

483 
CONNECTION_TIMEOUT
));

485 
q1
.
	`shutdown
();

486 
q2
.
	`shutdown
();

487 
q3
.
	`shutdown
();

489 
As£π
.
	`as£πTrue
("waiting for server 1 down",

490 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

491 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

492 
As£π
.
	`as£πTrue
("waiting for server 2 down",

493 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

494 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

495 
As£π
.
	`as£πTrue
("waiting for server 3 down",

496 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP3
,

497 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

499 } 
föÆly
 {

500 
qloggî
.
	`ªmoveAµídî
(
≠≥ndî
);

503 
LöeNumbîRódî
 
r
 = 
√w
 
	`LöeNumbîRódî
“ew 
	`SåögRódî
(
os
.
	`toSåög
()));

504 
Såög
 
löe
;

505 
boﬁón
 
w¨nögPª£¡
 = 
Ál£
;

506 
boﬁón
 
deÁu…edToOb£rvî
 = 
Ál£
;

507 
P©ã∫
 
pW¨n
 =

508 
P©ã∫
.
	`compûe
(".*PeerÅype from serversÜist.* doesn't matchÖeerType.*");

509 
P©ã∫
 
pOb£rve
 = P©ã∫.
	`compûe
(".*OBSERVING.*");

510 (
löe
 = 
r
.
	`ªadLöe
()Ë!
nuŒ
) {

511 i‡(
pW¨n
.
	`m©chî
(
löe
).
	`m©ches
()) {

512 
w¨nögPª£¡
 = 
åue
;

514 i‡(
pOb£rve
.
	`m©chî
(
löe
).
	`m©ches
()) {

515 
deÁu…edToOb£rvî
 = 
åue
;

517 i‡(
w¨nögPª£¡
 && 
deÁu…edToOb£rvî
) {

521 
As£π
.
	`as£πTrue
("Should warnábout inconsistentÖeerÅype",

522 
w¨nögPª£¡
 && 
deÁu…edToOb£rvî
);

523 
	}
}

530 @
Te°


531 
public
 
	$ã°BadPackës
(Ë
throws
 
Ex˚±i⁄
 {

532 
Clõ¡Ba£
.
	`£tupTe°Env
();

533 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

534 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

535 
ñe˘i⁄P‹t1
 = 
P‹tAssignmít
.
	`unique
();

536 
ñe˘i⁄P‹t2
 = 
P‹tAssignmít
.
	`unique
();

537 
Såög
 
qu‹umCfgSe˘i⁄
 =

538 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

539 + ":" + 
ñe˘i⁄P‹t1


540 + "\n£rvî.2=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

541 + ":" + 
ñe˘i⁄P‹t2
;

543 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

544 
MaöThªad
 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

545 
q1
.
	`°¨t
();

546 
q2
.
	`°¨t
();

548 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

549 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

550 
CONNECTION_TIMEOUT
));

551 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

552 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

553 
CONNECTION_TIMEOUT
));

555 
byã
[] 
b
 = 
√w
 byte[4];

556 
Àngth
 = 1024*1024*1024;

557 
ByãBuf„r
 
buff
 = ByãBuf„r.
	`wøp
(
b
);

558 
buff
.
	`putI¡
(
Àngth
);

559 
buff
.
	`posôi⁄
(0);

560 
SockëCh™√l
 
s
 = SockëCh™√l.
	`›í
(
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
ñe˘i⁄P‹t1
));

561 
s
.
	`wrôe
(
buff
);

562 
s
.
	`˛o£
();

563 
buff
.
	`posôi⁄
(0);

564 
s
 = 
SockëCh™√l
.
	`›í
(
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
ñe˘i⁄P‹t2
));

565 
s
.
	`wrôe
(
buff
);

566 
s
.
	`˛o£
();

568 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

569 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

571 
zk
.
	`¸óã
("/foo_q1", "foob¨1".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

572 
Cª©eMode
.
PERSISTENT
);

573 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
("/foo_q1", 
nuŒ
,Çull)), "foobar1");

574 
zk
.
	`˛o£
();

575 
q1
.
	`shutdown
();

576 
q2
.
	`shutdown
();

577 
	}
}

584 @
Te°


585 
public
 
	$ã°Qu‹umDeÁu…s
(Ë
throws
 
Ex˚±i⁄
 {

586 
Clõ¡Ba£
.
	`£tupTe°Env
();

589 
Layout
 
œyout
 =

590 
Loggî
.
	`gëRoŸLoggî
().
	`gëAµídî
("CONSOLE").
	`gëLayout
();

591 
ByãAºayOuçutSåóm
 
os
 = 
√w
 
	`ByãAºayOuçutSåóm
();

592 
WrôîAµídî
 
≠≥ndî
 = 
√w
 
	`WrôîAµídî
(
œyout
, 
os
);

593 
≠≥ndî
.
	`£tImmedüãFlush
(
åue
);

594 
≠≥ndî
.
	`£tThªshﬁd
(
Levñ
.
INFO
);

595 
Loggî
 
zloggî
 = Loggî.
	`gëLoggî
("org.apache.zookeeper");

596 
zloggî
.
	`addAµídî
(
≠≥ndî
);

598 
åy
 {

599 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

600 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

602 
Såög
 
qu‹umCfgSe˘i⁄
 =

603 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

604 + ":" + 
P‹tAssignmít
.
	`unique
()

605 + "\n£rvî.2=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

606 + ":" + 
P‹tAssignmít
.
	`unique
();

608 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

609 
MaöThªad
 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

610 
q1
.
	`°¨t
();

611 
q2
.
	`°¨t
();

613 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

614 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

615 
CONNECTION_TIMEOUT
));

616 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

617 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

618 
CONNECTION_TIMEOUT
));

620 
q1
.
	`shutdown
();

621 
q2
.
	`shutdown
();

623 
As£π
.
	`as£πTrue
("waiting for server 1 down",

624 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

625 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

626 
As£π
.
	`as£πTrue
("waiting for server 2 down",

627 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

628 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

630 } 
föÆly
 {

631 
zloggî
.
	`ªmoveAµídî
(
≠≥ndî
);

633 
os
.
	`˛o£
();

634 
LöeNumbîRódî
 
r
 = 
√w
 
	`LöeNumbîRódî
“ew 
	`SåögRódî
(
os
.
	`toSåög
()));

635 
Såög
 
löe
;

636 
boﬁón
 
found
 = 
Ál£
;

637 
P©ã∫
 
p
 =

638 
P©ã∫
.
	`compûe
(".*FastLeaderElection.*");

639 (
löe
 = 
r
.
	`ªadLöe
()Ë!
nuŒ
) {

640 
found
 = 
p
.
	`m©chî
(
löe
).
	`m©ches
();

641 i‡(
found
) {

645 
As£π
.
	`as£πTrue
("Á°Àadîñe˘i⁄ u£d", 
found
);

646 
	}
}

651 @
Te°


652 
public
 
	$ã°Qu‹umPìrExôTime
(Ë
throws
 
Ex˚±i⁄
 {

653 
maxwaô
 = 3000;

654 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

655 
Såög
 
qu‹umCfgSe˘i⁄
 =

656 "£rvî.1=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

657 + ":" + 
P‹tAssignmít
.
	`unique
()

658 + "\n£rvî.2=127.0.0.1:" + 
P‹tAssignmít
.
	`unique
()

659 + ":" + 
P‹tAssignmít
.
	`unique
();

660 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

661 
q1
.
	`°¨t
();

663 
Thªad
.
	`¶ìp
(30000);

664 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

665 
q1
.
	`shutdown
();

666 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

667 i‡((
íd
 - 
°¨t
Ë> 
maxwaô
) {

668 
As£π
.
	`Áû
("Qu‹umPì∏took " + (
íd
 -
°¨t
) +

669 "Åÿshutdown,Éx≥˘ed " + 
maxwaô
);

671 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java

22 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

26 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gQu‹umBa£
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
public
 cœs†
	cQu‹umPìrTe°Ba£
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

41 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


42 .
gëLoggî
(
Qu‹umPìrTe°Ba£
.
˛ass
);

44 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

48 
public
 ˛as†
	cTe°QPMaö
 
exãnds
 
Qu‹umPìrMaö
 {

49 
public
 
	`shutdown
() {

51 i‡(
qu‹umPìr
 !
nuŒ
) {

52 
Qu‹umBa£
.
	`shutdown
(
qu‹umPìr
);

55 
	}
}

57 
public
 ˛as†
	cMaöThªad
 
im∂emíts
 
	gRu¬abÀ
 {

58 
föÆ
 
Fûe
 
	gc⁄fFûe
;

59 vﬁ©ûê
Te°QPMaö
 
	gmaö
;

61 
public
 
MaöThªad
(
myid
, 
˛õ¡P‹t
, 
Såög
 
qu‹umCfgSe˘i⁄
)

62 
throws
 
	gIOEx˚±i⁄
 {

63 
Fûe
 
	gtmpDú
 = 
Clõ¡Ba£
.
¸óãTmpDú
();

64 
	gLOG
.
öfo
("id = " + 
myid
 + "ÅmpDú = " + 
tmpDú
 + " clientPort = "

65 + 
˛õ¡P‹t
);

66 
	gc⁄fFûe
 = 
√w
 
Fûe
(
tmpDú
, "zoo.cfg");

68 
FûeWrôî
 
	gfwrôî
 = 
√w
 FûeWrôî(
c⁄fFûe
);

69 
	gfwrôî
.
wrôe
("tickTime=4000\n");

70 
	gfwrôî
.
wrôe
("initLimit=10\n");

71 
	gfwrôî
.
wrôe
("syncLimit=5\n");

73 
Fûe
 
	gd©aDú
 = 
√w
 Fûe(
tmpDú
, "data");

74 i‡(!
	gd©aDú
.
mkdú
()) {

75 
throw
 
√w
 
IOEx˚±i⁄
("U«bÀÅÿmkdú " + 
d©aDú
);

79 
Såög
 
	gdú
 = 
d©aDú
.
toSåög
();

80 
Såög
 
	go¢ame
 = 
java
.
œng
.
Sy°em
.
gëPr›îty
("os.name");

81 i‡(
	go¢ame
.
toLowîCa£
().
c⁄èös
("windows")) {

82 
	gdú
 = 
dú
.
ª∂a˚
('\\', '/');

84 
	gfwrôî
.
wrôe
("d©aDú=" + 
dú
 + "\n");

86 
	gfwrôî
.
wrôe
("˛õ¡P‹t=" + 
˛õ¡P‹t
 + "\n");

87 
	gfwrôî
.
wrôe
(
qu‹umCfgSe˘i⁄
 + "\n");

88 
	gfwrôî
.
Êush
();

89 
	gfwrôî
.
˛o£
();

91 
Fûe
 
	gmyidFûe
 = 
√w
 Fûe(
d©aDú
, "myid");

92 
	gfwrôî
 = 
√w
 
FûeWrôî
(
myidFûe
);

93 
	gfwrôî
.
wrôe
(
I¡egî
.
toSåög
(
myid
));

94 
	gfwrôî
.
Êush
();

95 
	gfwrôî
.
˛o£
();

98 
Thªad
 
	gcuºítThªad
;

100 
synchr⁄ized
 
public
 
°¨t
() {

101 
	gmaö
 = 
√w
 
Te°QPMaö
();

102 
	gcuºítThªad
 = 
√w
 
Thªad
(
this
);

103 
	gcuºítThªad
.
°¨t
();

106 
public
 
run
() {

107 
Såög
 
	g¨gs
[] = 
√w
 String[1];

108 
	g¨gs
[0] = 
c⁄fFûe
.
toSåög
();

109 
	gåy
 {

110 
	gmaö
.
öôülizeAndRun
(
¨gs
);

111 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

113 
	gLOG
.
îr‹
("u√x≥˘edÉx˚±i⁄ i¿run", 
e
);

114 } 
	gföÆly
 {

115 
	gcuºítThªad
 = 
nuŒ
;

119 
public
 
shutdown
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

120 
Thªad
 
	gt
 = 
cuºítThªad
;

121 i‡(
	gt
 !
nuŒ
 && 
t
.
isAlive
()) {

122 
maö
.
shutdown
();

123 
	gt
.
joö
(500);

127 
public
 
joö
(
timeout
Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

128 
Thªad
 
	gt
 = 
cuºítThªad
;

129 i‡(
	gt
 !
nuŒ
) {

130 
t
.
joö
(
timeout
);

134 
public
 
boﬁón
 
isAlive
() {

135 
Thªad
 
	gt
 = 
cuºítThªad
;

136  
	gt
 !
nuŒ
 && 
t
.
isAlive
();

139 
public
 
˛ón
() {

140 
	gClõ¡Ba£
.
ªcursiveDñëe
(
maö
.
qu‹umPìr
.
gëTxnFa˘‹y
()

141 .
gëD©aDú
());

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

23 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gœng
.
	gªÊe˘
.
	gFõld
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

31 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

32 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gI≈utArchive
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gOuçutArchive
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rI≈utSåóm
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gByãBuf„rOuçutSåóm
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxn
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umMaj
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
.
	gZxidUtûs
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eSessi⁄Txn
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

57 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

58 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

59 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

60 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

61 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

63 
public
 cœs†
	cZab1_0Te°
 {

64 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Zab1_0Te°
.
˛ass
);

66 
¥iv©e
 
föÆ
 cœs†
	cLódThªad
 
exãnds
 
	mThªad
 {

67 
¥iv©e
 
föÆ
 
Lódî
 
	mÀadî
;

69 
¥iv©e
 
LódThªad
(
Lódî
 
Àadî
) {

70 
	mthis
.
	mÀadî
 = 
Àadî
;

73 
public
 
run
() {

74 
	måy
 {

75 
	mÀadî
.
Àad
();

76 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

77 
	mLOG
.
öfo
("LódîÅhªad i¡îru±ed", 
e
);

78 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

79 
	mLOG
.
w¨n
("U√x≥˘edÉx˚±i⁄ i¿ÀadîÅhªad", 
e
);

80 } 
	mföÆly
 {

81 
	mÀadî
.
shutdown
("leadÉnded");

86 
¥iv©e
 
föÆ
 cœs†
	cMockLódî
 
exãnds
 
	gLódî
 {

88 
MockLódî
(
Qu‹umPìr
 
qp
, 
LódîZooKì≥rSîvî
 
zk
)

89 
throws
 
	gIOEx˚±i⁄
 {

90 
su≥r
(
qp
, 
zk
);

100 
public
 
gëCuºítEpochToPr›o£
() {

101  
	gïoch
;

105 
public
 
föÆ
 cœs†
	cFﬁlowîMockThªad
 
exãnds
 
	gThªad
 {

106 
¥iv©e
 
föÆ
 
Lódî
 
	gÀadî
;

107 
¥iv©e
 
föÆ
 
	gfﬁlowîSid
;

108 
public
 
	gïoch
 = -1;

109 
public
 
Såög
 
	gmsg
 = 
nuŒ
;

110 
¥iv©e
 
boﬁón
 
	g⁄lyGëEpochToPr›o£
;

112 
¥iv©e
 
FﬁlowîMockThªad
(
fﬁlowîSid
, 
Lódî
 
Àadî
, 
boﬁón
 
⁄lyGëEpochToPr›o£
) {

113 
	gthis
.
	gÀadî
 = 
Àadî
;

114 
	gthis
.
	gfﬁlowîSid
 = 
fﬁlowîSid
;

115 
	gthis
.
	g⁄lyGëEpochToPr›o£
 = 
⁄lyGëEpochToPr›o£
;

118 
public
 
run
() {

119 i‡(
	g⁄lyGëEpochToPr›o£
) {

120 
	gåy
 {

121 
	gïoch
 = 
Àadî
.
gëEpochToPr›o£
(
fﬁlowîSid
, 0);

122 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

125 
	gåy
{

126 
	gÀadî
.
waôF‹EpochAck
(
fﬁlowîSid
, 
√w
 
SèãSumm¨y
(0, 0));

127 
	gmsg
 = "FﬁlowîMockThªad (id = " + 
fﬁlowîSid
 + ")Ñeturned from waitForEpochAck";

128 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

133 @
Te°


134 
public
 
	$ã°LódîInC⁄√˘ögFﬁlowîs
(Ë
throws
 
Ex˚±i⁄
 {

135 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

136 
tmpDú
.
	`dñëe
();

137 
tmpDú
.
	`mkdú
();

138 
Lódî
 
Àadî
 = 
nuŒ
;

139 
åy
 {

140 
Qu‹umPìr
 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

141 
Àadî
 = 
	`¸óãLódî
(
tmpDú
, 
≥î
);

142 
≥î
.
Àadî
 =Üeader;

143 
≥î
.
	`£tAc˚±edEpoch
(5);

145 
FﬁlowîMockThªad
 
f1
 = 
√w
 
	`FﬁlowîMockThªad
(1, 
Àadî
, 
åue
);

146 
FﬁlowîMockThªad
 
f2
 = 
√w
 
	`FﬁlowîMockThªad
(2, 
Àadî
, 
åue
);

147 
f1
.
	`°¨t
();

148 
f2
.
	`°¨t
();

153 
f1
.
	`joö
(
Àadî
.
£lf
.
	`gëInôLimô
()*Àadî.£lf.
	`gëTickTime
() + 5000);

154 
f2
.
	`joö
(
Àadî
.
£lf
.
	`gëInôLimô
()*Àadî.£lf.
	`gëTickTime
() + 5000);

159 
åy
 {

160 
ïoch
 = 
Àadî
.
	`gëEpochToPr›o£
÷ódî.
£lf
.
	`gëId
(),Üódî.£lf.
	`gëAc˚±edEpoch
());

161 
As£π
.
	`as£πEquÆs
("Àadî gŸ wr⁄gÉpoch from gëEpochToPr›o£", 6, 
ïoch
);

162 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
){

163 
As£π
.
	`Áû
("leaderÅimed out in getEpochToPropose");

165 } 
föÆly
 {

166 i‡(
Àadî
 !
nuŒ
) {

167 
Àadî
.
	`shutdown
("end ofÅest");

169 
	`ªcursiveDñëe
(
tmpDú
);

171 
	}
}

187 @
Te°


188 
public
 
	$ã°La°Ac˚±edEpoch
(Ë
throws
 
Ex˚±i⁄
 {

189 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

190 
tmpDú
.
	`dñëe
();

191 
tmpDú
.
	`mkdú
();

192 
Lódî
 
Àadî
 = 
nuŒ
;

193 
LódThªad
 
ÀadThªad
 = 
nuŒ
;

194 
åy
 {

195 
Qu‹umPìr
 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

196 
Àadî
 = 
	`¸óãMockLódî
(
tmpDú
, 
≥î
);

197 
≥î
.
Àadî
 =Üeader;

198 
≥î
.
	`£tAc˚±edEpoch
(5);

199 
ÀadThªad
 = 
√w
 
	`LódThªad
(
Àadî
);

200 
ÀadThªad
.
	`°¨t
();

202 ((
MockLódî
Ë
Àadî
).
	`gëCuºítEpochToPr›o£
() != 6){

203 
Thªad
.
	`¶ìp
(20);

206 
åy
 {

207 
ïoch
 = 
Àadî
.
	`gëEpochToPr›o£
(1, 6);

208 
As£π
.
	`as£πEquÆs
("NewÖr›o£dÉpoch i†wr⁄g", 7, 
ïoch
);

209 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
){

210 
As£π
.
	`Áû
("Timed out in getEpochToPropose");

213 } 
föÆly
 {

214 i‡(
Àadî
 !
nuŒ
) {

215 
Àadî
.
	`shutdown
("end ofÅest");

217 i‡(
ÀadThªad
 !
nuŒ
) {

218 
ÀadThªad
.
	`öãºu±
();

219 
ÀadThªad
.
	`joö
();

221 
	`ªcursiveDñëe
(
tmpDú
);

223 
	}
}

225 @
Te°


226 
public
 
	$ã°LódîInEÀ˘ögFﬁlowîs
(Ë
throws
 
Ex˚±i⁄
 {

227 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

228 
tmpDú
.
	`dñëe
();

229 
tmpDú
.
	`mkdú
();

230 
Lódî
 
Àadî
 = 
nuŒ
;

231 
åy
 {

232 
Qu‹umPìr
 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

233 
Àadî
 = 
	`¸óãLódî
(
tmpDú
, 
≥î
);

234 
≥î
.
Àadî
 =Üeader;

236 
FﬁlowîMockThªad
 
f1
 = 
√w
 
	`FﬁlowîMockThªad
(1, 
Àadî
, 
Ál£
);

237 
FﬁlowîMockThªad
 
f2
 = 
√w
 
	`FﬁlowîMockThªad
(2, 
Àadî
, 
Ál£
);

240 
Àadî
.
ªadyToSèπ
 = 
åue
;

241 
Àadî
.
ÀadîSèãSumm¨y
 = 
√w
 
	`SèãSumm¨y
÷ódî.
£lf
.
	`gëCuºítEpoch
(),Üódî.
zk
.
	`gëLa°Pro˚s£dZxid
());

243 
f1
.
	`°¨t
();

244 
f2
.
	`°¨t
();

248 
f1
.
	`joö
(
Àadî
.
£lf
.
	`gëInôLimô
()*Àadî.£lf.
	`gëTickTime
() + 5000);

249 
f2
.
	`joö
(
Àadî
.
£lf
.
	`gëInôLimô
()*Àadî.£lf.
	`gëTickTime
() + 5000);

252 
As£π
.
	`as£πTrue
(
f1
.
msg
 + " wôhouàwaôög f‹Üódî", f1.msg =
nuŒ
);

253 
As£π
.
	`as£πTrue
(
f2
.
msg
 + " wôhouàwaôög f‹Üódî", f2.msg =
nuŒ
);

254 } 
föÆly
 {

255 i‡(
Àadî
 !
nuŒ
) {

256 
Àadî
.
	`shutdown
("end ofÅest");

258 
	`ªcursiveDñëe
(
tmpDú
);

260 
	}
}

262 
¥iv©e
 
föÆ
 cœs†
	cNuŒSîvîCnxnFa˘‹y
 
exãnds
 
	gSîvîCnxnFa˘‹y
 {

263 
public
 
°¨tup
(
ZooKì≥rSîvî
 
zkSîvî
Ë
throws
 
	gIOEx˚±i⁄
,

264 
	gI¡îru±edEx˚±i⁄
 {

266 
public
 
°¨t
() {

268 
public
 
shutdown
() {

270 
public
 
£tMaxClõ¡CnxnsPîHo°
(
max
) {

272 
public
 
joö
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

274 
public
 
gëMaxClõ¡CnxnsPîHo°
() {

277 
public
 
gëLoˇlP‹t
() {

280 
public
 
I√tSockëAddªss
 
gëLoˇlAddªss
() {

281  
	gnuŒ
;

283 
public
 
	gIãøbÀ
<
	gSîvîCnxn
> 
gëC⁄√˘i⁄s
() {

284  
	gnuŒ
;

286 
public
 
c⁄figuª
(
I√tSockëAddªss
 
addr
, 
maxClõ¡Cnxns
)

287 
throws
 
	gIOEx˚±i⁄
 {

289 
public
 
˛o£Sessi⁄
(
£ssi⁄Id
) {

291 
public
 
˛o£AŒ
() {

293 @
Ovîride


294 
public
 
gëNumAliveC⁄√˘i⁄s
() {

298 
	gSockë
[] 
	$gëSockëPaú
(Ë
throws
 
IOEx˚±i⁄
 {

299 
SîvîSockë
 
ss
 = 
√w
 
	`SîvîSockë
();

300 
ss
.
	`böd
(
nuŒ
);

301 
I√tSockëAddªss
 
ídPoöt
 = (I√tSockëAddªssË
ss
.
	`gëLoˇlSockëAddªss
();

302 
Sockë
 
s
 = 
√w
 
	`Sockë
(
ídPoöt
.
	`gëAddªss
(),ÉndPoöt.
	`gëP‹t
());

303  
√w
 
Sockë
[] { 
s
, 
ss
.
	`ac˚±
() };

304 
	}
}

305 
	$ªadPackëSkùpögPög
(
I≈utArchive
 
ü
, 
Qu‹umPackë
 
qp
Ë
throws
 
IOEx˚±i⁄
 {

306 
åue
) {

307 
ü
.
	`ªadRec‹d
(
qp
, 
nuŒ
);

308 i‡(
qp
.
	`gëTy≥
(Ë!
Lódî
.
PING
) {

312 
	}
}

314 
public
 
öãrÁ˚
 
	gLódîC⁄vîßti⁄
 {

315 
c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Lódî
 
l
Ë
throws
 
	gEx˚±i⁄
;

318 
public
 
öãrÁ˚
 
	gP›uœãdLódîC⁄vîßti⁄
 {

319 
c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Lódî
 
l
, 
zxid
Ë
throws
 
	gEx˚±i⁄
;

322 
public
 
öãrÁ˚
 
	gFﬁlowîC⁄vîßti⁄
 {

323 
c⁄vî£WôhFﬁlowî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Fﬁlowî
 
f
Ë
throws
 
	gEx˚±i⁄
;

326 
public
 
	$ã°LódîC⁄vîßti⁄
(
LódîC⁄vîßti⁄
 
c⁄vîßti⁄
Ë
throws
 
Ex˚±i⁄
 {

327 
Sockë
 
∑ú
[] = 
	`gëSockëPaú
();

328 
Sockë
 
ÀadîSockë
 = 
∑ú
[0];

329 
Sockë
 
fﬁlowîSockë
 = 
∑ú
[1];

330 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

331 
tmpDú
.
	`dñëe
();

332 
tmpDú
.
	`mkdú
();

333 
LódThªad
 
ÀadThªad
 = 
nuŒ
;

334 
Lódî
 
Àadî
 = 
nuŒ
;

335 
åy
 {

336 
Qu‹umPìr
 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

337 
Àadî
 = 
	`¸óãLódî
(
tmpDú
, 
≥î
);

338 
≥î
.
Àadî
 =Üeader;

339 
ÀadThªad
 = 
√w
 
	`LódThªad
(
Àadî
);

340 
ÀadThªad
.
	`°¨t
();

342 !
Àadî
.
ªadyToSèπ
) {

343 
Thªad
.
	`¶ìp
(20);

346 
Ló∫îH™dÀr
 
lh
 = 
√w
 
	`Ló∫îH™dÀr
(
ÀadîSockë
, 
Àadî
);

347 
lh
.
	`°¨t
();

348 
ÀadîSockë
.
	`£tSoTimeout
(4000);

350 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
fﬁlowîSockë


351 .
	`gëI≈utSåóm
());

352 
OuçutArchive
 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
fﬁlowîSockë


353 .
	`gëOuçutSåóm
());

355 
c⁄vîßti⁄
.
	`c⁄vî£WôhLódî
(
ü
, 
ﬂ
, 
Àadî
);

356 } 
föÆly
 {

357 i‡(
Àadî
 !
nuŒ
) {

358 
Àadî
.
	`shutdown
("end ofÅest");

360 i‡(
ÀadThªad
 !
nuŒ
) {

361 
ÀadThªad
.
	`öãºu±
();

362 
ÀadThªad
.
	`joö
();

364 
	`ªcursiveDñëe
(
tmpDú
);

366 
	}
}

368 
public
 
	$ã°P›uœãdLódîC⁄vîßti⁄
(
P›uœãdLódîC⁄vîßti⁄
 
c⁄vîßti⁄
, 
›s
Ë
throws
 
Ex˚±i⁄
 {

369 
Sockë
 
∑ú
[] = 
	`gëSockëPaú
();

370 
Sockë
 
ÀadîSockë
 = 
∑ú
[0];

371 
Sockë
 
fﬁlowîSockë
 = 
∑ú
[1];

372 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

373 
tmpDú
.
	`dñëe
();

374 
tmpDú
.
	`mkdú
();

375 
LódThªad
 
ÀadThªad
 = 
nuŒ
;

376 
Lódî
 
Àadî
 = 
nuŒ
;

377 
åy
 {

379 
FûeTxnS«pLog
 
¢≠Log
 = 
√w
 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir);

380 
ZKD©aba£
 
zkDb
 = 
√w
 
	`ZKD©aba£
(
¢≠Log
);

382 
As£π
.
	`as£πTrue
(
›s
 >= 1);

383 
zxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 0);

384 
i
 = 1; i <
›s
; i++){

385 
zxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 
i
);

386 
Såög
 
∑th
 = "/foo-"+ 
i
;

387 
zkDb
.
	`¥o˚ssTxn
(
√w
 
	`TxnHódî
(13,1000+
i
,
zxid
,30+i,
ZooDefs
.
OpCode
.
¸óã
),

388 
√w
 
	`Cª©eTxn
(
∑th
, "Âjwaßlsohîe".
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Ál£
, 1));

389 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

390 
As£π
.
	`as£πEquÆs
("Âjwaßlsohîe", 
√w
 
	`Såög
(
zkDb
.
	`gëD©a
(
∑th
, 
°©
, 
nuŒ
)));

392 
As£π
.
	`as£πTrue
(
zxid
 > 
ZxidUtûs
.
	`makeZxid
(1, 0));

395 
¢≠Log
.
	`ßve
(
zkDb
.
	`gëD©aTªe
(), zkDb.
	`gëSessi⁄WôhTimeOuts
());

396 
¢≠Log
.
	`˛o£
();

398 
Qu‹umPìr
 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

400 
Àadî
 = 
	`¸óãLódî
(
tmpDú
, 
≥î
);

401 
≥î
.
Àadî
 =Üeader;

404 
≥î
.
	`£tAc˚±edEpoch
(1);

405 
≥î
.
	`£tCuºítEpoch
(1);

408 
ÀadThªad
 = 
√w
 
	`LódThªad
(
Àadî
);

409 
ÀadThªad
.
	`°¨t
();

411 
Àadî
.
˙xAc˚±‹
 =
nuŒ
 || !Àadî.˙xAc˚±‹.
	`isAlive
()) {

412 
Thªad
.
	`¶ìp
(20);

415 
Ló∫îH™dÀr
 
lh
 = 
√w
 
	`Ló∫îH™dÀr
(
ÀadîSockë
, 
Àadî
);

416 
lh
.
	`°¨t
();

417 
ÀadîSockë
.
	`£tSoTimeout
(4000);

419 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
fﬁlowîSockë


420 .
	`gëI≈utSåóm
());

421 
OuçutArchive
 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
fﬁlowîSockë


422 .
	`gëOuçutSåóm
());

424 
c⁄vîßti⁄
.
	`c⁄vî£WôhLódî
(
ü
, 
ﬂ
, 
Àadî
, 
zxid
);

425 } 
föÆly
 {

426 i‡(
Àadî
 !
nuŒ
) {

427 
Àadî
.
	`shutdown
("end ofÅest");

429 i‡(
ÀadThªad
 !
nuŒ
) {

430 
ÀadThªad
.
	`öãºu±
();

431 
ÀadThªad
.
	`joö
();

433 
	`ªcursiveDñëe
(
tmpDú
);

435 
	}
}

438 
public
 
	$ã°FﬁlowîC⁄vîßti⁄
(
FﬁlowîC⁄vîßti⁄
 
c⁄vîßti⁄
Ë
throws
 
Ex˚±i⁄
 {

439 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

440 
tmpDú
.
	`dñëe
();

441 
tmpDú
.
	`mkdú
();

442 
Thªad
 
fﬁlowîThªad
 = 
nuŒ
;

443 
C⁄vîßbÀFﬁlowî
 
fﬁlowî
 = 
nuŒ
;

444 
Qu‹umPìr
 
≥î
 = 
nuŒ
;

445 
åy
 {

446 
≥î
 = 
	`¸óãQu‹umPìr
(
tmpDú
);

447 
fﬁlowî
 = 
	`¸óãFﬁlowî
(
tmpDú
, 
≥î
);

448 
≥î
.
fﬁlowî
 = follower;

450 
SîvîSockë
 
ss
 = 
√w
 
	`SîvîSockë
();

451 
ss
.
	`böd
(
nuŒ
);

452 
fﬁlowî
.
	`£tLódîSockëAddªss
((
I√tSockëAddªss
)
ss
.
	`gëLoˇlSockëAddªss
());

453 
föÆ
 
Fﬁlowî
 
fﬁlowîF‹Thªad
 = 
fﬁlowî
;

455 
fﬁlowîThªad
 = 
√w
 
	`Thªad
() {

456 
public
 
	`run
() {

457 
åy
 {

458 
fﬁlowîF‹Thªad
.
	`fﬁlowLódî
();

459 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

460 
LOG
.
	`öfo
("FﬁlowîÅhªad i¡îru±ed", 
e
);

461 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

462 
LOG
.
	`w¨n
("U√x≥˘edÉx˚±i⁄ i¿fﬁlowîÅhªad", 
e
);

466 
fﬁlowîThªad
.
	`°¨t
();

467 
Sockë
 
ÀadîSockë
 = 
ss
.
	`ac˚±
();

469 
I≈utArchive
 
ü
 = 
Bö¨yI≈utArchive
.
	`gëArchive
(
ÀadîSockë


470 .
	`gëI≈utSåóm
());

471 
OuçutArchive
 
ﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
ÀadîSockë


472 .
	`gëOuçutSåóm
());

474 
c⁄vîßti⁄
.
	`c⁄vî£WôhFﬁlowî
(
ü
, 
ﬂ
, 
fﬁlowî
);

475 } 
föÆly
 {

476 i‡(
fﬁlowî
 !
nuŒ
) {

477 
fﬁlowî
.
	`shutdown
();

479 i‡(
fﬁlowîThªad
 !
nuŒ
) {

480 
fﬁlowîThªad
.
	`öãºu±
();

481 
fﬁlowîThªad
.
	`joö
();

483 i‡(
≥î
 !
nuŒ
) {

484 
≥î
.
	`shutdown
();

486 
	`ªcursiveDñëe
(
tmpDú
);

488 
	}
}

490 @
Te°


491 
public
 
	$ã°U¬e˚sßryS«p
(Ë
throws
 
Ex˚±i⁄
 {

492 
	`ã°P›uœãdLódîC⁄vîßti⁄
(
√w
 
	`P›uœãdLódîC⁄vîßti⁄
() {

493 @
Ovîride


494 
public
 
	`c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
,

495 
Lódî
 
l
, 
zxid
Ë
throws
 
Ex˚±i⁄
 {

497 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

498 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëCuºítEpoch
());

501 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
(1, 0x10000);

502 
byã
 
liByãs
[] = 
√w
 byte[12];

503 
ByãBuf„rOuçutSåóm
.
	`ªc‹d2ByãBuf„r
(
li
,

504 
ByãBuf„r
.
	`wøp
(
liByãs
));

505 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
FOLLOWERINFO
, 1,

506 
liByãs
, 
nuŒ
);

507 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

509 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

510 
As£π
.
	`as£πEquÆs
(
Lódî
.
LEADERINFO
, 
qp
.
	`gëTy≥
());

511 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(2, 0), 
qp
.
	`gëZxid
());

512 
As£π
.
	`as£πEquÆs
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
(),

514 
As£π
.
	`as£πEquÆs
(2, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

515 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëCuºítEpoch
());

517 
byã
 
ïochByãs
[] = 
√w
 byte[4];

518 
föÆ
 
ByãBuf„r
 
wøµedEpochByãs
 = ByãBuf„r.
	`wøp
(
ïochByãs
);

519 
wøµedEpochByãs
.
	`putI¡
(1);

520 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACKEPOCH
, 
zxid
, 
ïochByãs
, 
nuŒ
);

521 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

523 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

524 
As£π
.
	`as£πEquÆs
(
Lódî
.
DIFF
, 
qp
.
	`gëTy≥
());

528 
	}
}

530 @
Te°


531 
public
 
	$ã°N‹mÆFﬁlowîRun
(Ë
throws
 
Ex˚±i⁄
 {

532 
	`ã°FﬁlowîC⁄vîßti⁄
(
√w
 
	`FﬁlowîC⁄vîßti⁄
() {

533 @
Ovîride


534 
public
 
	`c⁄vî£WôhFﬁlowî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
,

535 
Fﬁlowî
 
f
Ë
throws
 
Ex˚±i⁄
 {

536 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

537 
tmpDú
.
	`dñëe
();

538 
tmpDú
.
	`mkdú
();

539 
Fûe
 
logDú
 = 
f
.
fzk
.
	`gëTxnLogFa˘‹y
().
	`gëD©aDú
().
	`gëP¨ítFûe
();

540 
Fûe
 
¢≠Dú
 = 
f
.
fzk
.
	`gëTxnLogFa˘‹y
().
	`gëS«pDú
().
	`gëP¨ítFûe
();

541 
åy
 {

542 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

543 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëCuºítEpoch
());

546 
ZKD©aba£
 
zkDb
 = 
√w
 
	`ZKD©aba£
“ew 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir));

547 
föÆ
 
fú°Zxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 1);

548 
zkDb
.
	`¥o˚ssTxn
(
√w
 
	`TxnHódî
(13, 1313, 
fú°Zxid
, 33, 
ZooDefs
.
OpCode
.
¸óã
),Çew 
	`Cª©eTxn
("/foo", "d©a1".
	`gëByãs
(), ZooDefs.
Ids
.
OPEN_ACL_UNSAFE
, 
Ál£
, 1));

549 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

550 
As£π
.
	`as£πEquÆs
("d©a1", 
√w
 
	`Såög
(
zkDb
.
	`gëD©a
("/foo", 
°©
, 
nuŒ
)));

552 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

553 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

554 
As£π
.
	`as£πEquÆs
(
Lódî
.
FOLLOWERINFO
, 
qp
.
	`gëTy≥
());

555 
As£π
.
	`as£πEquÆs
(
qp
.
	`gëZxid
(), 0);

556 
Ló∫îInfo
 
À¨nInfo
 = 
√w
 
	`Ló∫îInfo
();

557 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()), 
À¨nInfo
);

558 
As£π
.
	`as£πEquÆs
(
À¨nInfo
.
	`gëPrŸocﬁVîsi⁄
(), 0x10000);

559 
As£π
.
	`as£πEquÆs
(
À¨nInfo
.
	`gëSîvîid
(), 0);

562 
qp
.
	`£tTy≥
(
Lódî
.
LEADERINFO
);

563 
qp
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(1, 0));

564 
byã
 
¥ŸoByãs
[] = 
√w
 byte[4];

565 
ByãBuf„r
.
	`wøp
(
¥ŸoByãs
).
	`putI¡
(0x10000);

566 
qp
.
	`£tD©a
(
¥ŸoByãs
);

567 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

569 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

570 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACKEPOCH
, 
qp
.
	`gëTy≥
());

571 
As£π
.
	`as£πEquÆs
(0, 
qp
.
	`gëZxid
());

572 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(0, 0), 
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
());

573 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

574 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëCuºítEpoch
());

577 
qp
.
	`£tTy≥
(
Lódî
.
SNAP
);

578 
qp
.
	`£tD©a
(
√w
 
byã
[0]);

579 
qp
.
	`£tZxid
(
zkDb
.
	`gëD©aTªeLa°Pro˚s£dZxid
());

580 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

581 
zkDb
.
	`£rülizeS«pshŸ
(
ﬂ
);

582 
ﬂ
.
	`wrôeSåög
("BíWasHîe", 
nuŒ
);

583 
qp
.
	`£tTy≥
(
Lódî
.
NEWLEADER
);

584 
qp
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(1, 0));

585 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

588 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

589 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACK
, 
qp
.
	`gëTy≥
());

590 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

591 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

592 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëCuºítEpoch
());

594 
As£π
.
	`as£πEquÆs
(
fú°Zxid
, 
f
.
fzk
.
	`gëLa°Pro˚s£dZxid
());

597 
ZKD©aba£
 
zkDb2
 = 
√w
 
	`ZKD©aba£
“ew 
	`FûeTxnS«pLog
(
logDú
, 
¢≠Dú
));

598 
œ°Zxid
 = 
zkDb2
.
	`lﬂdD©aBa£
();

599 
As£π
.
	`as£πEquÆs
("d©a1", 
√w
 
	`Såög
(
zkDb2
.
	`gëD©a
("/foo", 
°©
, 
nuŒ
)));

600 
As£π
.
	`as£πEquÆs
(
fú°Zxid
, 
œ°Zxid
);

603 
¥›oßlZxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 1000);

604 
	`¥›o£SëD©a
(
qp
, 
¥›oßlZxid
, "data2", 2);

605 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

608 ˛as†
	cTøckîW©chî
 
im∂emíts
 
W©chî
 {

609 
boﬁón
 
ch™ged
;

610 
synchr⁄ized
 
	`waôF‹Ch™ge
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

611 !
ch™ged
) {

612 
	`waô
();

615 @
Ovîride


616 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

617 i‡(
evít
.
	`gëTy≥
(Ë=
EvítTy≥
.
NodeD©aCh™ged
) {

618 
	`synchr⁄ized
(
this
) {

619 
ch™ged
 = 
åue
;

620 
	`nŸifyAŒ
();

624 
synchr⁄ized
 
public
 
boﬁón
 
	`ch™ged
() {

625  
ch™ged
;

629 
TøckîW©chî
 
w©chî
 = 
√w
 
	`TøckîW©chî
();

632 
As£π
.
	`as£πEquÆs
("d©a1", 
√w
 
	`Såög
(
f
.
fzk
.
	`gëZKD©aba£
().
	`gëD©a
("/foo", 
°©
, 
w©chî
)));

635 
qp
.
	`£tTy≥
(
Lódî
.
COMMIT
);

636 
qp
.
	`£tZxid
(
¥›oßlZxid
);

637 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

639 
qp
.
	`£tTy≥
(
Lódî
.
UPTODATE
);

640 
qp
.
	`£tZxid
(0);

641 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

644 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

645 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACK
, 
qp
.
	`gëTy≥
());

646 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

648 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

649 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACK
, 
qp
.
	`gëTy≥
());

650 
As£π
.
	`as£πEquÆs
(
¥›oßlZxid
, 
qp
.
	`gëZxid
());

652 
w©chî
.
	`waôF‹Ch™ge
();

653 
As£π
.
	`as£πEquÆs
("d©a2", 
√w
 
	`Såög
(
f
.
fzk
.
	`gëZKD©aba£
().
	`gëD©a
("/foo", 
°©
, 
nuŒ
)));

656 
zkDb2
 = 
√w
 
	`ZKD©aba£
“ew 
	`FûeTxnS«pLog
(
logDú
, 
¢≠Dú
));

657 
œ°Zxid
 = 
zkDb2
.
	`lﬂdD©aBa£
();

658 
As£π
.
	`as£πEquÆs
("d©a2", 
√w
 
	`Såög
(
zkDb2
.
	`gëD©a
("/foo", 
°©
, 
nuŒ
)));

659 
As£π
.
	`as£πEquÆs
(
¥›oßlZxid
, 
œ°Zxid
);

660 } 
föÆly
 {

661 
	`ªcursiveDñëe
(
tmpDú
);

666 
¥iv©e
 
	`¥›o£SëD©a
(
Qu‹umPackë
 
qp
, 
zxid
, 
Såög
 
d©a
, 
vîsi⁄
Ë
throws
 
IOEx˚±i⁄
 {

667 
qp
.
	`£tTy≥
(
Lódî
.
PROPOSAL
);

668 
qp
.
	`£tZxid
(
zxid
);

669 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
(4, 1414, 
qp
.
	`gëZxid
(), 55, 
ZooDefs
.
OpCode
.
£tD©a
);

670 
SëD©aTxn
 
sdt
 = 
√w
 
	`SëD©aTxn
("/foo", 
d©a
.
	`gëByãs
(), 
vîsi⁄
);

671 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

672 
OuçutArchive
 
bﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
baos
);

673 
bﬂ
.
	`wrôeRec‹d
(
hdr
, 
nuŒ
);

674 
bﬂ
.
	`wrôeRec‹d
(
sdt
, 
nuŒ
);

675 
qp
.
	`£tD©a
(
baos
.
	`toByãAºay
());

678 
	}
}

680 @
Te°


681 
public
 
	$ã°N‹mÆFﬁlowîRunWôhDiff
(Ë
throws
 
Ex˚±i⁄
 {

682 
	`ã°FﬁlowîC⁄vîßti⁄
(
√w
 
	`FﬁlowîC⁄vîßti⁄
() {

683 @
Ovîride


684 
public
 
	`c⁄vî£WôhFﬁlowî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
,

685 
Fﬁlowî
 
f
Ë
throws
 
Ex˚±i⁄
 {

686 
Fûe
 
tmpDú
 = Fûe.
	`¸óãTempFûe
("test", "dir");

687 
tmpDú
.
	`dñëe
();

688 
tmpDú
.
	`mkdú
();

689 
Fûe
 
logDú
 = 
f
.
fzk
.
	`gëTxnLogFa˘‹y
().
	`gëD©aDú
().
	`gëP¨ítFûe
();

690 
Fûe
 
¢≠Dú
 = 
f
.
fzk
.
	`gëTxnLogFa˘‹y
().
	`gëS«pDú
().
	`gëP¨ítFûe
();

691 
åy
 {

692 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

693 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëCuºítEpoch
());

696 
ZKD©aba£
 
zkDb
 = 
√w
 
	`ZKD©aba£
“ew 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir));

697 
föÆ
 
fú°Zxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 1);

698 
zkDb
.
	`¥o˚ssTxn
(
√w
 
	`TxnHódî
(13, 1313, 
fú°Zxid
, 33, 
ZooDefs
.
OpCode
.
¸óã
),Çew 
	`Cª©eTxn
("/foo", "d©a1".
	`gëByãs
(), ZooDefs.
Ids
.
OPEN_ACL_UNSAFE
, 
Ál£
, 1));

699 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

700 
As£π
.
	`as£πEquÆs
("d©a1", 
√w
 
	`Såög
(
zkDb
.
	`gëD©a
("/foo", 
°©
, 
nuŒ
)));

702 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
();

703 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

704 
As£π
.
	`as£πEquÆs
(
Lódî
.
FOLLOWERINFO
, 
qp
.
	`gëTy≥
());

705 
As£π
.
	`as£πEquÆs
(
qp
.
	`gëZxid
(), 0);

706 
Ló∫îInfo
 
À¨nInfo
 = 
√w
 
	`Ló∫îInfo
();

707 
ByãBuf„rI≈utSåóm
.
	`byãBuf„r2Rec‹d
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()), 
À¨nInfo
);

708 
As£π
.
	`as£πEquÆs
(
À¨nInfo
.
	`gëPrŸocﬁVîsi⁄
(), 0x10000);

709 
As£π
.
	`as£πEquÆs
(
À¨nInfo
.
	`gëSîvîid
(), 0);

712 
qp
.
	`£tTy≥
(
Lódî
.
LEADERINFO
);

713 
qp
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(1, 0));

714 
byã
 
¥ŸoByãs
[] = 
√w
 byte[4];

715 
ByãBuf„r
.
	`wøp
(
¥ŸoByãs
).
	`putI¡
(0x10000);

716 
qp
.
	`£tD©a
(
¥ŸoByãs
);

717 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

719 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

720 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACKEPOCH
, 
qp
.
	`gëTy≥
());

721 
As£π
.
	`as£πEquÆs
(0, 
qp
.
	`gëZxid
());

722 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(0, 0), 
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
());

723 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

724 
As£π
.
	`as£πEquÆs
(0, 
f
.
£lf
.
	`gëCuºítEpoch
());

727 
qp
.
	`£tTy≥
(
Lódî
.
DIFF
);

728 
qp
.
	`£tD©a
(
√w
 
byã
[0]);

729 
qp
.
	`£tZxid
(
zkDb
.
	`gëD©aTªeLa°Pro˚s£dZxid
());

730 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

731 
föÆ
 
¸óãSessi⁄Zxid
 = 
ZxidUtûs
.
	`makeZxid
(1, 2);

732 
	`¥›o£NewSessi⁄
(
qp
, 
¸óãSessi⁄Zxid
, 0x333);

733 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

734 
qp
.
	`£tTy≥
(
Lódî
.
COMMIT
);

735 
qp
.
	`£tZxid
(
¸óãSessi⁄Zxid
);

736 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

737 
qp
.
	`£tTy≥
(
Lódî
.
NEWLEADER
);

738 
qp
.
	`£tZxid
(
ZxidUtûs
.
	`makeZxid
(1, 0));

739 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

740 
qp
.
	`£tTy≥
(
Lódî
.
UPTODATE
);

741 
qp
.
	`£tZxid
(0);

742 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

745 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

746 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACK
, 
qp
.
	`gëTy≥
());

747 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

751 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

752 
As£π
.
	`as£πEquÆs
(
Lódî
.
ACK
, 
qp
.
	`gëTy≥
());

753 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

754 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëAc˚±edEpoch
());

755 
As£π
.
	`as£πEquÆs
(1, 
f
.
£lf
.
	`gëCuºítEpoch
());

757 
As£π
.
	`as£πEquÆs
(
¸óãSessi⁄Zxid
, 
f
.
fzk
.
	`gëLa°Pro˚s£dZxid
());

760 
ZKD©aba£
 
zkDb2
 = 
√w
 
	`ZKD©aba£
“ew 
	`FûeTxnS«pLog
(
logDú
, 
¢≠Dú
));

761 
zkDb2
.
	`lﬂdD©aBa£
();

762 
LOG
.
	`öfo
("zkdb2 sessi⁄s:" + 
zkDb2
.
	`gëSessi⁄s
());

763 
As£π
.
	`as£πNŸNuŒ
(
zkDb2
.
	`gëSessi⁄WôhTimeOuts
().
	`gë
(4L));

764 } 
föÆly
 {

765 
	`ªcursiveDñëe
(
tmpDú
);

770 
¥iv©e
 
	`¥›o£NewSessi⁄
(
Qu‹umPackë
 
qp
, 
zxid
, 
£ssi⁄Id
Ë
throws
 
IOEx˚±i⁄
 {

771 
qp
.
	`£tTy≥
(
Lódî
.
PROPOSAL
);

772 
qp
.
	`£tZxid
(
zxid
);

773 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
(4, 1414, 
qp
.
	`gëZxid
(), 55, 
ZooDefs
.
OpCode
.
¸óãSessi⁄
);

774 
Cª©eSessi⁄Txn
 
c°
 = 
√w
 
	`Cª©eSessi⁄Txn
(30000);

775 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

776 
OuçutArchive
 
bﬂ
 = 
Bö¨yOuçutArchive
.
	`gëArchive
(
baos
);

777 
bﬂ
.
	`wrôeRec‹d
(
hdr
, 
nuŒ
);

778 
bﬂ
.
	`wrôeRec‹d
(
c°
, 
nuŒ
);

779 
qp
.
	`£tD©a
(
baos
.
	`toByãAºay
());

782 
	}
}

784 @
Te°


785 
public
 
	$ã°N‹mÆRun
(Ë
throws
 
Ex˚±i⁄
 {

786 
	`ã°LódîC⁄vîßti⁄
(
√w
 
	`LódîC⁄vîßti⁄
() {

787 
public
 
	`c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Lódî
 
l
)

788 
throws
 
IOEx˚±i⁄
 {

789 
As£π
.
	`as£πEquÆs
(0, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

790 
As£π
.
	`as£πEquÆs
(0, 
l
.
£lf
.
	`gëCuºítEpoch
());

793 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
(1, 0x10000);

794 
byã
 
liByãs
[] = 
√w
 byte[12];

795 
ByãBuf„rOuçutSåóm
.
	`ªc‹d2ByãBuf„r
(
li
,

796 
ByãBuf„r
.
	`wøp
(
liByãs
));

797 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
FOLLOWERINFO
, 0,

798 
liByãs
, 
nuŒ
);

799 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

801 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

802 
As£π
.
	`as£πEquÆs
(
Lódî
.
LEADERINFO
, 
qp
.
	`gëTy≥
());

803 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

804 
As£π
.
	`as£πEquÆs
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
(),

806 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

807 
As£π
.
	`as£πEquÆs
(0, 
l
.
£lf
.
	`gëCuºítEpoch
());

809 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACKEPOCH
, 0,Çew 
byã
[4], 
nuŒ
);

810 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

812 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

813 
As£π
.
	`as£πEquÆs
(
Lódî
.
DIFF
, 
qp
.
	`gëTy≥
());

815 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

816 
As£π
.
	`as£πEquÆs
(
Lódî
.
NEWLEADER
, 
qp
.
	`gëTy≥
());

817 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

818 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

819 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëCuºítEpoch
());

821 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, qp.
	`gëZxid
(), 
nuŒ
,Çull);

822 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

824 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

825 
As£π
.
	`as£πEquÆs
(
Lódî
.
NEWLEADER
, 
qp
.
	`gëTy≥
());

826 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

827 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëAc˚±edEpoch
());

828 
As£π
.
	`as£πEquÆs
(1, 
l
.
£lf
.
	`gëCuºítEpoch
());

830 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, qp.
	`gëZxid
(), 
nuŒ
,Çull);

831 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

833 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

834 
As£π
.
	`as£πEquÆs
(
Lódî
.
UPTODATE
, 
qp
.
	`gëTy≥
());

837 
	}
}

839 
¥iv©e
 
	$de£rülizeS«pshŸ
(
I≈utArchive
 
ü
)

840 
throws
 
IOEx˚±i⁄
 {

841 
ZKD©aba£
 
zkdb
 = 
√w
 
	`ZKD©aba£
(
nuŒ
);

842 
zkdb
.
	`de£rülizeS«pshŸ
(
ü
);

843 
Såög
 
sig«tuª
 = 
ü
.
	`ªadSåög
("signature");

844 
	`as£πEquÆs
("BíWasHîe", 
sig«tuª
);

845 
	}
}

847 @
Te°


848 
public
 
	$ã°LódîBehöd
(Ë
throws
 
Ex˚±i⁄
 {

849 
	`ã°LódîC⁄vîßti⁄
(
√w
 
	`LódîC⁄vîßti⁄
() {

850 
public
 
	`c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Lódî
 
l
)

851 
throws
 
IOEx˚±i⁄
 {

853 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
(1, 0x10000);

854 
byã
 
liByãs
[] = 
√w
 byte[12];

855 
ByãBuf„rOuçutSåóm
.
	`ªc‹d2ByãBuf„r
(
li
,

856 
ByãBuf„r
.
	`wøp
(
liByãs
));

858 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
FOLLOWERINFO
, 
ZxidUtûs
.
	`makeZxid
(20, 0),

859 
liByãs
, 
nuŒ
);

860 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

861 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

862 
As£π
.
	`as£πEquÆs
(
Lódî
.
LEADERINFO
, 
qp
.
	`gëTy≥
());

863 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(21, 0), 
qp
.
	`gëZxid
());

864 
As£π
.
	`as£πEquÆs
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
(),

866 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACKEPOCH
, 0,Çew 
byã
[4], 
nuŒ
);

867 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

868 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

869 
As£π
.
	`as£πEquÆs
(
Lódî
.
DIFF
, 
qp
.
	`gëTy≥
());

870 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

871 
As£π
.
	`as£πEquÆs
(
Lódî
.
NEWLEADER
, 
qp
.
	`gëTy≥
());

872 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(21, 0), 
qp
.
	`gëZxid
());

874 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, qp.
	`gëZxid
(), 
nuŒ
,Çull);

875 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

877 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

878 
As£π
.
	`as£πEquÆs
(
Lódî
.
NEWLEADER
, 
qp
.
	`gëTy≥
());

879 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(21, 0), 
qp
.
	`gëZxid
());

881 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
ACK
, qp.
	`gëZxid
(), 
nuŒ
,Çull);

882 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

884 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

885 
As£π
.
	`as£πEquÆs
(
Lódî
.
UPTODATE
, 
qp
.
	`gëTy≥
());

888 
	}
}

896 @
Te°


897 
public
 
	$ã°Ab™d⁄Bef‹eACKEpoch
(Ë
throws
 
Ex˚±i⁄
 {

898 
	`ã°LódîC⁄vîßti⁄
(
√w
 
	`LódîC⁄vîßti⁄
() {

899 
public
 
	`c⁄vî£WôhLódî
(
I≈utArchive
 
ü
, 
OuçutArchive
 
ﬂ
, 
Lódî
 
l
)

900 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

902 
Ló∫îInfo
 
li
 = 
√w
 
	`Ló∫îInfo
(1, 0x10000);

903 
byã
 
liByãs
[] = 
√w
 byte[12];

904 
ByãBuf„rOuçutSåóm
.
	`ªc‹d2ByãBuf„r
(
li
,

905 
ByãBuf„r
.
	`wøp
(
liByãs
));

906 
Qu‹umPackë
 
qp
 = 
√w
 
	`Qu‹umPackë
(
Lódî
.
FOLLOWERINFO
, 0,

907 
liByãs
, 
nuŒ
);

908 
ﬂ
.
	`wrôeRec‹d
(
qp
, 
nuŒ
);

909 
	`ªadPackëSkùpögPög
(
ü
, 
qp
);

910 
As£π
.
	`as£πEquÆs
(
Lódî
.
LEADERINFO
, 
qp
.
	`gëTy≥
());

911 
As£π
.
	`as£πEquÆs
(
ZxidUtûs
.
	`makeZxid
(1, 0), 
qp
.
	`gëZxid
());

912 
As£π
.
	`as£πEquÆs
(
ByãBuf„r
.
	`wøp
(
qp
.
	`gëD©a
()).
	`gëI¡
(),

914 
Thªad
.
	`¶ìp
(
l
.
£lf
.
	`gëInôLimô
()*l.£lf.
	`gëTickTime
() + 5000);

917 
As£π
.
	`as£πEquÆs
(0, 
l
.
£lf
.
	`gëCuºítEpoch
());

920 
	}
}

922 
¥iv©e
 
	$ªcursiveDñëe
(
Fûe
 
fûe
) {

923 i‡(
fûe
.
	`isFûe
()) {

924 
fûe
.
	`dñëe
();

927 
Fûe
[] 
fûes
 = 
fûe
.
	`li°Fûes
();

928 i‡(
fûes
 !
nuŒ
) {

929 
Fûe
 
c
: 
fûes
) {

930 
	`ªcursiveDñëe
(
c
);

933 
fûe
.
	`dñëe
();

935 
	}
}

937 
¥iv©e
 
Lódî
 
	$¸óãLódî
(
Fûe
 
tmpDú
, 
Qu‹umPìr
 
≥î
)

938 
throws
 
IOEx˚±i⁄
, 
NoSuchFõldEx˚±i⁄
, 
IŒegÆAc˚ssEx˚±i⁄
{

939 
LódîZooKì≥rSîvî
 
zk
 = 
	`¥ï¨eLódî
(
tmpDú
, 
≥î
);

940  
√w
 
	`Lódî
(
≥î
, 
zk
);

941 
	}
}

943 
¥iv©e
 
Lódî
 
	$¸óãMockLódî
(
Fûe
 
tmpDú
, 
Qu‹umPìr
 
≥î
)

944 
throws
 
IOEx˚±i⁄
, 
NoSuchFõldEx˚±i⁄
, 
IŒegÆAc˚ssEx˚±i⁄
{

945 
LódîZooKì≥rSîvî
 
zk
 = 
	`¥ï¨eLódî
(
tmpDú
, 
≥î
);

946  
√w
 
	`MockLódî
(
≥î
, 
zk
);

947 
	}
}

949 
¥iv©e
 
LódîZooKì≥rSîvî
 
	$¥ï¨eLódî
(
Fûe
 
tmpDú
, 
Qu‹umPìr
 
≥î
)

950 
throws
 
IOEx˚±i⁄
, 
NoSuchFõldEx˚±i⁄
, 
IŒegÆAc˚ssEx˚±i⁄
 {

951 
FûeTxnS«pLog
 
logFa˘‹y
 = 
√w
 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir);

952 
≥î
.
	`£tTxnFa˘‹y
(
logFa˘‹y
);

953 
Fõld
 
addrFõld
 = 
≥î
.
	`gëCœss
().
	`gëDe˛¨edFõld
("myQuorumAddr");

954 
addrFõld
.
	`£tAc˚ssibÀ
(
åue
);

955 
addrFõld
.
	`£t
(
≥î
, 
√w
 
	`I√tSockëAddªss
(33556));

956 
ZKD©aba£
 
zkDb
 = 
√w
 
	`ZKD©aba£
(
logFa˘‹y
);

957 
LódîZooKì≥rSîvî
 
zk
 = 
√w
 
	`LódîZooKì≥rSîvî
(
logFa˘‹y
, 
≥î
,Çew 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(), 
zkDb
);

958  
zk
;

959 
	}
}

961 ˛as†
	cC⁄vîßbÀFﬁlowî
 
exãnds
 
	gFﬁlowî
 {

963 
C⁄vîßbÀFﬁlowî
(
Qu‹umPìr
 
£lf
, 
FﬁlowîZooKì≥rSîvî
 
zk
) {

964 
su≥r
(
£lf
, 
zk
);

967 
I√tSockëAddªss
 
	gÀadîAddr
;

968 
public
 
£tLódîSockëAddªss
(
I√tSockëAddªss
 
addr
) {

969 
	gÀadîAddr
 = 
addr
;

972 @
Ovîride


973 
¥Ÿe˘ed
 
I√tSockëAddªss
 
födLódî
() {

974  
	gÀadîAddr
;

977 
¥iv©e
 
C⁄vîßbÀFﬁlowî
 
	$¸óãFﬁlowî
(
Fûe
 
tmpDú
, 
Qu‹umPìr
 
≥î
)

978 
throws
 
IOEx˚±i⁄
 {

979 
FûeTxnS«pLog
 
logFa˘‹y
 = 
√w
 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir);

980 
≥î
.
	`£tTxnFa˘‹y
(
logFa˘‹y
);

981 
ZKD©aba£
 
zkDb
 = 
√w
 
	`ZKD©aba£
(
logFa˘‹y
);

982 
FﬁlowîZooKì≥rSîvî
 
zk
 = 
√w
 
	`FﬁlowîZooKì≥rSîvî
(
logFa˘‹y
, 
≥î
,Çew 
ZooKì≥rSîvî
.
	`BasicD©aTªeBuûdî
(), 
zkDb
);

983 
≥î
.
	`£tZKD©aba£
(
zkDb
);

984  
√w
 
	`C⁄vîßbÀFﬁlowî
(
≥î
, 
zk
);

985 
	}
}

987 
¥iv©e
 
Qu‹umPìr
 
	$¸óãQu‹umPìr
(
Fûe
 
tmpDú
Ë
throws
 
IOEx˚±i⁄
,

988 
FûeNŸFoundEx˚±i⁄
 {

989 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
();

990 
≥î
.
syncLimô
 = 2;

991 
≥î
.
öôLimô
 = 2;

992 
≥î
.
tickTime
 = 2000;

993 
≥î
.
qu‹umPìrs
 = 
√w
 
HashM≠
<
L⁄g
, 
Qu‹umSîvî
>();

994 
≥î
.
qu‹umPìrs
.
	`put
(1L, 
√w
 
	`Qu‹umSîvî
(0,Çew 
	`I√tSockëAddªss
(33221)));

995 
≥î
.
qu‹umPìrs
.
	`put
(1L, 
√w
 
	`Qu‹umSîvî
(1,Çew 
	`I√tSockëAddªss
(33223)));

996 
≥î
.
	`£tQu‹umVîifõr
(
√w
 
	`Qu‹umMaj
(3));

997 
≥î
.
	`£tCnxnFa˘‹y
(
√w
 
	`NuŒSîvîCnxnFa˘‹y
());

998 
Fûe
 
vîsi⁄2
 = 
√w
 
	`Fûe
(
tmpDú
, "version-2");

999 
vîsi⁄2
.
	`mkdú
();

1000 
√w
 
	`FûeOuçutSåóm
“ew 
	`Fûe
(
vîsi⁄2
, "cuºítEpoch")).
	`wrôe
("0\n".
	`gëByãs
());

1001 
√w
 
	`FûeOuçutSåóm
“ew 
	`Fûe
(
vîsi⁄2
, "ac˚±edEpoch")).
	`wrôe
("0\n".
	`gëByãs
());

1002  
≥î
;

1003 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/util/PortForwarder.java

22 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gutû
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

26 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

27 
imp‹t
 
	gjava
.
	g√t
.
	gC⁄√˘Ex˚±i⁄
;

28 
imp‹t
 
	gjava
.
	g√t
.
	gSîvîSockë
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

31 
imp‹t
 
	gjava
.
	g√t
.
	gSockëTimeoutEx˚±i⁄
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecut‹Sîvi˚
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gExecut‹s
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

39 
public
 cœs†
	cP‹tF‹w¨dî
 
exãnds
 
	mThªad
 {

40 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y


41 .
gëLoggî
(
P‹tF‹w¨dî
.
˛ass
);

43 
¥iv©e
 ˛as†
	cP‹tF‹w¨dW‹kî
 
im∂emíts
 
	mRu¬abÀ
 {

45 
¥iv©e
 
föÆ
 
I≈utSåóm
 
	mö
;

46 
¥iv©e
 
föÆ
 
OuçutSåóm
 
	mout
;

47 
¥iv©e
 
föÆ
 
Sockë
 
	mtoClo£
;

48 
¥iv©e
 
föÆ
 
Sockë
 
	mtoClo£2
;

50 
P‹tF‹w¨dW‹kî
(
Sockë
 
toClo£
, Sockë 
toClo£2
, 
I≈utSåóm
 
ö
,

51 
OuçutSåóm
 
out
Ë
throws
 
	mIOEx˚±i⁄
 {

52 
	mthis
.
	mtoClo£
 = 
toClo£
;

53 
	mthis
.
	mtoClo£2
 = 
toClo£2
;

54 
	mthis
.
	mö
 = 
ö
;

55 
	mthis
.
	mout
 = 
out
;

59 
public
 
run
() {

60 
	mThªad
.
cuºítThªad
().
£tName
(
toClo£
.
toSåög
() + "-->"

61 + 
toClo£2
.
toSåög
());

62 
	mbyã
[] 
	mbuf
 = 
√w
 
byã
[1024];

63 
	måy
 {

64 
	måue
) {

65 
	måy
 {

66 
	mªad
 = 
this
.
ö
.
ªad
(
buf
);

67 i‡(
	mªad
 > 0) {

68 
	måy
 {

69 
	mthis
.
	mout
.
wrôe
(
buf
, 0, 
ªad
);

70 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

71 
	mLOG
.
w¨n
("ex˚±i⁄ durög wrôe", 
e
);

72 
	måy
 {

73 
	mtoClo£
.
˛o£
();

74 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

77 
	måy
 {

78 
	mtoClo£2
.
˛o£
();

79 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

85 } 
ˇtch
 (
SockëTimeoutEx˚±i⁄
 
e
) {

86 
	mLOG
.
îr‹
("sockëÅimeout", 
e
);

88 
	mThªad
.
¶ìp
(1);

90 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

91 
	mLOG
.
w¨n
("I¡îru±ed", 
e
);

92 
	måy
 {

93 
	mtoClo£
.
˛o£
();

94 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

97 
	måy
 {

98 
	mtoClo£2
.
˛o£
();

99 } 
ˇtch
 (
IOEx˚±i⁄
 
ex
) {

102 } 
ˇtch
 (
SockëEx˚±i⁄
 
e
) {

103 i‡(!"Sockë clo£d".
equÆs
(
e
.
gëMesßge
())) {

104 
	mLOG
.
îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

106 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

107 
	mLOG
.
îr‹
("U√x≥˘edÉx˚±i⁄", 
e
);

109 
	mLOG
.
öfo
("Shuâög dow¿f‹w¨d f‹ " + 
toClo£
);

114 
¥iv©e
 vﬁ©ûê
boﬁón
 
	g°›≥d
 = 
Ál£
;

115 
¥iv©e
 
Execut‹Sîvi˚
 
	gw‹kîs
 = 
Execut‹s
.
√wCachedThªadPoﬁ
();

116 
¥iv©e
 
SîvîSockë
 
	g£rvîSockë
;

117 
¥iv©e
 
föÆ
 
	gto
;

119 
public
 
	$P‹tF‹w¨dî
(
‰om
, 
to
Ë
throws
 
IOEx˚±i⁄
 {

120 
this
.
to
 =Åo;

121 
£rvîSockë
 = 
√w
 
	`SîvîSockë
(
‰om
);

122 
£rvîSockë
.
	`£tSoTimeout
(30000);

123 
this
.
	`°¨t
();

124 
	}
}

126 @
Ovîride


127 
public
 
	$run
() {

128 
åy
 {

129 !
°›≥d
) {

130 
Sockë
 
sock
 = 
nuŒ
;

131 
åy
 {

132 
LOG
.
	`öfo
("accepting socketÜocal:"

133 + 
£rvîSockë
.
	`gëLoˇlP‹t
(Ë+ "Åo:" + 
to
);

134 
sock
 = 
£rvîSockë
.
	`ac˚±
();

135 
LOG
.
	`öfo
("ac˚±ed:Üoˇl:" + 
sock
.
	`gëLoˇlP‹t
()

136 + " from:" + 
sock
.
	`gëP‹t
()

137 + "Åo:" + 
to
);

138 
Sockë
 
èrgë
 = 
nuŒ
;

139 
ªåy
 = 10;

140 
sock
.
	`isC⁄√˘ed
()) {

141 
åy
 {

142 
èrgë
 = 
√w
 
	`Sockë
("loˇlho°", 
to
);

144 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

145 i‡(
ªåy
 == 0) {

146 
throw
 
e
;

148 
LOG
.
	`w¨n
("c⁄√˘i⁄ faûed,Ñëryög(" + 
ªåy


149 + "):Üoˇl:" + 
sock
.
	`gëLoˇlP‹t
()

150 + " from:" + 
sock
.
	`gëP‹t
()

151 + "Åo:" + 
to
, 
e
);

153 
Thªad
.
	`¶ìp
(
TimeUnô
.
SECONDS
.
	`toMûlis
(1));

154 
ªåy
--;

156 
LOG
.
	`öfo
("c⁄√˘ed:Üoˇl:" + 
sock
.
	`gëLoˇlP‹t
()

157 + " from:" + 
sock
.
	`gëP‹t
()

158 + "Åo:" + 
to
);

159 
sock
.
	`£tSoTimeout
(30000);

160 
èrgë
.
	`£tSoTimeout
(30000);

161 
this
.
w‹kîs
.
	`execuã
(
√w
 
	`P‹tF‹w¨dW‹kî
(
sock
, 
èrgë
,

162 
sock
.
	`gëI≈utSåóm
(), 
èrgë
.
	`gëOuçutSåóm
()));

163 
this
.
w‹kîs
.
	`execuã
(
√w
 
	`P‹tF‹w¨dW‹kî
(
èrgë
, 
sock
,

164 
èrgë
.
	`gëI≈utSåóm
(), 
sock
.
	`gëOuçutSåóm
()));

165 } 
	`ˇtch
 (
SockëTimeoutEx˚±i⁄
 
e
) {

166 
LOG
.
	`w¨n
("sockëÅimed ouàloˇl:" + 
sock
.
	`gëLoˇlP‹t
()

167 + " from:" + 
sock
.
	`gëP‹t
()

168 + "Åo:" + 
to
, 
e
);

169 } 
	`ˇtch
 (
C⁄√˘Ex˚±i⁄
 
e
) {

170 
LOG
.
	`w¨n
("c⁄√˘i⁄Éx˚±i⁄Üoˇl:" + 
sock
.
	`gëLoˇlP‹t
()

171 + " from:" + 
sock
.
	`gëP‹t
()

172 + "Åo:" + 
to
, 
e
);

173 
sock
.
	`˛o£
();

174 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

175 i‡(!"Sockë clo£d".
	`equÆs
(
e
.
	`gëMesßge
())) {

176 
LOG
.
	`w¨n
("u√x≥˘edÉx˚±i⁄Üoˇl:" + 
sock
.
	`gëLoˇlP‹t
()

177 + " from:" + 
sock
.
	`gëP‹t
()

178 + "Åo:" + 
to
, 
e
);

179 
throw
 
e
;

184 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

185 
LOG
.
	`îr‹
("U√x≥˘edÉx˚±i⁄Åo:" + 
to
, 
e
);

186 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

187 
LOG
.
	`îr‹
("I¡îru±edÅo:" + 
to
, 
e
);

189 
	}
}

191 
public
 
	$shutdown
(Ë
throws
 
Ex˚±i⁄
 {

192 
this
.
°›≥d
 = 
åue
;

193 
this
.
£rvîSockë
.
	`˛o£
();

194 
this
.
w‹kîs
.
	`shutdownNow
();

195 
åy
 {

196 i‡(!
this
.
w‹kîs
.
	`awaôTîmö©i⁄
(5, 
TimeUnô
.
SECONDS
)) {

197 
throw
 
√w
 
	`Ex˚±i⁄
(

200 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

201 
throw
 
√w
 
	`Ex˚±i⁄
("FailedÅo stop forwarding");

203 
this
.
	`joö
();

204 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLCountTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

44 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

45 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

47 
public
 cœs†
	cACLCou¡Te°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

48 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ACLTe°
.
˛ass
);

49 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 =

50 "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

51 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	m°¨tSig«l
;

66 @
Te°


67 
public
 
	$ã°A˛Cou¡
(Ë
throws
 
Ex˚±i⁄
 {

68 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

69 
Clõ¡Ba£
.
	`£tupTe°Env
();

70 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

71 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

72 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

73 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

74 
f
.
	`°¨tup
(
zks
);

75 
ZooKì≥r
 
zk
;

77 
föÆ
 
AºayLi°
<
ACL
> 
CREATOR_ALL_AND_WORLD_READABLE
 =

78 
√w
 
AºayLi°
<
ACL
>() { {

79 
	`add
(
√w
 
	`ACL
(
ZooDefs
.
Pîms
.
READ
,ZooDefs.
Ids
.
ANYONE_ID_UNSAFE
));

80 
	`add
(
√w
 
	`ACL
(
ZooDefs
.
Pîms
.
ALL
,ZooDefs.
Ids
.
AUTH_IDS
));

81 
	`add
(
√w
 
	`ACL
(
ZooDefs
.
Pîms
.
READ
,ZooDefs.
Ids
.
ANYONE_ID_UNSAFE
));

82 
	`add
(
√w
 
	`ACL
(
ZooDefs
.
Pîms
.
ALL
,ZooDefs.
Ids
.
AUTH_IDS
));

85 
åy
 {

86 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

87 
As£π
.
	`as£πTrue
("waiting for server being up",

88 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

89 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

91 
zk
.
	`addAuthInfo
("dige°", "∑t:ã°".
	`gëByãs
());

92 
zk
.
	`£tACL
("/", 
Ids
.
CREATOR_ALL_ACL
, -1);

94 
Såög
 
∑th
 = "/path";

96 
åy
 {

97 
As£π
.
	`as£πEquÆs
(4,
CREATOR_ALL_AND_WORLD_READABLE
.
	`size
());

99 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

100 
LOG
.
	`îr‹
("Something is fundamentally wrong with ArrayList'sádd() method.ádd()ing fourÅimesÅoánÉmpty ArrayList shouldÑesult inán ArrayList with 4 members.");

101 
throw
 
e
;

104 
zk
.
	`¸óã
(
∑th
,∑th.
	`gëByãs
(),
CREATOR_ALL_AND_WORLD_READABLE
,
Cª©eMode
.
PERSISTENT
);

105 
Li°
<
ACL
> 
a˛s
 = 
zk
.
	`gëACL
("/∑th", 
√w
 
	`Sèt
());

106 
As£π
.
	`as£πEquÆs
(2,
a˛s
.
	`size
());

108 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

110 
As£π
.
	`as£πTrue
(
Ál£
);

113 
As£π
.
	`as£πTrue
(
åue
);

123 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

124 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
() + " "

125 + 
evít
.
	`gëP©h
());

126 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

127 i‡(
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0) {

128 
LOG
.
	`öfo
("startsignal.countDown()");

129 
°¨tSig«l
.
	`cou¡Down
();

131 
LOG
.
	`w¨n
("°¨tsig«»" + 
°¨tSig«l
);

134 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLRootTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cACLRoŸTe°
 
exãnds
 
	mClõ¡Ba£
 {

31 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ACLRoŸTe°
.
˛ass
);

33 @
Te°


34 
public
 
	$ã°RoŸA˛
(Ë
throws
 
Ex˚±i⁄
 {

35 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

36 
åy
 {

38 
zk
.
	`addAuthInfo
("dige°", "∑t:ã°".
	`gëByãs
());

39 
zk
.
	`£tACL
("/", 
Ids
.
CREATOR_ALL_ACL
, -1);

40 
zk
.
	`gëD©a
("/", 
Ál£
, 
nuŒ
);

41 
zk
.
	`˛o£
();

43 
zk
 = 
	`¸óãClõ¡
();

44 
åy
 {

45 
zk
.
	`gëD©a
("/", 
Ál£
, 
nuŒ
);

46 
As£π
.
	`Áû
("validateáuth");

47 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

50 
åy
 {

51 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

52 
Cª©eMode
.
PERSISTENT
);

53 
As£π
.
	`Áû
("validateáuth");

54 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
 
e
) {

57 
zk
.
	`addAuthInfo
("dige°", "w‹ld:™y⁄e".
	`gëByãs
());

58 
åy
 {

59 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

60 
Cª©eMode
.
PERSISTENT
);

61 
As£π
.
	`Áû
("validateáuth");

62 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

65 
zk
.
	`˛o£
();

67 
zk
 = 
	`¸óãClõ¡
();

68 
zk
.
	`addAuthInfo
("dige°", "∑t:ã°".
	`gëByãs
());

69 
zk
.
	`gëD©a
("/", 
Ál£
, 
nuŒ
);

70 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

71 
Cª©eMode
.
PERSISTENT
);

72 
zk
.
	`dñëe
("/apps", -1);

74 
zk
.
	`£tACL
("/", 
Ids
.
OPEN_ACL_UNSAFE
, -1);

75 
zk
.
	`˛o£
();

76 
zk
 = 
	`¸óãClõ¡
();

77 
zk
.
	`gëD©a
("/", 
Ál£
, 
nuŒ
);

78 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

79 
Cª©eMode
.
PERSISTENT
);

80 
åy
 {

81 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

82 
Cª©eMode
.
PERSISTENT
);

83 
As£π
.
	`Áû
("validateáuth");

84 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
 
e
) {

87 
zk
.
	`dñëe
("/apps", -1);

88 
zk
.
	`addAuthInfo
("dige°", "w‹ld:™y⁄e".
	`gëByãs
());

89 
zk
.
	`¸óã
("/≠ps", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

90 
Cª©eMode
.
PERSISTENT
);

91 
zk
.
	`˛o£
();

92 
zk
 = 
	`¸óãClõ¡
();

93 
zk
.
	`dñëe
("/apps", -1);

94 } 
föÆly
 {

95 
zk
.
	`˛o£
();

98 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

43 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

44 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

46 
public
 cœs†
	cACLTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

47 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ACLTe°
.
˛ass
);

48 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 =

49 "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

50 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	m°¨tSig«l
;

52 @
Te°


53 
public
 
	$ã°Disc⁄√˘edAddAuth
(Ë
throws
 
Ex˚±i⁄
 {

54 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

55 
Clõ¡Ba£
.
	`£tupTe°Env
();

56 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

57 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

58 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

59 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

60 
f
.
	`°¨tup
(
zks
);

61 
åy
 {

62 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

63 
As£π
.
	`as£πTrue
("waiting for server being up",

64 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

65 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

66 
åy
 {

67 
zk
.
	`addAuthInfo
("dige°", "∑t:ã°".
	`gëByãs
());

68 
zk
.
	`£tACL
("/", 
Ids
.
CREATOR_ALL_ACL
, -1);

69 } 
föÆly
 {

70 
zk
.
	`˛o£
();

72 } 
föÆly
 {

73 
f
.
	`shutdown
();

75 
As£π
.
	`as£πTrue
("waiting for server down",

76 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

77 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

86 @
Te°


87 
public
 
	$ã°A˛s
(Ë
throws
 
Ex˚±i⁄
 {

88 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

89 
Clõ¡Ba£
.
	`£tupTe°Env
();

90 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

91 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

92 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

93 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

94 
f
.
	`°¨tup
(
zks
);

95 
ZooKì≥r
 
zk
;

96 
Såög
 
∑th
;

97 
åy
 {

98 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

99 
As£π
.
	`as£πTrue
("waiting for server being up",

100 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

101 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

102 
LOG
.
	`öfo
("starting creatingácls");

103 
i
 = 0; i < 100; i++) {

104 
∑th
 = "/" + 
i
;

105 
zk
.
	`¸óã
(
∑th
,Ö©h.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

106 
Cª©eMode
.
PERSISTENT
);

108 
As£π
.
	`as£πTrue
("sizêo‡thêa˛ m≠ ", (1 =
zks
.
	`gëZKD©aba£
().
	`gëA˛Size
()));

109 
j
 = 100; j < 200; j++) {

110 
∑th
 = "/" + 
j
;

111 
ACL
 
a˛
 = 
√w
 
	`ACL
();

112 
a˛
.
	`£tPîms
(0);

113 
Id
 
id
 = 
√w
 
	`Id
();

114 
id
.
	`£tId
("1.1.1."+
j
);

115 
id
.
	`£tScheme
("ip");

116 
a˛
.
	`£tId
(
id
);

117 
AºayLi°
<
ACL
> 
li°
 = 
√w
 ArrayList<ACL>();

118 
li°
.
	`add
(
a˛
);

119 
zk
.
	`¸óã
(
∑th
,Ö©h.
	`gëByãs
(), 
li°
, 
Cª©eMode
.
PERSISTENT
);

121 
As£π
.
	`as£πTrue
("sizêo‡thêa˛ m≠ ", (101 =
zks
.
	`gëZKD©aba£
().
	`gëA˛Size
()));

122 } 
föÆly
 {

124 
f
.
	`shutdown
();

125 
As£π
.
	`as£πTrue
("waiting for server down",

126 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

128 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

130 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

131 
f
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

133 
f
.
	`°¨tup
(
zks
);

134 
åy
 {

135 
As£π
.
	`as£πTrue
("waiting for server up",

136 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

138 
°¨tSig«l
.
	`awaô
(
CONNECTION_TIMEOUT
,

139 
TimeUnô
.
MILLISECONDS
);

140 
As£π
.
	`as£πTrue
("cou¡ =0", 
°¨tSig«l
.
	`gëCou¡
() == 0);

142 
As£π
.
	`as£πTrue
("a˛ m≠ ", (101 =
zks
.
	`gëZKD©aba£
().
	`gëA˛Size
()));

143 
j
 = 200; j < 205; j++) {

144 
∑th
 = "/" + 
j
;

145 
ACL
 
a˛
 = 
√w
 
	`ACL
();

146 
a˛
.
	`£tPîms
(0);

147 
Id
 
id
 = 
√w
 
	`Id
();

148 
id
.
	`£tId
("1.1.1."+
j
);

149 
id
.
	`£tScheme
("ip");

150 
a˛
.
	`£tId
(
id
);

151 
AºayLi°
<
ACL
> 
li°
 = 
√w
 ArrayList<ACL>();

152 
li°
.
	`add
(
a˛
);

153 
zk
.
	`¸óã
(
∑th
,Ö©h.
	`gëByãs
(), 
li°
, 
Cª©eMode
.
PERSISTENT
);

155 
As£π
.
	`as£πTrue
("a˛ m≠ ", (106 =
zks
.
	`gëZKD©aba£
().
	`gëA˛Size
()));

157 
zk
.
	`˛o£
();

158 } 
föÆly
 {

159 
f
.
	`shutdown
();

161 
As£π
.
	`as£πTrue
("waiting for server down",

162 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

163 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

166 
	}
}

173 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

174 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
() + " "

175 + 
evít
.
	`gëP©h
());

176 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

177 i‡(
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0) {

178 
LOG
.
	`öfo
("startsignal.countDown()");

179 
°¨tSig«l
.
	`cou¡Down
();

181 
LOG
.
	`w¨n
("°¨tsig«»" + 
°¨tSig«l
);

184 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gvîifyThªadTîmö©ed
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCou¡downW©chî
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

42 
public
 
˛ass
 
AsyncHammîTe°
 
exãnds
 
ZKTe°Ca£


43 
im∂emíts
 
	gSåögCÆlback
, 
	gVoidCÆlback
, 
	gD©aCÆlback


45 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
AsyncHammîTe°
.
˛ass
);

47 
¥iv©e
 
Qu‹umBa£
 
	gqb
 = 
√w
 QuorumBase();

49 
¥iv©e
 vﬁ©ûê
boﬁón
 
	gb™g
;

51 
public
 
£tUp
(
boﬁón
 
wôhOb£rvîs
Ë
throws
 
	gEx˚±i⁄
 {

52 
	gqb
.
£tUp
(
wôhOb£rvîs
);

55 
¥Ÿe˘ed
 
ª°¨t
(Ë
throws
 
	gEx˚±i⁄
 {

56 
	gLOG
.
öfo
("RESTARTING " + 
gëTe°Name
());

57 
	gqb
.
ã¨Down
();

60 
	gJMXEnv
.
£tUp
();

61 
	gqb
.
°¨tSîvîs
();

64 
public
 
ã¨Down
(Ë
throws
 
	gEx˚±i⁄
 {

65 
	gLOG
.
öfo
("Test clients shutting down");

66 
	gqb
.
ã¨Down
();

72 
˛ass
 
HammîThªad
 
exãnds
 
Thªad
 
im∂emíts
 
	gSåögCÆlback
, 
	gVoidCÆlback
 {

73 
¥iv©e
 
föÆ
 
	gMAX_OUTSTANDING
 = 30;

75 
¥iv©e
 
Te°abÀZooKì≥r
 
	gzk
;

76 
¥iv©e
 
	gout°™dög
;

78 
¥iv©e
 vﬁ©ûê
boﬁón
 
	gÁûed
 = 
Ál£
;

80 
public
 
HammîThªad
(
Såög
 
«me
) {

81 
su≥r
(
«me
);

84 
public
 
run
() {

85 
	gåy
 {

86 
Cou¡downW©chî
 
	gw©chî
 = 
√w
 CountdownWatcher();

87 
	gzk
 = 
√w
 
Te°abÀZooKì≥r
(
qb
.
ho°P‹t
, 
CONNECTION_TIMEOUT
,

88 
w©chî
);

89 
	gw©chî
.
waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

90 
	gb™g
) {

91 
öcOut°™dög
();

92 
	gzk
.
¸óã
("/ã°-", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

93 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
, 
this
, 
nuŒ
);

95 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

96 i‡(
	gb™g
) {

97 
	gLOG
.
îr‹
("sanity check Assert.failed!!!");

100 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

101 
	gLOG
.
îr‹
("Clõ¡ cª©ê›î©i⁄ As£π.Áûed", 
e
);

103 } 
	gföÆly
 {

104 i‡(
	gzk
 !
nuŒ
) {

105 
åy
 {

106 
zk
.
˛o£
();

107 i‡(!
	gzk
.
ã°abÀWaôF‹Shutdown
(
CONNECTION_TIMEOUT
)) {

108 
	gÁûed
 = 
åue
;

109 
	gLOG
.
îr‹
("Client didÇot shutdown");

111 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

112 
	gLOG
.
öfo
("I¡îru±ed", 
e
);

118 
¥iv©e
 
synchr⁄ized
 
öcOut°™dög
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

119 
	gout°™dög
++;

120 
	gout°™dög
 > 
	gMAX_OUTSTANDING
) {

121 
waô
();

125 
¥iv©e
 
synchr⁄ized
 
decOut°™dög
() {

126 
	gout°™dög
--;

127 
	gAs£π
.
as£πTrue
("out°™dög >0", 
out°™dög
 >= 0);

128 
nŸifyAŒ
();

131 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

135 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

136 i‡(
	grc
 !
Kì≥rEx˚±i⁄
.
Code
.
OK
.
ötVÆue
()) {

137 i‡(
b™g
) {

138 
Áûed
 = 
åue
;

139 
	gLOG
.
îr‹
("Create Assert.failed for 0x"

140 + 
L⁄g
.
toHexSåög
(
zk
.
gëSessi⁄Id
())

141 + "wôhÑc:" + 
rc
 + "Ö©h:" + 
∑th
);

143 
decOut°™dög
();

146 
	gåy
 {

147 
decOut°™dög
();

148 
	gzk
.
dñëe
(
«me
, -1, 
this
, 
nuŒ
);

149 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

150 i‡(
	gb™g
) {

151 
	gÁûed
 = 
åue
;

152 
	gLOG
.
îr‹
("Clõ¡ dñëêAs£π.Áûed", 
e
);

157 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

158 i‡(
	grc
 !
Kì≥rEx˚±i⁄
.
Code
.
OK
.
ötVÆue
()) {

159 i‡(
b™g
) {

160 
Áûed
 = 
åue
;

161 
	gLOG
.
îr‹
("Delete Assert.failed for 0x"

162 + 
L⁄g
.
toHexSåög
(
zk
.
gëSessi⁄Id
())

163 + "wôhÑc:" + 
rc
 + "Ö©h:" + 
∑th
);

169 @
Te°


170 
public
 
ã°Hammî
(Ë
throws
 
	gEx˚±i⁄
 {

171 
£tUp
(
Ál£
);

172 
	gb™g
 = 
åue
;

173 
	gLOG
.
öfo
("Starting hammers");

174 
	gHammîThªad
[] 
	ghammîs
 = 
√w
 
HammîThªad
[100];

175 
	gi
 = 0; i < 
	ghammîs
.
	gÀngth
; i++) {

176 
	ghammîs
[
i
] = 
√w
 
HammîThªad
("HammerThread-" + i);

177 
	ghammîs
[
i
].
°¨t
();

179 
	gLOG
.
öfo
("Started hammers");

180 
	gThªad
.
¶ìp
(5000);

181 
	gb™g
 = 
Ál£
;

182 
	gLOG
.
öfo
("Stopping hammers");

183 
	gi
 = 0; i < 
	ghammîs
.
	gÀngth
; i++) {

184 
	ghammîs
[
i
].
öãºu±
();

185 
vîifyThªadTîmö©ed
(
hammîs
[
i
], 60000);

186 
	gAs£π
.
as£πFÆ£
(
hammîs
[
i
].
Áûed
);

190 
	gLOG
.
öfo
("Hammers stopped, verifying consistency");

191 
	gqb
.
vîifyRoŸOfAŒSîvîsM©ch
(
qb
.
ho°P‹t
);

193 
ª°¨t
();

196 
	gLOG
.
öfo
("Verifying hammers 2");

197 
	gqb
.
vîifyRoŸOfAŒSîvîsM©ch
(
qb
.
ho°P‹t
);

198 
ã¨Down
();

201 @
Te°


202 
public
 
ã°Ob£rvîsHammî
(Ë
throws
 
	gEx˚±i⁄
 {

203 
£tUp
(
åue
);

204 
	gb™g
 = 
åue
;

205 
	gThªad
[] 
	ghammîs
 = 
√w
 
Thªad
[100];

206 
	gi
 = 0; i < 
	ghammîs
.
	gÀngth
; i++) {

207 
	ghammîs
[
i
] = 
√w
 
HammîThªad
("HammerThread-" + i);

208 
	ghammîs
[
i
].
°¨t
();

210 
	gThªad
.
¶ìp
(5000);

211 
	gb™g
 = 
Ál£
;

212 
	gi
 = 0; i < 
	ghammîs
.
	gÀngth
; i++) {

213 
	ghammîs
[
i
].
öãºu±
();

214 
vîifyThªadTîmö©ed
(
hammîs
[
i
], 60000);

217 
	gqb
.
vîifyRoŸOfAŒSîvîsM©ch
(
qb
.
ho°P‹t
);

218 
ã¨Down
();

221 @
SuµªssW¨nögs
("unchecked")

222 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

223 
synchr⁄ized
(
˘x
) {

224 ((
	gLökedLi°
<
	gI¡egî
>)
	g˘x
).
add
(
rc
);

225 
	g˘x
.
nŸifyAŒ
();

229 @
SuµªssW¨nögs
("unchecked")

230 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

231 
synchr⁄ized
(
˘x
) {

232 ((
	gLökedLi°
<
	gI¡egî
>)
	g˘x
).
add
(
rc
);

233 
	g˘x
.
nŸifyAŒ
();

237 @
SuµªssW¨nögs
("unchecked")

238 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

239 
Sèt
 
°©
) {

240 
synchr⁄ized
(
˘x
) {

241 ((
	gLökedLi°
<
	gI¡egî
>)
	g˘x
).
add
(
rc
);

242 
	g˘x
.
nŸifyAŒ
();

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncOps.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gACLCÆlback
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªn2CÆlback
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªnCÆlback
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

42 
public
 cœs†
	cAsyncOps
 {

63 
public
 
ab°ø˘
 cœs†
	cAsyncCB
 {

64 
¥Ÿe˘ed
 
föÆ
 
ZooKì≥r
 
	mzk
;

65 
¥Ÿe˘ed
 
	mdeÁu…TimeoutMûlis
 = 30000;

68 
Cou¡DownL©ch
 
	mœtch
;

70 
Code
 
	mrc
 = Code.
OK
;

71 
Såög
 
	m∑th
 = "/foo";

72 
Såög
 
	mex≥˘ed
;

74 
public
 
AsyncCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

75 
	mthis
.
	mzk
 = 
zk
;

76 
	mthis
.
	mœtch
 = 
œtch
;

79 
public
 
£tRC
(
Code
 
rc
) {

80 
	mthis
.
	mrc
 = 
rc
;

83 
public
 
£tP©h
(
Såög
 
∑th
) {

84 
	mthis
.
	m∑th
 = 
∑th
;

87 
public
 
¥o˚ssResu…
(
Code
 
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
)

89 
	mthis
.
	mrc
 = 
rc
;

90 
	mthis
.
	m∑th
 = 
∑th
;

91 
	mthis
.
	mex≥˘ed
 = (
Såög
)
˘x
;

92 
	mœtch
.
cou¡Down
();

97 @
Ovîride


98 
public
 
Såög
 
toSåög
() {

99  
	mrc
 + ":" + 
	m∑th
 + ":";

102 
¥Ÿe˘ed
 
vîify
() {

103 
	måy
 {

104 
	mœtch
.
awaô
(
deÁu…TimeoutMûlis
, 
TimeUnô
.
MILLISECONDS
);

105 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

106 
	mAs£π
.
Áû
("unexpected interrupt");

109 
	mAs£π
.
as£πSame
(0L, 
œtch
.
gëCou¡
());

111 
Såög
 
	ma˘uÆ
 = 
toSåög
();

113 
	mAs£π
.
as£πEquÆs
(
ex≥˘ed
, 
a˘uÆ
);

117 
public
 ˛as†
	cSåögCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gSåögCÆlback
 {

118 
	gbyã
[] 
	gd©a
 = 
√w
 
byã
[10];

119 
	gLi°
<
	gACL
> 
	ga˛
 = 
Ids
.
CREATOR_ALL_ACL
;

120 
Cª©eMode
 
	gÊags
 = Cª©eMode.
PERSISTENT
;

121 
Såög
 
	g«me
 = 
∑th
;

123 
SåögCB
(
ZooKì≥r
 
zk
) {

124 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

127 
SåögCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

128 
su≥r
(
zk
, 
œtch
);

131 
public
 
£tP©h
(
Såög
 
∑th
) {

132 
	gsu≥r
.
£tP©h
(
∑th
);

133 
	gthis
.
	g«me
 = 
∑th
;

136 
public
 
Såög
 
nodeName
() {

137  
	g∑th
.
sub°rög
(
∑th
.
œ°IndexOf
('/') + 1);

140 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
)

142 
	gthis
.
	g«me
 = 
«me
;

143 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

146 
public
 
AsyncCB
 
¸óã
() {

147 
	gzk
.
¸óã
(
∑th
, 
d©a
, 
a˛
, 
Êags
, 
this
, 
toSåög
());

148  
	gthis
;

151 
public
 
vîifyCª©e
() {

152 
¸óã
();

153 
vîify
();

156 
public
 
vîifyCª©eFaûuª_NodeExi°s
() {

157 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

159 
	grc
 = 
Code
.
NODEEXISTS
;

160 
	g«me
 = 
nuŒ
;

161 
	gzk
.
¸óã
(
∑th
, 
d©a
, 
a˛
, 
Êags
, 
this
, 
toSåög
());

162 
vîify
();

165 @
Ovîride


166 
public
 
Såög
 
toSåög
() {

167  
	gsu≥r
.
toSåög
(Ë+ 
	g«me
;

171 
public
 ˛as†
	cACLCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gACLCÆlback
 {

172 
	gLi°
<
	gACL
> 
	ga˛
 = 
Ids
.
CREATOR_ALL_ACL
;

173 
	gvîsi⁄
 = 0;

174 
Sèt
 
	g°©
 = 
√w
 Stat();

175 
	gbyã
[] 
	gd©a
 = "ã°ög".
gëByãs
();

177 
ACLCB
(
ZooKì≥r
 
zk
) {

178 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

181 
ACLCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

182 
su≥r
(
zk
, 
œtch
);

183 
	g°©
.
£tAvîsi⁄
(0);

184 
	g°©
.
£tCvîsi⁄
(0);

185 
	g°©
.
£tEphemîÆOw√r
(0);

186 
	g°©
.
£tVîsi⁄
(0);

189 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

190 
Li°
<
ACL
> 
a˛
, 
Sèt
 
°©
)

192 
	gthis
.
	ga˛
 = 
a˛
;

193 
	gthis
.
	g°©
 = 
°©
;

194 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

197 
public
 
vîifyGëACL
() {

198 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

200 
	gzk
.
gëACL
(
∑th
, 
°©
, 
this
, 
toSåög
());

201 
vîify
();

204 
public
 
Såög
 
toSåög
(
Li°
<
ACL
> 
a˛s
) {

205 
SåögBuûdî
 
	gªsu…
 = 
√w
 StringBuilder();

206 
ACL
 
	ga˛
 : 
a˛s
) {

207 
ªsu…
.
≠≥nd
(
a˛
.
gëPîms
() + "::");

209  
	gªsu…
.
toSåög
();

212 @
Ovîride


213 
public
 
Såög
 
toSåög
() {

214  
	gsu≥r
.
toSåög
(Ë+ÅoSåög(
a˛
) + ":"

215 + ":" + 
	gvîsi⁄
 + ":" + 
√w
 
Såög
(
d©a
)

216 + ":" + (
	g°©
 =
nuŒ
 ? "nuŒ" : 
°©
.
gëAvîsi⁄
() + ":"

217 + 
°©
.
gëCvîsi⁄
(Ë+ ":" + sèt.
gëEphemîÆOw√r
()

218 + ":" + 
°©
.
gëVîsi⁄
());

222 
public
 ˛as†
	cChûdªnCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gChûdªnCÆlback
 {

223 
	gLi°
<
	gSåög
> 
	gchûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

225 
ChûdªnCB
(
ZooKì≥r
 
zk
) {

226 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

229 
ChûdªnCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

230 
su≥r
(
zk
, 
œtch
);

233 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

234 
Li°
<
Såög
> 
chûdªn
)

236 
	gthis
.
	gchûdªn
 =

237 (
chûdªn
 =
nuŒ
 ? 
√w
 
AºayLi°
<
Såög
>() : children);

238 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

241 
public
 
SåögCB
 
¸óãNode
() {

242 
SåögCB
 
	g∑ª¡
 = 
√w
 SåögCB(
zk
);

243 
	g∑ª¡
.
vîifyCª©e
();

245  
	g∑ª¡
;

248 
public
 
SåögCB
 
¸óãNode
(SåögCB 
∑ª¡
) {

249 
Såög
 
	gchûdName
 = "bar";

251  
¸óãNode
(
∑ª¡
, 
chûdName
);

254 
public
 
SåögCB
 
¸óãNode
(SåögCB 
∑ª¡
, 
Såög
 
chûdName
) {

255 
SåögCB
 
	gchûd
 = 
√w
 SåögCB(
zk
);

256 
	gchûd
.
£tP©h
(
∑ª¡
.
∑th
 + "/" + 
chûdName
);

257 
	gchûd
.
vîifyCª©e
();

259  
	gchûd
;

262 
public
 
vîifyGëChûdªnEm±y
() {

263 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

264 
	g∑th
 = 
∑ª¡
.
∑th
;

265 
vîify
();

268 
public
 
vîifyGëChûdªnSögÀ
() {

269 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

270 
SåögCB
 
	gchûd
 = 
¸óãNode
(
∑ª¡
);

272 
	g∑th
 = 
∑ª¡
.
∑th
;

273 
	gchûdªn
.
add
(
chûd
.
nodeName
());

275 
vîify
();

278 
public
 
vîifyGëChûdªnTwo
() {

279 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

280 
SåögCB
 
	gchûd1
 = 
¸óãNode
(
∑ª¡
, "child1");

281 
SåögCB
 
	gchûd2
 = 
¸óãNode
(
∑ª¡
, "child2");

283 
	g∑th
 = 
∑ª¡
.
∑th
;

284 
	gchûdªn
.
add
(
chûd1
.
nodeName
());

285 
	gchûdªn
.
add
(
chûd2
.
nodeName
());

287 
vîify
();

290 
public
 
vîifyGëChûdªnFaûuª_NoNode
() {

291 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

292 
vîify
();

295 @
Ovîride


296 
public
 
vîify
() {

297 
	gzk
.
gëChûdªn
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

298 
	gsu≥r
.
vîify
();

301 @
Ovîride


302 
public
 
Såög
 
toSåög
() {

303  
	gsu≥r
.
toSåög
(Ë+ 
	gchûdªn
.toString();

307 
public
 ˛as†
	cChûdªn2CB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gChûdªn2CÆlback
 {

308 
	gLi°
<
	gSåög
> 
	gchûdªn
 = 
√w
 
AºayLi°
<
Såög
>();

310 
Chûdªn2CB
(
ZooKì≥r
 
zk
) {

311 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

314 
Chûdªn2CB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

315 
su≥r
(
zk
, 
œtch
);

318 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

319 
Li°
<
Såög
> 
chûdªn
, 
Sèt
 
°©
)

321 
	gthis
.
	gchûdªn
 =

322 (
chûdªn
 =
nuŒ
 ? 
√w
 
AºayLi°
<
Såög
>() : children);

323 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

326 
public
 
SåögCB
 
¸óãNode
() {

327 
SåögCB
 
	g∑ª¡
 = 
√w
 SåögCB(
zk
);

328 
	g∑ª¡
.
vîifyCª©e
();

330  
	g∑ª¡
;

333 
public
 
SåögCB
 
¸óãNode
(SåögCB 
∑ª¡
) {

334 
Såög
 
	gchûdName
 = "bar";

336  
¸óãNode
(
∑ª¡
, 
chûdName
);

339 
public
 
SåögCB
 
¸óãNode
(SåögCB 
∑ª¡
, 
Såög
 
chûdName
) {

340 
SåögCB
 
	gchûd
 = 
√w
 SåögCB(
zk
);

341 
	gchûd
.
£tP©h
(
∑ª¡
.
∑th
 + "/" + 
chûdName
);

342 
	gchûd
.
vîifyCª©e
();

344  
	gchûd
;

347 
public
 
vîifyGëChûdªnEm±y
() {

348 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

349 
	g∑th
 = 
∑ª¡
.
∑th
;

350 
vîify
();

353 
public
 
vîifyGëChûdªnSögÀ
() {

354 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

355 
SåögCB
 
	gchûd
 = 
¸óãNode
(
∑ª¡
);

357 
	g∑th
 = 
∑ª¡
.
∑th
;

358 
	gchûdªn
.
add
(
chûd
.
nodeName
());

360 
vîify
();

363 
public
 
vîifyGëChûdªnTwo
() {

364 
SåögCB
 
	g∑ª¡
 = 
¸óãNode
();

365 
SåögCB
 
	gchûd1
 = 
¸óãNode
(
∑ª¡
, "child1");

366 
SåögCB
 
	gchûd2
 = 
¸óãNode
(
∑ª¡
, "child2");

368 
	g∑th
 = 
∑ª¡
.
∑th
;

369 
	gchûdªn
.
add
(
chûd1
.
nodeName
());

370 
	gchûdªn
.
add
(
chûd2
.
nodeName
());

372 
vîify
();

375 
public
 
vîifyGëChûdªnFaûuª_NoNode
() {

376 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

377 
vîify
();

380 @
Ovîride


381 
public
 
vîify
() {

382 
	gzk
.
gëChûdªn
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

383 
	gsu≥r
.
vîify
();

386 @
Ovîride


387 
public
 
Såög
 
toSåög
() {

388  
	gsu≥r
.
toSåög
(Ë+ 
	gchûdªn
.toString();

392 
public
 ˛as†
	cD©aCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gD©aCÆlback
 {

393 
	gbyã
[] 
	gd©a
 = 
√w
 
byã
[10];

394 
Sèt
 
	g°©
 = 
√w
 Stat();

396 
D©aCB
(
ZooKì≥r
 
zk
) {

397 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

400 
D©aCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

401 
su≥r
(
zk
, 
œtch
);

402 
	g°©
.
£tAvîsi⁄
(0);

403 
	g°©
.
£tCvîsi⁄
(0);

404 
	g°©
.
£tEphemîÆOw√r
(0);

405 
	g°©
.
£tVîsi⁄
(0);

408 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

409 
Sèt
 
°©
)

411 
	gthis
.
	gd©a
 = 
d©a
;

412 
	gthis
.
	g°©
 = 
°©
;

413 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

416 
public
 
vîifyGëD©a
() {

417 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

419 
	gzk
.
gëD©a
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

420 
vîify
();

423 
public
 
vîifyGëD©aFaûuª_NoNode
() {

424 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

425 
	gd©a
 = 
nuŒ
;

426 
	g°©
 = 
nuŒ
;

427 
	gzk
.
gëD©a
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

428 
vîify
();

431 @
Ovîride


432 
public
 
Såög
 
toSåög
() {

433  
	gsu≥r
.
toSåög
()

434 + ":" + (
	gd©a
 =
nuŒ
 ? "nuŒ" : 
√w
 
Såög
(
d©a
))

435 + ":" + (
°©
 =
nuŒ
 ? "nuŒ" : sèt.
gëAvîsi⁄
() + ":"

436 + 
°©
.
gëCvîsi⁄
(Ë+ ":" + sèt.
gëEphemîÆOw√r
()

437 + ":" + 
°©
.
gëVîsi⁄
());

441 
public
 ˛as†
	cSètCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gSètCÆlback
 {

442 
	gLi°
<
	gACL
> 
	ga˛
 = 
Ids
.
CREATOR_ALL_ACL
;

443 
	gvîsi⁄
 = 0;

444 
Sèt
 
	g°©
 = 
√w
 Stat();

445 
	gbyã
[] 
	gd©a
 = "ã°ög".
gëByãs
();

447 
SètCB
(
ZooKì≥r
 
zk
) {

448 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

451 
SètCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

452 
su≥r
(
zk
, 
œtch
);

453 
	g°©
.
£tAvîsi⁄
(0);

454 
	g°©
.
£tCvîsi⁄
(0);

455 
	g°©
.
£tEphemîÆOw√r
(0);

456 
	g°©
.
£tVîsi⁄
(0);

459 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

460 
	gthis
.
	g°©
 = 
°©
;

461 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

464 
public
 
vîifySëACL
() {

465 
	g°©
.
£tAvîsi⁄
(1);

466 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

468 
	gzk
.
£tACL
(
∑th
, 
a˛
, 
vîsi⁄
, 
this
, 
toSåög
());

469 
vîify
();

472 
public
 
vîifySëACLFaûuª_NoNode
() {

473 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

474 
	g°©
 = 
nuŒ
;

475 
	gzk
.
£tACL
(
∑th
, 
a˛
, 
vîsi⁄
, 
this
, 
toSåög
());

476 
vîify
();

479 
public
 
£tD©a
() {

480 
	gzk
.
£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
, 
this
, 
toSåög
());

483 
public
 
vîifySëD©a
() {

484 
	g°©
.
£tVîsi⁄
(1);

485 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

487 
£tD©a
();

488 
vîify
();

491 
public
 
vîifySëD©aFaûuª_NoNode
() {

492 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

493 
	g°©
 = 
nuŒ
;

494 
	gzk
.
£tD©a
(
∑th
, 
d©a
, 
vîsi⁄
, 
this
, 
toSåög
());

495 
vîify
();

498 
public
 
vîifyExi°s
() {

499 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

501 
	gzk
.
exi°s
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

502 
vîify
();

505 
public
 
vîifyExi°sFaûuª_NoNode
() {

506 
	grc
 = 
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

507 
	g°©
 = 
nuŒ
;

508 
	gzk
.
exi°s
(
∑th
, 
Ál£
, 
this
, 
toSåög
());

509 
vîify
();

512 @
Ovîride


513 
public
 
Såög
 
toSåög
() {

514  
	gsu≥r
.
toSåög
(Ë+ 
	gvîsi⁄


515 + ":" + 
√w
 
Såög
(
d©a
)

516 + ":" + (
	g°©
 =
nuŒ
 ? "nuŒ" : 
°©
.
gëAvîsi⁄
() + ":"

517 + 
°©
.
gëCvîsi⁄
(Ë+ ":" + sèt.
gëEphemîÆOw√r
()

518 + ":" + 
°©
.
gëVîsi⁄
());

522 
public
 ˛as†
	cVoidCB
 
exãnds
 
AsyncCB
 
im∂emíts
 
	gVoidCÆlback
 {

523 
	gvîsi⁄
 = 0;

525 
VoidCB
(
ZooKì≥r
 
zk
) {

526 
this
(
zk
, 
√w
 
Cou¡DownL©ch
(1));

529 
VoidCB
(
ZooKì≥r
 
zk
, 
Cou¡DownL©ch
 
œtch
) {

530 
su≥r
(
zk
, 
œtch
);

533 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

534 
	gsu≥r
.
¥o˚ssResu…
(
Code
.
gë
(
rc
), 
∑th
, 
˘x
);

537 
public
 
dñëe
() {

538 
	gzk
.
dñëe
(
∑th
, 
vîsi⁄
, 
this
, 
toSåög
());

541 
public
 
vîifyDñëe
() {

542 
√w
 
SåögCB
(
zk
).
vîifyCª©e
();

544 
dñëe
();

545 
vîify
();

548 
public
 
vîifyDñëeFaûuª_NoNode
() {

549 
	grc
 = 
Code
.
NONODE
;

550 
	gzk
.
dñëe
(
∑th
, 
vîsi⁄
, 
this
, 
toSåög
());

551 
vîify
();

554 
public
 
sync
() {

555 
	gzk
.
sync
(
∑th
, 
this
, 
toSåög
());

558 
public
 
vîifySync
() {

559 
sync
();

560 
vîify
();

563 @
Ovîride


564 
public
 
Såög
 
toSåög
() {

565  
	gsu≥r
.
toSåög
(Ë+ 
	gvîsi⁄
;

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncOpsTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gACLCB
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gChûdªn2CB
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gChûdªnCB
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gD©aCB
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gSètCB
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gSåögCB
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gAsyncOps
.
	gVoidCB
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

37 
public
 cœs†
	cAsyncOpsTe°
 
exãnds
 
	mClõ¡Ba£
 {

38 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
AsyncOpsTe°
.
˛ass
);

40 
¥iv©e
 
ZooKì≥r
 
	mzk
;

42 @
	mBef‹e


43 @
Ovîride


44 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

45 
su≥r
.
	`£tUp
();

47 
LOG
.
	`öfo
("Cª©ög clõ¡ " + 
	`gëTe°Name
());

49 
zk
 = 
	`¸óãClõ¡
();

50 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd".
	`gëByãs
());

53 @
A·î


54 @
Ovîride


55 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

56 
zk
.
	`˛o£
();

58 
su≥r
.
	`ã¨Down
();

60 
LOG
.
	`öfo
("Test clients shutting down");

61 
	}
}

63 @
Te°


64 
public
 
	$ã°AsyncCª©e
() {

65 
√w
 
	`SåögCB
(
zk
).
	`vîifyCª©e
();

66 
	}
}

68 @
Te°


69 
public
 
	$ã°AsyncCª©eThªe
() {

70 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(3);

72 
SåögCB
 
›1
 = 
√w
 
	`SåögCB
(
zk
, 
œtch
);

73 
›1
.
	`£tP©h
("/op1");

74 
SåögCB
 
›2
 = 
√w
 
	`SåögCB
(
zk
, 
œtch
);

75 
›2
.
	`£tP©h
("/op2");

76 
SåögCB
 
›3
 = 
√w
 
	`SåögCB
(
zk
, 
œtch
);

77 
›3
.
	`£tP©h
("/op3");

79 
›1
.
	`¸óã
();

80 
›2
.
	`¸óã
();

81 
›3
.
	`¸óã
();

83 
›1
.
	`vîify
();

84 
›2
.
	`vîify
();

85 
›3
.
	`vîify
();

86 
	}
}

88 @
Te°


89 
public
 
	$ã°AsyncCª©eFaûuª_NodeExi°s
() {

90 
√w
 
	`SåögCB
(
zk
).
	`vîifyCª©eFaûuª_NodeExi°s
();

91 
	}
}

93 @
Te°


94 
public
 
	$ã°AsyncDñëe
() {

95 
√w
 
	`VoidCB
(
zk
).
	`vîifyDñëe
();

96 
	}
}

98 @
Te°


99 
public
 
	$ã°AsyncDñëeFaûuª_NoNode
() {

100 
√w
 
	`VoidCB
(
zk
).
	`vîifyDñëeFaûuª_NoNode
();

101 
	}
}

103 @
Te°


104 
public
 
	$ã°AsyncSync
() {

105 
√w
 
	`VoidCB
(
zk
).
	`vîifySync
();

106 
	}
}

108 @
Te°


109 
public
 
	$ã°AsyncSëACL
() {

110 
√w
 
	`SètCB
(
zk
).
	`vîifySëACL
();

111 
	}
}

113 @
Te°


114 
public
 
	$ã°AsyncSëACLFaûuª_NoNode
() {

115 
√w
 
	`SètCB
(
zk
).
	`vîifySëACLFaûuª_NoNode
();

116 
	}
}

118 @
Te°


119 
public
 
	$ã°AsyncSëD©a
() {

120 
√w
 
	`SètCB
(
zk
).
	`vîifySëD©a
();

121 
	}
}

123 @
Te°


124 
public
 
	$ã°AsyncSëD©aFaûuª_NoNode
() {

125 
√w
 
	`SètCB
(
zk
).
	`vîifySëD©aFaûuª_NoNode
();

126 
	}
}

128 @
Te°


129 
public
 
	$ã°AsyncExi°s
() {

130 
√w
 
	`SètCB
(
zk
).
	`vîifyExi°s
();

131 
	}
}

133 @
Te°


134 
public
 
	$ã°AsyncExi°sFaûuª_NoNode
() {

135 
√w
 
	`SètCB
(
zk
).
	`vîifyExi°sFaûuª_NoNode
();

136 
	}
}

138 @
Te°


139 
public
 
	$ã°AsyncGëACL
() {

140 
√w
 
	`ACLCB
(
zk
).
	`vîifyGëACL
();

141 
	}
}

143 @
Te°


144 
public
 
	$ã°AsyncGëChûdªnEm±y
() {

145 
√w
 
	`ChûdªnCB
(
zk
).
	`vîifyGëChûdªnEm±y
();

146 
	}
}

148 @
Te°


149 
public
 
	$ã°AsyncGëChûdªnSögÀ
() {

150 
√w
 
	`ChûdªnCB
(
zk
).
	`vîifyGëChûdªnSögÀ
();

151 
	}
}

153 @
Te°


154 
public
 
	$ã°AsyncGëChûdªnTwo
() {

155 
√w
 
	`ChûdªnCB
(
zk
).
	`vîifyGëChûdªnTwo
();

156 
	}
}

158 @
Te°


159 
public
 
	$ã°AsyncGëChûdªnFaûuª_NoNode
() {

160 
√w
 
	`ChûdªnCB
(
zk
).
	`vîifyGëChûdªnFaûuª_NoNode
();

161 
	}
}

163 @
Te°


164 
public
 
	$ã°AsyncGëChûdªn2Em±y
() {

165 
√w
 
	`ChûdªnCB
(
zk
).
	`vîifyGëChûdªnEm±y
();

166 
	}
}

168 @
Te°


169 
public
 
	$ã°AsyncGëChûdªn2SögÀ
() {

170 
√w
 
	`Chûdªn2CB
(
zk
).
	`vîifyGëChûdªnSögÀ
();

171 
	}
}

173 @
Te°


174 
public
 
	$ã°AsyncGëChûdªn2Two
() {

175 
√w
 
	`Chûdªn2CB
(
zk
).
	`vîifyGëChûdªnTwo
();

176 
	}
}

178 @
Te°


179 
public
 
	$ã°AsyncGëChûdªn2Faûuª_NoNode
() {

180 
√w
 
	`Chûdªn2CB
(
zk
).
	`vîifyGëChûdªnFaûuª_NoNode
();

181 
	}
}

183 @
Te°


184 
public
 
	$ã°AsyncGëD©a
() {

185 
√w
 
	`D©aCB
(
zk
).
	`vîifyGëD©a
();

186 
	}
}

188 @
Te°


189 
public
 
	$ã°AsyncGëD©aFaûuª_NoNode
() {

190 
√w
 
	`D©aCB
(
zk
).
	`vîifyGëD©aFaûuª_NoNode
();

191 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

43 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

44 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

45 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

46 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

48 
public
 
˛ass
 
AsyncTe°
 
exãnds
 
ZKTe°Ca£


49 
im∂emíts
 
	gSåögCÆlback
, 
	gVoidCÆlback
, 
	gD©aCÆlback


51 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
AsyncTe°
.
˛ass
);

53 
¥iv©e
 
Qu‹umBa£
 
	gqb
 = 
√w
 QuorumBase();

55 @
Bef‹e


56 
public
 
£tUp
(Ë
throws
 
	gEx˚±i⁄
 {

57 
	gqb
.
£tUp
();

60 
public
 
ª°¨t
(Ë
throws
 
	gEx˚±i⁄
 {

61 
	gJMXEnv
.
£tUp
();

62 
	gqb
.
°¨tSîvîs
();

65 @
A·î


66 
public
 
ã¨Down
(Ë
throws
 
	gEx˚±i⁄
 {

67 
	gLOG
.
öfo
("Test clients shutting down");

68 
	gqb
.
ã¨Down
();

71 
¥iv©e
 ˛as†
	cCou¡downW©chî
 
im∂emíts
 
	gW©chî
 {

72 vﬁ©ûê
Cou¡DownL©ch
 
	g˛õ¡C⁄√˘ed
 = 
√w
 CountDownLatch(1);

74 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

75 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

76 
˛õ¡C⁄√˘ed
.
cou¡Down
();

81 
¥iv©e
 
ZooKì≥r
 
	$¸óãClõ¡
(Ë
throws
 
IOEx˚±i⁄
,
I¡îru±edEx˚±i⁄
 {

82  
	`¸óãClõ¡
(
qb
.
ho°P‹t
);

83 
	}
}

85 
¥iv©e
 
ZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

86 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


88 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

89 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
hp
, 
CONNECTION_TIMEOUT
, 
w©chî
);

90 if(!
w©chî
.
˛õ¡C⁄√˘ed
.
	`awaô
(
CONNECTION_TIMEOUT
,

91 
TimeUnô
.
MILLISECONDS
))

93 
As£π
.
	`Áû
("UnableÅo connectÅo server");

95  
zk
;

96 
	}
}

98 
	gLökedLi°
<
	gI¡egî
> 
	gªsu…s
 = 
√w
 
LökedLi°
<
I¡egî
>();

99 @
Te°


100 
public
 
	$ã°Async
()

101 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


103 
ZooKì≥r
 
zk
 = 
nuŒ
;

104 
zk
 = 
	`¸óãClõ¡
();

105 
åy
 {

106 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd".
	`gëByãs
());

107 
zk
.
	`¸óã
("/bí", 
√w
 
byã
[0], 
Ids
.
READ_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
, 
this
, 
ªsu…s
);

108 
zk
.
	`¸óã
("/bí/2", 
√w
 
byã
[0], 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
, 
this
, 
ªsu…s
);

109 
zk
.
	`dñëe
("/bí", -1, 
this
, 
ªsu…s
);

110 
zk
.
	`¸óã
("/bí2", 
√w
 
byã
[0], 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
, 
this
, 
ªsu…s
);

111 
zk
.
	`gëD©a
("/bí2", 
Ál£
, 
this
, 
ªsu…s
);

112 
	`synchr⁄ized
 (
ªsu…s
) {

113 
ªsu…s
.
	`size
() < 5) {

114 
ªsu…s
.
	`waô
();

117 
As£π
.
	`as£πEquÆs
(0, (Ë
ªsu…s
.
	`gë
(0));

118 
As£π
.
	`as£πEquÆs
(
Code
.
NOAUTH
, Code.
	`gë
(
ªsu…s
.get(1)));

119 
As£π
.
	`as£πEquÆs
(0, (Ë
ªsu…s
.
	`gë
(2));

120 
As£π
.
	`as£πEquÆs
(0, (Ë
ªsu…s
.
	`gë
(3));

121 
As£π
.
	`as£πEquÆs
(0, (Ë
ªsu…s
.
	`gë
(4));

122 } 
föÆly
 {

123 
zk
.
	`˛o£
();

126 
zk
 = 
	`¸óãClõ¡
();

127 
åy
 {

128 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd2".
	`gëByãs
());

129 
åy
 {

130 
zk
.
	`gëD©a
("/bí2", 
Ál£
, 
√w
 
	`Sèt
());

131 
As£π
.
	`Áû
("Should haveÑeceivedáÖermissionÉrror");

132 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

133 
As£π
.
	`as£πEquÆs
(
Code
.
NOAUTH
, 
e
.
	`code
());

135 } 
föÆly
 {

136 
zk
.
	`˛o£
();

139 
zk
 = 
	`¸óãClõ¡
();

140 
åy
 {

141 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd".
	`gëByãs
());

142 
zk
.
	`gëD©a
("/bí2", 
Ál£
, 
√w
 
	`Sèt
());

143 } 
föÆly
 {

144 
zk
.
	`˛o£
();

146 
	}
}

148 @
SuµªssW¨nögs
("unchecked")

149 
public
 
	$¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

150 
	`synchr⁄ized
(
˘x
) {

151 ((
LökedLi°
<
I¡egî
>)
˘x
).
	`add
(
rc
);

152 
˘x
.
	`nŸifyAŒ
();

154 
	}
}

156 @
SuµªssW¨nögs
("unchecked")

157 
public
 
	$¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

158 
	`synchr⁄ized
(
˘x
) {

159 ((
LökedLi°
<
I¡egî
>)
˘x
).
	`add
(
rc
);

160 
˘x
.
	`nŸifyAŒ
();

162 
	}
}

164 @
SuµªssW¨nögs
("unchecked")

165 
public
 
	$¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

166 
Sèt
 
°©
) {

167 
	`synchr⁄ized
(
˘x
) {

168 ((
LökedLi°
<
I¡egî
>)
˘x
).
	`add
(
rc
);

169 
˘x
.
	`nŸifyAŒ
();

171 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AtomicFileOutputStreamTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πFÆ£
;

22 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûeNŸFoundEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	gio
.
	gFûeOuçutSåóm
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gAtomicFûeOuçutSåóm
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

37 
public
 cœs†
	cAtomicFûeOuçutSåómTe°
 
exãnds
 
	mZKTe°Ca£
 {

38 
¥iv©e
 
föÆ
 
Såög
 
	mTEST_STRING
 = "hello world";

39 
¥iv©e
 
föÆ
 
Såög
 
	mTEST_STRING_2
 = "goodbye world";

41 
¥iv©e
 
Fûe
 
	mã°Dú
;

42 
¥iv©e
 
Fûe
 
	md°Fûe
;

44 @
Bef‹e


45 
public
 
	$£tupTe°Dú
(Ë
throws
 
IOEx˚±i⁄
 {

46 
ã°Dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

47 
d°Fûe
 = 
√w
 
	`Fûe
(
ã°Dú
, "test.txt");

49 @
A·î


50 
public
 
	$˛ónupTe°Dú
(Ë
throws
 
IOEx˚±i⁄
 {

51 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
ã°Dú
);

52 
	}
}

57 @
Te°


58 
public
 
	$ã°WrôeNewFûe
(Ë
throws
 
IOEx˚±i⁄
 {

59 
OuçutSåóm
 
fos
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

60 
	`as£πFÆ£
(
d°Fûe
.
	`exi°s
());

61 
fos
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

62 
fos
.
	`Êush
();

63 
	`as£πFÆ£
(
d°Fûe
.
	`exi°s
());

64 
fos
.
	`˛o£
();

65 
	`as£πTrue
(
d°Fûe
.
	`exi°s
());

67 
Såög
 
ªadBackD©a
 = 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
);

68 
	`as£πEquÆs
(
TEST_STRING
, 
ªadBackD©a
);

69 
	}
}

74 @
Te°


75 
public
 
	$ã°OvîwrôeFûe
(Ë
throws
 
IOEx˚±i⁄
 {

76 
	`as£πTrue
("Cª©ögÉm±y d° fûe", 
d°Fûe
.
	`¸óãNewFûe
());

78 
OuçutSåóm
 
fos
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

80 
	`as£πTrue
("Em±y fûê°û»exi°s", 
d°Fûe
.
	`exi°s
());

81 
fos
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

82 
fos
.
	`Êush
();

85 
	`as£πEquÆs
("", 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
));

87 
fos
.
	`˛o£
();

90 
Såög
 
ªadBackD©a
 = 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
);

91 
	`as£πEquÆs
(
TEST_STRING
, 
ªadBackD©a
);

92 
	}
}

98 @
Te°


99 
public
 
	$ã°FaûToFlush
(Ë
throws
 
IOEx˚±i⁄
 {

101 
FûeOuçutSåóm
 
fos
 = 
√w
 
	`FûeOuçutSåóm
(
d°Fûe
);

102 
fos
.
	`wrôe
(
TEST_STRING_2
.
	`gëByãs
());

103 
fos
.
	`˛o£
();

105 
OuçutSåóm
 
ÁûögSåóm
 = 
	`¸óãFaûögSåóm
();

106 
ÁûögSåóm
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

107 
åy
 {

108 
ÁûögSåóm
.
	`˛o£
();

109 
	`Áû
("Close didn'tÅhrowÉxception");

110 } 
	`ˇtch
 (
IOEx˚±i⁄
 
i€
) {

115 
	`as£πEquÆs
(
TEST_STRING_2
, 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
));

117 
	`as£πEquÆs
("Temporary file should have been cleaned up",

118 
d°Fûe
.
	`gëName
(), 
Clõ¡Ba£
.
	`joö
(",", 
ã°Dú
.
	`li°
()));

119 
	}
}

124 
¥iv©e
 
OuçutSåóm
 
	$¸óãFaûögSåóm
(Ë
throws
 
FûeNŸFoundEx˚±i⁄
 {

125  
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
) {

126 @
Ovîride


127 
public
 
	`Êush
(Ë
throws
 
IOEx˚±i⁄
 {

128 
throw
 
√w
 
	`IOEx˚±i⁄
("injected failure");

131 
	}
}

137 @
Te°


138 
public
 
	$ã°Ab‹tNewFûe
(Ë
throws
 
IOEx˚±i⁄
 {

139 
AtomicFûeOuçutSåóm
 
fos
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

141 
fos
.
	`ab‹t
();

143 
	`as£πEquÆs
(0, 
ã°Dú
.
	`li°
().
Àngth
);

144 
	}
}

150 @
Te°


151 
public
 
	$ã°Ab‹tNewFûeA·îFlush
(Ë
throws
 
IOEx˚±i⁄
 {

152 
AtomicFûeOuçutSåóm
 
fos
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

153 
fos
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

154 
fos
.
	`Êush
();

156 
fos
.
	`ab‹t
();

158 
	`as£πEquÆs
(0, 
ã°Dú
.
	`li°
().
Àngth
);

159 
	}
}

165 @
Te°


166 
public
 
	$ã°Ab‹tExi°ögFûe
(Ë
throws
 
IOEx˚±i⁄
 {

167 
FûeOuçutSåóm
 
fos1
 = 
√w
 
	`FûeOuçutSåóm
(
d°Fûe
);

168 
fos1
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

169 
fos1
.
	`˛o£
();

171 
AtomicFûeOuçutSåóm
 
fos2
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

173 
fos2
.
	`ab‹t
();

176 
	`as£πEquÆs
(
TEST_STRING
, 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
));

177 
	`as£πEquÆs
(1, 
ã°Dú
.
	`li°
().
Àngth
);

178 
	}
}

184 @
Te°


185 
public
 
	$ã°Ab‹tExi°ögFûeA·îFlush
(Ë
throws
 
IOEx˚±i⁄
 {

186 
FûeOuçutSåóm
 
fos1
 = 
√w
 
	`FûeOuçutSåóm
(
d°Fûe
);

187 
fos1
.
	`wrôe
(
TEST_STRING
.
	`gëByãs
());

188 
fos1
.
	`˛o£
();

190 
AtomicFûeOuçutSåóm
 
fos2
 = 
√w
 
	`AtomicFûeOuçutSåóm
(
d°Fûe
);

191 
fos2
.
	`wrôe
(
TEST_STRING_2
.
	`gëByãs
());

192 
fos2
.
	`Êush
();

194 
fos2
.
	`ab‹t
();

197 
	`as£πEquÆs
(
TEST_STRING
, 
Clõ¡Ba£
.
	`ªadFûe
(
d°Fûe
));

198 
	`as£πEquÆs
(1, 
ã°Dú
.
	`li°
().
Àngth
);

199 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AuthTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

35 
public
 cœs†
	cAuthTe°
 
exãnds
 
	mClõ¡Ba£
 {

38 
	mSy°em
.
£tPr›îty
("zookeeper.DigestAuthenticationProvider.superDigest",

40 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1", "org.apache.zookeeper.test.InvalidAuthProvider");

43 
¥iv©e
 
föÆ
 
Cou¡DownL©ch
 
	gauthFaûed
 = 
√w
 CountDownLatch(1);

45 @
Ovîride


46 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

47 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


49 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

50  
	`¸óãClõ¡
(
w©chî
, 
hp
);

51 
	}
}

53 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

54 @
Ovîride


55 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

56 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

57 
authFaûed
.
cou¡Down
();

60 
	gsu≥r
.
¥o˚ss
(
evít
);

65 @
Te°


66 
public
 
	$ã°BadAuthNŸifõsW©ch
(Ë
throws
 
Ex˚±i⁄
 {

67 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

68 
åy
 {

69 
zk
.
	`addAuthInfo
("FOO", "BAR".
	`gëByãs
());

70 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

71 
As£π
.
	`Áû
("Should getáuth stateÉrror");

72 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
AuthFaûedEx˚±i⁄
 
e
) {

73 if(!
authFaûed
.
	`awaô
(
CONNECTION_TIMEOUT
,

74 
TimeUnô
.
MILLISECONDS
))

76 
As£π
.
	`Áû
("Should have called my watcher");

79 
föÆly
 {

80 
zk
.
	`˛o£
();

82 
	}
}

84 @
Te°


85 
public
 
	$ã°BadAuthThíSídOthîComm™ds
(Ë
throws
 
Ex˚±i⁄
 {

86 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

87 
åy
 {

88 
zk
.
	`addAuthInfo
("INVALID", "BAR".
	`gëByãs
());

89 
zk
.
	`exi°s
("/foob¨", 
Ál£
);

90 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

91 
As£π
.
	`Áû
("Should getáuth stateÉrror");

92 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
AuthFaûedEx˚±i⁄
 
e
) {

93 if(!
authFaûed
.
	`awaô
(
CONNECTION_TIMEOUT
,

94 
TimeUnô
.
MILLISECONDS
))

96 
As£π
.
	`Áû
("Should have called my watcher");

99 
föÆly
 {

100 
zk
.
	`˛o£
();

102 
	}
}

105 @
Te°


106 
public
 
	$ã°Su≥r
(Ë
throws
 
Ex˚±i⁄
 {

107 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

108 
åy
 {

109 
zk
.
	`addAuthInfo
("dige°", "∑t:∑ss".
	`gëByãs
());

110 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

111 
Cª©eMode
.
PERSISTENT
);

112 
zk
.
	`˛o£
();

114 
zk
 = 
	`¸óãClõ¡
();

115 
åy
 {

116 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

117 
As£π
.
	`Áû
("auth verification");

118 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

121 
zk
.
	`˛o£
();

123 
zk
 = 
	`¸óãClõ¡
();

124 
zk
.
	`addAuthInfo
("dige°", "∑t:∑ss2".
	`gëByãs
());

125 
åy
 {

126 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

127 
As£π
.
	`Áû
("auth verification");

128 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

131 
zk
.
	`˛o£
();

133 
zk
 = 
	`¸óãClõ¡
();

134 
zk
.
	`addAuthInfo
("dige°", "su≥r:ã°2".
	`gëByãs
());

135 
åy
 {

136 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

137 
As£π
.
	`Áû
("auth verification");

138 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoAuthEx˚±i⁄
 
e
) {

141 
zk
.
	`˛o£
();

143 
zk
 = 
	`¸óãClõ¡
();

144 
zk
.
	`addAuthInfo
("dige°", "su≥r:ã°".
	`gëByãs
());

145 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

146 } 
föÆly
 {

147 
zk
.
	`˛o£
();

149 
	}
}

151 @
Te°


152 
public
 
	$ã°Su≥rACL
(Ë
throws
 
Ex˚±i⁄
 {

153 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

154 
åy
 {

155 
zk
.
	`addAuthInfo
("dige°", "∑t:∑ss".
	`gëByãs
());

156 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
,

157 
Cª©eMode
.
PERSISTENT
);

158 
zk
.
	`˛o£
();

160 
zk
 = 
	`¸óãClõ¡
();

161 
zk
.
	`addAuthInfo
("dige°", "su≥r:ã°".
	`gëByãs
());

162 
zk
.
	`gëD©a
("/∑th1", 
Ál£
, 
nuŒ
);

164 
zk
.
	`£tACL
("/∑th1", 
Ids
.
READ_ACL_UNSAFE
, -1);

165 
zk
.
	`¸óã
("/∑th1/foo", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

168 
zk
.
	`£tACL
("/∑th1", 
Ids
.
OPEN_ACL_UNSAFE
, -1);

170 } 
föÆly
 {

171 
zk
.
	`˛o£
();

173 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootAsyncTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

27 
public
 cœs†
	cChroŸAsyncTe°
 
exãnds
 
	mAsyncOpsTe°
 {

28 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ChroŸAsyncTe°
.
˛ass
);

30 @
Ovîride


31 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

32 
Såög
 
hp
 = 
ho°P‹t
;

33 
ho°P‹t
 = hostPort + "/chrootasynctest";

35 
su≥r
.
	`£tUp
();

37 
LOG
.
	`öfo
("Cª©ög clõ¡ " + 
	`gëTe°Name
());

39 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
hp
);

40 
åy
 {

41 
zk
.
	`¸óã
("/chroŸasyn˘e°", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

42 
Cª©eMode
.
PERSISTENT
);

43 } 
föÆly
 {

44 
zk
.
	`˛o£
();

47 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootClientTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

28 
public
 cœs†
	cChroŸClõ¡Te°
 
exãnds
 
	mClõ¡Te°
 {

29 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ChroŸClõ¡Te°
.
˛ass
);

31 @
Ovîride


32 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

33 
Såög
 
hp
 = 
ho°P‹t
;

34 
ho°P‹t
 = hostPort + "/chrootclienttest";

36 
Sy°em
.
out
.
	`¥öén
(
ho°P‹t
);

37 
su≥r
.
	`£tUp
();

39 
LOG
.
	`öfo
("STARTING " + 
	`gëTe°Name
());

41 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
hp
);

42 
åy
 {

43 
zk
.
	`¸óã
("/chroŸ˛õ¡ã°", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

44 
Cª©eMode
.
PERSISTENT
);

45 } 
föÆly
 {

46 
zk
.
	`˛o£
();

50 @
Te°


51 
public
 
	$ã°Pög
(Ë
throws
 
Ex˚±i⁄
 {

53 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

35 
public
 cœs†
	cChroŸTe°
 
exãnds
 
	mClõ¡Ba£
 {

36 
¥iv©e
 cœs†
	cMyW©chî
 
im∂emíts
 
	mW©chî
 {

37 
¥iv©e
 
föÆ
 
Såög
 
	m∑th
;

38 
¥iv©e
 
Såög
 
	mevítP©h
;

39 
¥iv©e
 
Cou¡DownL©ch
 
	mœtch
 = 
√w
 CountDownLatch(1);

41 
public
 
MyW©chî
(
Såög
 
∑th
) {

42 
	mthis
.
	m∑th
 = 
∑th
;

44 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

45 
	mSy°em
.
	mout
.
¥öén
("œtch:" + 
∑th
 + " " + 
evít
.
gëP©h
());

46 
	mthis
.
	mevítP©h
 = 
evít
.
gëP©h
();

47 
	mœtch
.
cou¡Down
();

49 
public
 
boﬁón
 
m©ches
(Ë
throws
 
	mI¡îru±edEx˚±i⁄
 {

50 i‡(!
	mœtch
.
awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
)) {

51 
	mAs£π
.
Áû
("Nÿw©chÑe˚ived wôhöÅimeouà≥riod " + 
∑th
);

53  
	m∑th
.
equÆs
(
evítP©h
);

57 @
Te°


58 
public
 
	$ã°ChroŸSynchr⁄ous
()

59 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


61 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

62 
åy
 {

63 
zk1
.
	`¸óã
("/ch1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

64 
Cª©eMode
.
PERSISTENT
);

65 } 
föÆly
 {

66 if(
zk1
 !
nuŒ
)

67 
zk1
.
	`˛o£
();

69 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
(
ho°P‹t
 + "/ch1");

70 
åy
 {

71 
As£π
.
	`as£πEquÆs
("/ch2",

72 
zk2
.
	`¸óã
("/ch2", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

73 
Cª©eMode
.
PERSISTENT
));

74 } 
föÆly
 {

75 if(
zk2
 !
nuŒ
)

76 
zk2
.
	`˛o£
();

79 
zk1
 = 
	`¸óãClõ¡
();

80 
zk2
 = 
	`¸óãClõ¡
(
ho°P‹t
 + "/ch1");

81 
åy
 {

83 
MyW©chî
 
w1
 = 
√w
 
	`MyW©chî
("/ch1");

84 
As£π
.
	`as£πNŸNuŒ
(
zk1
.
	`exi°s
("/ch1", 
w1
));

85 
MyW©chî
 
w2
 = 
√w
 
	`MyW©chî
("/ch1/ch2");

86 
As£π
.
	`as£πNŸNuŒ
(
zk1
.
	`exi°s
("/ch1/ch2", 
w2
));

88 
MyW©chî
 
w3
 = 
√w
 
	`MyW©chî
("/ch2");

89 
As£π
.
	`as£πNŸNuŒ
(
zk2
.
	`exi°s
("/ch2", 
w3
));

92 
MyW©chî
 
w4
 = 
√w
 
	`MyW©chî
("/ch1");

93 
zk1
.
	`gëChûdªn
("/ch1",
w4
);

94 
MyW©chî
 
w5
 = 
√w
 
	`MyW©chî
("/");

95 
zk2
.
	`gëChûdªn
("/",
w5
);

98 
zk1
.
	`£tD©a
("/ch1", "1".
	`gëByãs
(), -1);

99 
zk2
.
	`£tD©a
("/ch2", "2".
	`gëByãs
(), -1);

102 
As£π
.
	`as£πTrue
(
w1
.
	`m©ches
());

103 
As£π
.
	`as£πTrue
(
w2
.
	`m©ches
());

104 
As£π
.
	`as£πTrue
(
w3
.
	`m©ches
());

107 
åy
 {

108 
zk2
.
	`£tD©a
("/ch3", "3".
	`gëByãs
(), -1);

109 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

110 
As£π
.
	`as£πEquÆs
("/ch3", 
e
.
	`gëP©h
());

113 
As£π
.
	`as£πTrue
(
Aºays
.
	`equÆs
("1".
	`gëByãs
(),

114 
zk1
.
	`gëD©a
("/ch1", 
Ál£
, 
nuŒ
)));

115 
As£π
.
	`as£πTrue
(
Aºays
.
	`equÆs
("2".
	`gëByãs
(),

116 
zk1
.
	`gëD©a
("/ch1/ch2", 
Ál£
, 
nuŒ
)));

117 
As£π
.
	`as£πTrue
(
Aºays
.
	`equÆs
("2".
	`gëByãs
(),

118 
zk2
.
	`gëD©a
("/ch2", 
Ál£
, 
nuŒ
)));

121 
zk2
.
	`dñëe
("/ch2", -1);

122 
As£π
.
	`as£πTrue
(
w4
.
	`m©ches
());

123 
As£π
.
	`as£πTrue
(
w5
.
	`m©ches
());

125 
zk1
.
	`dñëe
("/ch1", -1);

126 
As£π
.
	`as£πNuŒ
(
zk1
.
	`exi°s
("/ch1", 
Ál£
));

127 
As£π
.
	`as£πNuŒ
(
zk1
.
	`exi°s
("/ch1/ch2", 
Ál£
));

128 
As£π
.
	`as£πNuŒ
(
zk2
.
	`exi°s
("/ch2", 
Ál£
));

129 } 
föÆly
 {

130 if(
zk1
 !
nuŒ
)

131 
zk1
.
	`˛o£
();

132 if(
zk2
 !
nuŒ
)

133 
zk2
.
	`˛o£
();

135 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientBase.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gFourLëãrW‹dMaö
.
	g£nd4LëãrW‹d
;

23 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

25 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

26 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

27 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

28 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

29 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
.
	gE¡ry
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

37 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

38 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeoutEx˚±i⁄
;

40 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvîC⁄√˘i⁄
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gcomm⁄
.
	gIOUtûs
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹yAc˚ss‹
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

54 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

55 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

56 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

57 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

58 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

59 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

60 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

61 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

63 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

65 
public
 
ab°ø˘
 cœs†
	cClõ¡Ba£
 
exãnds
 
	mZKTe°Ca£
 {

66 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡Ba£
.
˛ass
);

68 
public
 
	mCONNECTION_TIMEOUT
 = 30000;

69 
föÆ
 
Fûe
 
	mBASETEST
 =

70 
√w
 
Fûe
(
Sy°em
.
gëPr›îty
("build.test.dir", "build"));

72 
¥Ÿe˘ed
 
Såög
 
	mho°P‹t
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

73 
¥Ÿe˘ed
 
	mmaxCnxns
 = 0;

74 
¥Ÿe˘ed
 
SîvîCnxnFa˘‹y
 
	m£rvîFa˘‹y
 = 
nuŒ
;

75 
¥Ÿe˘ed
 
Fûe
 
	mtmpDú
 = 
nuŒ
;

77 
	möôülFdCou¡
;

79 
public
 
	$Clõ¡Ba£
() {

80 
	`su≥r
();

89 
¥Ÿe˘ed
 cœs†
	cNuŒW©chî
 
im∂emíts
 
W©chî
 {

90 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) { }

91 
	}
}

93 
public
 ˛as†
	cCou¡downW©chî
 
im∂emíts
 
	gW©chî
 {

95 vﬁ©ûê
Cou¡DownL©ch
 
	g˛õ¡C⁄√˘ed
;

96 vﬁ©ûê
boﬁón
 
	gc⁄√˘ed
;

98 
public
 
Cou¡downW©chî
() {

99 
ª£t
();

101 
synchr⁄ized
 
public
 
ª£t
() {

102 
	g˛õ¡C⁄√˘ed
 = 
√w
 
Cou¡DownL©ch
(1);

103 
	gc⁄√˘ed
 = 
Ál£
;

105 
synchr⁄ized
 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

106 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
 ||

107 
evít
.
gëSèã
(Ë=
Kì≥rSèã
.
C⁄√˘edRódO∆y
) {

108 
c⁄√˘ed
 = 
åue
;

109 
nŸifyAŒ
();

110 
	g˛õ¡C⁄√˘ed
.
cou¡Down
();

112 
	gc⁄√˘ed
 = 
Ál£
;

113 
nŸifyAŒ
();

116 
synchr⁄ized
 
public
 
boﬁón
 
isC⁄√˘ed
() {

117  
	gc⁄√˘ed
;

119 
synchr⁄ized
 
public
 
waôF‹C⁄√˘ed
(
timeout
)

120 
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gTimeoutEx˚±i⁄


122 
	gexpúe
 = 
Sy°em
.
cuºítTimeMûlis
(Ë+ 
timeout
;

123 
	gÀ·
 = 
timeout
;

124 !
	gc⁄√˘ed
 && 
	gÀ·
 > 0) {

125 
waô
(
À·
);

126 
	gÀ·
 = 
expúe
 - 
Sy°em
.
cuºítTimeMûlis
();

128 i‡(!
	gc⁄√˘ed
) {

129 
throw
 
√w
 
TimeoutEx˚±i⁄
("DidÇot connect");

133 
synchr⁄ized
 
public
 
waôF‹Disc⁄√˘ed
(
timeout
)

134 
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gTimeoutEx˚±i⁄


136 
	gexpúe
 = 
Sy°em
.
cuºítTimeMûlis
(Ë+ 
timeout
;

137 
	gÀ·
 = 
timeout
;

138 
	gc⁄√˘ed
 && 
	gÀ·
 > 0) {

139 
waô
(
À·
);

140 
	gÀ·
 = 
expúe
 - 
Sy°em
.
cuºítTimeMûlis
();

142 i‡(
	gc⁄√˘ed
) {

143 
throw
 
√w
 
TimeoutEx˚±i⁄
("DidÇot disconnect");

149 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
()

150 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


152  
	`¸óãClõ¡
(
ho°P‹t
);

153 
	}
}

155 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

156 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


158 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

159  
	`¸óãClõ¡
(
w©chî
, 
hp
);

160 
	}
}

162 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Cou¡downW©chî
 
w©chî
)

163 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


165  
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
);

166 
	}
}

168 
¥iv©e
 
	gLökedLi°
<
	gZooKì≥r
> 
	gÆlClõ¡s
;

169 
¥iv©e
 
boﬁón
 
	gÆlClõ¡sSëup
 = 
Ál£
;

171 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Cou¡downW©chî
 
w©chî
, 
Såög
 
hp
)

172 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


174  
	`¸óãClõ¡
(
w©chî
, 
hp
, 
CONNECTION_TIMEOUT
);

175 
	}
}

177 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Cou¡downW©chî
 
w©chî
,

178 
Såög
 
hp
, 
timeout
)

179 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


181 
w©chî
.
	`ª£t
();

182 
Te°abÀZooKì≥r
 
zk
 = 
√w
 
	`Te°abÀZooKì≥r
(
hp
, 
timeout
, 
w©chî
);

183 i‡(!
w©chî
.
˛õ¡C⁄√˘ed
.
	`awaô
(
timeout
, 
TimeUnô
.
MILLISECONDS
))

185 
As£π
.
	`Áû
("UnableÅo connectÅo server");

187 
	`synchr⁄ized
(
this
) {

188 i‡(!
ÆlClõ¡sSëup
) {

189 
LOG
.
	`îr‹
("allClientsÇever setup");

190 
As£π
.
	`Áû
("allClientsÇever setup");

192 i‡(
ÆlClõ¡s
 !
nuŒ
) {

193 
ÆlClõ¡s
.
	`add
(
zk
);

196 
zk
.
	`˛o£
();

200 
JMXEnv
.
	`ísuªAŒ
("0x" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
()));

202  
zk
;

203 
	}
}

205 
public
 ˛as†
	cHo°P‹t
 {

206 
Såög
 
	gho°
;

207 
	gp‹t
;

208 
public
 
Ho°P‹t
(
Såög
 
ho°
, 
p‹t
) {

209 
	gthis
.
	gho°
 = 
ho°
;

210 
	gthis
.
	gp‹t
 = 
p‹t
;

213 
public
 
	gLi°
<
	gHo°P‹t
> 
	$∑r£Ho°P‹tLi°
(
Såög
 
h∂i°
) {

214 
AºayLi°
<
Ho°P‹t
> 
Æi°
 = 
√w
 ArrayList<HostPort>();

215 
Såög
 
hp
: 
h∂i°
.
	`•lô
(",")) {

216 
idx
 = 
hp
.
	`œ°IndexOf
(':');

217 
Såög
 
ho°
 = 
hp
.
	`sub°rög
(0, 
idx
);

218 
p‹t
;

219 
åy
 {

220 
p‹t
 = 
I¡egî
.
	`∑r£I¡
(
hp
.
	`sub°rög
(
idx
 + 1));

221 } 
	`ˇtch
(
Ru¡imeEx˚±i⁄
 
e
) {

222 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
("ProbÀmÖ¨sög " + 
hp
 + 
e
.
	`toSåög
());

224 
Æi°
.
	`add
(
√w
 
	`Ho°P‹t
(
ho°
,
p‹t
));

226  
Æi°
;

227 
	}
}

229 
public
 
boﬁón
 
	$waôF‹SîvîUp
(
Såög
 
hp
, 
timeout
) {

230 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

231 
åue
) {

232 
åy
 {

234 
Ho°P‹t
 
hpobj
 = 
	`∑r£Ho°P‹tLi°
(
hp
).
	`gë
(0);

235 
Såög
 
ªsu…
 = 
	`£nd4LëãrW‹d
(
hpobj
.
ho°
, hpobj.
p‹t
, "stat");

236 i‡(
ªsu…
.
	`°¨tsWôh
("Zookeeper version:") &&

237 !
ªsu…
.
	`c⁄èös
("READ-ONLY")) {

238  
åue
;

240 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

242 
LOG
.
	`öfo
("£rvî " + 
hp
 + "ÇŸ u∞" + 
e
);

245 i‡(
Sy°em
.
	`cuºítTimeMûlis
(Ë> 
°¨t
 + 
timeout
) {

248 
åy
 {

249 
Thªad
.
	`¶ìp
(250);

250 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

254  
Ál£
;

255 
	}
}

256 
public
 
boﬁón
 
	$waôF‹SîvîDown
(
Såög
 
hp
, 
timeout
) {

257 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

258 
åue
) {

259 
åy
 {

260 
Ho°P‹t
 
hpobj
 = 
	`∑r£Ho°P‹tLi°
(
hp
).
	`gë
(0);

261 
	`£nd4LëãrW‹d
(
hpobj
.
ho°
, hpobj.
p‹t
, "stat");

262 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

263  
åue
;

266 i‡(
Sy°em
.
	`cuºítTimeMûlis
(Ë> 
°¨t
 + 
timeout
) {

269 
åy
 {

270 
Thªad
.
	`¶ìp
(250);

271 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

275  
Ál£
;

276 
	}
}

278 
public
 
boﬁón
 
	$waôF‹SîvîSèã
(
Qu‹umPìr
 
qp
, 
timeout
,

279 
Såög
 
£rvîSèã
) {

280 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

281 
åue
) {

282 
åy
 {

283 
Thªad
.
	`¶ìp
(250);

284 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

287 i‡(
qp
.
	`gëSîvîSèã
().
	`equÆs
(
£rvîSèã
))

288  
åue
;

289 i‡(
Sy°em
.
	`cuºítTimeMûlis
(Ë> 
°¨t
 + 
timeout
) {

290  
Ál£
;

293 
	}
}

295 
	$vîifyThªadTîmö©ed
(
Thªad
 
thªad
, 
mûlis
)

296 
throws
 
I¡îru±edEx˚±i⁄


298 
thªad
.
	`joö
(
mûlis
);

299 i‡(
thªad
.
	`isAlive
()) {

300 
LOG
.
	`îr‹
("Thªad " + 
thªad
.
	`gëName
() + " : "

301 + 
Aºays
.
	`toSåög
(
thªad
.
	`gëSèckTø˚
()));

302 
As£π
.
	`as£πFÆ£
("thªad " + 
thªad
.
	`gëName
()

303 + " stû»Æivêa·î joö", 
åue
);

305 
	}
}

308 
public
 
Fûe
 
	$¸óãTmpDú
(Ë
throws
 
IOEx˚±i⁄
 {

309  
	`¸óãTmpDú
(
BASETEST
);

310 
	}
}

311 
Fûe
 
	$¸óãTmpDú
(
Fûe
 
∑ª¡Dú
Ë
throws
 
IOEx˚±i⁄
 {

312 
Fûe
 
tmpFûe
 = Fûe.
	`¸óãTempFûe
("ã°", ".junô", 
∑ª¡Dú
);

315 
Fûe
 
tmpDú
 = 
√w
 
	`Fûe
(
tmpFûe
 + ".dir");

316 
As£π
.
	`as£πFÆ£
(
tmpDú
.
	`exi°s
());

317 
As£π
.
	`as£πTrue
(
tmpDú
.
	`mkdús
());

319  
tmpDú
;

320 
	}
}

321 
¥iv©e
 
	$gëP‹t
(
Såög
 
ho°P‹t
) {

322 
Såög
[] 
•lô
 = 
ho°P‹t
.
	`•lô
(":");

323 
Såög
 
p‹t°r
 = 
•lô
[•lô.
Àngth
-1];

324 
Såög
[] 
pc
 = 
p‹t°r
.
	`•lô
("/");

325 i‡(
pc
.
Àngth
 > 1) {

326 
p‹t°r
 = 
pc
[0];

328  
I¡egî
.
	`∑r£I¡
(
p‹t°r
);

329 
	}
}

331 
public
 
SîvîCnxnFa˘‹y
 
	$¸óãNewSîvîIn°™˚
(
Fûe
 
d©aDú
,

332 
SîvîCnxnFa˘‹y
 
Á˘‹y
, 
Såög
 
ho°P‹t
, 
maxCnxns
)

333 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


335 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
d©aDú
, dataDir, 3000);

336 
föÆ
 
PORT
 = 
	`gëP‹t
(
ho°P‹t
);

337 i‡(
Á˘‹y
 =
nuŒ
) {

338 
Á˘‹y
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, 
maxCnxns
);

340 
Á˘‹y
.
	`°¨tup
(
zks
);

341 
As£π
.
	`as£πTrue
("waiting for server up",

342 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
PORT
,

343 
CONNECTION_TIMEOUT
));

345  
Á˘‹y
;

346 
	}
}

348 
	$shutdownSîvîIn°™˚
(
SîvîCnxnFa˘‹y
 
Á˘‹y
,

349 
Såög
 
ho°P‹t
)

351 i‡(
Á˘‹y
 !
nuŒ
) {

352 
ZKD©aba£
 
zkDb
;

354 
ZooKì≥rSîvî
 
zs
 = 
	`gëSîvî
(
Á˘‹y
);

356 
zkDb
 = 
zs
.
	`gëZKD©aba£
();

358 
Á˘‹y
.
	`shutdown
();

359 
åy
 {

360 
zkDb
.
	`˛o£
();

361 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

362 
LOG
.
	`w¨n
("Eº‹ closögÜog†", 
õ
);

364 
föÆ
 
PORT
 = 
	`gëP‹t
(
ho°P‹t
);

366 
As£π
.
	`as£πTrue
("waiting for server down",

367 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
PORT
,

368 
CONNECTION_TIMEOUT
));

370 
	}
}

375 
public
 
	$£tupTe°Env
() {

380 
Sy°em
.
	`£tPr›îty
("zookeeper.preAllocSize", "100");

381 
FûeTxnLog
.
	`£tPªÆlocSize
(100 * 1024);

382 
	}
}

384 
¥Ÿe˘ed
 
	$£tUpAŒ
(Ë
throws
 
Ex˚±i⁄
 {

385 
ÆlClõ¡s
 = 
√w
 
LökedLi°
<
ZooKì≥r
>();

386 
ÆlClõ¡sSëup
 = 
åue
;

387 
	}
}

389 @
Bef‹e


390 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

396 
O≥øtögSy°emMXBón
 
osMbón
 =

397 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

398 i‡(
osMbón
 !
nuŒ
 && osMbó¿
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

399 
UnixO≥øtögSy°emMXBón
 
unixos
 =

400 (
UnixO≥øtögSy°emMXBón
)
osMbón
;

401 
öôülFdCou¡
 = 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
();

402 
LOG
.
	`öfo
("Initial fdcount is: "

403 + 
öôülFdCou¡
);

406 
	`£tupTe°Env
();

408 
JMXEnv
.
	`£tUp
();

410 
	`£tUpAŒ
();

412 
tmpDú
 = 
	`¸óãTmpDú
(
BASETEST
);

414 
	`°¨tSîvî
();

416 
LOG
.
	`öfo
("ClientÅest setup finished");

417 
	}
}

419 
¥Ÿe˘ed
 
	$°¨tSîvî
(Ë
throws
 
Ex˚±i⁄
 {

420 
LOG
.
	`öfo
("STARTING server");

421 
£rvîFa˘‹y
 = 
	`¸óãNewSîvîIn°™˚
(
tmpDú
, sîvîFa˘‹y, 
ho°P‹t
, 
maxCnxns
);

423 
JMXEnv
.
	`ísuªO∆y
("InMemoryDataTree", "StandaloneServer_port");

424 
	}
}

426 
¥Ÿe˘ed
 
	$°›Sîvî
(Ë
throws
 
Ex˚±i⁄
 {

427 
LOG
.
	`öfo
("STOPPING server");

428 
	`shutdownSîvîIn°™˚
(
£rvîFa˘‹y
, 
ho°P‹t
);

429 
£rvîFa˘‹y
 = 
nuŒ
;

431 
JMXEnv
.
	`ísuªO∆y
();

432 
	}
}

435 
¥Ÿe˘ed
 
ZooKì≥rSîvî
 
	$gëSîvî
(
SîvîCnxnFa˘‹y
 
Ác
) {

436 
ZooKì≥rSîvî
 
zs
 = 
SîvîCnxnFa˘‹yAc˚ss‹
.
	`gëZkSîvî
(
Ác
);

438  
zs
;

439 
	}
}

441 
¥Ÿe˘ed
 
	$ã¨DownAŒ
(Ë
throws
 
Ex˚±i⁄
 {

442 
	`synchr⁄ized
 (
this
) {

443 i‡(
ÆlClõ¡s
 !
nuŒ
Ë
ZooKì≥r
 
zk
 :állClients) {

444 
åy
 {

445 i‡(
zk
 !
nuŒ
)

446 
zk
.
	`˛o£
();

447 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

448 
LOG
.
	`w¨n
("ign‹ög i¡îru±", 
e
);

451 
ÆlClõ¡s
 = 
nuŒ
;

453 
	}
}

455 @
A·î


456 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

457 
LOG
.
	`öfo
("tearDown starting");

459 
	`ã¨DownAŒ
();

461 
	`°›Sîvî
();

463 i‡(
tmpDú
 !
nuŒ
) {

464 
As£π
.
	`as£πTrue
("dñëê" + 
tmpDú
.
	`toSåög
(), 
	`ªcursiveDñëe
(tmpDir));

468 
£rvîFa˘‹y
 = 
nuŒ
;

470 
JMXEnv
.
	`ã¨Down
();

477 
O≥øtögSy°emMXBón
 
osMbón
 =

478 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

479 i‡(
osMbón
 !
nuŒ
 && osMbó¿
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

480 
UnixO≥øtögSy°emMXBón
 
unixos
 =

481 (
UnixO≥øtögSy°emMXBón
)
osMbón
;

482 
fdCou¡
 = 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
();

483 
Såög
 
mesßge
 = "fdcountáfterÅest is: "

484 + 
fdCou¡
 + "áà°¨àô wa†" + 
öôülFdCou¡
;

485 
LOG
.
	`öfo
(
mesßge
);

486 i‡(
fdCou¡
 > 
öôülFdCou¡
) {

487 
LOG
.
	`öfo
("sleeping for 20 secs");

492 
	}
}

494 
public
 
MBónSîvîC⁄√˘i⁄
 
	$jmxC⁄n
(Ë
throws
 
IOEx˚±i⁄
 {

495  
JMXEnv
.
	`c⁄n
();

496 
	}
}

498 
public
 
boﬁón
 
	$ªcursiveDñëe
(
Fûe
 
d
) {

499 i‡(
d
.
	`isDúe˘‹y
()) {

500 
Fûe
 
chûdªn
[] = 
d
.
	`li°Fûes
();

501 
Fûe
 
f
 : 
chûdªn
) {

502 
As£π
.
	`as£πTrue
("dñëê" + 
f
.
	`toSåög
(), 
	`ªcursiveDñëe
(f));

505  
d
.
	`dñëe
();

506 
	}
}

508 
public
 
	$logAŒSèckTø˚s
() {

509 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

510 
sb
.
	`≠≥nd
("StartingÜogAllStackTraces()\n");

511 
M≠
<
Thªad
, 
SèckTø˚EÀmít
[]> 
thªads
 = Thªad.
	`gëAŒSèckTø˚s
();

512 
E¡ry
<
Thªad
, 
SèckTø˚EÀmít
[]> 
e
: 
thªads
.
	`íåySë
()) {

513 
sb
.
	`≠≥nd
("Thªad " + 
e
.
	`gëKey
().
	`gëName
() + "\n");

514 
SèckTø˚EÀmít
 
ñem
: 
e
.
	`gëVÆue
()) {

515 
sb
.
	`≠≥nd
("\èà" + 
ñem
 + "\n");

518 
sb
.
	`≠≥nd
("EndingÜogAllStackTraces()\n");

519 
LOG
.
	`îr‹
(
sb
.
	`toSåög
());

520 
	}
}

526 
	$vîifyRoŸOfAŒSîvîsM©ch
(
Såög
 
ho°P‹t
)

527 
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
IOEx˚±i⁄


529 
Såög
 
∑πs
[] = 
ho°P‹t
.
	`•lô
(",");

533 [] 
cou¡s
 = 
√w
 [
∑πs
.
Àngth
];

534 
Áûed
 = 0;

535 
j
 = 0; j < 100; j++) {

536 
√wcou¡s
[] = 
√w
 [
∑πs
.
Àngth
];

537 
i
 = 0;

538 
Såög
 
hp
 : 
∑πs
) {

539 
åy
 {

540 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
hp
);

542 
åy
 {

543 
√wcou¡s
[
i
++] = 
zk
.
	`gëChûdªn
("/", 
Ál£
).
	`size
();

544 } 
föÆly
 {

545 
zk
.
	`˛o£
();

547 } 
	`ˇtch
 (
ThrowabÀ
 
t
) {

548 
Áûed
++;

551 
	`logAŒSèckTø˚s
();

555 i‡(
Aºays
.
	`equÆs
(
√wcou¡s
, 
cou¡s
)) {

556 
LOG
.
	`öfo
("Found match withárray:"

557 + 
Aºays
.
	`toSåög
(
√wcou¡s
));

558 
cou¡s
 = 
√wcou¡s
;

561 
cou¡s
 = 
√wcou¡s
;

562 
Thªad
.
	`¶ìp
(10000);

566 i‡(
Áûed
 > 10) {

572 
Såög
 
logmsg
 = "node countÇot consistent{} {}";

573 
i
 = 1; i < 
∑πs
.
Àngth
; i++) {

574 i‡(
cou¡s
[
i
-1] != counts[i]) {

575 
LOG
.
	`îr‹
(
logmsg
, 
I¡egî
.
	`vÆueOf
(
cou¡s
[
i
-1]), Integer.valueOf(counts[i]));

577 
LOG
.
	`öfo
(
logmsg
, 
I¡egî
.
	`vÆueOf
(
cou¡s
[
i
-1]), Integer.valueOf(counts[i]));

580 
	}
}

582 
public
 
Såög
 
	$ªadFûe
(
Fûe
 
fûe
Ë
throws
 
IOEx˚±i⁄
 {

583 
ByãAºayOuçutSåóm
 
os
 = 
√w
 
	`ByãAºayOuçutSåóm
();

584 
Buf„ªdI≈utSåóm
 
is
 = 
√w
 
	`Buf„ªdI≈utSåóm
“ew 
	`FûeI≈utSåóm
(
fûe
));

585 
åy
 {

586 
IOUtûs
.
	`c›yByãs
(
is
, 
os
, 1024, 
åue
);

587 } 
föÆly
 {

588 
is
.
	`˛o£
();

590  
os
.
	`toSåög
();

591 
	}
}

593 
public
 
Såög
 
	$joö
(
Såög
 
£∑øt‹
, 
Obje˘
[] 
∑πs
) {

594 
SåögBuûdî
 
sb
 = 
√w
 
	`SåögBuûdî
();

595 
boﬁón
 
fú°
 = 
åue
;

596 
Obje˘
 
∑π
 : 
∑πs
) {

597 i‡(!
fú°
) {

598 
sb
.
	`≠≥nd
(
£∑øt‹
);

599 
fú°
 = 
Ál£
;

601 
sb
.
	`≠≥nd
(
∑π
);

603  
sb
.
	`toSåög
();

604 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientHammerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cClõ¡HammîTe°
 
exãnds
 
	mClõ¡Ba£
 {

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡HammîTe°
.
˛ass
);

37 
¥iv©e
 
föÆ
 
	mHAMMERTHREAD_LATENCY
 = 5;

39 
¥iv©e
 
ab°ø˘
 cœs†
	cHammîThªad
 
exãnds
 
	mThªad
 {

40 
¥Ÿe˘ed
 
föÆ
 
	mcou¡
;

41 
¥Ÿe˘ed
 vﬁ©ûê
	mcuºít
 = 0;

43 
HammîThªad
(
Såög
 
«me
, 
cou¡
) {

44 
su≥r
(
«me
);

45 
	mthis
.
	mcou¡
 = 
cou¡
;

49 
¥iv©e
 ˛as†
	cBasicHammîThªad
 
exãnds
 
	gHammîThªad
 {

50 
¥iv©e
 
föÆ
 
ZooKì≥r
 
	gzk
;

51 
¥iv©e
 
föÆ
 
Såög
 
	g¥efix
;

53 
BasicHammîThªad
(
Såög
 
«me
, 
ZooKì≥r
 
zk
, Såög 
¥efix
, 
cou¡
) {

54 
su≥r
(
«me
, 
cou¡
);

55 
	gthis
.
	gzk
 = 
zk
;

56 
	gthis
.
	g¥efix
 = 
¥efix
;

59 
public
 
run
() {

60 
byã
 
	gb
[] = 
√w
 byte[256];

61 
	gåy
 {

62 ; 
	gcuºít
 < 
	gcou¡
; current++) {

64 
	gThªad
.
¶ìp
(
HAMMERTHREAD_LATENCY
);

65 
	gzk
.
¸óã
(
¥efix
 + 
cuºít
, 
b
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

67 } 
ˇtch
 (
ThrowabÀ
 
t
) {

68 
	gLOG
.
îr‹
("Clõ¡ cª©ê›î©i⁄ As£π.Áûed", 
t
);

69 } 
	gföÆly
 {

70 
	gåy
 {

71 
	gzk
.
˛o£
();

72 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

73 
	gLOG
.
w¨n
("U√x≥˘ed", 
e
);

79 
¥iv©e
 ˛as†
	cSu≥rHammîThªad
 
exãnds
 
	gHammîThªad
 {

80 
¥iv©e
 
föÆ
 
Clõ¡HammîTe°
 
	g∑ª¡
;

81 
¥iv©e
 
föÆ
 
Såög
 
	g¥efix
;

83 
Su≥rHammîThªad
(
Såög
 
«me
, 
Clõ¡HammîTe°
 
∑ª¡
, Såög 
¥efix
,

84 
cou¡
)

86 
su≥r
(
«me
, 
cou¡
);

87 
	gthis
.
	g∑ª¡
 = 
∑ª¡
;

88 
	gthis
.
	g¥efix
 = 
¥efix
;

91 
public
 
run
() {

92 
byã
 
	gb
[] = 
√w
 byte[256];

93 
	gåy
 {

94 ; 
	gcuºít
 < 
	gcou¡
; current++) {

95 
ZooKì≥r
 
	gzk
 = 
∑ª¡
.
¸óãClõ¡
();

96 
	gåy
 {

97 
	gzk
.
¸óã
(
¥efix
 + 
cuºít
, 
b
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

98 } 
	gföÆly
 {

99 
	gåy
 {

100 
	gzk
.
˛o£
();

101 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

102 
	gLOG
.
w¨n
("U√x≥˘ed", 
e
);

106 } 
ˇtch
 (
ThrowabÀ
 
t
) {

107 
	gLOG
.
îr‹
("Clõ¡ cª©ê›î©i⁄ As£π.Áûed", 
t
);

117 @
Te°


118 
public
 
	$ã°HammîBasic
(Ë
throws
 
ThrowabÀ
 {

119 
	`runHammî
(10, 1000);

120 
	}
}

122 
public
 
	$runHammî
(
föÆ
 
thªadCou¡
, föÆ 
chûdCou¡
)

123 
throws
 
ThrowabÀ


125 
åy
 {

126 
HammîThªad
[] 
thªads
 = 
√w
 HammîThªad[
thªadCou¡
];

127 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

128 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

129 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

130 
Såög
 
¥efix
 = "/ã°-" + 
i
;

131 
zk
.
	`¸óã
(
¥efix
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

132 
¥efix
 += "/";

133 
HammîThªad
 
thªad
 =

134 
√w
 
	`BasicHammîThªad
("BasicHammîThªad-" + 
i
, 
zk
, 
¥efix
,

135 
chûdCou¡
);

136 
thªad
.
	`°¨t
();

138 
thªads
[
i
] = 
thªad
;

141 
	`vîifyHammî
(
°¨t
, 
thªads
, 
chûdCou¡
);

142 } 
	`ˇtch
 (
ThrowabÀ
 
t
) {

143 
LOG
.
	`îr‹
("ã° As£π.Áûed", 
t
);

144 
throw
 
t
;

146 
	}
}

153 @
Te°


154 
public
 
	$ã°HammîSu≥r
(Ë
throws
 
ThrowabÀ
 {

155 
åy
 {

156 
föÆ
 
thªadCou¡
 = 5;

157 
föÆ
 
chûdCou¡
 = 10;

159 
HammîThªad
[] 
thªads
 = 
√w
 HammîThªad[
thªadCou¡
];

160 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

161 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

162 
Såög
 
¥efix
 = "/ã°-" + 
i
;

164 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

165 
åy
 {

166 
zk
.
	`¸óã
(
¥efix
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

167 } 
föÆly
 {

168 
zk
.
	`˛o£
();

171 
¥efix
 += "/";

172 
HammîThªad
 
thªad
 =

173 
√w
 
	`Su≥rHammîThªad
("Su≥rHammîThªad-" + 
i
, 
this
,

174 
¥efix
, 
chûdCou¡
);

175 
thªad
.
	`°¨t
();

177 
thªads
[
i
] = 
thªad
;

180 
	`vîifyHammî
(
°¨t
, 
thªads
, 
chûdCou¡
);

181 } 
	`ˇtch
 (
ThrowabÀ
 
t
) {

182 
LOG
.
	`îr‹
("ã° As£π.Áûed", 
t
);

183 
throw
 
t
;

185 
	}
}

187 
public
 
	$vîifyHammî
(
°¨t
, 
HammîThªad
[] 
thªads
, 
chûdCou¡
)

188 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


191 
LOG
.
	`öfo
("Starting check for completed hammers");

192 
w‹kögCou¡
 = 
thªads
.
Àngth
;

193 
i
 = 0; i < 120; i++) {

194 
Thªad
.
	`¶ìp
(10000);

195 
HammîThªad
 
h
 : 
thªads
) {

196 i‡(!
h
.
	`isAlive
(Ë|| h.
cuºít
 =h.
cou¡
) {

197 
w‹kögCou¡
--;

200 i‡(
w‹kögCou¡
 == 0) {

203 
w‹kögCou¡
 = 
thªads
.
Àngth
;

205 i‡(
w‹kögCou¡
 > 0) {

206 
HammîThªad
 
h
 : 
thªads
) {

207 
LOG
.
	`w¨n
(
h
.
	`gëName
() + "Çever finished creation, current:"

208 + 
h
.
cuºít
);

211 
LOG
.
	`öfo
("HammerÅhreads completed creation operations");

214 
HammîThªad
 
h
 : 
thªads
) {

215 
föÆ
 
ß„tyFa˘‹
 = 3;

216 
	`vîifyThªadTîmö©ed
(
h
,

217 
thªads
.
Àngth
 * 
chûdCou¡


218 * 
HAMMERTHREAD_LATENCY
 * 
ß„tyFa˘‹
);

220 
LOG
.
	`öfo
(
√w
 
	`D©e
() + " TotalÅime "

221 + (
Sy°em
.
	`cuºítTimeMûlis
(Ë- 
°¨t
));

223 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

224 
åy
 {

225 
LOG
.
	`öfo
("******************* C⁄√˘edÅÿZooKì≥r" + 
√w
 
	`D©e
());

226 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

227 
LOG
.
	`öfo
("DoögÅhªad: " + 
i
 + " " + 
√w
 
	`D©e
());

228 
Li°
<
Såög
> 
chûdªn
 =

229 
zk
.
	`gëChûdªn
("/ã°-" + 
i
, 
Ál£
);

230 
As£π
.
	`as£πEquÆs
(
chûdCou¡
, 
chûdªn
.
	`size
());

231 
chûdªn
 = 
zk
.
	`gëChûdªn
("/ã°-" + 
i
, 
Ál£
, 
nuŒ
);

232 
As£π
.
	`as£πEquÆs
(
chûdCou¡
, 
chûdªn
.
	`size
());

234 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

235 
Li°
<
Såög
> 
chûdªn
 =

236 
zk
.
	`gëChûdªn
("/ã°-" + 
i
, 
Ál£
);

237 
As£π
.
	`as£πEquÆs
(
chûdCou¡
, 
chûdªn
.
	`size
());

238 
chûdªn
 = 
zk
.
	`gëChûdªn
("/ã°-" + 
i
, 
Ál£
, 
nuŒ
);

239 
As£π
.
	`as£πEquÆs
(
chûdCou¡
, 
chûdªn
.
	`size
());

241 } 
föÆly
 {

242 
zk
.
	`˛o£
();

244 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientPortBindTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gI√tAddªss
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gNëw‹kI¡îÁ˚
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gEnumî©i⁄
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

42 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

44 
public
 cœs†
	cClõ¡P‹tBödTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

45 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

46 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡P‹tBödTe°
.
˛ass
);

48 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	m°¨tSig«l
;

53 @
Te°


54 
public
 
	$ã°BödByAddªss
(Ë
throws
 
Ex˚±i⁄
 {

55 
Såög
 
bödAddªss
 = 
nuŒ
;

56 
Enumî©i⁄
<
Nëw‹kI¡îÁ˚
> 
ötfs
 =

57 
Nëw‹kI¡îÁ˚
.
	`gëNëw‹kI¡îÁ˚s
();

59 
ötfs
.
	`hasM‹eEÀmíts
()) {

60 
Nëw‹kI¡îÁ˚
 
i
 = 
ötfs
.
	`√xtEÀmít
();

61 i‡(
i
.
	`isLo›back
()) {

62 
Enumî©i⁄
<
I√tAddªss
> 
addrs
 = 
i
.
	`gëI√tAddªs£s
();

63 i‡(
addrs
.
	`hasM‹eEÀmíts
()) {

64 
bödAddªss
 = 
addrs
.
	`√xtEÀmít
().
	`gëHo°Addªss
();

68 i‡(
bödAddªss
 =
nuŒ
) {

69 
LOG
.
	`w¨n
("UnableÅo determineÜoop backáddress, skippingÅest");

72 
föÆ
 
PORT
 = 
P‹tAssignmít
.
	`unique
();

74 
LOG
.
	`öfo
("Usög " + 
bödAddªss
 + "ásÅhe bindáddress");

75 
föÆ
 
Såög
 
HOSTPORT
 = 
bödAddªss
 + ":" + 
PORT
;

76 
LOG
.
	`öfo
("Usög " + 
HOSTPORT
 + "ásÅhe host/port");

79 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

81 
Clõ¡Ba£
.
	`£tupTe°Env
();

82 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

84 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(

85 
√w
 
	`I√tSockëAddªss
(
bödAddªss
, 
PORT
), -1);

86 
f
.
	`°¨tup
(
zks
);

87 
LOG
.
	`öfo
("starting upÅheÅhe server, waiting");

89 
As£π
.
	`as£πTrue
("waiting for server up",

90 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,

91 
CONNECTION_TIMEOUT
));

93 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

94 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

95 
åy
 {

96 
°¨tSig«l
.
	`awaô
(
CONNECTION_TIMEOUT
,

97 
TimeUnô
.
MILLISECONDS
);

98 
As£π
.
	`as£πTrue
("cou¡ =0", 
°¨tSig«l
.
	`gëCou¡
() == 0);

99 
zk
.
	`˛o£
();

100 } 
föÆly
 {

101 
f
.
	`shutdown
();

103 
As£π
.
	`as£πTrue
("waiting for server down",

104 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

105 
CONNECTION_TIMEOUT
));

109 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

110 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
(Ë+ " " +Évít.
	`gëP©h
());

111 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


112 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0)

114 
°¨tSig«l
.
	`cou¡Down
();

116 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientRetry.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeoutEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

28 
public
 cœs†
	cClõ¡Rëry
 
exãnds
 
	mClõ¡Ba£
 {

30 @
Ovîride


31 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

32 
maxCnxns
 = 1;

33 
su≥r
.
	`£tUp
();

47 @
Te°


48 
public
 
	$ã°Clõ¡Rëry
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
TimeoutEx˚±i⁄
{

49 
Cou¡downW©chî
 
cdw1
 = 
√w
 
	`Cou¡downW©chî
();

50 
Cou¡downW©chî
 
cdw2
 = 
√w
 
	`Cou¡downW©chî
();

51 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
cdw1
);

52 
åy
 {

53 
cdw1
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

54 
ZooKì≥r
 
zk2
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
cdw2
);

55 
åy
 {

56 
Sèãs
 
s1
 = 
zk
.
	`gëSèã
();

57 
Sèãs
 
s2
 = 
zk2
.
	`gëSèã
();

58 
As£π
.
	`as£πSame
(
s1
,
Sèãs
.
CONNECTED
);

59 
As£π
.
	`as£πSame
(
s2
,
Sèãs
.
CONNECTING
);

60 
cdw1
.
	`ª£t
();

61 
cdw1
.
	`waôF‹Disc⁄√˘ed
(
CONNECTION_TIMEOUT
);

62 
cdw2
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

63 
As£π
.
	`as£πSame
(
zk2
.
	`gëSèã
(),
Sèãs
.
CONNECTED
);

64 } 
föÆly
 {

65 
zk2
.
	`˛o£
();

67 } 
föÆly
 {

68 
zk
.
	`˛o£
();

70 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

23 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gloggög
.
	gLevñ
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gInvÆidACLEx˚±i⁄
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gPîms
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gPªpReque°Pro˚ss‹
;

48 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

49 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

51 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

53 
public
 cœs†
	cClõ¡Te°
 
exãnds
 
	mClõ¡Ba£
 {

54 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Clõ¡Te°
.
˛ass
);

57 @
Te°


58 
public
 
	$ã°Pög
(Ë
throws
 
Ex˚±i⁄
 {

59 
ZooKì≥r
 
zkIdÀ
 = 
nuŒ
;

60 
ZooKì≥r
 
zkW©chCª©‹
 = 
nuŒ
;

61 
åy
 {

62 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

63 
zkIdÀ
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
, 10000);

65 
zkW©chCª©‹
 = 
	`¸óãClõ¡
();

67 
i
 = 0; i < 10; i++) {

68 
zkW©chCª©‹
.
	`¸óã
("/" + 
i
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

69 
Cª©eMode
.
PERSISTENT
);

71 
i
 = 0; i < 10; i++) {

72 
zkIdÀ
.
	`exi°s
("/" + 
i
, 
åue
);

74 
i
 = 0; i < 10; i++) {

75 
Thªad
.
	`¶ìp
(1000);

76 
zkW©chCª©‹
.
	`dñëe
("/" + 
i
, -1);

79 
zkIdÀ
.
	`exi°s
("/0", 
Ál£
);

80 } 
föÆly
 {

81 i‡(
zkIdÀ
 !
nuŒ
) {

82 
zkIdÀ
.
	`˛o£
();

84 i‡(
zkW©chCª©‹
 !
nuŒ
) {

85 
zkW©chCª©‹
.
	`˛o£
();

90 @
Te°


91 
public
 
	$ã°Clõ¡wôhoutW©chîObj
(Ë
throws
 
IOEx˚±i⁄
,

92 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


94 
	`≥rf‹mClõ¡Te°
(
Ál£
);

95 
	}
}

97 @
Te°


98 
public
 
	$ã°Clõ¡WôhW©chîObj
(Ë
throws
 
IOEx˚±i⁄
,

99 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


101 
	`≥rf‹mClõ¡Te°
(
åue
);

102 
	}
}

105 @
Te°


106 
public
 
	$ã°Te°abûôy
(Ë
throws
 
Ex˚±i⁄
 {

107 
Te°abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

108 
åy
 {

109 
LOG
.
	`öfo
("{}",
zk
.
	`ã°abÀLoˇlSockëAddªss
());

110 
LOG
.
	`öfo
("{}",
zk
.
	`ã°abÀRemŸeSockëAddªss
());

111 
LOG
.
	`öfo
("{}",
zk
.
	`toSåög
());

112 } 
föÆly
 {

113 
zk
.
	`˛o£
();

114 
zk
.
	`ã°abÀWaôF‹Shutdown
(
CONNECTION_TIMEOUT
);

115 
LOG
.
	`öfo
("{}",
zk
.
	`ã°abÀLoˇlSockëAddªss
());

116 
LOG
.
	`öfo
("{}",
zk
.
	`ã°abÀRemŸeSockëAddªss
());

117 
LOG
.
	`öfo
("{}",
zk
.
	`toSåög
());

119 
	}
}

121 @
Te°


122 
public
 
	$ã°ACLs
(Ë
throws
 
Ex˚±i⁄
 {

123 
ZooKì≥r
 
zk
 = 
nuŒ
;

124 
åy
 {

125 
zk
 = 
	`¸óãClõ¡
();

126 
åy
 {

127 
zk
.
	`¸óã
("/a˛ã°", 
√w
 
byã
[0], 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

128 
As£π
.
	`Áû
("Should haveÑeceivedán invalidáclÉrror");

129 } 
	`ˇtch
(
InvÆidACLEx˚±i⁄
 
e
) {

130 
LOG
.
	`öfo
("Test successful, invalidáclÑeceived : "

131 + 
e
.
	`gëMesßge
());

133 
åy
 {

134 
AºayLi°
<
ACL
> 
ã°ACL
 = 
√w
 ArrayList<ACL>();

135 
ã°ACL
.
	`add
(
√w
 
	`ACL
(
Pîms
.
ALL
 | Pîms.
ADMIN
, 
Ids
.
AUTH_IDS
));

136 
ã°ACL
.
	`add
(
√w
 
	`ACL
(
Pîms
.
ALL
 | Pîms.
ADMIN
,Çew 
	`Id
("ip", "127.0.0.1/8")));

137 
zk
.
	`¸óã
("/a˛ã°", 
√w
 
byã
[0], 
ã°ACL
, 
Cª©eMode
.
PERSISTENT
);

138 
As£π
.
	`Áû
("Should haveÑeceivedán invalidáclÉrror");

139 } 
	`ˇtch
(
InvÆidACLEx˚±i⁄
 
e
) {

140 
LOG
.
	`öfo
("Test successful, invalidáclÑeceived : "

141 + 
e
.
	`gëMesßge
());

143 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd".
	`gëByãs
());

144 
zk
.
	`¸óã
("/a˛ã°", 
√w
 
byã
[0], 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

145 
zk
.
	`˛o£
();

146 
zk
 = 
	`¸óãClõ¡
();

147 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd2".
	`gëByãs
());

148 
åy
 {

149 
zk
.
	`gëD©a
("/a˛ã°", 
Ál£
, 
√w
 
	`Sèt
());

150 
As£π
.
	`Áû
("Should haveÑeceivedáÖermissionÉrror");

151 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

152 
As£π
.
	`as£πEquÆs
(
Code
.
NOAUTH
, 
e
.
	`code
());

154 
zk
.
	`addAuthInfo
("dige°", "bí:∑sswd".
	`gëByãs
());

155 
zk
.
	`gëD©a
("/a˛ã°", 
Ál£
, 
√w
 
	`Sèt
());

156 
zk
.
	`£tACL
("/a˛ã°", 
Ids
.
OPEN_ACL_UNSAFE
, -1);

157 
zk
.
	`˛o£
();

158 
zk
 = 
	`¸óãClõ¡
();

159 
zk
.
	`gëD©a
("/a˛ã°", 
Ál£
, 
√w
 
	`Sèt
());

160 
Li°
<
ACL
> 
a˛s
 = 
zk
.
	`gëACL
("/a˛ã°", 
√w
 
	`Sèt
());

161 
As£π
.
	`as£πEquÆs
(1, 
a˛s
.
	`size
());

162 
As£π
.
	`as£πEquÆs
(
Ids
.
OPEN_ACL_UNSAFE
, 
a˛s
);

163 
zk
.
	`˛o£
();

164 } 
föÆly
 {

165 i‡(
zk
 !
nuŒ
) {

166 
zk
.
	`˛o£
();

169 
	}
}

171 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

172 
	gLökedBlockögQueue
<
	gW©chedEvít
> 
	gevíts
 =

173 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

175 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

176 
	gsu≥r
.
¥o˚ss
(
evít
);

177 i‡(
	gevít
.
gëTy≥
(Ë!
EvítTy≥
.
N⁄e
) {

178 
åy
 {

179 
evíts
.
put
(
evít
);

180 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

181 
	gLOG
.
w¨n
("ignoring interrupt duringÉvent.put");

191 @
Te°


192 
public
 
	$ã°MutùÀW©chîObjs
()

193 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


195 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
√w
 
	`Cou¡downW©chî
(), 
ho°P‹t
);

196 
åy
 {

197 
MyW©chî
 
w©chîs
[] = 
√w
 MyWatcher[100];

198 
MyW©chî
 
w©chîs2
[] = 
√w
 MyW©chî[
w©chîs
.
Àngth
];

199 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

200 
w©chîs
[
i
] = 
√w
 
	`MyW©chî
();

201 
w©chîs2
[
i
] = 
√w
 
	`MyW©chî
();

202 
zk
.
	`¸óã
("/foo-" + 
i
, ("food©a" + i).
	`gëByãs
(),

203 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

205 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

211 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

212 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`gëD©a
("/foo-" + 
i
, 
w©chîs
[i], 
°©
));

214 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

215 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/foo-" + 
i
, 
w©chîs
[i]));

218 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

219 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a2-" + i).
	`gëByãs
(), -1);

220 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a3-" + i).
	`gëByãs
(), -1);

222 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

223 
W©chedEvít
 
evít
 =

224 
w©chîs
[
i
].
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

225 
As£π
.
	`as£πEquÆs
("/foo-" + 
i
, 
evít
.
	`gëP©h
());

226 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeD©aCh™ged
, 
evít
.
	`gëTy≥
());

227 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

232 
As£π
.
	`as£πEquÆs
(0, 
w©chîs
[
i
].
evíts
.
	`size
());

239 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

240 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`gëD©a
("/foo-" + 
i
, 
w©chîs
[i], 
°©
));

241 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/foo-" + 
i
, 
w©chîs
[i]));

244 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

245 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a4-" + i).
	`gëByãs
(), -1);

246 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a5-" + i).
	`gëByãs
(), -1);

248 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

249 
W©chedEvít
 
evít
 =

250 
w©chîs
[
i
].
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

251 
As£π
.
	`as£πEquÆs
("/foo-" + 
i
, 
evít
.
	`gëP©h
());

252 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeD©aCh™ged
, 
evít
.
	`gëTy≥
());

253 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

258 
As£π
.
	`as£πEquÆs
(0, 
w©chîs
[
i
].
evíts
.
	`size
());

264 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

265 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`gëD©a
("/foo-" + 
i
, 
w©chîs
[i], 
°©
));

266 
As£π
.
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/foo-" + 
i
, 
w©chîs2
[i]));

269 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

270 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a6-" + i).
	`gëByãs
(), -1);

271 
zk
.
	`£tD©a
("/foo-" + 
i
, ("food©a7-" + i).
	`gëByãs
(), -1);

273 
i
 = 0; i < 
w©chîs
.
Àngth
; i++) {

274 
W©chedEvít
 
evít
 =

275 
w©chîs
[
i
].
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

276 
As£π
.
	`as£πEquÆs
("/foo-" + 
i
, 
evít
.
	`gëP©h
());

277 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeD©aCh™ged
, 
evít
.
	`gëTy≥
());

278 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

283 
As£π
.
	`as£πEquÆs
(0, 
w©chîs
[
i
].
evíts
.
	`size
());

286 
W©chedEvít
 
evít2
 =

287 
w©chîs2
[
i
].
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

288 
As£π
.
	`as£πEquÆs
("/foo-" + 
i
, 
evít2
.
	`gëP©h
());

289 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeD©aCh™ged
, 
evít2
.
	`gëTy≥
());

290 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít2
.
	`gëSèã
());

295 
As£π
.
	`as£πEquÆs
(0, 
w©chîs2
[
i
].
evíts
.
	`size
());

298 } 
föÆly
 {

299 i‡(
zk
 !
nuŒ
) {

300 
zk
.
	`˛o£
();

303 
	}
}

305 
¥iv©e
 
	$≥rf‹mClõ¡Te°
(
boﬁón
 
wôhW©chîObj
)

306 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


308 
ZooKì≥r
 
zk
 = 
nuŒ
;

309 
åy
 {

310 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

311 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
);

312 
LOG
.
	`öfo
("Before create /benwashere");

313 
zk
.
	`¸óã
("/bíwashîe", "".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

314 
Cª©eMode
.
PERSISTENT
);

315 
LOG
.
	`öfo
("After create /benwashere");

316 
åy
 {

317 
zk
.
	`£tD©a
("/bíwashîe", "hi".
	`gëByãs
(), 57);

318 
As£π
.
	`Áû
("Should have gotten BadVersionÉxception");

319 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
BadVîsi⁄Ex˚±i⁄
 
e
) {

321 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

322 
As£π
.
	`Áû
("Should have gotten BadVersionÉxception");

324 
LOG
.
	`öfo
("Before delete /benwashere");

325 
zk
.
	`dñëe
("/benwashere", 0);

326 
LOG
.
	`öfo
("After delete /benwashere");

327 
zk
.
	`˛o£
();

329 
Thªad
.
	`¶ìp
(2000);

331 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
);

333 
LOG
.
	`öfo
("Before delete /");

335 
åy
 {

336 
zk
.
	`dñëe
("/", -1);

337 
As£π
.
	`Áû
("deletedÑoot!");

338 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
BadArgumítsEx˚±i⁄
 
e
) {

341 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

343 
zk
.
	`¸óã
("/∑t", "P© wa†hîe".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

344 
Cª©eMode
.
PERSISTENT
);

345 
LOG
.
	`öfo
("Before create /ben");

346 
zk
.
	`¸óã
("/∑t/bí", "Bí wa†hîe".
	`gëByãs
(),

347 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

348 
LOG
.
	`öfo
("Before getChildren /pat");

349 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
("/∑t", 
Ál£
);

350 
As£π
.
	`as£πEquÆs
(1, 
chûdªn
.
	`size
());

351 
As£π
.
	`as£πEquÆs
("bí", 
chûdªn
.
	`gë
(0));

352 
Li°
<
Såög
> 
chûdªn2
 = 
zk
.
	`gëChûdªn
("/∑t", 
Ál£
, 
nuŒ
);

353 
As£π
.
	`as£πEquÆs
(
chûdªn
, 
chûdªn2
);

354 
Såög
 
vÆue
 = 
√w
 
	`Såög
(
zk
.
	`gëD©a
("/∑t/bí", 
Ál£
, 
°©
));

355 
As£π
.
	`as£πEquÆs
("Bí wa†hîe", 
vÆue
);

358 
åy
 {

359 i‡(
wôhW©chîObj
) {

360 
As£π
.
	`as£πEquÆs
(
nuŒ
, 
zk
.
	`exi°s
("/‰og", 
w©chî
));

362 
As£π
.
	`as£πEquÆs
(
nuŒ
, 
zk
.
	`exi°s
("/‰og", 
åue
));

364 
LOG
.
	`öfo
("Comment:ássetingÖassed for frog setting /");

365 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

368 
zk
.
	`¸óã
("/‰og", "hi".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

369 
Cª©eMode
.
PERSISTENT
);

371 
LOG
.
	`öfo
("Comment: checking forÉventsÜength "

372 + 
w©chî
.
evíts
.
	`size
());

373 
W©chedEvít
 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

374 
As£π
.
	`as£πEquÆs
("/‰og", 
evít
.
	`gëP©h
());

375 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeCª©ed
, 
evít
.
	`gëTy≥
());

376 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

378 
zk
.
	`gëChûdªn
("/∑t/bí", 
åue
);

379 
i
 = 0; i < 10; i++) {

380 
zk
.
	`¸óã
("/∑t/bí/" + 
i
 + "-", 
I¡egî
.
	`toSåög
(i).
	`gëByãs
(),

381 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

383 
chûdªn
 = 
zk
.
	`gëChûdªn
("/∑t/bí", 
Ál£
);

384 
CﬁÀ˘i⁄s
.
	`s‹t
(
chûdªn
);

385 
As£π
.
	`as£πEquÆs
(10, 
chûdªn
.
	`size
());

386 
i
 = 0; i < 10; i++) {

387 
föÆ
 
Såög
 
«me
 = 
chûdªn
.
	`gë
(
i
);

388 
As£π
.
	`as£πTrue
("°¨t†wôh -", 
«me
.
	`°¨tsWôh
(
i
 + "-"));

389 
byã
 
b
[];

390 i‡(
wôhW©chîObj
) {

391 
b
 = 
zk
.
	`gëD©a
("/∑t/bí/" + 
«me
, 
w©chî
, 
°©
);

393 
b
 = 
zk
.
	`gëD©a
("/∑t/bí/" + 
«me
, 
åue
, 
°©
);

395 
As£π
.
	`as£πEquÆs
(
I¡egî
.
	`toSåög
(
i
), 
√w
 
	`Såög
(
b
));

396 
zk
.
	`£tD©a
("/∑t/bí/" + 
«me
, "√w".
	`gëByãs
(),

397 
°©
.
	`gëVîsi⁄
());

398 i‡(
wôhW©chîObj
) {

399 
°©
 = 
zk
.
	`exi°s
("/∑t/bí/" + 
«me
, 
w©chî
);

401 
°©
 = 
zk
.
	`exi°s
("/∑t/bí/" + 
«me
, 
åue
);

403 
zk
.
	`dñëe
("/∑t/bí/" + 
«me
, 
°©
.
	`gëVîsi⁄
());

405 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

406 
As£π
.
	`as£πEquÆs
("/∑t/bí", 
evít
.
	`gëP©h
());

407 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
evít
.
	`gëTy≥
());

408 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

409 
i
 = 0; i < 10; i++) {

410 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

411 
föÆ
 
Såög
 
«me
 = 
chûdªn
.
	`gë
(
i
);

412 
As£π
.
	`as£πEquÆs
("/∑t/bí/" + 
«me
, 
evít
.
	`gëP©h
());

413 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeD©aCh™ged
, 
evít
.
	`gëTy≥
());

414 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

415 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

416 
As£π
.
	`as£πEquÆs
("/∑t/bí/" + 
«me
, 
evít
.
	`gëP©h
());

417 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeDñëed
, 
evít
.
	`gëTy≥
());

418 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

420 
zk
.
	`¸óã
("/good\u0040∑th", "".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

421 
Cª©eMode
.
PERSISTENT
);

423 
zk
.
	`¸óã
("/du∂iˇã", "".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

424 
Cª©eMode
.
PERSISTENT
);

425 
åy
 {

426 
zk
.
	`¸óã
("/du∂iˇã", "".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

427 
Cª©eMode
.
PERSISTENT
);

428 
As£π
.
	`Áû
("duplicate createállowed");

429 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
e
) {

432 } 
föÆly
 {

433 i‡(
zk
 !
nuŒ
) {

434 
zk
.
	`˛o£
();

437 
	}
}

441 @
Te°


442 
public
 
	$ã°SequítülNodeNames
()

443 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


445 
Såög
 
∑th
 = "/SEQUENCE";

446 
Såög
 
fûe
 = "TEST";

447 
Såög
 
fûï©h
 = 
∑th
 + "/" + 
fûe
;

449 
ZooKì≥r
 
zk
 = 
nuŒ
;

450 
åy
 {

451 
zk
 = 
	`¸óãClõ¡
();

452 
zk
.
	`¸óã
(
∑th
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

453 
zk
.
	`¸óã
(
fûï©h
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

454 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
);

455 
As£π
.
	`as£πEquÆs
(1, 
chûdªn
.
	`size
());

456 
As£π
.
	`as£πEquÆs
(
fûe
 + "0000000000", 
chûdªn
.
	`gë
(0));

458 
zk
.
	`¸óã
(
fûï©h
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

459 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
);

460 
As£π
.
	`as£πEquÆs
(2, 
chûdªn
.
	`size
());

461 
As£π
.
	`as£πTrue
("c⁄èö†chûd 1", 
chûdªn
.
	`c⁄èös
(
fûe
 + "0000000001"));

463 
zk
.
	`¸óã
(
fûï©h
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

464 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
);

465 
As£π
.
	`as£πEquÆs
(3, 
chûdªn
.
	`size
());

466 
As£π
.
	`as£πTrue
("contains child 2",

467 
chûdªn
.
	`c⁄èös
(
fûe
 + "0000000002"));

471 
i
 = 
chûdªn
.
	`size
(); i < 105; i++)

472 
zk
.
	`¸óã
(
fûï©h
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

474 
chûdªn
 = 
zk
.
	`gëChûdªn
(
∑th
, 
Ál£
);

475 
As£π
.
	`as£πTrue
("contains child 104",

476 
chûdªn
.
	`c⁄èös
(
fûe
 + "0000000104"));

479 
föÆly
 {

480 if(
zk
 !
nuŒ
)

481 
zk
.
	`˛o£
();

483 
	}
}

487 @
Te°


488 
public
 
	$ã°SequítülNodeD©a
(Ë
throws
 
Ex˚±i⁄
 {

489 
ZooKì≥r
 
zk

nuŒ
;

490 
Såög
 
queue_h™dÀ
 = "/queue";

491 
åy
 {

492 
zk
 = 
	`¸óãClõ¡
();

494 
zk
.
	`¸óã
(
queue_h™dÀ
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

495 
Cª©eMode
.
PERSISTENT
);

496 
zk
.
	`¸óã
(
queue_h™dÀ
 + "/ñemít", "0".
	`gëByãs
(),

497 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

498 
zk
.
	`¸óã
(
queue_h™dÀ
 + "/ñemít", "1".
	`gëByãs
(),

499 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

500 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
(
queue_h™dÀ
, 
åue
);

501 
As£π
.
	`as£πEquÆs
(
chûdªn
.
	`size
(), 2);

502 
Såög
 
chûd1
 = 
chûdªn
.
	`gë
(0);

503 
Såög
 
chûd2
 = 
chûdªn
.
	`gë
(1);

504 
com∑ªResu…
 = 
chûd1
.
	`com∑ªTo
(
chûd2
);

505 
As£π
.
	`as£πNŸSame
(
com∑ªResu…
, 0);

506 i‡(
com∑ªResu…
 < 0) {

508 
Såög
 
ãmp
 = 
chûd1
;

509 
chûd1
 = 
chûd2
;

510 
chûd2
 = 
ãmp
;

512 
Såög
 
chûd1d©a
 = 
√w
 
	`Såög
(
zk
.
	`gëD©a
(
queue_h™dÀ


513 + "/" + 
chûd1
, 
Ál£
, 
nuŒ
));

514 
Såög
 
chûd2d©a
 = 
√w
 
	`Såög
(
zk
.
	`gëD©a
(
queue_h™dÀ


515 + "/" + 
chûd2
, 
Ál£
, 
nuŒ
));

516 
As£π
.
	`as£πEquÆs
(
chûd1d©a
, "0");

517 
As£π
.
	`as£πEquÆs
(
chûd2d©a
, "1");

518 } 
föÆly
 {

519 i‡(
zk
 !
nuŒ
) {

520 
zk
.
	`˛o£
();

524 
	}
}

526 @
Te°


527 
public
 
	$ã°L¨geNodeD©a
(Ë
throws
 
Ex˚±i⁄
 {

528 
ZooKì≥r
 
zk

nuŒ
;

529 
Såög
 
queue_h™dÀ
 = "/large";

530 
åy
 {

531 
zk
 = 
	`¸óãClõ¡
();

533 
zk
.
	`¸óã
(
queue_h™dÀ
, 
√w
 
byã
[500000], 
Ids
.
OPEN_ACL_UNSAFE
,

534 
Cª©eMode
.
PERSISTENT
);

535 } 
föÆly
 {

536 i‡(
zk
 !
nuŒ
) {

537 
zk
.
	`˛o£
();

541 
	}
}

543 
¥iv©e
 
	$vîifyCª©eFaûs
(
Såög
 
∑th
, 
ZooKì≥r
 
zk
Ë
throws
 
Ex˚±i⁄
 {

544 
åy
 {

545 
zk
.
	`¸óã
(
∑th
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

546 } 
	`ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

550 
As£π
.
	`Áû
("badÖ©h \"" + 
∑th
 + "\"Çot caught");

551 
	}
}

554 @
Te°


555 
public
 
	$ã°P©hVÆid©i⁄
(Ë
throws
 
Ex˚±i⁄
 {

556 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

558 
	`vîifyCª©eFaûs
(
nuŒ
, 
zk
);

559 
	`vîifyCª©eFaûs
("", 
zk
);

560 
	`vîifyCª©eFaûs
("//", 
zk
);

561 
	`vîifyCª©eFaûs
("///", 
zk
);

562 
	`vîifyCª©eFaûs
("////", 
zk
);

563 
	`vîifyCª©eFaûs
("/.", 
zk
);

564 
	`vîifyCª©eFaûs
("/..", 
zk
);

565 
	`vîifyCª©eFaûs
("/./", 
zk
);

566 
	`vîifyCª©eFaûs
("/../", 
zk
);

567 
	`vîifyCª©eFaûs
("/foo/./", 
zk
);

568 
	`vîifyCª©eFaûs
("/foo/../", 
zk
);

569 
	`vîifyCª©eFaûs
("/foo/.", 
zk
);

570 
	`vîifyCª©eFaûs
("/foo/..", 
zk
);

571 
	`vîifyCª©eFaûs
("/./.", 
zk
);

572 
	`vîifyCª©eFaûs
("/../..", 
zk
);

573 
	`vîifyCª©eFaûs
("/\u0001foo", 
zk
);

574 
	`vîifyCª©eFaûs
("/foo/b¨/", 
zk
);

575 
	`vîifyCª©eFaûs
("/foo//b¨", 
zk
);

576 
	`vîifyCª©eFaûs
("/foo/b¨//", 
zk
);

578 
	`vîifyCª©eFaûs
("foo", 
zk
);

579 
	`vîifyCª©eFaûs
("a", 
zk
);

581 
zk
.
	`¸óã
("/¸óã£q∑r", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

582 
Cª©eMode
.
PERSISTENT
);

585 
åy
 {

586 
zk
.
	`¸óã
("/¸óã£q∑r/", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

587 
Cª©eMode
.
PERSISTENT
);

588 
As£π
.
	`as£πTrue
(
Ál£
);

589 } 
	`ˇtch
(
IŒegÆArgumítEx˚±i⁄
 
be
) {

594 
zk
.
	`¸óã
("/¸óã£q∑r/", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

595 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

596 
zk
.
	`¸óã
("/¸óã£q∑r/.", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

597 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

598 
zk
.
	`¸óã
("/¸óã£q∑r/..", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

599 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

600 
åy
 {

601 
zk
.
	`¸óã
("/¸óã£q∑r//", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

602 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

603 
As£π
.
	`as£πTrue
(
Ál£
);

604 } 
	`ˇtch
(
IŒegÆArgumítEx˚±i⁄
 
be
) {

607 
åy
 {

608 
zk
.
	`¸óã
("/¸óã£q∑r/./", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

609 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

610 
As£π
.
	`as£πTrue
(
Ál£
);

611 } 
	`ˇtch
(
IŒegÆArgumítEx˚±i⁄
 
be
) {

614 
åy
 {

615 
zk
.
	`¸óã
("/¸óã£q∑r/../", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

616 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

617 
As£π
.
	`as£πTrue
(
Ál£
);

618 } 
	`ˇtch
(
IŒegÆArgumítEx˚±i⁄
 
be
) {

624 
PªpReque°Pro˚ss‹
.
	`£tFaûCª©e
(
åue
);

625 
åy
 {

626 
zk
.
	`¸óã
("/m", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

627 
As£π
.
	`as£πTrue
(
Ál£
);

628 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
BadArgumítsEx˚±i⁄
 
be
) {

631 
PªpReque°Pro˚ss‹
.
	`£tFaûCª©e
(
Ál£
);

632 
zk
.
	`¸óã
("/.foo", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

633 
zk
.
	`¸óã
("/.f.", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

634 
zk
.
	`¸óã
("/..f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

635 
zk
.
	`¸óã
("/..f..", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

636 
zk
.
	`¸óã
("/f.c", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

637 
zk
.
	`¸óã
("/f\u0040f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

638 
zk
.
	`¸óã
("/f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

639 
zk
.
	`¸óã
("/f/.f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

640 
zk
.
	`¸óã
("/f/f.", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

641 
zk
.
	`¸óã
("/f/..f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

642 
zk
.
	`¸óã
("/f/f..", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

643 
zk
.
	`¸óã
("/f/.f/f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

644 
zk
.
	`¸óã
("/f/f./f", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

645 
	}
}

662 @
Te°


663 
public
 
	$ã°DñëeWôhChûdªn
(Ë
throws
 
Ex˚±i⁄
 {

664 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

665 
zk
.
	`¸óã
("/∑ª¡", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

666 
zk
.
	`¸óã
("/∑ª¡/chûd", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

667 
åy
 {

668 
zk
.
	`dñëe
("/parent", -1);

669 
As£π
.
	`Áû
("Should haveÑeceivedáÇotÉquals message");

670 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

671 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY
, 
e
.
	`code
());

673 
zk
.
	`dñëe
("/parent/child", -1);

674 
zk
.
	`dñëe
("/parent", -1);

675 
zk
.
	`˛o£
();

676 
	}
}

678 
¥iv©e
 cœs†
	cVîifyClõ¡CÀ™up
 
exãnds
 
	gThªad
 {

679 
	gcou¡
;

680 
	gcuºít
 = 0;

682 
VîifyClõ¡CÀ™up
(
Såög
 
«me
, 
cou¡
) {

683 
su≥r
(
«me
);

684 
	gthis
.
	gcou¡
 = 
cou¡
;

687 
public
 
run
() {

688 
	gåy
 {

689 ; 
	gcuºít
 < 
	gcou¡
; current++) {

690 
Te°abÀZooKì≥r
 
	gzk
 = 
¸óãClõ¡
();

691 
	gzk
.
˛o£
();

695 
	gzk
.
ã°abÀWaôF‹Shutdown
(
CONNECTION_TIMEOUT
);

697 } 
ˇtch
 (
ThrowabÀ
 
t
) {

698 
	gLOG
.
îr‹
("ã° As£π.Áûed", 
t
);

710 @
Te°


711 
public
 
	$ã°Clõ¡CÀ™up
(Ë
throws
 
ThrowabÀ
 {

712 
O≥øtögSy°emMXBón
 
osMbón
 =

713 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

714 i‡(
osMbón
 =
nuŒ


715 || !(
osMbón
 
ö°™˚of
 
UnixO≥øtögSy°emMXBón
))

717 
LOG
.
	`w¨n
("skippingÅestClientCleanup, onlyávailable on Unix");

721 
föÆ
 
thªadCou¡
 = 3;

722 
föÆ
 
˛õ¡Cou¡
 = 10;

729 
UnixO≥øtögSy°emMXBón
 
unixos
 =

730 (
UnixO≥øtögSy°emMXBón
Ë
osMbón
;

731 
öôülFdCou¡
 = 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
();

733 
VîifyClõ¡CÀ™up
 
thªads
[] = 
√w
 VîifyClõ¡CÀ™up[
thªadCou¡
];

735 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

736 
thªads
[
i
] = 
√w
 
	`VîifyClõ¡CÀ™up
("VCC" + i, 
˛õ¡Cou¡
);

737 
thªads
[
i
].
	`°¨t
();

740 
i
 = 0; i < 
thªads
.
Àngth
; i++) {

741 
thªads
[
i
].
	`joö
(
CONNECTION_TIMEOUT
);

742 
As£π
.
	`as£πTrue
(
thªads
[
i
].
cuºít
 =thªads[i].
cou¡
);

747 
cuºítCou¡
 = 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
();

748 
föÆ
 
Såög
 
logmsg
 = "open fdsáfterÅest ({})áreÇot significantly higherÅhan before ({})";

750 i‡(
cuºítCou¡
 > 
öôülFdCou¡
 + 10) {

752 
LOG
.
	`îr‹
(
logmsg
,
L⁄g
.
	`vÆueOf
(
cuºítCou¡
),L⁄g.vÆueOf(
öôülFdCou¡
));

754 
LOG
.
	`öfo
(
logmsg
,
L⁄g
.
	`vÆueOf
(
cuºítCou¡
),L⁄g.vÆueOf(
öôülFdCou¡
));

756 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
.
	gMesßge
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

42 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

43 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

45 
public
 cœs†
	cCnxM™agîTe°
 
exãnds
 
	mZKTe°Ca£
 {

46 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLENewEpochTe°
.
˛ass
);

47 
¥Ÿe˘ed
 
föÆ
 
	mTHRESHOLD
 = 4;

49 
	mcou¡
;

50 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m≥îs
;

51 
Fûe
 
	m≥îTmpdú
[];

52 
	m≥îQu‹umP‹t
[];

53 
	m≥îClõ¡P‹t
[];

54 @
Bef‹e


55 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

57 
this
.
cou¡
 = 3;

58 
this
.
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

59 
≥îTmpdú
 = 
√w
 
Fûe
[
cou¡
];

60 
≥îQu‹umP‹t
 = 
√w
 [
cou¡
];

61 
≥îClõ¡P‹t
 = 
√w
 [
cou¡
];

63 
i
 = 0; i < 
cou¡
; i++) {

64 
≥îQu‹umP‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

65 
≥îClõ¡P‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

66 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

67 
√w
 
	`Qu‹umSîvî
(
i
,

68 
√w
 
	`I√tSockëAddªss
(
≥îQu‹umP‹t
[
i
]),

69 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

70 
≥îTmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

74 
ByãBuf„r
 
	$¸óãMsg
(
°©e
, 
Àadî
, 
zxid
, 
ïoch
){

75 
byã
 
ªque°Byãs
[] = 
√w
 byte[28];

76 
ByãBuf„r
 
ªque°Buf„r
 = ByãBuf„r.
	`wøp
(
ªque°Byãs
);

82 
ªque°Buf„r
.
	`˛ór
();

83 
ªque°Buf„r
.
	`putI¡
(
°©e
);

84 
ªque°Buf„r
.
	`putL⁄g
(
Àadî
);

85 
ªque°Buf„r
.
	`putL⁄g
(
zxid
);

86 
ªque°Buf„r
.
	`putL⁄g
(
ïoch
);

88  
ªque°Buf„r
;

89 
	}
}

91 ˛as†
	cCnxM™agîThªad
 
exãnds
 
	gThªad
 {

93 
boﬁón
 
	gÁûed
;

94 
CnxM™agîThªad
(){

95 
	gÁûed
 = 
Ál£
;

98 
public
 
run
(){

99 
	gåy
 {

100 
Qu‹umPìr
 
	g≥î
 = 
√w
 Qu‹umPìr(
≥îs
, 
≥îTmpdú
[0],ÖìrTmpdú[0], 
≥îClõ¡P‹t
[0], 3, 0, 1000, 2, 2);

101 
Qu‹umCnxM™agî
 
	g˙xM™agî
 = 
√w
 Qu‹umCnxM™agî(
≥î
);

102 
	gQu‹umCnxM™agî
.
Li°íî
 
	gli°íî
 = 
˙xM™agî
.
li°íî
;

103 if(
	gli°íî
 !
nuŒ
){

104 
li°íî
.
°¨t
();

106 
	gLOG
.
îr‹
("NullÜistener when initializing cnx manager");

109 
	gsid
 = 1;

110 
	g˙xM™agî
.
toSíd
(
sid
, 
¸óãMsg
(
SîvîSèã
.
LOOKING
.
‹döÆ
(), 0, -1, 1));

112 
Mesßge
 
	gm
 = 
nuŒ
;

113 
	gnumRërõs
 = 1;

114 (
	gm
 =
nuŒ
Ë&& (
numRërõs
++ <
THRESHOLD
)){

115 
m
 = 
˙xM™agî
.
pﬁlRecvQueue
(3000, 
TimeUnô
.
MILLISECONDS
);

116 if(
	gm
 =
nuŒ
Ë
˙xM™agî
.
c⁄√˘AŒ
();

119 if(
	gnumRërõs
 > 
	gTHRESHOLD
){

120 
	gÁûed
 = 
åue
;

124 
	g˙xM™agî
.
ã°InôüãC⁄√˘i⁄
(
sid
);

126 
	gm
 = 
˙xM™agî
.
pﬁlRecvQueue
(3000, 
TimeUnô
.
MILLISECONDS
);

127 if(
	gm
 =
nuŒ
){

128 
Áûed
 = 
åue
;

131 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

132 
	gLOG
.
îr‹
("Ex˚±i⁄ whûêru¬ög mockÅhªad", 
e
);

133 
	gAs£π
.
Áû
("UnexpectedÉxception");

138 @
Te°


139 
public
 
	$ã°CnxM™agî
(Ë
throws
 
Ex˚±i⁄
 {

140 
CnxM™agîThªad
 
thªad
 = 
√w
 
	`CnxM™agîThªad
();

142 
thªad
.
	`°¨t
();

144 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[1],ÖìrTmpdú[1], 
≥îClõ¡P‹t
[1], 3, 1, 1000, 2, 2);

145 
Qu‹umCnxM™agî
 
˙xM™agî
 = 
√w
 
	`Qu‹umCnxM™agî
(
≥î
);

146 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agî
.listener;

147 if(
li°íî
 !
nuŒ
){

148 
li°íî
.
	`°¨t
();

150 
LOG
.
	`îr‹
("NullÜistener when initializing cnx manager");

153 
˙xM™agî
.
	`toSíd
(
√w
 
	`L⁄g
(0), 
	`¸óãMsg
(
SîvîSèã
.
LOOKING
.
	`‹döÆ
(), 1, -1, 1));

155 
Mesßge
 
m
 = 
nuŒ
;

156 
numRërõs
 = 1;

157 (
m
 =
nuŒ
Ë&& (
numRërõs
++ <
THRESHOLD
)){

158 
m
 = 
˙xM™agî
.
	`pﬁlRecvQueue
(3000, 
TimeUnô
.
MILLISECONDS
);

159 if(
m
 =
nuŒ
Ë
˙xM™agî
.
	`c⁄√˘AŒ
();

162 
As£π
.
	`as£πTrue
("Ex˚ededÇumbî o‡ªåõs", 
numRërõs
 <
THRESHOLD
);

164 
thªad
.
	`joö
(5000);

165 i‡(
thªad
.
	`isAlive
()) {

166 
As£π
.
	`Áû
("Thread didn't join");

168 if(
thªad
.
Áûed
)

169 
As£π
.
	`Áû
("DidÇotÑeceiveÉxpected message");

172 
	}
}

174 @
Te°


175 
public
 
	$ã°CnxM™agîTimeout
(Ë
throws
 
Ex˚±i⁄
 {

176 
R™dom
 
ønd
 = 
√w
 
	`R™dom
();

177 
byã
 
b
 = (byãË
ønd
.
	`√xtI¡
();

178 
dódP‹t
 = 
P‹tAssignmít
.
	`unique
();

179 
Såög
 
dódAddªss
 = 
√w
 
	`Såög
("10.1.1." + 
b
);

181 
LOG
.
	`öfo
("Thi†i†thêdódáddªs†I'mÅryög: " + 
dódAddªss
);

183 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(2),

184 
√w
 
	`Qu‹umSîvî
(2,

185 
√w
 
	`I√tSockëAddªss
(
dódAddªss
, 
dódP‹t
),

186 
√w
 
	`I√tSockëAddªss
(
dódAddªss
, 
P‹tAssignmít
.
	`unique
())));

187 
≥îTmpdú
[2] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

189 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[1],ÖìrTmpdú[1], 
≥îClõ¡P‹t
[1], 3, 1, 1000, 2, 2);

190 
Qu‹umCnxM™agî
 
˙xM™agî
 = 
√w
 
	`Qu‹umCnxM™agî
(
≥î
);

191 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agî
.listener;

192 if(
li°íî
 !
nuŒ
){

193 
li°íî
.
	`°¨t
();

195 
LOG
.
	`îr‹
("NullÜistener when initializing cnx manager");

198 
begö
 = 
Sy°em
.
	`cuºítTimeMûlis
();

199 
˙xM™agî
.
	`toSíd
(
√w
 
	`L⁄g
(2), 
	`¸óãMsg
(
SîvîSèã
.
LOOKING
.
	`‹döÆ
(), 1, -1, 1));

200 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

202 if((
íd
 - 
begö
Ë> 6000Ë
As£π
.
	`Áû
("Waited moreÅhanÇecessary");

204 
	}
}

214 @
Te°


215 
public
 
	$ã°CnxM™agîSpöLock
(Ë
throws
 
Ex˚±i⁄
 {

216 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[1],ÖìrTmpdú[1], 
≥îClõ¡P‹t
[1], 3, 1, 1000, 2, 2);

217 
Qu‹umCnxM™agî
 
˙xM™agî
 = 
√w
 
	`Qu‹umCnxM™agî
(
≥î
);

218 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agî
.listener;

219 if(
li°íî
 !
nuŒ
){

220 
li°íî
.
	`°¨t
();

222 
LOG
.
	`îr‹
("NullÜistener when initializing cnx manager");

225 
p‹t
 = 
≥îs
.
	`gë
(
≥î
.
	`gëId
()).
ñe˘i⁄Addr
.
	`gëP‹t
();

226 
LOG
.
	`öfo
("EÀ˘i⁄Ö‹t: " + 
p‹t
);

227 
I√tSockëAddªss
 
addr
 = 
√w
 
	`I√tSockëAddªss
(
p‹t
);

229 
Thªad
.
	`¶ìp
(1000);

231 
SockëCh™√l
 
sc
 = SockëCh™√l.
	`›í
();

232 
sc
.
	`sockë
().
	`c⁄√˘
(
≥îs
.
	`gë
(
√w
 
	`L⁄g
(1)).
ñe˘i⁄Addr
, 5000);

237 
byã
[] 
msgByãs
 = 
√w
 byte[8];

238 
ByãBuf„r
 
msgBuf„r
 = ByãBuf„r.
	`wøp
(
msgByãs
);

239 
msgBuf„r
.
	`putL⁄g
(
√w
 
	`L⁄g
(2));

240 
msgBuf„r
.
	`posôi⁄
(0);

241 
sc
.
	`wrôe
(
msgBuf„r
);

243 
msgBuf„r
 = 
ByãBuf„r
.
	`wøp
(
√w
 
byã
[4]);

244 
msgBuf„r
.
	`putI¡
(-20);

245 
msgBuf„r
.
	`posôi⁄
(0);

246 
sc
.
	`wrôe
(
msgBuf„r
);

248 
Thªad
.
	`¶ìp
(1000);

250 
åy
{

255 
i
 = 0; i < 100; i++){

256 
msgBuf„r
.
	`posôi⁄
(0);

257 
sc
.
	`wrôe
(
msgBuf„r
);

259 
As£π
.
	`Áû
("Socket hasÇot been closed");

260 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

261 
LOG
.
	`öfo
("Socket has been closedásÉxpected");

263 
≥î
.
	`shutdown
();

264 
˙xM™agî
.
	`hÆt
();

265 
	}
}

270 @
Te°


271 
public
 
	$ã°SockëTimeout
(Ë
throws
 
Ex˚±i⁄
 {

272 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[1],ÖìrTmpdú[1], 
≥îClõ¡P‹t
[1], 3, 1, 2000, 2, 2);

273 
Qu‹umCnxM™agî
 
˙xM™agî
 = 
√w
 
	`Qu‹umCnxM™agî
(
≥î
);

274 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agî
.listener;

275 if(
li°íî
 !
nuŒ
){

276 
li°íî
.
	`°¨t
();

278 
LOG
.
	`îr‹
("NullÜistener when initializing cnx manager");

280 
p‹t
 = 
≥îs
.
	`gë
(
≥î
.
	`gëId
()).
ñe˘i⁄Addr
.
	`gëP‹t
();

281 
LOG
.
	`öfo
("EÀ˘i⁄Ö‹t: " + 
p‹t
);

282 
I√tSockëAddªss
 
addr
 = 
√w
 
	`I√tSockëAddªss
(
p‹t
);

283 
Thªad
.
	`¶ìp
(1000);

285 
Sockë
 
sock
 = 
√w
 
	`Sockë
();

286 
sock
.
	`c⁄√˘
(
≥îs
.
	`gë
(
√w
 
	`L⁄g
(1)).
ñe˘i⁄Addr
, 5000);

287 
begö
 = 
Sy°em
.
	`cuºítTimeMûlis
();

289 
˙xM™agî
.
	`ª˚iveC⁄√˘i⁄
(
sock
);

290 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

291 if((
íd
 - 
begö
Ë> ((
≥î
.
	`gëSyncLimô
(Ë*Öìr.
	`gëTickTime
()Ë+ 500)Ë
As£π
.
	`Áû
("Waited moreÅhanÇecessary");

292 
	}
}

297 @
Te°


298 
public
 
	$ã°W‹kîThªads
(Ë
throws
 
Ex˚±i⁄
 {

299 
AºayLi°
<
Qu‹umPìr
> 
≥îLi°
 = 
√w
 ArrayList<QuorumPeer>();

301 
sid
 = 0; sid < 3; sid++) {

302 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[
sid
],ÖeerTmpdir[sid],

303 
≥îClõ¡P‹t
[
sid
], 3, sid, 1000, 2, 2);

304 
LOG
.
	`öfo
("SèπögÖì∏" + 
≥î
.
	`gëId
());

305 
≥î
.
	`°¨t
();

306 
≥îLi°
.
	`add
(
sid
, 
≥î
);

308 
Såög
 
Áûuª
 = 
	`vîifyThªadCou¡
(
≥îLi°
, 4);

309 i‡(
Áûuª
 !
nuŒ
) {

310 
As£π
.
	`Áû
(
Áûuª
);

312 
myid
 = 0; myid < 3; myid++) {

313 
i
 = 0; i < 5; i++) {

315 
Qu‹umPìr
 
≥î
 = 
≥îLi°
.
	`gë
(
myid
);

316 
LOG
.
	`öfo
("Round " + 
i
 + ", hÆtögÖì∏" + 
≥î
.
	`gëId
());

317 
≥î
.
	`shutdown
();

318 
≥îLi°
.
	`ªmove
(
myid
);

319 
Áûuª
 = 
	`vîifyThªadCou¡
(
≥îLi°
, 2);

320 i‡(
Áûuª
 !
nuŒ
) {

321 
As£π
.
	`Áû
(
Áûuª
);

325 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
≥îTmpdú
[
myid
],ÖeerTmpdir[myid],

326 
≥îClõ¡P‹t
[
myid
], 3, myid, 1000, 2, 2);

327 
LOG
.
	`öfo
("Round " + 
i
 + ",Ñe°¨tögÖì∏" + 
≥î
.
	`gëId
());

328 
≥î
.
	`°¨t
();

329 
≥îLi°
.
	`add
(
myid
, 
≥î
);

330 
Áûuª
 = 
	`vîifyThªadCou¡
(
≥îLi°
, 4);

331 i‡(
Áûuª
 !
nuŒ
) {

332 
As£π
.
	`Áû
(
Áûuª
);

336 
	}
}

342 
public
 
Såög
 
vîifyThªadCou¡
(
AºayLi°
<
Qu‹umPìr
> 
≥îLi°
, 
e˙t
)

343 
throws
 
	gI¡îru±edEx˚±i⁄


345 
Såög
 
	gÁûuª
 = 
nuŒ
;

346 
	gi
 = 0; i < 480; i++) {

347 
	gThªad
.
¶ìp
(500);

349 
	gÁûuª
 = 
_vîifyThªadCou¡
(
≥îLi°
, 
e˙t
);

350 i‡(
	gÁûuª
 =
nuŒ
) {

351  
nuŒ
;

354  
	gÁûuª
;

356 
public
 
Såög
 
_vîifyThªadCou¡
(
AºayLi°
<
Qu‹umPìr
> 
≥îLi°
, 
e˙t
) {

357 
	gmyid
 = 0; myid < 
	g≥îLi°
.
size
(); myid++) {

358 
Qu‹umPìr
 
	g≥î
 = 
≥îLi°
.
gë
(
myid
);

359 
Qu‹umCnxM™agî
 
	g˙xM™agî
 = 
≥î
.
gëQu‹umCnxM™agî
();

360 
	g˙t
 = 
˙xM™agî
.
gëThªadCou¡
();

361 i‡(
	g˙t
 !
e˙t
) {

362  
√w
 
Såög
“ew 
D©e
()

363 + " Inc‹ª˘Çumbî o‡W‹kîÅhªad†f‹ sid=" + 
myid


364 + "Éx≥˘ed " + 
e˙t
 + " found " + 
˙t
);

367  
	gnuŒ
;

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gC⁄√˘SåögP¨£r
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

26 
public
 cœs†
	cC⁄√˘SåögP¨£rTe°
 
exãnds
 
	mZKTe°Ca£
{

28 @
Te°


29 
public
 
	$ã°SögÀSîvîChroŸP©h
(){

30 
Såög
 
chroŸP©h
 = "/hallo/welt";

31 
Såög
 
£rvîs
 = "10.10.10.1";

32 
	`as£πChroŸP©h
(
chroŸP©h
,

33 
√w
 
	`C⁄√˘SåögP¨£r
(
£rvîs
+
chroŸP©h
));

36 @
Te°


37 
public
 
	$ã°Mu…ùÀSîvîsChroŸP©h
(){

38 
Såög
 
chroŸP©h
 = "/hallo/welt";

39 
Såög
 
£rvîs
 = "10.10.10.1,10.10.10.2";

40 
	`as£πChroŸP©h
(
chroŸP©h
,

41 
√w
 
	`C⁄√˘SåögP¨£r
(
£rvîs
+
chroŸP©h
));

42 
	}
}

44 @
Te°


45 
public
 
	$ã°P¨£SîvîsWôhoutP‹t
(){

46 
Såög
 
£rvîs
 = "10.10.10.1,10.10.10.2";

47 
C⁄√˘SåögP¨£r
 
∑r£r
 = 
√w
 
	`C⁄√˘SåögP¨£r
(
£rvîs
);

49 
As£π
.
	`as£πEquÆs
("10.10.10.1", 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(0).
	`gëHo°Name
());

50 
As£π
.
	`as£πEquÆs
("10.10.10.2", 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(1).
	`gëHo°Name
());

51 
	}
}

53 @
Te°


54 
public
 
	$ã°P¨£SîvîsWôhP‹t
(){

55 
Såög
 
£rvîs
 = "10.10.10.1:112,10.10.10.2:110";

56 
C⁄√˘SåögP¨£r
 
∑r£r
 = 
√w
 
	`C⁄√˘SåögP¨£r
(
£rvîs
);

58 
As£π
.
	`as£πEquÆs
("10.10.10.1", 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(0).
	`gëHo°Name
());

59 
As£π
.
	`as£πEquÆs
("10.10.10.2", 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(1).
	`gëHo°Name
());

61 
As£π
.
	`as£πEquÆs
(112, 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(0).
	`gëP‹t
());

62 
As£π
.
	`as£πEquÆs
(110, 
∑r£r
.
	`gëSîvîAddªs£s
().
	`gë
(1).
	`gëP‹t
());

63 
	}
}

65 
¥iv©e
 
	$as£πChroŸP©h
(
Såög
 
ex≥˘ed
, 
C⁄√˘SåögP¨£r
 
∑r£r
){

66 
As£π
.
	`as£πEquÆs
(
ex≥˘ed
, 
∑r£r
.
	`gëChroŸP©h
());

67 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/CreateModeTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumSë
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cCª©eModeTe°
 
exãnds
 
	mZKTe°Ca£
 {

32 @
Te°


33 
public
 
	$ã°BasicCª©eMode
() {

34 
Cª©eMode
 
cm
 = Cª©eMode.
PERSISTENT
;

35 
As£π
.
	`as£πEquÆs
(
cm
.
	`toFœg
(), 0);

36 
As£π
.
	`as£πFÆ£
(
cm
.
	`isEphemîÆ
());

37 
As£π
.
	`as£πFÆ£
(
cm
.
	`isSequítül
());

39 
cm
 = 
Cª©eMode
.
EPHEMERAL
;

40 
As£π
.
	`as£πEquÆs
(
cm
.
	`toFœg
(), 1);

41 
As£π
.
	`as£πTrue
(
cm
.
	`isEphemîÆ
());

42 
As£π
.
	`as£πFÆ£
(
cm
.
	`isSequítül
());

44 
cm
 = 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
;

45 
As£π
.
	`as£πEquÆs
(
cm
.
	`toFœg
(), 2);

46 
As£π
.
	`as£πFÆ£
(
cm
.
	`isEphemîÆ
());

47 
As£π
.
	`as£πTrue
(
cm
.
	`isSequítül
());

49 
cm
 = 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
;

50 
As£π
.
	`as£πEquÆs
(
cm
.
	`toFœg
(), 3);

51 
As£π
.
	`as£πTrue
(
cm
.
	`isEphemîÆ
());

52 
As£π
.
	`as£πTrue
(
cm
.
	`isSequítül
());

55 @
Te°


56 
public
 
	$ã°FœgC⁄vîsi⁄
(Ë
throws
 
Kì≥rEx˚±i⁄
 {

58 
EnumSë
<
Cª©eMode
> 
ÆlModes
 = EnumSë.
	`ÆlOf
(Cª©eMode.
˛ass
);

60 
Cª©eMode
 
cm
 : 
ÆlModes
) {

61 
As£π
.
	`as£πEquÆs
(
cm
, 
Cª©eMode
.
	`‰omFœg
–cm.
	`toFœg
() ) );

63 
	}
}

65 @
Te°


66 
public
 
	$ã°InvÆidFœgC⁄vîsi⁄
(Ë
throws
 
Kì≥rEx˚±i⁄
 {

67 
åy
 {

68 
Cª©eMode
 
cm
 = Cª©eMode.
	`‰omFœg
(99);

69 
As£π
.
	`Áû
("Shouldn't beábleÅo convert 99Åoá CreateMode.");

70 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
 
ke
) {

71 
As£π
.
	`as£πEquÆs
(
Code
.
BADARGUMENTS
, 
ke
.
	`code
());

74 
åy
 {

75 
Cª©eMode
 
cm
 = Cª©eMode.
	`‰omFœg
(-1);

76 
As£π
.
	`Áû
("Shouldn't beábleÅo convert -1Åoá CreateMode.");

77 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
 
ke
) {

78 
As£π
.
	`as£πEquÆs
(
Code
.
BADARGUMENTS
, 
ke
.
	`code
());

80 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DataTreeTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aNode
;

34 
public
 cœs†
	cD©aTªeTe°
 
exãnds
 
	mZKTe°Ca£
 {

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
D©aTªeTe°
.
˛ass
);

37 
¥iv©e
 
D©aTªe
 
	mdt
;

39 @
Bef‹e


40 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

41 
dt
=
√w
 
	`D©aTªe
();

44 @
A·î


45 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

46 
dt
=
nuŒ
;

47 
	}
}

49 @
Te°


50 
public
 
	$ã°RoŸW©chTriggîed
(Ë
throws
 
Ex˚±i⁄
 {

51 ˛as†
	cMyW©chî
 
im∂emíts
 
W©chî
{

52 
boﬁón
 
fúed
=
Ál£
;

53 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

54 if(
evít
.
	`gëP©h
().
	`equÆs
("/"))

55 
fúed
=
åue
;

58 
MyW©chî
 
w©chî
=
√w
 
	`MyW©chî
();

60 
dt
.
	`gëChûdªn
("/", 
√w
 
	`Sèt
(), 
w©chî
);

62 
dt
.
	`¸óãNode
("/xyz", 
√w
 
byã
[0], 
nuŒ
, 0, dt.
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
()+1, 1, 1);

63 
As£π
.
	`as£πFÆ£
("RoŸÇodêw©chÇŸÅriggîed",!
w©chî
.
fúed
);

64 
	}
}

69 @
Te°


70 
public
 
	$ã°In¸emítCvîsi⁄
(Ë
throws
 
Ex˚±i⁄
 {

71 
dt
.
	`¸óãNode
("/ã°", 
√w
 
byã
[0], 
nuŒ
, 0, dt.
	`gëNode
("/").
°©
.
	`gëCvîsi⁄
()+1, 1, 1);

72 
D©aNode
 
zk
 = 
dt
.
	`gëNode
("/test");

73 
¥evCvîsi⁄
 = 
zk
.
°©
.
	`gëCvîsi⁄
();

74 
¥evPzxid
 = 
zk
.
°©
.
	`gëPzxid
();

75 
dt
.
	`£tCvîsi⁄Pzxid
("/ã°/", 
¥evCvîsi⁄
 + 1, 
¥evPzxid
 + 1);

76 
√wCvîsi⁄
 = 
zk
.
°©
.
	`gëCvîsi⁄
();

77 
√wPzxid
 = 
zk
.
°©
.
	`gëPzxid
();

78 
As£π
.
	`as£πTrue
("<cversion,Özxid> verification failed. Expected: <" +

79 (
¥evCvîsi⁄
 + 1Ë+ ", " + (
¥evPzxid
 + 1) + ">, found: <" +

80 
√wCvîsi⁄
 + ", " + 
√wPzxid
 + ">",

81 (
√wCvîsi⁄
 =
¥evCvîsi⁄
 + 1 && 
√wPzxid
 =
¥evPzxid
 + 1));

82 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DisconnectableZooKeeper.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

26 
public
 cœs†
	cDisc⁄√˘abÀZooKì≥r
 
exãnds
 
	mZooKì≥r
 {

27 
public
 
	$Disc⁄√˘abÀZooKì≥r
(
Såög
 
ho°
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
)

28 
throws
 
IOEx˚±i⁄


30 
	`su≥r
(
ho°
, 
£ssi⁄Timeout
, 
w©chî
);

33 
public
 
	$Disc⁄√˘abÀZooKì≥r
(
Såög
 
ho°
, 
£ssi⁄Timeout
, 
W©chî
 
w©chî
,

34 
£ssi⁄Id
, 
byã
[] 
£ssi⁄Passwd
)

35 
throws
 
IOEx˚±i⁄


37 
	`su≥r
(
ho°
, 
£ssi⁄Timeout
, 
w©chî
, 
£ssi⁄Id
, 
£ssi⁄Passwd
);

38 
	}
}

45 
public
 
	$disc⁄√˘
(Ë
throws
 
IOEx˚±i⁄
 {

46 
˙xn
.
	`disc⁄√˘
();

47 
	}
}

53 
public
 
	$d⁄tRec⁄√˘
(Ë
throws
 
Ex˚±i⁄
 {

54 
java
.
œng
.
ªÊe˘
.
Fõld
 
f
 = 
˙xn
.
	`gëCœss
().
	`gëDe˛¨edFõld
("closing");

55 
f
.
	`£tAc˚ssibÀ
(
åue
);

56 
f
.
	`£tBoﬁón
(
˙xn
, 
åue
);

57 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DisconnectedWatcherTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

34 
public
 cœs†
	cDisc⁄√˘edW©chîTe°
 
exãnds
 
	mClõ¡Ba£
 {

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Disc⁄√˘edW©chîTe°
.
˛ass
);

36 
föÆ
 
	mTIMEOUT
 = 5000;

38 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	mCou¡downW©chî
 {

39 
	mLökedBlockögQueue
<
	mW©chedEvít
> 
	mevíts
 =

40 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

42 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

43 
	msu≥r
.
¥o˚ss
(
evít
);

44 i‡(
	mevít
.
gëTy≥
(Ë!
Evít
.
EvítTy≥
.
N⁄e
) {

45 
åy
 {

46 
evíts
.
put
(
evít
);

47 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

48 
	mLOG
.
w¨n
("ignoring interrupt duringÉvent.put");

56 @
Te°


57 
public
 
	$ã°ChûdW©chîAutoRe£tWôhChroŸ
(Ë
throws
 
Ex˚±i⁄
 {

58 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

60 
zk1
.
	`¸óã
("/ch1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

61 
Cª©eMode
.
PERSISTENT
);

63 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

64 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
 + "/ch1");

65 
zk2
.
	`gëChûdªn
("/", 
åue
 );

68 
zk1
.
	`¸óã
("/youd⁄tm©ãr1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

69 
Cª©eMode
.
PERSISTENT
);

72 
zk1
.
	`¸óã
("/ch1/youshouldm©ãr1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

73 
Cª©eMode
.
PERSISTENT
);

74 
W©chedEvít
 
e
 = 
w©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

75 
As£π
.
	`as£πNŸNuŒ
(
e
);

76 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

77 
As£π
.
	`as£πEquÆs
("/", 
e
.
	`gëP©h
());

79 
MyW©chî
 
chûdW©chî
 = 
√w
 
	`MyW©chî
();

80 
zk2
.
	`gëChûdªn
("/", 
chûdW©chî
);

82 
	`°›Sîvî
();

83 
w©chî
.
	`waôF‹Disc⁄√˘ed
(3000);

84 
	`°¨tSîvî
();

85 
w©chî
.
	`waôF‹C⁄√˘ed
(3000);

88 
zk1
.
	`¸óã
("/ch1/youshouldm©ãr2", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

89 
Cª©eMode
.
PERSISTENT
);

90 
e
 = 
chûdW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

91 
As£π
.
	`as£πNŸNuŒ
(
e
);

92 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

93 
As£π
.
	`as£πEquÆs
("/", 
e
.
	`gëP©h
());

94 
	}
}

96 @
Te°


97 
public
 
	$ã°DeÁu…W©chîAutoRe£tWôhChroŸ
(Ë
throws
 
Ex˚±i⁄
 {

98 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

100 
zk1
.
	`¸óã
("/ch1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

101 
Cª©eMode
.
PERSISTENT
);

103 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

104 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
 + "/ch1");

105 
zk2
.
	`gëChûdªn
("/", 
åue
 );

108 
zk1
.
	`¸óã
("/youd⁄tm©ãr1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

109 
Cª©eMode
.
PERSISTENT
);

112 
zk1
.
	`¸óã
("/ch1/youshouldm©ãr1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

113 
Cª©eMode
.
PERSISTENT
);

114 
W©chedEvít
 
e
 = 
w©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

115 
As£π
.
	`as£πNŸNuŒ
(
e
);

116 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

117 
As£π
.
	`as£πEquÆs
("/", 
e
.
	`gëP©h
());

119 
zk2
.
	`gëChûdªn
("/", 
åue
 );

121 
	`°›Sîvî
();

122 
w©chî
.
	`waôF‹Disc⁄√˘ed
(3000);

123 
	`°¨tSîvî
();

124 
w©chî
.
	`waôF‹C⁄√˘ed
(3000);

127 
zk1
.
	`¸óã
("/ch1/youshouldm©ãr2", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

128 
Cª©eMode
.
PERSISTENT
);

129 
e
 = 
w©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

130 
As£π
.
	`as£πNŸNuŒ
(
e
);

131 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

132 
As£π
.
	`as£πEquÆs
("/", 
e
.
	`gëP©h
());

133 
	}
}

135 @
Te°


136 
public
 
	$ã°DìpChûdW©chîAutoRe£tWôhChroŸ
(Ë
throws
 
Ex˚±i⁄
 {

137 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

139 
zk1
.
	`¸óã
("/ch1", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

140 
Cª©eMode
.
PERSISTENT
);

141 
zk1
.
	`¸óã
("/ch1/hîe", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

142 
Cª©eMode
.
PERSISTENT
);

143 
zk1
.
	`¸óã
("/ch1/hîe/we", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

144 
Cª©eMode
.
PERSISTENT
);

145 
zk1
.
	`¸óã
("/ch1/hîe/we/¨e", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

146 
Cª©eMode
.
PERSISTENT
);

148 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

149 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
 + "/ch1/here/we");

150 
zk2
.
	`gëChûdªn
("/¨e", 
åue
 );

153 
zk1
.
	`¸óã
("/ch1/hîe/we/¨e/now", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

154 
Cª©eMode
.
PERSISTENT
);

155 
W©chedEvít
 
e
 = 
w©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

156 
As£π
.
	`as£πNŸNuŒ
(
e
);

157 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

158 
As£π
.
	`as£πEquÆs
("/¨e", 
e
.
	`gëP©h
());

160 
MyW©chî
 
chûdW©chî
 = 
√w
 
	`MyW©chî
();

161 
zk2
.
	`gëChûdªn
("/¨e", 
chûdW©chî
);

163 
	`°›Sîvî
();

164 
w©chî
.
	`waôF‹Disc⁄√˘ed
(3000);

165 
	`°¨tSîvî
();

166 
w©chî
.
	`waôF‹C⁄√˘ed
(3000);

169 
zk1
.
	`¸óã
("/ch1/hîe/we/¨e/agaö", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
,

170 
Cª©eMode
.
PERSISTENT
);

171 
e
 = 
chûdW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

172 
As£π
.
	`as£πNŸNuŒ
(
e
);

173 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

174 
As£π
.
	`as£πEquÆs
("/¨e", 
e
.
	`gëP©h
());

175 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/EventTypeTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumSë
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

28 
public
 cœs†
	cEvítTy≥Te°
 
exãnds
 
	mZKTe°Ca£
 {

30 @
Te°


31 
public
 
	$ã°I¡C⁄vîsi⁄
() {

33 
EnumSë
<
EvítTy≥
> 
ÆlTy≥s
 = EnumSë.
	`ÆlOf
(EvítTy≥.
˛ass
);

35 
EvítTy≥
 
ë
 : 
ÆlTy≥s
) {

36 
As£π
.
	`as£πEquÆs
(
ë
, 
EvítTy≥
.
	`‰omI¡
–ë.
	`gëI¡VÆue
() ) );

40 @
Te°


41 
public
 
	$ã°InvÆidI¡C⁄vîsi⁄
() {

42 
åy
 {

43 
EvítTy≥
 
ë
 = EvítTy≥.
	`‰omI¡
(324242);

44 
As£π
.
	`Áû
("WasábleÅo createán invalid EventType viaán integer");

45 } 
	`ˇtch
(
Ru¡imeEx˚±i⁄
 
ª
) {

49 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEBackwardElectionRoundTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gFLETe°Utûs
.
	gLEThªad
;

42 
public
 cœs†
	cFLEBackw¨dEÀ˘i⁄RoundTe°
 
exãnds
 
	mZKTe°Ca£
 {

43 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLELo°MesßgeTe°
.
˛ass
);

45 
	mcou¡
;

46 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m≥îs
;

47 
Fûe
 
	mtmpdú
[];

48 
	mp‹t
[];

50 
Qu‹umCnxM™agî
 
	m˙xM™agîs
[];

52 @
Bef‹e


53 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

54 
cou¡
 = 3;

56 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

57 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

58 
p‹t
 = 
√w
 [
cou¡
];

59 
˙xM™agîs
 = 
√w
 
Qu‹umCnxM™agî
[
cou¡
 - 1];

62 @
A·î


63 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

64 
i
 = 0; i < (
cou¡
 - 1); i++){

65 if(
˙xM™agîs
[
i
] !
nuŒ
){

66 
˙xM™agîs
[
i
].
	`hÆt
();

69 
	}
}

90 @
Te°


91 
public
 
	$ã°Backw¨dEÀ˘i⁄Round
(Ë
throws
 
Ex˚±i⁄
 {

92 
LOG
.
	`öfo
("Te°LE: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

93 
i
 = 0; i < 
cou¡
; i++) {

94 
˛õ¡p‹t
 = 
P‹tAssignmít
.
	`unique
();

95 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

96 
√w
 
	`Qu‹umSîvî
(
i
,

97 
√w
 
	`I√tSockëAddªss
(
˛õ¡p‹t
),

98 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

99 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

100 
p‹t
[
i
] = 
˛õ¡p‹t
;

107 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[0],Åmpdú[0], 
p‹t
[0], 3, 0, 1000, 2, 2);

108 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

109 
FLETe°Utûs
.
LEThªad
 
thªad
 = 
√w
 FLETe°Utûs.
	`LEThªad
(
≥î
, 0);

110 
thªad
.
	`°¨t
();

116 
Qu‹umPìr
 
mockPìr
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[1],Åmpdú[1], 
p‹t
[1], 3, 1, 1000, 2, 2);

117 
˙xM™agîs
[0] = 
√w
 
	`Qu‹umCnxM™agî
(
mockPìr
);

118 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agîs
[0].listener;

119 
li°íî
.
	`°¨t
();

121 
˙xM™agîs
[0].
	`toSíd
(0l, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
FOLLOWING
.
	`‹döÆ
(), 0, 0, 1));

126 
mockPìr
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[2],Åmpdú[2], 
p‹t
[2], 3, 2, 1000, 2, 2);

127 
˙xM™agîs
[1] = 
√w
 
	`Qu‹umCnxM™agî
(
mockPìr
);

128 
li°íî
 = 
˙xM™agîs
[1].listener;

129 
li°íî
.
	`°¨t
();

131 
˙xM™agîs
[1].
	`toSíd
(0l, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
FOLLOWING
.
	`‹döÆ
(), 0, 0, 1));

136 
thªad
.
	`joö
(5000);

137 
thªad
 = 
√w
 
FLETe°Utûs
.
	`LEThªad
(
≥î
, 0);

138 
thªad
.
	`°¨t
();

143 
˙xM™agîs
[0].
	`toSíd
(0l, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
FOLLOWING
.
	`‹döÆ
(), 0, 0, 1));

144 
˙xM™agîs
[1].
	`toSíd
(0l, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
FOLLOWING
.
	`‹döÆ
(), 0, 0, 1));

147 
thªad
.
	`joö
(5000);

149 i‡(!
thªad
.
	`isAlive
()) {

150 
As£π
.
	`Áû
("ShouldÇot have joined");

153 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLELostMessageTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

40 
public
 cœs†
	cFLELo°MesßgeTe°
 
exãnds
 
	mZKTe°Ca£
 {

41 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLELo°MesßgeTe°
.
˛ass
);

44 
	mcou¡
;

45 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m≥îs
;

46 
Fûe
 
	mtmpdú
[];

47 
	mp‹t
[];

49 
Qu‹umCnxM™agî
 
	m˙xM™agî
;

51 @
Bef‹e


52 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

53 
cou¡
 = 3;

55 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

56 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

57 
p‹t
 = 
√w
 [
cou¡
];

60 @
A·î


61 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

62 
˙xM™agî
.
	`hÆt
();

63 
	}
}

65 @
Te°


66 
public
 
	$ã°Lo°Mesßge
(Ë
throws
 
Ex˚±i⁄
 {

67 
Fa°LódîEÀ˘i⁄
 
À
[] = 
√w
 Fa°LódîEÀ˘i⁄[
cou¡
];

69 
LOG
.
	`öfo
("Te°LE: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

70 
i
 = 0; i < 
cou¡
; i++) {

71 
˛õ¡p‹t
 = 
P‹tAssignmít
.
	`unique
();

72 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

73 
√w
 
	`Qu‹umSîvî
(
i
,

74 
√w
 
	`I√tSockëAddªss
(
˛õ¡p‹t
),

75 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

76 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

77 
p‹t
[
i
] = 
˛õ¡p‹t
;

84 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[1],Åmpdú[1], 
p‹t
[1], 3, 1, 1000, 2, 2);

85 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

86 
FLETe°Utûs
.
LEThªad
 
thªad
 = 
√w
 FLETe°Utûs.
	`LEThªad
(
≥î
, 1);

87 
thªad
.
	`°¨t
();

92 
	`mockSîvî
();

93 
thªad
.
	`joö
(5000);

94 i‡(
thªad
.
	`isAlive
()) {

95 
As£π
.
	`Áû
("Threads didn't join");

97 
	}
}

99 
	$mockSîvî
(Ë
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
 {

103 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[0],Åmpdú[0], 
p‹t
[0], 3, 0, 1000, 2, 2);

104 
˙xM™agî
 = 
√w
 
	`Qu‹umCnxM™agî
(
≥î
);

105 
Qu‹umCnxM™agî
.
Li°íî
 
li°íî
 = 
˙xM™agî
.listener;

106 
li°íî
.
	`°¨t
();

109 
˙xM™agî
.
	`toSíd
(1l, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
LOOKING
.
	`‹döÆ
(), 0, 0, 1));

110 
˙xM™agî
.
ªcvQueue
.
	`èke
();

111 
˙xM™agî
.
	`toSíd
(1L, 
FLETe°Utûs
.
	`¸óãMsg
(
SîvîSèã
.
FOLLOWING
.
	`‹döÆ
(), 1, 0, 1));

112 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLENewEpochTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gSem≠h‹e
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

41 
public
 cœs†
	cFLENewEpochTe°
 
exãnds
 
	mZKTe°Ca£
 {

42 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLENewEpochTe°
.
˛ass
);

44 
	mcou¡
;

45 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m≥îs
;

46 
	mAºayLi°
<
	mLEThªad
> 
	mthªads
;

47 
Fûe
 
	mtmpdú
[];

48 
	mp‹t
[];

49 vﬁ©ûê[] 
	mround
;

51 
Sem≠h‹e
 
	m°¨t0
;

52 
Sem≠h‹e
 
	mföish3
, 
	mföish0
;

54 @
Bef‹e


55 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

56 
cou¡
 = 3;

58 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

59 
thªads
 = 
√w
 
AºayLi°
<
LEThªad
>(
cou¡
);

60 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

61 
p‹t
 = 
√w
 [
cou¡
];

63 
round
 = 
√w
 [3];

64 
round
[0] = 0;

65 
round
[1] = 0;

66 
round
[2] = 0;

68 
°¨t0
 = 
√w
 
	`Sem≠h‹e
(0);

69 
föish0
 = 
√w
 
	`Sem≠h‹e
(0);

70 
föish3
 = 
√w
 
	`Sem≠h‹e
(0);

73 @
A·î


74 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

75 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

76 ((
Fa°LódîEÀ˘i⁄
Ë
thªads
.
	`gë
(
i
).
≥î
.
	`gëEÀ˘i⁄Alg
()).
	`shutdown
();

78 
	}
}

81 ˛as†
	cLEThªad
 
exãnds
 
	gThªad
 {

82 
	gi
;

83 
Qu‹umPìr
 
	g≥î
;

85 
LEThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

86 
	gthis
.
	gi
 = 
i
;

87 
	gthis
.
	g≥î
 = 
≥î
;

88 
	gLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

92 
public
 
run
(){

93 
boﬁón
 
	gÊag
 = 
åue
;

94 
	gåy
{

95 
	gÊag
){

96 
VŸe
 
	gv
 = 
nuŒ
;

97 
	g≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

98 
	gLOG
.
öfo
("GoögÅÿˇŒÜódîÉÀ˘i⁄ágaö: " + 
i
);

99 
	gv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

101 i‡(
	gv
 =
nuŒ
){

102 
As£π
.
Áû
("Thªad " + 
i
 + " gotáÇull vote");

109 
	g≥î
.
£tCuºítVŸe
(
v
);

111 
	gLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

114 
	gi
) {

116 
LOG
.
öfo
("FirstÖeer, doÇothing, just join");

117 if(
	gföish0
.
åyAcquúe
(1000, 
java
.
utû
.
c⁄cuºít
.
TimeUnô
.
MILLISECONDS
)){

119 
	gLOG
.
öfo
("Setting flagÅo false");

120 
	gÊag
 = 
Ál£
;

124 
LOG
.
öfo
("SecondÉntering case");

125 if(
	ground
[1] != 0){

126 
föish0
.
ªÀa£
();

127 
	gÊag
 = 
Ál£
;

129 
	gföish3
.
acquúe
();

130 
	g°¨t0
.
ªÀa£
();

132 
	gLOG
.
öfo
("Second is goingÅo start secondÑound");

133 
	ground
[1]++;

136 
LOG
.
öfo
("ThirdÖeer, shutting it down");

137 
	gQu‹umBa£
.
shutdown
(
≥î
);

138 
	gÊag
 = 
Ál£
;

139 
	ground
[2] = 1;

140 
	gföish3
.
ªÀa£
();

141 
	gLOG
.
öfo
("ThirdÜeaving");

145 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

146 
	ge
.
¥ötSèckTø˚
();

152 @
Te°


153 
public
 
	$ã°LENewEpoch
(Ë
throws
 
Ex˚±i⁄
 {

155 
Fa°LódîEÀ˘i⁄
 
À
[] = 
√w
 Fa°LódîEÀ˘i⁄[
cou¡
];

157 
LOG
.
	`öfo
("Te°LE: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

158 
i
 = 0; i < 
cou¡
; i++) {

159 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

160 
√w
 
	`Qu‹umSîvî
(
i
,

161 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

162 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

163 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

164 
p‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

167 
i
 = 1; i < 
À
.
Àngth
; i++) {

168 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdú[i], 
p‹t
[i], 3, i, 1000, 2, 2);

169 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

170 
LEThªad
 
thªad
 = 
√w
 
	`LEThªad
(
≥î
, 
i
);

171 
thªad
.
	`°¨t
();

172 
thªads
.
	`add
(
thªad
);

174 if(!
°¨t0
.
	`åyAcquúe
(4000, 
java
.
utû
.
c⁄cuºít
.
TimeUnô
.
MILLISECONDS
))

175 
As£π
.
	`Áû
("FirstÜeaderÉlection failed");

177 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[0],Åmpdú[0], 
p‹t
[0], 3, 0, 1000, 2, 2);

178 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

179 
LEThªad
 
thªad
 = 
√w
 
	`LEThªad
(
≥î
, 0);

180 
thªad
.
	`°¨t
();

181 
thªads
.
	`add
(
thªad
);

183 
LOG
.
	`öfo
("SèπedÅhªad†" + 
	`gëTe°Name
());

185 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

186 
thªads
.
	`gë
(
i
).
	`joö
(10000);

187 i‡(
thªads
.
	`gë
(
i
).
	`isAlive
()) {

188 
As£π
.
	`Áû
("Threads didn't join");

192 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEPredicateTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umCnxM™agî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

38 
public
 cœs†
	cFLEPªdiˇãTe°
 
exãnds
 
	mZKTe°Ca£
 {

40 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLEPªdiˇãTe°
.
˛ass
);

42 ˛as†
	cMockFLE
 
exãnds
 
	mFa°LódîEÀ˘i⁄
 {

43 
MockFLE
(
Qu‹umPìr
 
≥î
){

44 
su≥r
(
≥î
, 
√w
 
Qu‹umCnxM™agî
(peer));

47 
boﬁón
 
¥ediˇã
(
√wId
, 
√wZxid
, 
√wEpoch
, 
curId
, 
curZxid
, 
curEpoch
){

48  
	mthis
.
tŸÆOrdîPªdiˇã
(
√wId
, 
√wZxid
, 
√wEpoch
, 
curId
, 
curZxid
, 
curEpoch
);

53 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
;

55 @
Te°


56 
public
 
	$ã°Pªdiˇã
(Ë
throws
 
IOEx˚±i⁄
 {

58 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(3);

63 
i
 = 0; i < 3; i++) {

64 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

65 
√w
 
	`Qu‹umSîvî
(
i
,

66 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

67 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

73 
åy
{

74 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

75 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpDú
,ÅmpDir,

76 
P‹tAssignmít
.
	`unique
(), 3, 0, 1000, 2, 2);

78 
MockFLE
 
mock
 = 
√w
 
	`MockFLE
(
≥î
);

84 
As£π
.
	`as£πFÆ£
 (
mock
.
	`¥ediˇã
(4L, 0L, 0L, 3L, 0L, 2L));

89 
As£π
.
	`as£πTrue
 (
mock
.
	`¥ediˇã
(0L, 0L, 1L, 1L, 0L, 0L));

94 
As£π
.
	`as£πTrue
(
mock
.
	`¥ediˇã
(0L, 1L, 0L, 1L, 0L, 0L));

99 
As£π
.
	`as£πTrue
(
mock
.
	`¥ediˇã
(1L, 1L, 0L, 0L, 1L, 0L));

100 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

101 
LOG
.
	`îr‹
("Ex˚±i⁄ whûê¸ótög qu‹umÖìr", 
e
);

102 
As£π
.
	`Áû
("Exception while creating quorumÖeer");

104 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLERestartTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gSem≠h‹e
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

43 
public
 cœs†
	cFLERe°¨tTe°
 
exãnds
 
	mZKTe°Ca£
 {

44 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLETe°
.
˛ass
);

46 ˛as†
	cTe°VŸe
 {

47 
Te°VŸe
(
id
, 
Àadî
) {

48 
	mthis
.
	mÀadî
 = 
Àadî
;

51 
	mÀadî
;

54 
cou¡VŸes
(
HashSë
<
Te°VŸe
> 
hs
, 
id
) {

55 
	gcou¡î
 = 0;

56 
Te°VŸe
 
	gv
 : 
hs
){

57 if(
v
.
Àadî
 =
id
Ë
cou¡î
++;

60  
	gcou¡î
;

63 
	gcou¡
;

66 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
;

67 
	gAºayLi°
<
	gFLERe°¨tThªad
> 
	gª°¨tThªads
;

68 
	gHashM≠
<
	gI¡egî
, 
	gHashSë
<
	gTe°VŸe
> > 
	gvŸeM≠
;

69 
Fûe
 
	gtmpdú
[];

70 
	gp‹t
[];

71 
	gsuc˚ssCou¡
;

72 
Sem≠h‹e
 
	gföish
;

74 vﬁ©ûê
VŸe
 
	gvŸes
[];

75 vﬁ©ûê
boﬁón
 
	gÀadîDõs
;

76 vﬁ©ûê
	gÀadî
 = -1;

78 
R™dom
 
	gønd
 = 
√w
 Random();

80 @
Bef‹e


81 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

82 
cou¡
 = 3;

84 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

85 
ª°¨tThªads
 = 
√w
 
AºayLi°
<
FLERe°¨tThªad
>(
cou¡
);

86 
vŸeM≠
 = 
√w
 
HashM≠
<
I¡egî
, 
HashSë
<
Te°VŸe
> >();

87 
vŸes
 = 
√w
 
VŸe
[
cou¡
];

88 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

89 
p‹t
 = 
√w
 [
cou¡
];

90 
suc˚ssCou¡
 = 0;

91 
föish
 = 
√w
 
	`Sem≠h‹e
(0);

92 
	}
}

94 @
A·î


95 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

96 
i
 = 0; i < 
ª°¨tThªads
.
	`size
(); i++) {

97 ((
Fa°LódîEÀ˘i⁄
Ë
ª°¨tThªads
.
	`gë
(
i
).
≥î
.
	`gëEÀ˘i⁄Alg
()).
	`shutdown
();

99 
	}
}

101 ˛as†
	cFLERe°¨tThªad
 
exãnds
 
	gThªad
 {

102 
	gi
;

103 
Qu‹umPìr
 
	g≥î
;

104 
	g≥îRound
 = 0;

106 
FLERe°¨tThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

107 
	gthis
.
	gi
 = 
i
;

108 
	gthis
.
	g≥î
 = 
≥î
;

109 
	gLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

111 
public
 
run
() {

112 
	gåy
 {

113 
VŸe
 
	gv
 = 
nuŒ
;

114 
	gåue
) {

115 
	g≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

116 
	gLOG
.
öfo
("GoingÅo callÜeaderÉlectionágain.");

117 
	gv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

118 if(
	gv
 =
nuŒ
){

119 
LOG
.
öfo
("Thªad " + 
i
 + " gotáÇull vote");

127 
	g≥î
.
£tCuºítVŸe
(
v
);

129 
	gLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

132 
	gi
){

134 if(
≥îRound
 == 0){

135 
LOG
.
öfo
("FirstÖeer, shutting it down");

136 
	gQu‹umBa£
.
shutdown
(
≥î
);

137 ((
	gFa°LódîEÀ˘i⁄
Ë
	gª°¨tThªads
.
gë
(
i
).
	g≥î
.
gëEÀ˘i⁄Alg
()).
shutdown
();

139 
	g≥î
 = 
√w
 
Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdú[i], 
p‹t
[i], 3, i, 1000, 2, 2);

140 
	g≥î
.
°¨tLódîEÀ˘i⁄
();

141 
	g≥îRound
++;

143 
	gföish
.
ªÀa£
(2);

149 
LOG
.
öfo
("SecondÉntering case");

150 
	gföish
.
acquúe
();

152 
	gLOG
.
öfo
("Release");

156 
LOG
.
öfo
("FirstÖeer, doÇothing, just join");

157 
	gföish
.
acquúe
();

159 
	gLOG
.
öfo
("Release");

164 } 
ˇtch
 (
Ex˚±i⁄
 
e
){

165 
	ge
.
¥ötSèckTø˚
();

171 @
Te°


172 
public
 
	$ã°LERe°¨t
(Ë
throws
 
Ex˚±i⁄
 {

174 
Fa°LódîEÀ˘i⁄
 
À
[] = 
√w
 Fa°LódîEÀ˘i⁄[
cou¡
];

175 
ÀadîDõs
 = 
åue
;

176 
boﬁón
 
ÆlowO√BadLódî
 = 
ÀadîDõs
;

178 
LOG
.
	`öfo
("Te°LE: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

179 
i
 = 0; i < 
cou¡
; i++) {

180 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

181 
√w
 
	`Qu‹umSîvî
(
i
,

182 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

183 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

184 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

185 
p‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

188 
i
 = 0; i < 
cou¡
; i++) {

189 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdú[i], 
p‹t
[i], 3, i, 1000, 2, 2);

190 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

191 
FLERe°¨tThªad
 
thªad
 = 
√w
 
	`FLERe°¨tThªad
(
≥î
, 
i
);

192 
thªad
.
	`°¨t
();

193 
ª°¨tThªads
.
	`add
(
thªad
);

195 
LOG
.
	`öfo
("SèπedÅhªad†" + 
	`gëTe°Name
());

196 
i
 = 0; i < 
ª°¨tThªads
.
	`size
(); i++) {

197 
ª°¨tThªads
.
	`gë
(
i
).
	`joö
(10000);

198 i‡(
ª°¨tThªads
.
	`gë
(
i
).
	`isAlive
()) {

199 
As£π
.
	`Áû
("Threads didn't join");

203 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLETest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

42 
public
 cœs†
	cFLETe°
 
exãnds
 
	mZKTe°Ca£
 {

43 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLETe°
.
˛ass
);

44 
¥iv©e
 
	mFLETe°
.
LEThªad
 
	mÀThªad
;

46 ˛as†
	cTe°VŸe
 {

47 
Te°VŸe
(
id
, 
Àadî
) {

48 
	mthis
.
	mÀadî
 = 
Àadî
;

51 
	mÀadî
;

54 
cou¡VŸes
(
HashSë
<
Te°VŸe
> 
hs
, 
id
) {

55 
	gcou¡î
 = 0;

56 
Te°VŸe
 
	gv
 : 
hs
){

57 if(
v
.
Àadî
 =
id
Ë
cou¡î
++;

60  
	gcou¡î
;

63 
	gcou¡
;

64 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
;

65 
	gAºayLi°
<
	gLEThªad
> 
	gthªads
;

66 
	gHashM≠
<
	gI¡egî
, 
	gHashSë
<
	gTe°VŸe
> > 
	gvŸeM≠
;

67 
Fûe
 
	gtmpdú
[];

68 
	gp‹t
[];

69 
	gsuc˚ssCou¡
;

70 
Obje˘
 
	gföÆObj
;

72 vﬁ©ûê
VŸe
 
	gvŸes
[];

73 vﬁ©ûê
boﬁón
 
	gÀadîDõs
;

74 vﬁ©ûê
	gÀadî
 = -1;

76 
R™dom
 
	gønd
 = 
√w
 Random();

78 @
Bef‹e


79 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

80 
cou¡
 = 7;

82 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

83 
thªads
 = 
√w
 
AºayLi°
<
LEThªad
>(
cou¡
);

84 
vŸeM≠
 = 
√w
 
HashM≠
<
I¡egî
, 
HashSë
<
Te°VŸe
> >();

85 
vŸes
 = 
√w
 
VŸe
[
cou¡
];

86 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

87 
p‹t
 = 
√w
 [
cou¡
];

88 
suc˚ssCou¡
 = 0;

89 
föÆObj
 = 
√w
 
	`Obje˘
();

90 
	}
}

92 @
A·î


93 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

94 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

95 
ÀThªad
 = 
thªads
.
	`gë
(
i
);

96 
Qu‹umBa£
.
	`shutdown
(
ÀThªad
.
≥î
);

98 
	}
}

100 ˛as†
	cLEThªad
 
exãnds
 
	gThªad
 {

101 
	gi
;

102 
Qu‹umPìr
 
	g≥î
;

105 
LEThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

106 
	gthis
.
	gi
 = 
i
;

107 
	gthis
.
	g≥î
 = 
≥î
;

108 
	gLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

110 
public
 
run
() {

111 
	gåy
 {

112 
VŸe
 
	gv
 = 
nuŒ
;

113 
	gåue
) {

114 
	g≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

115 
	gLOG
.
öfo
("GoingÅo callÜeaderÉlectionágain.");

116 
	gv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

117 if(
	gv
 =
nuŒ
){

118 
LOG
.
öfo
("Thªad " + 
i
 + " gotáÇull vote");

126 
	g≥î
.
£tCuºítVŸe
(
v
);

128 
	gLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

129 
	gvŸes
[
i
] = 
v
;

134 
	glc
 = (Ë((
Fa°LódîEÀ˘i⁄
Ë
≥î
.
gëEÀ˘i⁄Alg
()).
gëLogiˇlClock
();

136 i‡(
	gv
.
gëId
(Ë=
i
) {

142 
LOG
.
öfo
("I'mÅhêÀadî: " + 
i
);

143 
synchr⁄ized
(
FLETe°
.
this
) {

144 i‡(
	gÀadîDõs
) {

145 
	gLOG
.
öfo
("Lódî " + 
i
 + " dying");

146 
	gÀadîDõs
 = 
Ál£
;

147 ((
	gFa°LódîEÀ˘i⁄
Ë
	g≥î
.
gëEÀ˘i⁄Alg
()).
shutdown
();

148 
	gÀadî
 = -1;

149 
	gLOG
.
öfo
("Lódî " + 
i
 + " dead");

152 
	gFLETe°
.
	gthis
.
nŸifyAŒ
();

157 
synchr⁄ized
(
vŸeM≠
){

158 if(
	gvŸeM≠
.
gë
(
lc
Ë=
nuŒ
)

159 
vŸeM≠
.
put
(
lc
, 
√w
 
HashSë
<
Te°VŸe
>());

160 
	gHashSë
<
	gTe°VŸe
> 
	ghs
 = 
vŸeM≠
.
gë
(
lc
);

161 
	ghs
.
add
(
√w
 
Te°VŸe
(
i
, 
v
.
gëId
()));

163 if(
cou¡VŸes
(
hs
, 
v
.
gëId
()Ë> (
	gcou¡
/2)){

164 
	gÀadî
 = 
i
;

165 
	gLOG
.
öfo
("GŸ maj‹ôy: " + 
i
);

167 
	gvŸeM≠
.
waô
(3000);

168 
	gLOG
.
öfo
("NŸifõd o∏expúed: " + 
i
);

169 
	ghs
 = 
vŸeM≠
.
gë
(
lc
);

170 if(
cou¡VŸes
(
hs
, 
v
.
gëId
()Ë> (
	gcou¡
/2)){

171 
	gÀadî
 = 
i
;

172 
	gLOG
.
öfo
("GŸ maj‹ôy: " + 
i
);

178 
	gFLETe°
.
	gthis
.
nŸifyAŒ
();

180 if(
	gÀadî
 =
i
){

181 
synchr⁄ized
(
föÆObj
){

182 
suc˚ssCou¡
++;

183 if(
	gsuc˚ssCou¡
 > (
	gcou¡
/2)Ë
	gföÆObj
.
nŸify
();

202 
	gLOG
.
öfo
("Logiˇ»˛ock " + ((
Fa°LódîEÀ˘i⁄
Ë
≥î
.
gëEÀ˘i⁄Alg
()).
gëLogiˇlClock
());

203 
synchr⁄ized
(
vŸeM≠
){

204 
	gLOG
.
öfo
("VŸög o¿" + 
vŸes
[
i
].
gëId
(Ë+ ",Ñound " + ((
Fa°LódîEÀ˘i⁄
Ë
≥î
.
gëEÀ˘i⁄Alg
()).
gëLogiˇlClock
());

205 if(
	gvŸeM≠
.
gë
(
lc
Ë=
nuŒ
)

206 
vŸeM≠
.
put
(
lc
, 
√w
 
HashSë
<
Te°VŸe
>());

207 
	gHashSë
<
	gTe°VŸe
> 
	ghs
 = 
vŸeM≠
.
gë
(
lc
);

208 
	ghs
.
add
(
√w
 
Te°VŸe
(
i
, 
vŸes
[i].
gëId
()));

209 if(
cou¡VŸes
(
hs
, 
vŸes
[
i
].
gëId
()Ë> (
	gcou¡
/2)){

210 
	gLOG
.
öfo
("Logiˇ»˛ock: " + 
lc
 + ", " + 
vŸes
[
i
].
gëId
());

211 
	gvŸeM≠
.
nŸify
();

219 
synchr⁄ized
(
FLETe°
.
this
){

220 i‡(
	gÀadî
 !
vŸes
[
i
].
gëId
()Ë
FLETe°
.
this
.
waô
(3000);

222 
	gLOG
.
öfo
("ThêÀadî: " + 
Àadî
 + "ánd my vŸê" + 
vŸes
[
i
].
gëId
());

223 
synchr⁄ized
(
vŸeM≠
){

224 i‡(
	gÀadî
 =
vŸes
[
i
].
gëId
()) {

225 
synchr⁄ized
(
föÆObj
){

226 
suc˚ssCou¡
++;

227 if(
	gsuc˚ssCou¡
 > (
	gcou¡
/2)Ë
	gföÆObj
.
nŸify
();

231 
	gHashSë
<
	gTe°VŸe
> 
	ghs
 = 
vŸeM≠
.
gë
(
lc
);

232 
Te°VŸe
 
	gtoRemove
 = 
nuŒ
;

233 
Te°VŸe
 
	gtv
 : 
hs
){

234 if(
v
.
gëId
(Ë=
i
){

235 
toRemove
 = 
tv
;

239 
	ghs
.
ªmove
(
toRemove
);

247 
	gThªad
.
¶ìp
(
ønd
.
√xtI¡
(500));

248 
	g≥î
.
£tCuºítVŸe
(
√w
 
VŸe
(
≥î
.
gëId
(), 0));

250 
	gLOG
.
debug
("Thªad " + 
i
 + " vŸe†" + 
v
);

251 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

252 
	ge
.
¥ötSèckTø˚
();

257 @
Te°


258 
public
 
	$ã°LE
(Ë
throws
 
Ex˚±i⁄
 {

260 
Fa°LódîEÀ˘i⁄
 
À
[] = 
√w
 Fa°LódîEÀ˘i⁄[
cou¡
];

261 
ÀadîDõs
 = 
åue
;

262 
boﬁón
 
ÆlowO√BadLódî
 = 
ÀadîDõs
;

264 
LOG
.
	`öfo
("Te°LE: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

265 
i
 = 0; i < 
cou¡
; i++) {

266 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

267 
√w
 
	`Qu‹umSîvî
(
i
,

268 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

269 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

270 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

271 
p‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

274 
i
 = 0; i < 
À
.
Àngth
; i++) {

275 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdir[i],

276 
p‹t
[
i
], 3, i, 1000, 2, 2);

277 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

278 
LEThªad
 
thªad
 = 
√w
 
	`LEThªad
(
≥î
, 
i
);

279 
thªad
.
	`°¨t
();

280 
thªads
.
	`add
(
thªad
);

282 
LOG
.
	`öfo
("SèπedÅhªad†" + 
	`gëTe°Name
());

285 
waôCou¡î
 = 0;

286 
	`synchr⁄ized
(
föÆObj
){

287 (
suc˚ssCou¡
 <
cou¡
/2Ë&& (
waôCou¡î
 < 50)){

288 
föÆObj
.
	`waô
(2000);

289 
waôCou¡î
++;

299 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

300 i‡(
thªads
.
	`gë
(
i
).
	`isAlive
()) {

301 
LOG
.
	`öfo
("Thªad†didn'àjoö: " + 
i
);

308 if(
suc˚ssCou¡
 <
cou¡
/2){

309 
As£π
.
	`Áû
("FewerÅhanáá majority has joined");

312 if(
thªads
.
	`gë
((Ë
Àadî
).
	`isAlive
()){

313 
As£π
.
	`Áû
("Lódî ha¢'àjoöed: " + 
Àadî
);

315 
	}
}

320 ˛as†
	cVîifySèã
 
exãnds
 
	gThªad
 {

321 vﬁ©ûê
¥iv©e
 
boﬁón
 
	gsuc˚ss
 = 
Ál£
;

322 
Qu‹umPìr
 
	g≥î
;

323 
public
 
VîifySèã
(
Qu‹umPìr
 
≥î
) {

324 
	gthis
.
	g≥î
 = 
≥î
;

326 
public
 
run
() {

327 
£tName
("VîifySèã-" + 
≥î
.
gëId
());

328 
	gåue
) {

329 if(
	g≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
FOLLOWING
) {

330 
LOG
.
öfo
("Iám following");

331 
	gsuc˚ss
 = 
åue
;

333 } i‡(
	g≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
LEADING
) {

334 
LOG
.
öfo
("IámÜeading");

335 
	gsuc˚ss
 = 
Ál£
;

338 
	gåy
 {

339 
	gThªad
.
¶ìp
(250);

340 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

341 
	gLOG
.
w¨n
("SÀï faûed ", 
e
);

345 
public
 
boﬁón
 
isSuc˚ss
() {

346  
	gsuc˚ss
;

354 @
Te°


355 
public
 
	$ã°Joö
(Ë
throws
 
Ex˚±i⁄
 {

356 
sid
;

357 
Qu‹umPìr
 
≥î
;

358 
waôTime
 = 10 * 1000;

359 
AºayLi°
<
Qu‹umPìr
> 
≥îLi°
 = 
√w
 ArrayList<QuorumPeer>();

360 
sid
 = 0; sid < 3; sid++) {

361 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
sid
),

362 
√w
 
	`Qu‹umSîvî
(
sid
,

363 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

364 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

365 
tmpdú
[
sid
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

366 
p‹t
[
sid
] = 
P‹tAssignmít
.
	`unique
();

369 
sid
 = 0; sid < 2; sid++) {

370 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
sid
],Åmpdir[sid],

371 
p‹t
[
sid
], 3, sid, 2000, 2, 2);

372 
LOG
.
	`öfo
("SèπögÖì∏" + 
≥î
.
	`gëId
());

373 
≥î
.
	`°¨t
();

374 
≥îLi°
.
	`add
(
sid
, 
≥î
);

376 
≥î
 = 
≥îLi°
.
	`gë
(0);

377 
VîifySèã
 
v1
 = 
√w
 
	`VîifySèã
(
≥îLi°
.
	`gë
(0));

378 
v1
.
	`°¨t
();

379 
v1
.
	`joö
(
waôTime
);

380 
As£π
.
	`as£πFÆ£
("UnableÅo form cluster in " +

381 
waôTime
 + " ms",

382 !
v1
.
	`isSuc˚ss
());

384 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
sid
],Åmpdir[sid],

385 
p‹t
[
sid
], 3, sid, 2000, 2, 2);

386 
LOG
.
	`öfo
("SèπögÖì∏" + 
≥î
.
	`gëId
());

387 
≥î
.
	`°¨t
();

388 
≥îLi°
.
	`add
(
sid
, 
≥î
);

389 
v1
 = 
√w
 
	`VîifySèã
(
≥î
);

390 
v1
.
	`°¨t
();

391 
v1
.
	`joö
(
waôTime
);

392 i‡(
v1
.
	`isAlive
()) {

393 
As£π
.
	`Áû
("Pì∏" + 
≥î
.
	`gëId
() + " failedÅo joinÅhe cluster " +

394 "wôhö " + 
waôTime
 + " ms");

395 } i‡(!
v1
.
	`isSuc˚ss
()) {

396 
As£π
.
	`Áû
("Inc‹ª˘ LEADING sèã f‹Öì∏" + 
≥î
.
	`gëId
());

399 
id
 = 0; id < 3; id++) {

400 
≥î
 = 
≥îLi°
.
	`gë
(
id
);

401 i‡(
≥î
 !
nuŒ
) {

402 
≥î
.
	`shutdown
();

405 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLETestUtils.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

31 
public
 cœs†
	cFLETe°Utûs
 {

32 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLETe°Utûs
.
˛ass
);

39 ˛as†
	cLEThªad
 
exãnds
 
	mThªad
 {

40 
¥iv©e
 
	mi
;

41 
¥iv©e
 
Qu‹umPìr
 
	m≥î
;

43 
LEThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

44 
	mthis
.
	mi
 = 
i
;

45 
	mthis
.
	m≥î
 = 
≥î
;

46 
	mLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

50 
public
 
run
(){

51 
	måy
{

52 
VŸe
 
	mv
 = 
nuŒ
;

53 
	m≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

54 
	mLOG
.
öfo
("GoögÅÿˇŒÜódîÉÀ˘i⁄: " + 
i
);

55 
	mv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

57 i‡(
	mv
 =
nuŒ
){

58 
As£π
.
Áû
("Thªad " + 
i
 + " gotáÇull vote");

65 
	m≥î
.
£tCuºítVŸe
(
v
);

67 
	mLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

69 
	mAs£π
.
as£πTrue
("Sèã i†nŸÜódög.", 
≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
LEADING
);

70 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

71 
	me
.
¥ötSèckTø˚
();

73 
	mLOG
.
öfo
("Joining");

81 
ByãBuf„r
 
	$¸óãMsg
(
°©e
, 
Àadî
, 
zxid
, 
ïoch
){

82 
byã
 
ªque°Byãs
[] = 
√w
 byte[28];

83 
ByãBuf„r
 
ªque°Buf„r
 = ByãBuf„r.
	`wøp
(
ªque°Byãs
);

89 
ªque°Buf„r
.
	`˛ór
();

90 
ªque°Buf„r
.
	`putI¡
(
°©e
);

91 
ªque°Buf„r
.
	`putL⁄g
(
Àadî
);

92 
ªque°Buf„r
.
	`putL⁄g
(
zxid
);

93 
ªque°Buf„r
.
	`putL⁄g
(
ïoch
);

95  
ªque°Buf„r
;

96 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEZeroWeightTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gFa°LódîEÀ˘i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umHõørchiˇl
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

43 
public
 cœs†
	cFLEZîoWeightTe°
 
exãnds
 
	mZKTe°Ca£
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
HõørchiˇlQu‹umTe°
.
˛ass
);

46 
Pr›îtõs
 
	mqp
;

48 
	mcou¡
;

49 
	mHashM≠
<
	mL⁄g
,
	mQu‹umSîvî
> 
	m≥îs
;

50 
	mAºayLi°
<
	mLEThªad
> 
	mthªads
;

51 
Fûe
 
	mtmpdú
[];

52 
	mp‹t
[];

53 
Obje˘
 
	mföÆObj
;

55 vﬁ©ûê
VŸe
 
	mvŸes
[];

56 vﬁ©ûê
boﬁón
 
	mÀadîDõs
;

57 vﬁ©ûê
	mÀadî
 = -1;

58 
R™dom
 
	mønd
 = 
√w
 Random();

61 @
Bef‹e


62 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

63 
cou¡
 = 9;

65 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

66 
thªads
 = 
√w
 
AºayLi°
<
LEThªad
>(
cou¡
);

67 
vŸes
 = 
√w
 
VŸe
[
cou¡
];

68 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

69 
p‹t
 = 
√w
 [
cou¡
];

70 
föÆObj
 = 
√w
 
	`Obje˘
();

72 
Såög
 
c⁄fig
 = "group.1=0:1:2\n" +

85 
ByãAºayI≈utSåóm
 
is
 = 
√w
 
	`ByãAºayI≈utSåóm
(
c⁄fig
.
	`gëByãs
());

86 
this
.
qp
 = 
√w
 
	`Pr›îtõs
();

87 
qp
.
	`lﬂd
(
is
);

90 @
A·î


91 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

92 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

93 
LEThªad
 
ÀThªad
 = 
thªads
.
	`gë
(
i
);

97 
Qu‹umBa£
.
	`shutdown
(
ÀThªad
.
≥î
);

99 
	}
}

101 ˛as†
	cLEThªad
 
exãnds
 
	gThªad
 {

102 
	gi
;

103 
Qu‹umPìr
 
	g≥î
;

104 
boﬁón
 
	gÁû
;

106 
LEThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

107 
	gthis
.
	gi
 = 
i
;

108 
	gthis
.
	g≥î
 = 
≥î
;

109 
	gLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

112 
public
 
run
() {

113 
	gåy
 {

114 
VŸe
 
	gv
 = 
nuŒ
;

115 
	gÁû
 = 
Ál£
;

116 
	gåue
){

119 
	g≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

120 
	gLOG
.
öfo
("GoingÅo callÜeaderÉlection.");

121 
	gv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

122 if(
	gv
 =
nuŒ
){

123 
LOG
.
öfo
("Thªad " + 
i
 + " gotáÇull vote");

131 
	g≥î
.
£tCuºítVŸe
(
v
);

133 
	gLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

134 
	gvŸes
[
i
] = 
v
;

136 if((
	g≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
LEADING
) &&

137 (
≥î
.
gëId
(Ë> 2)Ë
Áû
 = 
åue
;

139 if((
	g≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
FOLLOWING
) ||

140 (
≥î
.
gëPìrSèã
(Ë=
SîvîSèã
.
LEADING
)) ;

142 
	gLOG
.
debug
("Thªad " + 
i
 + " vŸe†" + 
v
);

143 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

144 
	ge
.
¥ötSèckTø˚
();

149 @
Te°


150 
public
 
	$ã°ZîoWeightQu‹um
(Ë
throws
 
Ex˚±i⁄
 {

151 
Fa°LódîEÀ˘i⁄
 
À
[] = 
√w
 Fa°LódîEÀ˘i⁄[
cou¡
];

153 
LOG
.
	`öfo
("Te°ZîoWeightQu‹um: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

154 
i
 = 0; i < 
cou¡
; i++) {

155 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

156 
√w
 
	`Qu‹umSîvî
(
i
,

157 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
()),

158 
√w
 
	`I√tSockëAddªss
(
P‹tAssignmít
.
	`unique
())));

159 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

160 
p‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

163 
i
 = 0; i < 
À
.
Àngth
; i++) {

164 
Qu‹umHõørchiˇl
 
hq
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

165 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdú[i], 
p‹t
[i], 3, i, 1000, 2, 2, 
hq
);

166 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

167 
LEThªad
 
thªad
 = 
√w
 
	`LEThªad
(
≥î
, 
i
);

168 
thªad
.
	`°¨t
();

169 
thªads
.
	`add
(
thªad
);

171 
LOG
.
	`öfo
("SèπedÅhªad†" + 
	`gëTe°Name
());

173 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

174 
thªads
.
	`gë
(
i
).
	`joö
(15000);

175 i‡(
thªads
.
	`gë
(
i
).
	`isAlive
()) {

176 
As£π
.
	`Áû
("Threads didn't join");

178 if(
thªads
.
	`gë
(
i
).
Áû
)

179 
As£π
.
	`Áû
("Elected zero-weight server");

182 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FollowerResyncConcurrencyTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πAºayEquÆs
;

22 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸNuŒ
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNuŒ
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gÁû
;

28 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gSem≠h‹e
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

34 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeoutEx˚±i⁄
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicBoﬁón
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCou¡downW©chî
;

50 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

51 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

54 
public
 cœs†
	cFﬁlowîResyncC⁄cuºícyTe°
 
exãnds
 
	mZKTe°Ca£
 {

55 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
FﬁlowîResyncC⁄cuºícyTe°
.
˛ass
);

56 
public
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 
Clõ¡Te°
.
CONNECTION_TIMEOUT
;

58 
¥iv©e
 vﬁ©ûê
	mcou¡î
 = 0;

59 
¥iv©e
 vﬁ©ûê
	mîr‹s
 = 0;

72 @
Te°


73 
public
 
	$ã°LaggögFﬁlowîResyncsUndîNewEpoch
(Ë
throws
 
Ex˚±i⁄
 {

74 
Cou¡downW©chî
 
w©chî1
 = 
√w
 
	`Cou¡downW©chî
();

75 
Cou¡downW©chî
 
w©chî2
 = 
√w
 
	`Cou¡downW©chî
();

76 
Cou¡downW©chî
 
w©chî3
 = 
√w
 
	`Cou¡downW©chî
();

78 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

79 
qu
.
	`shutdownAŒ
();

81 
qu
.
	`°¨t
(1);

82 
qu
.
	`°¨t
(2);

83 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

84 + 
qu
.
	`gëPìr
(1).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

85 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

86 + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

88 
ZooKì≥r
 
zk1
 =

89 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(1).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî1
);

90 
LOG
.
	`öfo
("zk1 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk1
.
	`gëSessi⁄Id
()));

92 
föÆ
 
Såög
 
ªsyncP©h
 = "/resyncundernewepoch";

93 
zk1
.
	`¸óã
(
ªsyncP©h
, 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

94 
zk1
.
	`˛o£
();

96 
qu
.
	`shutdown
(1);

97 
qu
.
	`shutdown
(2);

98 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"

99 + 
qu
.
	`gëPìr
(1).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

100 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"

101 + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

103 
qu
.
	`°¨t
(1);

104 
qu
.
	`°¨t
(2);

105 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

106 + 
qu
.
	`gëPìr
(1).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

107 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

108 + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

110 
qu
.
	`°¨t
(3);

111 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

112 + 
qu
.
	`gëPìr
(3).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

114 
zk1
 = 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(1).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî1
);

115 
LOG
.
	`öfo
("zk1 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk1
.
	`gëSessi⁄Id
()));

117 
	`as£πNŸNuŒ
("zk1 ha†d©a", 
zk1
.
	`exi°s
(
ªsyncP©h
, 
Ál£
));

119 
föÆ
 
ZooKì≥r
 
zk2
 =

120 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(2).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî2
);

121 
LOG
.
	`öfo
("zk2 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk2
.
	`gëSessi⁄Id
()));

123 
	`as£πNŸNuŒ
("zk2 ha†d©a", 
zk2
.
	`exi°s
(
ªsyncP©h
, 
Ál£
));

125 
föÆ
 
ZooKì≥r
 
zk3
 =

126 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(3).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî3
);

127 
LOG
.
	`öfo
("zk3 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk3
.
	`gëSessi⁄Id
()));

129 
	`as£πNŸNuŒ
("zk3 ha†d©a", 
zk3
.
	`exi°s
(
ªsyncP©h
, 
Ál£
));

131 
zk1
.
	`˛o£
();

132 
zk2
.
	`˛o£
();

133 
zk3
.
	`˛o£
();

135 
qu
.
	`shutdownAŒ
();

151 @
Te°


152 
public
 
	$ã°ResyncByS«pThíDiffA·îFﬁlowîCøshes
()

153 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
ThrowabÀ


155 
föÆ
 
Sem≠h‹e
 
£m
 = 
√w
 
	`Sem≠h‹e
(0);

157 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

158 
qu
.
	`°¨tAŒ
();

159 
Cou¡downW©chî
 
w©chî1
 = 
√w
 
	`Cou¡downW©chî
();

160 
Cou¡downW©chî
 
w©chî2
 = 
√w
 
	`Cou¡downW©chî
();

161 
Cou¡downW©chî
 
w©chî3
 = 
√w
 
	`Cou¡downW©chî
();

163 
ödex
 = 1;

164 
qu
.
	`gëPìr
(
ödex
).
≥î
.
Àadî
 =
nuŒ
) {

165 
ödex
++;

168 
Lódî
 
Àadî
 = 
qu
.
	`gëPìr
(
ödex
).
≥î
.leader;

169 
	`as£πNŸNuŒ
(
Àadî
);

172 
ödex
 = (index == 1) ? 2 : 1;

173 
LOG
.
	`öfo
("C⁄√˘ögÅÿfﬁlowî:" + 
ödex
);

175 
qu
.
	`shutdown
(
ödex
);

177 
föÆ
 
ZooKì≥r
 
zk3
 =

178 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(3).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî3
);

179 
LOG
.
	`öfo
("zk3 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk3
.
	`gëSessi⁄Id
()));

181 
zk3
.
	`¸óã
("/myb¨", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
);

183 
qu
.
	`ª°¨t
(
ödex
);

184 
föÆ
 
ZooKì≥r
 
zk1
 =

185 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî1
);

186 
LOG
.
	`öfo
("zk1 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk1
.
	`gëSessi⁄Id
()));

188 
föÆ
 
ZooKì≥r
 
zk2
 =

189 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî2
);

190 
LOG
.
	`öfo
("zk2 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk2
.
	`gëSessi⁄Id
()));

192 
zk1
.
	`¸óã
("/fú°", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

193 
Thªad
 
myã°fooThªad
 = 
√w
 
	`Thªad
“ew 
	`Ru¬abÀ
() {

195 @
Ovîride


196 
public
 
	`run
() {

197 
i
 = 0; i < 3000; i++) {

198 
zk3
.
	`¸óã
("/myã°foo", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

200 @
Ovîride


201 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

202 
cou¡î
++;

203 i‡(
rc
 != 0) {

204 
îr‹s
++;

206 if(
cou¡î
 == 16200){

207 
£m
.
	`ªÀa£
();

210 }, 
nuŒ
);

211 if(
i
%10==0){

212 
åy
 {

213 
Thªad
.
	`¶ìp
(100);

214 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

223 
i
 = 0; i < 13000; i++) {

224 
zk3
.
	`¸óã
("/myb¨", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

226 @
Ovîride


227 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

228 
cou¡î
++;

229 i‡(
rc
 != 0) {

230 
îr‹s
++;

232 if(
cou¡î
 == 16200){

233 
£m
.
	`ªÀa£
();

236 }, 
nuŒ
);

238 if(
i
 == 5000){

239 
qu
.
	`shutdown
(
ödex
);

240 
LOG
.
	`öfo
("Shutting down s1");

242 if(
i
 == 12000){

244 
myã°fooThªad
.
	`°¨t
();

245 
qu
.
	`ª°¨t
(
ödex
);

246 
Thªad
.
	`¶ìp
(300);

247 
qu
.
	`shutdown
(
ödex
);

248 
Thªad
.
	`¶ìp
(300);

249 
qu
.
	`ª°¨t
(
ödex
);

250 
LOG
.
	`öfo
("Sëtög u∞£rvî: " + 
ödex
);

252 if((
i
 % 1000) == 0){

253 
Thªad
.
	`¶ìp
(1000);

256 if(
i
%50 == 0) {

257 
zk2
.
	`¸óã
("/√wbaz", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

258 @
Ovîride


259 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

260 
cou¡î
++;

261 i‡(
rc
 != 0) {

262 
îr‹s
++;

264 if(
cou¡î
 == 16200){

265 
£m
.
	`ªÀa£
();

268 }, 
nuŒ
);

273 if(!
£m
.
	`åyAcquúe
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
)) {

274 
LOG
.
	`w¨n
("DidÇotáquire semaphore fastÉnough");

276 
myã°fooThªad
.
	`joö
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

277 i‡(
myã°fooThªad
.
	`isAlive
()) {

278 
LOG
.
	`îr‹
("mytestfooThread is stillálive");

280 
Thªad
.
	`¶ìp
(1000);

282 
	`vîifySèã
(
qu
, 
ödex
, 
Àadî
);

284 
zk1
.
	`˛o£
();

285 
zk2
.
	`˛o£
();

286 
zk3
.
	`˛o£
();

288 
qu
.
	`shutdownAŒ
();

289 
	}
}

315 @
Te°


316 
public
 
	$ã°ResyncByDiffA·îFﬁlowîCøshes
()

317 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
ThrowabÀ


319 
föÆ
 
Sem≠h‹e
 
£m
 = 
√w
 
	`Sem≠h‹e
(0);

321 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

322 
qu
.
	`°¨tAŒ
();

323 
Cou¡downW©chî
 
w©chî1
 = 
√w
 
	`Cou¡downW©chî
();

324 
Cou¡downW©chî
 
w©chî2
 = 
√w
 
	`Cou¡downW©chî
();

325 
Cou¡downW©chî
 
w©chî3
 = 
√w
 
	`Cou¡downW©chî
();

327 
ödex
 = 1;

328 
qu
.
	`gëPìr
(
ödex
).
≥î
.
Àadî
 =
nuŒ
) {

329 
ödex
++;

332 
Lódî
 
Àadî
 = 
qu
.
	`gëPìr
(
ödex
).
≥î
.leader;

333 
	`as£πNŸNuŒ
(
Àadî
);

336 
ödex
 = (index == 1) ? 2 : 1;

337 
LOG
.
	`öfo
("C⁄√˘ögÅÿfﬁlowî:" + 
ödex
);

339 
föÆ
 
ZooKì≥r
 
zk1
 =

340 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî1
);

341 
LOG
.
	`öfo
("zk1 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk1
.
	`gëSessi⁄Id
()));

343 
föÆ
 
ZooKì≥r
 
zk2
 =

344 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî2
);

345 
LOG
.
	`öfo
("zk2 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk2
.
	`gëSessi⁄Id
()));

347 
föÆ
 
ZooKì≥r
 
zk3
 =

348 
	`¸óãClõ¡
(
qu
.
	`gëPìr
(3).
≥î
.
	`gëClõ¡P‹t
(), 
w©chî3
);

349 
LOG
.
	`öfo
("zk3 ha†£ssi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk3
.
	`gëSessi⁄Id
()));

351 
zk1
.
	`¸óã
("/fú°", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

352 
zk2
.
	`¸óã
("/myb¨", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
);

354 
föÆ
 
AtomicBoﬁón
 
runNow
 = 
√w
 
	`AtomicBoﬁón
(
Ál£
);

355 
Thªad
 
myã°fooThªad
 = 
√w
 
	`Thªad
“ew 
	`Ru¬abÀ
() {

356 @
Ovîride


357 
public
 
	`run
() {

358 
öSyncCou¡î
 = 0;

359 
öSyncCou¡î
 < 400) {

360 if(
runNow
.
	`gë
()) {

361 
zk3
.
	`¸óã
("/myã°foo", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

363 @
Ovîride


364 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

365 
cou¡î
++;

366 i‡(
rc
 != 0) {

367 
îr‹s
++;

369 if(
cou¡î
 > 7300){

370 
£m
.
	`ªÀa£
();

373 }, 
nuŒ
);

375 
åy
 {

376 
Thªad
.
	`¶ìp
(10);

377 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

379 
öSyncCou¡î
++;

381 
Thªad
.
	`yõld
();

388 
myã°fooThªad
.
	`°¨t
();

389 
i
 = 0; i < 5000; i++) {

390 
zk2
.
	`¸óã
("/myb¨", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

392 @
Ovîride


393 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

394 
cou¡î
++;

395 i‡(
rc
 != 0) {

396 
îr‹s
++;

398 if(
cou¡î
 > 7300){

399 
£m
.
	`ªÀa£
();

402 }, 
nuŒ
);

404 if(
i
 == 1000){

405 
qu
.
	`shutdown
(
ödex
);

406 
Thªad
.
	`¶ìp
(1100);

407 
LOG
.
	`öfo
("Shutting down s1");

409 if(
i
 == 1100 || i == 1150 || i == 1200) {

410 
Thªad
.
	`¶ìp
(1000);

413 if(
i
 == 1200){

414 
qu
.
	`°¨tThíShutdown
(
ödex
);

415 
runNow
.
	`£t
(
åue
);

416 
qu
.
	`ª°¨t
(
ödex
);

417 
LOG
.
	`öfo
("Sëtög u∞£rvî: " + 
ödex
);

420 if(
i
>=1000 && i%2== 0) {

421 
zk3
.
	`¸óã
("/√wbaz", 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
, 
√w
 
AsyncCÆlback
.
	`SåögCÆlback
() {

423 @
Ovîride


424 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
) {

425 
cou¡î
++;

426 i‡(
rc
 != 0) {

427 
îr‹s
++;

429 if(
cou¡î
 > 7300){

430 
£m
.
	`ªÀa£
();

433 }, 
nuŒ
);

435 if(
i
 == 1050 || i == 1100 || i == 1150) {

436 
Thªad
.
	`¶ìp
(1000);

441 if(!
£m
.
	`åyAcquúe
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
)) {

442 
LOG
.
	`w¨n
("DidÇotáquire semaphore fastÉnough");

444 
myã°fooThªad
.
	`joö
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

445 i‡(
myã°fooThªad
.
	`isAlive
()) {

446 
LOG
.
	`îr‹
("mytestfooThread is stillálive");

449 
Thªad
.
	`¶ìp
(1000);

452 
	`vîifySèã
(
qu
, 
ödex
, 
Àadî
);

454 
zk1
.
	`˛o£
();

455 
zk2
.
	`˛o£
();

456 
zk3
.
	`˛o£
();

458 
qu
.
	`shutdownAŒ
();

459 
	}
}

461 
¥iv©e
 
Disc⁄√˘abÀZooKì≥r
 
	$¸óãClõ¡
(
p‹t
,

462 
Cou¡downW©chî
 
w©chî
)

463 
throws
 
IOEx˚±i⁄
, 
TimeoutEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


465 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(

466 "127.0.0.1:" + 
p‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
w©chî
);

468 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

469  
zk
;

470 
	}
}

472 
¥iv©e
 
Te°abÀZooKì≥r
 
	$¸óãTe°abÀClõ¡
(
Såög
 
hp
)

473 
throws
 
IOEx˚±i⁄
, 
TimeoutEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


475 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

476  
	`¸óãTe°abÀClõ¡
(
w©chî
, 
hp
);

477 
	}
}

479 
¥iv©e
 
Te°abÀZooKì≥r
 
	$¸óãTe°abÀClõ¡
(

480 
Cou¡downW©chî
 
w©chî
, 
Såög
 
hp
)

481 
throws
 
IOEx˚±i⁄
, 
TimeoutEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


483 
Te°abÀZooKì≥r
 
zk
 = 
√w
 
	`Te°abÀZooKì≥r
(

484 
hp
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
w©chî
);

486 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

487  
zk
;

488 
	}
}

490 
¥iv©e
 
	$vîifySèã
(
Qu‹umUtû
 
qu
, 
ödex
, 
Lódî
 
Àadî
) {

491 
	`as£πTrue
("NŸ fﬁlowög", 
qu
.
	`gëPìr
(
ödex
).
≥î
.
fﬁlowî
 !
nuŒ
);

492 
ïochF
 = (
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZxid
() >> 32L);

493 
ïochL
 = (
Àadî
.
	`gëEpoch
() >> 32L);

494 
	`as£πTrue
("Zxid: " + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
() +

495 "Cuºíàïoch: " + 
ïochF
,ÉpochF =
ïochL
);

496 
ÀadîIndex
 = (
ödex
 == 1) ? 2 : 1;

497 
CﬁÀ˘i⁄
<
L⁄g
> 
£ssi⁄sRe°¨ãd
 = 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
().
	`gëSessi⁄s
();

498 
CﬁÀ˘i⁄
<
L⁄g
> 
£ssi⁄sNŸRe°¨ãd
 = 
qu
.
	`gëPìr
(
ÀadîIndex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
().
	`gëSessi⁄s
();

500 
L⁄g
 
l
 : 
£ssi⁄sRe°¨ãd
) {

501 
	`as£πTrue
("Should havêßmê£ào‡£ssi⁄†ö bŸh sîvîs, didÇŸÉx≥˘: " + 
l
, 
£ssi⁄sNŸRe°¨ãd
.
	`c⁄èös
(l));

503 
	`as£πEquÆs
("Should havêßmênumbî o‡£ssi⁄s", 
£ssi⁄sNŸRe°¨ãd
.
	`size
(), 
£ssi⁄sRe°¨ãd
.size());

504 
ZKD©aba£
 
ª°¨ãd
 = 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
();

505 
ZKD©aba£
 
˛ón
 = 
qu
.
	`gëPìr
(3).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
();

506 
ZKD©aba£
 
Àad
 = 
qu
.
	`gëPìr
(
ÀadîIndex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZKD©aba£
();

507 
L⁄g
 
l
 : 
£ssi⁄sRe°¨ãd
) {

508 
	`as£πTrue
("Should havêßmê£ào‡£ssi⁄†ö bŸh sîvîs, didÇŸÉx≥˘: " + 
l
, 
£ssi⁄sNŸRe°¨ãd
.
	`c⁄èös
(l));

509 
HashSë
 
ïhemîÆs
 = 
ª°¨ãd
.
	`gëEphemîÆs
(
l
);

510 
HashSë
 
˛ónEphemîÆs
 = 
˛ón
.
	`gëEphemîÆs
(
l
);

511 
Obje˘
 
o
 : 
˛ónEphemîÆs
) {

512 if(!
ïhemîÆs
.
	`c⁄èös
(
o
)) {

513 
LOG
.
	`öfo
("Re°¨ãd fﬁlowî d€¢'àc⁄èöÉphemîÆ " + 
o
);

516 
HashSë
 
ÀadEphemîÆs
 = 
Àad
.
	`gëEphemîÆs
(
l
);

517 
Obje˘
 
o
 : 
ÀadEphemîÆs
) {

518 if(!
˛ónEphemîÆs
.
	`c⁄èös
(
o
)) {

519 
LOG
.
	`öfo
("Fﬁlowî d€¢'àc⁄èöÉphemîÆ fromÜódî " + 
o
);

522 
	`as£πEquÆs
("Should havêßmênumbî o‡ïhemîÆ†ö bŸh fﬁlowîs", 
ïhemîÆs
.
	`size
(), 
˛ónEphemîÆs
.size());

523 
	`as£πEquÆs
("Lódî shouldÉquÆ fﬁlowî", 
Àad
.
	`gëEphemîÆs
(
l
).
	`size
(), 
˛ónEphemîÆs
.size());

525 
	}
}

530 @
Te°


531 
public
 
	$ã°FﬁlowîSídsLa°Zxid
(Ë
throws
 
Ex˚±i⁄
 {

532 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

533 
qu
.
	`°¨tAŒ
();

535 
ödex
 = 1;

536 
qu
.
	`gëPìr
(
ödex
).
≥î
.
fﬁlowî
 =
nuŒ
) {

537 
ödex
++;

539 
LOG
.
	`öfo
("C⁄√˘ögÅÿfﬁlowî:" + 
ödex
);

541 
Te°abÀZooKì≥r
 
zk
 =

542 
	`¸óãTe°abÀClõ¡
("loˇlho°:" + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
());

544 
	`as£πEquÆs
(0L, 
zk
.
	`ã°abÀLa°Zxid
());

545 
zk
.
	`exi°s
("/", 
Ál£
);

546 
lzxid
 = 
zk
.
	`ã°abÀLa°Zxid
();

547 
	`as£πTrue
("lzxid:" + 
lzxid
 + " > 0",Üzxid > 0);

548 
zk
.
	`˛o£
();

549 
	}
}

551 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

552 
	gLökedBlockögQueue
<
	gW©chedEvít
> 
	gevíts
 =

553 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

555 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

556 
	gsu≥r
.
¥o˚ss
(
evít
);

557 i‡(
	gevít
.
gëTy≥
(Ë!
Evít
.
EvítTy≥
.
N⁄e
) {

558 
åy
 {

559 
evíts
.
put
(
evít
);

560 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

561 
	gLOG
.
w¨n
("ignoring interrupt duringÉvent.put");

571 @
Te°


572 
public
 
	$ã°FﬁlowîW©chîResync
(Ë
throws
 
Ex˚±i⁄
 {

573 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

574 
qu
.
	`°¨tAŒ
();

576 
ödex
 = 1;

577 
qu
.
	`gëPìr
(
ödex
).
≥î
.
fﬁlowî
 =
nuŒ
) {

578 
ödex
++;

580 
LOG
.
	`öfo
("C⁄√˘ögÅÿfﬁlowî:" + 
ödex
);

582 
Te°abÀZooKì≥r
 
zk1
 = 
	`¸óãTe°abÀClõ¡
(

583 "loˇlho°:" + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
());

584 
zk1
.
	`¸óã
("/foo", "foo".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

585 
Cª©eMode
.
PERSISTENT
);

587 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

588 
Te°abÀZooKì≥r
 
zk2
 = 
	`¸óãTe°abÀClõ¡
(
w©chî
,

589 "loˇlho°:" + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
());

591 
zk2
.
	`exi°s
("/foo", 
åue
);

593 
w©chî
.
	`ª£t
();

594 
zk2
.
	`ã°abÀC⁄∆oss
();

595 i‡(!
w©chî
.
˛õ¡C⁄√˘ed
.
	`awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
))

597 
	`Áû
("UnableÅo connectÅo server");

599 
	`as£πAºayEquÆs
("foo".
	`gëByãs
(), 
zk2
.
	`gëD©a
("/foo", 
Ál£
, 
nuŒ
));

601 
	`as£πNuŒ
(
w©chî
.
evíts
.
	`pﬁl
(5, 
TimeUnô
.
SECONDS
));

603 
zk1
.
	`˛o£
();

604 
zk2
.
	`˛o£
();

605 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FourLetterWordsQuorumTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gFourLëãrW‹dMaö
.
	g£nd4LëãrW‹d
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cFourLëãrW‹dsQu‹umTe°
 
exãnds
 
	mQu‹umBa£
 {

31 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

32 
LoggîFa˘‹y
.
gëLoggî
(
FourLëãrW‹dsQu‹umTe°
.
˛ass
);

35 @
Te°


36 
public
 
	$ã°FourLëãrW‹ds
(Ë
throws
 
Ex˚±i⁄
 {

37 
Såög
 
£rvîs
[] = 
ho°P‹t
.
	`•lô
(",");

38 
Såög
 
hp
 : 
£rvîs
) {

39 
	`vîify
(
hp
, "ruok", "imok");

40 
	`vîify
(
hp
, "envi", "java.version");

41 
	`vîify
(
hp
, "conf", "clientPort");

42 
	`vîify
(
hp
, "stat", "Outstanding");

43 
	`vîify
(
hp
, "srvr", "Outstanding");

44 
	`vîify
(
hp
, "cons", "queued");

45 
	`vîify
(
hp
, "dump", "Session");

46 
	`vîify
(
hp
, "wchs", "watches");

47 
	`vîify
(
hp
, "wchp", "");

48 
	`vîify
(
hp
, "wchc", "");

50 
	`vîify
(
hp
, "srst", "reset");

51 
	`vîify
(
hp
, "crst", "reset");

53 
	`vîify
(
hp
, "stat", "Outstanding");

54 
	`vîify
(
hp
, "srvr", "Outstanding");

55 
	`vîify
(
hp
, "cons", "queued");

57 
Te°abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
hp
);

58 
Såög
 
sid
 = "0x" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
());

60 
	`vîify
(
hp
, "stat", "queued");

61 
	`vîify
(
hp
, "srvr", "Outstanding");

62 
	`vîify
(
hp
, "c⁄s", 
sid
);

63 
	`vîify
(
hp
, "dump", 
sid
);

65 
zk
.
	`gëD©a
("/", 
åue
, 
nuŒ
);

67 
	`vîify
(
hp
, "stat", "queued");

68 
	`vîify
(
hp
, "srvr", "Outstanding");

69 
	`vîify
(
hp
, "c⁄s", 
sid
);

70 
	`vîify
(
hp
, "dump", 
sid
);

71 
	`vîify
(
hp
, "wchs", "watching 1");

72 
	`vîify
(
hp
, "wchp", 
sid
);

73 
	`vîify
(
hp
, "wchc", 
sid
);

75 
zk
.
	`˛o£
();

77 
	`vîify
(
hp
, "ruok", "imok");

78 
	`vîify
(
hp
, "envi", "java.version");

79 
	`vîify
(
hp
, "conf", "clientPort");

80 
	`vîify
(
hp
, "stat", "Outstanding");

81 
	`vîify
(
hp
, "srvr", "Outstanding");

82 
	`vîify
(
hp
, "cons", "queued");

83 
	`vîify
(
hp
, "dump", "Session");

84 
	`vîify
(
hp
, "wchs", "watch");

85 
	`vîify
(
hp
, "wchp", "");

86 
	`vîify
(
hp
, "wchc", "");

88 
	`vîify
(
hp
, "srst", "reset");

89 
	`vîify
(
hp
, "crst", "reset");

91 
	`vîify
(
hp
, "stat", "Outstanding");

92 
	`vîify
(
hp
, "srvr", "Outstanding");

93 
	`vîify
(
hp
, "cons", "queued");

95 
	`vîify
(
hp
, "mntr", "zk_version\t");

99 
¥iv©e
 
	$vîify
(
Såög
 
hp
, Såög 
cmd
, Såög 
ex≥˘ed
)

100 
throws
 
IOEx˚±i⁄


102 
Ho°P‹t
 
hpobj
: 
	`∑r£Ho°P‹tLi°
(
hp
)) {

103 
Såög
 
ª•
 = 
	`£nd4LëãrW‹d
(
hpobj
.
ho°
, hpobj.
p‹t
, 
cmd
);

104 
LOG
.
	`öfo
("cmd " + 
cmd
 + "Éx≥˘ed " + 
ex≥˘ed
 + " gŸ " + 
ª•
);

105 i‡(
cmd
.
	`equÆs
("dump")) {

106 
As£π
.
	`as£πTrue
(
ª•
.
	`c⁄èös
(
ex≥˘ed
)

107 || 
ª•
.
	`c⁄èös
("Sessions with Ephemerals"));

109 
As£π
.
	`as£πTrue
(
ª•
.
	`c⁄èös
(
ex≥˘ed
));

112 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FourLetterWordsTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gBuf„ªdRódî
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gSåögRódî
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gFourLëãrW‹dMaö
.
	g£nd4LëãrW‹d
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

34 
public
 cœs†
	cFourLëãrW‹dsTe°
 
exãnds
 
	mClõ¡Ba£
 {

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

36 
LoggîFa˘‹y
.
gëLoggî
(
FourLëãrW‹dsTe°
.
˛ass
);

39 @
Te°


40 
public
 
	$ã°FourLëãrW‹ds
(Ë
throws
 
Ex˚±i⁄
 {

41 
	`vîify
("ruok", "imok");

42 
	`vîify
("envi", "java.version");

43 
	`vîify
("conf", "clientPort");

44 
	`vîify
("stat", "Outstanding");

45 
	`vîify
("srvr", "Outstanding");

46 
	`vîify
("cons", "queued");

47 
	`vîify
("dump", "Session");

48 
	`vîify
("wchs", "watches");

49 
	`vîify
("wchp", "");

50 
	`vîify
("wchc", "");

52 
	`vîify
("srst", "reset");

53 
	`vîify
("crst", "reset");

55 
	`vîify
("stat", "Outstanding");

56 
	`vîify
("srvr", "Outstanding");

57 
	`vîify
("cons", "queued");

59 
Te°abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

60 
Såög
 
sid
 = "0x" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
());

62 
	`vîify
("stat", "queued");

63 
	`vîify
("srvr", "Outstanding");

64 
	`vîify
("c⁄s", 
sid
);

65 
	`vîify
("dump", 
sid
);

67 
zk
.
	`gëD©a
("/", 
åue
, 
nuŒ
);

69 
	`vîify
("stat", "queued");

70 
	`vîify
("srvr", "Outstanding");

71 
	`vîify
("c⁄s", 
sid
);

72 
	`vîify
("dump", 
sid
);

74 
	`vîify
("wchs", "watching 1");

75 
	`vîify
("wchp", 
sid
);

76 
	`vîify
("wchc", 
sid
);

77 
zk
.
	`˛o£
();

79 
	`vîify
("ruok", "imok");

80 
	`vîify
("envi", "java.version");

81 
	`vîify
("conf", "clientPort");

82 
	`vîify
("stat", "Outstanding");

83 
	`vîify
("srvr", "Outstanding");

84 
	`vîify
("cons", "queued");

85 
	`vîify
("dump", "Session");

86 
	`vîify
("wchs", "watch");

87 
	`vîify
("wchp", "");

88 
	`vîify
("wchc", "");

90 
	`vîify
("srst", "reset");

91 
	`vîify
("crst", "reset");

93 
	`vîify
("stat", "Outstanding");

94 
	`vîify
("srvr", "Outstanding");

95 
	`vîify
("cons", "queued");

96 
	`vîify
("mntr", "zk_server_state\tstandalone");

97 
	`vîify
("mntr", "num_alive_connections");

98 
	`vîify
("stat", "Connections");

99 
	`vîify
("srvr", "Connections");

102 
¥iv©e
 
Såög
 
	$£ndReque°
(
Såög
 
cmd
Ë
throws
 
IOEx˚±i⁄
 {

103 
Ho°P‹t
 
hpobj
 = 
Clõ¡Ba£
.
	`∑r£Ho°P‹tLi°
(
ho°P‹t
).
	`gë
(0);

104  
	`£nd4LëãrW‹d
(
hpobj
.
ho°
, hpobj.
p‹t
, 
cmd
);

105 
	}
}

107 
¥iv©e
 
	$vîify
(
Såög
 
cmd
, Såög 
ex≥˘ed
Ë
throws
 
IOEx˚±i⁄
 {

108 
Såög
 
ª•
 = 
	`£ndReque°
(
cmd
);

109 
LOG
.
	`öfo
("cmd " + 
cmd
 + "Éx≥˘ed " + 
ex≥˘ed
 + " gŸ " + 
ª•
);

110 
As£π
.
	`as£πTrue
(
ª•
.
	`c⁄èös
(
ex≥˘ed
));

111 
	}
}

113 @
Te°


114 
public
 
	$vÆid©eSètOuçut
(Ë
throws
 
Ex˚±i⁄
 {

115 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

116 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
();

118 
Såög
 
ª•
 = 
	`£ndReque°
("stat");

119 
Buf„ªdRódî
 
ö
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`SåögRódî
(
ª•
));

121 
Såög
 
löe
;

123 
löe
 = 
ö
.
	`ªadLöe
();

124 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^.*\\s\\d+\\.\\d+\\.\\d+-.*$", 
löe
));

125 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Clõ¡s:$", 
ö
.
	`ªadLöe
()));

127 
cou¡
 = 0;

128 (
löe
 = 
ö
.
	`ªadLöe
()).
	`Àngth
() > 0) {

129 
cou¡
++;

130 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^ /.*:\\d+\\[\\d+\\]\\(queued=\\d+,ªcved=\\d+,£¡=\\d+\\)$", 
löe
));

133 
As£π
.
	`as£πTrue
(
cou¡
 >= 2);

135 
löe
 = 
ö
.
	`ªadLöe
();

136 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^L©ícy mö/avg/max: \\d+/\\d+/\\d+$", 
löe
));

137 
löe
 = 
ö
.
	`ªadLöe
();

138 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Re˚ived: \\d+$", 
löe
));

139 
löe
 = 
ö
.
	`ªadLöe
();

140 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Sít: \\d+$", 
löe
));

141 
löe
 = 
ö
.
	`ªadLöe
();

142 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^C⁄√˘i⁄s: \\d+$", 
löe
));

143 
löe
 = 
ö
.
	`ªadLöe
();

144 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Out°™dög: \\d+$", 
löe
));

145 
löe
 = 
ö
.
	`ªadLöe
();

146 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Zxid: 0x[\\da-fA-F]+$", 
löe
));

147 
löe
 = 
ö
.
	`ªadLöe
();

148 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Mode: .*$", 
löe
));

149 
löe
 = 
ö
.
	`ªadLöe
();

150 
As£π
.
	`as£πTrue
(
P©ã∫
.
	`m©ches
("^Nodêcou¡: \\d+$", 
löe
));

152 
zk1
.
	`˛o£
();

153 
zk2
.
	`˛o£
();

154 
	}
}

156 @
Te°


157 
public
 
	$vÆid©eC⁄sOuçut
(Ë
throws
 
Ex˚±i⁄
 {

158 
ZooKì≥r
 
zk1
 = 
	`¸óãClõ¡
();

159 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
();

161 
Såög
 
ª•
 = 
	`£ndReque°
("cons");

162 
Buf„ªdRódî
 
ö
 = 
√w
 
	`Buf„ªdRódî
“ew 
	`SåögRódî
(
ª•
));

164 
Såög
 
löe
;

165 
cou¡
 = 0;

166 (
löe
 = 
ö
.
	`ªadLöe
()Ë!
nuŒ
 &&Üöe.
	`Àngth
() > 0) {

167 
cou¡
++;

168 
As£π
.
	`as£πTrue
(
löe
, 
P©ã∫
.
	`m©ches
("^ /.*:\\d+\\[\\d+\\]\\(queued=\\d+,recved=\\d+,sent=\\d+.*\\)$",Üine));

171 
As£π
.
	`as£πTrue
(
cou¡
 >= 2);

173 
zk1
.
	`˛o£
();

174 
zk2
.
	`˛o£
();

175 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/GetChildren2Test.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cGëChûdªn2Te°
 
exãnds
 
	mClõ¡Ba£
 {

35 
¥iv©e
 
ZooKì≥r
 
	mzk
;

37 @
Ovîride


38 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

39 
su≥r
.
	`£tUp
();

41 
zk
 = 
	`¸óãClõ¡
();

44 @
Ovîride


45 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

46 
su≥r
.
	`ã¨Down
();

48 
zk
.
	`˛o£
();

49 
	}
}

51 @
Te°


52 
public
 
	$ã°Chûd
()

53 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


55 
Såög
 
«me
 = "/foo";

56 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

57 
Cª©eMode
.
PERSISTENT
);

59 
Såög
 
chûd«me
 = 
«me
 + "/bar";

60 
zk
.
	`¸óã
(
chûd«me
, chûd«me.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

61 
Cª©eMode
.
EPHEMERAL
);

63 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

64 
Li°
<
Såög
> 
s
 = 
zk
.
	`gëChûdªn
(
«me
, 
Ál£
, 
°©
);

66 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

67 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(Ë+ 1, sèt.
	`gëPzxid
());

68 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

69 
As£π
.
	`as£πEquÆs
(1, 
°©
.
	`gëCvîsi⁄
());

70 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

71 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

72 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

73 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

74 
As£π
.
	`as£πEquÆs
(1, 
°©
.
	`gëNumChûdªn
());

75 
As£π
.
	`as£πEquÆs
(
s
.
	`size
(), 
°©
.
	`gëNumChûdªn
());

77 
s
 = 
zk
.
	`gëChûdªn
(
chûd«me
, 
Ál£
, 
°©
);

79 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

80 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëPzxid
());

81 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

82 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëCvîsi⁄
());

83 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

84 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

85 
As£π
.
	`as£πEquÆs
(
zk
.
	`gëSessi⁄Id
(), 
°©
.
	`gëEphemîÆOw√r
());

86 
As£π
.
	`as£πEquÆs
(
chûd«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

87 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëNumChûdªn
());

88 
As£π
.
	`as£πEquÆs
(
s
.
	`size
(), 
°©
.
	`gëNumChûdªn
());

89 
	}
}

91 @
Te°


92 
public
 
	$ã°Chûdªn
()

93 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


95 
Såög
 
«me
 = "/foo";

96 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

97 
Cª©eMode
.
PERSISTENT
);

99 
Li°
<
Såög
> 
chûdªn
 = 
√w
 
AºayLi°
<String>();

100 
Li°
<
Såög
> 
chûdªn_s
 = 
√w
 
AºayLi°
<String>();

102 
i
 = 0; i < 10; i++) {

103 
Såög
 
chûd«me
 = 
«me
 + "/b¨" + 
i
;

104 
Såög
 
chûd«me_s
 = "b¨" + 
i
;

105 
chûdªn
.
	`add
(
chûd«me
);

106 
chûdªn_s
.
	`add
(
chûd«me_s
);

109 
i
 = 0; i < 
chûdªn
.
	`size
(); i++) {

110 
Såög
 
chûd«me
 = 
chûdªn
.
	`gë
(
i
);

111 
zk
.
	`¸óã
(
chûd«me
, chûd«me.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

112 
Cª©eMode
.
EPHEMERAL
);

114 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

115 
Li°
<
Såög
> 
s
 = 
zk
.
	`gëChûdªn
(
«me
, 
Ál£
, 
°©
);

117 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

118 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(Ë+ 
i
 + 1, sèt.
	`gëPzxid
());

119 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

120 
As£π
.
	`as£πEquÆs
(
i
 + 1, 
°©
.
	`gëCvîsi⁄
());

121 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

122 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

123 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

124 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

125 
As£π
.
	`as£πEquÆs
(
i
 + 1, 
°©
.
	`gëNumChûdªn
());

126 
As£π
.
	`as£πEquÆs
(
s
.
	`size
(), 
°©
.
	`gëNumChûdªn
());

128 
Li°
<
Såög
> 
p
 = 
zk
.
	`gëChûdªn
(
«me
, 
Ál£
, 
nuŒ
);

129 
Li°
<
Såög
> 
c_a
 = 
chûdªn_s
;

130 
Li°
<
Såög
> 
c_b
 = 
p
;

131 
CﬁÀ˘i⁄s
.
	`s‹t
(
c_a
);

132 
CﬁÀ˘i⁄s
.
	`s‹t
(
c_b
);

133 
As£π
.
	`as£πEquÆs
(
c_a
.
	`size
(), 10);

134 
As£π
.
	`as£πEquÆs
(
c_a
, 
c_b
);

135 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/HierarchicalQuorumTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayI≈utSåóm
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashSë
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gPr›îtõs
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umHõørchiˇl
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
public
 cœs†
	cHõørchiˇlQu‹umTe°
 
exãnds
 
	mClõ¡Ba£
 {

40 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umBa£
.
˛ass
);

42 
Fûe
 
	ms1dú
, 
	ms2dú
, 
	ms3dú
, 
	ms4dú
, 
	ms5dú
;

43 
Qu‹umPìr
 
	ms1
, 
	ms2
, 
	ms3
, 
	ms4
, 
	ms5
;

44 
¥Ÿe˘ed
 
	mp‹t1
;

45 
¥Ÿe˘ed
 
	mp‹t2
;

46 
¥Ÿe˘ed
 
	mp‹t3
;

47 
¥Ÿe˘ed
 
	mp‹t4
;

48 
¥Ÿe˘ed
 
	mp‹t5
;

50 
¥Ÿe˘ed
 
	mÀp‹t1
;

51 
¥Ÿe˘ed
 
	mÀp‹t2
;

52 
¥Ÿe˘ed
 
	mÀp‹t3
;

53 
¥Ÿe˘ed
 
	mÀp‹t4
;

54 
¥Ÿe˘ed
 
	mÀp‹t5
;

56 
Pr›îtõs
 
	mqp
;

57 
¥Ÿe˘ed
 
föÆ
 
Clõ¡HammîTe°
 
	mcht
 = 
√w
 ClientHammerTest();

59 @
Ovîride


60 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

61 
	`£tupTe°Env
();

63 
JMXEnv
.
	`£tUp
();

65 
	`£tUpAŒ
();

67 
p‹t1
 = 
P‹tAssignmít
.
	`unique
();

68 
p‹t2
 = 
P‹tAssignmít
.
	`unique
();

69 
p‹t3
 = 
P‹tAssignmít
.
	`unique
();

70 
p‹t4
 = 
P‹tAssignmít
.
	`unique
();

71 
p‹t5
 = 
P‹tAssignmít
.
	`unique
();

72 
Àp‹t1
 = 
P‹tAssignmít
.
	`unique
();

73 
Àp‹t2
 = 
P‹tAssignmít
.
	`unique
();

74 
Àp‹t3
 = 
P‹tAssignmít
.
	`unique
();

75 
Àp‹t4
 = 
P‹tAssignmít
.
	`unique
();

76 
Àp‹t5
 = 
P‹tAssignmít
.
	`unique
();

78 
ho°P‹t
 = "127.0.0.1:" + 
p‹t1


79 + ",127.0.0.1:" + 
p‹t2


80 + ",127.0.0.1:" + 
p‹t3


81 + ",127.0.0.1:" + 
p‹t4


82 + ",127.0.0.1:" + 
p‹t5
;

83 
LOG
.
	`öfo
("P‹t†¨e: " + 
ho°P‹t
);

85 
s1dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

86 
s2dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

87 
s3dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

88 
s4dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

89 
s5dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

91 
Såög
 
c⁄fig
 = "group.1=1:2:3\n" +

99 
ByãAºayI≈utSåóm
 
is
 = 
√w
 
	`ByãAºayI≈utSåóm
(
c⁄fig
.
	`gëByãs
());

100 
this
.
qp
 = 
√w
 
	`Pr›îtõs
();

102 
qp
.
	`lﬂd
(
is
);

103 
	`°¨tSîvîs
();

105 
cht
.
ho°P‹t
 = hostPort;

106 
cht
.
	`£tUpAŒ
();

108 
LOG
.
	`öfo
("Setup finished");

116 
	$°¨tSîvîs
(Ë
throws
 
Ex˚±i⁄
 {

117 
	`°¨tSîvîs
(
Ál£
);

118 
	}
}

126 
	$°¨tSîvîs
(
boﬁón
 
wôhOb£rvîs
Ë
throws
 
Ex˚±i⁄
 {

127 
tickTime
 = 2000;

128 
öôLimô
 = 3;

129 
syncLimô
 = 3;

130 
HashM≠
<
L⁄g
,
Qu‹umSîvî
> 
≥îs
 = 
√w
 HashMap<Long,QuorumServer>();

131 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(1), 
√w
 
	`Qu‹umSîvî
(1,

132 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t1
 + 1000),

133 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
Àp‹t1
 + 1000)));

134 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(2), 
√w
 
	`Qu‹umSîvî
(2,

135 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t2
 + 1000),

136 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
Àp‹t2
 + 1000)));

137 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(3), 
√w
 
	`Qu‹umSîvî
(3,

138 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t3
 + 1000),

139 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
Àp‹t3
 + 1000)));

140 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(4), 
√w
 
	`Qu‹umSîvî
(4,

141 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t4
 + 1000),

142 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
Àp‹t4
 + 1000),

143 
wôhOb£rvîs
 ? 
Qu‹umPìr
.
Ló∫îTy≥
.
OBSERVER


144 : 
Qu‹umPìr
.
Ló∫îTy≥
.
PARTICIPANT
));

145 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(5), 
√w
 
	`Qu‹umSîvî
(5,

146 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t5
 + 1000),

147 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
Àp‹t5
 + 1000),

148 
wôhOb£rvîs
 ? 
Qu‹umPìr
.
Ló∫îTy≥
.
OBSERVER


149 : 
Qu‹umPìr
.
Ló∫îTy≥
.
PARTICIPANT
));

151 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏1Ö‹à" + 
p‹t1
);

152 
Qu‹umHõørchiˇl
 
hq1
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

153 
s1
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s1dú
, s1dú, 
p‹t1
, 3, 1, 
tickTime
, 
öôLimô
, 
syncLimô
, 
hq1
);

154 
As£π
.
	`as£πEquÆs
(
p‹t1
, 
s1
.
	`gëClõ¡P‹t
());

156 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏2Ö‹à" + 
p‹t2
);

157 
Qu‹umHõørchiˇl
 
hq2
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

158 
s2
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s2dú
, s2dú, 
p‹t2
, 3, 2, 
tickTime
, 
öôLimô
, 
syncLimô
, 
hq2
);

159 
As£π
.
	`as£πEquÆs
(
p‹t2
, 
s2
.
	`gëClõ¡P‹t
());

161 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏3Ö‹à" + 
p‹t3
);

162 
Qu‹umHõørchiˇl
 
hq3
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

163 
s3
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s3dú
, s3dú, 
p‹t3
, 3, 3, 
tickTime
, 
öôLimô
, 
syncLimô
, 
hq3
);

164 
As£π
.
	`as£πEquÆs
(
p‹t3
, 
s3
.
	`gëClõ¡P‹t
());

166 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏4Ö‹à" + 
p‹t4
);

167 
Qu‹umHõørchiˇl
 
hq4
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

168 
s4
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s4dú
, s4dú, 
p‹t4
, 3, 4, 
tickTime
, 
öôLimô
, 
syncLimô
, 
hq4
);

169 i‡(
wôhOb£rvîs
) {

170 
s4
.
	`£tLó∫îTy≥
(
Qu‹umPìr
.
Ló∫îTy≥
.
OBSERVER
);

172 
As£π
.
	`as£πEquÆs
(
p‹t4
, 
s4
.
	`gëClõ¡P‹t
());

174 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏5Ö‹à" + 
p‹t5
);

175 
Qu‹umHõørchiˇl
 
hq5
 = 
√w
 
	`Qu‹umHõørchiˇl
(
qp
);

176 
s5
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s5dú
, s5dú, 
p‹t5
, 3, 5, 
tickTime
, 
öôLimô
, 
syncLimô
, 
hq5
);

177 i‡(
wôhOb£rvîs
) {

178 
s5
.
	`£tLó∫îTy≥
(
Qu‹umPìr
.
Ló∫îTy≥
.
OBSERVER
);

180 
As£π
.
	`as£πEquÆs
(
p‹t5
, 
s5
.
	`gëClõ¡P‹t
());

183 i‡(
wôhOb£rvîs
) {

184 
s1
.
	`£tEÀ˘i⁄Ty≥
(0);

185 
s2
.
	`£tEÀ˘i⁄Ty≥
(0);

186 
s3
.
	`£tEÀ˘i⁄Ty≥
(0);

187 
s4
.
	`£tEÀ˘i⁄Ty≥
(0);

188 
s5
.
	`£tEÀ˘i⁄Ty≥
(0);

191 
LOG
.
	`öfo
("start QuorumPeer 1");

192 
s1
.
	`°¨t
();

193 
LOG
.
	`öfo
("start QuorumPeer 2");

194 
s2
.
	`°¨t
();

195 
LOG
.
	`öfo
("start QuorumPeer 3");

196 
s3
.
	`°¨t
();

197 
LOG
.
	`öfo
("°¨àQu‹umPì∏4" + (
wôhOb£rvîs
 ? "(observer)" : ""));

198 
s4
.
	`°¨t
();

199 
LOG
.
	`öfo
("°¨àQu‹umPì∏5" + (
wôhOb£rvîs
 ? "(observer)" : ""));

200 
s5
.
	`°¨t
();

201 
LOG
.
	`öfo
("started QuorumPeer 5");

203 
LOG
.
	`öfo
 ("ClosögÖ‹t†" + 
ho°P‹t
);

204 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

205 
As£π
.
	`as£πTrue
("waiting for server up",

206 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
hp
,

207 
CONNECTION_TIMEOUT
));

208 
LOG
.
	`öfo
(
hp
 + " isáccepting client connections");

212 
JMXEnv
.
	`dump
();

214 
Së
<
Såög
> 
ísuªNames
 = 
√w
 
LökedHashSë
<String>();

215 
i
 = 1; i <= 5; i++) {

216 
ísuªNames
.
	`add
("InMemoryDataTree");

218 
i
 = 1; i <= 5; i++) {

219 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i


220 + ",«me1Ùïliˇ." + 
i
 + ",name2=");

222 
i
 = 1; i <= 5; i++) {

223 
j
 = 1; j <= 5; j++) {

224 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i


225 + ",«me1Ùïliˇ." + 
j
);

228 
i
 = 1; i <= 5; i++) {

229 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i
);

231 
JMXEnv
.
	`ísuªAŒ
(
ísuªNames
.
	`toAºay
(
√w
 
Såög
[ísuªNames.
	`size
()]));

232 
	}
}

234 @
Ovîride


235 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

236 
LOG
.
	`öfo
("TearDown started");

237 
cht
.
	`ã¨DownAŒ
();

239 
LOG
.
	`öfo
("Shutting down server 1");

240 
	`shutdown
(
s1
);

241 
LOG
.
	`öfo
("Shutting down server 2");

242 
	`shutdown
(
s2
);

243 
LOG
.
	`öfo
("Shutting down server 3");

244 
	`shutdown
(
s3
);

245 
LOG
.
	`öfo
("Shutting down server 4");

246 
	`shutdown
(
s4
);

247 
LOG
.
	`öfo
("Shutting down server 5");

248 
	`shutdown
(
s5
);

250 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

251 
As£π
.
	`as£πTrue
("waiting for server down",

252 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
hp
,

253 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

254 
LOG
.
	`öfo
(
hp
 + " isÇoÜongeráccepting client connections");

257 
JMXEnv
.
	`ã¨Down
();

258 
	}
}

260 
¥Ÿe˘ed
 
	$shutdown
(
Qu‹umPìr
 
qp
) {

261 
Qu‹umBa£
.
	`shutdown
(
qp
);

262 
	}
}

264 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
()

265 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


267  
	`¸óãClõ¡
(
ho°P‹t
);

268 
	}
}

270 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

271 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


273 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

274  
	`¸óãClõ¡
(
w©chî
, 
hp
);

275 
	}
}

277 @
Te°


278 
public
 
	$ã°HõørchiˇlQu‹um
(Ë
throws
 
ThrowabÀ
 {

279 
cht
.
	`runHammî
(5, 10);

280 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/IntegrityCheck.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

34 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

35 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

36 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

38 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gD©aCÆlback
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

51 
public
 
˛ass
 
I¡egrôyCheck
 
im∂emíts
 
	gW©chî
, 
	gSètCÆlback
, 
	gD©aCÆlback
 {

52 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
I¡egrôyCheck
.
˛ass
);

54 
ZooKì≥r
 
	gzk
;

56 
	gHashM≠
<
	gSåög
, 
	gbyã
[]> 
	gœ°VÆue
 = 
√w
 
HashM≠
<
Såög
, byte[]>();

58 
	gcou¡
;

60 
Såög
 
	g∑th
;

62 
	gôî©i⁄
;

64 
	gout°™dög
;

66 
	gîr‹Cou¡
;

68 
synchr⁄ized
 
öcOut°™dög
() {

69 
	gout°™dög
++;

72 
synchr⁄ized
 
decOut°™dög
() {

73 
	gout°™dög
--;

74 
nŸifyAŒ
();

77 
synchr⁄ized
 
waôOut°™dög
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

78 
	gout°™dög
 > 0) {

79 
waô
();

83 
I¡egrôyCheck
(
Såög
 
ho°P‹t
, Såög 
∑th
, 
cou¡
Ë
throws


84 
	gIOEx˚±i⁄
 {

85 
	gzk
 = 
√w
 
ZooKì≥r
(
ho°P‹t
, 30000, 
this
);

86 
	gthis
.
	g∑th
 = 
∑th
;

87 
	gthis
.
	gcou¡
 = 
cou¡
;

90 
public
 
run
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

91 
	gåy
{

92 
	gLOG
.
w¨n
("Cª©ög znode†f‹ "+
∑th
);

93 
doCª©e
();

94 
	gLOG
.
w¨n
("SèrögÅhêã°Üo› f‹ "+
∑th
);

95 
	gåue
) {

96 
	gLOG
.
w¨n
("Sèrög wrôêcy˛êf‹ "+
∑th
);

97 
doP›uœã
();

98 
waôOut°™dög
();

99 
	gLOG
.
w¨n
("SèrögÑód cy˛êf‹ "+
∑th
);

100 
ªadAŒ
();

101 
waôOut°™dög
();

103 }
	gföÆly
{

104 
	gLOG
.
w¨n
("Te°Üo›Åîmö©ed f‹ "+
∑th
);

108 
ªadAŒ
() {

109 
	gi
 = 0; i < 
	gcou¡
; i++) {

110 
Såög
 
	g˝©h
 = 
∑th
 + "/" + 
i
;

111 
	gzk
.
gëD©a
(
˝©h
, 
Ál£
, 
this
, 
nuŒ
);

112 
öcOut°™dög
();

117 
doCª©e
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
, 
	gKì≥rEx˚±i⁄
 {

119 
	gåy
{

120 
	gzk
.
¸óã
(
∑th
, 
nuŒ
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

121 }
ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
e
){

124 
	gôî©i⁄
++;

125 
byã
 
	gv
[] = ("" + 
ôî©i⁄
).
gëByãs
();

127 
	gi
 = 0; i < 
	gcou¡
; i++) {

128 
Såög
 
	g˝©h
 = 
∑th
 + "/" + 
i
;

129 
	gåy
{

130 if(
	gi
%10==0)

131 
LOG
.
w¨n
("Cª©ög znodê"+
˝©h
);

132 
	gzk
.
¸óã
(
˝©h
, 
v
, 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

133 }
ˇtch
(
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
e
){

136 
	gœ°VÆue
.
put
(
˝©h
, 
v
);

140 
doP›uœã
() {

141 
	gôî©i⁄
++;

142 
byã
 
	gv
[] = ("" + 
ôî©i⁄
).
gëByãs
();

143 
	gi
 = 0; i < 
	gcou¡
; i++) {

144 
Såög
 
	g˝©h
 = 
∑th
 + "/" + 
i
;

145 
	gzk
.
£tD©a
(
˝©h
, 
v
, -1, 
this
, v);

146 
öcOut°™dög
();

151 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

152 if(
	gevít
.
gëSèã
()==
Kì≥rSèã
.
SyncC⁄√˘ed
){

153 
synchr⁄ized
(
this
){

154 
nŸifyAŒ
();

159 
synchr⁄ized
 
ísuªC⁄√˘ed
(){

160 
	gzk
.
gëSèã
()!=
ZooKì≥r
.
Sèãs
.
CONNECTED
){

161 
åy
 {

162 
waô
();

163 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

172 
public
 
maö
(
Såög
[] 
¨gs
) {

173 i‡(
	g¨gs
.
	gÀngth
 < 3) {

174 
	gSy°em
.
	gîr
.
¥öén
("USAGE: IntegrityCheck zookeeperHostPort znode #children");

177 
	gchûdªnCou¡
=0;

178 
	gåy
 {

179 
	gchûdªnCou¡
=
I¡egî
.
∑r£I¡
(
¨gs
[2]);

180 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

181 
	ge
.
¥ötSèckTø˚
();

182 
	gSy°em
.
exô
(1);

185 
	gåy
{

186 
föÆ
 
I¡egrôyCheck
 
	g˘e°
 = 
√w
 I¡egrôyCheck(
¨gs
[0],árgs[1],
chûdªnCou¡
);

187 
	gRu¡ime
.
gëRu¡ime
().
addShutdownHook
(
√w
 
Thªad
() {

188 
public
 
run
() {

189 
Sy°em
.
out
.
¥öén
(
√w
 
D©e
().
toSåög
()+": Eº‹ cou¡ = " + 
˘e°
.
îr‹Cou¡
);

192 
	gåue
){

193 
	gåy
{

194 
	g˘e°
.
ísuªC⁄√˘ed
();

195 
	g˘e°
.
run
();

196 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

197 
	ge
.
¥ötSèckTø˚
();

200 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

201 
	ge
.
¥ötSèckTø˚
();

202 
	gSy°em
.
exô
(2);

206 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

207 i‡(
	grc
 == 0) {

208 
œ°VÆue
.
put
(
∑th
, (
byã
[]Ë
˘x
);

210 
decOut°™dög
();

213 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
byã
[] 
d©a
,

214 
Sèt
 
°©
) {

215 i‡(
	grc
 == 0) {

216 
Såög
 
°rög
 = 
√w
 Såög(
d©a
);

217 
Såög
 
	gœ°Såög
 = 
nuŒ
;

218 
	gbyã
[] 
	gv
 = 
œ°VÆue
.
gë
(
∑th
);

219 i‡(
	gv
 !
nuŒ
) {

220 
œ°Såög
 = 
√w
 
Såög
(
v
);

222 i‡(
	gœ°Såög
 !
nuŒ


223 && 
I¡egî
.
∑r£I¡
(
°rög
Ë< I¡egî.∑r£I¡(
œ°Såög
)) {

224 
LOG
.
îr‹
("ERROR: GŸ " + 
°rög
 + "Éxpected >= "

225 + 
œ°Såög
);

226 
	gîr‹Cou¡
++;

228 
	gœ°VÆue
.
put
(
∑th
, (
byã
[]Ë
˘x
);

230 
decOut°™dög
();

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/InvalidSnapshotTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gLogF‹m©ãr
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gS«pshŸF‹m©ãr
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

40 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

42 
public
 cœs†
	cInvÆidS«pshŸTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

43 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
UpgødeTe°
.
˛ass
);

44 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 =

45 "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

47 
¥iv©e
 
föÆ
 
Fûe
 
	mã°D©a
 = 
√w
 File(

48 
Sy°em
.
gëPr›îty
("test.data.dir", "build/test/data"));

49 
¥iv©e
 
Cou¡DownL©ch
 
	m°¨tSig«l
;

54 @
Te°


55 
public
 
	$ã°LogF‹m©ãr
(Ë
throws
 
Ex˚±i⁄
 {

56 
Fûe
 
¢≠Dú
 = 
√w
 
	`Fûe
(
ã°D©a
, "invalidsnap");

57 
Fûe
 
logfûe
 = 
√w
 
	`Fûe
“ew Fûe(
¢≠Dú
, "version-2"), "log.274");

58 
Såög
[] 
¨gs
 = {
logfûe
.
	`gëC™⁄iˇlFûe
().
	`toSåög
()};

59 
LogF‹m©ãr
.
	`maö
(
¨gs
);

66 @
Te°


67 
public
 
	$ã°S«pshŸF‹m©ãr
(Ë
throws
 
Ex˚±i⁄
 {

68 
Fûe
 
¢≠Dú
 = 
√w
 
	`Fûe
(
ã°D©a
, "invalidsnap");

69 
Fûe
 
¢≠fûe
 = 
√w
 
	`Fûe
“ew Fûe(
¢≠Dú
, "version-2"), "snapshot.272");

70 
Såög
[] 
¨gs
 = {
¢≠fûe
.
	`gëC™⁄iˇlFûe
().
	`toSåög
()};

71 
S«pshŸF‹m©ãr
.
	`maö
(
¨gs
);

72 
	}
}

78 @
Te°


79 
public
 
	$ã°S«pshŸ
(Ë
throws
 
Ex˚±i⁄
 {

80 
Fûe
 
¢≠Dú
 = 
√w
 
	`Fûe
(
ã°D©a
, "invalidsnap");

81 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
¢≠Dú
, snapDir, 3000);

82 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

83 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

84 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

85 
f
.
	`°¨tup
(
zks
);

86 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

87 
As£π
.
	`as£πTrue
("waiting for server being up",

88 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

89 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 20000, 
this
);

90 
åy
 {

94 
As£π
.
	`as£πTrue
(
zk
.
	`exi°s
("/9/9/8", 
Ál£
Ë!
nuŒ
);

95 } 
föÆly
 {

96 
zk
.
	`˛o£
();

98 
f
.
	`shutdown
();

99 
As£π
.
	`as£πTrue
("waiting for server down",

100 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

101 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

103 
	}
}

105 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

106 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
(Ë+ " " +Évít.
	`gëP©h
());

107 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


108 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0)

110 
°¨tSig«l
.
	`cou¡Down
();

112 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/JMXEnv.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

26 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvî
;

27 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMBónSîvîC⁄√˘i⁄
;

28 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gMÆf‹medObje˘NameEx˚±i⁄
;

29 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gObje˘Name
;

30 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gªmŸe
.
	gJMXC⁄√˘‹
;

31 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gªmŸe
.
	gJMXC⁄√˘‹Fa˘‹y
;

32 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gªmŸe
.
	gJMXC⁄√˘‹Sîvî
;

33 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gªmŸe
.
	gJMXC⁄√˘‹SîvîFa˘‹y
;

34 
imp‹t
 
	gjavax
.
	gm™agemít
.
	gªmŸe
.
	gJMXSîvi˚URL
;

36 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gComm⁄Names
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gjmx
.
	gMBónRegi°ry
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

41 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

43 
public
 cœs†
	cJMXEnv
 {

44 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
JMXEnv
.
˛ass
);

46 
¥iv©e
 
JMXC⁄√˘‹Sîvî
 
	mcs
;

47 
¥iv©e
 
JMXC⁄√˘‹
 
	mcc
;

49 
public
 
	$£tUp
(Ë
throws
 
IOEx˚±i⁄
 {

50 
MBónSîvî
 
mbs
 = 
MBónRegi°ry
.
	`gëIn°™˚
().
	`gëPœtf‹mMBónSîvî
();

52 
JMXSîvi˚URL
 
uæ
 = 
√w
 
	`JMXSîvi˚URL
("service:jmx:rmi://");

53 
cs
 = 
JMXC⁄√˘‹SîvîFa˘‹y
.
	`√wJMXC⁄√˘‹Sîvî
(
uæ
, 
nuŒ
, 
mbs
);

54 
cs
.
	`°¨t
();

56 
JMXSîvi˚URL
 
addr
 = 
cs
.
	`gëAddªss
();

58 
cc
 = 
JMXC⁄√˘‹Fa˘‹y
.
	`c⁄√˘
(
addr
);

61 
public
 
	$ã¨Down
() {

62 
åy
 {

63 
cc
.
	`˛o£
();

64 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

65 
LOG
.
	`w¨n
("U√x≥˘ed, ign‹ög", 
e
);

68 
cc
 = 
nuŒ
;

69 
åy
 {

70 
cs
.
	`°›
();

71 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

72 
LOG
.
	`w¨n
("U√x≥˘ed, ign‹ög", 
e
);

75 
cs
 = 
nuŒ
;

76 
	}
}

78 
public
 
MBónSîvîC⁄√˘i⁄
 
	$c⁄n
(Ë
throws
 
IOEx˚±i⁄
 {

79  
cc
.
	`gëMBónSîvîC⁄√˘i⁄
();

80 
	}
}

92 
public
 
	gSë
<
	gObje˘Name
> 
	$ísuªAŒ
(
Såög
... 
ex≥˘edNames
)

93 
throws
 
IOEx˚±i⁄


95 
Së
<
Obje˘Name
> 
bóns
;

96 
åy
 {

97 
bóns
 = 
	`c⁄n
().
	`quîyNames
(

98 
√w
 
	`Obje˘Name
(
Comm⁄Names
.
DOMAIN
 + ":*"), 
nuŒ
);

99 } 
	`ˇtch
 (
MÆf‹medObje˘NameEx˚±i⁄
 
e
) {

100 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
);

103 
Së
<
Obje˘Name
> 
found
 = 
√w
 
HashSë
<ObjectName>();

104 
Såög
 
«me
 : 
ex≥˘edNames
) {

105 
LOG
.
	`öfo
("ex≥˘:" + 
«me
);

106 
Obje˘Name
 
bón
 : 
bóns
) {

107 i‡(
bón
.
	`toSåög
().
	`c⁄èös
(
«me
)) {

108 
LOG
.
	`öfo
("found:" + 
«me
 + " " + 
bón
);

109 
found
.
	`add
(
bón
);

113 
bóns
.
	`ªmoveAŒ
(
found
);

115 
Te°Ca£
.
	`as£πEquÆs
("ex≥˘ed " + 
Aºays
.
	`toSåög
(
ex≥˘edNames
),

116 
ex≥˘edNames
.
Àngth
, 
found
.
	`size
());

117  
bóns
;

118 
	}
}

130 
public
 
	gSë
<
	gObje˘Name
> 
	$ísuªO∆y
(
Såög
... 
ex≥˘edNames
)

131 
throws
 
IOEx˚±i⁄


133 
LOG
.
	`öfo
("ísuªO∆y:" + 
Aºays
.
	`toSåög
(
ex≥˘edNames
));

134 
Së
<
Obje˘Name
> 
bóns
 = 
	`ísuªAŒ
(
ex≥˘edNames
);

135 
Obje˘Name
 
bón
 : 
bóns
) {

136 
LOG
.
	`öfo
("u√x≥˘ed:" + 
bón
.
	`toSåög
());

138 
Te°Ca£
.
	`as£πEquÆs
(0, 
bóns
.
	`size
());

139  
bóns
;

140 
	}
}

142 
public
 
	$ísuªN⁄e
(
Såög
... 
ex≥˘edNames
)

143 
throws
 
IOEx˚±i⁄


145 
Së
<
Obje˘Name
> 
bóns
;

146 
åy
 {

147 
bóns
 = 
	`c⁄n
().
	`quîyNames
(

148 
√w
 
	`Obje˘Name
(
Comm⁄Names
.
DOMAIN
 + ":*"), 
nuŒ
);

149 } 
	`ˇtch
 (
MÆf‹medObje˘NameEx˚±i⁄
 
e
) {

150 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
);

153 
Såög
 
«me
 : 
ex≥˘edNames
) {

154 
Obje˘Name
 
bón
 : 
bóns
) {

155 i‡(
bón
.
	`toSåög
().
	`c⁄èös
(
«me
)) {

156 
LOG
.
	`öfo
("did¡ex≥˘:" + 
«me
);

157 
Te°Ca£
.
	`Áû
(
«me
 + " " + 
bón
.
	`toSåög
());

161 
	}
}

163 
public
 
	$dump
(Ë
throws
 
IOEx˚±i⁄
 {

164 
LOG
.
	`öfo
("JMXEnv.dump() follows");

165 
Së
<
Obje˘Name
> 
bóns
;

166 
åy
 {

167 
bóns
 = 
	`c⁄n
().
	`quîyNames
(

168 
√w
 
	`Obje˘Name
(
Comm⁄Names
.
DOMAIN
 + ":*"), 
nuŒ
);

169 } 
	`ˇtch
 (
MÆf‹medObje˘NameEx˚±i⁄
 
e
) {

170 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
);

172 
Obje˘Name
 
bón
 : 
bóns
) {

173 
LOG
.
	`öfo
("bón:" + 
bón
.
	`toSåög
());

175 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/KeeperStateTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumSë
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

29 
public
 cœs†
	cKì≥rSèãTe°
 
exãnds
 
	mZKTe°Ca£
 {

31 @
Te°


32 
public
 
	$ã°I¡C⁄vîsi⁄
() {

34 
EnumSë
<
Kì≥rSèã
> 
ÆlSèãs
 = EnumSë.
	`ÆlOf
(Kì≥rSèã.
˛ass
);

36 
Kì≥rSèã
 
as
 : 
ÆlSèãs
) {

37 
As£π
.
	`as£πEquÆs
(
as
, 
Kì≥rSèã
.
	`‰omI¡
–as.
	`gëI¡VÆue
() ) );

41 @
Te°


42 
public
 
	$ã°InvÆidI¡C⁄vîsi⁄
() {

43 
åy
 {

44 
Kì≥rSèã
 
ks
 = Kì≥rSèã.
	`‰omI¡
(324142);

45 
As£π
.
	`Áû
("WasábleÅo createán invalid KeeperState viaán integer");

46 } 
	`ˇtch
(
Ru¡imeEx˚±i⁄
 
ª
) {

50 
	}
}

55 @
	gTe°


56 @
SuµªssW¨nögs
("deprecation")

57 
public
 
	$ã°DïªˇãdCodeOkInSwôch
() {

58 
ã°
 = 1;

59 
ã°
) {

60 
Code
.
Ok
:

61 
As£π
.
	`as£πTrue
(
åue
);

64 
	}
}

67 @
Te°


68 
public
 
	$ã°CodeOKInSwôch
() {

69 
Code
 
ã°
 = Code.
OK
;

70 
ã°
) {

71 
OK
:

72 
As£π
.
	`as£πTrue
(
åue
);

75 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LENonTerminateTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømPackë
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gD©agømSockë
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	g√t
.
	gSockëEx˚±i⁄
;

27 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

33 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

35 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gEÀ˘i⁄
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódîEÀ˘i⁄
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gÊexibÀ
.
	gQu‹umMaj
;

48 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

49 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

50 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

52 
public
 cœs†
	cLEN⁄Tîmö©eTe°
 
exãnds
 
	mZKTe°Ca£
 {

53 
public
 cœs†
	cMockLódîEÀ˘i⁄
 
exãnds
 
	mLódîEÀ˘i⁄
 {

54 
public
 
MockLódîEÀ˘i⁄
(
Qu‹umPìr
 
£lf
) {

55 
su≥r
(
£lf
);

68 
public
 
VŸe
 
lookF‹Lódî
(Ë
throws
 
	mI¡îru±edEx˚±i⁄
 {

69 
	m£lf
.
£tCuºítVŸe
(
√w
 
VŸe
(
£lf
.
gëId
(),

70 
£lf
.
gëLa°LoggedZxid
()));

72 
byã
 
	mªque°Byãs
[] = 
√w
 byte[4];

73 
ByãBuf„r
 
	mªque°Buf„r
 = ByãBuf„r.
wøp
(
ªque°Byãs
);

74 
byã
 
	mª•⁄£Byãs
[] = 
√w
 byte[28];

75 
ByãBuf„r
 
	mª•⁄£Buf„r
 = ByãBuf„r.
wøp
(
ª•⁄£Byãs
);

77 
D©agømSockë
 
	ms
 = 
nuŒ
;

78 
	måy
 {

79 
	ms
 = 
√w
 
D©agømSockë
();

80 
	ms
.
£tSoTimeout
(200);

81 } 
ˇtch
 (
SockëEx˚±i⁄
 
e1
) {

82 
	mLOG
.
îr‹
("SockëÉx˚±i⁄ whí cª©ög sockë f‹ÜódîÉÀ˘i⁄", 
e1
);

83 
	mSy°em
.
exô
(4);

85 
D©agømPackë
 
	mªque°Packë
 = 
√w
 D©agømPackë(
ªque°Byãs
,

86 
ªque°Byãs
.
Àngth
);

87 
D©agømPackë
 
	mª•⁄£Packë
 = 
√w
 D©agømPackë(
ª•⁄£Byãs
,

88 
ª•⁄£Byãs
.
Àngth
);

89 
	mxid
 = 
ïochGí
.
√xtI¡
();

90 
	m£lf
.
isRu¬ög
()) {

91 
	mHashM≠
<
	mI√tSockëAddªss
, 
	mVŸe
> 
	mvŸes
 =

92 
√w
 
HashM≠
<
I√tSockëAddªss
, 
	mVŸe
>(
	m£lf
.
gëVŸögVõw
().
size
());

94 
	mªque°Buf„r
.
˛ór
();

95 
	mªque°Buf„r
.
putI¡
(
xid
);

96 
	mªque°Packë
.
£tLígth
(4);

97 
	mHashSë
<
	mL⁄g
> 
	mhórdFrom
 = 
√w
 
HashSë
<
L⁄g
>();

98 
Qu‹umSîvî
 
	m£rvî
 :

99 
£lf
.
gëVŸögVõw
().
vÆues
())

101 
LOG
.
öfo
("Sîvîáddªss: " + 
£rvî
.
addr
);

102 
	måy
 {

103 
	mªque°Packë
.
£tSockëAddªss
(
£rvî
.
addr
);

104 } 
ˇtch
 (
IŒegÆArgumítEx˚±i⁄
 
e
) {

108 
throw
 
√w
 
IŒegÆArgumítEx˚±i⁄
(

110 + 
e
.
gëMesßge
(Ë+ " wôháddr:" + 
£rvî
.
addr
,

111 
e
);

114 
	måy
 {

115 
	ms
.
£nd
(
ªque°Packë
);

116 
	mª•⁄£Packë
.
£tLígth
(
ª•⁄£Byãs
.
Àngth
);

117 
	ms
.
ª˚ive
(
ª•⁄£Packë
);

118 i‡(
	mª•⁄£Packë
.
gëLígth
(Ë!
ª•⁄£Byãs
.
Àngth
) {

119 
LOG
.
îr‹
("Gotá shortÑesponse: "

120 + 
ª•⁄£Packë
.
gëLígth
());

123 
	mª•⁄£Buf„r
.
˛ór
();

124 
	mªcvedXid
 = 
ª•⁄£Buf„r
.
gëI¡
();

125 i‡(
	mªcvedXid
 !
xid
) {

126 
LOG
.
îr‹
("GŸ bad xid:Éx≥˘ed " + 
xid


127 + " gŸ " + 
ªcvedXid
);

130 
	m≥îId
 = 
ª•⁄£Buf„r
.
gëL⁄g
();

131 
	mhórdFrom
.
add
(
≥îId
);

133 
VŸe
 
	mvŸe
 = 
√w
 VŸe(
ª•⁄£Buf„r
.
gëL⁄g
(),

134 
ª•⁄£Buf„r
.
gëL⁄g
());

135 
I√tSockëAddªss
 
	maddr
 =

136 (
I√tSockëAddªss
Ë
ª•⁄£Packë


137 .
gëSockëAddªss
();

138 
	mvŸes
.
put
(
addr
, 
vŸe
);

140 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

141 
	mLOG
.
w¨n
("IgnoringÉxception whileÜooking forÜeader",

142 
e
);

148 
EÀ˘i⁄Resu…
 
	mªsu…
 = 
cou¡VŸes
(
vŸes
, 
hórdFrom
);

156 
	mLOG
.
öfo
("Waiting for firstÑound of votingÅo complete");

157 
	mœtch
.
cou¡Down
();

158 
	mAs£π
.
as£πTrue
("ThreadÅimed out waiting forÜatch",

159 
œtch
.
awaô
(10000, 
TimeUnô
.
MILLISECONDS
));

165 i‡(
	mªsu…
.
	mnumVÆidVŸes
 == 0) {

166 
£lf
.
£tCuºítVŸe
(
√w
 
VŸe
(£lf.
gëId
(),

167 
£lf
.
gëLa°LoggedZxid
()));

169 i‡(
	mªsu…
.
	mwö√r
.
gëId
() >= 0) {

170 
£lf
.
£tCuºítVŸe
(
ªsu…
.
vŸe
);

172 i‡(
	mªsu…
.
	mwönögCou¡
 > (
	m£lf
.
gëVŸögVõw
().
size
() / 2)) {

173 
	m£lf
.
£tCuºítVŸe
(
ªsu…
.
wö√r
);

174 
	ms
.
˛o£
();

175 
VŸe
 
	mcuºít
 = 
£lf
.
gëCuºítVŸe
();

176 
	mLOG
.
öfo
("FoundÜódî: myÅy≥ is: " + 
£lf
.
gëLó∫îTy≥
());

184 i‡(
	m£lf
.
gëLó∫îTy≥
(Ë=
Ló∫îTy≥
.
OBSERVER
) {

185 i‡(
cuºít
.
gëId
(Ë=
£lf
.getId()) {

187 
LOG
.
îr‹
("OBSERVERÉlectedásÜeader!");

188 
	mThªad
.
¶ìp
(100);

191 
	m£lf
.
£tPìrSèã
(
SîvîSèã
.
OBSERVING
);

192 
	mThªad
.
¶ìp
(100);

193  
	mcuºít
;

196 
	m£lf
.
£tPìrSèã
((
cuºít
.
gëId
(Ë=
£lf
.getId())

197 ? 
SîvîSèã
.
LEADING
: SîvîSèã.
FOLLOWING
);

198 i‡(
	m£lf
.
gëPìrSèã
(Ë=
SîvîSèã
.
FOLLOWING
) {

199 
Thªad
.
¶ìp
(100);

201  
	mcuºít
;

206 
	mThªad
.
¶ìp
(1000);

208  
	mnuŒ
;

212 
public
 cœs†
	cMockQu‹umPìr
 
exãnds
 
	gQu‹umPìr
 {

213 
public
 
MockQu‹umPìr
(
M≠
<
L⁄g
,
Qu‹umSîvî
> 
qu‹umPìrs
, 
Fûe
 
¢≠Dú
,

214 
Fûe
 
logDú
, 
˛õ¡P‹t
, 
ñe˘i⁄Alg
,

215 
myid
, 
tickTime
, 
öôLimô
, 
syncLimô
)

216 
throws
 
	gIOEx˚±i⁄


218 
su≥r
(
qu‹umPìrs
, 
¢≠Dú
, 
logDú
, 
ñe˘i⁄Alg
,

219 
myid
,
tickTime
, 
öôLimô
,
syncLimô
,

220 
SîvîCnxnFa˘‹y
.
¸óãFa˘‹y
(
˛õ¡P‹t
, -1),

221 
√w
 
Qu‹umMaj
(
cou¡P¨ticù™ts
(
qu‹umPìrs
)));

224 
¥Ÿe˘ed
 
EÀ˘i⁄
 
¸óãEÀ˘i⁄Alg‹ôhm
(
ñe˘i⁄Alg‹ôhm
){

225 
	gLOG
.
öfo
("Returning mockedÜeaderÉlection");

226  
√w
 
MockLódîEÀ˘i⁄
(
this
);

231 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
FLELo°MesßgeTe°
.
˛ass
);

233 
	gcou¡
;

234 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
;

235 
Fûe
 
	gtmpdú
[];

236 
	gp‹t
[];

238 @
Bef‹e


239 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

240 
cou¡
 = 3;

242 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>(
cou¡
);

243 
tmpdú
 = 
√w
 
Fûe
[
cou¡
];

244 
p‹t
 = 
√w
 [
cou¡
];

245 
	}
}

247 
föÆ
 
Cou¡DownL©ch
 
	gœtch
 = 
√w
 CountDownLatch(2);

248 
föÆ
 
Cou¡DownL©ch
 
	gmockL©ch
 = 
√w
 CountDownLatch(1);

250 ˛as†
	cLEThªad
 
exãnds
 
	gThªad
 {

251 
	gi
;

252 
Qu‹umPìr
 
	g≥î
;

255 
LEThªad
(
Qu‹umPìr
 
≥î
, 
i
) {

256 
	gthis
.
	gi
 = 
i
;

257 
	gthis
.
	g≥î
 = 
≥î
;

258 
	gLOG
.
öfo
("C⁄°ru˘‹: " + 
gëName
());

262 
public
 
run
(){

263 
	gåy
{

264 
VŸe
 
	gv
 = 
nuŒ
;

265 
	g≥î
.
£tPìrSèã
(
SîvîSèã
.
LOOKING
);

266 
	gLOG
.
öfo
("GoögÅÿˇŒÜódîÉÀ˘i⁄: " + 
i
);

267 
	gv
 = 
≥î
.
gëEÀ˘i⁄Alg
().
lookF‹Lódî
();

269 i‡(
	gv
 =
nuŒ
){

270 
As£π
.
Áû
("Thªad " + 
i
 + " gotáÇull vote");

277 
	g≥î
.
£tCuºítVŸe
(
v
);

279 
	gLOG
.
öfo
("FöishedÉÀ˘i⁄: " + 
i
 + ", " + 
v
.
gëId
());

280 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

281 
	ge
.
¥ötSèckTø˚
();

283 
	gLOG
.
öfo
("Joining");

296 @
Te°


297 
public
 
	$ã°N⁄Tîmö©i⁄
(Ë
throws
 
Ex˚±i⁄
 {

298 
LOG
.
	`öfo
("Te°N⁄Tîmö©i⁄: " + 
	`gëTe°Name
()+ ", " + 
cou¡
);

299 
i
 = 0; i < 
cou¡
; i++) {

300 
˛õ¡p‹t
 = 
P‹tAssignmít
.
	`unique
();

301 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

302 
√w
 
	`Qu‹umSîvî
(
i
,

303 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
˛õ¡p‹t
),

304 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
P‹tAssignmít
.
	`unique
())));

305 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

306 
p‹t
[
i
] = 
˛õ¡p‹t
;

312 
Qu‹umPìr
 
≥î1
 = 
√w
 
	`MockQu‹umPìr
(
≥îs
, 
tmpdú
[0],Åmpdú[0], 
p‹t
[0], 0, 0, 2, 2, 2);

313 
≥î1
.
	`°¨tLódîEÀ˘i⁄
();

314 
LEThªad
 
thªad1
 = 
√w
 
	`LEThªad
(
≥î1
, 0);

316 
Qu‹umPìr
 
≥î2
 = 
√w
 
	`MockQu‹umPìr
(
≥îs
, 
tmpdú
[1],Åmpdú[1], 
p‹t
[1], 0, 1, 2, 2, 2);

317 
≥î2
.
	`°¨tLódîEÀ˘i⁄
();

318 
LEThªad
 
thªad2
 = 
√w
 
	`LEThªad
(
≥î2
, 1);

323 
Thªad
 
thªad3
 = 
√w
 
	`Thªad
() {

324 
public
 
	`run
() {

325 
åy
 {

326 
	`mockSîvî
();

327 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

328 
LOG
.
	`îr‹
("ex˚±i⁄", 
e
);

329 
As£π
.
	`Áû
("Ex˚±i⁄ whíÑu¬ög mocked sîvî " + 
e
);

334 
thªad3
.
	`°¨t
();

335 
As£π
.
	`as£πTrue
("mockServer didÇot start in 5s",

336 
mockL©ch
.
	`awaô
(5000, 
TimeUnô
.
MILLISECONDS
));

337 
thªad1
.
	`°¨t
();

338 
thªad2
.
	`°¨t
();

342 
thªad1
.
	`joö
(15000);

343 
thªad2
.
	`joö
(15000);

344 
thªad3
.
	`joö
(15000);

345 i‡(
thªad1
.
	`isAlive
(Ë|| 
thªad2
.isAlive(Ë|| 
thªad3
.isAlive()) {

346 
As£π
.
	`Áû
("Threads didn't join");

348 
	}
}

354 
	$mockSîvî
(Ë
throws
 
I¡îru±edEx˚±i⁄
, 
IOEx˚±i⁄
 {

355 
byã
 
b
[] = 
√w
 byte[36];

356 
ByãBuf„r
 
ª•⁄£Buf„r
 = ByãBuf„r.
	`wøp
(
b
);

357 
D©agømPackë
 
∑ckë
 = 
√w
 
	`D©agømPackë
(
b
, b.
Àngth
);

358 
Qu‹umSîvî
 
£rvî
 = 
≥îs
.
	`gë
(
L⁄g
.
	`vÆueOf
(2));

359 
D©agømSockë
 
udpSockë
 = 
√w
 
	`D©agømSockë
(
£rvî
.
addr
.
	`gëP‹t
());

360 
LOG
.
	`öfo
("In MockServer");

361 
mockL©ch
.
	`cou¡Down
();

362 
VŸe
 
cuºít
 = 
√w
 
	`VŸe
(2, 1);

363 
i
=0;i<2;++i) {

364 
udpSockë
.
	`ª˚ive
(
∑ckë
);

365 
ª•⁄£Buf„r
.
	`ªwöd
();

366 
LOG
.
	`öfo
("Re˚ived " + 
ª•⁄£Buf„r
.
	`gëI¡
(Ë+ " " +Ñe•⁄£Buf„r.
	`gëL⁄g
() + " " +ÑesponseBuffer.getLong());

367 
LOG
.
	`öfo
("From " + 
∑ckë
.
	`gëSockëAddªss
());

368 
ª•⁄£Buf„r
.
	`˛ór
();

369 
ª•⁄£Buf„r
.
	`gëI¡
();

370 
ª•⁄£Buf„r
.
	`putL⁄g
(2);

372 
ª•⁄£Buf„r
.
	`putL⁄g
(
cuºít
.
	`gëId
());

373 
ª•⁄£Buf„r
.
	`putL⁄g
(
cuºít
.
	`gëZxid
());

374 
∑ckë
.
	`£tD©a
(
b
);

375 
udpSockë
.
	`£nd
(
∑ckë
);

377 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LETest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gR™dom
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódîEÀ˘i⁄
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gVŸe
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

38 
public
 cœs†
	cLETe°
 
exãnds
 
	mZKTe°Ca£
 {

39 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
LETe°
.
˛ass
);

40 vﬁ©ûê
VŸe
 
	mvŸes
[];

41 vﬁ©ûê
boﬁón
 
	mÀadîDõs
;

42 vﬁ©ûê
	mÀadî
 = -1;

43 
R™dom
 
	mønd
 = 
√w
 Random();

44 ˛as†
	cLEThªad
 
exãnds
 
	mThªad
 {

45 
LódîEÀ˘i⁄
 
	mÀ
;

46 
	mi
;

47 
Qu‹umPìr
 
	m≥î
;

48 
LEThªad
(
LódîEÀ˘i⁄
 
À
, 
Qu‹umPìr
 
≥î
, 
i
) {

49 
	mthis
.
	mÀ
 = 
À
;

50 
	mthis
.
	mi
 = 
i
;

51 
	mthis
.
	m≥î
 = 
≥î
;

53 
public
 
run
() {

54 
	måy
 {

55 
VŸe
 
	mv
 = 
nuŒ
;

56 
	måue
) {

57 
	mv
 = 
À
.
lookF‹Lódî
();

58 
	mvŸes
[
i
] = 
v
;

59 i‡(
	mv
.
gëId
(Ë=
i
) {

60 
synchr⁄ized
(
LETe°
.
this
) {

61 i‡(
ÀadîDõs
) {

62 
ÀadîDõs
 = 
Ál£
;

63 
	m≥î
.
°›LódîEÀ˘i⁄
();

64 
	mLOG
.
öfo
("Lódî " + 
i
 + " dying");

65 
	mÀadî
 = -2;

67 
	mÀadî
 = 
i
;

69 
	mLETe°
.
	mthis
.
nŸifyAŒ
();

73 
synchr⁄ized
(
LETe°
.
this
) {

74 i‡(
	mÀadî
 == -1) {

75 
LETe°
.
this
.
waô
();

77 i‡(
	mÀadî
 =
v
.
gëId
()) {

81 
	mThªad
.
¶ìp
(
ønd
.
√xtI¡
(1000));

82 
	m≥î
.
£tCuºítVŸe
(
√w
 
VŸe
(
≥î
.
gëId
(), 0));

84 
	mLOG
.
öfo
("Thªad " + 
i
 + " vŸe†" + 
v
);

85 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

86 
	me
.
¥ötSèckTø˚
();

91 @
Te°


92 
public
 
	$ã°LE
(Ë
throws
 
Ex˚±i⁄
 {

93 
cou¡
 = 30;

94 
HashM≠
<
L⁄g
,
Qu‹umSîvî
> 
≥îs
 = 
√w
 HashM≠<L⁄g,Qu‹umSîvî>(
cou¡
);

95 
AºayLi°
<
LEThªad
> 
thªads
 = 
√w
 AºayLi°<LEThªad>(
cou¡
);

96 
Fûe
 
tmpdú
[] = 
√w
 Fûe[
cou¡
];

97 
p‹t
[] = 
√w
 [
cou¡
];

98 
vŸes
 = 
√w
 
VŸe
[
cou¡
];

99 
i
 = 0; i < 
cou¡
; i++) {

100 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
),

101 
√w
 
	`Qu‹umSîvî
(
i
,

102 
√w
 
	`I√tSockëAddªss
("127.0.0.1",

103 
P‹tAssignmít
.
	`unique
())));

104 
tmpdú
[
i
] = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

105 
p‹t
[
i
] = 
P‹tAssignmít
.
	`unique
();

107 
LódîEÀ˘i⁄
 
À
[] = 
√w
 LódîEÀ˘i⁄[
cou¡
];

108 
ÀadîDõs
 = 
åue
;

109 
boﬁón
 
ÆlowO√BadLódî
 = 
ÀadîDõs
;

110 
i
 = 0; i < 
À
.
Àngth
; i++) {

111 
Qu‹umPìr
 
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
tmpdú
[
i
],Åmpdir[i],

112 
p‹t
[
i
], 0, i, 1000, 2, 2);

113 
≥î
.
	`°¨tLódîEÀ˘i⁄
();

114 
À
[
i
] = 
√w
 
	`LódîEÀ˘i⁄
(
≥î
);

115 
LEThªad
 
thªad
 = 
√w
 
	`LEThªad
(
À
[
i
], 
≥î
, i);

116 
thªad
.
	`°¨t
();

117 
thªads
.
	`add
(
thªad
);

119 
i
 = 0; i < 
thªads
.
	`size
(); i++) {

120 
thªads
.
	`gë
(
i
).
	`joö
(15000);

121 i‡(
thªads
.
	`gë
(
i
).
	`isAlive
()) {

122 
As£π
.
	`Áû
("Threads didn't join");

125 
id
 = 
vŸes
[0].
	`gëId
();

126 
i
 = 1; i < 
vŸes
.
Àngth
; i++) {

127 i‡(
vŸes
[
i
] =
nuŒ
) {

128 
As£π
.
	`Áû
("Thªad " + 
i
 + " hadáÇull vote");

130 i‡(
vŸes
[
i
].
	`gëId
(Ë!
id
) {

131 i‡(
ÆlowO√BadLódî
 && 
vŸes
[
i
].
	`gëId
() == i) {

132 
ÆlowO√BadLódî
 = 
Ál£
;

134 
As£π
.
	`Áû
("Thªad " + 
i
 + " gŸ " + 
vŸes
[i].
	`gëId
(Ë+ "Éx≥˘ed " + 
id
);

138 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûeI≈utSåóm
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yI≈utArchive
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNoNodeEx˚±i⁄
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aNode
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gD©aTªe
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeHódî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

48 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gTxnLog
.
	gTxnIãøt‹
;

49 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gCª©eTxn
;

50 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gDñëeTxn
;

51 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gMu…iTxn
;

52 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxn
;

53 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

54 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

55 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

56 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

57 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

59 
public
 cœs†
	cLﬂdFromLogTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

60 
¥iv©e
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

61 
¥iv©e
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 3000;

62 
¥iv©e
 
föÆ
 
	mNUM_MESSAGES
 = 300;

63 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
LﬂdFromLogTe°
.
˛ass
);

66 
¥iv©e
 
föÆ
 
	mTRANSACTION_OVERHEAD
 = 2;

67 
¥iv©e
 
föÆ
 
	mTOTAL_TRANSACTIONS
 = 
NUM_MESSAGES
 + 
TRANSACTION_OVERHEAD
;

68 
¥iv©e
 vﬁ©ûê
boﬁón
 
	mc⁄√˘ed
;

74 @
Te°


75 
public
 
	$ã°Lﬂd
(Ë
throws
 
Ex˚±i⁄
 {

77 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

78 
Clõ¡Ba£
.
	`£tupTe°Env
();

79 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

80 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

81 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

82 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

83 
f
.
	`°¨tup
(
zks
);

84 
As£π
.
	`as£πTrue
("waiting for server being up ",

85 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,
CONNECTION_TIMEOUT
));

86 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

89 
åy
 {

90 
i
 = 0; i< 
NUM_MESSAGES
; i++) {

91 
zk
.
	`¸óã
("/övÆid¢≠-" + 
i
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

92 
Cª©eMode
.
PERSISTENT
);

94 } 
föÆly
 {

95 
zk
.
	`˛o£
();

97 
f
.
	`shutdown
();

98 
As£π
.
	`as£πTrue
("waiting for serverÅo shutdown",

99 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

102 
Fûe
 
logDú
 = 
√w
 
	`Fûe
(
tmpDú
, 
FûeTxnS«pLog
.
vîsi⁄
 + FûeTxnS«pLog.
VERSION
);

103 
FûeTxnLog
 
txnLog
 = 
√w
 
	`FûeTxnLog
(
logDú
);

105 
TxnIãøt‹
 
ôr
 = 
txnLog
.
	`ªad
(0);

106 
ex≥˘edZxid
 = 0;

107 
œ°Zxid
 = 0;

108 
TxnHódî
 
hdr
;

110 
hdr
 = 
ôr
.
	`gëHódî
();

111 
ex≥˘edZxid
++;

112 
As£π
.
	`as£πTrue
("nŸÅhêßmêå™ß˘i⁄.Üa°Zxid=" + 
œ°Zxid
 + ", zxid=" + 
hdr
.
	`gëZxid
(),ÜastZxid != hdr.getZxid());

113 
As£π
.
	`as£πTrue
("ex˚±ögÇexàå™ß˘i⁄.Éx≥˘ed=" + 
ex≥˘edZxid
 + ",Ñëªived=" + 
hdr
.
	`gëZxid
(), (hdr.getZxid() ==ÉxpectedZxid));

114 
œ°Zxid
 = 
hdr
.
	`gëZxid
();

115 }
ôr
.
	`√xt
());

117 
As£π
.
	`as£πTrue
("¥o˚s£dáŒÅønß˘i⁄s. " + 
ex≥˘edZxid
 + " =" + 
TOTAL_TRANSACTIONS
, (expectedZxid == TOTAL_TRANSACTIONS));

123 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

124 
evít
.
	`gëTy≥
()) {

125 
N⁄e
:

126 
evít
.
	`gëSèã
()) {

127 
SyncC⁄√˘ed
:

128 
c⁄√˘ed
 = 
åue
;

130 
Disc⁄√˘ed
:

131 
c⁄√˘ed
 = 
Ál£
;

140 
	}
}

146 @
Te°


147 
public
 
	$ã°TxnFaûuª
(Ë
throws
 
Ex˚±i⁄
 {

148 
cou¡
 = 1;

149 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

150 
FûeTxnS«pLog
 
logFûe
 = 
√w
 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir);

151 
D©aTªe
 
dt
 = 
√w
 
	`D©aTªe
();

152 
dt
.
	`¸óãNode
("/ã°", 
√w
 
byã
[0], 
nuŒ
, 0, -1, 1, 1);

153 
cou¡
 = 1; count <= 3; count++) {

154 
dt
.
	`¸óãNode
("/ã°/" + 
cou¡
, 
√w
 
byã
[0], 
nuŒ
, 0, -1, count,

155 
Sy°em
.
	`cuºítTimeMûlis
());

157 
D©aNode
 
zk
 = 
dt
.
	`gëNode
("/test");

160 
LOG
.
	`öfo
("Aâem±ögÅÿ¸óã " + "/ã°/" + (
cou¡
 - 1));

161 
	`doOp
(
logFûe
, 
OpCode
.
¸óã
, "/ã°/" + (
cou¡
 - 1), 
dt
, 
zk
, -1);

163 
LOG
.
	`öfo
("Aâem±ögÅÿ¸óã " + "/ã°/" + (
cou¡
 - 1));

164 
	`doOp
(
logFûe
, 
OpCode
.
¸óã
, "/ã°/" + (
cou¡
 - 1), 
dt
, 
zk
,

165 
zk
.
°©
.
	`gëCvîsi⁄
() + 1);

167 
LOG
.
	`öfo
("Aâem±ögÅÿ¸óã " + "/ã°/" + (
cou¡
 - 1));

168 
	`doOp
(
logFûe
, 
OpCode
.
mu…i
, "/ã°/" + (
cou¡
 - 1), 
dt
, 
zk
,

169 
zk
.
°©
.
	`gëCvîsi⁄
() + 1);

171 
LOG
.
	`öfo
("Aâem±ögÅÿ¸óã " + "/ã°/" + (
cou¡
 - 1));

172 
	`doOp
(
logFûe
, 
OpCode
.
mu…i
, "/ã°/" + (
cou¡
 - 1), 
dt
, 
zk
,

179 
	}
}

184 
¥iv©e
 
	$doOp
(
FûeTxnS«pLog
 
logFûe
, 
ty≥
, 
Såög
 
∑th
,

185 
D©aTªe
 
dt
, 
D©aNode
 
∑ª¡
, 
cvîsi⁄
Ë
throws
 
Ex˚±i⁄
 {

186 
œ°Sœsh
 = 
∑th
.
	`œ°IndexOf
('/');

187 
Såög
 
∑ª¡Name
 = 
∑th
.
	`sub°rög
(0, 
œ°Sœsh
);

189 
¥evCvîsi⁄
 = 
∑ª¡
.
°©
.
	`gëCvîsi⁄
();

190 
¥evPzxid
 = 
∑ª¡
.
°©
.
	`gëPzxid
();

191 
Li°
<
Såög
> 
chûd
 = 
dt
.
	`gëChûdªn
(
∑ª¡Name
, 
nuŒ
,Çull);

192 
Såög
 
chûdSå
 = "";

193 
Såög
 
s
 : 
chûd
) {

194 
chûdSå
 +
s
 + " ";

196 
LOG
.
	`öfo
("Chûdªn: " + 
chûdSå
 + " f‹ " + 
∑ª¡Name
);

197 
LOG
.
	`öfo
("(cvîi⁄s,Özxid): " + 
¥evCvîsi⁄
 + ", " + 
¥evPzxid
);

199 
Rec‹d
 
txn
 = 
nuŒ
;

200 
TxnHódî
 
txnHódî
 = 
nuŒ
;

201 i‡(
ty≥
 =
OpCode
.
dñëe
) {

202 
txn
 = 
√w
 
	`DñëeTxn
(
∑th
);

203 
txnHódî
 = 
√w
 
	`TxnHódî
(0xabcd, 0x123, 
¥evPzxid
 + 1,

204 
Sy°em
.
	`cuºítTimeMûlis
(), 
OpCode
.
dñëe
);

205 } i‡(
ty≥
 =
OpCode
.
¸óã
) {

206 
txnHódî
 = 
√w
 
	`TxnHódî
(0xabcd, 0x123, 
¥evPzxid
 + 1,

207 
Sy°em
.
	`cuºítTimeMûlis
(), 
OpCode
.
¸óã
);

208 
txn
 = 
√w
 
	`Cª©eTxn
(
∑th
,Çew 
byã
[0], 
nuŒ
, 
Ál£
, 
cvîsi⁄
);

210 i‡(
ty≥
 =
OpCode
.
mu…i
) {

211 
txnHódî
 = 
√w
 
	`TxnHódî
(0xabcd, 0x123, 
¥evPzxid
 + 1,

212 
Sy°em
.
	`cuºítTimeMûlis
(), 
OpCode
.
¸óã
);

213 
txn
 = 
√w
 
	`Cª©eTxn
(
∑th
,Çew 
byã
[0], 
nuŒ
, 
Ál£
, 
cvîsi⁄
);

214 
AºayLi°
 
txnLi°
 = 
√w
 
	`AºayLi°
();

215 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

216 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

217 
txn
.
	`£rülize
(
bﬂ
, "request") ;

218 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

219 
Txn
 
txa˘
 = 
√w
 
	`Txn
(
OpCode
.
¸óã
, 
bb
.
	`¨øy
());

220 
txnLi°
.
	`add
(
txa˘
);

221 
txn
 = 
√w
 
	`Mu…iTxn
(
txnLi°
);

222 
txnHódî
 = 
√w
 
	`TxnHódî
(0xabcd, 0x123, 
¥evPzxid
 + 1,

223 
Sy°em
.
	`cuºítTimeMûlis
(), 
OpCode
.
mu…i
);

225 
logFûe
.
	`¥o˚ssTønß˘i⁄
(
txnHódî
, 
dt
, 
nuŒ
, 
txn
);

227 
√wCvîsi⁄
 = 
∑ª¡
.
°©
.
	`gëCvîsi⁄
();

228 
√wPzxid
 = 
∑ª¡
.
°©
.
	`gëPzxid
();

229 
chûd
 = 
dt
.
	`gëChûdªn
(
∑ª¡Name
, 
nuŒ
,Çull);

230 
chûdSå
 = "";

231 
Såög
 
s
 : 
chûd
) {

232 
chûdSå
 +
s
 + " ";

234 
LOG
.
	`öfo
("Chûdªn: " + 
chûdSå
 + " f‹ " + 
∑ª¡Name
);

235 
LOG
.
	`öfo
("(cvîi⁄s,Özxid): " +
√wCvîsi⁄
 + ", " + 
√wPzxid
);

236 
As£π
.
	`as£πTrue
(
ty≥
 + " <cversion,Özxid> verification failed. Expected: <" +

237 (
¥evCvîsi⁄
 + 1Ë+ ", " + (
¥evPzxid
 + 1) + ">, found: <" +

238 
√wCvîsi⁄
 + ", " + 
√wPzxid
 + ">",

239 (
√wCvîsi⁄
 =
¥evCvîsi⁄
 + 1 && 
√wPzxid
 =
¥evPzxid
 + 1));

240 
	}
}

245 @
Te°


246 
public
 
	$ã°Pad
(Ë
throws
 
Ex˚±i⁄
 {

247 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

248 
FûeTxnLog
 
txnLog
 = 
√w
 
	`FûeTxnLog
(
tmpDú
);

249 
TxnHódî
 
txnHódî
 = 
√w
 
	`TxnHódî
(0xabcd, 0x123, 0x123,

250 
Sy°em
.
	`cuºítTimeMûlis
(), 
OpCode
.
¸óã
);

251 
Rec‹d
 
txn
 = 
√w
 
	`Cª©eTxn
("/Te°",Çew 
byã
[0], 
nuŒ
, 
Ál£
, 1);

252 
txnLog
.
	`≠≥nd
(
txnHódî
, 
txn
);

253 
FûeI≈utSåóm
 
ö
 = 
√w
 
	`FûeI≈utSåóm
(
tmpDú
.
	`gëP©h
() + "/log." +

254 
L⁄g
.
	`toHexSåög
(
txnHódî
.
	`gëZxid
()));

255 
Bö¨yI≈utArchive
 
ü
 = Bö¨yI≈utArchive.
	`gëArchive
(
ö
);

256 
FûeHódî
 
hódî
 = 
√w
 
	`FûeHódî
();

257 
hódî
.
	`de£rülize
(
ü
, "fileheader");

258 
LOG
.
	`öfo
("Re˚ived magi¯: " + 
hódî
.
	`gëMagic
() +

259 " Ex≥˘ed : " + 
FûeTxnLog
.
TXNLOG_MAGIC
);

260 
As£π
.
	`as£πTrue
("Missing magicÇumber ",

261 
hódî
.
	`gëMagic
(Ë=
FûeTxnLog
.
TXNLOG_MAGIC
);

262 
	}
}

268 @
Te°


269 
public
 
	$ã°Re°‹e
(Ë
throws
 
Ex˚±i⁄
 {

271 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

272 
Clõ¡Ba£
.
	`£tupTe°Env
();

273 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

274 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(10000);

275 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

276 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

277 
f
.
	`°¨tup
(
zks
);

278 
As£π
.
	`as£πTrue
("waôög f‹ sîvî beög u∞", 
Clõ¡Ba£


279 .
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

280 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

282 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

283 !
c⁄√˘ed
) {

284 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

285 i‡(
íd
 - 
°¨t
 > 5000) {

286 
As£π
.
	`as£πTrue
("CouldÇot connect with server in 5 seconds",

287 
Ál£
);

289 
åy
 {

290 
Thªad
.
	`¶ìp
(200);

291 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

292 
LOG
.
	`w¨n
("Intrrupted");

297 
Såög
 
œ°P©h
 = 
nuŒ
;

298 
åy
 {

299 
zk
.
	`¸óã
("/övÆid¢≠", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

300 
Cª©eMode
.
PERSISTENT
);

301 
i
 = 0; i < 
NUM_MESSAGES
; i++) {

302 
œ°P©h
 = 
zk
.
	`¸óã
("/övÆid¢≠/ã°-", 
√w
 
byã
[0],

303 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

305 } 
föÆly
 {

306 
zk
.
	`˛o£
();

308 
Såög
[] 
tokís
 = 
œ°P©h
.
	`•lô
("-");

309 
Såög
 
ex≥˘edP©h
 = "/invalidsnap/test-"

310 + 
Såög
.
	`f‹m©
("%010d",

311 (
√w
 
	`I¡egî
(
tokís
[1])).
	`ötVÆue
() + 1);

312 
eZxid
 = 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
();

314 
zks
.
	`gëZKD©aba£
().
	`£éa°Pro˚s£dZxid
(

315 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
() - 10);

316 
LOG
.
	`öfo
("SetÜastProcessedZxidÅo "

317 + 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
());

319 
zks
.
	`èkeS«pshŸ
();

320 
zks
.
	`shutdown
();

321 
f
.
	`shutdown
();

323 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

324 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(10000);

325 
f
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

326 
f
.
	`°¨tup
(
zks
);

327 
As£π
.
	`as£πTrue
("waôög f‹ sîvî beög u∞", 
Clõ¡Ba£


328 .
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

329 
c⁄√˘ed
 = 
Ál£
;

330 
fZxid
 = 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
();

333 
As£π
.
	`as£πTrue
("Re°‹êÁûedÉx≥˘ed zxid=" + 
eZxid
 + " found="

334 + 
fZxid
, fZxid =
eZxid
);

335 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

336 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

337 !
c⁄√˘ed
) {

338 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

339 i‡(
íd
 - 
°¨t
 > 5000) {

340 
As£π
.
	`as£πTrue
("CouldÇot connect with server in 5 seconds",

341 
Ál£
);

343 
åy
 {

344 
Thªad
.
	`¶ìp
(200);

345 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

346 
LOG
.
	`w¨n
("Intrrupted");

352 
Såög
[] 
chûdªn
;

353 
Såög
 
∑th
;

354 
åy
 {

355 
chûdªn
 = 
zk
.
	`gëChûdªn
("/övÆid¢≠", 
Ál£
).
	`toAºay
(

356 
√w
 
Såög
[0]);

357 
∑th
 = 
zk
.
	`¸óã
("/övÆid¢≠/ã°-", 
√w
 
byã
[0],

358 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

359 } 
föÆly
 {

360 
zk
.
	`˛o£
();

362 
LOG
.
	`öfo
("Ex≥˘ed " + 
ex≥˘edP©h
 + " found " + 
∑th
);

363 
As£π
.
	`as£πTrue
("Error in sequential znode creationÉxpected "

364 + 
ex≥˘edP©h
 + " found " + 
∑th
,Ö©h.
	`equÆs
(expectedPath));

365 
As£π
.
	`as£πTrue
("U√x≥˘edÇumbî o‡chûdª¿" + 
chûdªn
.
Àngth


366 + "Éx≥˘ed " + 
NUM_MESSAGES
,

367 (
chûdªn
.
Àngth
 =
NUM_MESSAGES
));

368 
f
.
	`shutdown
();

369 
	}
}

375 @
Te°


376 
public
 
	$ã°Re°‹eWôhTønß˘i⁄Eº‹s
(Ë
throws
 
Ex˚±i⁄
 {

378 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

379 
Clõ¡Ba£
.
	`£tupTe°Env
();

380 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

381 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(10000);

382 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

383 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

384 
f
.
	`°¨tup
(
zks
);

385 
As£π
.
	`as£πTrue
("waôög f‹ sîvî beög u∞", 
Clõ¡Ba£


386 .
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

387 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

389 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

390 !
c⁄√˘ed
) {

391 
íd
 = 
Sy°em
.
	`cuºítTimeMûlis
();

392 i‡(
íd
 - 
°¨t
 > 5000) {

393 
As£π
.
	`as£πTrue
("CouldÇot connect with server in 5 seconds",

394 
Ál£
);

396 
åy
 {

397 
Thªad
.
	`¶ìp
(200);

398 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

399 
LOG
.
	`w¨n
("Intrrupted");

404 
åy
 {

405 
i
 = 0; i < 
NUM_MESSAGES
; i++) {

406 
åy
 {

407 
zk
.
	`¸óã
("/övÆiddú/ã°-", 
√w
 
byã
[0],

408 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

409 } 
	`ˇtch
(
NoNodeEx˚±i⁄
 
e
) {

413 } 
föÆly
 {

414 
zk
.
	`˛o£
();

418 
zks
.
	`gëZKD©aba£
().
	`£éa°Pro˚s£dZxid
(

419 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
() - 10);

420 
LOG
.
	`öfo
("SetÜastProcessedZxidÅo "

421 + 
zks
.
	`gëZKD©aba£
().
	`gëD©aTªeLa°Pro˚s£dZxid
());

424 
zks
.
	`èkeS«pshŸ
();

425 
zks
.
	`shutdown
();

426 
f
.
	`shutdown
();

428 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

429 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(10000);

430 
f
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

431 
f
.
	`°¨tup
(
zks
);

432 
As£π
.
	`as£πTrue
("waôög f‹ sîvî beög u∞", 
Clõ¡Ba£


433 .
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

435 
f
.
	`shutdown
();

436 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/MaxCnxnsTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gnio
.
	gByãBuf„r
;

25 
imp‹t
 
	gjava
.
	gnio
.
	gch™√ls
.
	gSockëCh™√l
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Reque°
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
public
 cœs†
	cMaxCnxnsTe°
 
exãnds
 
	mClõ¡Ba£
 {

34 
föÆ
 
¥iv©e
 
	mnumCnxns
 = 30;

35 
AtomicI¡egî
 
	mnumC⁄√˘ed
 = 
√w
 AtomicInteger(0);

36 
Såög
 
	mho°
;

37 
	mp‹t
;

39 @
Ovîride


40 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

41 
maxCnxns
 = 
numCnxns
;

42 
su≥r
.
	`£tUp
();

45 ˛as†
	cCnxnThªad
 
exãnds
 
Thªad
 {

46 
i
;

47 
SockëCh™√l
 
sockë
;

48 
public
 
	`CnxnThªad
(
i
) {

49 
	`su≥r
("CnxnThªad-"+
i
);

50 
this
.
i
 = i;

53 
public
 
	`run
() {

54 
åy
 {

61 
SockëCh™√l
 
sCh™√l
 = SockëCh™√l.
	`›í
();

62 
sCh™√l
.
	`c⁄√˘
(
√w
 
	`I√tSockëAddªss
(
ho°
,
p‹t
));

64 
C⁄√˘Reque°
 
c⁄Req
 = 
√w
 
	`C⁄√˘Reque°
(0, 0,

65 10000, 0, "∑ssw‹d".
	`gëByãs
());

66 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

67 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

68 
bﬂ
.
	`wrôeI¡
(-1, "len");

69 
c⁄Req
.
	`£rülize
(
bﬂ
, "connect");

70 
baos
.
	`˛o£
();

71 
ByãBuf„r
 
bb
 = ByãBuf„r.
	`wøp
(
baos
.
	`toByãAºay
());

72 
bb
.
	`putI¡
(bb.
	`ˇ∑côy
() - 4);

73 
bb
.
	`ªwöd
();

86 
eof
 = 
sCh™√l
.
	`wrôe
(
bb
);

89 
sCh™√l
.
	`sockë
().
	`£tSoTimeout
(10000);

90 i‡(!
sCh™√l
.
	`sockë
().
	`isClo£d
()){

91 
eof
 = 
sCh™√l
.
	`sockë
().
	`gëI≈utSåóm
().
	`ªad
();

92 i‡(
eof
 != -1) {

93 
numC⁄√˘ed
.
	`ö¸emítAndGë
();

97 
	`ˇtch
 (
IOEx˚±i⁄
 
io
) {

101 
	}
}

108 @
Te°


109 
public
 
	$ã°MaxCnxns
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
{

110 
Såög
 
•lô
[] = 
ho°P‹t
.
	`•lô
(":");

111 
ho°
 = 
•lô
[0];

112 
p‹t
 = 
I¡egî
.
	`∑r£I¡
(
•lô
[1]);

113 
numThªads
 = 
numCnxns
 + 5;

114 
CnxnThªad
[] 
thªads
 = 
√w
 CnxnThªad[
numThªads
];

116 
i
=0;i<
numCnxns
;++i) {

117 
thªads
[
i
] = 
√w
 
	`CnxnThªad
(i);

120 
i
=0;i<
numCnxns
;++i) {

121 
thªads
[
i
].
	`°¨t
();

124 
i
=0;i<
numCnxns
;++i) {

125 
thªads
[
i
].
	`joö
();

127 
As£π
.
	`as£πSame
(
numCnxns
,
numC⁄√˘ed
.
	`gë
());

128 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.*;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOp
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTønß˘i⁄
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gCheckResu…
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gCª©eResu…
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gDñëeResu…
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gEº‹Resu…
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
.
	gSëD©aResu…
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

46 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

47 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

48 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

50 
public
 cœs†
	cMu…iTønß˘i⁄Te°
 
exãnds
 
	mClõ¡Ba£
 {

51 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
Mu…iTønß˘i⁄Te°
.
˛ass
);

53 
¥iv©e
 
ZooKì≥r
 
	mzk
;

54 
¥iv©e
 
ZooKì≥r
 
	mzk_chroŸ
;

56 @
Bef‹e


57 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

58 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(150);

59 
su≥r
.
	`£tUp
();

60 
zk
 = 
	`¸óãClõ¡
();

64 @
Te°


65 
public
 
	$ã°ChRoŸCª©eDñëe
(Ë
throws
 
Ex˚±i⁄
 {

67 
Såög
 
chRoŸ
 = 
	`¸óãNameS∑˚
();

69 
zk_chroŸ
 = 
	`¸óãClõ¡
(
this
.
ho°P‹t
 + 
chRoŸ
);

70 
Op
 
¸óãChûd
 = Op.
	`¸óã
("/myid", 
√w
 
byã
[0],

71 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

72 
zk_chroŸ
.
	`mu…i
(
Aºays
.
	`asLi°
(
¸óãChûd
));

74 
As£π
.
	`as£πNŸNuŒ
("zNodêi†nŸ cª©ed undî chroŸ:" + 
chRoŸ
, 
zk


75 .
	`exi°s
(
chRoŸ
 + "/myid", 
Ál£
));

76 
As£π
.
	`as£πNŸNuŒ
("zNodêi†nŸ cª©ed undî chroŸ:" + 
chRoŸ
,

77 
zk_chroŸ
.
	`exi°s
("/myid", 
Ál£
));

78 
As£π
.
	`as£πNuŒ
("zNode is created directly under '/', ignored configured chroot",

79 
zk
.
	`exi°s
("/myid", 
Ál£
));

82 
Op
 
dñëeChûd
 = Op.
	`dñëe
("/myid", 0);

83 
zk_chroŸ
.
	`mu…i
(
Aºays
.
	`asLi°
(
dñëeChûd
));

84 
As£π
.
	`as£πNuŒ
("zNodêexi°†undî chroŸ:" + 
chRoŸ
, 
zk
.
	`exi°s
(

85 
chRoŸ
 + "/myid", 
Ál£
));

86 
As£π
.
	`as£πNuŒ
("zNodêexi°†undî chroŸ:" + 
chRoŸ
, 
zk_chroŸ


87 .
	`exi°s
("/myid", 
Ál£
));

88 
	}
}

90 @
Te°


91 
public
 
	$ã°ChRoŸSëD©a
(Ë
throws
 
Ex˚±i⁄
 {

93 
Såög
 
chRoŸ
 = 
	`¸óãNameS∑˚
();

95 
zk_chroŸ
 = 
	`¸óãClõ¡
(
this
.
ho°P‹t
 + 
chRoŸ
);

96 
Såög
[] 
«mes
 = {"/multi0", "/multi1", "/multi2"};

97 
Li°
<
Op
> 
›s
 = 
√w
 
AºayLi°
<Op>();

99 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

100 
›s
.
	`add
(
Op
.
	`¸óã
(
«mes
[
i
], 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

101 
Cª©eMode
.
PERSISTENT
));

102 
›s
.
	`add
(
Op
.
	`£tD©a
(
«mes
[
i
],Çames[i].
	`gëByãs
(), 0));

105 
zk_chroŸ
.
	`mu…i
(
›s
) ;

107 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

108 
As£π
.
	`as£πAºayEquÆs
("zNodêd©®nŸ m©chög", 
«mes
[
i
]

109 .
	`gëByãs
(), 
zk_chroŸ
.
	`gëD©a
(
«mes
[
i
], 
Ál£
, 
nuŒ
));

111 
	}
}

113 @
Te°


114 
public
 
	$ã°ChRoŸCheck
(Ë
throws
 
Ex˚±i⁄
 {

116 
Såög
 
chRoŸ
 = 
	`¸óãNameS∑˚
();

118 
zk_chroŸ
 = 
	`¸óãClõ¡
(
this
.
ho°P‹t
 + 
chRoŸ
);

119 
Såög
[] 
«mes
 = {"/multi0", "/multi1", "/multi2"};

120 
Li°
<
Op
> 
›s
 = 
√w
 
AºayLi°
<Op>();

121 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

122 
zk
.
	`¸óã
(
chRoŸ
 + 
«mes
[
i
], 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

123 
Cª©eMode
.
PERSISTENT
);

125 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

126 
›s
.
	`add
(
Op
.
	`check
(
«mes
[
i
], 0));

128 
zk_chroŸ
.
	`mu…i
(
›s
) ;

129 
	}
}

131 @
Te°


132 
public
 
	$ã°ChRoŸTønß˘i⁄
(Ë
throws
 
Ex˚±i⁄
 {

134 
Såög
 
chRoŸ
 = 
	`¸óãNameS∑˚
();

136 
zk_chroŸ
 = 
	`¸óãClõ¡
(
this
.
ho°P‹t
 + 
chRoŸ
);

137 
Såög
 
chûdP©h
 = "/myid";

138 
Tønß˘i⁄
 
å™ß˘i⁄
 = 
zk_chroŸ
.
	`å™ß˘i⁄
();

139 
å™ß˘i⁄
.
	`¸óã
(
chûdP©h
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

140 
Cª©eMode
.
PERSISTENT
);

141 
å™ß˘i⁄
.
	`check
(
chûdP©h
, 0);

142 
å™ß˘i⁄
.
	`£tD©a
(
chûdP©h
, chûdP©h.
	`gëByãs
(), 0);

143 
å™ß˘i⁄
.
	`commô
();

145 
As£π
.
	`as£πNŸNuŒ
("zNodêi†nŸ cª©ed undî chroŸ:" + 
chRoŸ
, 
zk


146 .
	`exi°s
(
chRoŸ
 + 
chûdP©h
, 
Ál£
));

147 
As£π
.
	`as£πNŸNuŒ
("zNodêi†nŸ cª©ed undî chroŸ:" + 
chRoŸ
,

148 
zk_chroŸ
.
	`exi°s
(
chûdP©h
, 
Ál£
));

149 
As£π
.
	`as£πNuŒ
("zNode is created directly under '/', ignored configured chroot",

150 
zk
.
	`exi°s
(
chûdP©h
, 
Ál£
));

151 
As£π
.
	`as£πAºayEquÆs
("zNodêd©®nŸ m©chög", 
chûdP©h


152 .
	`gëByãs
(), 
zk_chroŸ
.
	`gëD©a
(
chûdP©h
, 
Ál£
, 
nuŒ
));

154 
å™ß˘i⁄
 = 
zk_chroŸ
.
	`å™ß˘i⁄
();

156 
å™ß˘i⁄
.
	`dñëe
(
chûdP©h
, 1);

157 
å™ß˘i⁄
.
	`commô
();

159 
As£π
.
	`as£πNuŒ
("chroŸ:" + 
chRoŸ
 + "Éxi°†a·î dñëe", 
zk


160 .
	`exi°s
(
chRoŸ
 + "/myid", 
Ál£
));

161 
As£π
.
	`as£πNuŒ
("chroŸ:" + 
chRoŸ
 + "Éxistsáfter delete",

162 
zk_chroŸ
.
	`exi°s
("/myid", 
Ál£
));

163 
	}
}

165 
¥iv©e
 
Såög
 
	$¸óãNameS∑˚
(Ë
throws
 
I¡îru±edEx˚±i⁄
,

166 
Kì≥rEx˚±i⁄
 {

168 
Såög
 
chRoŸ
 = "/appsX";

169 
Op
 
¸óãChRoŸ
 = Op.
	`¸óã
(
chRoŸ
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

170 
Cª©eMode
.
PERSISTENT
);

171 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(
¸óãChRoŸ
));

172  
chRoŸ
;

173 
	}
}

175 @
Te°


176 
public
 
	$ã°Cª©e
(Ë
throws
 
Ex˚±i⁄
 {

177 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

178 
Op
.
	`¸óã
("/mu…i0", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

179 
Op
.
	`¸óã
("/mu…i1", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

180 
Op
.
	`¸óã
("/mu…i2", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
)

182 
zk
.
	`gëD©a
("/mu…i0", 
Ál£
, 
nuŒ
);

183 
zk
.
	`gëD©a
("/mu…i1", 
Ál£
, 
nuŒ
);

184 
zk
.
	`gëD©a
("/mu…i2", 
Ál£
, 
nuŒ
);

185 
	}
}

187 @
Te°


188 
public
 
	$ã°Cª©eDñëe
(Ë
throws
 
Ex˚±i⁄
 {

190 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

191 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

192 
Op
.
	`dñëe
("/multi", 0)

196 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
));

197 
	}
}

199 @
Te°


200 
public
 
	$ã°InvÆidVîsi⁄
(Ë
throws
 
Ex˚±i⁄
 {

202 
åy
 {

203 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

204 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

205 
Op
.
	`dñëe
("/multi", 1)

207 
As£π
.
	`Áû
("delete /multi should have failed");

208 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

211 
	}
}

213 @
Te°


214 
public
 
	$ã°Ne°edCª©e
(Ë
throws
 
Ex˚±i⁄
 {

216 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

218 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

219 
Op
.
	`¸óã
("/mu…i/a", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

220 
Op
.
	`¸óã
("/mu…i/a/1", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

223 
Op
.
	`dñëe
("/multi/a/1", 0),

224 
Op
.
	`dñëe
("/multi/a", 0),

225 
Op
.
	`dñëe
("/multi", 0)

229 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i/a/1", 
nuŒ
));

230 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i/a", 
nuŒ
));

231 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
));

232 
	}
}

234 @
Te°


235 
public
 
	$ã°SëD©a
(Ë
throws
 
Ex˚±i⁄
 {

237 
Såög
[] 
«mes
 = {"/multi0", "/multi1", "/multi2"};

238 
Li°
<
Op
> 
›s
 = 
√w
 
AºayLi°
<Op>();

240 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

241 
›s
.
	`add
(
Op
.
	`¸óã
(
«mes
[
i
], 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
));

242 
›s
.
	`add
(
Op
.
	`£tD©a
(
«mes
[
i
],Çames[i].
	`gëByãs
(), 0));

245 
zk
.
	`mu…i
(
›s
) ;

247 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

248 
As£π
.
	`as£πAºayEquÆs
(
«mes
[
i
].
	`gëByãs
(), 
zk
.
	`gëD©a
“ames[i], 
Ál£
, 
nuŒ
));

250 
	}
}

252 @
Te°


253 
public
 
	$ã°Upd©eC⁄Êi˘
(Ë
throws
 
Ex˚±i⁄
 {

255 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
));

257 
åy
 {

258 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

259 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

260 
Op
.
	`£tD©a
("/mu…i", "X".
	`gëByãs
(), 0),

261 
Op
.
	`£tD©a
("/mu…i", "Y".
	`gëByãs
(), 0)

263 
As£π
.
	`Áû
("Should haveÅhrowná KeeperException for invalid version");

264 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

266 
LOG
.
	`îr‹
("STACKTRACE: " + 
e
);

269 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
));

272 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

273 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

274 
Op
.
	`£tD©a
("/mu…i", "X".
	`gëByãs
(), 0),

275 
Op
.
	`£tD©a
("/mu…i", "Y".
	`gëByãs
(), 1)

278 
As£π
.
	`as£πAºayEquÆs
(
zk
.
	`gëD©a
("/mu…i", 
Ál£
, 
nuŒ
), "Y".
	`gëByãs
());

279 
	}
}

281 @
Te°


282 
public
 
	$Te°DñëeUpd©eC⁄Êi˘
(Ë
throws
 
Ex˚±i⁄
 {

285 
åy
 {

286 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

287 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

288 
Op
.
	`dñëe
("/multi", 0),

289 
Op
.
	`£tD©a
("/mu…i", "Y".
	`gëByãs
(), 0)

291 
As£π
.
	`Áû
("/multi should have been deleted so setData should have failed");

292 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

297 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
)) ;

298 
	}
}

300 @
Te°


301 
public
 
	$Te°GëResu…s
(Ë
throws
 
Ex˚±i⁄
 {

303 
åy
 {

304 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

305 
Op
.
	`¸óã
("/mu…i", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

306 
Op
.
	`dñëe
("/multi", 0),

307 
Op
.
	`£tD©a
("/mu…i", "Y".
	`gëByãs
(), 0),

308 
Op
.
	`¸óã
("/foo", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
)

310 
As£π
.
	`Áû
("/multi should have been deleted so setData should have failed");

311 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

313 
As£π
.
	`as£πNuŒ
(
zk
.
	`exi°s
("/mu…i", 
nuŒ
));

315 
OpResu…
 
r
 : 
e
.
	`gëResu…s
()) {

316 
LOG
.
	`öfo
("RESULT==> " + 
r
);

317 i‡(
r
 
ö°™˚of
 
Eº‹Resu…
) {

318 
Eº‹Resu…
 
î
 = (Eº‹Resu…Ë
r
;

319 
LOG
.
	`öfo
("ERROR RESULT: " + 
î
 + " ERR=>" + 
Kì≥rEx˚±i⁄
.
Code
.
	`gë
”r.
	`gëEº
()));

323 
	}
}

328 @
Te°


329 
public
 
	$ã°OpResu…EquÆs
() {

330 
	`›EquÆs
(
√w
 
	`Cª©eResu…
("/foo"),

331 
√w
 
	`Cª©eResu…
("/foo"),

332 
√w
 
	`Cª©eResu…
("nope"));

334 
	`›EquÆs
(
√w
 
	`CheckResu…
(),

335 
√w
 
	`CheckResu…
(),

336 
nuŒ
);

338 
	`›EquÆs
(
√w
 
	`SëD©aResu…
“ew 
	`Sèt
(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)),

339 
√w
 
	`SëD©aResu…
“ew 
	`Sèt
(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)),

340 
√w
 
	`SëD©aResu…
“ew 
	`Sèt
(11, 12, 13, 14, 15, 16, 17, 18, 19, 110, 111)));

342 
	`›EquÆs
(
√w
 
	`Eº‹Resu…
(1),

343 
√w
 
	`Eº‹Resu…
(1),

344 
√w
 
	`Eº‹Resu…
(2));

346 
	`›EquÆs
(
√w
 
	`DñëeResu…
(),

347 
√w
 
	`DñëeResu…
(),

348 
nuŒ
);

350 
	`›EquÆs
(
√w
 
	`Eº‹Resu…
(1),

351 
√w
 
	`Eº‹Resu…
(1),

352 
√w
 
	`Eº‹Resu…
(2));

353 
	}
}

355 
¥iv©e
 
	$›EquÆs
(
OpResu…
 
ex≥˘ed
, OpResu… 
vÆue
, OpResu… 
√¨
) {

356 
	`as£πEquÆs
(
vÆue
, value);

357 
	`as£πFÆ£
(
vÆue
.
	`equÆs
(
√w
 
	`Obje˘
()));

358 
	`as£πFÆ£
(
vÆue
.
	`equÆs
(
√¨
));

359 
	`as£πFÆ£
(
vÆue
.
	`equÆs
(vÆuê
ö°™˚of
 
Cª©eResu…
 ?

360 
√w
 
	`Eº‹Resu…
(1Ë:Çew 
	`Cª©eResu…
("nope2")));

361 
	`as£πTrue
(
vÆue
.
	`equÆs
(
ex≥˘ed
));

362 
	}
}

364 @
Te°


365 
public
 
	$ã°W©chesTriggîed
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

366 
HasTriggîedW©chî
 
w©chî
 = 
√w
 
	`HasTriggîedW©chî
();

367 
zk
.
	`gëChûdªn
("/", 
w©chî
);

368 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

369 
Op
.
	`¸óã
("/t", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

370 
Op
.
	`dñëe
("/t", -1)

372 
	`as£πTrue
(
w©chî
.
åiggîed
.
	`awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
));

373 
	}
}

375 @
Te°


376 
public
 
	$ã°NoW©chesTriggîedF‹FaûedMu…iReque°
(Ë
throws
 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

377 
HasTriggîedW©chî
 
w©chî
 = 
√w
 
	`HasTriggîedW©chî
();

378 
zk
.
	`gëChûdªn
("/", 
w©chî
);

379 
åy
 {

380 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

381 
Op
.
	`¸óã
("/t", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

382 
Op
.
	`dñëe
("/nonexisting", -1)

384 
	`Áû
("expectedÖrevious multi opÅo fail!");

385 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

388 
SyncCÆlback
 
cb
 = 
√w
 
	`SyncCÆlback
();

389 
zk
.
	`sync
("/", 
cb
, 
nuŒ
);

392 
cb
.
d⁄e
.
	`awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

393 
	`as£πEquÆs
(1, 
w©chî
.
åiggîed
.
	`gëCou¡
());

394 
	}
}

396 @
Te°


397 
public
 
	$ã°Tønß˘i⁄Buûdî
(Ë
throws
 
Ex˚±i⁄
 {

398 
Li°
<
OpResu…
> 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

399 .
	`¸óã
("/t1", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
)

400 .
	`¸óã
("/t1/chûd", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
)

401 .
	`¸óã
("/t2", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
)

402 .
	`commô
();

403 
	`as£πEquÆs
(3, 
ªsu…s
.
	`size
());

404 
OpResu…
 
r
 : 
ªsu…s
) {

405 
Cª©eResu…
 
c
 = (Cª©eResu…)
r
;

406 
	`as£πTrue
(
c
.
	`gëP©h
().
	`°¨tsWôh
("/t"));

407 
	`as£πNŸNuŒ
(
c
.
	`toSåög
());

409 
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/t1", 
Ál£
));

410 
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/t1/chûd", 
Ál£
));

411 
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/t2", 
Ál£
));

413 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

414 .
	`check
("/t1", 0)

415 .
	`check
("/t1/child", 0)

416 .
	`check
("/t2", 0)

417 .
	`commô
();

418 
	`as£πEquÆs
(3, 
ªsu…s
.
	`size
());

419 
OpResu…
 
r
 : 
ªsu…s
) {

420 
CheckResu…
 
c
 = (CheckResu…)
r
;

421 
	`as£πNŸNuŒ
(
c
.
	`toSåög
());

424 
åy
 {

425 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

426 .
	`check
("/t1", 0)

427 .
	`check
("/t1/child", 0)

428 .
	`check
("/t2", 1)

429 .
	`commô
();

430 
	`Áû
();

431 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
BadVîsi⁄Ex˚±i⁄
 
e
) {

435 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

436 .
	`check
("/t1", 0)

437 .
	`£tD©a
("/t1", 
√w
 
byã
[0], 0)

438 .
	`commô
();

439 
	`as£πEquÆs
(2, 
ªsu…s
.
	`size
());

440 
OpResu…
 
r
 : 
ªsu…s
) {

441 
	`as£πNŸNuŒ
(
r
.
	`toSåög
());

444 
åy
 {

445 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

446 .
	`check
("/t1", 1)

447 .
	`£tD©a
("/t1", 
√w
 
byã
[0], 2)

448 .
	`commô
();

449 
	`Áû
();

450 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
BadVîsi⁄Ex˚±i⁄
 
e
) {

454 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

455 .
	`check
("/t1", 1)

456 .
	`check
("/t1/child", 0)

457 .
	`check
("/t2", 0)

458 .
	`commô
();

459 
	`as£πEquÆs
(3, 
ªsu…s
.
	`size
());

461 
ªsu…s
 = 
zk
.
	`å™ß˘i⁄
()

462 .
	`dñëe
("/t2", -1)

463 .
	`dñëe
("/t1/child", -1)

464 .
	`commô
();

465 
	`as£πEquÆs
(2, 
ªsu…s
.
	`size
());

466 
OpResu…
 
r
 : 
ªsu…s
) {

467 
DñëeResu…
 
d
 = (DñëeResu…)
r
;

468 
	`as£πNŸNuŒ
(
d
.
	`toSåög
());

470 
	`as£πNŸNuŒ
(
zk
.
	`exi°s
("/t1", 
Ál£
));

471 
	`as£πNuŒ
(
zk
.
	`exi°s
("/t1/chûd", 
Ál£
));

472 
	`as£πNuŒ
(
zk
.
	`exi°s
("/t2", 
Ál£
));

473 
	}
}

475 
¥iv©e
 ˛as†
	cHasTriggîedW©chî
 
im∂emíts
 
	gW©chî
 {

476 
¥iv©e
 
föÆ
 
Cou¡DownL©ch
 
	gåiggîed
 = 
√w
 CountDownLatch(1);

478 @
Ovîride


479 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

480 
	gåiggîed
.
cou¡Down
();

483 
¥iv©e
 
˛ass
 
SyncCÆlback
 
im∂emíts
 
	gAsyncCÆlback
.
	gVoidCÆlback
 {

484 
¥iv©e
 
föÆ
 
Cou¡DownL©ch
 
	gd⁄e
 = 
√w
 CountDownLatch(1);

486 @
Ovîride


487 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

488 
	gd⁄e
.
cou¡Down
();

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteBase.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gNëtySîvîCnxnFa˘‹y
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·îCœss
;

24 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹eCœss
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬î
.
	gRunWôh
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gSuôe
;

31 @
	$RunWôh
(
Suôe
.
˛ass
)

32 
public
 cœs†
	cNioNëtySuôeBa£
 {

33 @
Bef‹eCœss


34 
public
 
	$£tUp
() {

35 
Sy°em
.
	`£tPr›îty
(
SîvîCnxnFa˘‹y
.
ZOOKEEPER_SERVER_CNXN_FACTORY
,

36 
NëtySîvîCnxnFa˘‹y
.
˛ass
.
	`gëName
());

39 @
A·îCœss


40 
public
 
	$ã¨Down
() {

41 
Sy°em
.
	`˛órPr›îty
(
SîvîCnxnFa˘‹y
.
ZOOKEEPER_SERVER_CNXN_FACTORY
);

42 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteHammerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gSuôe
;

26 @
	gSuôe
.
SuôeCœs£s
({

27 
AsyncHammîTe°
.
˛ass


29 
public
 cœs†
	cNioNëtySuôeHammîTe°
 
exãnds
 
	mNioNëtySuôeBa£
 {

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gru¬îs
.
	gSuôe
;

26 @
	gSuôe
.
SuôeCœs£s
({

27 
ACLTe°
.
˛ass
,

28 
AsyncOpsTe°
.
˛ass
,

29 
ChroŸClõ¡Te°
.
˛ass
,

30 
Clõ¡Te°
.
˛ass
,

31 
FourLëãrW‹dsTe°
.
˛ass
,

32 
NuŒD©aTe°
.
˛ass
,

33 
Sessi⁄Te°
.
˛ass
,

34 
W©chîTe°
.
˛ass


36 
public
 cœs†
	cNioNëtySuôeTe°
 
exãnds
 
	mNioNëtySuôeBa£
 {

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NullDataTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cNuŒD©aTe°
 
exãnds
 
Clõ¡Ba£
 
im∂emíts
 
	mSètCÆlback
 {

35 
Såög
 
	m¢≠Cou¡
;

36 
Cou¡DownL©ch
 
	m˙
 = 
√w
 CountDownLatch(1);

38 @
Ovîride


39 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

41 
¢≠Cou¡
 = 
Sy°em
.
	`gëPr›îty
("zookeeper.snapCount", "1024");

42 
Sy°em
.
	`£tPr›îty
("zookeeper.snapCount", "10");

43 
su≥r
.
	`£tUp
();

46 @
Ovîride


47 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

48 
Sy°em
.
	`£tPr›îty
("zookì≥r.¢≠Cou¡", 
¢≠Cou¡
);

49 
su≥r
.
	`ã¨Down
();

50 
	}
}

52 @
Te°


53 
public
 
	$ã°NuŒD©a
(Ë
throws
 
IOEx˚±i⁄
,

54 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

55 
Såög
 
∑th
 = "/SIZE";

56 
ZooKì≥r
 
zk
 = 
nuŒ
;

57 
zk
 = 
	`¸óãClõ¡
();

58 
åy
 {

59 
zk
.
	`¸óã
(
∑th
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

61 
zk
.
	`exi°s
(
∑th
, 
Ál£
);

62 
zk
.
	`exi°s
(
∑th
, 
Ál£
, 
this
 , 
nuŒ
);

63 
˙
.
	`awaô
(10, 
TimeUnô
.
SECONDS
);

64 
As£π
.
	`as£πSame
(0L, 
˙
.
	`gëCou¡
());

65 } 
föÆly
 {

66 if(
zk
 !
nuŒ
)

67 
zk
.
	`˛o£
();

70 
	}
}

72 
public
 
	$¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

73 
˙
.
	`cou¡Down
();

74 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/OOMTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

41 
public
 cœs†
	cOOMTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

42 @
Te°


43 
public
 
	$ã°OOM
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

45 i‡(
åue
)

47 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

50 
AºayLi°
<
byã
[]> 
hog
 = 
√w
 ArrayList<byte[]>();

51 
åue
) {

52 
åy
 {

53 
hog
.
	`add
(
√w
 
byã
[1024 * 1024 * 2]);

54 } 
	`ˇtch
 (
OutOfMem‹yEº‹
 
e
) {

55 
hog
.
	`ªmove
(0);

59 
Clõ¡Ba£
.
	`£tupTe°Env
();

60 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

62 
föÆ
 
PORT
 = 
P‹tAssignmít
.
	`unique
();

63 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

64 
f
.
	`°¨tup
(
zks
);

65 
As£π
.
	`as£πTrue
("waiting for server up",

66 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
PORT
,

67 
CONNECTION_TIMEOUT
));

69 
Sy°em
.
îr
.
	`¥öén
("OOM Stage 0");

70 
	`uã°Pªp
(
PORT
);

71 
Sy°em
.
out
.
	`¥öén
("Fªê" + 
Ru¡ime
.
	`gëRu¡ime
().
	`‰ìMem‹y
()

72 + "ÅŸÆ = " + 
Ru¡ime
.
	`gëRu¡ime
().
	`tŸÆMem‹y
() + " max = "

73 + 
Ru¡ime
.
	`gëRu¡ime
().
	`maxMem‹y
());

74 
Sy°em
.
îr
.
	`¥öén
("OOM Stage 1");

75 
i
 = 0; i < 1000; i++) {

76 
Sy°em
.
out
.
	`¥öén
(
i
);

77 
	`uã°Exi°s
(
PORT
);

79 
Sy°em
.
out
.
	`¥öén
("Fªê" + 
Ru¡ime
.
	`gëRu¡ime
().
	`‰ìMem‹y
()

80 + "ÅŸÆ = " + 
Ru¡ime
.
	`gëRu¡ime
().
	`tŸÆMem‹y
() + " max = "

81 + 
Ru¡ime
.
	`gëRu¡ime
().
	`maxMem‹y
());

82 
Sy°em
.
îr
.
	`¥öén
("OOM Stage 2");

83 
i
 = 0; i < 1000; i++) {

84 
Sy°em
.
out
.
	`¥öén
(
i
);

85 
	`uã°Gë
(
PORT
);

87 
Sy°em
.
out
.
	`¥öén
("Fªê" + 
Ru¡ime
.
	`gëRu¡ime
().
	`‰ìMem‹y
()

88 + "ÅŸÆ = " + 
Ru¡ime
.
	`gëRu¡ime
().
	`tŸÆMem‹y
() + " max = "

89 + 
Ru¡ime
.
	`gëRu¡ime
().
	`maxMem‹y
());

90 
Sy°em
.
îr
.
	`¥öén
("OOM Stage 3");

91 
i
 = 0; i < 1000; i++) {

92 
Sy°em
.
out
.
	`¥öén
(
i
);

93 
	`uã°Chûdªn
(
PORT
);

95 
Sy°em
.
out
.
	`¥öén
("Fªê" + 
Ru¡ime
.
	`gëRu¡ime
().
	`‰ìMem‹y
()

96 + "ÅŸÆ = " + 
Ru¡ime
.
	`gëRu¡ime
().
	`tŸÆMem‹y
() + " max = "

97 + 
Ru¡ime
.
	`gëRu¡ime
().
	`maxMem‹y
());

98 
hog
.
	`gë
(0)[0] = (
byã
) 1;

100 
f
.
	`shutdown
();

101 
As£π
.
	`as£πTrue
("waiting for server down",

102 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
PORT
,

103 
CONNECTION_TIMEOUT
));

106 
¥iv©e
 
	$uã°Exi°s
(
p‹t
)

107 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


109 
ZooKì≥r
 
zk
 =

110 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t
, 
CONNECTION_TIMEOUT
, 
this
);

111 
i
 = 0; i < 10000; i++) {

112 
zk
.
	`exi°s
("/this/∑th/d€¢t_exi°!", 
åue
);

114 
zk
.
	`˛o£
();

115 
	}
}

117 
¥iv©e
 
	$uã°Pªp
(
p‹t
)

118 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


120 
ZooKì≥r
 
zk
 =

121 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t
, 
CONNECTION_TIMEOUT
, 
this
);

122 
i
 = 0; i < 10000; i++) {

123 
zk
.
	`¸óã
("/" + 
i
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

125 
zk
.
	`˛o£
();

126 
	}
}

128 
¥iv©e
 
	$uã°Gë
(
p‹t
)

129 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


131 
ZooKì≥r
 
zk
 =

132 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t
, 
CONNECTION_TIMEOUT
, 
this
);

133 
i
 = 0; i < 10000; i++) {

134 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

135 
zk
.
	`gëD©a
("/" + 
i
, 
åue
, 
°©
);

137 
zk
.
	`˛o£
();

138 
	}
}

140 
¥iv©e
 
	$uã°Chûdªn
(
p‹t
)

141 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


143 
ZooKì≥r
 
zk
 =

144 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t
, 
CONNECTION_TIMEOUT
, 
this
);

145 
i
 = 0; i < 10000; i++) {

146 
zk
.
	`gëChûdªn
("/" + 
i
, 
åue
);

148 
zk
.
	`˛o£
();

149 
	}
}

156 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

157 
Sy°em
.
îr
.
	`¥öén
("GŸÉvíà" + 
evít
.
	`gëTy≥
() + " "

158 + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëP©h
());

159 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverHierarchicalQuorumTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

25 
public
 cœs†
	cOb£rvîHõørchiˇlQu‹umTe°
 
exãnds
 
	mHõørchiˇlQu‹umTe°
 {

26 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umBa£
.
˛ass
);

31 
	$°¨tSîvîs
(Ë
throws
 
Ex˚±i⁄
 {

32 
	`°¨tSîvîs
(
åue
);

35 
¥Ÿe˘ed
 
	$shutdown
(
Qu‹umPìr
 
qp
) {

36 
Qu‹umBa£
.
	`shutdown
(
qp
);

37 
	}
}

39 @
Te°


40 
public
 
	$ã°HõørchiˇlQu‹um
(Ë
throws
 
ThrowabÀ
 {

41 
cht
.
	`runHammî
(5, 10);

42 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverLETest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.*;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umSèts
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
public
 cœs†
	cOb£rvîLETe°
 
exãnds
 
	mZKTe°Ca£
 {

32 
föÆ
 
Qu‹umBa£
 
	mqb
 = 
√w
 QuorumBase();

33 
föÆ
 
Clõ¡Te°
 
	m˘
 = 
√w
 ClientTest();

35 @
Bef‹e


36 
public
 
	$e°ablishThªeP¨ticù™tO√Ob£rvîEn£mbÀ
(Ë
throws
 
Ex˚±i⁄
 {

37 
qb
.
	`£tUp
(
åue
);

38 
˘
.
ho°P‹t
 = 
qb
.hostPort;

39 
˘
.
	`£tUpAŒ
();

40 
qb
.
s5
.
	`shutdown
();

43 @
A·î


44 
public
 
	$shutdownQu‹um
(Ë
throws
 
Ex˚±i⁄
 {

45 
˘
.
	`ã¨DownAŒ
();

46 
qb
.
	`ã¨Down
();

47 
	}
}

55 @
Te°


56 
public
 
	$ã°LEWôhOb£rvî
(Ë
throws
 
Ex˚±i⁄
 {

57 
Qu‹umPìr
 
Àadî
 = 
nuŒ
;

58 
Qu‹umPìr
 
£rvî
 : 
Aºays
.
	`asLi°
(
qb
.
s1
, qb.
s2
, qb.
s3
)) {

59 i‡(
£rvî
.
	`gëSîvîSèã
().
	`equÆs
(

60 
Qu‹umSèts
.
Providî
.
FOLLOWING_STATE
)) {

61 
£rvî
.
	`shutdown
();

62 
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£


63 .
	`waôF‹SîvîDown
("127.0.0.1:"

64 + 
£rvî
.
	`gëClõ¡P‹t
(),

65 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

67 
	`as£πNuŒ
("M‹êth™ o√Üódî found", 
Àadî
);

68 
Àadî
 = 
£rvî
;

71 
	`as£πTrue
("Lódî i†nŸ i¿Lookög sèã", 
Clõ¡Ba£


72 .
	`waôF‹SîvîSèã
(
Àadî
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
,

73 
Qu‹umSèts
.
Providî
.
LOOKING_STATE
));

74 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverQuorumHammerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

23 
public
 cœs†
	cOb£rvîQu‹umHammîTe°
 
exãnds
 
	mQu‹umHammîTe°
 {

24 
public
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 
Clõ¡Te°
.
CONNECTION_TIMEOUT
;

27 @
	mBef‹e


28 @
Ovîride


29 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

30 
qb
.
	`£tUp
(
åue
);

31 
cht
.
ho°P‹t
 = 
qb
.hostPort;

32 
cht
.
	`£tUpAŒ
();

35 @
Te°


36 
public
 
	$ã°HammîBasic
(Ë
throws
 
ThrowabÀ
 {

37 
cht
.
	`ã°HammîBasic
();

38 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gC⁄√˘i⁄LossEx˚±i⁄
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrTe°Ba£
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

40 
public
 cœs†
	cOb£rvîTe°
 
exãnds
 
Qu‹umPìrTe°Ba£
 
im∂emíts
 
	mW©chî
{

41 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

42 
LoggîFa˘‹y
.
gëLoggî
(
Ob£rvîTe°
.
˛ass
);

44 
Cou¡DownL©ch
 
	mœtch
;

45 
ZooKì≥r
 
	mzk
;

46 
W©chedEvít
 
	mœ°Evít
 = 
nuŒ
;

56 @
Te°


57 
public
 
	$ã°Ob£rvî
(Ë
throws
 
Ex˚±i⁄
 {

58 
Clõ¡Ba£
.
	`£tupTe°Env
();

60 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(2);

62 
föÆ
 
PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

63 
föÆ
 
PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

64 
föÆ
 
PORT_OBS
 = 
P‹tAssignmít
.
	`unique
();

65 
föÆ
 
PORT_QP_LE1
 = 
P‹tAssignmít
.
	`unique
();

66 
föÆ
 
PORT_QP_LE2
 = 
P‹tAssignmít
.
	`unique
();

67 
föÆ
 
PORT_OBS_LE
 = 
P‹tAssignmít
.
	`unique
();

69 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

70 
föÆ
 
CLIENT_PORT_QP2
 = 
P‹tAssignmít
.
	`unique
();

71 
föÆ
 
CLIENT_PORT_OBS
 = 
P‹tAssignmít
.
	`unique
();

74 
Såög
 
qu‹umCfgSe˘i⁄
 =

76 "£rvî.1=127.0.0.1:" + (
PORT_QP1
)

77 + ":" + (
PORT_QP_LE1
)

78 + "\n£rvî.2=127.0.0.1:" + (
PORT_QP2
)

79 + ":" + (
PORT_QP_LE2
)

81 + (
PORT_OBS
)+ ":" + (
PORT_OBS_LE
) + ":observer";

82 
Såög
 
obsCfgSe˘i⁄
 = 
qu‹umCfgSe˘i⁄
 + "\npeerType=observer";

83 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

84 
MaöThªad
 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

85 
MaöThªad
 
q3
 = 
√w
 
	`MaöThªad
(3, 
CLIENT_PORT_OBS
, 
obsCfgSe˘i⁄
);

86 
q1
.
	`°¨t
();

87 
q2
.
	`°¨t
();

88 
q3
.
	`°¨t
();

89 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

90 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

91 
CONNECTION_TIMEOUT
));

92 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

93 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

94 
CONNECTION_TIMEOUT
));

95 
As£π
.
	`as£πTrue
("waiting for server 3 being up",

96 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_OBS
,

97 
CONNECTION_TIMEOUT
));

99 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
CLIENT_PORT_OBS
,

100 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
this
);

101 
zk
.
	`¸óã
("/ob°e°", "ã°".
	`gëByãs
(),
Ids
.
OPEN_ACL_UNSAFE
,

102 
Cª©eMode
.
PERSISTENT
);

105 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
("/ob°e°", 
nuŒ
,Çull)), "test");

108 
zk
.
	`sync
("/", 
nuŒ
,Çull);

109 
zk
.
	`£tD©a
("/ob°e°", "ã°2".
	`gëByãs
(), -1);

110 
zk
.
	`gëChûdªn
("/", 
Ál£
);

112 
As£π
.
	`as£πEquÆs
(
zk
.
	`gëSèã
(), 
Sèãs
.
CONNECTED
);

114 
LOG
.
	`öfo
("Shutting down server 2");

116 
q2
.
	`shutdown
();

118 
As£π
.
	`as£πTrue
("Waiting for server 2Åo shut down",

119 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"+
CLIENT_PORT_QP2
,

120 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

122 
LOG
.
	`öfo
("Server 2 down");

125 
œtch
.
	`awaô
();

126 
As£π
.
	`as£πNŸSame
("Client is still connectedÅoÇon-quorate cluster",

127 
Kì≥rSèã
.
SyncC⁄√˘ed
,
œ°Evít
.
	`gëSèã
());

129 
LOG
.
	`öfo
("LatchÑeturned");

131 
åy
 {

132 
As£π
.
	`as£πFÆ£
("Shouldn't getáÑesponse when clusterÇot quorate!",

133 
√w
 
	`Såög
(
zk
.
	`gëD©a
("/ob°e°", 
nuŒ
,ÇuŒ)).
	`equÆs
("test"));

135 
	`ˇtch
 (
C⁄√˘i⁄LossEx˚±i⁄
 
c
) {

136 
LOG
.
	`öfo
("ConnectionÜossÉxception caught -ÉnsembleÇot quorate (this isÉxpected)");

139 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

141 
LOG
.
	`öfo
("Restarting server 2");

144 
q2
 = 
√w
 
	`MaöThªad
(2, 
CLIENT_PORT_QP2
, 
qu‹umCfgSe˘i⁄
);

145 
q2
.
	`°¨t
();

147 
LOG
.
	`öfo
("Waiting for server 2Åo come up");

148 
As£π
.
	`as£πTrue
("waiting for server 2 being up",

149 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP2
,

150 
CONNECTION_TIMEOUT
));

152 
LOG
.
	`öfo
("Server 2 started, waiting forÜatch");

154 
œtch
.
	`awaô
();

157 
As£π
.
	`as£πTrue
("Client didn'tÑeconnectÅo quorateÉnsemble (state was" +

158 
œ°Evít
.
	`gëSèã
() + ")",

159 (
Kì≥rSèã
.
SyncC⁄√˘ed
==
œ°Evít
.
	`gëSèã
() ||

160 
Kì≥rSèã
.
Expúed
==
œ°Evít
.
	`gëSèã
()));

162 
LOG
.
	`öfo
("Shutting downáll servers");

164 
q1
.
	`shutdown
();

165 
q2
.
	`shutdown
();

166 
q3
.
	`shutdown
();

168 
LOG
.
	`öfo
("Closing zk client");

170 
zk
.
	`˛o£
();

171 
As£π
.
	`as£πTrue
("Waiting for server 1Åo shut down",

172 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"+
CLIENT_PORT_QP1
,

173 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

174 
As£π
.
	`as£πTrue
("Waiting for server 2Åo shut down",

175 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"+
CLIENT_PORT_QP2
,

176 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

177 
As£π
.
	`as£πTrue
("Waiting for server 3Åo shut down",

178 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:"+
CLIENT_PORT_OBS
,

179 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

186 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

187 
œ°Evít
 = 
evít
;

188 
œtch
.
	`cou¡Down
();

189 
LOG
.
	`öfo
("L©ch gŸÉvíà:: " + 
evít
);

190 
	}
}

197 @
Te°


198 
public
 
	$ã°Ob£rvîO∆y
(Ë
throws
 
Ex˚±i⁄
 {

199 
Clõ¡Ba£
.
	`£tupTe°Env
();

200 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

202 
Såög
 
qu‹umCfgSe˘i⁄
 =

203 "£rvî.1=127.0.0.1:" + (
P‹tAssignmít
.
	`unique
())

204 + ":" + (
P‹tAssignmít
.
	`unique
()) + ":observer\npeerType=observer\n";

206 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

207 
q1
.
	`°¨t
();

208 
q1
.
	`joö
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

209 
As£π
.
	`as£πFÆ£
(
q1
.
	`isAlive
());

210 
	}
}

216 @
Te°


217 
public
 
	$ã°Ob£rvîWôhSèndl⁄e
(Ë
throws
 
Ex˚±i⁄
 {

218 
Clõ¡Ba£
.
	`£tupTe°Env
();

219 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

221 
Såög
 
qu‹umCfgSe˘i⁄
 =

222 "£rvî.1=127.0.0.1:" + (
P‹tAssignmít
.
	`unique
())

223 + ":" + (
P‹tAssignmít
.
	`unique
()) + ":observer\n"

224 + "£rvî.2=127.0.0.1:" + (
P‹tAssignmít
.
	`unique
())

225 + ":" + (
P‹tAssignmít
.
	`unique
()) + "\npeerType=observer\n";

227 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

228 
q1
.
	`°¨t
();

229 
q1
.
	`joö
(
Clõ¡Ba£
.
CONNECTION_TIMEOUT
);

230 
As£π
.
	`as£πFÆ£
(
q1
.
	`isAlive
());

231 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/PurgeTxnTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gPurgeTxnLog
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
public
 cœs†
	cPurgeTxnTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

41 
¥iv©e
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

42 
¥iv©e
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 3000;

47 @
Te°


48 
public
 
	$ã°Purge
(Ë
throws
 
Ex˚±i⁄
 {

49 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

50 
Clõ¡Ba£
.
	`£tupTe°Env
();

51 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

52 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

53 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

54 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

55 
f
.
	`°¨tup
(
zks
);

56 
As£π
.
	`as£πTrue
("waiting for server being up ",

57 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,
CONNECTION_TIMEOUT
));

58 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

59 
åy
 {

60 
i
 = 0; i< 2000; i++) {

61 
zk
.
	`¸óã
("/övÆid¢≠-" + 
i
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

62 
Cª©eMode
.
PERSISTENT
);

64 } 
föÆly
 {

65 
zk
.
	`˛o£
();

67 
f
.
	`shutdown
();

68 
As£π
.
	`as£πTrue
("waiting for serverÅo shutdown",

69 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

71 
PurgeTxnLog
.
	`purge
(
tmpDú
,ÅmpDir, 3);

72 
FûeTxnS«pLog
 
¢≠log
 = 
√w
 
	`FûeTxnS«pLog
(
tmpDú
,ÅmpDir);

73 
Li°
<
Fûe
> 
li°Logs
 = 
¢≠log
.
	`födNRe˚¡S«pshŸs
(4);

74 
numS«ps
 = 0;

75 
Fûe
 
ff
: 
li°Logs
) {

76 i‡(
ff
.
	`gëName
().
	`°¨tsWôh
("snapshot")) {

77 
numS«ps
++;

80 
As£π
.
	`as£πTrue
("exa˘ly 3 s«pshŸ†", (
numS«ps
 == 3));

83 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

85 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumBase.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

24 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

30 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gEÀ˘i⁄
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

41 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

43 
public
 cœs†
	cQu‹umBa£
 
exãnds
 
	mClõ¡Ba£
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umBa£
.
˛ass
);

46 
Fûe
 
	ms1dú
, 
	ms2dú
, 
	ms3dú
, 
	ms4dú
, 
	ms5dú
;

47 
Qu‹umPìr
 
	ms1
, 
	ms2
, 
	ms3
, 
	ms4
, 
	ms5
;

48 
¥Ÿe˘ed
 
	mp‹t1
;

49 
¥Ÿe˘ed
 
	mp‹t2
;

50 
¥Ÿe˘ed
 
	mp‹t3
;

51 
¥Ÿe˘ed
 
	mp‹t4
;

52 
¥Ÿe˘ed
 
	mp‹t5
;

54 
¥Ÿe˘ed
 
	mp‹tLE1
;

55 
¥Ÿe˘ed
 
	mp‹tLE2
;

56 
¥Ÿe˘ed
 
	mp‹tLE3
;

57 
¥Ÿe˘ed
 
	mp‹tLE4
;

58 
¥Ÿe˘ed
 
	mp‹tLE5
;

60 @
Te°


62 
public
 
	$ã°NuŒ
() {

65 @
Ovîride


66 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

67 
	`£tUp
(
Ál£
);

68 
	}
}

70 
¥Ÿe˘ed
 
	$£tUp
(
boﬁón
 
wôhOb£rvîs
Ë
throws
 
Ex˚±i⁄
 {

71 
LOG
.
	`öfo
("Qu‹umBa£.£tu∞" + 
	`gëTe°Name
());

72 
	`£tupTe°Env
();

74 
JMXEnv
.
	`£tUp
();

76 
	`£tUpAŒ
();

78 
p‹t1
 = 
P‹tAssignmít
.
	`unique
();

79 
p‹t2
 = 
P‹tAssignmít
.
	`unique
();

80 
p‹t3
 = 
P‹tAssignmít
.
	`unique
();

81 
p‹t4
 = 
P‹tAssignmít
.
	`unique
();

82 
p‹t5
 = 
P‹tAssignmít
.
	`unique
();

84 
p‹tLE1
 = 
P‹tAssignmít
.
	`unique
();

85 
p‹tLE2
 = 
P‹tAssignmít
.
	`unique
();

86 
p‹tLE3
 = 
P‹tAssignmít
.
	`unique
();

87 
p‹tLE4
 = 
P‹tAssignmít
.
	`unique
();

88 
p‹tLE5
 = 
P‹tAssignmít
.
	`unique
();

90 
ho°P‹t
 = "127.0.0.1:" + 
p‹t1


91 + ",127.0.0.1:" + 
p‹t2


92 + ",127.0.0.1:" + 
p‹t3


93 + ",127.0.0.1:" + 
p‹t4


94 + ",127.0.0.1:" + 
p‹t5
;

95 
LOG
.
	`öfo
("P‹t†¨e: " + 
ho°P‹t
);

97 
s1dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

98 
s2dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

99 
s3dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

100 
s4dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

101 
s5dú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

103 
	`°¨tSîvîs
(
wôhOb£rvîs
);

105 
O≥øtögSy°emMXBón
 
osMbón
 =

106 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

107 i‡(
osMbón
 !
nuŒ
 && osMbó¿
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

108 
UnixO≥øtögSy°emMXBón
 
unixos
 =

109 (
UnixO≥øtögSy°emMXBón
)
osMbón
;

110 
LOG
.
	`öfo
("Initial fdcount is: "

111 + 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
());

114 
LOG
.
	`öfo
("Setup finished");

115 
	}
}

117 
	$°¨tSîvîs
(Ë
throws
 
Ex˚±i⁄
 {

118 
	`°¨tSîvîs
(
Ál£
);

119 
	}
}

121 
	$°¨tSîvîs
(
boﬁón
 
wôhOb£rvîs
Ë
throws
 
Ex˚±i⁄
 {

122 
tickTime
 = 2000;

123 
öôLimô
 = 3;

124 
syncLimô
 = 3;

125 
HashM≠
<
L⁄g
,
Qu‹umSîvî
> 
≥îs
 = 
√w
 HashMap<Long,QuorumServer>();

126 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(1), 
√w
 
	`Qu‹umSîvî
(1,

127 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t1
 + 1000),

128 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE1
 + 1000),

129 
Ló∫îTy≥
.
PARTICIPANT
));

130 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(2), 
√w
 
	`Qu‹umSîvî
(2,

131 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t2
 + 1000),

132 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE2
 + 1000),

133 
Ló∫îTy≥
.
PARTICIPANT
));

134 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(3), 
√w
 
	`Qu‹umSîvî
(3,

135 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t3
 + 1000),

136 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE3
 + 1000),

137 
Ló∫îTy≥
.
PARTICIPANT
));

138 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(4), 
√w
 
	`Qu‹umSîvî
(4,

139 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t4
 + 1000),

140 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE4
 + 1000),

141 
Ló∫îTy≥
.
PARTICIPANT
));

142 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(5), 
√w
 
	`Qu‹umSîvî
(5,

143 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t5
 + 1000),

144 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE5
 + 1000),

145 
Ló∫îTy≥
.
PARTICIPANT
));

147 i‡(
wôhOb£rvîs
) {

148 
≥îs
.
	`gë
(
L⁄g
.
	`vÆueOf
(4)).
ty≥
 = 
Ló∫îTy≥
.
OBSERVER
;

149 
≥îs
.
	`gë
(
L⁄g
.
	`vÆueOf
(5)).
ty≥
 = 
Ló∫îTy≥
.
OBSERVER
;

152 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏1Ö‹à" + 
p‹t1
);

153 
s1
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s1dú
, s1dú, 
p‹t1
, 3, 1, 
tickTime
, 
öôLimô
, 
syncLimô
);

154 
As£π
.
	`as£πEquÆs
(
p‹t1
, 
s1
.
	`gëClõ¡P‹t
());

155 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏2Ö‹à" + 
p‹t2
);

156 
s2
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s2dú
, s2dú, 
p‹t2
, 3, 2, 
tickTime
, 
öôLimô
, 
syncLimô
);

157 
As£π
.
	`as£πEquÆs
(
p‹t2
, 
s2
.
	`gëClõ¡P‹t
());

158 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏3Ö‹à" + 
p‹t3
);

159 
s3
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s3dú
, s3dú, 
p‹t3
, 3, 3, 
tickTime
, 
öôLimô
, 
syncLimô
);

160 
As£π
.
	`as£πEquÆs
(
p‹t3
, 
s3
.
	`gëClõ¡P‹t
());

161 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏4Ö‹à" + 
p‹t4
);

162 
s4
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s4dú
, s4dú, 
p‹t4
, 3, 4, 
tickTime
, 
öôLimô
, 
syncLimô
);

163 
As£π
.
	`as£πEquÆs
(
p‹t4
, 
s4
.
	`gëClõ¡P‹t
());

164 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏5Ö‹à" + 
p‹t5
);

165 
s5
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s5dú
, s5dú, 
p‹t5
, 3, 5, 
tickTime
, 
öôLimô
, 
syncLimô
);

166 
As£π
.
	`as£πEquÆs
(
p‹t5
, 
s5
.
	`gëClõ¡P‹t
());

168 i‡(
wôhOb£rvîs
) {

169 
s4
.
	`£tLó∫îTy≥
(
Ló∫îTy≥
.
OBSERVER
);

170 
s5
.
	`£tLó∫îTy≥
(
Ló∫îTy≥
.
OBSERVER
);

173 
LOG
.
	`öfo
("Qu‹umPì∏1 vŸög võw: " + 
s1
.
	`gëVŸögVõw
());

174 
LOG
.
	`öfo
("Qu‹umPì∏2 vŸög võw: " + 
s2
.
	`gëVŸögVõw
());

175 
LOG
.
	`öfo
("Qu‹umPì∏3 vŸög võw: " + 
s3
.
	`gëVŸögVõw
());

176 
LOG
.
	`öfo
("Qu‹umPì∏4 vŸög võw: " + 
s4
.
	`gëVŸögVõw
());

177 
LOG
.
	`öfo
("Qu‹umPì∏5 vŸög võw: " + 
s5
.
	`gëVŸögVõw
());

179 
LOG
.
	`öfo
("start QuorumPeer 1");

180 
s1
.
	`°¨t
();

181 
LOG
.
	`öfo
("start QuorumPeer 2");

182 
s2
.
	`°¨t
();

183 
LOG
.
	`öfo
("start QuorumPeer 3");

184 
s3
.
	`°¨t
();

185 
LOG
.
	`öfo
("start QuorumPeer 4");

186 
s4
.
	`°¨t
();

187 
LOG
.
	`öfo
("start QuorumPeer 5");

188 
s5
.
	`°¨t
();

189 
LOG
.
	`öfo
("started QuorumPeer 5");

191 
LOG
.
	`öfo
 ("CheckögÖ‹t†" + 
ho°P‹t
);

192 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

193 
As£π
.
	`as£πTrue
("waiting for server up",

194 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
hp
,

195 
CONNECTION_TIMEOUT
));

196 
LOG
.
	`öfo
(
hp
 + " isáccepting client connections");

200 
JMXEnv
.
	`dump
();

202 
Së
<
Såög
> 
ísuªNames
 = 
√w
 
LökedHashSë
<String>();

203 
i
 = 1; i <= 5; i++) {

204 
ísuªNames
.
	`add
("InMemoryDataTree");

206 
i
 = 1; i <= 5; i++) {

207 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i


208 + ",«me1Ùïliˇ." + 
i
 + ",name2=");

210 
i
 = 1; i <= 5; i++) {

211 
j
 = 1; j <= 5; j++) {

212 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i


213 + ",«me1Ùïliˇ." + 
j
);

216 
i
 = 1; i <= 5; i++) {

217 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i
);

219 
JMXEnv
.
	`ísuªAŒ
(
ísuªNames
.
	`toAºay
(
√w
 
Såög
[ísuªNames.
	`size
()]));

220 
	}
}

223 
public
 
	$£tupSîvîs
(Ë
throws
 
IOEx˚±i⁄
 {

224 
	`£tupSîvî
(1);

225 
	`£tupSîvî
(2);

226 
	`£tupSîvî
(3);

227 
	`£tupSîvî
(4);

228 
	`£tupSîvî
(5);

229 
	}
}

231 
	gHashM≠
<
	gL⁄g
,
	gQu‹umSîvî
> 
	g≥îs
 = 
nuŒ
;

232 
public
 
	$£tupSîvî
(
i
Ë
throws
 
IOEx˚±i⁄
 {

233 
tickTime
 = 2000;

234 
öôLimô
 = 3;

235 
syncLimô
 = 3;

237 if(
≥îs
 =
nuŒ
){

238 
≥îs
 = 
√w
 
HashM≠
<
L⁄g
,
Qu‹umSîvî
>();

240 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(1), 
√w
 
	`Qu‹umSîvî
(1,

241 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t1
 + 1000),

242 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE1
 + 1000),

243 
Ló∫îTy≥
.
PARTICIPANT
));

244 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(2), 
√w
 
	`Qu‹umSîvî
(2,

245 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t2
 + 1000),

246 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE2
 + 1000),

247 
Ló∫îTy≥
.
PARTICIPANT
));

248 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(3), 
√w
 
	`Qu‹umSîvî
(3,

249 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t3
 + 1000),

250 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE3
 + 1000),

251 
Ló∫îTy≥
.
PARTICIPANT
));

252 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(4), 
√w
 
	`Qu‹umSîvî
(4,

253 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t4
 + 1000),

254 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE4
 + 1000),

255 
Ló∫îTy≥
.
PARTICIPANT
));

256 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(5), 
√w
 
	`Qu‹umSîvî
(5,

257 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t5
 + 1000),

258 
√w
 
	`I√tSockëAddªss
("127.0.0.1", 
p‹tLE5
 + 1000),

259 
Ló∫îTy≥
.
PARTICIPANT
));

262 
i
){

264 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏1Ö‹à" + 
p‹t1
);

265 
s1
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s1dú
, s1dú, 
p‹t1
, 3, 1, 
tickTime
, 
öôLimô
, 
syncLimô
);

266 
As£π
.
	`as£πEquÆs
(
p‹t1
, 
s1
.
	`gëClõ¡P‹t
());

269 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏2Ö‹à" + 
p‹t2
);

270 
s2
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s2dú
, s2dú, 
p‹t2
, 3, 2, 
tickTime
, 
öôLimô
, 
syncLimô
);

271 
As£π
.
	`as£πEquÆs
(
p‹t2
, 
s2
.
	`gëClõ¡P‹t
());

274 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏3Ö‹à" + 
p‹t3
);

275 
s3
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s3dú
, s3dú, 
p‹t3
, 3, 3, 
tickTime
, 
öôLimô
, 
syncLimô
);

276 
As£π
.
	`as£πEquÆs
(
p‹t3
, 
s3
.
	`gëClõ¡P‹t
());

279 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏4Ö‹à" + 
p‹t4
);

280 
s4
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s4dú
, s4dú, 
p‹t4
, 3, 4, 
tickTime
, 
öôLimô
, 
syncLimô
);

281 
As£π
.
	`as£πEquÆs
(
p‹t4
, 
s4
.
	`gëClõ¡P‹t
());

284 
LOG
.
	`öfo
("¸ótög Qu‹umPì∏5Ö‹à" + 
p‹t5
);

285 
s5
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
s5dú
, s5dú, 
p‹t5
, 3, 5, 
tickTime
, 
öôLimô
, 
syncLimô
);

286 
As£π
.
	`as£πEquÆs
(
p‹t5
, 
s5
.
	`gëClõ¡P‹t
());

288 
	}
}

290 @
Ovîride


291 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

292 
LOG
.
	`öfo
("TearDown started");

294 
O≥øtögSy°emMXBón
 
osMbón
 =

295 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

296 i‡(
osMbón
 !
nuŒ
 && osMbó¿
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

297 
UnixO≥øtögSy°emMXBón
 
unixos
 =

298 (
UnixO≥øtögSy°emMXBón
)
osMbón
;

299 
LOG
.
	`öfo
("fdcountáfterÅest is: "

300 + 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
());

303 
	`shutdownSîvîs
();

305 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

306 
As£π
.
	`as£πTrue
("waiting for server down",

307 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
hp
,

308 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

309 
LOG
.
	`öfo
(
hp
 + " isÇoÜongeráccepting client connections");

312 
JMXEnv
.
	`ã¨Down
();

313 
	}
}

314 
public
 
	$shutdownSîvîs
() {

315 
	`shutdown
(
s1
);

316 
	`shutdown
(
s2
);

317 
	`shutdown
(
s3
);

318 
	`shutdown
(
s4
);

319 
	`shutdown
(
s5
);

320 
	}
}

322 
public
 
	$shutdown
(
Qu‹umPìr
 
qp
) {

323 
åy
 {

324 
LOG
.
	`öfo
("Shuâög dow¿qu‹umÖì∏" + 
qp
.
	`gëName
());

325 
qp
.
	`shutdown
();

326 
EÀ˘i⁄
 
e
 = 
qp
.
	`gëEÀ˘i⁄Alg
();

327 i‡(
e
 !
nuŒ
) {

328 
LOG
.
	`öfo
("Shuâög dow¿ÀadîÉÀ˘i⁄ " + 
qp
.
	`gëName
());

329 
e
.
	`shutdown
();

331 
LOG
.
	`öfo
("Nÿñe˘i⁄ávaûabÀÅÿshutdow¿" + 
qp
.
	`gëName
());

333 
LOG
.
	`öfo
("Waôög f‹ " + 
qp
.
	`gëName
() + "ÅoÉxitÅhread");

334 
qp
.
	`joö
(30000);

335 i‡(
qp
.
	`isAlive
()) {

336 
As£π
.
	`Áû
("QP faûedÅÿshutdow¿ö 30 sec⁄ds: " + 
qp
.
	`gëName
());

338 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

339 
LOG
.
	`debug
("QP i¡îru±ed: " + 
qp
.
	`gëName
(), 
e
);

341 
	}
}

343 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
()

344 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


346  
	`¸óãClõ¡
(
ho°P‹t
);

347 
	}
}

349 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

350 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


352 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

353  
	`¸óãClõ¡
(
w©chî
, 
hp
);

354 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumHammerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

22 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

25 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

27 
public
 cœs†
	cQu‹umHammîTe°
 
exãnds
 
	mZKTe°Ca£
 {

28 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umHammîTe°
.
˛ass
);

29 
public
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 
Clõ¡Te°
.
CONNECTION_TIMEOUT
;

31 
¥Ÿe˘ed
 
föÆ
 
Qu‹umBa£
 
	mqb
 = 
√w
 QuorumBase();

32 
¥Ÿe˘ed
 
föÆ
 
Clõ¡HammîTe°
 
	mcht
 = 
√w
 ClientHammerTest();

34 @
Bef‹e


35 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

36 
qb
.
	`£tUp
();

37 
cht
.
ho°P‹t
 = 
qb
.hostPort;

38 
cht
.
	`£tUpAŒ
();

41 @
A·î


42 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

43 
cht
.
	`ã¨DownAŒ
();

44 
qb
.
	`ã¨Down
();

45 
	}
}

47 @
Te°


48 
public
 
	$ã°HammîBasic
(Ë
throws
 
ThrowabÀ
 {

49 
cht
.
	`ã°HammîBasic
();

50 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumQuotaTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

22 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gQuŸas
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gSètsTøck
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥rMaö
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
public
 cœs†
	cQu‹umQuŸaTe°
 
exãnds
 
	mQu‹umBa£
 {

34 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 =

35 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umQuŸaTe°
.
˛ass
);

37 @
Te°


38 
public
 
	$ã°QuŸaWôhQu‹um
(Ë
throws
 
Ex˚±i⁄
 {

39 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

40 
zk
.
	`£tD©a
("/", "some".
	`gëByãs
(), -1);

41 
zk
.
	`¸óã
("/a", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

42 
Cª©eMode
.
PERSISTENT
);

43 
i
 = 0;

44 
i
=0; i < 300;i++) {

45 
zk
.
	`¸óã
("/a/" + 
i
, "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

46 
Cª©eMode
.
PERSISTENT
);

48 
ZooKì≥rMaö
.
	`¸óãQuŸa
(
zk
, "/a", 1000L, 5000);

49 
Såög
 
°©P©h
 = 
QuŸas
.
quŸaZookì≥r
 + "/a"+ "/" + QuŸas.
°©Node
;

50 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
°©P©h
, 
Ál£
, 
√w
 
	`Sèt
());

51 
SètsTøck
 
°
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

52 
As£π
.
	`as£πTrue
("byã†¨ê£t", 
°
.
	`gëByãs
() == 1204L);

53 
As£π
.
	`as£πTrue
("num cou¡ i†£t", 
°
.
	`gëCou¡
() == 301);

54 
i
=300; i < 600; i++) {

55 
zk
.
	`¸óã
("/a/" + 
i
, "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

56 
Cª©eMode
.
PERSISTENT
);

58 
d©a
 = 
zk
.
	`gëD©a
(
°©P©h
, 
Ál£
, 
√w
 
	`Sèt
());

59 
°
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

60 
As£π
.
	`as£πTrue
("byã†¨ê£t", 
°
.
	`gëByãs
() == 2404L);

61 
As£π
.
	`as£πTrue
("num cou¡ i†£t", 
°
.
	`gëCou¡
() == 601);

63 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

20 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºays
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gSem≠h‹e
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOp
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gOpResu…
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLó∫îH™dÀr
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCou¡downW©chî
;

43 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

44 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

45 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

46 
imp‹t
 
	g‹g
.
	gjunô
.
	gIgn‹e
;

47 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

48 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

49 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

51 
public
 cœs†
	cQu‹umTe°
 
exãnds
 
	mZKTe°Ca£
 {

52 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umTe°
.
˛ass
);

53 
public
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 
Clõ¡Te°
.
CONNECTION_TIMEOUT
;

55 
¥iv©e
 
föÆ
 
Qu‹umBa£
 
	mqb
 = 
√w
 QuorumBase();

56 
¥iv©e
 
föÆ
 
Clõ¡Te°
 
	m˘
 = 
√w
 ClientTest();

58 @
Bef‹e


59 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

60 
qb
.
	`£tUp
();

61 
˘
.
ho°P‹t
 = 
qb
.hostPort;

62 
˘
.
	`£tUpAŒ
();

65 @
A·î


66 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

67 
˘
.
	`ã¨DownAŒ
();

68 
qb
.
	`ã¨Down
();

69 
	}
}

71 @
Te°


72 
public
 
	$ã°DñëeWôhChûdªn
(Ë
throws
 
Ex˚±i⁄
 {

73 
˘
.
	`ã°DñëeWôhChûdªn
();

74 
	}
}

76 @
Te°


77 
public
 
	$ã°Pög
(Ë
throws
 
Ex˚±i⁄
 {

78 
˘
.
	`ã°Pög
();

79 
	}
}

81 @
Te°


82 
public
 
	$ã°SequítülNodeNames
()

83 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


85 
˘
.
	`ã°SequítülNodeNames
();

86 
	}
}

88 @
Te°


89 
public
 
	$ã°ACLs
(Ë
throws
 
Ex˚±i⁄
 {

90 
˘
.
	`ã°ACLs
();

91 
	}
}

93 @
Te°


94 
public
 
	$ã°Clõ¡wôhoutW©chîObj
(Ë
throws
 
IOEx˚±i⁄
,

95 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


97 
˘
.
	`ã°Clõ¡wôhoutW©chîObj
();

98 
	}
}

100 @
Te°


101 
public
 
	$ã°Clõ¡WôhW©chîObj
(Ë
throws
 
IOEx˚±i⁄
,

102 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


104 
˘
.
	`ã°Clõ¡WôhW©chîObj
();

105 
	}
}

107 @
Te°


108 
public
 
	$ã°GëVõw
() {

109 
As£π
.
	`as£πEquÆs
(5,
qb
.
s1
.
	`gëVõw
().
	`size
());

110 
As£π
.
	`as£πEquÆs
(5,
qb
.
s2
.
	`gëVõw
().
	`size
());

111 
As£π
.
	`as£πEquÆs
(5,
qb
.
s3
.
	`gëVõw
().
	`size
());

112 
As£π
.
	`as£πEquÆs
(5,
qb
.
s4
.
	`gëVõw
().
	`size
());

113 
As£π
.
	`as£πEquÆs
(5,
qb
.
s5
.
	`gëVõw
().
	`size
());

114 
	}
}

116 @
Te°


117 
public
 
	$ã°VõwC⁄èös
() {

119 
As£π
.
	`as£πTrue
(
qb
.
s1
.
	`võwC⁄èös
(qb.s1.
	`gëId
()));

122 
As£π
.
	`as£πTrue
(
qb
.
s1
.
	`võwC⁄èös
(qb.
s2
.
	`gëId
()));

125 
As£π
.
	`as£πFÆ£
(
qb
.
s1
.
	`võwC⁄èös
(-1L));

126 
	}
}

128 vﬁ©ûê
	gcou¡î
 = 0;

129 vﬁ©ûê
	gîr‹s
 = 0;

130 @
Te°


131 
public
 
	$ã°LódîShutdown
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

132 
ZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
qb
.
ho°P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
,Çew 
	`W©chî
() {

133 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

135 
zk
.
	`¸óã
("/bœh", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

136 
zk
.
	`¸óã
("/bœh/bœh", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

137 
Lódî
 
Àadî
 = 
qb
.
s1
.leader;

138 i‡(
Àadî
 =
nuŒ
ËÀadî = 
qb
.
s2
.leader;

139 i‡(
Àadî
 =
nuŒ
ËÀadî = 
qb
.
s3
.leader;

140 i‡(
Àadî
 =
nuŒ
ËÀadî = 
qb
.
s4
.leader;

141 i‡(
Àadî
 =
nuŒ
ËÀadî = 
qb
.
s5
.leader;

142 
As£π
.
	`as£πNŸNuŒ
(
Àadî
);

143 
i
 = 0; i < 5000; i++) {

144 
zk
.
	`£tD©a
("/bœh/bœh", 
√w
 
byã
[0], -1,Çew 
AsyncCÆlback
.
	`SètCÆlback
() {

145 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

146 
Sèt
 
°©
) {

147 
cou¡î
++;

148 i‡(
rc
 != 0) {

149 
îr‹s
++;

152 }, 
nuŒ
);

154 
Ló∫îH™dÀr
 
f
 : 
Àadî
.
	`gëF‹w¨dögFﬁlowîs
()) {

155 
f
.
	`gëSockë
().
	`shutdownI≈ut
();

157 
i
 = 0; i < 5000; i++) {

158 
zk
.
	`£tD©a
("/bœh/bœh", 
√w
 
byã
[0], -1,Çew 
AsyncCÆlback
.
	`SètCÆlback
() {

159 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

160 
Sèt
 
°©
) {

161 
cou¡î
++;

162 i‡(
rc
 != 0) {

163 
îr‹s
++;

166 }, 
nuŒ
);

169 
As£π
.
	`as£πTrue
(
qb
.
s1
.
	`isAlive
());

170 
As£π
.
	`as£πTrue
(
qb
.
s2
.
	`isAlive
());

171 
As£π
.
	`as£πTrue
(
qb
.
s3
.
	`isAlive
());

172 
As£π
.
	`as£πTrue
(
qb
.
s4
.
	`isAlive
());

173 
As£π
.
	`as£πTrue
(
qb
.
s5
.
	`isAlive
());

174 
zk
.
	`˛o£
();

175 
	}
}

177 @
Te°


178 
public
 
	$ã°Mu…ùÀW©chîObjs
(Ë
throws
 
IOEx˚±i⁄
,

179 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


181 
˘
.
	`ã°MutùÀW©chîObjs
();

182 
	}
}

192 @
Te°


193 
public
 
	$ã°Sessi⁄Moved
(Ë
throws
 
Ex˚±i⁄
 {

194 
Såög
 
ho°P‹ts
[] = 
qb
.
ho°P‹t
.
	`•lô
(",");

195 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
ho°P‹ts
[0],

196 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`W©chî
() {

197 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

199 
zk
.
	`¸óã
("/£ssi⁄MoveTe°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

201 
i
 = 0; i < 
ho°P‹ts
.
Àngth
*2; i++) {

202 
zk
.
	`d⁄tRec⁄√˘
();

204 
Disc⁄√˘abÀZooKì≥r
 
zk√w
 =

205 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
ho°P‹ts
[(
i
+1)%ho°P‹ts.
Àngth
],

206 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
,

207 
√w
 
	`W©chî
(Ë{
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

209 
zk
.
	`gëSessi⁄Id
(),

210 
zk
.
	`gëSessi⁄Passwd
());

211 
zk√w
.
	`£tD©a
("/", 
√w
 
byã
[1], -1);

212 
föÆ
 
ªsu…
[] = 
√w
 [1];

213 
ªsu…
[0] = 
I¡egî
.
MAX_VALUE
;

214 
zk√w
.
	`sync
("/", 
√w
 
AsyncCÆlback
.
	`VoidCÆlback
() {

215 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

216 
	`synchr⁄ized
(
ªsu…
Ë{Ñesu…[0] = 
rc
;Ñesu….
	`nŸify
(); }

218 }, 
nuŒ
);

219 
	`synchr⁄ized
(
ªsu…
) {

220 if(
ªsu…
[0] =
I¡egî
.
MAX_VALUE
) {

221 
ªsu…
.
	`waô
(5000);

224 
LOG
.
	`öfo
(
ho°P‹ts
[(
i
+1)%ho°P‹ts.
Àngth
] + " Syn¯ªtu∫ed " + 
ªsu…
[0]);

225 
As£π
.
	`as£πTrue
(
ªsu…
[0] =
Kì≥rEx˚±i⁄
.
Code
.
OK
.
	`ötVÆue
());

226 
åy
 {

227 
zk
.
	`£tD©a
("/", 
√w
 
byã
[1], -1);

228 
As£π
.
	`Áû
("Should haveÜostÅhe connection");

229 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

231 
zk
 = 
zk√w
;

233 
zk
.
	`˛o£
();

234 
	}
}

236 
¥iv©e
 ˛as†
	cDiscoW©chî
 
im∂emíts
 
	gW©chî
 {

237 vﬁ©ûê
boﬁón
 
	gzkDisco
 = 
Ál£
;

238 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

239 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
Disc⁄√˘ed
) {

240 
zkDisco
 = 
åue
;

249 @
	gTe°


250 @
Ign‹e


251 
public
 
	$ã°Sessi⁄Move
(Ë
throws
 
Ex˚±i⁄
 {

252 
Såög
 
hps
[] = 
qb
.
ho°P‹t
.
	`•lô
(",");

253 
DiscoW©chî
 
ﬁdW©chî
 = 
√w
 
	`DiscoW©chî
();

254 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
hps
[0],

255 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
ﬁdW©chî
);

256 
zk
.
	`¸óã
("/t1", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

257 
zk
.
	`d⁄tRec⁄√˘
();

259 
DiscoW©chî
 
w©chî
 = 
√w
 
	`DiscoW©chî
();

260 
Disc⁄√˘abÀZooKì≥r
 
zk√w
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
hps
[1],

261 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
w©chî
, 
zk
.
	`gëSessi⁄Id
(),

262 
zk
.
	`gëSessi⁄Passwd
());

263 
zk√w
.
	`¸óã
("/t2", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

264 
åy
 {

265 
zk
.
	`¸óã
("/t3", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

266 
As£π
.
	`Áû
("Should haveÜostÅhe connection");

267 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

269 
i
 = 0; i < 30; i++) {

270 i‡(
ﬁdW©chî
.
zkDisco
) {

273 
Thªad
.
	`¶ìp
(1000);

275 
As£π
.
	`as£πTrue
(
ﬁdW©chî
.
zkDisco
);

278 
AºayLi°
<
ZooKì≥r
> 
toClo£
 = 
√w
 ArrayList<ZooKeeper>();

279 
toClo£
.
	`add
(
zk√w
);

281 
i
 = 0; i < 10; i++) {

282 
zk√w
.
	`d⁄tRec⁄√˘
();

283 
zk√w
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
hps
[1],

284 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`DiscoW©chî
(),

285 
zk
.
	`gëSessi⁄Id
(), zk.
	`gëSessi⁄Passwd
());

286 
toClo£
.
	`add
(
zk√w
);

287 
zk√w
.
	`¸óã
("/t-"+
i
, 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

289 
ZooKì≥r
 
z
: 
toClo£
) {

290 
z
.
	`˛o£
();

292 
zk
.
	`˛o£
();

293 
	}
}

298 @
Te°


299 
public
 
	$ã°FﬁlowîsSèπA·îLódî
(Ë
throws
 
Ex˚±i⁄
 {

300 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

301 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

302 
qu
.
	`°¨tQu‹um
();

304 
ödex
 = 1;

305 
qu
.
	`gëPìr
(
ödex
).
≥î
.
Àadî
 =
nuŒ
)

306 
ödex
++;

308 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(

309 "127.0.0.1:" + 
qu
.
	`gëPìr
((
ödex
 =1)?2:1).
≥î
.
	`gëClõ¡P‹t
(),

310 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
w©chî
);

311 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

314 
qu
.
	`shutdown
(
ödex
);

317 
qu
.
	`°¨t
(
ödex
);

318 
As£π
.
	`as£πTrue
("quorumÑeestablishment failed",

319 
Qu‹umBa£
.
	`waôF‹SîvîUp
(

320 "127.0.0.1:" + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
,

321 
CONNECTION_TIMEOUT
));

323 
i
 = 0; i < 30; i++) {

324 
åy
 {

325 
zk
.
	`¸óã
("/ã°", "ã°".
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

326 
Cª©eMode
.
PERSISTENT
);

328 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

329 
Thªad
.
	`¶ìp
(1000);

332 
As£π
.
	`Áû
("client couldÇot connectÅoÑeestablished quorum: giving upáfter 30+ seconds.");

335 
zk
.
	`˛o£
();

336 
	}
}

358 @
Te°


359 
public
 
	$ã°NoLogBef‹eLódîE°ablishmít
 ()

360 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
{

361 
föÆ
 
Sem≠h‹e
 
£m
 = 
√w
 
	`Sem≠h‹e
(0);

363 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(2);

364 
qu
.
	`°¨tQu‹um
();

367 
ödex
 = 1;

368 
qu
.
	`gëPìr
(
ödex
).
≥î
.
Àadî
 =
nuŒ
)

369 
ödex
++;

371 
Lódî
 
Àadî
 = 
qu
.
	`gëPìr
(
ödex
).
≥î
.leader;

373 
As£π
.
	`as£πNŸNuŒ
(
Àadî
);

378 
ödex
 = (index == 1) ? 2 : 1;

380 
ZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(

381 "127.0.0.1:" + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëClõ¡P‹t
(),

382 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
√w
 
	`W©chî
() {

383 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) { }

386 
zk
.
	`¸óã
("/bœh", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

388 
i
 = 0; i < 50000; i++) {

389 
zk
.
	`£tD©a
("/bœh", 
√w
 
byã
[0], -1,Çew 
AsyncCÆlback
.
	`SètCÆlback
() {

390 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

391 
Sèt
 
°©
) {

392 
cou¡î
++;

393 i‡(
rc
 != 0) {

394 
îr‹s
++;

396 if(
cou¡î
 == 20000){

397 
£m
.
	`ªÀa£
();

400 }, 
nuŒ
);

402 if(
i
 == 5000){

403 
qu
.
	`shutdown
(
ödex
);

404 
LOG
.
	`öfo
("Shutting down s1");

406 if(
i
 == 12000){

407 
qu
.
	`°¨t
(
ödex
);

408 
LOG
.
	`öfo
("Sëtög u∞£rvî: " + 
ödex
);

410 if((
i
 % 1000) == 0){

411 
Thªad
.
	`¶ìp
(500);

416 
£m
.
	`åyAcquúe
(15, 
TimeUnô
.
SECONDS
);

419 
As£π
.
	`as£πTrue
("NŸ fﬁlowög", 
qu
.
	`gëPìr
(
ödex
).
≥î
.
fﬁlowî
 !
nuŒ
);

420 
ïochF
 = (
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZxid
() >> 32L);

421 
ïochL
 = (
Àadî
.
	`gëEpoch
() >> 32L);

422 
As£π
.
	`as£πTrue
("Zxid: " + 
qu
.
	`gëPìr
(
ödex
).
≥î
.
	`gëA˘iveSîvî
().
	`gëZxid
() +

423 "Cuºíàïoch: " + 
ïochF
,ÉpochF =
ïochL
);

425 
	}
}

438 @
Te°


439 
public
 
	$ã°Mu…iToFﬁlowî
(Ë
throws
 
Ex˚±i⁄
 {

440 
Qu‹umUtû
 
qu
 = 
√w
 
	`Qu‹umUtû
(1);

441 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

442 
qu
.
	`°¨tQu‹um
();

444 
ödex
 = 1;

445 
qu
.
	`gëPìr
(
ödex
).
≥î
.
Àadî
 =
nuŒ
)

446 
ödex
++;

448 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(

449 "127.0.0.1:" + 
qu
.
	`gëPìr
((
ödex
 =1)?2:1).
≥î
.
	`gëClõ¡P‹t
(),

450 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
, 
w©chî
);

451 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

453 
Li°
<
OpResu…
> 
ªsu…s
 = 
√w
 
AºayLi°
<OpResult>();

455 
ªsu…s
 = 
zk
.
	`mu…i
(
Aºays
.
	`asLi°
(

456 
Op
.
	`¸óã
("/mu…i0", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

457 
Op
.
	`¸óã
("/mu…i1", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
),

458 
Op
.
	`¸óã
("/mu…i2", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
)

460 
zk
.
	`gëD©a
("/mu…i0", 
Ál£
, 
nuŒ
);

461 
zk
.
	`gëD©a
("/mu…i1", 
Ál£
, 
nuŒ
);

462 
zk
.
	`gëD©a
("/mu…i2", 
Ál£
, 
nuŒ
);

464 
zk
.
	`˛o£
();

465 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumUtil.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gM™agemítFa˘‹y
;

24 
imp‹t
 
	gjava
.
	gœng
.
	gm™agemít
.
	gO≥øtögSy°emMXBón
;

25 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLökedHashSë
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gM≠
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gEÀ˘i⁄
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gLó∫îTy≥
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

40 
imp‹t
 
	gcom
.
	gsun
.
	gm™agemít
.
	gUnixO≥øtögSy°emMXBón
;

46 
public
 cœs†
	cQu‹umUtû
 {

52 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Qu‹umUtû
.
˛ass
);

54 
public
 cœs†
	cPìrSåu˘
 {

55 
public
 
	mid
;

56 
public
 
Qu‹umPìr
 
	m≥î
;

57 
public
 
Fûe
 
	md©aDú
;

58 
public
 
	m˛õ¡P‹t
;

61 
¥iv©e
 
föÆ
 
	gM≠
<
	gL⁄g
, 
	gQu‹umSîvî
> 
	g≥îsVõw
 = 
√w
 
HashM≠
<
L⁄g
, QuorumServer>();

63 
¥iv©e
 
föÆ
 
	gM≠
<
	gI¡egî
, 
	gPìrSåu˘
> 
	g≥îs
 = 
√w
 
HashM≠
<
I¡egî
, PeerStruct>();

65 
public
 
föÆ
 
	gN
;

67 
public
 
föÆ
 
	gALL
;

69 
¥iv©e
 
Såög
 
	gho°P‹t
;

71 
¥iv©e
 
	gtickTime
;

73 
¥iv©e
 
	göôLimô
;

75 
¥iv©e
 
	gsyncLimô
;

77 
¥iv©e
 
	gñe˘i⁄Alg
;

85 
public
 
	$Qu‹umUtû
(
n
Ë
throws
 
Ru¡imeEx˚±i⁄
 {

86 
åy
 {

87 
Clõ¡Ba£
.
	`£tupTe°Env
();

88 
JMXEnv
.
	`£tUp
();

90 
N
 = 
n
;

91 
ALL
 = 2 * 
N
 + 1;

92 
tickTime
 = 2000;

93 
öôLimô
 = 3;

94 
syncLimô
 = 3;

95 
ñe˘i⁄Alg
 = 3;

96 
ho°P‹t
 = "";

98 
i
 = 1; i <
ALL
; ++i) {

99 
PìrSåu˘
 
ps
 = 
√w
 
	`PìrSåu˘
();

100 
ps
.
id
 = 
i
;

101 
ps
.
d©aDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

102 
ps
.
˛õ¡P‹t
 = 
P‹tAssignmít
.
	`unique
();

103 
≥îs
.
	`put
(
i
, 
ps
);

105 
≥îsVõw
.
	`put
(
L⁄g
.
	`vÆueOf
(
i
), 
√w
 
	`Qu‹umSîvî
(i,Çew 
	`I√tSockëAddªss
(

106 "127.0.0.1", 
ps
.
˛õ¡P‹t
 + 1000), 
√w
 
	`I√tSockëAddªss
("127.0.0.1",

107 
P‹tAssignmít
.
	`unique
(Ë+ 1000), 
Ló∫îTy≥
.
PARTICIPANT
));

108 
ho°P‹t
 +"127.0.0.1:" + 
ps
.
˛õ¡P‹t
 + ((
i
 =
ALL
) ? "" : ",");

110 
i
 = 1; i <
ALL
; ++i) {

111 
PìrSåu˘
 
ps
 = 
≥îs
.
	`gë
(
i
);

112 
LOG
.
	`öfo
("Cª©ög Qu‹umPì∏" + 
i
 + ";Öubli¯p‹à" + 
ps
.
˛õ¡P‹t
);

113 
ps
.
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îsVõw
,Ös.
d©aDú
,Ös.d©aDú,Ös.
˛õ¡P‹t
,

114 
ñe˘i⁄Alg
, 
ps
.
id
, 
tickTime
, 
öôLimô
, 
syncLimô
);

115 
As£π
.
	`as£πEquÆs
(
ps
.
˛õ¡P‹t
,Ös.
≥î
.
	`gëClõ¡P‹t
());

117 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

118 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e
);

120 
	}
}

122 
public
 
PìrSåu˘
 
	$gëPìr
(
id
) {

123  
≥îs
.
	`gë
(
id
);

124 
	}
}

126 
public
 
	$°¨tAŒ
(Ë
throws
 
IOEx˚±i⁄
 {

127 
	`shutdownAŒ
();

128 
i
 = 1; i <
ALL
; ++i) {

129 
	`°¨t
(
i
);

130 
LOG
.
	`öfo
("Sèπed Qu‹umPì∏" + 
i
);

133 
LOG
.
	`öfo
("CheckögÖ‹t†" + 
ho°P‹t
);

134 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

135 
As£π
.
	`as£πTrue
("waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
hp
,

136 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

137 
LOG
.
	`öfo
(
hp
 + " isáccepting client connections");

141 
åy
 {

142 
JMXEnv
.
	`dump
();

144 
Së
<
Såög
> 
ísuªNames
 = 
√w
 
LökedHashSë
<String>();

145 
i
 = 1; i <
ALL
; ++i) {

146 
ísuªNames
.
	`add
("InMemoryDataTree");

148 
i
 = 1; i <
ALL
; ++i) {

149 
ísuªNames


150 .
	`add
("«me0=RïliˇãdSîvî_id" + 
i
 + ",name1=replica." + i + ",name2=");

152 
i
 = 1; i <
ALL
; ++i) {

153 
j
 = 1; j <
ALL
; ++j) {

154 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i
 + ",«me1Ùïliˇ." + 
j
);

157 
i
 = 1; i <
ALL
; ++i) {

158 
ísuªNames
.
	`add
("«me0=RïliˇãdSîvî_id" + 
i
);

160 
JMXEnv
.
	`ísuªAŒ
(
ísuªNames
.
	`toAºay
(
√w
 
Såög
[ísuªNames.
	`size
()]));

161 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e
) {

162 
LOG
.
	`w¨n
("IOEx˚±i⁄ durög JMXEnv o≥øti⁄", 
e
);

164 
	}
}

169 
public
 
	$°¨tQu‹um
(Ë
throws
 
IOEx˚±i⁄
 {

170 
	`shutdownAŒ
();

171 
i
 = 1; i <
N
 + 1; ++i) {

172 
	`°¨t
(
i
);

174 
i
 = 1; i <
N
 + 1; ++i) {

175 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

176 + 
	`gëPìr
(
i
).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

178 
	}
}

180 
public
 
	$°¨t
(
id
Ë
throws
 
IOEx˚±i⁄
 {

181 
PìrSåu˘
 
ps
 = 
	`gëPìr
(
id
);

182 
LOG
.
	`öfo
("Cª©ög Qu‹umPì∏" + 
ps
.
id
 + ";Öubli¯p‹à" +Ös.
˛õ¡P‹t
);

183 
ps
.
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îsVõw
,Ös.
d©aDú
,Ös.d©aDú,Ös.
˛õ¡P‹t
, 
ñe˘i⁄Alg
,

184 
ps
.
id
, 
tickTime
, 
öôLimô
, 
syncLimô
);

185 
As£π
.
	`as£πEquÆs
(
ps
.
˛õ¡P‹t
,Ös.
≥î
.
	`gëClõ¡P‹t
());

187 
ps
.
≥î
.
	`°¨t
();

188 
	}
}

190 
public
 
	$ª°¨t
(
id
Ë
throws
 
IOEx˚±i⁄
 {

191 
	`°¨t
(
id
);

192 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

193 + 
	`gëPìr
(
id
).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

194 
	}
}

196 
public
 
	$°¨tThíShutdown
(
id
Ë
throws
 
IOEx˚±i⁄
 {

197 
PìrSåu˘
 
ps
 = 
	`gëPìr
(
id
);

198 
LOG
.
	`öfo
("Cª©ög Qu‹umPì∏" + 
ps
.
id
 + ";Öubli¯p‹à" +Ös.
˛õ¡P‹t
);

199 
ps
.
≥î
 = 
√w
 
	`Qu‹umPìr
(
≥îsVõw
,Ös.
d©aDú
,Ös.d©aDú,Ös.
˛õ¡P‹t
, 
ñe˘i⁄Alg
,

200 
ps
.
id
, 
tickTime
, 
öôLimô
, 
syncLimô
);

201 
As£π
.
	`as£πEquÆs
(
ps
.
˛õ¡P‹t
,Ös.
≥î
.
	`gëClõ¡P‹t
());

203 
ps
.
≥î
.
	`°¨t
();

204 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:"

205 + 
	`gëPìr
(
id
).
˛õ¡P‹t
, 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

206 
	`shutdown
(
id
);

207 
	}
}

209 
public
 
	$shutdownAŒ
() {

210 
i
 = 1; i <
ALL
; ++i) {

211 
	`shutdown
(
i
);

213 
Såög
 
hp
 : 
ho°P‹t
.
	`•lô
(",")) {

214 
As£π
.
	`as£πTrue
("Waôög f‹ sîvî down", 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
hp
,

215 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

216 
LOG
.
	`öfo
(
hp
 + " isÇoÜongeráccepting client connections");

218 
	}
}

220 
public
 
	$shutdown
(
id
) {

221 
Qu‹umPìr
 
qp
 = 
	`gëPìr
(
id
).
≥î
;

222 
åy
 {

223 
LOG
.
	`öfo
("Shuâög dow¿qu‹umÖì∏" + 
qp
.
	`gëName
());

224 
qp
.
	`shutdown
();

225 
EÀ˘i⁄
 
e
 = 
qp
.
	`gëEÀ˘i⁄Alg
();

226 i‡(
e
 !
nuŒ
) {

227 
LOG
.
	`öfo
("Shuâög dow¿ÀadîÉÀ˘i⁄ " + 
qp
.
	`gëName
());

228 
e
.
	`shutdown
();

230 
LOG
.
	`öfo
("Nÿñe˘i⁄ávaûabÀÅÿshutdow¿" + 
qp
.
	`gëName
());

232 
LOG
.
	`öfo
("Waôög f‹ " + 
qp
.
	`gëName
() + "ÅoÉxitÅhread");

233 
qp
.
	`joö
(30000);

234 i‡(
qp
.
	`isAlive
()) {

235 
As£π
.
	`Áû
("QP faûedÅÿshutdow¿ö 30 sec⁄ds: " + 
qp
.
	`gëName
());

237 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

238 
LOG
.
	`debug
("QP i¡îru±ed: " + 
qp
.
	`gëName
(), 
e
);

240 
	}
}

242 
public
 
Såög
 
	$gëC⁄nSåög
() {

243  
ho°P‹t
;

244 
	}
}

246 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

247 
LOG
.
	`öfo
("TearDown started");

249 
O≥øtögSy°emMXBón
 
osMbón
 = 
M™agemítFa˘‹y
.
	`gëO≥øtögSy°emMXBón
();

250 i‡(
osMbón
 !
nuŒ
 && osMbó¿
ö°™˚of
 
UnixO≥øtögSy°emMXBón
) {

251 
UnixO≥øtögSy°emMXBón
 
unixos
 = (UnixO≥øtögSy°emMXBónË
osMbón
;

252 
LOG
.
	`öfo
("fdcou¡á·îÅe° is: " + 
unixos
.
	`gëO≥nFûeDes¸ùt‹Cou¡
());

255 
	`shutdownAŒ
();

256 
JMXEnv
.
	`ã¨Down
();

257 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumZxidSyncTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cQu‹umZxidSyncTe°
 
exãnds
 
	mZKTe°Ca£
 {

35 
Qu‹umBa£
 
	mqb
 = 
√w
 QuorumBase();

37 @
Bef‹e


38 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

39 
qb
.
	`£tUp
();

45 @
Te°


46 
public
 
	$ã°BehödLódî
(Ë
throws
 
Ex˚±i⁄
 {

48 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

49 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

50 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

51 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

53 
zk
.
	`¸óã
("/0", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

54 
zk
.
	`˛o£
();

55 
qb
.
	`shutdownSîvîs
();

56 
qb
.
	`°¨tSîvîs
();

57 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

58 
qb
.
	`shutdownSîvîs
();

59 
qb
.
	`°¨tSîvîs
();

60 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

61 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

62 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

64 
zk
.
	`¸óã
("/1", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

65 
zk
.
	`˛o£
();

66 
qb
.
	`shutdownSîvîs
();

67 
qb
.
	`°¨tSîvîs
();

68 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

69 
qb
.
	`shutdownSîvîs
();

70 
qb
.
	`°¨tSîvîs
();

71 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

72 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

73 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

75 
zk
.
	`¸óã
("/2", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

76 
zk
.
	`˛o£
();

77 
qb
.
	`shutdownSîvîs
();

78 
	`dñëeFûes
(
qb
.
s1dú
);

79 
	`dñëeFûes
(
qb
.
s2dú
);

80 
	`dñëeFûes
(
qb
.
s3dú
);

81 
	`dñëeFûes
(
qb
.
s4dú
);

82 
qb
.
	`£tupSîvîs
();

83 
qb
.
s1
.
	`°¨t
();

84 
qb
.
s2
.
	`°¨t
();

85 
qb
.
s3
.
	`°¨t
();

86 
qb
.
s4
.
	`°¨t
();

87 
As£π
.
	`as£πTrue
("Sîvî†didn'àcomêup", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000));

88 
qb
.
s5
.
	`°¨t
();

89 
Såög
 
ho°P‹t
 = "127.0.0.1:" + 
qb
.
s5
.
	`gëClõ¡P‹t
();

90 
As£π
.
	`as£πFÆ£
("Servers came up, but shouldn't have since it'sáhead ofÜeader",

91 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
ho°P‹t
, 10000));

92 
	}
}

94 
¥iv©e
 
	$dñëeFûes
(
Fûe
 
f
) {

95 
Fûe
 
v
 = 
√w
 
	`Fûe
(
f
, "version-2");

96 
Fûe
 
c
: 
v
.
	`li°Fûes
()) {

97 
c
.
	`dñëe
();

99 
	}
}

105 @
Te°


106 
public
 
	$ã°L©eLogs
(Ë
throws
 
Ex˚±i⁄
 {

108 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

109 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

110 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

111 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

113 
zk
.
	`¸óã
("/0", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

114 
zk
.
	`˛o£
();

115 
qb
.
	`shutdownSîvîs
();

116 
qb
.
	`°¨tSîvîs
();

117 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

118 
qb
.
	`shutdownSîvîs
();

119 
qb
.
	`°¨tSîvîs
();

120 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

121 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

122 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

124 
zk
.
	`¸óã
("/1", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

125 
zk
.
	`˛o£
();

126 
qb
.
	`shutdownSîvîs
();

127 
qb
.
	`°¨tSîvîs
();

128 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

129 
qb
.
	`shutdownSîvîs
();

130 
	`dñëeLogs
(
qb
.
s1dú
);

131 
	`dñëeLogs
(
qb
.
s2dú
);

132 
	`dñëeLogs
(
qb
.
s3dú
);

133 
	`dñëeLogs
(
qb
.
s4dú
);

134 
	`dñëeLogs
(
qb
.
s5dú
);

135 
qb
.
	`°¨tSîvîs
();

136 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

137 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

138 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

140 
zk
.
	`¸óã
("/2", 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

141 
zk
.
	`˛o£
();

142 
qb
.
	`shutdownSîvîs
();

143 
qb
.
	`°¨tSîvîs
();

144 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

145 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

146 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

148 
boﬁón
 
ßw2
 = 
Ál£
;

149 
Såög
 
chûd
: 
zk
.
	`gëChûdªn
("/", 
Ál£
)) {

150 i‡(
chûd
.
	`equÆs
("2")) {

151 
ßw2
 = 
åue
;

154 
zk
.
	`˛o£
();

155 
As£π
.
	`as£πTrue
("Didn'à£ê/2 (wíàback i¿time)", 
ßw2
);

156 
	}
}

158 
¥iv©e
 
	$dñëeLogs
(
Fûe
 
f
) {

159 
Fûe
 
v
 = 
√w
 
	`Fûe
(
f
, "version-2");

160 
Fûe
 
c
: 
v
.
	`li°Fûes
()) {

161 i‡(
c
.
	`gëName
().
	`°¨tsWôh
("log")) {

162 
c
.
	`dñëe
();

165 
	}
}

167 @
A·î


168 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

169 
qb
.
	`ã¨Down
();

170 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ReadOnlyModeTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gLöeNumbîRódî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gSåögRódî
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gªgex
.
	gP©ã∫
;

28 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLayout
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLevñ
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gWrôîAµídî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gNŸRódO∆yEx˚±i⁄
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
.
	gSèãs
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCou¡downW©chî
;

45 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

46 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

47 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

49 
public
 cœs†
	cRódO∆yModeTe°
 
exãnds
 
	mZKTe°Ca£
 {

50 
¥iv©e
 
	mCONNECTION_TIMEOUT
 = 
Qu‹umBa£
.
CONNECTION_TIMEOUT
;

51 
¥iv©e
 
Qu‹umUtû
 
	mqu
 = 
√w
 QuorumUtil(1);

53 @
Bef‹e


54 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

55 
Sy°em
.
	`£tPr›îty
("readonlymode.enabled", "true");

56 
qu
.
	`°¨tQu‹um
();

59 @
A·î


60 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

61 
Sy°em
.
	`£tPr›îty
("readonlymode.enabled", "false");

62 
qu
.
	`ã¨Down
();

63 
	}
}

69 @
Te°


70 
public
 
	$ã°RódO∆yClõ¡
(Ë
throws
 
Ex˚±i⁄
 {

71 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

72 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qu
.
	`gëC⁄nSåög
(), 
CONNECTION_TIMEOUT
,

73 
w©chî
, 
åue
);

74 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

76 
föÆ
 
Såög
 
d©a
 = "DataÅo beÑead in RO mode";

77 
föÆ
 
Såög
 
node
 = "/tnode";

78 
zk
.
	`¸óã
(
node
, 
d©a
.
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

79 
Cª©eMode
.
PERSISTENT
);

81 
w©chî
.
	`ª£t
();

82 
qu
.
	`shutdown
(2);

83 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

86 
Såög
 
ªmŸeD©a
 = 
√w
 
	`Såög
(
zk
.
	`gëD©a
(
node
, 
Ál£
, 
nuŒ
));

87 
As£π
.
	`as£πEquÆs
(
d©a
, 
ªmŸeD©a
);

89 
åy
 {

90 
zk
.
	`£tD©a
(
node
, "nÿway".
	`gëByãs
(), -1);

91 
As£π
.
	`Áû
("Write operation has succeeded during RO mode");

92 } 
	`ˇtch
 (
NŸRódO∆yEx˚±i⁄
 
e
) {

96 
w©chî
.
	`ª£t
();

97 
qu
.
	`°¨t
(2);

98 
As£π
.
	`as£πTrue
("waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(

99 "127.0.0.1:" + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
, 
CONNECTION_TIMEOUT
));

100 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

101 
zk
.
	`£tD©a
(
node
, "We'ª i¿thêqu‹umÇow".
	`gëByãs
(), -1);

103 
zk
.
	`˛o£
();

104 
	}
}

110 @
Te°


111 
public
 
	$ã°C⁄√˘i⁄Evíts
(Ë
throws
 
Ex˚±i⁄
 {

112 
föÆ
 
Li°
<
Kì≥rSèã
> 
°©es
 = 
√w
 
AºayLi°
<KeeperState>();

113 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qu
.
	`gëC⁄nSåög
(), 
CONNECTION_TIMEOUT
,

114 
√w
 
	`W©chî
() {

115 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

116 
°©es
.
	`add
(
evít
.
	`gëSèã
());

118 }, 
åue
);

119 
boﬁón
 
suc˚ss
 = 
Ál£
;

120 
i
 = 0; i < 30; i++) {

121 
åy
 {

122 
zk
.
	`¸óã
("/ã°", "ã°".
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

123 
Cª©eMode
.
PERSISTENT
);

124 
suc˚ss
=
åue
;

126 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

127 
Thªad
.
	`¶ìp
(1000);

130 
As£π
.
	`as£πTrue
("DidÇŸ suc˚ed i¿c⁄√˘ög i¿30s", 
suc˚ss
);

134 
qu
.
	`shutdown
(2);

135 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

136 !(
zk
.
	`gëSèã
(Ë=
Sèãs
.
CONNECTEDREADONLY
)) {

137 
Thªad
.
	`¶ìp
(200);

139 
As£π
.
	`as£πTrue
("C™'àc⁄√˘Åÿthê£rvî", 
Sy°em


140 .
	`cuºítTimeMûlis
()

141 - 
°¨t
 < 30000);

146 
As£π
.
	`as£πTrue
("C⁄√˘edRódO∆yÉvíàwa¢'àª˚ived", 
°©es


147 .
	`gë
(2Ë=
Kì≥rSèã
.
C⁄√˘edRódO∆y
);

148 
zk
.
	`˛o£
();

149 
	}
}

156 @
Te°


157 
public
 
	$ã°Sessi⁄E°ablishmít
(Ë
throws
 
Ex˚±i⁄
 {

158 
qu
.
	`shutdown
(2);

160 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

161 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qu
.
	`gëC⁄nSåög
(), 
CONNECTION_TIMEOUT
,

162 
w©chî
, 
åue
);

163 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

164 
As£π
.
	`as£πSame
("should bêöÑ/ÿmode", 
Sèãs
.
CONNECTEDREADONLY
, 
zk


165 .
	`gëSèã
());

166 
ÁkeId
 = 
zk
.
	`gëSessi⁄Id
();

168 
w©chî
.
	`ª£t
();

169 
qu
.
	`°¨t
(2);

170 
As£π
.
	`as£πTrue
("waôög f‹ sîvî up", 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(

171 "127.0.0.1:" + 
qu
.
	`gëPìr
(2).
˛õ¡P‹t
, 
CONNECTION_TIMEOUT
));

172 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

173 
zk
.
	`¸óã
("/ã°", "ã°".
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

174 
Cª©eMode
.
PERSISTENT
);

175 
As£π
.
	`as£πFÆ£
("Ákê£ssi⁄ándÑó»£ssi⁄ havêßmêid", 
zk


176 .
	`gëSessi⁄Id
(Ë=
ÁkeId
);

178 
zk
.
	`˛o£
();

179 
	}
}

185 @
SuµªssW¨nögs
("deprecation")

186 @
Te°


187 
public
 
	$ã°SìkF‹RwSîvî
(Ë
throws
 
Ex˚±i⁄
 {

190 
Layout
 
œyout
 = 
Loggî
.
	`gëRoŸLoggî
().
	`gëAµídî
("CONSOLE")

191 .
	`gëLayout
();

192 
ByãAºayOuçutSåóm
 
os
 = 
√w
 
	`ByãAºayOuçutSåóm
();

193 
WrôîAµídî
 
≠≥ndî
 = 
√w
 
	`WrôîAµídî
(
œyout
, 
os
);

194 
≠≥ndî
.
	`£tImmedüãFlush
(
åue
);

195 
≠≥ndî
.
	`£tThªshﬁd
(
Levñ
.
INFO
);

196 
Loggî
 
zloggî
 = Loggî.
	`gëLoggî
("org.apache.zookeeper");

197 
zloggî
.
	`addAµídî
(
≠≥ndî
);

199 
åy
 {

200 
qu
.
	`shutdown
(2);

201 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

202 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qu
.
	`gëC⁄nSåög
(),

203 
CONNECTION_TIMEOUT
, 
w©chî
, 
åue
);

204 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

207 
qu
.
	`gëPìr
(1).
≥î
.
	`su•íd
();

211 
w©chî
.
	`ª£t
();

212 
qu
.
	`°¨t
(2);

213 
qu
.
	`°¨t
(3);

214 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qu
.
	`gëC⁄nSåög
(), 2000);

215 
w©chî
.
	`waôF‹C⁄√˘ed
(
CONNECTION_TIMEOUT
);

216 
zk
.
	`¸óã
("/ã°", "ã°".
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

217 
Cª©eMode
.
PERSISTENT
);

220 
qu
.
	`gëPìr
(1).
≥î
.
	`ªsume
();

221 } 
föÆly
 {

222 
zloggî
.
	`ªmoveAµídî
(
≠≥ndî
);

225 
os
.
	`˛o£
();

226 
LöeNumbîRódî
 
r
 = 
√w
 
	`LöeNumbîRódî
“ew 
	`SåögRódî
(
os


227 .
	`toSåög
()));

228 
Såög
 
löe
;

229 
P©ã∫
 
p
 = P©ã∫.
	`compûe
(".*Majority server found.*");

230 
boﬁón
 
found
 = 
Ál£
;

231 (
löe
 = 
r
.
	`ªadLöe
()Ë!
nuŒ
) {

232 i‡(
p
.
	`m©chî
(
löe
).
	`m©ches
()) {

233 
found
 = 
åue
;

237 
As£π
.
	`as£πTrue
(

239 
found
);

240 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RecoveryTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

42 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

44 
public
 cœs†
	cRecovîyTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

45 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
RecovîyTe°
.
˛ass
);

47 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 =

48 "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

50 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	m°¨tSig«l
;

64 @
Te°


65 
public
 
	$ã°Recovîy
(Ë
throws
 
Ex˚±i⁄
 {

66 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

68 
Clõ¡Ba£
.
	`£tupTe°Env
();

69 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

71 
ﬁdS«pCou¡
 = 
SyncReque°Pro˚ss‹
.
	`gëS«pCou¡
();

72 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

73 
åy
 {

74 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

75 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

76 
f
.
	`°¨tup
(
zks
);

77 
LOG
.
	`öfo
("starting upÅheÅhe server, waiting");

79 
As£π
.
	`as£πTrue
("waiting for server up",

80 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,

81 
CONNECTION_TIMEOUT
));

83 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

84 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

85 
°¨tSig«l
.
	`awaô
(
CONNECTION_TIMEOUT
,

86 
TimeUnô
.
MILLISECONDS
);

87 
As£π
.
	`as£πTrue
("cou¡ =0", 
°¨tSig«l
.
	`gëCou¡
() == 0);

88 
Såög
 
∑th
;

89 
LOG
.
	`öfo
("starting creatingÇodes");

90 
i
 = 0; i < 10; i++) {

91 
∑th
 = "/" + 
i
;

92 
zk
.
	`¸óã
(
∑th
,

93 (
∑th
 + "!").
	`gëByãs
(),

94 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

95 
j
 = 0; j < 10; j++) {

96 
Såög
 
sub∑th
 = 
∑th
 + "/" + 
j
;

97 
zk
.
	`¸óã
(
sub∑th
, (sub∑th + "!").
	`gëByãs
(),

98 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

99 
k
 = 0; k < 20; k++) {

100 
Såög
 
subsub∑th
 = 
sub∑th
 + "/" + 
k
;

101 
zk
.
	`¸óã
(
subsub∑th
, (subsub∑th + "!").
	`gëByãs
(),

102 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

107 
f
.
	`shutdown
();

108 
As£π
.
	`as£πTrue
("waiting for server down",

109 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

110 
CONNECTION_TIMEOUT
));

112 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

113 
f
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

115 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

117 
f
.
	`°¨tup
(
zks
);

119 
As£π
.
	`as£πTrue
("waiting for server up",

120 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,

121 
CONNECTION_TIMEOUT
));

123 
°¨tSig«l
.
	`awaô
(
CONNECTION_TIMEOUT
,

124 
TimeUnô
.
MILLISECONDS
);

125 
As£π
.
	`as£πTrue
("cou¡ =0", 
°¨tSig«l
.
	`gëCou¡
() == 0);

127 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

128 
i
 = 0; i < 10; i++) {

129 
∑th
 = "/" + 
i
;

130 
LOG
.
	`öfo
("Checkög " + 
∑th
);

131 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
∑th
, 
Ál£
, 
°©
)),Öath

133 
j
 = 0; j < 10; j++) {

134 
Såög
 
sub∑th
 = 
∑th
 + "/" + 
j
;

135 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
sub∑th
, 
Ál£
, 
°©
)),

136 
sub∑th
 + "!");

137 
k
 = 0; k < 20; k++) {

138 
Såög
 
subsub∑th
 = 
sub∑th
 + "/" + 
k
;

139 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
subsub∑th
, 
Ál£
,

140 
°©
)), 
subsub∑th
 + "!");

144 
f
.
	`shutdown
();

146 
As£π
.
	`as£πTrue
("waiting for server down",

147 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

148 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

150 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

151 
f
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

153 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

155 
f
.
	`°¨tup
(
zks
);

157 
As£π
.
	`as£πTrue
("waiting for server up",

158 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,

159 
CONNECTION_TIMEOUT
));

161 
°¨tSig«l
.
	`awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

162 
As£π
.
	`as£πTrue
("cou¡ =0", 
°¨tSig«l
.
	`gëCou¡
() == 0);

164 
°©
 = 
√w
 
	`Sèt
();

165 
LOG
.
	`öfo
("Check 2");

166 
i
 = 0; i < 10; i++) {

167 
∑th
 = "/" + 
i
;

168 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
∑th
, 
Ál£
, 
°©
)),

169 
∑th
 + "!");

170 
j
 = 0; j < 10; j++) {

171 
Såög
 
sub∑th
 = 
∑th
 + "/" + 
j
;

172 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
sub∑th
, 
Ál£
, 
°©
)),

173 
sub∑th
 + "!");

174 
k
 = 0; k < 20; k++) {

175 
Såög
 
subsub∑th
 = 
sub∑th
 + "/" + 
k
;

176 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
zk
.
	`gëD©a
(
subsub∑th
, 
Ál£
,

177 
°©
)), 
subsub∑th
 + "!");

181 
zk
.
	`˛o£
();

183 
f
.
	`shutdown
();

185 
As£π
.
	`as£πTrue
("waiting for server down",

186 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

187 
CONNECTION_TIMEOUT
));

188 } 
föÆly
 {

189 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(
ﬁdS«pCou¡
);

198 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

199 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
(Ë+ " " +Évít.
	`gëP©h
());

200 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


201 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0)

203 
°¨tSig«l
.
	`cou¡Down
();

205 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RepeatStartupTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cRïótSèπupTe°
 
exãnds
 
	mZKTe°Ca£
 {

37 @
Te°


38 
public
 
	$ã°Faû
(Ë
throws
 
Ex˚±i⁄
 {

39 
Qu‹umBa£
 
qb
 = 
√w
 
	`Qu‹umBa£
();

40 
qb
.
	`£tUp
();

42 
Sy°em
.
out
.
	`¥öén
("Commít:Åhê£rvî†¨ê© " + 
qb
.
ho°P‹t
);

43 
ZooKì≥r
 
zk
 = 
qb
.
	`¸óãClõ¡
();

44 
zk
.
	`¸óã
("/ã°", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

45 
zk
.
	`˛o£
();

46 
qb
.
	`shutdown
(qb.
s1
);

47 
qb
.
	`shutdown
(qb.
s2
);

48 
qb
.
	`shutdown
(qb.
s3
);

49 
qb
.
	`shutdown
(qb.
s4
);

50 
qb
.
	`shutdown
(qb.
s5
);

51 
Såög
 
hp
 = 
qb
.
ho°P‹t
.
	`•lô
(",")[0];

52 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
qb
.
s1
.
	`gëTxnFa˘‹y
().
	`gëS«pDú
(),

53 
qb
.
s1
.
	`gëTxnFa˘‹y
().
	`gëD©aDú
(), 3000);

54 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
hp
.
	`•lô
(":")[1]);

55 
SîvîCnxnFa˘‹y
 
Á˘‹y
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

57 
Á˘‹y
.
	`°¨tup
(
zks
);

58 
Sy°em
.
out
.
	`¥öén
("Comment: starting factory");

59 
As£π
.
	`as£πTrue
("waiting for server up",

60 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
PORT
,

61 
Qu‹umTe°
.
CONNECTION_TIMEOUT
));

62 
Á˘‹y
.
	`shutdown
();

63 
As£π
.
	`as£πTrue
("waiting for server down",

64 
Clõ¡Ba£
.
	`waôF‹SîvîDown
("127.0.0.1:" + 
PORT
,

65 
Qu‹umTe°
.
CONNECTION_TIMEOUT
));

66 
Sy°em
.
out
.
	`¥öén
("Comment: shutting down standalone");

68 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RestoreCommittedLogTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	glog4j
.
	gLoggî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gLódî
.
	gPr›oßl
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

39 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

44 
public
 cœs†
	cRe°‹eCommôãdLogTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

45 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = Loggî.
gëLoggî
(
Re°‹eCommôãdLogTe°
.
˛ass
);

46 
¥iv©e
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

47 
¥iv©e
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 3000;

52 @
Te°


53 
public
 
	$ã°Re°‹eCommôãdLog
(Ë
throws
 
Ex˚±i⁄
 {

54 
Fûe
 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

55 
Clõ¡Ba£
.
	`£tupTe°Env
();

56 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

57 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

58 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

59 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

60 
f
.
	`°¨tup
(
zks
);

61 
As£π
.
	`as£πTrue
("waiting for server being up ",

62 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,
CONNECTION_TIMEOUT
));

63 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

64 
åy
 {

65 
i
 = 0; i< 2000; i++) {

66 
zk
.
	`¸óã
("/övÆid¢≠-" + 
i
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

67 
Cª©eMode
.
PERSISTENT
);

69 } 
föÆly
 {

70 
zk
.
	`˛o£
();

72 
f
.
	`shutdown
();

73 
As£π
.
	`as£πTrue
("waiting for serverÅo shutdown",

74 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

77 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDir, 3000);

78 
zks
.
	`°¨td©a
();

79 
LökedLi°
<
Pr›oßl
> 
commôãdLog
 = 
zks
.
	`gëZKD©aba£
().
	`gëCommôãdLog
();

80 
logsize
 = 
commôãdLog
.
	`size
();

81 
LOG
.
	`öfo
("commôãdLog sizê" + 
logsize
);

82 
As£π
.
	`as£πTrue
("log sizê!0", (
logsize
 != 0));

85 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

87 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthDesignatedClientTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

30 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

31 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
public
 cœs†
	cSa¶AuthDesig«ãdClõ¡Te°
 
exãnds
 
	mClõ¡Ba£
 {

35 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

36 
	mSy°em
.
£tPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "MyZookeeperClient");

38 
	måy
 {

39 
Fûe
 
	mtmpDú
 = 
¸óãTmpDú
();

40 
Fûe
 
	mß¶C⁄fFûe
 = 
√w
 Fûe(
tmpDú
, "jaas.conf");

41 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
ß¶C⁄fFûe
);

43 
	mfwrôî
.
wrôe
("" +

60 
	mfwrôî
.
˛o£
();

61 
	mSy°em
.
£tPr›îty
("java.£curôy.auth.logö.c⁄fig",
ß¶C⁄fFûe
.
gëAbsﬁuãP©h
());

63 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

68 @
Te°


69 
public
 
	$ã°Auth
(Ë
throws
 
Ex˚±i⁄
 {

70 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

71 
åy
 {

72 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

73 
Thªad
.
	`¶ìp
(1000);

74 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

75 
As£π
.
	`Áû
("ã° faûed :" + 
e
);

77 
föÆly
 {

78 
zk
.
	`˛o£
();

80 
	}
}

82 @
Te°


83 
public
 
	$ã°Sa¶C⁄fig
(Ë
throws
 
Ex˚±i⁄
 {

84 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

85 
åy
 {

86 
zk
.
	`gëChûdªn
("/", 
Ál£
);

87 
As£π
.
	`as£πFÆ£
(
zk
.
	`gëSa¶Clõ¡
().

88 
	`˛õ¡Tu¬ñedAuthítiˇti⁄InProgªss
());

89 
As£π
.
	`as£πEquÆs
(
zk
.
	`gëSa¶Clõ¡
().
	`gëSa¶Sèã
(),

90 
ZooKì≥rSa¶Clõ¡
.
Sa¶Sèã
.
COMPLETE
);

91 
As£π
.
	`as£πNŸNuŒ
(

92 
javax
.
£curôy
.
auth
.
logö
.
C⁄figuøti⁄
.
	`gëC⁄figuøti⁄
().

93 
	`gëAµC⁄figuøti⁄E¡ry
("MyZookeeperClient"));

94 
As£π
.
	`as£πSame
(
zk
.
	`gëSa¶Clõ¡
().
	`gëLogöC⁄ãxt
(),

96 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

97 
As£π
.
	`Áû
("ã° faûed :" + 
e
);

98 } 
föÆly
 {

99 
zk
.
	`˛o£
();

101 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthDesignatedServerTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSa¶Sîvî
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gJØsC⁄figuøti⁄
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
public
 cœs†
	cSa¶AuthDesig«ãdSîvîTe°
 
exãnds
 
	mClõ¡Ba£
 {

40 
public
 
	mAUTHENTICATION_TIMEOUT
 = 30000;

43 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

44 
	mSy°em
.
£tPr›îty
(
ZooKì≥rSa¶Sîvî
.
LOGIN_CONTEXT_NAME_KEY
, "MyZookeeperServer");

46 
JØsC⁄figuøti⁄
 
	mc⁄f
 = 
√w
 JaasConfiguration();

52 
	mc⁄f
.
addSe˘i⁄
("Server", "org.apache.zookeeper.server.auth.DigestLoginModule",

55 
	mc⁄f
.
addSe˘i⁄
("MyZookeeperServer", "org.apache.zookeeper.server.auth.DigestLoginModule",

58 
	mc⁄f
.
addSe˘i⁄
("Client", "org.apache.zookeeper.server.auth.DigestLoginModule",

61 
	mjavax
.
	m£curôy
.
	mauth
.
	mlogö
.
	mC⁄figuøti⁄
.
£tC⁄figuøti⁄
(
c⁄f
);

64 
¥iv©e
 
AtomicI¡egî
 
	gauthFaûed
 = 
√w
 AtomicInteger(0);

66 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

67 vﬁ©ûê
Cou¡DownL©ch
 
	gauthCom∂ëed
;

69 @
Ovîride


70 
synchr⁄ized
 
public
 
ª£t
() {

71 
	gauthCom∂ëed
 = 
√w
 
Cou¡DownL©ch
(1);

72 
	gsu≥r
.
ª£t
();

75 @
Ovîride


76 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

77 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

78 
authFaûed
.
ö¸emítAndGë
();

79 
	gauthCom∂ëed
.
cou¡Down
();

80 } i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
Sa¶Authítiˇãd
) {

81 
authCom∂ëed
.
cou¡Down
();

83 
	gsu≥r
.
¥o˚ss
(
evít
);

88 @
Te°


89 
public
 
	$ã°Auth
(Ë
throws
 
Ex˚±i⁄
 {

90 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

91 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
w©chî
);

92 
w©chî
.
authCom∂ëed
.
	`awaô
(
AUTHENTICATION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

93 
As£π
.
	`as£πEquÆs
(
authFaûed
.
	`gë
(), 0);

95 
åy
 {

96 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

97 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

98 
As£π
.
	`Áû
("ã° faûed :" + 
e
);

100 
föÆly
 {

101 
zk
.
	`˛o£
();

103 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

36 
public
 cœs†
	cSa¶AuthFaûDesig«ãdClõ¡Te°
 
exãnds
 
	mClõ¡Ba£
 {

38 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

39 
	mSy°em
.
£tPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "MyZookeeperClient");

41 
	måy
 {

42 
Fûe
 
	mtmpDú
 = 
¸óãTmpDú
();

43 
Fûe
 
	mß¶C⁄fFûe
 = 
√w
 Fûe(
tmpDú
, "jaas.conf");

44 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
ß¶C⁄fFûe
);

46 
	mfwrôî
.
wrôe
("" +

63 
	mfwrôî
.
˛o£
();

64 
	mSy°em
.
£tPr›îty
("java.£curôy.auth.logö.c⁄fig",
ß¶C⁄fFûe
.
gëAbsﬁuãP©h
());

66 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

71 
¥iv©e
 
AtomicI¡egî
 
	gauthFaûed
 = 
√w
 AtomicInteger(0);

73 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

74 @
Ovîride


75 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

76 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

77 
authFaûed
.
ö¸emítAndGë
();

80 
	gsu≥r
.
¥o˚ss
(
evít
);

85 @
Te°


86 
public
 
	$ã°Auth
(Ë
throws
 
Ex˚±i⁄
 {

87 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

88 
åy
 {

89 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

90 
As£π
.
	`Áû
("Should have gottenÉxception.");

91 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

93 
LOG
.
	`öfo
("GŸÉx˚±i⁄á†ex≥˘ed: " + 
e
);

95 
föÆly
 {

96 
zk
.
	`˛o£
();

98 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthFailTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

35 
public
 cœs†
	cSa¶AuthFaûTe°
 
exãnds
 
	mClõ¡Ba£
 {

37 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

38 
	mSy°em
.
£tPr›îty
("zookeeper.allowSaslFailedClients","true");

40 
	måy
 {

41 
Fûe
 
	mtmpDú
 = 
¸óãTmpDú
();

42 
Fûe
 
	mß¶C⁄fFûe
 = 
√w
 Fûe(
tmpDú
, "jaas.conf");

43 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
ß¶C⁄fFûe
);

45 
	mfwrôî
.
wrôe
("" +

55 
	mfwrôî
.
˛o£
();

56 
	mSy°em
.
£tPr›îty
("java.£curôy.auth.logö.c⁄fig",
ß¶C⁄fFûe
.
gëAbsﬁuãP©h
());

58 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

63 
¥iv©e
 
AtomicI¡egî
 
	gauthFaûed
 = 
√w
 AtomicInteger(0);

65 @
Ovîride


66 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

67 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


69 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

70  
	`¸óãClõ¡
(
w©chî
, 
hp
);

71 
	}
}

73 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

74 @
Ovîride


75 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

76 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

77 
synchr⁄ized
(
authFaûed
) {

78 
authFaûed
.
ö¸emítAndGë
();

79 
	gauthFaûed
.
nŸify
();

83 
	gsu≥r
.
¥o˚ss
(
evít
);

88 @
Te°


89 
public
 
	$ã°BadSa¶AuthNŸifõsW©ch
(Ë
throws
 
Ex˚±i⁄
 {

90 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

92 
	`synchr⁄ized
(
authFaûed
) {

93 
authFaûed
.
	`waô
();

95 
As£π
.
	`as£πEquÆs
(
authFaûed
.
	`gë
(),1);

96 
zk
.
	`˛o£
();

97 
	}
}

100 @
Te°


101 
public
 
	$ã°AuthFaû
(Ë
throws
 
Ex˚±i⁄
 {

102 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

103 
åy
 {

104 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

105 
As£π
.
	`Áû
("Should have gottenÉxception.");

106 } 
	`ˇtch
(
Ex˚±i⁄
 
e
 ) {

108 
LOG
.
	`öfo
("GŸÉx˚±i⁄á†ex≥˘ed: " + 
e
);

109 } 
föÆly
 {

110 
zk
.
	`˛o£
();

112 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gZooKì≥rSa¶Clõ¡
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

36 
public
 cœs†
	cSa¶AuthMissögClõ¡C⁄figTe°
 
exãnds
 
	mClõ¡Ba£
 {

38 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

41 
	mSy°em
.
£tPr›îty
(
ZooKì≥rSa¶Clõ¡
.
LOGIN_CONTEXT_NAME_KEY
, "MyZookeeperClient");

43 
	måy
 {

44 
Fûe
 
	mtmpDú
 = 
¸óãTmpDú
();

45 
Fûe
 
	mß¶C⁄fFûe
 = 
√w
 Fûe(
tmpDú
, "jaas.conf");

46 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
ß¶C⁄fFûe
);

48 
	mfwrôî
.
wrôe
("" +

61 
	mfwrôî
.
˛o£
();

62 
	mSy°em
.
£tPr›îty
("java.£curôy.auth.logö.c⁄fig",
ß¶C⁄fFûe
.
gëAbsﬁuãP©h
());

64 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

69 
¥iv©e
 
AtomicI¡egî
 
	gauthFaûed
 = 
√w
 AtomicInteger(0);

71 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

72 @
Ovîride


73 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

74 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

75 
authFaûed
.
ö¸emítAndGë
();

78 
	gsu≥r
.
¥o˚ss
(
evít
);

83 @
Te°


84 
public
 
	$ã°Auth
(Ë
throws
 
Ex˚±i⁄
 {

85 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

86 
åy
 {

87 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

88 
As£π
.
	`Áû
("Should have gottenÉxception.");

89 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

91 
LOG
.
	`öfo
("GŸÉx˚±i⁄á†ex≥˘ed: " + 
e
);

93 
föÆly
 {

94 
zk
.
	`˛o£
();

96 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gFûeWrôî
;

23 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gId
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

40 
public
 cœs†
	cSa¶AuthTe°
 
exãnds
 
	mClõ¡Ba£
 {

42 
	mSy°em
.
£tPr›îty
("zookeeper.authProvider.1","org.apache.zookeeper.server.auth.SASLAuthenticationProvider");

44 
	måy
 {

45 
Fûe
 
	mtmpDú
 = 
¸óãTmpDú
();

46 
Fûe
 
	mß¶C⁄fFûe
 = 
√w
 Fûe(
tmpDú
, "jaas.conf");

47 
FûeWrôî
 
	mfwrôî
 = 
√w
 FûeWrôî(
ß¶C⁄fFûe
);

49 
	mfwrôî
.
wrôe
("" +

59 
	mfwrôî
.
˛o£
();

60 
	mSy°em
.
£tPr›îty
("java.£curôy.auth.logö.c⁄fig",
ß¶C⁄fFûe
.
gëAbsﬁuãP©h
());

62 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

67 
¥iv©e
 
AtomicI¡egî
 
	gauthFaûed
 = 
√w
 AtomicInteger(0);

69 @
Ovîride


70 
¥Ÿe˘ed
 
Te°abÀZooKì≥r
 
	$¸óãClõ¡
(
Såög
 
hp
)

71 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


73 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

74  
	`¸óãClõ¡
(
w©chî
, 
hp
);

75 
	}
}

77 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

78 @
Ovîride


79 
public
 
synchr⁄ized
 
¥o˚ss
(
W©chedEvít
 
evít
) {

80 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
AuthFaûed
) {

81 
authFaûed
.
ö¸emítAndGë
();

84 
	gsu≥r
.
¥o˚ss
(
evít
);

89 @
Te°


90 
public
 
	$ã°Auth
(Ë
throws
 
Ex˚±i⁄
 {

91 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

92 
åy
 {

93 
zk
.
	`¸óã
("/∑th1", 
nuŒ
, 
Ids
.
CREATOR_ALL_ACL
, 
Cª©eMode
.
PERSISTENT
);

94 
Thªad
.
	`¶ìp
(1000);

95 } 
föÆly
 {

96 
zk
.
	`˛o£
();

98 
	}
}

100 @
Te°


101 
public
 
	$ã°VÆidSa¶Ids
(Ë
throws
 
Ex˚±i⁄
 {

102 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

104 
Li°
<
Såög
> 
vÆidIds
 = 
√w
 
AºayLi°
<String>();

105 
vÆidIds
.
	`add
("user");

106 
vÆidIds
.
	`add
("service/host.name.com");

107 
vÆidIds
.
	`add
("user@KERB.REALM");

108 
vÆidIds
.
	`add
("service/host.name.com@KERB.REALM");

110 
i
 = 0;

111 
Såög
 
vÆidId
: 
vÆidIds
) {

112 
Li°
<
ACL
> 
a˛Li°
 = 
√w
 
AºayLi°
<ACL>();

113 
ACL
 
a˛
 = 
√w
 
	`ACL
(0,√w 
	`Id
("ß¶",
vÆidId
));

114 
a˛Li°
.
	`add
(
a˛
);

115 
zk
.
	`¸óã
("/vÆid"+
i
,
nuŒ
,
a˛Li°
,
Cª©eMode
.
PERSISTENT
);

116 
i
++;

118 
	}
}

120 @
Te°


121 
public
 
	$ã°InvÆidSa¶Ids
(Ë
throws
 
Ex˚±i⁄
 {

122 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

124 
Li°
<
Såög
> 
övÆidIds
 = 
√w
 
AºayLi°
<String>();

125 
övÆidIds
.
	`add
("user@KERB.REALM/server.com");

126 
övÆidIds
.
	`add
("user@KERB.REALM1@KERB.REALM2");

128 
i
 = 0;

129 
Såög
 
övÆidId
: 
övÆidIds
) {

130 
Li°
<
ACL
> 
a˛Li°
 = 
√w
 
AºayLi°
<ACL>();

131 
åy
 {

132 
ACL
 
a˛
 = 
√w
 
	`ACL
(0,√w 
	`Id
("ß¶",
övÆidId
));

133 
a˛Li°
.
	`add
(
a˛
);

134 
zk
.
	`¸óã
("/övÆid"+
i
,
nuŒ
,
a˛Li°
,
Cª©eMode
.
PERSISTENT
);

135 
As£π
.
	`Áû
("SASLAuthenticationProvider.isValid() failedÅo catch invalid Id.");

137 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
InvÆidACLEx˚±i⁄
 
e
) {

140 
föÆly
 {

141 
i
++;

144 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SessionInvalidationTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gByãAºayOuçutSåóm
;

22 
imp‹t
 
	gjava
.
	gio
.
	gI≈utSåóm
;

23 
imp‹t
 
	gjava
.
	gio
.
	gOuçutSåóm
;

24 
imp‹t
 
	gjava
.
	g√t
.
	gSockë
;

26 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gBö¨yOuçutArchive
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gOpCode
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gC⁄√˘Reque°
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gCª©eReque°
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gReque°Hódî
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

38 
public
 cœs†
	cSessi⁄InvÆid©i⁄Te°
 
exãnds
 
	mClõ¡Ba£
 {

49 @
Te°


50 
public
 
	$ã°Cª©eA·îClo£ShouldFaû
(Ë
throws
 
Ex˚±i⁄
 {

51 
i
 = 0; i < 10; i++) {

52 
ByãAºayOuçutSåóm
 
baos
 = 
√w
 
	`ByãAºayOuçutSåóm
();

53 
Bö¨yOuçutArchive
 
bﬂ
 = Bö¨yOuçutArchive.
	`gëArchive
(
baos
);

56 
bﬂ
.
	`wrôeI¡
(44, "len");

57 
C⁄√˘Reque°
 
c⁄Req
 = 
√w
 
	`C⁄√˘Reque°
(0, 0, 30000, 0,Çew 
byã
[16]);

58 
c⁄Req
.
	`£rülize
(
bﬂ
, "connect");

61 
bﬂ
.
	`wrôeI¡
(8, "len");

62 
Reque°Hódî
 
h
 = 
√w
 
	`Reque°Hódî
(1, 
ZooDefs
.
OpCode
.
˛o£Sessi⁄
);

63 
h
.
	`£rülize
(
bﬂ
, "header");

66 
bﬂ
.
	`wrôeI¡
(52, "len");

67 
Reque°Hódî
 
hódî
 = 
√w
 
	`Reque°Hódî
(2, 
OpCode
.
¸óã
);

68 
hódî
.
	`£rülize
(
bﬂ
, "header");

69 
Cª©eReque°
 
¸óãReq
 = 
√w
 
	`Cª©eReque°
("/foo" + 
i
,Çew 
byã
[0],

70 
Ids
.
OPEN_ACL_UNSAFE
, 1);

71 
¸óãReq
.
	`£rülize
(
bﬂ
, "request");

72 
baos
.
	`˛o£
();

74 
Sy°em
.
out
.
	`¥öén
("Lígth:" + 
baos
.
	`toByãAºay
().
Àngth
);

76 
Såög
 
hp
[] = 
ho°P‹t
.
	`•lô
(":");

77 
Sockë
 
sock
 = 
√w
 
	`Sockë
(
hp
[0], 
I¡egî
.
	`∑r£I¡
(hp[1]));

78 
I≈utSåóm
 
ªsu…Såóm
 = 
nuŒ
;

79 
åy
 {

80 
OuçutSåóm
 
out°ªam
 = 
sock
.
	`gëOuçutSåóm
();

81 
byã
[] 
d©a
 = 
baos
.
	`toByãAºay
();

82 
out°ªam
.
	`wrôe
(
d©a
);

83 
out°ªam
.
	`Êush
();

85 
ªsu…Såóm
 = 
sock
.
	`gëI≈utSåóm
();

86 
byã
[] 
b
 = 
√w
 byte[10000];

87 
Àn
;

88 (
Àn
 = 
ªsu…Såóm
.
	`ªad
(
b
)) >= 0) {

90 
Sy°em
.
out
.
	`¥öén
("gŸÀn:" + 
Àn
);

92 } 
föÆly
 {

93 i‡(
ªsu…Såóm
 !
nuŒ
) {

94 
ªsu…Såóm
.
	`˛o£
();

96 
sock
.
	`˛o£
();

100 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

101 
As£π
.
	`as£πEquÆs
(1, 
zk
.
	`gëChûdªn
("/", 
Ál£
).
	`size
());

103 
zk
.
	`˛o£
();

105 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SessionTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

27 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

28 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

29 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

31 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

47 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

48 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

49 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

50 
imp‹t
 
	g‹g
.
	gjunô
.
	gIgn‹e
;

51 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

53 
public
 cœs†
	cSessi⁄Te°
 
exãnds
 
	mZKTe°Ca£
 {

54 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Sessi⁄Te°
.
˛ass
);

56 
¥iv©e
 
föÆ
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" +

57 
P‹tAssignmít
.
unique
();

59 
¥iv©e
 
SîvîCnxnFa˘‹y
 
	m£rvîFa˘‹y
;

61 
¥iv©e
 
Cou¡DownL©ch
 
	m°¨tSig«l
;

63 
Fûe
 
	mtmpDú
;

65 
¥iv©e
 
föÆ
 
	mTICK_TIME
 = 3000;

67 @
Bef‹e


68 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

69 i‡(
tmpDú
 =
nuŒ
) {

70 
tmpDú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

73 
Clõ¡Ba£
.
	`£tupTe°Env
();

74 
ZooKì≥rSîvî
 
zs
 = 
√w
 
	`ZooKì≥rSîvî
(
tmpDú
,ÅmpDú, 
TICK_TIME
);

76 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

77 
£rvîFa˘‹y
 = 
SîvîCnxnFa˘‹y
.
	`¸óãFa˘‹y
(
PORT
, -1);

78 
£rvîFa˘‹y
.
	`°¨tup
(
zs
);

80 
As£π
.
	`as£πTrue
("waiting for server up",

81 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
,

82 
CONNECTION_TIMEOUT
));

85 @
A·î


86 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

87 
£rvîFa˘‹y
.
	`shutdown
();

88 
As£π
.
	`as£πTrue
("waiting for server down",

89 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

90 
CONNECTION_TIMEOUT
));

91 
	}
}

93 
¥iv©e
 ˛as†
	cCou¡downW©chî
 
im∂emíts
 
	gW©chî
 {

94 vﬁ©ûê
Cou¡DownL©ch
 
	g˛õ¡C⁄√˘ed
 = 
√w
 CountDownLatch(1);

96 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

97 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

98 
˛õ¡C⁄√˘ed
.
cou¡Down
();

103 
¥iv©e
 
Disc⁄√˘abÀZooKì≥r
 
	$¸óãClõ¡
()

104 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


106 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

107  
	`¸óãClõ¡
(
CONNECTION_TIMEOUT
, 
w©chî
);

108 
	}
}

110 
¥iv©e
 
Disc⁄√˘abÀZooKì≥r
 
	$¸óãClõ¡
(
timeout
)

111 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


113 
Cou¡downW©chî
 
w©chî
 = 
√w
 
	`Cou¡downW©chî
();

114  
	`¸óãClõ¡
(
timeout
, 
w©chî
);

115 
	}
}

117 
¥iv©e
 
Disc⁄√˘abÀZooKì≥r
 
	$¸óãClõ¡
(
timeout
,

118 
Cou¡downW©chî
 
w©chî
)

119 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


121 
Disc⁄√˘abÀZooKì≥r
 
zk
 =

122 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
HOSTPORT
, 
timeout
, 
w©chî
);

123 if(!
w©chî
.
˛õ¡C⁄√˘ed
.
	`awaô
(
timeout
, 
TimeUnô
.
MILLISECONDS
)) {

124 
As£π
.
	`Áû
("UnableÅo connectÅo server");

127  
zk
;

128 
	}
}

162 
¥iv©e
 cœs†
	cMyW©chî
 
im∂emíts
 
	gW©chî
 {

163 
¥iv©e
 
Såög
 
	g«me
;

164 
public
 
MyW©chî
(
Såög
 
«me
) {

165 
	gthis
.
	g«me
 = 
«me
;

167 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

168 
	gLOG
.
öfo
(
«me
 + "Évít:" + 
evít
.
gëSèã
() + " "

169 + 
evít
.
gëTy≥
(Ë+ " " +Évít.
gëP©h
());

170 i‡(
	gevít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


171 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
gëCou¡
() > 0)

173 
°¨tSig«l
.
cou¡Down
();

183 @
Te°


184 
public
 
	$ã°Sessi⁄
()

185 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


187 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

188 
zk
.
	`¸óã
("/e", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

189 
Cª©eMode
.
EPHEMERAL
);

190 
LOG
.
	`öfo
("zk wôh sessi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
())

196 
zk
.
	`disc⁄√˘
();

198 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

199 
°¨tSig«l
 = 
√w
 
	`Cou¡DownL©ch
(1);

200 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
,

201 
√w
 
	`MyW©chî
("ã°Sessi⁄"), 
zk
.
	`gëSessi⁄Id
(),

202 
zk
.
	`gëSessi⁄Passwd
());

203 
°¨tSig«l
.
	`awaô
();

205 
LOG
.
	`öfo
("zk wôh sessi⁄ id 0x" + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
())

207 
zk
.
	`gëD©a
("/e", 
Ál£
, 
°©
);

208 
LOG
.
	`öfo
("After get data /e");

209 
zk
.
	`˛o£
();

211 
zk
 = 
	`¸óãClõ¡
();

212 
As£π
.
	`as£πEquÆs
(
nuŒ
, 
zk
.
	`exi°s
("/e", 
Ál£
));

213 
LOG
.
	`öfo
("before close zk with session id 0x"

214 + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
()) + "!");

215 
zk
.
	`˛o£
();

216 
åy
 {

217 
zk
.
	`gëD©a
("/e", 
Ál£
, 
°©
);

218 
As£π
.
	`Áû
("Should haveÑeceivedá SessionExpiredException");

219 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
Sessi⁄ExpúedEx˚±i⁄
 
e
) {}

221 
AsyncCÆlback
.
D©aCÆlback
 
cb
 = 
√w
 AsyncCÆlback.
	`D©aCÆlback
() {

222 
Såög
 
°©us
 = "not done";

223 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
p
, 
Obje˘
 
c
, 
byã
[] 
b
, 
Sèt
 
s
) {

224 
	`synchr⁄ized
(
this
Ë{ 
°©us
 = 
Kì≥rEx˚±i⁄
.
Code
.
	`gë
(
rc
).
	`toSåög
();Åhis.
	`nŸify
(); }

226 
public
 
Såög
 
	`toSåög
(Ë{  
°©us
; }

228 
zk
.
	`gëD©a
("/e", 
Ál£
, 
cb
, 
nuŒ
);

229 
	`synchr⁄ized
(
cb
) {

230 i‡(
cb
.
	`toSåög
().
	`equÆs
("not done")) {

231 
cb
.
	`waô
(1000);

234 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
SESSIONEXPIRED
.
	`toSåög
(), 
cb
.toString());

235 
	}
}

237 
¥iv©e
 
	gLi°
<
	gThªad
> 
	$födThªads
(
Såög
 
«me
) {

238 
thªadCou¡
 = 
Thªad
.
	`a˘iveCou¡
();

239 
Thªad
 
thªads
[] = 
√w
 Thªad[
thªadCou¡
*2];

240 
thªadCou¡
 = 
Thªad
.
	`íumî©e
(
thªads
);

241 
AºayLi°
<
Thªad
> 
li°
 = 
√w
 ArrayList<Thread>();

242 
i
 = 0; i < 
thªadCou¡
; i++) {

243 i‡(
thªads
[
i
].
	`gëName
().
	`ödexOf
(
«me
) != -1) {

244 
li°
.
	`add
(
thªads
[
i
]);

247  
li°
;

248 
	}
}

253 @
Te°


254 
public
 
	$ã°Sessi⁄Timeout
(Ë
throws
 
Ex˚±i⁄
 {

255 
föÆ
 
TIMEOUT
 = 5000;

256 
Li°
<
Thªad
> 
ëBef‹e
 = 
	`födThªads
("EventThread");

257 
Li°
<
Thªad
> 
°Bef‹e
 = 
	`födThªads
("SendThread");

258 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
TIMEOUT
);

259 
zk
.
	`¸óã
("/°e°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

260 
Cª©eMode
.
EPHEMERAL
);

263 
Li°
<
Thªad
> 
ëA·î
 = 
	`födThªads
("EventThread");

264 
Li°
<
Thªad
> 
°A·î
 = 
	`födThªads
("SendThread");

265 
Thªad
 
evítThªad
 = 
nuŒ
;

266 
Thªad
 
£ndThªad
 = 
nuŒ
;

267 
Thªad
 
t
: 
ëA·î
) {

268 i‡(!
ëBef‹e
.
	`c⁄èös
(
t
)) {

269 
evítThªad
 = 
t
;

273 
Thªad
 
t
: 
°A·î
) {

274 i‡(!
°Bef‹e
.
	`c⁄èös
(
t
)) {

275 
£ndThªad
 = 
t
;

279 
£ndThªad
.
	`su•íd
();

282 
Thªad
.
	`¶ìp
(
TIMEOUT
*2);

283 
£ndThªad
.
	`ªsume
();

284 
evítThªad
.
	`joö
(
TIMEOUT
);

285 
As£π
.
	`as£πFÆ£
("EvítThªad i†°û»ru¬ög", 
evítThªad
.
	`isAlive
());

287 
zk
 = 
	`¸óãClõ¡
(
TIMEOUT
);

288 
zk
.
	`¸óã
("/°e°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

289 
Cª©eMode
.
EPHEMERAL
);

290 
	`ã¨Down
();

291 
zk
.
	`˛o£
();

292 
zk
.
	`disc⁄√˘
();

293 
	`£tUp
();

295 
zk
 = 
	`¸óãClõ¡
(
TIMEOUT
);

296 
As£π
.
	`as£πTrue
(
zk
.
	`exi°s
("/°e°", 
Ál£
Ë!
nuŒ
);

297 
Thªad
.
	`¶ìp
(
TIMEOUT
*2);

298 
As£π
.
	`as£πTrue
(
zk
.
	`exi°s
("/°e°", 
Ál£
Ë=
nuŒ
);

299 
zk
.
	`˛o£
();

300 
	}
}

310 @
Te°


311 
public
 
	$ã°Sessi⁄Move
(Ë
throws
 
Ex˚±i⁄
 {

312 
Såög
 
ho°P‹ts
[] = 
HOSTPORT
.
	`•lô
(",");

313 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(
ho°P‹ts
[0],

314 
CONNECTION_TIMEOUT
, 
√w
 
	`MyW©chî
("0"));

315 
zk
.
	`¸óã
("/£ssi⁄MoveTe°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

316 
Cª©eMode
.
EPHEMERAL
);

318 
i
 = 0; i < 
ho°P‹ts
.
Àngth
*2; i++) {

319 
zk
.
	`d⁄tRec⁄√˘
();

321 
Disc⁄√˘abÀZooKì≥r
 
zk√w
 = 
√w
 
	`Disc⁄√˘abÀZooKì≥r
(

322 
ho°P‹ts
[(
i
+1)%ho°P‹ts.
Àngth
],

323 
CONNECTION_TIMEOUT
,

324 
√w
 
	`MyW©chî
(
I¡egî
.
	`toSåög
(
i
+1)),

325 
zk
.
	`gëSessi⁄Id
(),

326 
zk
.
	`gëSessi⁄Passwd
());

327 
föÆ
 
ªsu…
[] = 
√w
 [1];

328 
ªsu…
[0] = 
I¡egî
.
MAX_VALUE
;

329 
zk√w
.
	`sync
("/", 
√w
 
AsyncCÆlback
.
	`VoidCÆlback
() {

330 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

331 
	`synchr⁄ized
(
ªsu…
Ë{Ñesu…[0] = 
rc
;Ñesu….
	`nŸify
(); }

333 }, 
nuŒ
);

334 
	`synchr⁄ized
(
ªsu…
) {

335 if(
ªsu…
[0] =
I¡egî
.
MAX_VALUE
) {

336 
ªsu…
.
	`waô
(5000);

339 
LOG
.
	`öfo
(
ho°P‹ts
[(
i
+1)%ho°P‹ts.
Àngth
] + " Syn¯ªtu∫ed " + 
ªsu…
[0]);

340 
As£π
.
	`as£πTrue
(
ªsu…
[0] =
Kì≥rEx˚±i⁄
.
Code
.
OK
.
	`ötVÆue
());

341 
zk√w
.
	`£tD©a
("/", 
√w
 
byã
[1], -1);

342 
åy
 {

343 
zk
.
	`£tD©a
("/", 
√w
 
byã
[1], -1);

344 
As£π
.
	`Áû
("Should haveÜostÅhe connection");

345 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

346 
LOG
.
	`öfo
("Got connectionÜossÉxceptionásÉxpected");

349 
zk
 = 
zk√w
;

351 
zk
.
	`˛o£
();

352 
	}
}

360 @
Te°


361 
public
 
	$ã°Sessi⁄SèãNoDupSèãRï‹tög
()

362 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


364 
föÆ
 
TIMEOUT
 = 3000;

365 
DupW©chî
 
w©chî
 = 
√w
 
	`DupW©chî
();

366 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
TIMEOUT
, 
w©chî
);

369 
£rvîFa˘‹y
.
	`shutdown
();

371 
åy
 {

372 
Thªad
.
	`¶ìp
(10000);

373 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

381 
As£π
.
	`as£πEquÆs
(2, 
w©chî
.
°©es
.
	`size
());

383 
zk
.
	`˛o£
();

384 
	}
}

389 @
Te°


390 
public
 
	$ã°Sessi⁄TimeoutAc˚ss
(Ë
throws
 
Ex˚±i⁄
 {

392 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
TICK_TIME
 * 4);

393 
As£π
.
	`as£πEquÆs
(
TICK_TIME
 * 4, 
zk
.
	`gëSessi⁄Timeout
());

395 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

396 
zk
.
	`˛o£
();

397 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

400 
zk
 = 
	`¸óãClõ¡
(
TICK_TIME
);

401 
As£π
.
	`as£πEquÆs
(
TICK_TIME
 * 2, 
zk
.
	`gëSessi⁄Timeout
());

402 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

403 
zk
.
	`˛o£
();

404 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

407 
zk
 = 
	`¸óãClõ¡
(
TICK_TIME
 * 30);

408 
As£π
.
	`as£πEquÆs
(
TICK_TIME
 * 20, 
zk
.
	`gëSessi⁄Timeout
());

409 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

410 
zk
.
	`˛o£
();

411 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

412 
	}
}

414 
¥iv©e
 cœs†
	cDupW©chî
 
exãnds
 
	gCou¡downW©chî
 {

415 
public
 
	gLökedLi°
<
	gW©chedEvít
> 
	g°©es
 = 
√w
 
LökedLi°
<
W©chedEvít
>();

416 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

417 
	gsu≥r
.
¥o˚ss
(
evít
);

418 i‡(
	gevít
.
gëTy≥
(Ë=
EvítTy≥
.
N⁄e
) {

419 
°©es
.
add
(
evít
);

424 @
Te°


425 
public
 
	$ã°MöMaxSessi⁄Timeout
(Ë
throws
 
Ex˚±i⁄
 {

427 
föÆ
 
MINSESS
 = 20000;

428 
föÆ
 
MAXSESS
 = 240000;

430 
ZooKì≥rSîvî
 
zs
 = 
Clõ¡Ba£
.
	`gëSîvî
(
£rvîFa˘‹y
);

431 
zs
.
	`£tMöSessi⁄Timeout
(
MINSESS
);

432 
zs
.
	`£tMaxSessi⁄Timeout
(
MAXSESS
);

436 
timeout
 = 120000;

437 
Disc⁄√˘abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
timeout
);

438 
As£π
.
	`as£πEquÆs
(
timeout
, 
zk
.
	`gëSessi⁄Timeout
());

440 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

441 
zk
.
	`˛o£
();

442 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

445 
zk
 = 
	`¸óãClõ¡
(
MINSESS
/2);

446 
As£π
.
	`as£πEquÆs
(
MINSESS
, 
zk
.
	`gëSessi⁄Timeout
());

447 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

448 
zk
.
	`˛o£
();

449 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

452 
zk
 = 
	`¸óãClõ¡
(
MAXSESS
 * 2);

453 
As£π
.
	`as£πEquÆs
(
MAXSESS
, 
zk
.
	`gëSessi⁄Timeout
());

454 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

455 
zk
.
	`˛o£
();

456 
LOG
.
	`öfo
(
zk
.
	`toSåög
());

457 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SledgeHammer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

33 
public
 cœs†
	cSÀdgeHammî
 
exãnds
 
Thªad
 
im∂emíts
 
	mW©chî
 {

34 
ZooKì≥r
 
	mzk
;

36 
	mcou¡
;

38 
	mªadsPîWrôe
;

40 
public
 
	$SÀdgeHammî
(
Såög
 
ho°s
, 
cou¡
, 
ªadsPîWrôe
)

41 
throws
 
IOEx˚±i⁄
 {

42 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°s
, 10000, 
this
);

43 
this
.
cou¡
 = count;

44 
this
.
ªadsPîWrôe
 =ÑeadsPerWrite;

47 
public
 
	$run
() {

48 
åy
 {

49 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

50 
Såög
 
∑th
 = 
zk
.
	`¸óã
("/hammîs/hammî-", 
√w
 
byã
[0],

51 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

52 
byã
 
èg
[] = (
∑th
 + " wa†hîe!").
	`gëByãs
();

53 
	`synchr⁄ized
 (
this
) {

54 
Såög
 
°¨tP©h
 = "/hammers/start";

55 
Sy°em
.
out
.
	`¥öén
("Waôög f‹ " + 
°¨tP©h
);

56 
zk
.
	`exi°s
(
°¨tP©h
, 
åue
Ë=
nuŒ
) {

57 
	`waô
();

59 
Sy°em
.
out
.
	`¥öén
("Running");

61 
i
 = 0; i < 
cou¡
; i++) {

62 
åy
 {

63 
Sy°em
.
out
.
	`¥öt
(
i
 + "\r");

64 
Li°
<
Såög
> 
chûds
 =

65 
zk
.
	`gëChûdªn
("/hammîs", 
Ál£
);

66 
CﬁÀ˘i⁄s
.
	`shufÊe
(
chûds
);

67 
Såög
 
s
 : 
chûds
) {

68 i‡(
s
.
	`°¨tsWôh
("hammer-")) {

69 
s
 = "/hammers/" + s;

70 
zk
.
	`£tD©a
(
s
, 
èg
, -1);

71 
j
 = 0; j < 
ªadsPîWrôe
; j++) {

72 
zk
.
	`gëD©a
(
s
, 
Ál£
, 
°©
);

77 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

79 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

80 
e
.
	`¥ötSèckTø˚
();

83 
Sy°em
.
out
.
	`¥öén
();

84 
zk
.
	`˛o£
();

85 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

86 
e
.
	`¥ötSèckTø˚
();

88 
	}
}

96 
public
 
	$maö
(
Såög
[] 
¨gs
Ë
throws
 
NumbîF‹m©Ex˚±i⁄
,

97 
IOEx˚±i⁄
 {

98 i‡(
¨gs
.
Àngth
 != 3) {

99 
Sy°em
.
îr


100 .
	`¥öén
("USAGE: SledgeHammer zookeeper_serverÑepsÑeads_per_rep");

101 
Sy°em
.
	`exô
(3);

103 
SÀdgeHammî
 
h
 = 
√w
 
	`SÀdgeHammî
(
¨gs
[0], 
I¡egî
.
	`∑r£I¡
(args[1]),

104 
I¡egî
.
	`∑r£I¡
(
¨gs
[2]));

105 
h
.
	`°¨t
();

106 
Sy°em
.
	`exô
(0);

107 
	}
}

109 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

110 
	`synchr⁄ized
 (
this
) {

111 
	`nŸifyAŒ
();

113 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StandaloneTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

24 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìrTe°Ba£
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
public
 cœs†
	cSèndÆ⁄eTe°
 
exãnds
 
Qu‹umPìrTe°Ba£
 
im∂emíts
 
	mW©chî
{

35 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 =

36 
LoggîFa˘‹y
.
gëLoggî
(
SèndÆ⁄eTe°
.
˛ass
);

45 @
Te°


46 
public
 
	$ã°SèndÆ⁄eQu‹um
(Ë
throws
 
Ex˚±i⁄
 {

47 
Clõ¡Ba£
.
	`£tupTe°Env
();

48 
föÆ
 
CLIENT_PORT_QP1
 = 
P‹tAssignmít
.
	`unique
();

50 
Såög
 
qu‹umCfgSe˘i⁄
 =

51 "£rvî.1=127.0.0.1:" + (
P‹tAssignmít
.
	`unique
())

52 + ":" + (
P‹tAssignmít
.
	`unique
()) + "\n";

54 
MaöThªad
 
q1
 = 
√w
 
	`MaöThªad
(1, 
CLIENT_PORT_QP1
, 
qu‹umCfgSe˘i⁄
);

55 
q1
.
	`°¨t
();

56 
åy
 {

57 
As£π
.
	`as£πTrue
("waiting for server 1 being up",

58 
Clõ¡Ba£
.
	`waôF‹SîvîUp
("127.0.0.1:" + 
CLIENT_PORT_QP1
,

59 
CONNECTION_TIMEOUT
));

60 } 
föÆly
 {

61 
q1
.
	`shutdown
();

65 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StatTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
public
 cœs†
	cSètTe°
 
exãnds
 
	mClõ¡Ba£
 {

32 
¥iv©e
 
ZooKì≥r
 
	mzk
;

34 @
Ovîride


35 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

36 
su≥r
.
	`£tUp
();

38 
zk
 = 
	`¸óãClõ¡
();

41 @
Ovîride


42 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

43 
su≥r
.
	`ã¨Down
();

45 
zk
.
	`˛o£
();

46 
	}
}

54 
¥iv©e
 
Sèt
 
	$√wSèt
() {

55 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

57 
°©
.
	`£tAvîsi⁄
(100);

58 
°©
.
	`£tCtime
(100);

59 
°©
.
	`£tCvîsi⁄
(100);

60 
°©
.
	`£tCzxid
(100);

61 
°©
.
	`£tD©aLígth
(100);

62 
°©
.
	`£tEphemîÆOw√r
(100);

63 
°©
.
	`£tMtime
(100);

64 
°©
.
	`£tMzxid
(100);

65 
°©
.
	`£tNumChûdªn
(100);

66 
°©
.
	`£tPzxid
(100);

67 
°©
.
	`£tVîsi⁄
(100);

69  
°©
;

70 
	}
}

72 @
Te°


73 
public
 
	$ã°Basic
()

74 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


76 
Såög
 
«me
 = "/foo";

77 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

78 
Cª©eMode
.
PERSISTENT
);

80 
Sèt
 
°©
;

82 
°©
 = 
	`√wSèt
();

83 
zk
.
	`gëD©a
(
«me
, 
Ál£
, 
°©
);

85 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

86 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëPzxid
());

87 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

88 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëCvîsi⁄
());

89 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

90 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

91 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

92 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

93 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëNumChûdªn
());

94 
	}
}

96 @
Te°


97 
public
 
	$ã°Chûd
()

98 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


100 
Såög
 
«me
 = "/foo";

101 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

102 
Cª©eMode
.
PERSISTENT
);

104 
Såög
 
chûd«me
 = 
«me
 + "/bar";

105 
zk
.
	`¸óã
(
chûd«me
, chûd«me.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

106 
Cª©eMode
.
EPHEMERAL
);

108 
Sèt
 
°©
;

110 
°©
 = 
	`√wSèt
();

111 
zk
.
	`gëD©a
(
«me
, 
Ál£
, 
°©
);

113 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

114 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(Ë+ 1, sèt.
	`gëPzxid
());

115 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

116 
As£π
.
	`as£πEquÆs
(1, 
°©
.
	`gëCvîsi⁄
());

117 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

118 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

119 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

120 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

121 
As£π
.
	`as£πEquÆs
(1, 
°©
.
	`gëNumChûdªn
());

123 
°©
 = 
	`√wSèt
();

124 
zk
.
	`gëD©a
(
chûd«me
, 
Ál£
, 
°©
);

126 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

127 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëPzxid
());

128 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

129 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëCvîsi⁄
());

130 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

131 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

132 
As£π
.
	`as£πEquÆs
(
zk
.
	`gëSessi⁄Id
(), 
°©
.
	`gëEphemîÆOw√r
());

133 
As£π
.
	`as£πEquÆs
(
chûd«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

134 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëNumChûdªn
());

135 
	}
}

137 @
Te°


138 
public
 
	$ã°Chûdªn
()

139 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


141 
Såög
 
«me
 = "/foo";

142 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

143 
Cª©eMode
.
PERSISTENT
);

145 
i
 = 0; i < 10; i++) {

146 
Såög
 
chûd«me
 = 
«me
 + "/b¨" + 
i
;

147 
zk
.
	`¸óã
(
chûd«me
, chûd«me.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

148 
Cª©eMode
.
EPHEMERAL
);

150 
Sèt
 
°©
;

152 
°©
 = 
	`√wSèt
();

153 
zk
.
	`gëD©a
(
«me
, 
Ál£
, 
°©
);

155 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

156 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(Ë+ 
i
 + 1, sèt.
	`gëPzxid
());

157 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

158 
As£π
.
	`as£πEquÆs
(
i
 + 1, 
°©
.
	`gëCvîsi⁄
());

159 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

160 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

161 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

162 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

163 
As£π
.
	`as£πEquÆs
(
i
 + 1, 
°©
.
	`gëNumChûdªn
());

165 
	}
}

167 @
Te°


168 
public
 
	$ã°D©aSizeCh™ge
()

169 
throws
 
IOEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


171 
Såög
 
«me
 = "/foo";

172 
zk
.
	`¸óã
(
«me
,Çame.
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

173 
Cª©eMode
.
PERSISTENT
);

175 
Sèt
 
°©
;

177 
°©
 = 
	`√wSèt
();

178 
zk
.
	`gëD©a
(
«me
, 
Ál£
, 
°©
);

180 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

181 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëPzxid
());

182 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

183 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëCvîsi⁄
());

184 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëVîsi⁄
());

185 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

186 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

187 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(), 
°©
.
	`gëD©aLígth
());

188 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëNumChûdªn
());

190 
zk
.
	`£tD©a
(
«me
, («mê+Çame).
	`gëByãs
(), -1);

192 
°©
 = 
	`√wSèt
();

193 
zk
.
	`gëD©a
(
«me
, 
Ál£
, 
°©
);

195 
As£π
.
	`as£πNŸSame
(
°©
.
	`gëCzxid
(), sèt.
	`gëMzxid
());

196 
As£π
.
	`as£πEquÆs
(
°©
.
	`gëCzxid
(), sèt.
	`gëPzxid
());

197 
As£π
.
	`as£πNŸSame
(
°©
.
	`gëCtime
(), sèt.
	`gëMtime
());

198 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëCvîsi⁄
());

199 
As£π
.
	`as£πEquÆs
(1, 
°©
.
	`gëVîsi⁄
());

200 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëAvîsi⁄
());

201 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëEphemîÆOw√r
());

202 
As£π
.
	`as£πEquÆs
(
«me
.
	`Àngth
(Ë* 2, 
°©
.
	`gëD©aLígth
());

203 
As£π
.
	`as£πEquÆs
(0, 
°©
.
	`gëNumChûdªn
());

204 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StaticHostProviderTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πEquÆs
;

22 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πNŸSame
;

23 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
.
	gas£πTrue
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gHo°Providî
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g˛õ¡
.
	gSèticHo°Providî
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

29 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

30 
imp‹t
 
	gjava
.
	g√t
.
	gUnknownHo°Ex˚±i⁄
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

33 
public
 cœs†
	cSèticHo°ProvidîTe°
 
exãnds
 
	mZKTe°Ca£
 {

35 @
Te°


36 
public
 
	$ã°NextG€sRound
(Ë
throws
 
UnknownHo°Ex˚±i⁄
 {

37 
Ho°Providî
 
ho°Providî
 = 
	`gëHo°Providî
(2);

38 
I√tSockëAddªss
 
fú°
 = 
ho°Providî
.
	`√xt
(0);

39 
	`as£πTrue
(
fú°
 
ö°™˚of
 
I√tSockëAddªss
);

40 
ho°Providî
.
	`√xt
(0);

41 
	`as£πEquÆs
(
fú°
, 
ho°Providî
.
	`√xt
(0));

44 @
Te°


45 
public
 
	$ã°NextG€sRoundAndSÀïs
(Ë
throws
 
UnknownHo°Ex˚±i⁄
 {

46 
size
 = 2;

47 
Ho°Providî
 
ho°Providî
 = 
	`gëHo°Providî
(
size
);

48 
size
 > 0) {

49 
ho°Providî
.
	`√xt
(0);

50 --
size
;

52 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

53 
ho°Providî
.
	`√xt
(1000);

54 
°›
 = 
Sy°em
.
	`cuºítTimeMûlis
();

55 
	`as£πTrue
(900 <
°›
 - 
°¨t
);

56 
	}
}

58 @
Te°


59 
public
 
	$ã°NextD€sNŸSÀïF‹Zîo
(Ë
throws
 
UnknownHo°Ex˚±i⁄
 {

60 
size
 = 2;

61 
Ho°Providî
 
ho°Providî
 = 
	`gëHo°Providî
(
size
);

62 
size
 > 0) {

63 
ho°Providî
.
	`√xt
(0);

64 --
size
;

66 
°¨t
 = 
Sy°em
.
	`cuºítTimeMûlis
();

67 
ho°Providî
.
	`√xt
(0);

68 
°›
 = 
Sy°em
.
	`cuºítTimeMûlis
();

69 
	`as£πTrue
(5 > 
°›
 - 
°¨t
);

70 
	}
}

72 @
Te°


73 
public
 
	$ã°TwoC⁄£quôiveCÆlsToNextRëu∫Dif„ª¡EÀmít
()

74 
throws
 
UnknownHo°Ex˚±i⁄
 {

75 
Ho°Providî
 
ho°Providî
 = 
	`gëHo°Providî
(2);

76 
	`as£πNŸSame
(
ho°Providî
.
	`√xt
(0), hostProvider.next(0));

77 
	}
}

79 @
Te°


80 
public
 
	$ã°OnC⁄√˘D€sNŸRe£t
(Ë
throws
 
UnknownHo°Ex˚±i⁄
 {

81 
Ho°Providî
 
ho°Providî
 = 
	`gëHo°Providî
(2);

82 
I√tSockëAddªss
 
fú°
 = 
ho°Providî
.
	`√xt
(0);

83 
ho°Providî
.
	`⁄C⁄√˘ed
();

84 
I√tSockëAddªss
 
£c⁄d
 = 
ho°Providî
.
	`√xt
(0);

85 
	`as£πNŸSame
(
fú°
, 
£c⁄d
);

86 
	}
}

88 
¥iv©e
 
SèticHo°Providî
 
	$gëHo°Providî
(
size
)

89 
throws
 
UnknownHo°Ex˚±i⁄
 {

90 
AºayLi°
<
I√tSockëAddªss
> 
li°
 = 
√w
 ArrayList<InetSocketAddress>(

91 
size
);

92 
size
 > 0) {

93 
li°
.
	`add
(
√w
 
	`I√tSockëAddªss
("10.10.10." + 
size
, 1234));

94 --
size
;

96  
√w
 
	`SèticHo°Providî
(
li°
);

97 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SyncCallTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gD©e
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLökedLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªn2CÆlback
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gChûdªnCÆlback
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSåögCÆlback
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
public
 
˛ass
 
SyncCÆlTe°
 
exãnds
 
Clõ¡Ba£


40 
im∂emíts
 
	gChûdªnCÆlback
, 
	gChûdªn2CÆlback
, 
	gSåögCÆlback
, 
	gVoidCÆlback


42 
¥iv©e
 
Cou¡DownL©ch
 
	g›sCou¡
;

44 
	gLi°
<
	gI¡egî
> 
	gªsu…s
 = 
√w
 
LökedLi°
<
I¡egî
>();

45 
I¡egî
 
	glimô
 = 100 + 1 + 100 + 100;

47 @
Te°


48 
public
 
ã°Sync
(Ë
throws
 
	gEx˚±i⁄
 {

49 
	gåy
 {

50 
	gLOG
.
öfo
("Sèπög ZK:" + (
√w
 
D©e
()).
toSåög
());

51 
	g›sCou¡
 = 
√w
 
Cou¡DownL©ch
(
limô
);

52 
ZooKì≥r
 
	gzk
 = 
¸óãClõ¡
();

54 
	gLOG
.
öfo
("BegönögÅe°:" + (
√w
 
D©e
()).
toSåög
());

55 
	gi
 = 0; i < 100; i++)

56 
	gzk
.
¸óã
("/ã°" + 
i
, 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

57 
Cª©eMode
.
PERSISTENT
, 
this
, 
ªsu…s
);

58 
	gzk
.
sync
("/ã°", 
this
, 
ªsu…s
);

59 
	gi
 = 0; i < 100; i++)

60 
	gzk
.
dñëe
("/ã°" + 
i
, 0, 
this
, 
ªsu…s
);

61 
	gi
 = 0; i < 100; i++)

62 
	gzk
.
gëChûdªn
("/", 
√w
 
NuŒW©chî
(), (
ChûdªnCÆlback
)
this
,

63 
ªsu…s
);

64 
	gi
 = 0; i < 100; i++)

65 
	gzk
.
gëChûdªn
("/", 
√w
 
NuŒW©chî
(), (
Chûdªn2CÆlback
)
this
,

66 
ªsu…s
);

67 
	gLOG
.
öfo
("SubmôãdáŒ o≥øti⁄s:" + (
√w
 
D©e
()).
toSåög
());

69 if(!
	g›sCou¡
.
awaô
(10000, 
TimeUnô
.
MILLISECONDS
))

70 
	gAs£π
.
Áû
("Haví'àª˚ivedáŒ c⁄fúm©i⁄s" + 
›sCou¡
.
gëCou¡
());

72 
	gi
 = 0; i < 
	glimô
 ; i++){

73 
	gAs£π
.
as£πEquÆs
(0, (Ë
ªsu…s
.
gë
(
i
));

76 } 
ˇtch
 (
IOEx˚±i⁄
 
e
) {

77 
	gSy°em
.
	gout
.
¥öén
(
e
.
toSåög
());

81 @
SuµªssW¨nögs
("unchecked")

82 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

83 
Li°
<
Såög
> 
chûdªn
) {

84 ((
	gLi°
<
	gI¡egî
>)
	g˘x
).
add
(
rc
);

85 
	g›sCou¡
.
cou¡Down
();

88 @
SuµªssW¨nögs
("unchecked")

89 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

90 
Li°
<
Såög
> 
chûdªn
, 
Sèt
 
°©
) {

91 ((
	gLi°
<
	gI¡egî
>)
	g˘x
).
add
(
rc
);

92 
	g›sCou¡
.
cou¡Down
();

95 @
SuµªssW¨nögs
("unchecked")

96 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, Såög 
«me
){

97 ((
	gLi°
<
	gI¡egî
>Ë
	g˘x
).
add
(
rc
);

98 
	g›sCou¡
.
cou¡Down
();

102 @
SuµªssW¨nögs
("unchecked")

103 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
){

104 ((
	gLi°
<
	gI¡egî
>Ë
	g˘x
).
add
(
rc
);

105 
	g›sCou¡
.
cou¡Down
();

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/TestHammer.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

28 
public
 cœs†
	cTe°Hammî
 
im∂emíts
 
	mVoidCÆlback
 {

33 
	mREPS
 = 50000;

34 
public
 
	$maö
(
Såög
[] 
¨gs
) {

35 
°¨tTime
 = 
Sy°em
.
	`cuºítTimeMûlis
();

36 
ZooKì≥r
 
zk
 = 
nuŒ
;

37 
åy
 {

38 
zk
 = 
√w
 
	`ZooKì≥r
(
¨gs
[0], 10000, 
nuŒ
);

39 } 
	`ˇtch
 (
IOEx˚±i⁄
 
e1
) {

41 
e1
.
	`¥ötSèckTø˚
();

42 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e1
);

44 
i
 = 0; i < 
REPS
; i++) {

45 
åy
 {

46 
Såög
 
«me
 = 
zk
.
	`¸óã
("/ã°Fûe-", 
√w
 
byã
[16], 
Ids
.
OPEN_ACL_UNSAFE
,

47 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
);

48 
zk
.
	`dñëe
(
«me
, -1, 
√w
 
	`Te°Hammî
(), 
nuŒ
);

49 } 
	`ˇtch
(
Ex˚±i⁄
 
e
) {

50 
i
--;

51 
e
.
	`¥ötSèckTø˚
();

54 
Sy°em
.
out
.
	`¥öén
("¸óãs/£c=" + (
REPS
*1000/(Sy°em.
	`cuºítTimeMûlis
()-
°¨tTime
)));

57 
public
 
	$¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

60 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/TruncateTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	g√t
.
	gI√tSockëAddªss
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gHashM≠
;

26 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gjuã
.
	gRec‹d
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gReque°
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZKD©aba£
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnLog
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

43 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gTxnLog
.
	gTxnIãøt‹
;

44 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

45 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gQu‹umSîvî
;

46 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gSëD©aTxn
;

47 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gtxn
.
	gTxnHódî
;

48 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

49 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

50 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

51 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

52 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

54 
public
 cœs†
	cTrunˇãTe°
 
exãnds
 
	mZKTe°Ca£
 {

55 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
TrunˇãTe°
.
˛ass
);

56 
Fûe
 
	md©aDú1
, 
	md©aDú2
, 
	md©aDú3
;

57 
föÆ
 
	mba£Ho°P‹t
 = 12233;

59 @
Bef‹e


60 
public
 
	$£tUp
(Ë
throws
 
IOEx˚±i⁄
 {

61 
d©aDú1
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

62 
d©aDú2
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

63 
d©aDú3
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

66 @
A·î


67 
public
 
	$ã¨Down
() {

68 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
d©aDú1
);

69 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
d©aDú2
);

70 
Clõ¡Ba£
.
	`ªcursiveDñëe
(
d©aDú3
);

71 
	}
}

73 vﬁ©ûê
boﬁón
 
	gc⁄√˘ed
;

74 
W©chî
 
	gnuŒW©chî
 = 
√w
 
	$W©chî
() {

75 @
Ovîride


76 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

77 
c⁄√˘ed
 = 
evít
.
	`gëSèã
(Ë=
W©chî
.
Evít
.
Kì≥rSèã
.
SyncC⁄√˘ed
;

79 
	}
};

81 @
Te°


82 
public
 
	$ã°Trunˇti⁄SåómRe£t
(Ë
throws
 
Ex˚±i⁄
 {

83 
Fûe
 
tmpdú
 = 
Clõ¡Ba£
.
	`¸óãTmpDú
();

84 
FûeTxnS«pLog
 
¢≠log
 = 
√w
 
	`FûeTxnS«pLog
(
tmpdú
,Åmpdir);

85 
ZKD©aba£
 
zkdb
 = 
√w
 
	`ZKD©aba£
(
¢≠log
);

87 
i
 = 1; i <= 100; i++) {

88 
	`≠≥nd
(
zkdb
, 
i
);

91 
zkdb
.
	`åunˇãLog
(1);

93 
	`≠≥nd
(
zkdb
, 200);

95 
zkdb
.
	`˛o£
();

99 
FûeTxnLog
 
tx∆og
 = 
√w
 
	`FûeTxnLog
“ew 
	`Fûe
(
tmpdú
, "version-2"));

100 
TxnIãøt‹
 
ôî
 = 
tx∆og
.
	`ªad
(1);

102 
TxnHódî
 
hdr
 = 
ôî
.
	`gëHódî
();

103 
Rec‹d
 
txn
 = 
ôî
.
	`gëTxn
();

104 
As£π
.
	`as£πEquÆs
(1, 
hdr
.
	`gëZxid
());

105 
As£π
.
	`as£πTrue
(
txn
 
ö°™˚of
 
SëD©aTxn
);

107 
ôî
.
	`√xt
();

109 
hdr
 = 
ôî
.
	`gëHódî
();

110 
txn
 = 
ôî
.
	`gëTxn
();

111 
As£π
.
	`as£πEquÆs
(200, 
hdr
.
	`gëZxid
());

112 
As£π
.
	`as£πTrue
(
txn
 
ö°™˚of
 
SëD©aTxn
);

113 
	}
}

115 
¥iv©e
 
	$≠≥nd
(
ZKD©aba£
 
zkdb
, 
i
Ë
throws
 
IOEx˚±i⁄
 {

116 
TxnHódî
 
hdr
 = 
√w
 
	`TxnHódî
(1, 1, 
i
, 1, 
ZooDefs
.
OpCode
.
£tD©a
);

117 
Rec‹d
 
txn
 = 
√w
 
	`SëD©aTxn
("/foo" + 
i
,Çew 
byã
[0], 1);

118 
Reque°
 
ªq
 = 
√w
 
	`Reque°
(
nuŒ
, 0, 0, 0,Çull,Çull);

119 
ªq
.
hdr
 = hdr;

120 
ªq
.
txn
 =Åxn;

122 
zkdb
.
	`≠≥nd
(
ªq
);

123 
zkdb
.
	`commô
();

124 
	}
}

126 @
Te°


127 
public
 
	$ã°Trunˇã
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

129 
Såög
 
ho°P‹t
 = "127.0.0.1:" + 
ba£Ho°P‹t
;

130 
SîvîCnxnFa˘‹y
 
Á˘‹y
 = 
Clõ¡Ba£
.
	`¸óãNewSîvîIn°™˚
(
d©aDú1
, 
nuŒ
, 
ho°P‹t
, 100);

131 
Clõ¡Ba£
.
	`shutdownSîvîIn°™˚
(
Á˘‹y
, 
ho°P‹t
);

134 
Fûe
 
‹igfûe
 = 
√w
 
	`Fûe
“ew Fûe(
d©aDú1
, "version-2"), "snapshot.0");

135 
Fûe
 
√wfûe
 = 
√w
 
	`Fûe
“ew Fûe(
d©aDú1
, "version-2"), "snapshot.100000000");

136 
‹igfûe
.
	`ª«meTo
(
√wfûe
);

138 
Á˘‹y
 = 
Clõ¡Ba£
.
	`¸óãNewSîvîIn°™˚
(
d©aDú1
, 
nuŒ
, 
ho°P‹t
, 100);

140 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 15000, 
nuŒW©chî
);

141 
i
 = 0; i < 50; i++) {

142 
zk
.
	`¸óã
("/" + 
i
, 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

144 
zk
.
	`˛o£
();

146 
ZKD©aba£
 
zkDb
;

148 
ZooKì≥rSîvî
 
zs
 = 
Clõ¡Ba£
.
	`gëSîvî
(
Á˘‹y
);

150 
zkDb
 = 
zs
.
	`gëZKD©aba£
();

152 
Á˘‹y
.
	`shutdown
();

153 
åy
 {

154 
zkDb
.
	`˛o£
();

155 } 
	`ˇtch
 (
IOEx˚±i⁄
 
õ
) {

156 
LOG
.
	`w¨n
("Eº‹ closögÜog†", 
õ
);

158 
tickTime
 = 2000;

159 
öôLimô
 = 3;

160 
syncLimô
 = 3;

161 
p‹t1
 = 
ba£Ho°P‹t
+1;

162 
p‹t2
 = 
ba£Ho°P‹t
+2;

163 
p‹t3
 = 
ba£Ho°P‹t
+3;

166 
HashM≠
<
L⁄g
,
Qu‹umSîvî
> 
≥îs
 = 
√w
 HashMap<Long,QuorumServer>();

167 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(1), 
√w
 
	`Qu‹umSîvî
(1,Çew 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t1
 + 1000)));

168 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(2), 
√w
 
	`Qu‹umSîvî
(2,Çew 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t2
 + 1000)));

169 
≥îs
.
	`put
(
L⁄g
.
	`vÆueOf
(3), 
√w
 
	`Qu‹umSîvî
(3,Çew 
	`I√tSockëAddªss
("127.0.0.1", 
p‹t3
 + 1000)));

171 
Qu‹umPìr
 
s2
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
d©aDú2
, d©aDú2, 
p‹t2
, 0, 2, 
tickTime
, 
öôLimô
, 
syncLimô
);

172 
s2
.
	`°¨t
();

173 
Qu‹umPìr
 
s3
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
d©aDú3
, d©aDú3, 
p‹t3
, 0, 3, 
tickTime
, 
öôLimô
, 
syncLimô
);

174 
s3
.
	`°¨t
();

175 
c⁄√˘ed
 = 
Ál£
;

176 
zk
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t2
, 15000, 
nuŒW©chî
);

177 !
c⁄√˘ed
) {

178 
Thªad
.
	`¶ìp
(1000);

180 
i
 = 0; i < 10; i++) {

181 
zk
.
	`¸óã
("/" + 
i
, 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

183 
zk
.
	`˛o£
();

185 
föÆ
 
ZooKì≥r
 
zk2
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t2
, 15000, 
nuŒW©chî
);

186 
zk2
.
	`gëD©a
("/9", 
Ál£
, 
√w
 
	`Sèt
());

187 
åy
 {

188 
zk2
.
	`gëD©a
("/10", 
Ál£
, 
√w
 
	`Sèt
());

189 
As£π
.
	`Áû
("Should have gottenánÉrror");

190 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

193 
Qu‹umPìr
 
s1
 = 
√w
 
	`Qu‹umPìr
(
≥îs
, 
d©aDú1
, d©aDú1, 
p‹t1
, 0, 1, 
tickTime
, 
öôLimô
, 
syncLimô
);

194 
s1
.
	`°¨t
();

196 
c⁄√˘ed
 = 
Ál£
;

197 
ZooKì≥r
 
zk1
 = 
√w
 
	`ZooKì≥r
("127.0.0.1:" + 
p‹t1
, 15000, 
nuŒW©chî
);

198 !
c⁄√˘ed
) {

199 
Thªad
.
	`¶ìp
(1000);

201 
zk1
.
	`gëD©a
("/9", 
Ál£
, 
√w
 
	`Sèt
());

202 
åy
 {

209 
zk1
.
	`gëD©a
("/12", 
Ál£
, 
√w
 
	`Sèt
());

210 
As£π
.
	`Áû
("Should have gottenánÉrror");

211 } 
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

214 
zk1
.
	`˛o£
();

215 
Qu‹umBa£
.
	`shutdown
(
s1
);

216 
Qu‹umBa£
.
	`shutdown
(
s2
);

217 
Qu‹umBa£
.
	`shutdown
(
s3
);

218 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/UpgradeTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
.
	gCONNECTION_TIMEOUT
;

23 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

28 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

29 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gP‹tAssignmít
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSîvîCnxnFa˘‹y
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

41 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

42 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gupgøde
.
	gUpgødeMaö
;

43 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

44 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

46 
public
 cœs†
	cUpgødeTe°
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

47 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
UpgødeTe°
.
˛ass
);

49 
¥iv©e
 
Såög
 
	mHOSTPORT
 = "127.0.0.1:" + 
P‹tAssignmít
.
unique
();

50 
¥iv©e
 
föÆ
 
Fûe
 
	mã°D©a
 = 
√w
 File(

51 
Sy°em
.
gëPr›îty
("test.data.dir", "build/test/data"));

52 
¥iv©e
 
Cou¡DownL©ch
 
	m°¨tSig«l
;

58 @
Te°


59 
public
 
	$ã°Upgøde
(Ë
throws
 
Ex˚±i⁄
 {

60 
Fûe
 
upgødeDú
 = 
√w
 
	`Fûe
(
ã°D©a
, "upgrade");

61 
UpgødeMaö
 
upgøde
 = 
√w
 
	`UpgødeMaö
(
upgødeDú
, upgradeDir);

62 
upgøde
.
	`runUpgøde
();

63 
ZooKì≥rSîvî
 
zks
 = 
√w
 
	`ZooKì≥rSîvî
(
upgødeDú
, upgradeDir, 3000);

64 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(1000);

65 
föÆ
 
PORT
 = 
I¡egî
.
	`∑r£I¡
(
HOSTPORT
.
	`•lô
(":")[1]);

66 
SîvîCnxnFa˘‹y
 
f
 = SîvîCnxnFa˘‹y.
	`¸óãFa˘‹y
(
PORT
, -1);

67 
f
.
	`°¨tup
(
zks
);

68 
LOG
.
	`öfo
("starting upÅhe zookeeper server .. waiting");

69 
As£π
.
	`as£πTrue
("waiting for server being up",

70 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
HOSTPORT
, 
CONNECTION_TIMEOUT
));

71 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
HOSTPORT
, 
CONNECTION_TIMEOUT
, 
this
);

72 
Sèt
 
°©
 = 
zk
.
	`exi°s
("/", 
Ál£
);

73 
Li°
<
Såög
> 
chûdªn
 = 
zk
.
	`gëChûdªn
("/", 
Ál£
);

74 
CﬁÀ˘i⁄s
.
	`s‹t
(
chûdªn
);

75 
i
 = 0; i < 10; i++) {

76 
As£π
.
	`as£πTrue
("dataÅree sanity check",

77 ("ã°-" + 
i
).
	`equÆs
(
chûdªn
.
	`gë
(i)));

80 
zk
.
	`¸óã
("/upgøde", "upgøde".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

81 
Cª©eMode
.
PERSISTENT
);

83 i‡(
zk
.
	`exi°s
("/upgøde", 
Ál£
Ë=
nuŒ
) {

84 
As£π
.
	`as£πTrue
(
Ál£
);

87 
zk
.
	`˛o£
();

90 
f
.
	`shutdown
();

91 
As£π
.
	`as£πTrue
("waiting for server down",

92 
Clõ¡Ba£
.
	`waôF‹SîvîDown
(
HOSTPORT
,

93 
Clõ¡Ba£
.
CONNECTION_TIMEOUT
));

97 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

98 
LOG
.
	`öfo
("Evít:" + 
evít
.
	`gëSèã
(Ë+ " " +Évít.
	`gëTy≥
(Ë+ " " +Évít.
	`gëP©h
());

99 i‡(
evít
.
	`gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed


100 && 
°¨tSig«l
 !
nuŒ
 && sèπSig«l.
	`gëCou¡
() > 0)

102 
°¨tSig«l
.
	`cou¡Down
();

104 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatchedEventTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gEnumSë
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g¥Ÿo
.
	gW©chîEvít
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

29 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
public
 cœs†
	cW©chedEvítTe°
 
exãnds
 
	mZKTe°Ca£
 {

33 @
Te°


34 
public
 
	$ã°Cª©ögW©chedEvít
() {

38 
EnumSë
<
EvítTy≥
> 
ÆlTy≥s
 = EnumSë.
	`ÆlOf
(EvítTy≥.
˛ass
);

39 
EnumSë
<
Kì≥rSèã
> 
ÆlSèãs
 = EnumSë.
	`ÆlOf
(Kì≥rSèã.
˛ass
);

40 
W©chedEvít
 
we
;

42 
EvítTy≥
 
ë
 : 
ÆlTy≥s
) {

43 
Kì≥rSèã
 
ks
 : 
ÆlSèãs
) {

44 
we
 = 
√w
 
	`W©chedEvít
(
ë
, 
ks
, "blah");

45 
As£π
.
	`as£πEquÆs
(
ë
, 
we
.
	`gëTy≥
());

46 
As£π
.
	`as£πEquÆs
(
ks
, 
we
.
	`gëSèã
());

47 
As£π
.
	`as£πEquÆs
("bœh", 
we
.
	`gëP©h
());

53 @
Te°


54 
public
 
	$ã°Cª©ögW©chedEvítFromWøµî
() {

57 
EnumSë
<
EvítTy≥
> 
ÆlTy≥s
 = EnumSë.
	`ÆlOf
(EvítTy≥.
˛ass
);

58 
EnumSë
<
Kì≥rSèã
> 
ÆlSèãs
 = EnumSë.
	`ÆlOf
(Kì≥rSèã.
˛ass
);

59 
W©chedEvít
 
we
;

60 
W©chîEvít
 
wï
;

62 
EvítTy≥
 
ë
 : 
ÆlTy≥s
) {

63 
Kì≥rSèã
 
ks
 : 
ÆlSèãs
) {

64 
wï
 = 
√w
 
	`W©chîEvít
(
ë
.
	`gëI¡VÆue
(), 
ks
.getIntValue(), "blah");

65 
we
 = 
√w
 
	`W©chedEvít
(
wï
);

66 
As£π
.
	`as£πEquÆs
(
ë
, 
we
.
	`gëTy≥
());

67 
As£π
.
	`as£πEquÆs
(
ks
, 
we
.
	`gëSèã
());

68 
As£π
.
	`as£πEquÆs
("bœh", 
we
.
	`gëP©h
());

71 
	}
}

73 @
Te°


74 
public
 
	$ã°Cª©ögW©chedEvítFromInvÆidWøµî
() {

77 
åy
 {

78 
W©chîEvít
 
wï
 = 
√w
 
	`W©chîEvít
(-2342, -252352, "foo");

79 
W©chedEvít
 
we
 = 
√w
 
	`W©chedEvít
(
wï
);

80 
As£π
.
	`Áû
("WasábleÅo create WatchedEvent from bad wrapper");

81 } 
	`ˇtch
 (
Ru¡imeEx˚±i⁄
 
ª
) {

84 
	}
}

86 @
Te°


87 
public
 
	$ã°C⁄vîtögToEvítWøµî
() {

88 
W©chedEvít
 
we
 = 
√w
 
	`W©chedEvít
(
EvítTy≥
.
NodeCª©ed
, 
Kì≥rSèã
.
Expúed
, "blah");

89 
W©chîEvít
 
wew
 = 
we
.
	`gëWøµî
();

91 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeCª©ed
.
	`gëI¡VÆue
(), 
wew
.
	`gëTy≥
());

92 
As£π
.
	`as£πEquÆs
(
Kì≥rSèã
.
Expúed
.
	`gëI¡VÆue
(), 
wew
.
	`gëSèã
());

93 
As£π
.
	`as£πEquÆs
("bœh", 
wew
.
	`gëP©h
());

94 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatcherFuncTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

25 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

26 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gKì≥rSèã
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
public
 cœs†
	cW©chîFuncTe°
 
exãnds
 
	mClõ¡Ba£
 {

40 
¥iv©e
 ˛as†
	cSim∂eW©chî
 
im∂emíts
 
	mW©chî
 {

41 
¥iv©e
 
	mLökedBlockögQueue
<
	mW©chedEvít
> 
	mevíts
 =

42 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

43 
¥iv©e
 
Cou¡DownL©ch
 
	mœtch
;

45 
public
 
Sim∂eW©chî
(
Cou¡DownL©ch
 
œtch
) {

46 
	mthis
.
	mœtch
 = 
œtch
;

49 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

50 i‡(
	mevít
.
gëSèã
(Ë=
Kì≥rSèã
.
SyncC⁄√˘ed
) {

51 i‡(
œtch
 !
nuŒ
) {

52 
œtch
.
cou¡Down
();

56 i‡(
	mevít
.
gëTy≥
(Ë=
EvítTy≥
.
N⁄e
) {

59 
	måy
 {

60 
	mevíts
.
put
(
evít
);

61 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

62 
	mAs£π
.
as£πTrue
("öãºu±i⁄ u√x≥˘ed", 
Ál£
);

65 
public
 
vîify
(
Li°
<
EvítTy≥
> 
ex≥˘ed
Ë
throws
 
	mI¡îru±edEx˚±i⁄
{

66 
W©chedEvít
 
	mevít
;

67 
	mcou¡
 = 0;

68 
	mcou¡
 < 
	mex≥˘ed
.
size
()

69 && (
	mevít
 = 
evíts
.
pﬁl
(30, 
TimeUnô
.
SECONDS
)Ë!
nuŒ
)

71 
As£π
.
as£πEquÆs
(
ex≥˘ed
.
gë
(
cou¡
), 
evít
.
gëTy≥
());

72 
	mcou¡
++;

74 
	mAs£π
.
as£πEquÆs
(
ex≥˘ed
.
size
(), 
cou¡
);

75 
	mevíts
.
˛ór
();

78 
¥iv©e
 
Sim∂eW©chî
 
	g˛õ¡_dw©ch
;

79 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	g˛õ¡_œtch
;

80 
¥iv©e
 
ZooKì≥r
 
	g˛õ¡
;

81 
¥iv©e
 
Sim∂eW©chî
 
	gl¢r_dw©ch
;

82 
¥iv©e
 vﬁ©ûê
Cou¡DownL©ch
 
	gl¢r_œtch
;

83 
¥iv©e
 
ZooKì≥r
 
	gl¢r
;

85 
¥iv©e
 
	gLi°
<
	gEvítTy≥
> 
	gex≥˘ed
;

87 @
Ovîride


88 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

89 
su≥r
.
	`£tUp
();

91 
˛õ¡_œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

92 
˛õ¡_dw©ch
 = 
√w
 
	`Sim∂eW©chî
(
˛õ¡_œtch
);

93 
˛õ¡
 = 
	`¸óãClõ¡
(
˛õ¡_dw©ch
, 
˛õ¡_œtch
);

95 
l¢r_œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

96 
l¢r_dw©ch
 = 
√w
 
	`Sim∂eW©chî
(
l¢r_œtch
);

97 
l¢r
 = 
	`¸óãClõ¡
(
l¢r_dw©ch
, 
l¢r_œtch
);

99 
ex≥˘ed
 = 
√w
 
AºayLi°
<
EvítTy≥
>();

100 
	}
}

102 @
Ovîride


103 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

104 
˛õ¡
.
	`˛o£
();

105 
l¢r
.
	`˛o£
();

106 
su≥r
.
	`ã¨Down
();

107 
	}
}

109 
¥Ÿe˘ed
 
ZooKì≥r
 
	$¸óãClõ¡
(
W©chî
 
w©chî
, 
Cou¡DownL©ch
 
œtch
)

110 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄


112 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 
CONNECTION_TIMEOUT
, 
w©chî
);

113 if(!
œtch
.
	`awaô
(
CONNECTION_TIMEOUT
, 
TimeUnô
.
MILLISECONDS
)){

114 
As£π
.
	`Áû
("UnableÅo connectÅo server");

116  
zk
;

117 
	}
}

119 
¥iv©e
 
	$vîify
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

120 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

121 
ex≥˘ed
.
	`˛ór
();

122 
	}
}

124 @
Te°


125 
public
 
	$ã°Exi°sSync
()

126 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


128 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

129 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
åue
));

131 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

132 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeCª©ed
);

133 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

134 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeCª©ed
);

136 
	`vîify
();

138 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

139 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
åue
));

141 
åy
 {

142 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/ˇr", 
åue
));

143 
˛õ¡
.
	`£tD©a
("/ˇr", "missög".
	`gëByãs
(), -1);

144 
As£π
.
	`Áû
();

145 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

146 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

147 
As£π
.
	`as£πEquÆs
("/ˇr", 
e
.
	`gëP©h
());

150 
åy
 {

151 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/ˇr", 
åue
));

152 
˛õ¡
.
	`£tD©a
("/foo/ˇr", "missög".
	`gëByãs
(), -1);

153 
As£π
.
	`Áû
();

154 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

155 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

156 
As£π
.
	`as£πEquÆs
("/foo/ˇr", 
e
.
	`gëP©h
());

159 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

160 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

161 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

162 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

164 
	`vîify
();

166 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

167 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
åue
));

169 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

170 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

171 
˛õ¡
.
	`dñëe
("/foo", -1);

172 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

174 
	`vîify
();

175 
	}
}

177 @
Te°


178 
public
 
	$ã°GëD©aSync
()

179 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


181 
åy
 {

182 
l¢r
.
	`gëD©a
("/foo", 
åue
, 
nuŒ
);

183 
As£π
.
	`Áû
();

184 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

185 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

186 
As£π
.
	`as£πEquÆs
("/foo", 
e
.
	`gëP©h
());

188 
åy
 {

189 
l¢r
.
	`gëD©a
("/foo/b¨", 
åue
, 
nuŒ
);

190 
As£π
.
	`Áû
();

191 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

192 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

193 
As£π
.
	`as£πEquÆs
("/foo/b¨", 
e
.
	`gëP©h
());

196 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

197 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
åue
, 
nuŒ
));

198 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

199 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
åue
, 
nuŒ
));

201 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

202 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

203 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

204 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

206 
	`vîify
();

208 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
åue
, 
nuŒ
));

209 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
åue
, 
nuŒ
));

211 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

212 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

213 
˛õ¡
.
	`dñëe
("/foo", -1);

214 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

216 
	`vîify
();

217 
	}
}

219 @
Te°


220 
public
 
	$ã°GëChûdªnSync
()

221 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


223 
åy
 {

224 
l¢r
.
	`gëChûdªn
("/foo", 
åue
);

225 
As£π
.
	`Áû
();

226 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

227 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

228 
As£π
.
	`as£πEquÆs
("/foo", 
e
.
	`gëP©h
());

230 
åy
 {

231 
l¢r
.
	`gëChûdªn
("/foo/b¨", 
åue
);

232 
As£π
.
	`Áû
();

233 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

234 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

235 
As£π
.
	`as£πEquÆs
("/foo/b¨", 
e
.
	`gëP©h
());

238 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

239 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
åue
));

241 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

242 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeChûdªnCh™ged
);

243 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
åue
));

246 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

247 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

250 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

252 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
åue
));

253 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
åue
));

255 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

256 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

257 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeChûdªnCh™ged
);

258 
˛õ¡
.
	`dñëe
("/foo", -1);

259 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

261 
	`vîify
();

262 
	}
}

264 @
Te°


265 
public
 
	$ã°Exi°sSyncWObj
()

266 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


268 
Sim∂eW©chî
 
w1
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

269 
Sim∂eW©chî
 
w2
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

270 
Sim∂eW©chî
 
w3
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

271 
Sim∂eW©chî
 
w4
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

273 
Li°
<
EvítTy≥
> 
e2
 = 
√w
 
AºayLi°
<EventType>();

275 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

276 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

278 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w2
));

279 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w3
));

280 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w3
));

281 
As£π
.
	`as£πNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w4
));

283 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

284 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeCª©ed
);

285 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

286 
e2
.
	`add
(
EvítTy≥
.
NodeCª©ed
);

288 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

289 
w1
.
	`vîify
(
ex≥˘ed
);

290 
w2
.
	`vîify
(
e2
);

291 
w3
.
	`vîify
(
e2
);

292 
w4
.
	`vîify
(
e2
);

293 
ex≥˘ed
.
	`˛ór
();

294 
e2
.
	`˛ór
();

297 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

299 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w2
));

300 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w3
));

301 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w4
));

302 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w4
));

304 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

305 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

306 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

307 
e2
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

309 
l¢r_dw©ch
.
	`vîify
(
√w
 
AºayLi°
<
EvítTy≥
>());

310 
w1
.
	`vîify
(
ex≥˘ed
);

311 
w2
.
	`vîify
(
e2
);

312 
w3
.
	`vîify
(
e2
);

313 
w4
.
	`vîify
(
e2
);

314 
ex≥˘ed
.
	`˛ór
();

315 
e2
.
	`˛ór
();

317 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

318 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

319 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

321 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w2
));

322 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w2
));

323 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w3
));

324 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo/b¨", 
w4
));

326 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

327 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

328 
˛õ¡
.
	`dñëe
("/foo", -1);

329 
e2
.
	`add
(
EvítTy≥
.
NodeDñëed
);

331 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

332 
w1
.
	`vîify
(
ex≥˘ed
);

333 
w2
.
	`vîify
(
e2
);

334 
w3
.
	`vîify
(
e2
);

335 
w4
.
	`vîify
(
e2
);

336 
ex≥˘ed
.
	`˛ór
();

337 
e2
.
	`˛ór
();

339 
	}
}

341 @
Te°


342 
public
 
	$ã°GëD©aSyncWObj
()

343 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


345 
Sim∂eW©chî
 
w1
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

346 
Sim∂eW©chî
 
w2
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

347 
Sim∂eW©chî
 
w3
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

348 
Sim∂eW©chî
 
w4
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

350 
Li°
<
EvítTy≥
> 
e2
 = 
√w
 
AºayLi°
<EventType>();

352 
åy
 {

353 
l¢r
.
	`gëD©a
("/foo", 
w1
, 
nuŒ
);

354 
As£π
.
	`Áû
();

355 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

356 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

357 
As£π
.
	`as£πEquÆs
("/foo", 
e
.
	`gëP©h
());

359 
åy
 {

360 
l¢r
.
	`gëD©a
("/foo/b¨", 
w2
, 
nuŒ
);

361 
As£π
.
	`Áû
();

362 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

363 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

364 
As£π
.
	`as£πEquÆs
("/foo/b¨", 
e
.
	`gëP©h
());

367 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

368 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
åue
, 
nuŒ
));

369 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
w1
, 
nuŒ
));

370 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

371 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w2
, 
nuŒ
));

372 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w3
, 
nuŒ
));

373 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w4
, 
nuŒ
));

374 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w4
, 
nuŒ
));

376 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

377 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

378 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

379 
e2
.
	`add
(
EvítTy≥
.
NodeD©aCh™ged
);

381 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

382 
w1
.
	`vîify
(
ex≥˘ed
);

383 
w2
.
	`vîify
(
e2
);

384 
w3
.
	`vîify
(
e2
);

385 
w4
.
	`vîify
(
e2
);

386 
ex≥˘ed
.
	`˛ór
();

387 
e2
.
	`˛ór
();

389 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
åue
, 
nuŒ
));

390 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo", 
w1
, 
nuŒ
));

391 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w2
, 
nuŒ
));

392 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w3
, 
nuŒ
));

393 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w3
, 
nuŒ
));

394 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëD©a
("/foo/b¨", 
w4
, 
nuŒ
));

396 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

397 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

398 
˛õ¡
.
	`dñëe
("/foo", -1);

399 
e2
.
	`add
(
EvítTy≥
.
NodeDñëed
);

401 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

402 
w1
.
	`vîify
(
ex≥˘ed
);

403 
w2
.
	`vîify
(
e2
);

404 
w3
.
	`vîify
(
e2
);

405 
w4
.
	`vîify
(
e2
);

406 
ex≥˘ed
.
	`˛ór
();

407 
e2
.
	`˛ór
();

408 
	}
}

410 @
Te°


411 
public
 
	$ã°GëChûdªnSyncWObj
()

412 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


414 
Sim∂eW©chî
 
w1
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

415 
Sim∂eW©chî
 
w2
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

416 
Sim∂eW©chî
 
w3
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

417 
Sim∂eW©chî
 
w4
 = 
√w
 
	`Sim∂eW©chî
(
nuŒ
);

419 
Li°
<
EvítTy≥
> 
e2
 = 
√w
 
AºayLi°
<EventType>();

421 
åy
 {

422 
l¢r
.
	`gëChûdªn
("/foo", 
åue
);

423 
As£π
.
	`Áû
();

424 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

425 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

426 
As£π
.
	`as£πEquÆs
("/foo", 
e
.
	`gëP©h
());

428 
åy
 {

429 
l¢r
.
	`gëChûdªn
("/foo/b¨", 
åue
);

430 
As£π
.
	`Áû
();

431 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

432 
As£π
.
	`as£πEquÆs
(
Kì≥rEx˚±i⁄
.
Code
.
NONODE
, 
e
.
	`code
());

433 
As£π
.
	`as£πEquÆs
("/foo/b¨", 
e
.
	`gëP©h
());

436 
˛õ¡
.
	`¸óã
("/foo", "∑ª¡".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

437 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
åue
));

438 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
w1
));

440 
˛õ¡
.
	`¸óã
("/foo/b¨", "chûd".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

441 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeChûdªnCh™ged
);

442 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w2
));

443 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w2
));

444 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w3
));

445 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w4
));

448 
˛õ¡
.
	`£tD©a
("/foo", "∑ª¡".
	`gëByãs
(), -1);

449 
˛õ¡
.
	`£tD©a
("/foo/b¨", "chûd".
	`gëByãs
(), -1);

452 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

453 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

454 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
åue
));

455 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`exi°s
("/foo", 
w1
));

457 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
åue
));

458 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo", 
w1
));

459 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w2
));

460 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w3
));

461 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w4
));

462 
As£π
.
	`as£πNŸNuŒ
(
l¢r
.
	`gëChûdªn
("/foo/b¨", 
w4
));

464 
˛õ¡
.
	`dñëe
("/foo/bar", -1);

465 
e2
.
	`add
(
EvítTy≥
.
NodeDñëed
);

466 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeChûdªnCh™ged
);

467 
˛õ¡
.
	`dñëe
("/foo", -1);

468 
ex≥˘ed
.
	`add
(
EvítTy≥
.
NodeDñëed
);

470 
l¢r_dw©ch
.
	`vîify
(
ex≥˘ed
);

471 
w1
.
	`vîify
(
ex≥˘ed
);

472 
w2
.
	`vîify
(
e2
);

473 
w3
.
	`vîify
(
e2
);

474 
w4
.
	`vîify
(
e2
);

475 
ex≥˘ed
.
	`˛ór
();

476 
e2
.
	`˛ór
();

477 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatcherTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeoutEx˚±i⁄
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gClõ¡Cnxn
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gTe°abÀZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gSètCÆlback
;

36 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gAsyncCÆlback
.
	gVoidCÆlback
;

37 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
;

38 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

39 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

40 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

41 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

42 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

44 
public
 cœs†
	cW©chîTe°
 
exãnds
 
	mClõ¡Ba£
 {

45 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
W©chîTe°
.
˛ass
);

47 
¥iv©e
 
föÆ
 cœs†
	cMySètCÆlback
 
im∂emíts
 
	mSètCÆlback
 {

48 
	mrc
;

49 
public
 
¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
, 
Sèt
 
°©
) {

50 (([])
	m˘x
)[0]++;

51 
	mthis
.
	mrc
 = 
rc
;

55 
¥iv©e
 cœs†
	cMyW©chî
 
exãnds
 
	gCou¡downW©chî
 {

56 
	gLökedBlockögQueue
<
	gW©chedEvít
> 
	gevíts
 =

57 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

59 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

60 
	gsu≥r
.
¥o˚ss
(
evít
);

61 i‡(
	gevít
.
gëTy≥
(Ë!
Evít
.
EvítTy≥
.
N⁄e
) {

62 
åy
 {

63 
evíts
.
put
(
evít
);

64 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

65 
	gLOG
.
w¨n
("ignoring interrupt duringÉvent.put");

81 @
Te°


82 
public
 
	$ã°W©chîC‹ª˘√ss
()

83 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄


85 
ZooKì≥r
 
zk
 = 
nuŒ
;

86 
åy
 {

87 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

88 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
);

90 
SètCÆlback
 
scb
 = 
√w
 
	`SètCÆlback
() {

91 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
,

92 
Sèt
 
°©
) {

96 
VoidCÆlback
 
vcb
 = 
√w
 
	`VoidCÆlback
() {

97 
public
 
	`¥o˚ssResu…
(
rc
, 
Såög
 
∑th
, 
Obje˘
 
˘x
) {

102 
Såög
 
«mes
[] = 
√w
 String[10];

103 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

104 
Såög
 
«me
 = 
zk
.
	`¸óã
("/tc-", "öôülvÆue".
	`gëByãs
(),

105 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

106 
«mes
[
i
] = 
«me
;

108 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

109 
zk
.
	`gëD©a
(
«me
, 
w©chî
, 
°©
);

110 
zk
.
	`£tD©a
(
«me
, "√w".
	`gëByãs
(), 
°©
.
	`gëVîsi⁄
(), 
scb
, 
nuŒ
);

111 
°©
 = 
zk
.
	`exi°s
(
«me
, 
w©chî
);

112 
zk
.
	`dñëe
(
«me
, 
°©
.
	`gëVîsi⁄
(), 
vcb
, 
nuŒ
);

115 
i
 = 0; i < 
«mes
.
Àngth
; i++) {

116 
Såög
 
«me
 = 
«mes
[
i
];

117 
W©chedEvít
 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

118 
As£π
.
	`as£πEquÆs
(
«me
, 
evít
.
	`gëP©h
());

119 
As£π
.
	`as£πEquÆs
(
Evít
.
EvítTy≥
.
NodeD©aCh™ged
, 
evít
.
	`gëTy≥
());

120 
As£π
.
	`as£πEquÆs
(
Evít
.
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

121 
evít
 = 
w©chî
.
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

122 
As£π
.
	`as£πEquÆs
(
«me
, 
evít
.
	`gëP©h
());

123 
As£π
.
	`as£πEquÆs
(
Evít
.
EvítTy≥
.
NodeDñëed
, 
evít
.
	`gëTy≥
());

124 
As£π
.
	`as£πEquÆs
(
Evít
.
Kì≥rSèã
.
SyncC⁄√˘ed
, 
evít
.
	`gëSèã
());

126 } 
föÆly
 {

127 i‡(
zk
 !
nuŒ
) {

128 
zk
.
	`˛o£
();

131 
	}
}

133 @
Te°


134 
public
 
	$ã°W©chîCou¡
()

135 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

136 
ZooKì≥r
 
zk1
 = 
nuŒ
, 
zk2
 =Çull;

137 
åy
 {

138 
MyW©chî
 
w1
 = 
√w
 
	`MyW©chî
();

139 
zk1
 = 
	`¸óãClõ¡
(
w1
, 
ho°P‹t
);

141 
MyW©chî
 
w2
 = 
√w
 
	`MyW©chî
();

142 
zk2
 = 
	`¸óãClõ¡
(
w2
, 
ho°P‹t
);

144 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

145 
zk1
.
	`¸óã
("/w©ch-cou¡-ã°", "vÆue".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

146 
zk1
.
	`¸óã
("/w©ch-cou¡-ã°-2", "vÆue".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

148 
zk1
.
	`gëD©a
("/w©ch-cou¡-ã°", 
w1
, 
°©
);

149 
zk1
.
	`gëD©a
("/w©ch-cou¡-ã°-2", 
w1
, 
°©
);

150 
zk2
.
	`gëD©a
("/w©ch-cou¡-ã°", 
w2
, 
°©
);

152 
As£π
.
	`as£πEquÆs
(
Clõ¡Ba£
.
	`gëSîvî
(
£rvîFa˘‹y
)

153 .
	`gëZKD©aba£
().
	`gëD©aTªe
().
	`gëW©chCou¡
(), 3);

155 } 
föÆly
 {

156 if(
zk1
 !
nuŒ
) {

157 
zk1
.
	`˛o£
();

159 if(
zk2
 !
nuŒ
) {

160 
zk2
.
	`˛o£
();

164 
	}
}

166 
föÆ
 
	gCOUNT
 = 100;

167 
boﬁón
 
	ghasSìnDñëe
 = 
åue
;

174 @
Te°


175 
public
 
	$ã°W©chAutoRe£tWôhPídög
(Ë
throws
 
Ex˚±i⁄
 {

176 
MyW©chî
 
w©ches
[] = 
√w
 MyW©chî[
COUNT
];

177 
MySètCÆlback
 
cbs
[] = 
√w
 MySètCÆlback[
COUNT
];

178 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

179 
cou¡
[] = 
√w
 [1];

180 
Te°abÀZooKì≥r
 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
, 6000);

181 
ZooKì≥r
 
zk2
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
, 5000);

182 
zk2
.
	`¸óã
("/ã°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

183 
i
 = 0; i < 
COUNT
/2; i++) {

184 
w©ches
[
i
] = 
√w
 
	`MyW©chî
();

185 
cbs
[
i
] = 
√w
 
	`MySètCÆlback
();

186 
zk
.
	`exi°s
("/ã°", 
w©ches
[
i
], 
cbs
[i], 
cou¡
);

188 
zk
.
	`exi°s
("/ã°", 
Ál£
);

189 
zk
.
	`∑u£Cnxn
(3000);

190 
Thªad
.
	`¶ìp
(50);

191 
zk2
.
	`˛o£
();

192 
	`°›Sîvî
();

193 
w©ches
[0].
	`waôF‹Disc⁄√˘ed
(60000);

194 
i
 = 
COUNT
/2; i < COUNT; i++) {

195 
w©ches
[
i
] = 
√w
 
	`MyW©chî
();

196 
cbs
[
i
] = 
√w
 
	`MySètCÆlback
();

197 
zk
.
	`exi°s
("/ã°", 
w©ches
[
i
], 
cbs
[i], 
cou¡
);

199 
	`°¨tSîvî
();

200 
w©ches
[
COUNT
/2-1].
	`waôF‹C⁄√˘ed
(60000);

201 
As£π
.
	`as£πEquÆs
(
nuŒ
, 
zk
.
	`exi°s
("/ã°", 
Ál£
));

202 
Thªad
.
	`¶ìp
(10);

203 
i
 = 0; i < 
COUNT
/2; i++) {

204 
As£π
.
	`as£πEquÆs
("F‹ " + 
i
, 1, 
w©ches
[i].
evíts
.
	`size
());

206 
i
 = 
COUNT
/2; i < COUNT; i++) {

207 i‡(
cbs
[
i
].
rc
 == 0) {

208 
As£π
.
	`as£πEquÆs
("F‹ " +
i
, 1, 
w©ches
[i].
evíts
.
	`size
());

210 
As£π
.
	`as£πEquÆs
("F‹ " +
i
, 0, 
w©ches
[i].
evíts
.
	`size
());

213 
As£π
.
	`as£πEquÆs
(
COUNT
, 
cou¡
[0]);

214 
zk
.
	`˛o£
();

215 
	}
}

217 
föÆ
 
	gTIMEOUT
 = 5000;

219 @
Te°


220 
public
 
	$ã°W©chîAutoRe£tWôhGlobÆ
(Ë
throws
 
Ex˚±i⁄
 {

221 
ZooKì≥r
 
zk
 = 
nuŒ
;

222 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

223 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
, 
TIMEOUT
);

224 
	`ã°W©chîAutoRe£t
(
zk
, 
w©chî
, watcher);

225 
zk
.
	`˛o£
();

226 
	}
}

228 @
Te°


229 
public
 
	$ã°W©chîAutoRe£tWôhLoˇl
(Ë
throws
 
Ex˚±i⁄
 {

230 
ZooKì≥r
 
zk
 = 
nuŒ
;

231 
MyW©chî
 
w©chî
 = 
√w
 
	`MyW©chî
();

232 
zk
 = 
	`¸óãClõ¡
(
w©chî
, 
ho°P‹t
, 
TIMEOUT
);

233 
	`ã°W©chîAutoRe£t
(
zk
, 
w©chî
, 
√w
 
	`MyW©chî
());

234 
zk
.
	`˛o£
();

235 
	}
}

237 @
Te°


238 
public
 
	$ã°W©chîAutoRe£tDißbÀdWôhGlobÆ
(Ë
throws
 
Ex˚±i⁄
 {

239 
Clõ¡Cnxn
.
	`£tDißbÀAutoRe£tW©ch
(
åue
);

240 
	`ã°W©chîAutoRe£tWôhGlobÆ
();

241 
	}
}

243 @
Te°


244 
public
 
	$ã°W©chîAutoRe£tDißbÀdWôhLoˇl
(Ë
throws
 
Ex˚±i⁄
 {

245 
Clõ¡Cnxn
.
	`£tDißbÀAutoRe£tW©ch
(
åue
);

246 
	`ã°W©chîAutoRe£tWôhLoˇl
();

247 
	}
}

249 
¥iv©e
 
	$ã°W©chîAutoRe£t
(
ZooKì≥r
 
zk
, 
MyW©chî
 
globÆW©chî
,

250 
MyW©chî
 
loˇlW©chî
Ë
throws
 
Ex˚±i⁄
 {

251 
boﬁón
 
isGlobÆ
 = (
loˇlW©chî
 =
globÆW©chî
);

253 
zk
.
	`¸óã
("/w©chã°", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

254 
Cª©eMode
.
PERSISTENT
);

255 
zk
.
	`¸óã
("/w©chã°/chûd", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

256 
Cª©eMode
.
EPHEMERAL
);

257 i‡(
isGlobÆ
) {

258 
zk
.
	`gëChûdªn
("/w©chã°", 
åue
);

259 
zk
.
	`gëD©a
("/w©chã°/chûd", 
åue
, 
√w
 
	`Sèt
());

260 
zk
.
	`exi°s
("/w©chã°/chûd2", 
åue
);

262 
zk
.
	`gëChûdªn
("/w©chã°", 
loˇlW©chî
);

263 
zk
.
	`gëD©a
("/w©chã°/chûd", 
loˇlW©chî
, 
√w
 
	`Sèt
());

264 
zk
.
	`exi°s
("/w©chã°/chûd2", 
loˇlW©chî
);

267 
As£π
.
	`as£πTrue
(
loˇlW©chî
.
evíts
.
	`isEm±y
());

269 
	`°›Sîvî
();

270 
globÆW©chî
.
	`waôF‹Disc⁄√˘ed
(3000);

271 
loˇlW©chî
.
	`waôF‹Disc⁄√˘ed
(500);

272 
	`°¨tSîvî
();

273 
globÆW©chî
.
	`waôF‹C⁄√˘ed
(3000);

274 i‡(!
isGlobÆ
 && !
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

275 
loˇlW©chî
.
	`waôF‹C⁄√˘ed
(500);

278 
As£π
.
	`as£πTrue
(
loˇlW©chî
.
evíts
.
	`isEm±y
());

279 
zk
.
	`£tD©a
("/w©chã°/chûd", 
√w
 
byã
[1], -1);

280 
zk
.
	`¸óã
("/w©chã°/chûd2", 
√w
 
byã
[0], 
Ids
.
OPEN_ACL_UNSAFE
,

281 
Cª©eMode
.
PERSISTENT
);

283 
W©chedEvít
 
e
;

284 i‡(!
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

285 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

286 
As£π
.
	`as£πEquÆs
(
e
.
	`gëP©h
(), 
EvítTy≥
.
NodeD©aCh™ged
,É.
	`gëTy≥
());

287 
As£π
.
	`as£πEquÆs
("/w©chã°/chûd", 
e
.
	`gëP©h
());

293 i‡(!
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

294 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

297 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeCª©ed
, 
e
.
	`gëTy≥
());

298 
As£π
.
	`as£πEquÆs
("/w©chã°/chûd2", 
e
.
	`gëP©h
());

304 i‡(!
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

305 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

306 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

307 
As£π
.
	`as£πEquÆs
("/w©chã°", 
e
.
	`gëP©h
());

313 
As£π
.
	`as£πTrue
(
loˇlW©chî
.
evíts
.
	`isEm±y
());

314 
	`°›Sîvî
();

315 
globÆW©chî
.
	`waôF‹Disc⁄√˘ed
(
TIMEOUT
);

316 
åy
 {

317 
åy
 {

318 
loˇlW©chî
.
	`waôF‹Disc⁄√˘ed
(500);

319 i‡(!
isGlobÆ
 && !
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

320 
As£π
.
	`Áû
("GotánÉvent when I shouldn't have");

322 } 
	`ˇtch
(
TimeoutEx˚±i⁄
 
t€
) {

323 i‡(
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

324 
As£π
.
	`Áû
("Didn't getánÉvent when I should have");

328 } 
	`ˇtch
 (
Ex˚±i⁄
 
e1
) {

329 
LOG
.
	`îr‹
("bad", 
e1
);

330 
throw
 
√w
 
	`Ru¡imeEx˚±i⁄
(
e1
);

332 
	`°¨tSîvî
();

333 
globÆW©chî
.
	`waôF‹C⁄√˘ed
(
TIMEOUT
);

335 i‡(
isGlobÆ
) {

336 
zk
.
	`gëChûdªn
("/w©chã°", 
åue
);

337 
zk
.
	`gëD©a
("/w©chã°/chûd", 
åue
, 
√w
 
	`Sèt
());

338 
zk
.
	`exi°s
("/w©chã°/chûd2", 
åue
);

340 
zk
.
	`gëChûdªn
("/w©chã°", 
loˇlW©chî
);

341 
zk
.
	`gëD©a
("/w©chã°/chûd", 
loˇlW©chî
, 
√w
 
	`Sèt
());

342 
zk
.
	`exi°s
("/w©chã°/chûd2", 
loˇlW©chî
);

347 
zk
.
	`dñëe
("/watchtest/child2", -1);

349 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

350 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeDñëed
, 
e
.
	`gëTy≥
());

351 
As£π
.
	`as£πEquÆs
("/w©chã°/chûd2", 
e
.
	`gëP©h
());

353 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

354 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeChûdªnCh™ged
, 
e
.
	`gëTy≥
());

355 
As£π
.
	`as£πEquÆs
("/w©chã°", 
e
.
	`gëP©h
());

357 
As£π
.
	`as£πTrue
(
loˇlW©chî
.
evíts
.
	`isEm±y
());

359 
	`°›Sîvî
();

360 
globÆW©chî
.
	`waôF‹Disc⁄√˘ed
(
TIMEOUT
);

361 
loˇlW©chî
.
	`waôF‹Disc⁄√˘ed
(500);

362 
	`°¨tSîvî
();

363 
globÆW©chî
.
	`waôF‹C⁄√˘ed
(
TIMEOUT
);

364 i‡(!
isGlobÆ
 && !
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

365 
loˇlW©chî
.
	`waôF‹C⁄√˘ed
(500);

368 
zk
.
	`dñëe
("/watchtest/child", -1);

369 
zk
.
	`dñëe
("/watchtest", -1);

371 i‡(!
Clõ¡Cnxn
.
	`gëDißbÀAutoRe£tW©ch
()) {

372 
e
 = 
loˇlW©chî
.
evíts
.
	`pﬁl
(
TIMEOUT
, 
TimeUnô
.
MILLISECONDS
);

373 
As£π
.
	`as£πEquÆs
(
EvítTy≥
.
NodeDñëed
, 
e
.
	`gëTy≥
());

374 
As£π
.
	`as£πEquÆs
("/w©chã°/chûd", 
e
.
	`gëP©h
());

381 
Thªad
.
	`¶ìp
(1000);

382 
As£π
.
	`as£πTrue
(
loˇlW©chî
.
evíts
.
	`isEm±y
());

384 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gFûe
;

22 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gio
.
	gR™domAc˚ssFûe
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gSyncReque°Pro˚ss‹
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	g≥rsi°í˚
.
	gFûeTxnS«pLog
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gqu‹um
.
	gQu‹umPìr
.
	gSîvîSèã
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

37 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

38 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

39 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

40 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

42 
public
 cœs†
	cZkD©aba£C‹ru±i⁄Te°
 
exãnds
 
	mZKTe°Ca£
 {

43 
¥Ÿe˘ed
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZkD©aba£C‹ru±i⁄Te°
.
˛ass
);

44 
public
 
föÆ
 
	mCONNECTION_TIMEOUT
 = 
Clõ¡Te°
.
CONNECTION_TIMEOUT
;

46 
¥iv©e
 
föÆ
 
Qu‹umBa£
 
	mqb
 = 
√w
 QuorumBase();

48 @
Bef‹e


49 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

50 
LOG
.
	`öfo
("STARTING qu‹um " + 
	`gëCœss
().
	`gëName
());

51 
qb
.
	`£tUp
();

54 @
A·î


55 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

56 
LOG
.
	`öfo
("STOPPING qu‹um " + 
	`gëCœss
().
	`gëName
());

57 
	}
}

59 
¥iv©e
 
	$c‹ru±Fûe
(
Fûe
 
f
Ë
throws
 
IOEx˚±i⁄
 {

60 
R™domAc˚ssFûe
 
outFûe
 = 
√w
 
	`R™domAc˚ssFûe
(
f
, "rw");

61 
outFûe
.
	`wrôe
("Áû sîvîs".
	`gëByãs
());

62 
outFûe
.
	`˛o£
();

63 
	}
}

65 
¥iv©e
 
	$c‹ru±AŒS«pshŸs
(
Fûe
 
¢≠Dú
Ë
throws
 
IOEx˚±i⁄
 {

66 
Fûe
[] 
li°Fûes
 = 
¢≠Dú
.
	`li°Fûes
();

67 
Fûe
 
f
: 
li°Fûes
) {

68 i‡(
f
.
	`gëName
().
	`°¨tsWôh
("snapshot")) {

69 
	`c‹ru±Fûe
(
f
);

72 
	}
}

74 @
Te°


75 
public
 
	$ã°C‹ru±i⁄
(Ë
throws
 
Ex˚±i⁄
 {

76 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

77 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
qb
.
ho°P‹t
, 10000);

78 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
qb
.
ho°P‹t
, 10000,Çew 
	`W©chî
() {

79 
public
 
	`¥o˚ss
(
W©chedEvít
 
evít
) {

81 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

82 
i
 = 0; i < 2000; i++) {

83 
zk
.
	`¸óã
("/0-" + 
i
, 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

85 
zk
.
	`˛o£
();

86 
Qu‹umPìr
 
Àadî
;

88 i‡–
qb
.
s5
.
	`gëPìrSèã
(Ë!
SîvîSèã
.
LEADING
) {

89 
throw
 
√w
 
	`Ex˚±i⁄
("theÜast server isÇotÅheÜeader");

91 
Àadî
 = 
qb
.
s5
;

93 
FûeTxnS«pLog
 
¢≠Log
 = 
Àadî
.
	`gëTxnFa˘‹y
();

94 
Fûe
 
¢≠Dú

¢≠Log
.
	`gëS«pDú
();

96 
	`c‹ru±AŒS«pshŸs
(
¢≠Dú
);

97 
qb
.
	`shutdownSîvîs
();

98 
qb
.
	`£tupSîvîs
();

99 
qb
.
s1
.
	`°¨t
();

100 
qb
.
s2
.
	`°¨t
();

101 
qb
.
s3
.
	`°¨t
();

102 
qb
.
s4
.
	`°¨t
();

103 
åy
 {

104 
qb
.
s5
.
	`°¨t
();

105 
As£π
.
	`as£πTrue
(
Ál£
);

106 } 
	`ˇtch
(
Ru¡imeEx˚±i⁄
 
ª
) {

107 
LOG
.
	`öfo
("GŸá¿îr‹:Éx≥˘ed", 
ª
);

110 
Såög
[] 
li°
 = 
qb
.
ho°P‹t
.
	`•lô
(",");

111 
i
 =0; i < 4; i++) {

112 
Såög
 
hp
 = 
li°
[
i
];

113 
As£π
.
	`as£πTrue
("waiting for server up",

114 
Clõ¡Ba£
.
	`waôF‹SîvîUp
(
hp
,

115 
CONNECTION_TIMEOUT
));

116 
LOG
.
	`öfo
(
hp
 + " isáccepting client connections");

119 
zk
 = 
qb
.
	`¸óãClõ¡
();

120 
SyncReque°Pro˚ss‹
.
	`£tS«pCou¡
(100);

121 
i
 = 2000; i < 4000; i++) {

122 
zk
.
	`¸óã
("/0-" + 
i
, 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

124 
zk
.
	`˛o£
();

125 
Qu‹umBa£
.
	`shutdown
(
qb
.
s1
);

126 
Qu‹umBa£
.
	`shutdown
(
qb
.
s2
);

127 
Qu‹umBa£
.
	`shutdown
(
qb
.
s3
);

128 
Qu‹umBa£
.
	`shutdown
(
qb
.
s4
);

129 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZooKeeperQuotaTest.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gQuŸas
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gSètsTøck
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥rMaö
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	g£rvî
.
	gZooKì≥rSîvî
;

32 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

34 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

35 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

37 
public
 cœs†
	cZooKì≥rQuŸaTe°
 
exãnds
 
	mClõ¡Ba£
 {

40 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(

41 
ZooKì≥rQuŸaTe°
.
˛ass
);

43 @
Te°


44 
public
 
	$ã°QuŸa
(Ë
throws
 
IOEx˚±i⁄
,

45 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
Ex˚±i⁄
 {

46 
föÆ
 
ZooKì≥r
 
zk
 = 
	`¸óãClõ¡
();

47 
föÆ
 
Såög
 
∑th
 = "/a/b/v";

49 
zk
.
	`£tD©a
("/", "some".
	`gëByãs
(), -1);

50 
zk
.
	`¸óã
("/a", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

51 
Cª©eMode
.
PERSISTENT
);

53 
zk
.
	`¸óã
("/a/b", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

54 
Cª©eMode
.
PERSISTENT
);

56 
zk
.
	`¸óã
("/a/b/v", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

57 
Cª©eMode
.
PERSISTENT
);

59 
zk
.
	`¸óã
("/a/b/v/d", "some".
	`gëByãs
(), 
Ids
.
OPEN_ACL_UNSAFE
,

60 
Cª©eMode
.
PERSISTENT
);

61 
ZooKì≥rMaö
.
	`¸óãQuŸa
(
zk
, 
∑th
, 5L, 10);

64 
Såög
 
absﬁuãP©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" + QuŸas.
limôNode
;

65 
byã
[] 
d©a
 = 
zk
.
	`gëD©a
(
absﬁuãP©h
, 
Ál£
, 
√w
 
	`Sèt
());

66 
SètsTøck
 
°
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
d©a
));

67 
As£π
.
	`as£πTrue
("byã†¨ê£t", 
°
.
	`gëByãs
() == 5L);

68 
As£π
.
	`as£πTrue
("num cou¡ i†£t", 
°
.
	`gëCou¡
() == 10);

70 
Såög
 
°©P©h
 = 
QuŸas
.
quŸaZookì≥r
 + 
∑th
 + "/" + QuŸas.
°©Node
;

71 
byã
[] 
qd©a
 = 
zk
.
	`gëD©a
(
°©P©h
, 
Ál£
, 
√w
 
	`Sèt
());

72 
SètsTøck
 
q°
 = 
√w
 
	`SètsTøck
“ew 
	`Såög
(
qd©a
));

73 
As£π
.
	`as£πTrue
("byã†¨ê£t", 
q°
.
	`gëByãs
() == 8L);

74 
As£π
.
	`as£πTrue
("cou¡ i†£t", 
q°
.
	`gëCou¡
() == 2);

77 
	`°›Sîvî
();

78 
	`°¨tSîvî
();

79 
	`°›Sîvî
();

80 
	`°¨tSîvî
();

81 
ZooKì≥rSîvî
 
£rvî
 = 
	`gëSîvî
(
£rvîFa˘‹y
);

82 
As£π
.
	`as£πNŸNuŒ
("Quota is still set",

83 
£rvî
.
	`gëZKD©aba£
().
	`gëD©aTªe
().
	`gëMaxPªfixWôhQuŸa
(
∑th
Ë!
nuŒ
);

85 
	}
}

	@/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
;

21 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gLökedBlockögQueue
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZKTe°Ca£
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
.
	gCode
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
.
	gEvít
.
	gEvítTy≥
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
.
	gIds
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

36 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

38 
public
 cœs†
	cZooKì≥rTe°Clõ¡
 
exãnds
 
ZKTe°Ca£
 
im∂emíts
 
	mW©chî
 {

39 
¥Ÿe˘ed
 
Såög
 
	mho°P‹t
 = "127.0.0.1:22801";

41 
¥Ÿe˘ed
 
föÆ
 
Såög
 
	mdúOnZK
 = "/test_dir";

43 
¥Ÿe˘ed
 
Såög
 
	mã°DúOnZK
 = 
dúOnZK
 + "/" + 
Sy°em
.
cuºítTimeMûlis
();

45 
	mLökedBlockögQueue
<
	mW©chedEvít
> 
	mevíts
 = 
√w
 
LökedBlockögQueue
<
W©chedEvít
>();

47 
¥iv©e
 
W©chedEvít
 
	$gëEvít
(
numTrõs
Ë
throws
 
I¡îru±edEx˚±i⁄
 {

48 
W©chedEvít
 
evít
 = 
nuŒ
;

49 
i
 = 0; i < 
numTrõs
; i++) {

50 
Sy°em
.
out
.
	`¥öén
("ò" + 
i
);

51 
evít
 = 
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

52 i‡(
evít
 !
nuŒ
) {

55 
Thªad
.
	`¶ìp
(5000);

57  
evít
;

61 
¥iv©e
 
	$dñëeZKDú
(
ZooKì≥r
 
zk
, 
Såög
 
nodeName
)

62 
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

64 
Sèt
 
°©
 = 
zk
.
	`exi°s
(
nodeName
, 
Ál£
);

65 i‡(
°©
 =
nuŒ
) {

69 
Li°
<
Såög
> 
chûdªn1
 = 
zk
.
	`gëChûdªn
(
nodeName
, 
Ál£
);

70 
Li°
<
Såög
> 
c2
 = 
zk
.
	`gëChûdªn
(
nodeName
, 
Ál£
, 
°©
);

72 i‡(!
chûdªn1
.
	`equÆs
(
c2
)) {

73 
As£π
.
	`Áû
("childrenÜists from getChildren()/getChildren2() doÇot match");

76 i‡(!
°©
.
	`equÆs
(stat)) {

77 
As£π
.
	`Áû
("stats fromÉxists()/getChildren2() doÇot match");

80 i‡(
chûdªn1
.
	`size
() == 0) {

81 
zk
.
	`dñëe
(
nodeName
, -1);

84 
Såög
 
n
 : 
chûdªn1
) {

85 
	`dñëeZKDú
(
zk
, 
n
);

87 
	}
}

89 
¥iv©e
 
	$checkRoŸ
(Ë
throws
 
IOEx˚±i⁄
,

90 
I¡îru±edEx˚±i⁄
 {

91 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

93 
åy
 {

94 
zk
.
	`¸óã
(
dúOnZK
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

95 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
ke
) {

97 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

98 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©ê" + 
dúOnZK
 + ": "

99 + 
ke
.
	`gëMesßge
());

102 
åy
 {

103 
zk
.
	`¸óã
(
ã°DúOnZK
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

104 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NodeExi°sEx˚±i⁄
 
ke
) {

106 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

107 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©ê" + 
ã°DúOnZK
 + ": "

108 + 
ke
.
	`gëMesßge
());

111 
zk
.
	`˛o£
();

112 
	}
}

114 
¥iv©e
 
	$íode_ã°_1
(Ë
throws
 
IOEx˚±i⁄
,

115 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

116 
	`checkRoŸ
();

117 
Såög
 
∑ª¡Name
 = 
ã°DúOnZK
;

118 
Såög
 
nodeName
 = 
∑ª¡Name
 + "/enode_abc";

119 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

121 
Sèt
 
°©
 = 
zk
.
	`exi°s
(
∑ª¡Name
, 
Ál£
);

122 i‡(
°©
 =
nuŒ
) {

123 
åy
 {

124 
zk
.
	`¸óã
(
∑ª¡Name
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

125 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

126 
As£π
.
	`Áû
("Cª©ögÇodê" + 
∑ª¡Name
 + 
ke
.
	`gëMesßge
());

130 
åy
 {

131 
zk
.
	`¸óã
(
nodeName
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

132 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

133 
Code
 
code
 = 
ke
.
	`code
();

134 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NODEEXISTS
;

135 i‡(!
vÆid
) {

136 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©eö: " + 
ke
.
	`gëMesßge
());

140 
°©
 = 
zk
.
	`exi°s
(
nodeName
, 
Ál£
);

141 i‡(
°©
 =
nuŒ
) {

142 
As£π
.
	`Áû
("nodê" + 
nodeName
 + " shouldÉxist");

144 
Sy°em
.
out
.
	`¥öén
("Closing client with sessionid: 0x"

145 + 
L⁄g
.
	`toHexSåög
(
zk
.
	`gëSessi⁄Id
()));

146 
zk
.
	`˛o£
();

147 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

149 
i
 = 0; i < 10; i++) {

150 
Sy°em
.
out
.
	`¥öén
("ò" + 
i
);

151 
°©
 = 
zk
.
	`exi°s
(
nodeName
, 
Ál£
);

152 i‡(
°©
 !
nuŒ
) {

153 
Sy°em
.
out
.
	`¥öén
("nodê" + 
nodeName


156 
Sy°em
.
out
.
	`¥öén
("nodê" + 
nodeName


160 
Thªad
.
	`¶ìp
(5000);

162 
	`dñëeZKDú
(
zk
, 
nodeName
);

163 
zk
.
	`˛o£
();

165 
	}
}

167 
¥iv©e
 
	$íode_ã°_2
(Ë
throws
 
IOEx˚±i⁄
,

168 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

169 
	`checkRoŸ
();

170 
Såög
 
∑ª¡Name
 = 
ã°DúOnZK
;

171 
Såög
 
nodeName
 = 
∑ª¡Name
 + "/enode_abc";

172 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

173 
ZooKì≥r
 
zk_1
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

175 
Sèt
 
°©_∑ª¡
 = 
zk_1
.
	`exi°s
(
∑ª¡Name
, 
Ál£
);

176 i‡(
°©_∑ª¡
 =
nuŒ
) {

177 
åy
 {

178 
zk
.
	`¸óã
(
∑ª¡Name
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

179 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

180 
As£π
.
	`Áû
("Cª©ögÇodê" + 
∑ª¡Name
 + 
ke
.
	`gëMesßge
());

184 
Sèt
 
°©_node
 = 
zk_1
.
	`exi°s
(
nodeName
, 
Ál£
);

185 i‡(
°©_node
 !
nuŒ
) {

187 
åy
 {

188 
zk
.
	`dñëe
(
nodeName
, -1);

189 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

190 
Code
 
code
 = 
ke
.
	`code
();

191 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NONODE


192 || 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY
;

193 i‡(!
vÆid
) {

194 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ dñëe: " + 
ke
.
	`gëMesßge
());

199 
Li°
<
Såög
> 
fú°Gí1
 = 
zk_1
.
	`gëChûdªn
(
∑ª¡Name
, 
åue
);

200 
Sèt
 
°©
 = 
√w
 
	`Sèt
();

201 
Li°
<
Såög
> 
fú°Gí2
 = 
zk_1
.
	`gëChûdªn
(
∑ª¡Name
, 
åue
, 
°©
);

203 i‡(!
fú°Gí1
.
	`equÆs
(
fú°Gí2
)) {

204 
As£π
.
	`Áû
("childrenÜists from getChildren()/getChildren2() doÇot match");

207 i‡(!
°©_∑ª¡
.
	`equÆs
(
°©
)) {

208 
As£π
.
	`Áû
("stat fromÉxists()/getChildren() doÇot match");

211 
åy
 {

212 
zk
.
	`¸óã
(
nodeName
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

213 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

214 
Code
 
code
 = 
ke
.
	`code
();

215 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NODEEXISTS
;

216 i‡(!
vÆid
) {

217 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©eö: " + 
ke
.
	`gëMesßge
());

221 
Thªad
.
	`¶ìp
(5000);

222 
W©chedEvít
 
evít
 = 
evíts
.
	`pﬁl
(10, 
TimeUnô
.
SECONDS
);

223 i‡(
evít
 =
nuŒ
) {

224 
throw
 
√w
 
	`IOEx˚±i⁄
("NoÉvent was deliveredÖromptly");

226 i‡(
evít
.
	`gëTy≥
(Ë!
EvítTy≥
.
NodeChûdªnCh™ged


227 || !
evít
.
	`gëP©h
().
	`equÆsIgn‹eCa£
(
∑ª¡Name
)) {

228 
As£π
.
	`Áû
("U√x≥˘edÉvíàwa†dñivîed: " + 
evít
.
	`toSåög
());

231 
°©_node
 = 
zk_1
.
	`exi°s
(
nodeName
, 
Ál£
);

232 i‡(
°©_node
 =
nuŒ
) {

233 
As£π
.
	`Áû
("nodê" + 
nodeName
 + " shouldÉxist");

236 
åy
 {

237 
zk
.
	`dñëe
(
∑ª¡Name
, -1);

238 
As£π
.
	`Áû
("Should bêimpossibÀÅÿdñëê®n⁄-em±yÇodê" + 
∑ª¡Name
);

239 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

240 
Code
 
code
 = 
ke
.
	`code
();

241 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY
;

242 i‡(!
vÆid
) {

243 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ dñëe: " + 
code
);

247 
åy
 {

248 
zk
.
	`¸óã
(
nodeName
 + "/def", 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
EPHEMERAL
);

249 
As£π
.
	`Áû
("Should bêimpossibÀÅÿ¸óã chûd of‡EphemîÆÇodê" + 
nodeName
);

250 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

251 
Code
 
code
 = 
ke
.
	`code
();

252 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOCHILDRENFOREPHEMERALS
;

253 i‡(!
vÆid
) {

254 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©eö: " + 
code
);

258 
åy
 {

259 
Li°
<
Såög
> 
chûdªn1
 = 
zk
.
	`gëChûdªn
(
nodeName
, 
Ál£
);

260 
Li°
<
Såög
> 
chûdªn2
 = 
zk
.
	`gëChûdªn
(
nodeName
, 
Ál£
, 
nuŒ
);

262 i‡(!
chûdªn1
.
	`equÆs
(
chûdªn2
)) {

263 
As£π
.
	`Áû
("childrenÜists from getChildren()/getChildren2() doesÇot match");

266 i‡(
chûdªn1
.
	`size
() > 0) {

267 
As£π
.
	`Áû
("ïhemîÆÇodê" + 
nodeName
 + " shouldÇot have children");

269 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

270 
Code
 
code
 = 
ke
.
	`code
();

271 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NONODE
;

272 i‡(!
vÆid
) {

273 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©eö: " + 
code
);

276 
fú°Gí1
 = 
zk_1
.
	`gëChûdªn
(
∑ª¡Name
, 
åue
);

277 
fú°Gí2
 = 
zk_1
.
	`gëChûdªn
(
∑ª¡Name
, 
åue
, 
nuŒ
);

279 i‡(!
fú°Gí1
.
	`equÆs
(
fú°Gí2
)) {

280 
As£π
.
	`Áû
("childrenÜist from getChildren()/getChildren2() doesÇot match");

283 
°©_node
 = 
zk_1
.
	`exi°s
(
nodeName
, 
åue
);

284 i‡(
°©_node
 =
nuŒ
) {

285 
As£π
.
	`Áû
("nodê" + 
nodeName
 + " shouldÉxist");

287 
Sy°em
.
out
.
	`¥öén
("£ssi⁄ id o‡zk: " + 
zk
.
	`gëSessi⁄Id
());

288 
Sy°em
.
out
.
	`¥öén
("£ssi⁄ id o‡zk_1: " + 
zk_1
.
	`gëSessi⁄Id
());

289 
zk
.
	`˛o£
();

291 
Sèt
 
no_°©
 = 
zk_1
.
	`exi°s
("nosuchnode", 
Ál£
);

293 
evít
 = 
this
.
	`gëEvít
(10);

294 i‡(
evít
 =
nuŒ
) {

295 
throw
 
√w
 
	`Eº‹
("FirstÉvent wasÇot deliveredÖromptly");

297 i‡(!((
evít
.
	`gëTy≥
(Ë=
EvítTy≥
.
NodeChûdªnCh™ged
 &&

298 
evít
.
	`gëP©h
().
	`equÆsIgn‹eCa£
(
∑ª¡Name
)) ||

299 (
evít
.
	`gëTy≥
(Ë=
EvítTy≥
.
NodeDñëed
 &&

300 
evít
.
	`gëP©h
().
	`equÆsIgn‹eCa£
(
nodeName
)))) {

301 
Sy°em
.
out
.
	`¥öt
(
∑ª¡Name
 + " "

302 + 
EvítTy≥
.
NodeChûdªnCh™ged
 + " " + 
nodeName
 + " " + EvítTy≥.
NodeDñëed
);

303 
As£π
.
	`Áû
("U√x≥˘ed fú°Évíàwa†dñivîed: " + 
evít
.
	`toSåög
());

306 
evít
 = 
this
.
	`gëEvít
(10);

308 i‡(
evít
 =
nuŒ
) {

309 
throw
 
√w
 
	`Eº‹
("SecondÉvent wasÇot deliveredÖromptly");

311 i‡(!((
evít
.
	`gëTy≥
(Ë=
EvítTy≥
.
NodeChûdªnCh™ged
 &&

312 
evít
.
	`gëP©h
().
	`equÆsIgn‹eCa£
(
∑ª¡Name
)) ||

313 (
evít
.
	`gëTy≥
(Ë=
EvítTy≥
.
NodeDñëed
 &&

314 
evít
.
	`gëP©h
().
	`equÆsIgn‹eCa£
(
nodeName
)))) {

315 
Sy°em
.
out
.
	`¥öt
(
∑ª¡Name
 + " "

316 + 
EvítTy≥
.
NodeChûdªnCh™ged
 + " " + 
nodeName
 + " " + EvítTy≥.
NodeDñëed
);

317 
As£π
.
	`Áû
("U√x≥˘ed sec⁄dÉvíàwa†dñivîed: " + 
evít
.
	`toSåög
());

320 
fú°Gí1
 = 
zk_1
.
	`gëChûdªn
(
∑ª¡Name
, 
Ál£
);

321 
°©_node
 = 
zk_1
.
	`exi°s
(
nodeName
, 
Ál£
);

322 i‡(
°©_node
 !
nuŒ
) {

323 
As£π
.
	`Áû
("nodê" + 
nodeName
 + " should have been deleted");

325 i‡(
fú°Gí1
.
	`c⁄èös
(
nodeName
)) {

326 
As£π
.
	`Áû
("nodê" + 
nodeName
 + " shouldÇot beá children");

328 
	`dñëeZKDú
(
zk_1
, 
nodeName
);

329 
zk_1
.
	`˛o£
();

330 
	}
}

332 
¥iv©e
 
	$dñëe_¸óã_gë_£t_ã°_1
(Ë
throws


333 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

334 
	`checkRoŸ
();

335 
ZooKì≥r
 
zk
 = 
√w
 
	`ZooKì≥r
(
ho°P‹t
, 10000, 
this
);

336 
Såög
 
∑ª¡Name
 = 
ã°DúOnZK
;

337 
Såög
 
nodeName
 = 
∑ª¡Name
 + "/benwashere";

338 
åy
 {

339 
zk
.
	`dñëe
(
nodeName
, -1);

340 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

341 
Code
 
code
 = 
ke
.
	`code
();

342 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NONODE


343 || 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY
;

344 i‡(!
vÆid
) {

345 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ dñëe: " + 
ke
.
	`gëMesßge
());

348 
åy
 {

349 
zk
.
	`¸óã
(
nodeName
, 
nuŒ
, 
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

350 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

351 
Code
 
code
 = 
ke
.
	`code
();

352 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NODEEXISTS
;

353 i‡(!
vÆid
) {

354 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ cª©e: " + 
ke
.
	`gëMesßge
());

357 
åy
 {

358 
zk
.
	`£tD©a
(
nodeName
, "hi".
	`gëByãs
(), 5700);

359 
As£π
.
	`Áû
("Should have gotten BadVersionÉxception");

360 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

361 i‡(
ke
.
	`code
(Ë!
Code
.
BADVERSION
) {

362 
As£π
.
	`Áû
("Should have gotten BadVersionÉxception");

365 
zk
.
	`£tD©a
(
nodeName
, "hi".
	`gëByãs
(), -1);

366 
Sèt
 
°
 = 
√w
 
	`Sèt
();

367 
byã
[] 
byãs
 = 
zk
.
	`gëD©a
(
nodeName
, 
Ál£
, 
°
);

368 
Såög
 
ªåõved
 = 
√w
 
	`Såög
(
byãs
);

369 i‡(!"hi".
	`equÆs
(
ªåõved
)) {

370 
As£π
.
	`Áû
("Thêªåõved d©®[" + 
ªåõved


373 
åy
 {

374 
zk
.
	`dñëe
(
nodeName
, 6800);

375 
As£π
.
	`Áû
("Should have gotten BadVersionÉxception");

376 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

377 
Code
 
code
 = 
ke
.
	`code
();

378 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY


379 || 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
BADVERSION
;

380 i‡(!
vÆid
) {

381 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ dñëe: " + 
ke
.
	`gëMesßge
());

384 
åy
 {

385 
zk
.
	`dñëe
(
nodeName
, -1);

386 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
ke
) {

387 
Code
 
code
 = 
ke
.
	`code
();

388 
boﬁón
 
vÆid
 = 
code
 =
Kì≥rEx˚±i⁄
.
Code
.
NOTEMPTY
;

389 i‡(!
vÆid
) {

390 
As£π
.
	`Áû
("U√x≥˘edÉx˚±i⁄ codêf‹ dñëe: " + 
code
);

393 
	`dñëeZKDú
(
zk
, 
nodeName
);

394 
zk
.
	`˛o£
();

395 
	}
}

397 
public
 
	$my_ã°_1
(Ë
throws
 
IOEx˚±i⁄
,

398 
I¡îru±edEx˚±i⁄
, 
Kì≥rEx˚±i⁄
 {

399 
	`íode_ã°_1
();

400 
	`íode_ã°_2
();

401 
	`dñëe_¸óã_gë_£t_ã°_1
();

402 
	}
}

404 
synchr⁄ized
 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

405 
åy
 {

406 
Sy°em
.
out
.
	`¥öén
("GŸá¿evíà" + 
evít
.
	`toSåög
());

407 
evíts
.
	`put
(
evít
);

408 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

409 
e
.
	`¥ötSèckTø˚
();

411 
	}
}

413 
public
 
	$maö
(
Såög
[] 
¨gs
) {

414 
ZooKì≥rTe°Clõ¡
 
zktc
 = 
√w
 
	`ZooKì≥rTe°Clõ¡
();

415 
åy
 {

416 
zktc
.
	`my_ã°_1
();

417 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

418 
e
.
	`¥ötSèckTø˚
();

420 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionAware.java

17 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gÀadî
;

19 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gÀadî
.
	gLódîEÀ˘i⁄Suµ‹t
.
	gEvítTy≥
;

25 
public
 
öãrÁ˚
 
	gLódîEÀ˘i⁄Aw¨e
 {

35 
public
 
⁄EÀ˘i⁄Evít
(
EvítTy≥
 
evítTy≥
);

	@/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java

17 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gÀadî
;

19 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gCﬁÀ˘i⁄s
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gHashSë
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gSë
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

32 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

33 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

96 
public
 cœs†
	cLódîEÀ˘i⁄Suµ‹t
 
im∂emíts
 
	mW©chî
 {

98 
¥iv©e
 
föÆ
 
Loggî
 
	mloggî
 = 
LoggîFa˘‹y


99 .
gëLoggî
(
LódîEÀ˘i⁄Suµ‹t
.
˛ass
);

101 
¥iv©e
 
ZooKì≥r
 
	mzooKì≥r
;

103 
¥iv©e
 
Sèã
 
	m°©e
;

104 
¥iv©e
 
	mSë
<
	mLódîEÀ˘i⁄Aw¨e
> 
	mli°íîs
;

106 
¥iv©e
 
Såög
 
	mroŸNodeName
;

107 
¥iv©e
 
LódîOf„r
 
	mÀadîOf„r
;

108 
¥iv©e
 
Såög
 
	mho°Name
;

110 
public
 
	$LódîEÀ˘i⁄Suµ‹t
() {

111 
°©e
 = 
Sèã
.
STOP
;

112 
li°íîs
 = 
CﬁÀ˘i⁄s
.
	`synchr⁄izedSë
(
√w
 
HashSë
<
LódîEÀ˘i⁄Aw¨e
>());

127 
public
 
synchr⁄ized
 
	$°¨t
() {

128 
°©e
 = 
Sèã
.
START
;

129 
	`di•©chEvít
(
EvítTy≥
.
START
);

131 
loggî
.
	`öfo
("StartingÜeaderÉlection support");

133 i‡(
zooKì≥r
 =
nuŒ
) {

134 
throw
 
√w
 
	`IŒegÆSèãEx˚±i⁄
(

138 i‡(
ho°Name
 =
nuŒ
) {

139 
throw
 
√w
 
	`IŒegÆSèãEx˚±i⁄
(

143 
åy
 {

144 
	`makeOf„r
();

145 
	`dëîmöeEÀ˘i⁄Sètus
();

146 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

147 
	`becomeFaûed
(
e
);

149 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

150 
	`becomeFaûed
(
e
);

153 
	}
}

159 
public
 
synchr⁄ized
 
	$°›
() {

160 
°©e
 = 
Sèã
.
STOP
;

161 
	`di•©chEvít
(
EvítTy≥
.
STOP_START
);

163 
loggî
.
	`öfo
("StoppingÜeaderÉlection support");

165 i‡(
ÀadîOf„r
 !
nuŒ
) {

166 
åy
 {

167 
zooKì≥r
.
	`dñëe
(
ÀadîOf„r
.
	`gëNodeP©h
(), -1);

168 
loggî
.
	`öfo
("RemovedÜódî of„∏{}", 
ÀadîOf„r
.
	`gëNodeP©h
());

169 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

170 
	`becomeFaûed
(
e
);

171 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

172 
	`becomeFaûed
(
e
);

176 
	`di•©chEvít
(
EvítTy≥
.
STOP_COMPLETE
);

177 
	}
}

179 
¥iv©e
 
	$makeOf„r
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

180 
°©e
 = 
Sèã
.
OFFER
;

181 
	`di•©chEvít
(
EvítTy≥
.
OFFER_START
);

183 
ÀadîOf„r
 = 
√w
 
	`LódîOf„r
();

185 
ÀadîOf„r
.
	`£tHo°Name
(
ho°Name
);

186 
ÀadîOf„r
.
	`£tNodeP©h
(
zooKì≥r
.
	`¸óã
(
roŸNodeName
 + "/" + "n_",

187 
ho°Name
.
	`gëByãs
(), 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
,

188 
Cª©eMode
.
EPHEMERAL_SEQUENTIAL
));

190 
loggî
.
	`debug
("Cª©edÜódî of„∏{}", 
ÀadîOf„r
);

192 
	`di•©chEvít
(
EvítTy≥
.
OFFER_COMPLETE
);

193 
	}
}

195 
¥iv©e
 
	$dëîmöeEÀ˘i⁄Sètus
(Ë
throws
 
Kì≥rEx˚±i⁄
,

196 
I¡îru±edEx˚±i⁄
 {

198 
°©e
 = 
Sèã
.
DETERMINE
;

199 
	`di•©chEvít
(
EvítTy≥
.
DETERMINE_START
);

201 
Såög
[] 
comp⁄íts
 = 
ÀadîOf„r
.
	`gëNodeP©h
().
	`•lô
("/");

203 
ÀadîOf„r
.
	`£tId
(
I¡egî
.
	`vÆueOf
(
comp⁄íts
[comp⁄íts.
Àngth
 - 1]

204 .
	`sub°rög
("n_".
	`Àngth
())));

206 
Li°
<
LódîOf„r
> 
ÀadîOf„rs
 = 
	`toLódîOf„rs
(
zooKì≥r
.
	`gëChûdªn
(

207 
roŸNodeName
, 
Ál£
));

215 
i
 = 0; i < 
ÀadîOf„rs
.
	`size
(); i++) {

216 
LódîOf„r
 
ÀadîOf„r
 = 
ÀadîOf„rs
.
	`gë
(
i
);

218 i‡(
ÀadîOf„r
.
	`gëId
().
	`equÆs
(
this
.leaderOffer.getId())) {

219 
loggî
.
	`debug
("Thereáre {}Üeader offers. Iám {} inÜine.",

220 
ÀadîOf„rs
.
	`size
(), 
i
);

222 
	`di•©chEvít
(
EvítTy≥
.
DETERMINE_COMPLETE
);

224 i‡(
i
 == 0) {

225 
	`becomeLódî
();

227 
	`becomeRódy
(
ÀadîOf„rs
.
	`gë
(
i
 - 1));

234 
	}
}

236 
¥iv©e
 
	$becomeRódy
(
LódîOf„r
 
√ighb‹LódîOf„r
)

237 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

238 
	`di•©chEvít
(
EvítTy≥
.
READY_START
);

240 
loggî
.
	`öfo
("{}ÇotÉlectedÜeader. WatchingÇode:{}",

241 
ÀadîOf„r
.
	`gëNodeP©h
(), 
√ighb‹LódîOf„r
.getNodePath());

247 
Sèt
 
°©
 = 
zooKì≥r
.
	`exi°s
(
√ighb‹LódîOf„r
.
	`gëNodeP©h
(), 
this
);

249 i‡(
°©
 !
nuŒ
) {

250 
loggî
.
	`debug
(

252 
√ighb‹LódîOf„r
.
	`gëNodeP©h
());

253 
°©e
 = 
Sèã
.
READY
;

254 
	`di•©chEvít
(
EvítTy≥
.
READY_COMPLETE
);

260 
loggî


261 .
	`öfo
(

263 
√ighb‹LódîOf„r
.
	`gëNodeP©h
());

264 
	`dëîmöeEÀ˘i⁄Sètus
();

267 
	}
}

269 
¥iv©e
 
	$becomeLódî
() {

270 
°©e
 = 
Sèã
.
ELECTED
;

271 
	`di•©chEvít
(
EvítTy≥
.
ELECTED_START
);

273 
loggî
.
	`öfo
("BecomögÜódî wôhÇode:{}", 
ÀadîOf„r
.
	`gëNodeP©h
());

275 
	`di•©chEvít
(
EvítTy≥
.
ELECTED_COMPLETE
);

276 
	}
}

278 
¥iv©e
 
	$becomeFaûed
(
Ex˚±i⁄
 
e
) {

279 
loggî
.
	`îr‹
("Faûed i¿°©ê{} - Ex˚±i⁄:{}", 
°©e
, 
e
);

281 
°©e
 = 
Sèã
.
FAILED
;

282 
	`di•©chEvít
(
EvítTy≥
.
FAILED
);

283 
	}
}

297 
public
 
Såög
 
	$gëLódîHo°Name
(Ë
throws
 
Kì≥rEx˚±i⁄
,

298 
I¡îru±edEx˚±i⁄
 {

300 
Li°
<
LódîOf„r
> 
ÀadîOf„rs
 = 
	`toLódîOf„rs
(
zooKì≥r
.
	`gëChûdªn
(

301 
roŸNodeName
, 
Ál£
));

303 i‡(
ÀadîOf„rs
.
	`size
() > 0) {

304  
ÀadîOf„rs
.
	`gë
(0).
	`gëHo°Name
();

307  
nuŒ
;

308 
	}
}

310 
¥iv©e
 
	gLi°
<
	gLódîOf„r
> 
toLódîOf„rs
(
Li°
<
Såög
> 
°rögs
)

311 
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

313 
	gLi°
<
	gLódîOf„r
> 
	gÀadîOf„rs
 = 
√w
 
AºayLi°
<
LódîOf„r
>(
°rögs
.
size
());

319 
Såög
 
	gof„r
 : 
°rögs
) {

320 
Såög
 
ho°Name
 = 
√w
 Såög(
zooKì≥r
.
gëD©a
(

321 
roŸNodeName
 + "/" + 
of„r
, 
Ál£
, 
nuŒ
));

323 
	gÀadîOf„rs
.
add
(
√w
 
LódîOf„r
(
I¡egî
.
vÆueOf
(
of„r
.
sub°rög
("n_"

324 .
Àngth
())), 
roŸNodeName
 + "/" + 
of„r
, 
ho°Name
));

331 
	gCﬁÀ˘i⁄s
.
s‹t
(
ÀadîOf„rs
, 
√w
 
LódîOf„r
.
IdCom∑øt‹
());

333  
	gÀadîOf„rs
;

336 @
Ovîride


337 
public
 
	$¥o˚ss
(
W©chedEvít
 
evít
) {

338 i‡(
evít
.
	`gëTy≥
().
	`equÆs
(
W©chî
.
Evít
.
EvítTy≥
.
NodeDñëed
)) {

339 i‡(!
evít
.
	`gëP©h
().
	`equÆs
(
ÀadîOf„r
.
	`gëNodeP©h
())

340 && 
°©e
 !
Sèã
.
STOP
) {

341 
loggî
.
	`debug
(

343 
evít
.
	`gëP©h
());

344 
åy
 {

345 
	`dëîmöeEÀ˘i⁄Sètus
();

346 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

347 
	`becomeFaûed
(
e
);

348 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

349 
	`becomeFaûed
(
e
);

353 
	}
}

355 
¥iv©e
 
	$di•©chEvít
(
EvítTy≥
 
evítTy≥
) {

356 
loggî
.
	`debug
("Di•©chögÉvít:{}", 
evítTy≥
);

358 
	`synchr⁄ized
 (
li°íîs
) {

359 i‡(
li°íîs
.
	`size
() > 0) {

360 
LódîEÀ˘i⁄Aw¨e
 
ob£rvî
 : 
li°íîs
) {

361 
ob£rvî
.
	`⁄EÀ˘i⁄Evít
(
evítTy≥
);

365 
	}
}

372 
public
 
	$addLi°íî
(
LódîEÀ˘i⁄Aw¨e
 
li°íî
) {

373 
li°íîs
.
	`add
(
li°íî
);

374 
	}
}

381 
public
 
	$ªmoveLi°íî
(
LódîEÀ˘i⁄Aw¨e
 
li°íî
) {

382 
li°íîs
.
	`ªmove
(
li°íî
);

383 
	}
}

385 @
Ovîride


386 
public
 
Såög
 
	$toSåög
() {

387  "{ sèã:" + 
°©e
 + "ÜódîOf„r:" + 
ÀadîOf„r
 + " zooKeeper:"

388 + 
zooKì≥r
 + " ho°Name:" + 
ho°Name
 + "Üi°íîs:" + 
li°íîs


390 
	}
}

405 
public
 
Såög
 
	$gëRoŸNodeName
() {

406  
roŸNodeName
;

407 
	}
}

420 
public
 
	$£tRoŸNodeName
(
Såög
 
roŸNodeName
) {

421 
this
.
roŸNodeName
 =ÑootNodeName;

422 
	}
}

428 
public
 
ZooKì≥r
 
	$gëZooKì≥r
() {

429  
zooKì≥r
;

430 
	}
}

432 
public
 
	$£tZooKì≥r
(
ZooKì≥r
 
zooKì≥r
) {

433 
this
.
zooKì≥r
 = zooKeeper;

434 
	}
}

440 
public
 
Såög
 
	$gëHo°Name
() {

441  
ho°Name
;

442 
	}
}

444 
public
 
	$£tHo°Name
(
Såög
 
ho°Name
) {

445 
this
.
ho°Name
 = hostName;

446 
	}
}

451 
public
 
	eEvítTy≥
 {

452 
	gSTART
, 
	gOFFER_START
, 
	gOFFER_COMPLETE
, 
	gDETERMINE_START
, 
	gDETERMINE_COMPLETE
, 
	gELECTED_START
, 
	gELECTED_COMPLETE
, 
	gREADY_START
, 
	gREADY_COMPLETE
, 
	gFAILED
, 
	gSTOP_START
, 
	gSTOP_COMPLETE
,

458 
public
 
	eSèã
 {

459 
	gSTART
, 
	gOFFER
, 
	gDETERMINE
, 
	gELECTED
, 
	gREADY
, 
	gFAILED
, 
	gSTOP


	@/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderOffer.java

17 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gÀadî
;

19 
imp‹t
 
	gjava
.
	gutû
.
	gCom∑øt‹
;

25 
public
 cœs†
	cLódîOf„r
 {

27 
¥iv©e
 
I¡egî
 
	mid
;

28 
¥iv©e
 
Såög
 
	mnodeP©h
;

29 
¥iv©e
 
Såög
 
	mho°Name
;

31 
public
 
	$LódîOf„r
() {

35 
public
 
	$LódîOf„r
(
I¡egî
 
id
, 
Såög
 
nodeP©h
, Såög 
ho°Name
) {

36 
this
.
id
 = id;

37 
this
.
nodeP©h
 =ÇodePath;

38 
this
.
ho°Name
 = hostName;

39 
	}
}

41 @
Ovîride


42 
public
 
Såög
 
	$toSåög
() {

43  "{ id:" + 
id
 + "ÇodeP©h:" + 
nodeP©h
 + " ho°Name:" + 
ho°Name


45 
	}
}

47 
public
 
I¡egî
 
	$gëId
() {

48  
id
;

49 
	}
}

51 
public
 
	$£tId
(
I¡egî
 
id
) {

52 
this
.
id
 = id;

53 
	}
}

55 
public
 
Såög
 
	$gëNodeP©h
() {

56  
nodeP©h
;

57 
	}
}

59 
public
 
	$£tNodeP©h
(
Såög
 
nodeP©h
) {

60 
this
.
nodeP©h
 =ÇodePath;

61 
	}
}

63 
public
 
Såög
 
	$gëHo°Name
() {

64  
ho°Name
;

65 
	}
}

67 
public
 
	$£tHo°Name
(
Såög
 
ho°Name
) {

68 
this
.
ho°Name
 = hostName;

69 
	}
}

75 
public
 
˛ass
 
IdCom∑øt‹
 
im∂emíts
 
	gCom∑øt‹
<
	gLódîOf„r
> {

77 @
Ovîride


78 
public
 
com∑ª
(
LódîOf„r
 
o1
, LódîOf„∏
o2
) {

79  
	go1
.
gëId
().
com∑ªTo
(
o2
.getId());

	@/home/pig/zookeeper-3.4.5/src/recipes/election/test/org/apache/zookeeper/recipes/leader/LeaderElectionSupportTest.java

17 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gÀadî
;

19 
imp‹t
 
	gjava
.
	gio
.
	gIOEx˚±i⁄
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gAºayLi°
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicI¡egî
;

26 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

33 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

34 
imp‹t
 
	g‹g
.
	gjunô
.
	gBef‹e
;

35 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

36 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

37 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

39 
public
 cœs†
	cLódîEÀ˘i⁄Suµ‹tTe°
 
exãnds
 
	mClõ¡Ba£
 {

41 
¥iv©e
 
föÆ
 
Loggî
 
	mloggî
 = 
LoggîFa˘‹y


42 .
gëLoggî
(
LódîEÀ˘i⁄Suµ‹tTe°
.
˛ass
);

43 
¥iv©e
 
föÆ
 
Såög
 
	mã°RoŸNode
 = "/" + 
Sy°em
.
cuºítTimeMûlis
()

46 
¥iv©e
 
ZooKì≥r
 
	mzooKì≥r
;

48 @
Bef‹e


49 
public
 
	$£tUp
(Ë
throws
 
Ex˚±i⁄
 {

50 
su≥r
.
	`£tUp
();

52 
zooKì≥r
 = 
	`¸óãClõ¡
();

54 
zooKì≥r
.
	`¸óã
(
ã°RoŸNode
 + 
Thªad
.
	`cuºítThªad
().
	`gëId
(),

55 
√w
 
byã
[0], 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
, 
Cª©eMode
.
PERSISTENT
);

58 @
A·î


59 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

60 i‡(
zooKì≥r
 !
nuŒ
) {

61 
zooKì≥r
.
	`dñëe
(
ã°RoŸNode
 + 
Thªad
.
	`cuºítThªad
().
	`gëId
(), -1);

64 
su≥r
.
	`ã¨Down
();

65 
	}
}

67 @
Te°


68 
public
 
	$ã°Node
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

69 
Kì≥rEx˚±i⁄
 {

71 
LódîEÀ˘i⁄Suµ‹t
 
ñe˘i⁄Suµ‹t
 = 
	`¸óãLódîEÀ˘i⁄Suµ‹t
();

73 
ñe˘i⁄Suµ‹t
.
	`°¨t
();

74 
Thªad
.
	`¶ìp
(3000);

75 
ñe˘i⁄Suµ‹t
.
	`°›
();

76 
	}
}

78 @
Te°


79 
public
 
	$ã°Nodes3
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

80 
Kì≥rEx˚±i⁄
 {

82 
ã°Iãøti⁄s
 = 3;

83 
föÆ
 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(
ã°Iãøti⁄s
);

84 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
 = 
√w
 
	`AtomicI¡egî
();

86 
i
 = 0; i < 
ã°Iãøti⁄s
; i++) {

87 
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
);

90 
As£π
.
	`as£πEquÆs
(0, 
ÁûuªCou¡î
.
	`gë
());

92 i‡(!
œtch
.
	`awaô
(10, 
TimeUnô
.
SECONDS
)) {

93 
loggî


94 .
	`öfo
(

96 
ÁûuªCou¡î
);

98 
	}
}

100 @
Te°


101 
public
 
	$ã°Nodes9
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

102 
Kì≥rEx˚±i⁄
 {

104 
ã°Iãøti⁄s
 = 9;

105 
föÆ
 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(
ã°Iãøti⁄s
);

106 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
 = 
√w
 
	`AtomicI¡egî
();

108 
i
 = 0; i < 
ã°Iãøti⁄s
; i++) {

109 
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
);

112 
As£π
.
	`as£πEquÆs
(0, 
ÁûuªCou¡î
.
	`gë
());

114 i‡(!
œtch
.
	`awaô
(10, 
TimeUnô
.
SECONDS
)) {

115 
loggî


116 .
	`öfo
(

118 
ÁûuªCou¡î
);

120 
	}
}

122 @
Te°


123 
public
 
	$ã°Nodes20
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

124 
Kì≥rEx˚±i⁄
 {

126 
ã°Iãøti⁄s
 = 20;

127 
föÆ
 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(
ã°Iãøti⁄s
);

128 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
 = 
√w
 
	`AtomicI¡egî
();

130 
i
 = 0; i < 
ã°Iãøti⁄s
; i++) {

131 
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
);

134 
As£π
.
	`as£πEquÆs
(0, 
ÁûuªCou¡î
.
	`gë
());

136 i‡(!
œtch
.
	`awaô
(10, 
TimeUnô
.
SECONDS
)) {

137 
loggî


138 .
	`öfo
(

140 
ÁûuªCou¡î
);

142 
	}
}

144 @
Te°


145 
public
 
	$ã°Nodes100
(Ë
throws
 
IOEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
,

146 
Kì≥rEx˚±i⁄
 {

148 
ã°Iãøti⁄s
 = 100;

149 
föÆ
 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(
ã°Iãøti⁄s
);

150 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
 = 
√w
 
	`AtomicI¡egî
();

152 
i
 = 0; i < 
ã°Iãøti⁄s
; i++) {

153 
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
);

156 
As£π
.
	`as£πEquÆs
(0, 
ÁûuªCou¡î
.
	`gë
());

158 i‡(!
œtch
.
	`awaô
(20, 
TimeUnô
.
SECONDS
)) {

159 
loggî


160 .
	`öfo
(

162 
ÁûuªCou¡î
);

164 
	}
}

166 @
Te°


167 
public
 
	$ã°Of„rShufÊe
(Ë
throws
 
I¡îru±edEx˚±i⁄
 {

168 
ã°Iãøti⁄s
 = 10;

169 
föÆ
 
Cou¡DownL©ch
 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(
ã°Iãøti⁄s
);

170 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
 = 
√w
 
	`AtomicI¡egî
();

171 
Li°
<
Thªad
> 
thªads
 = 
√w
 
AºayLi°
<Thªad>(
ã°Iãøti⁄s
);

173 
i
 = 1; i <
ã°Iãøti⁄s
; i++) {

174 
thªads
.
	`add
(
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
,

175 
M©h
.
	`mö
(
i
 * 1200, 10000)));

178 i‡(!
œtch
.
	`awaô
(60, 
TimeUnô
.
SECONDS
)) {

179 
loggî


180 .
	`öfo
(

182 
ÁûuªCou¡î
);

184 
	}
}

186 @
Te°


187 
public
 
	$ã°GëLódîHo°Name
(Ë
throws
 
Kì≥rEx˚±i⁄
,

188 
I¡îru±edEx˚±i⁄
 {

190 
LódîEÀ˘i⁄Suµ‹t
 
ñe˘i⁄Suµ‹t
 = 
	`¸óãLódîEÀ˘i⁄Suµ‹t
();

192 
ñe˘i⁄Suµ‹t
.
	`°¨t
();

195 
Thªad
.
	`¶ìp
(3000);

197 
Såög
 
ÀadîHo°Name
 = 
ñe˘i⁄Suµ‹t
.
	`gëLódîHo°Name
();

199 
As£π
.
	`as£πNŸNuŒ
(
ÀadîHo°Name
);

200 
As£π
.
	`as£πEquÆs
("fooho°", 
ÀadîHo°Name
);

202 
ñe˘i⁄Suµ‹t
.
	`°›
();

203 
	}
}

205 
¥iv©e
 
LódîEÀ˘i⁄Suµ‹t
 
	$¸óãLódîEÀ˘i⁄Suµ‹t
() {

206 
LódîEÀ˘i⁄Suµ‹t
 
ñe˘i⁄Suµ‹t
 = 
√w
 
	`LódîEÀ˘i⁄Suµ‹t
();

208 
ñe˘i⁄Suµ‹t
.
	`£tZooKì≥r
(
zooKì≥r
);

209 
ñe˘i⁄Suµ‹t
.
	`£tRoŸNodeName
(
ã°RoŸNode


210 + 
Thªad
.
	`cuºítThªad
().
	`gëId
());

211 
ñe˘i⁄Suµ‹t
.
	`£tHo°Name
("foohost");

213  
ñe˘i⁄Suµ‹t
;

214 
	}
}

216 
¥iv©e
 
Thªad
 
	$runEÀ˘i⁄Suµ‹tThªad
(
föÆ
 
Cou¡DownL©ch
 
œtch
,

217 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
) {

218  
	`runEÀ˘i⁄Suµ‹tThªad
(
œtch
, 
ÁûuªCou¡î
, 3000);

219 
	}
}

221 
¥iv©e
 
Thªad
 
	$runEÀ˘i⁄Suµ‹tThªad
(
föÆ
 
Cou¡DownL©ch
 
œtch
,

222 
föÆ
 
AtomicI¡egî
 
ÁûuªCou¡î
, föÆ 
¶ìpDuøti⁄
) {

224 
föÆ
 
LódîEÀ˘i⁄Suµ‹t
 
ñe˘i⁄Suµ‹t
 = 
	`¸óãLódîEÀ˘i⁄Suµ‹t
();

226 
Thªad
 
t
 = 
√w
 
	`Thªad
() {

228 @
Ovîride


229 
public
 
	`run
() {

230 
åy
 {

231 
ñe˘i⁄Suµ‹t
.
	`°¨t
();

232 
Thªad
.
	`¶ìp
(
¶ìpDuøti⁄
);

233 
ñe˘i⁄Suµ‹t
.
	`°›
();

235 
œtch
.
	`cou¡Down
();

236 } 
	`ˇtch
 (
Ex˚±i⁄
 
e
) {

237 
loggî
.
	`w¨n
("FailedÅoÑunÜeaderÉlection dueÅo: {}",

238 
e
.
	`gëMesßge
());

239 
ÁûuªCou¡î
.
	`ö¸emítAndGë
();

244 
t
.
	`°¨t
();

246  
t
;

247 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/include/zoo_lock.h

18 #i‚de‡
ZOOKEEPER_LOCK_H_


19 
	#ZOOKEEPER_LOCK_H_


	)

21 
	~<zookì≥r.h
>

22 
	~<±hªad.h
>

24 #ifde‡
__˝lu•lus


37 (* 
zkr_lock_com∂ëi⁄
Ë(
	trc
, * 
	tcbd©a
);

46 
	szkr_lock_muãx
 {

47 
zh™dÀ_t
 *
zh
;

48 *
∑th
;

49 
ACL_ve˘‹
 *
a˛
;

50 *
id
;

51 *
cbd©a
;

52 
zkr_lock_com∂ëi⁄
 
com∂ëi⁄
;

53 
±hªad_muãx_t
 
pmuãx
;

54 
isOw√r
;

55 * 
ow√rid
;

58 
zkr_lock_muãx
 
	tzkr_lock_muãx_t
;

71 
ZOOAPI
 
zkr_lock_öô
(
zkr_lock_muãx_t
 *
muãx
, 
zh™dÀ_t
* 
zh
,

72 * 
∑th
, 
ACL_ve˘‹
 *
a˛
);

90 
ZOOAPI
 
zkr_lock_öô_cb
(
zkr_lock_muãx_t
 *
muãx
, 
zh™dÀ_t
* 
zh
,

91 * 
∑th
, 
ACL_ve˘‹
 *
a˛
,

92 
zkr_lock_com∂ëi⁄
 
com∂ëi⁄
, * 
cbd©a
);

102 
ZOOAPI
 
zkr_lock_lock
(
zkr_lock_muãx_t
 *
muãx
);

112 
ZOOAPI
 
zkr_lock_u∆ock
(
zkr_lock_muãx_t
 *
muãx
);

121 
ZOOAPI
 
zkr_lock_£tˇŒback
(
zkr_lock_muãx_t
 *
muãx
,

122 
zkr_lock_com∂ëi⁄
 
com∂ëi⁄
);

131 
ZOOAPI
 
zkr_lock_com∂ëi⁄
 
zkr_lock_gëˇŒback
(
zkr_lock_muãx_t
 *
muãx
);

139 
ZOOAPI
 
zkr_lock_de°roy
(
zkr_lock_muãx_t
* 
muãx
);

147 
ZOOAPI
 * 
zkr_lock_gë∑th
(
zkr_lock_muãx_t
 *
muãx
);

155 
ZOOAPI
 
zkr_lock_isow√r
(
zkr_lock_muãx_t
 *
muãx
);

163 
ZOOAPI
 * 
zkr_lock_gëid
(
zkr_lock_muãx_t
 *
muãx
);

165 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/src/zoo_lock.c

19 #ifde‡
DLL_EXPORT


20 
	#USE_STATIC_LIB


	)

23 #i‡
deföed
(
__CYGWIN__
)

24 
	#USE_IPV6


	)

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

30 
	~<zookì≥r_log.h
>

31 
	~<time.h
>

32 
	~<sys/time.h
>

33 
	~<sys/sockë.h
>

34 
	~<limôs.h
>

35 
	~<zoo_lock.h
>

36 
	~<°dboﬁ.h
>

37 #ifde‡
HAVE_SYS_UTSNAME_H


38 
	~<sys/ut¢ame.h
>

41 #ifde‡
HAVE_GETPWUID_R


42 
	~<pwd.h
>

45 
	#IF_DEBUG
(
x
Ëi‡(
logLevñ
==
ZOO_LOG_LEVEL_DEBUG
Ë{x;}

	)

48 
ZOOAPI
 
	$zkr_lock_öô
(
zkr_lock_muãx_t
* 
muãx
, 
zh™dÀ_t
* 
zh
,

49 * 
∑th
, 
ACL_ve˘‹
 *
a˛
) {

50 
muãx
->
zh
 = zh;

51 
muãx
->
∑th
 =Öath;

52 
muãx
->
a˛
 =ácl;

53 
muãx
->
com∂ëi⁄
 = 
NULL
;

54 
muãx
->
cbd©a
 = 
NULL
;

55 
muãx
->
id
 = 
NULL
;

56 
muãx
->
ow√rid
 = 
NULL
;

57 
muãx
->
isOw√r
 = 0;

58 
	`±hªad_muãx_öô
(&(
muãx
->
pmuãx
), 
NULL
);

60 
	}
}

62 
ZOOAPI
 
	$zkr_lock_öô_cb
(
zkr_lock_muãx_t
 *
muãx
, 
zh™dÀ_t
* 
zh
,

63 *
∑th
, 
ACL_ve˘‹
 *
a˛
,

64 
zkr_lock_com∂ëi⁄
 
com∂ëi⁄
, * 
cbd©a
) {

65 
muãx
->
zh
 = zh;

66 
muãx
->
∑th
 =Öath;

67 
muãx
->
a˛
 =ácl;

68 
muãx
->
com∂ëi⁄
 = completion;

69 
muãx
->
cbd©a
 = cbdata;

70 
muãx
->
isOw√r
 = 0;

71 
muãx
->
ow√rid
 = 
NULL
;

72 
muãx
->
id
 = 
NULL
;

73 
	`±hªad_muãx_öô
(&(
muãx
->
pmuãx
), 
NULL
);

75 
	}
}

80 
ZOOAPI
 
	$zkr_lock_u∆ock
(
zkr_lock_muãx_t
 *
muãx
) {

81 
	`±hªad_muãx_lock
(&(
muãx
->
pmuãx
));

82 
zh™dÀ_t
 *
zh
 = 
muãx
->zh;

83 i‡(
muãx
->
id
 !
NULL
) {

84 
Àn
 = 
	`°æí
(
muãx
->
∑th
Ë+ såÀn(muãx->
id
) + 2;

85 
buf
[
Àn
];

86 
	`•rötf
(
buf
, "%s/%s", 
muãx
->
∑th
, muãx->
id
);

87 
ªt
 = 0;

88 
cou¡
 = 0;

89 
time•ec
 
ts
;

90 
ts
.
tv_£c
 = 0;

91 
ts
.
tv_n£c
 = (.5)*1000000;

92 
ªt
 = 
ZCONNECTIONLOSS
;

93 
ªt
 =
ZCONNECTIONLOSS
 && (
cou¡
 < 3)) {

94 
ªt
 = 
	`zoo_dñëe
(
zh
, 
buf
, -1);

95 i‡(
ªt
 =
ZCONNECTIONLOSS
) {

96 
	`LOG_DEBUG
(("connectionloss while deletingÅheÇode"));

97 
	`«no¶ìp
(&
ts
, 0);

98 
cou¡
++;

101 i‡(
ªt
 =
ZOK
 ||Ñë =
ZNONODE
) {

102 
zkr_lock_com∂ëi⁄
 
com∂ëi⁄
 = 
muãx
->completion;

103 i‡(
com∂ëi⁄
 !
NULL
) {

104 
	`com∂ëi⁄
(1, 
muãx
->
cbd©a
);

107 
	`‰ì
(
muãx
->
id
);

108 
muãx
->
id
 = 
NULL
;

109 
	`±hªad_muãx_u∆ock
(&(
muãx
->
pmuãx
));

112 
	`LOG_WARN
(("notábleÅo connectÅo server - giving up"));

113 
	`±hªad_muãx_u∆ock
(&(
muãx
->
pmuãx
));

114  
ZCONNECTIONLOSS
;

116 
	`±hªad_muãx_u∆ock
(&(
muãx
->
pmuãx
));

117  
ZSYSTEMERROR
;

118 
	}
}

120 
	$‰ì_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
) {

121 i‡(
v
->
d©a
) {

122 
öt32_t
 
i
;

123 
i
=0; i<
v
->
cou¡
; i++) {

124 
	`‰ì
(
v
->
d©a
[
i
]);

126 
	`‰ì
(
v
->
d©a
);

127 
v
->
d©a
 = 0;

129 
	}
}

131 
	$v°rcmp
(c⁄° * 
°r1
, c⁄° * 
°r2
) {

132 c⁄° **
a
 = (c⁄° **)
°r1
;

133 c⁄° **
b
 = (c⁄° **Ë
°r2
;

134  
	`°rcmp
(
	`°ºchr
(*
a
, '-')+1, sårchr(*
b
, '-')+1);

135 
	}
}

137 
	$s‹t_chûdªn
(
Såög_ve˘‹
 *
ve˘‹
) {

138 
	`qs‹t
–
ve˘‹
->
d©a
, ve˘‹->
cou¡
, (*), &
v°rcmp
);

139 
	}
}

141 * 
	$chûd_Êo‹
(**
s‹ãd_d©a
, 
Àn
, *
ñemít
) {

142 * 
ªt
 = 
NULL
;

143 
i
 =0;

144 
i
=0; i < 
Àn
; i++) {

145 i‡(
	`°rcmp
(
s‹ãd_d©a
[
i
], 
ñemít
) < 0) {

146 
ªt
 = 
s‹ãd_d©a
[
i
];

149  
ªt
;

150 
	}
}

152 
	$lock_w©chî_‚
(
zh™dÀ_t
* 
zh
, 
ty≥
, 
°©e
,

153 c⁄° * 
∑th
, *
w©chîCtx
) {

156 
	`zkr_lock_lock
((
zkr_lock_muãx_t
*Ë
w©chîCtx
);

157 
	}
}

162 * 
	$gëName
(* 
°r
) {

163 * 
«me
 = 
	`°ºchr
(
°r
, '/');

164 i‡(
«me
 =
NULL
)

165  
NULL
;

166  
	`°rdup
(
«me
 + 1);

167 
	}
}

172 
	$ªåy_gëchûdªn
(
zh™dÀ_t
 *
zh
, * 
∑th
, 
Såög_ve˘‹
 *
ve˘‹
,

173 
time•ec
 *
ts
, 
ªåy
) {

174 
ªt
 = 
ZCONNECTIONLOSS
;

175 
cou¡
 = 0;

176 
ªt
 =
ZCONNECTIONLOSS
 && 
cou¡
 < 
ªåy
) {

177 
ªt
 = 
	`zoo_gë_chûdªn
(
zh
, 
∑th
, 0, 
ve˘‹
);

178 i‡(
ªt
 =
ZCONNECTIONLOSS
) {

179 
	`LOG_DEBUG
(("connectionÜossÅoÅhe server"));

180 
	`«no¶ìp
(
ts
, 0);

181 
cou¡
++;

184  
ªt
;

185 
	}
}

191 * 
	$looku≤ode
(
Såög_ve˘‹
 *
ve˘‹
, *
¥efix
) {

192 *
ªt
 = 
NULL
;

193 i‡(
ve˘‹
->
d©a
) {

194 
i
 = 0;

195 
i
 = 0; i < 
ve˘‹
->
cou¡
; i++) {

196 * 
chûd
 = 
ve˘‹
->
d©a
[
i
];

197 i‡(
	`°∫cmp
(
¥efix
, 
chûd
, 
	`°æí
(prefix)) == 0) {

198 
ªt
 = 
	`°rdup
(
chûd
);

203  
ªt
;

204 
	}
}

208 
	$ªåy_zoowexi°s
(
zh™dÀ_t
 *
zh
, * 
∑th
, 
w©chî_‚
 
w©chî
, * 
˘x
,

209 
Sèt
 *
°©
, 
time•ec
 *
ts
, 
ªåy
) {

210 
ªt
 = 
ZCONNECTIONLOSS
;

211 
cou¡
 = 0;

212 
ªt
 =
ZCONNECTIONLOSS
 && 
cou¡
 < 
ªåy
) {

213 
ªt
 = 
	`zoo_wexi°s
(
zh
, 
∑th
, 
w©chî
, 
˘x
, 
°©
);

214 i‡(
ªt
 =
ZCONNECTIONLOSS
) {

215 
	`LOG_DEBUG
(("connectionloss while setting watch on myÖredecessor"));

216 
	`«no¶ìp
(
ts
, 0);

217 
cou¡
++;

220  
ªt
;

221 
	}
}

230 
	$zkr_lock_›î©i⁄
(
zkr_lock_muãx_t
 *
muãx
, 
time•ec
 *
ts
) {

231 
zh™dÀ_t
 *
zh
 = 
muãx
->zh;

232 *
∑th
 = 
muãx
->path;

233 *
id
 = 
muãx
->id;

234 
Sèt
 
°©
;

235 * 
ow√r_id
 = 
NULL
;

236 
ªåy
 = 3;

238 c⁄° 
˛õ¡id_t
 *
cid
 = 
	`zoo_˛õ¡_id
(
zh
);

240 
öt64_t
 
£ssi⁄
 = 
cid
->
˛õ¡_id
;

241 
¥efix
[30];

242 
ªt
 = 0;

243 #i‡
	`deföed
(
__x86_64__
)

244 
	`¢¥ötf
(
¥efix
, 30, "x-%016lx-", 
£ssi⁄
);

246 
	`¢¥ötf
(
¥efix
, 30, "x-%016Œx-", 
£ssi⁄
);

248 
Såög_ve˘‹
 
ve˘‹°
;

249 
ve˘‹°
.
d©a
 = 
NULL
;

250 
ve˘‹°
.
cou¡
 = 0;

251 
ªt
 = 
ZCONNECTIONLOSS
;

252 
ªt
 = 
	`ªåy_gëchûdªn
(
zh
, 
∑th
, &
ve˘‹°
, 
ts
, 
ªåy
);

253 i‡(
ªt
 !
ZOK
)

254  
ªt
;

255 
Såög_ve˘‹
 *
ve˘‹
 = &
ve˘‹°
;

256 
muãx
->
id
 = 
	`looku≤ode
(
ve˘‹
, 
¥efix
);

257 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

258 i‡(
muãx
->
id
 =
NULL
) {

259 
Àn
 = 
	`°æí
(
∑th
Ë+ såÀn(
¥efix
) + 2;

260 
buf
[
Àn
];

261 
ªtbuf
[
Àn
+20];

262 
	`¢¥ötf
(
buf
, 
Àn
, "%s/%s", 
∑th
, 
¥efix
);

263 
ªt
 = 
ZCONNECTIONLOSS
;

264 
ªt
 = 
	`zoo_¸óã
(
zh
, 
buf
, 
NULL
, 0, 
muãx
->
a˛
,

265 
ZOO_EPHEMERAL
|
ZOO_SEQUENCE
, 
ªtbuf
, (
Àn
+20));

269 i‡(
ªt
 !
ZOK
) {

270 
	`LOG_WARN
(("couldÇŸ cª©êzoÿnodê%s", 
buf
));

271  
ªt
;

273 
muãx
->
id
 = 
	`gëName
(
ªtbuf
);

276 i‡(
muãx
->
id
 !
NULL
) {

277 
ªt
 = 
ZCONNECTIONLOSS
;

278 
ªt
 = 
	`ªåy_gëchûdªn
(
zh
, 
∑th
, 
ve˘‹
, 
ts
, 
ªåy
);

279 i‡(
ªt
 !
ZOK
) {

280 
	`LOG_WARN
(("couldÇot connectÅo server"));

281  
ªt
;

284 
	`s‹t_chûdªn
(
ve˘‹
);

285 
ow√r_id
 = 
ve˘‹
->
d©a
[0];

286 
muãx
->
ow√rid
 = 
	`°rdup
(
ow√r_id
);

287 
id
 = 
muãx
->id;

288 * 
Às°h™me
 = 
	`chûd_Êo‹
(
ve˘‹
->
d©a
, ve˘‹->
cou¡
, 
id
);

289 i‡(
Às°h™me
 !
NULL
) {

290 
Êí
 = 
	`°æí
(
muãx
->
∑th
Ë+ såÀn(
Às°h™me
) + 2;

291 
œ°_chûd
[
Êí
];

292 
	`•rötf
(
œ°_chûd
, "%s/%s",
muãx
->
∑th
, 
Às°h™me
);

293 
ªt
 = 
ZCONNECTIONLOSS
;

294 
ªt
 = 
	`ªåy_zoowexi°s
(
zh
, 
œ°_chûd
, &
lock_w©chî_‚
, 
muãx
,

295 &
°©
, 
ts
, 
ªåy
);

300 i‡(
ªt
 !
ZOK
) {

301 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

302 
	`LOG_WARN
(("unableÅo watch myÖredecessor"));

303 
ªt
 = 
	`zkr_lock_u∆ock
(
muãx
);

304 
ªt
 == 0) {

307 
ªt
 = 
	`zkr_lock_u∆ock
(
muãx
);

309  
ªt
;

312 
muãx
->
isOw√r
 = 0;

317 i‡(
	`°rcmp
(
muãx
->
id
, 
ow√r_id
) == 0) {

318 
	`LOG_DEBUG
(("gŸÅhêzoÿlock ow√∏- %s", 
muãx
->
id
));

319 
muãx
->
isOw√r
 = 1;

320 i‡(
muãx
->
com∂ëi⁄
 !
NULL
) {

321 
muãx
->
	`com∂ëi⁄
(0, muãx->
cbd©a
);

323  
ZOK
;

326 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

327  
ZOK
;

329 } 
muãx
->
id
 =
NULL
);

330  
ZOK
;

331 
	}
}

333 
ZOOAPI
 
	$zkr_lock_lock
(
zkr_lock_muãx_t
 *
muãx
) {

334 
	`±hªad_muãx_lock
(&(
muãx
->
pmuãx
));

335 
zh™dÀ_t
 *
zh
 = 
muãx
->zh;

336 *
∑th
 = 
muãx
->path;

337 
Sèt
 
°©
;

338 
exi°s
 = 
	`zoo_exi°s
(
zh
, 
∑th
, 0, &
°©
);

339 
cou¡
 = 0;

340 
time•ec
 
ts
;

341 
ts
.
tv_£c
 = 0;

342 
ts
.
tv_n£c
 = (.5)*1000000;

345 (
exi°s
 =
ZCONNECTIONLOSS
 ||Éxi°†=
ZNONODE
Ë&& (
cou¡
 <4)) {

346 
cou¡
++;

348 i‡(
exi°s
 =
ZCONNECTIONLOSS
)

349 
exi°s
 = 
	`zoo_exi°s
(
zh
, 
∑th
, 0, &
°©
);

350 i‡(
exi°s
 =
ZNONODE
)

351 
exi°s
 = 
	`zoo_¸óã
(
zh
, 
∑th
, 
NULL
, 0, 
muãx
->
a˛
, 0, NULL, 0);

352 
	`«no¶ìp
(&
ts
, 0);

357 
check_ªåy
 = 
ZCONNECTIONLOSS
;

358 
cou¡
 = 0;

359 
check_ªåy
 !
ZOK
 && 
cou¡
 <4) {

360 
check_ªåy
 = 
	`zkr_lock_›î©i⁄
(
muãx
, &
ts
);

361 i‡(
check_ªåy
 !
ZOK
) {

362 
	`«no¶ìp
(&
ts
, 0);

363 
cou¡
++;

366 
	`±hªad_muãx_u∆ock
(&(
muãx
->
pmuãx
));

367  
	`zkr_lock_isow√r
(
muãx
);

368 
	}
}

371 
ZOOAPI
 * 
	$zkr_lock_gë∑th
(
zkr_lock_muãx_t
 *
muãx
) {

372  
muãx
->
∑th
;

373 
	}
}

375 
ZOOAPI
 
	$zkr_lock_isow√r
(
zkr_lock_muãx_t
 *
muãx
) {

376  (
muãx
->
id
 !
NULL
 && muãx->
ow√rid
 != NULL

377 && (
	`°rcmp
(
muãx
->
id
, muãx->
ow√rid
) == 0));

378 
	}
}

380 
ZOOAPI
 * 
	$zkr_lock_gëid
(
zkr_lock_muãx_t
 *
muãx
) {

381  
muãx
->
ow√rid
;

382 
	}
}

384 
ZOOAPI
 
	$zkr_lock_de°roy
(
zkr_lock_muãx_t
* 
muãx
) {

385 i‡(
muãx
->
id
)

386 
	`‰ì
(
muãx
->
id
);

387 
muãx
->
∑th
 = 
NULL
;

388 
muãx
->
a˛
 = 
NULL
;

389 
muãx
->
com∂ëi⁄
 = 
NULL
;

390 
	`±hªad_muãx_de°roy
(&(
muãx
->
pmuãx
));

391 
muãx
->
isOw√r
 = 0;

392 i‡(
muãx
->
ow√rid
)

393 
	`‰ì
(
muãx
->
ow√rid
);

395 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/tests/Util.h

19 #i‚de‡
UTIL_H_


20 
	#UTIL_H_


	)

22 
	~<m≠
>

23 
	~<ve˘‹
>

24 
	~<°rög
>

27 
	#COUNTOF
(
¨øy
Ë◊ºay)/◊ºay[0])

	)

29 
	#DECLARE_WRAPPER
(
ªt
,
sym
,
sig
) \

30 "C" 
ªt
 
__ªÆ_
##
sym
 
sig
; \

31 "C" 
ªt
 
__wøp_
##
sym
 
sig


	)

33 
	#CALL_REAL
(
sym
,
∑øms
) \

34 
__ªÆ_
##
sym
 
∑øms


	)

37 
	#TEST_TRACE
(
x
) \

38 
	`log_mesßge
(3,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

40 c⁄° 
°d
::
°rög
 
EMPTY_STRING
;

45 
	gãm∂©e
 <
˛ass
 
	gT
>

46 
	sTy≥Op
 {

47 
T
 
	tB¨eT
;

48 
T
 
	tArgT
;

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 
	gTy≥Op
<
	gT
&>{

54 
	gT
& 
	tArgT
;

55 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

59 
	gãm∂©e
 <
˛ass
 
	gT
>

60 
	gTy≥Op
<
	gT
*>{

61 
T
* 
	tArgT
;

62 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

68 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

69 
putVÆue
(
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
, c⁄° V& 
v
){

70 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

71 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

72 if(
	gô
==
m≠
.
íd
())

73 
m≠
.
ö£π
(
ty≥«me
 
M≠
::
vÆue_ty≥
(
k
,
v
));

75 
	gm≠
[
k
]=
v
;

78 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

79 
boﬁ
 
gëVÆue
(c⁄° 
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
,V& 
v
){

80 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

81 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

82 if(
	gô
==
m≠
.
íd
())

83  
Ál£
;

84 
	gv
=
ô
->
£c⁄d
;

85  
	gåue
;

92 
mûli¶ìp
(
ms
);

95 
	gãm∂©e
<
˛ass
 
	gPªdiˇã
>

96 
	$ísuªC⁄dôi⁄
(c⁄° 
Pªdiˇã
& 
p
,
timeout
){

97 
ñ≠£d
=0;

98 !
	`p
(Ë&& 
ñ≠£d
<
timeout
){

99 
	`mûli¶ìp
(2);

100 
ñ≠£d
+=2;

102  
ñ≠£d
;

103 
	}
};

107 ˛as†
	cTe°C⁄fig
{

108 
	m°d
::
	tve˘‹
<
	t°d
::
	t°rög
> 
	tCmdLöeO±Li°
;

109 
	mpublic
:

110 
CmdLöeO±Li°
::
	tc⁄°_ôî©‹
 const_iterator;

111 
	$Te°C⁄fig
(){}

112 ~
	$Te°C⁄fig
(){
	}
}

113 
	$addC⁄figFromCmdLöe
(
¨gc
, * 
¨gv
[]){

114 if(
¨gc
>=2)

115 
ã°Name_
=
¨gv
[1];

116 
i
=2; i<
¨gc
;++i)

117 
cmdO±s_
.
	`push_back
(
¨gv
[
i
]);

118 
	}
}

119 
c⁄°_ôî©‹
 
	$gëExåaO±Begö
(Ëc⁄° { 
cmdO±s_
.
	`begö
();
	}
}

120 
c⁄°_ôî©‹
 
	$gëExåaO±End
(Ëc⁄° { 
cmdO±s_
.
	`íd
();
	}
}

121 
size_t
 
	$gëExåaO±Cou¡
() const {

122  
cmdO±s_
.
	`size
();

123 
	}
}

124 c⁄° 
	g°d
::
°rög
& 
	$gëTe°Name
() const {

125  
ã°Name_
=="Æl"?
EMPTY_STRING
:testName_;

126 
	}
}

127 
	g¥iv©e
:

128 
CmdLöeO±Li°
 
cmdO±s_
;

129 
	g°d
::
°rög
 
ã°Name_
;

132 
Te°C⁄fig
 
globÆTe°C⁄fig
;

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/LockListener.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

26 
public
 
öãrÁ˚
 
	gLockLi°íî
 {

31 
public
 
lockAcquúed
();

37 
public
 
lockRñó£d
();

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ProtocolSupport.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
.
	gZooKì≥rO≥øti⁄
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	g©omic
.
	gAtomicBoﬁón
;

40 ˛as†
	cPrŸocﬁSuµ‹t
 {

41 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
PrŸocﬁSuµ‹t
.
˛ass
);

43 
¥Ÿe˘ed
 
föÆ
 
ZooKì≥r
 
	mzookì≥r
;

44 
¥iv©e
 
AtomicBoﬁón
 
	m˛o£d
 = 
√w
 AtomicBoﬁón(
Ál£
);

45 
¥iv©e
 
	mªåyDñay
 = 500L;

46 
¥iv©e
 
	mªåyCou¡
 = 10;

47 
¥iv©e
 
	mLi°
<
	mACL
> 
	ma˛
 = 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
;

49 
public
 
	$PrŸocﬁSuµ‹t
(
ZooKì≥r
 
zookì≥r
) {

50 
this
.
zookì≥r
 = zookeeper;

57 
public
 
	$˛o£
() {

58 i‡(
˛o£d
.
	`com∑ªAndSë
(
Ál£
, 
åue
)) {

59 
	`doClo£
();

61 
	}
}

67 
public
 
ZooKì≥r
 
	$gëZookì≥r
() {

68  
zookì≥r
;

69 
	}
}

75 
public
 
	gLi°
<
	gACL
> 
	$gëA˛
() {

76  
a˛
;

77 
	}
}

83 
public
 
£tA˛
(
Li°
<
ACL
> 
a˛
) {

84 
	gthis
.
	ga˛
 = 
a˛
;

91 
public
 
	$gëRëryDñay
() {

92  
ªåyDñay
;

93 
	}
}

99 
public
 
	$£tRëryDñay
(
ªåyDñay
) {

100 
this
.
ªåyDñay
 =ÑetryDelay;

101 
	}
}

107 
¥Ÿe˘ed
 
	$doClo£
() {

108 
	}
}

116 
¥Ÿe˘ed
 
Obje˘
 
	$ªåyO≥øti⁄
(
ZooKì≥rO≥øti⁄
 
›î©i⁄
)

117 
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

118 
Kì≥rEx˚±i⁄
 
ex˚±i⁄
 = 
nuŒ
;

119 
i
 = 0; i < 
ªåyCou¡
; i++) {

120 
åy
 {

121  
›î©i⁄
.
	`execuã
();

122 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
Sessi⁄ExpúedEx˚±i⁄
 
e
) {

123 
LOG
.
	`w¨n
("Sessi⁄Éxpúed f‹: " + 
zookì≥r
 + " sÿªc⁄√˘ög duêto: " + 
e
,É);

124 
throw
 
e
;

125 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
C⁄√˘i⁄LossEx˚±i⁄
 
e
) {

126 i‡(
ex˚±i⁄
 =
nuŒ
) {

127 
ex˚±i⁄
 = 
e
;

129 
LOG
.
	`debug
("Aâem± " + 
i
 + " failed with connectionÜoss so " +

130 "©ãm±ögÅÿªc⁄√˘: " + 
e
,É);

131 
	`ªåyDñay
(
i
);

134 
throw
 
ex˚±i⁄
;

135 
	}
}

142 
¥Ÿe˘ed
 
	$ísuªP©hExi°s
(
Såög
 
∑th
) {

143 
	`ísuªExi°s
(
∑th
, 
nuŒ
, 
a˛
, 
Cª©eMode
.
PERSISTENT
);

144 
	}
}

152 
¥Ÿe˘ed
 
ísuªExi°s
(
föÆ
 
Såög
 
∑th
, föÆ 
byã
[] 
d©a
,

153 
föÆ
 
Li°
<
ACL
> 
a˛
, föÆ 
Cª©eMode
 
Êags
) {

154 
	gåy
 {

155 
ªåyO≥øti⁄
(
√w
 
ZooKì≥rO≥øti⁄
() {

156 
public
 
boﬁón
 
execuã
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

157 
Sèt
 
°©
 = 
zookì≥r
.
exi°s
(
∑th
, 
Ál£
);

158 i‡(
°©
 !
nuŒ
) {

159  
åue
;

161 
zookì≥r
.
¸óã
(
∑th
, 
d©a
, 
a˛
, 
Êags
);

162  
åue
;

165 } 
ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

166 
	gLOG
.
w¨n
("Caught: " + 
e
,É);

167 } 
ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

168 
	gLOG
.
w¨n
("Caught: " + 
e
,É);

176 
¥Ÿe˘ed
 
boﬁón
 
	$isClo£d
() {

177  
˛o£d
.
	`gë
();

178 
	}
}

184 
¥Ÿe˘ed
 
	$ªåyDñay
(
©ãm±Cou¡
) {

185 i‡(
©ãm±Cou¡
 > 0) {

186 
åy
 {

187 
Thªad
.
	`¶ìp
(
©ãm±Cou¡
 * 
ªåyDñay
);

188 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

189 
LOG
.
	`debug
("FaûedÅÿ¶ìp: " + 
e
,É);

192 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/WriteLock.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

25 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
.
	gEPHEMERAL_SEQUENTIAL
;

26 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

27 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

30 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

31 
imp‹t
 
	gjava
.
	gutû
.
	gS‹ãdSë
;

32 
imp‹t
 
	gjava
.
	gutû
.
	gTªeSë
;

43 
public
 cœs†
	cWrôeLock
 
exãnds
 
	mPrŸocﬁSuµ‹t
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
WrôeLock
.
˛ass
);

46 
¥iv©e
 
föÆ
 
Såög
 
	mdú
;

47 
¥iv©e
 
Såög
 
	mid
;

48 
¥iv©e
 
ZNodeName
 
	midName
;

49 
¥iv©e
 
Såög
 
	mow√rId
;

50 
¥iv©e
 
Såög
 
	mœ°ChûdId
;

51 
¥iv©e
 
	mbyã
[] 
	md©a
 = {0x12, 0x34};

52 
¥iv©e
 
LockLi°íî
 
	gˇŒback
;

53 
¥iv©e
 
LockZooKì≥rO≥øti⁄
 
	gz›
;

62 
public
 
WrôeLock
(
ZooKì≥r
 
zookì≥r
, 
Såög
 
dú
, 
Li°
<
ACL
> 
a˛
) {

63 
su≥r
(
zookì≥r
);

64 
	gthis
.
	gdú
 = 
dú
;

65 i‡(
	ga˛
 !
nuŒ
) {

66 
£tA˛
(
a˛
);

68 
	gthis
.
	gz›
 = 
√w
 
LockZooKì≥rO≥øti⁄
();

78 
public
 
WrôeLock
(
ZooKì≥r
 
zookì≥r
, 
Såög
 
dú
, 
Li°
<
ACL
> 
a˛
,

79 
LockLi°íî
 
ˇŒback
) {

80 
this
(
zookì≥r
, 
dú
, 
a˛
);

81 
	gthis
.
	gˇŒback
 = 
ˇŒback
;

88 
public
 
LockLi°íî
 
	$gëLockLi°íî
() {

89  
this
.
ˇŒback
;

90 
	}
}

96 
public
 
	$£tLockLi°íî
(
LockLi°íî
 
ˇŒback
) {

97 
this
.
ˇŒback
 = callback;

98 
	}
}

108 
public
 
synchr⁄ized
 
	$u∆ock
(Ë
throws
 
Ru¡imeEx˚±i⁄
 {

110 i‡(!
	`isClo£d
(Ë&& 
id
 !
nuŒ
) {

114 
åy
 {

116 
ZooKì≥rO≥øti⁄
 
z›dñ
 = 
√w
 
	`ZooKì≥rO≥øti⁄
() {

117 
public
 
boﬁón
 
	`execuã
(Ë
throws
 
Kì≥rEx˚±i⁄
,

118 
I¡îru±edEx˚±i⁄
 {

119 
zookì≥r
.
	`dñëe
(
id
, -1);

120  
Boﬁón
.
TRUE
;

123 
z›dñ
.
	`execuã
();

124 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

125 
LOG
.
	`w¨n
("Caught: " + 
e
,É);

127 
Thªad
.
	`cuºítThªad
().
	`öãºu±
();

128 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
) {

130 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

131 
LOG
.
	`w¨n
("Caught: " + 
e
,É);

132 
	`throw
 (
Ru¡imeEx˚±i⁄
Ë
√w
 
	`Ru¡imeEx˚±i⁄
(
e
.
	`gëMesßge
()).

133 
	`öôCau£
(
e
);

135 
föÆly
 {

136 i‡(
ˇŒback
 !
nuŒ
) {

137 
ˇŒback
.
	`lockRñó£d
();

139 
id
 = 
nuŒ
;

142 
	}
}

149 
¥iv©e
 cœs†
	cLockW©chî
 
im∂emíts
 
	gW©chî
 {

150 
public
 
¥o˚ss
(
W©chedEvít
 
evít
) {

152 
	gLOG
.
debug
("W©chî fúed o¿∑th: " + 
evít
.
gëP©h
() + " state: " +

153 
evít
.
gëSèã
(Ë+ "Åy≥ " +Évít.
gëTy≥
());

154 
	gåy
 {

155 
lock
();

156 } 
ˇtch
 (
Ex˚±i⁄
 
e
) {

157 
	gLOG
.
w¨n
("FaûedÅÿacquúêlock: " + 
e
,É);

166 
¥iv©e
 cœs†
	cLockZooKì≥rO≥øti⁄
 
im∂emíts
 
	gZooKì≥rO≥øti⁄
 {

176 
¥iv©e
 
födPªfixInChûdªn
(
Såög
 
¥efix
, 
ZooKì≥r
 
zookì≥r
, Såög 
dú
)

177 
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

178 
	gLi°
<
	gSåög
> 
	g«mes
 = 
zookì≥r
.
gëChûdªn
(
dú
, 
Ál£
);

179 
Såög
 
	g«me
 : 
«mes
) {

180 i‡(
«me
.
°¨tsWôh
(
¥efix
)) {

181 
id
 = 
«me
;

182 i‡(
	gLOG
.
isDebugE«bÀd
()) {

183 
	gLOG
.
debug
("Found id cª©edÜa°Åime: " + 
id
);

188 i‡(
	gid
 =
nuŒ
) {

189 
id
 = 
zookì≥r
.
¸óã
(
dú
 + "/" + 
¥efix
, 
d©a
,

190 
gëA˛
(), 
EPHEMERAL_SEQUENTIAL
);

192 i‡(
	gLOG
.
isDebugE«bÀd
()) {

193 
	gLOG
.
debug
("Cª©ed id: " + 
id
);

204 
public
 
boﬁón
 
execuã
(Ë
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
 {

206 i‡(
	gid
 =
nuŒ
) {

207 
£ssi⁄Id
 = 
zookì≥r
.
gëSessi⁄Id
();

208 
Såög
 
	g¥efix
 = "x-" + 
£ssi⁄Id
 + "-";

211 
födPªfixInChûdªn
(
¥efix
, 
zookì≥r
, 
dú
);

212 
	gidName
 = 
√w
 
ZNodeName
(
id
);

214 i‡(
	gid
 !
nuŒ
) {

215 
Li°
<
Såög
> 
«mes
 = 
zookì≥r
.
gëChûdªn
(
dú
, 
Ál£
);

216 i‡(
	g«mes
.
isEm±y
()) {

217 
	gLOG
.
w¨n
("Nÿchûdª¿ö: " + 
dú
 + " when we've just " +

220 
	gid
 = 
nuŒ
;

223 
	gS‹ãdSë
<
	gZNodeName
> 
	gs‹ãdNames
 = 
√w
 
TªeSë
<
ZNodeName
>();

224 
Såög
 
	g«me
 : 
«mes
) {

225 
s‹ãdNames
.
add
(
√w
 
ZNodeName
(
dú
 + "/" + 
«me
));

227 
	gow√rId
 = 
s‹ãdNames
.
fú°
().
gëName
();

228 
	gS‹ãdSë
<
	gZNodeName
> 
	gÀssTh™Me
 = 
s‹ãdNames
.
hódSë
(
idName
);

229 i‡(!
	gÀssTh™Me
.
isEm±y
()) {

230 
ZNodeName
 
	gœ°ChûdName
 = 
ÀssTh™Me
.
œ°
();

231 
	gœ°ChûdId
 = 
œ°ChûdName
.
gëName
();

232 i‡(
	gLOG
.
isDebugE«bÀd
()) {

233 
	gLOG
.
debug
("w©chögÜes†th™ mênode: " + 
œ°ChûdId
);

235 
Sèt
 
	g°©
 = 
zookì≥r
.
exi°s
(
œ°ChûdId
, 
√w
 
LockW©chî
());

236 i‡(
	g°©
 !
nuŒ
) {

237  
Boﬁón
.
FALSE
;

239 
	gLOG
.
w¨n
("CouldÇot findÅhe" +

240 " sèt†f‹Ües†th™ me: " + 
œ°ChûdName
.
gëName
());

243 i‡(
isOw√r
()) {

244 i‡(
	gˇŒback
 !
nuŒ
) {

245 
ˇŒback
.
lockAcquúed
();

247  
	gBoﬁón
.
	gTRUE
;

253 
	gid
 =
nuŒ
);

254  
	gBoﬁón
.
	gFALSE
;

263 
public
 
synchr⁄ized
 
boﬁón
 
	$lock
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

264 i‡(
	`isClo£d
()) {

265  
Ál£
;

267 
	`ísuªP©hExi°s
(
dú
);

269  (
Boﬁón
Ë
	`ªåyO≥øti⁄
(
z›
);

270 
	}
}

276 
public
 
Såög
 
	$gëDú
() {

277  
dú
;

278 
	}
}

284 
public
 
boﬁón
 
	$isOw√r
() {

285  
id
 !
nuŒ
 && 
ow√rId
 !nuŒ && id.
	`equÆs
(ownerId);

286 
	}
}

292 
public
 
Såög
 
	$gëId
() {

293  
this
.
id
;

294 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ZNodeName.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

21 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
˛ass
 
ZNodeName
 
im∂emíts
 
	gCom∑øbÀ
<
	gZNodeName
> {

29 
¥iv©e
 
föÆ
 
Såög
 
	g«me
;

30 
¥iv©e
 
Såög
 
	g¥efix
;

31 
¥iv©e
 
	g£quí˚
 = -1;

32 
¥iv©e
 
föÆ
 
Loggî
 
	gLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
ZNodeName
.
˛ass
);

34 
public
 
ZNodeName
(
Såög
 
«me
) {

35 i‡(
	g«me
 =
nuŒ
) {

36 
throw
 
√w
 
NuŒPoöãrEx˚±i⁄
("id cannot beÇull");

38 
	gthis
.
	g«me
 = 
«me
;

39 
	gthis
.
	g¥efix
 = 
«me
;

40 
	gidx
 = 
«me
.
œ°IndexOf
('-');

41 i‡(
	gidx
 >= 0) {

42 
this
.
¥efix
 = 
«me
.
sub°rög
(0, 
idx
);

43 
	gåy
 {

44 
	gthis
.
	g£quí˚
 = 
I¡egî
.
∑r£I¡
(
«me
.
sub°rög
(
idx
 + 1));

47 } 
ˇtch
 (
NumbîF‹m©Ex˚±i⁄
 
e
) {

48 
	gLOG
.
öfo
("Numbî f‹m©Éx˚±i⁄ f‹ " + 
idx
, 
e
);

49 } 
ˇtch
 (
AºayIndexOutOfBoundsEx˚±i⁄
 
e
) {

50 
	gLOG
.
öfo
("Aºay ouào‡bound†f‹ " + 
idx
, 
e
);

55 @
Ovîride


56 
public
 
Såög
 
toSåög
() {

57  
	g«me
.
toSåög
();

60 @
Ovîride


61 
public
 
boﬁón
 
equÆs
(
Obje˘
 
o
) {

62 i‡(
	gthis
 =
o
Ë 
åue
;

63 i‡(
	go
 =
nuŒ
 || 
gëCœss
(Ë!
o
.gëCœss()Ë 
Ál£
;

65 
ZNodeName
 
	g£quí˚
 = (ZNodeNameË
o
;

67 i‡(!
	g«me
.
equÆs
(
£quí˚
.
«me
)Ë 
	gÁl£
;

69  
	gåue
;

72 @
Ovîride


73 
public
 
hashCode
() {

74  
	g«me
.
hashCode
() + 37;

77 
public
 
com∑ªTo
(
ZNodeName
 
th©
) {

78 
	g™swî
 = 
this
.
¥efix
.
com∑ªTo
(
th©
.prefix);

79 i‡(
	g™swî
 == 0) {

80 
s1
 = 
this
.
£quí˚
;

81 
	gs2
 = 
th©
.
£quí˚
;

82 i‡(
	gs1
 =-1 && 
s2
 == -1) {

83  
this
.
«me
.
com∑ªTo
(
th©
.name);

85 
	g™swî
 = 
s1
 =-1 ? 1 : 
s2
 == -1 ? -1 : s1 - s2;

87  
	g™swî
;

93 
public
 
Såög
 
gëName
() {

94  
	g«me
;

100 
public
 
gëZNodeName
() {

101  
	g£quí˚
;

107 
public
 
Såög
 
gëPªfix
() {

108  
	g¥efix
;

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ZooKeeperOperation.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

27 
public
 
öãrÁ˚
 
	gZooKì≥rO≥øti⁄
 {

37 
public
 
boﬁón
 
execuã
(Ë
throws
 
	gKì≥rEx˚±i⁄
, 
	gI¡îru±edEx˚±i⁄
;

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/WriteLockTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

21 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gTimeUnô
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

28 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

33 
public
 cœs†
	cWrôeLockTe°
 
exãnds
 
	mClõ¡Ba£
 {

34 
¥Ÿe˘ed
 
	m£ssi⁄Timeout
 = 10 * 1000;

35 
¥Ÿe˘ed
 
Såög
 
	mdú
 = "/" + 
gëCœss
().
gëName
();

36 
¥Ÿe˘ed
 
	mWrôeLock
[] 
	mnodes
;

37 
¥Ÿe˘ed
 
Cou¡DownL©ch
 
	mœtch
 = 
√w
 CountDownLatch(1);

38 
¥iv©e
 
boﬁón
 
	mª°¨tSîvî
 = 
åue
;

39 
¥iv©e
 
boﬁón
 
	mw‹kAroundClosögLa°ZNodeFaûs
 = 
åue
;

40 
¥iv©e
 
boﬁón
 
	mkûlLódî
 = 
åue
;

42 @
Te°


43 
public
 
	$ã°Run
(Ë
throws
 
Ex˚±i⁄
 {

44 
	`runTe°
(3);

47 ˛as†
	cLockCÆlback
 
im∂emíts
 
LockLi°íî
 {

48 
public
 
	`lockAcquúed
() {

49 
œtch
.
	`cou¡Down
();

52 
public
 
	`lockRñó£d
() {

56 
	}
}

57 
¥Ÿe˘ed
 
	$runTe°
(
cou¡
Ë
throws
 
Ex˚±i⁄
 {

58 
nodes
 = 
√w
 
WrôeLock
[
cou¡
];

59 
i
 = 0; i < 
cou¡
; i++) {

60 
ZooKì≥r
 
kì≥r
 = 
	`¸óãClõ¡
();

61 
WrôeLock
 
Àadî
 = 
√w
 
	`WrôeLock
(
kì≥r
, 
dú
, 
nuŒ
);

62 
Àadî
.
	`£tLockLi°íî
(
√w
 
	`LockCÆlback
());

63 
nodes
[
i
] = 
Àadî
;

65 
Àadî
.
	`lock
();

70 
œtch
.
	`awaô
(30, 
TimeUnô
.
SECONDS
);

72 
WrôeLock
 
fú°
 = 
nodes
[0];

73 
	`dumpNodes
(
cou¡
);

76 
As£π
.
	`as£πTrue
("Thêfú° znodêshould bêthêÀadî " + 
fú°
.
	`gëId
(), fú°.
	`isOw√r
());

78 
i
 = 1; i < 
cou¡
; i++) {

79 
WrôeLock
 
node
 = 
nodes
[
i
];

80 
As£π
.
	`as£πFÆ£
("NodêshouldÇŸ bêthêÀadî " + 
node
.
	`gëId
(),Çode.
	`isOw√r
());

83 i‡(
cou¡
 > 1) {

84 i‡(
kûlLódî
) {

85 
Sy°em
.
out
.
	`¥öén
("Now killingÅheÜeader");

87 
œtch
 = 
√w
 
	`Cou¡DownL©ch
(1);

88 
fú°
.
	`u∆ock
();

89 
œtch
.
	`awaô
(30, 
TimeUnô
.
SECONDS
);

91 
WrôeLock
 
£c⁄d
 = 
nodes
[1];

92 
	`dumpNodes
(
cou¡
);

94 
As£π
.
	`as£πTrue
("Thê£c⁄d znodêshould bêthêÀadî " + 
£c⁄d
.
	`gëId
(), sec⁄d.
	`isOw√r
());

96 
i
 = 2; i < 
cou¡
; i++) {

97 
WrôeLock
 
node
 = 
nodes
[
i
];

98 
As£π
.
	`as£πFÆ£
("NodêshouldÇŸ bêthêÀadî " + 
node
.
	`gëId
(),Çode.
	`isOw√r
());

103 i‡(
ª°¨tSîvî
) {

105 
Sy°em
.
out
.
	`¥öén
("Now stoppingÅhe server");

106 
	`°›Sîvî
();

107 
Thªad
.
	`¶ìp
(10000);

110 
	`dumpNodes
(
cou¡
);

112 
Sy°em
.
out
.
	`¥öén
("StartingÅhe server");

113 
	`°¨tSîvî
();

114 
Thªad
.
	`¶ìp
(10000);

116 
i
 = 0; i < 
cou¡
 - 1; i++) {

117 
Sy°em
.
out
.
	`¥öén
("CÆlögácquúêf‹Çode: " + 
i
);

118 
nodes
[
i
].
	`lock
();

120 
	`dumpNodes
(
cou¡
);

121 
Sy°em
.
out
.
	`¥öén
("Now closing down...");

124 
	}
}

126 
¥Ÿe˘ed
 
	$dumpNodes
(
cou¡
) {

127 
i
 = 0; i < 
cou¡
; i++) {

128 
WrôeLock
 
node
 = 
nodes
[
i
];

129 
Sy°em
.
out
.
	`¥öén
("node: " + 
i
 + " id: " +

130 
node
.
	`gëId
(Ë+ " i†Àadî: " +Çode.
	`isOw√r
());

132 
	}
}

134 @
A·î


135 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

136 i‡(
nodes
 !
nuŒ
) {

137 
i
 = 0; i < 
nodes
.
Àngth
; i++) {

138 
WrôeLock
 
node
 = 
nodes
[
i
];

139 i‡(
node
 !
nuŒ
) {

140 
Sy°em
.
out
.
	`¥öén
("ClosögÇode: " + 
i
);

141 
node
.
	`˛o£
();

142 i‡(
w‹kAroundClosögLa°ZNodeFaûs
 && 
i
 =
nodes
.
Àngth
 - 1) {

143 
Sy°em
.
out
.
	`¥öén
("NŸ closög zookì≥r: " + 
i
 + " dueÅo bug!");

145 
Sy°em
.
out
.
	`¥öén
("Closög zookì≥r: " + 
i
);

146 
node
.
	`gëZookì≥r
().
	`˛o£
();

147 
Sy°em
.
out
.
	`¥öén
("Clo£d zookì≥r: " + 
i
);

152 
Sy°em
.
out
.
	`¥öén
("NowÜets stopÅhe server");

153 
su≥r
.
	`ã¨Down
();

155 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/ZNodeNameTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	glock
;

20 
imp‹t
 
	gjunô
.
	g‰amew‹k
.
	gTe°Ca£
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gS‹ãdSë
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gTªeSë
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

30 
public
 cœs†
	cZNodeNameTe°
 
exãnds
 
	mTe°Ca£
 {

31 @
Te°


32 
public
 
	$ã°OrdîWôhSamePªfix
(Ë
throws
 
Ex˚±i⁄
 {

33 
Såög
[] 
«mes
 = { "x-3", "x-5", "x-11", "x-1" };

34 
Såög
[] 
ex≥˘ed
 = { "x-1", "x-3", "x-5", "x-11" };

35 
	`as£πOrdîedNodeNames
(
«mes
, 
ex≥˘ed
);

37 @
Te°


38 
public
 
	$ã°OrdîWôhDif„ª¡Pªfixes
(Ë
throws
 
Ex˚±i⁄
 {

39 
Såög
[] 
«mes
 = { "r-3", "r-2", "r-1", "w-2", "w-1" };

40 
Såög
[] 
ex≥˘ed
 = { "r-1", "r-2", "r-3", "w-1", "w-2" };

41 
	`as£πOrdîedNodeNames
(
«mes
, 
ex≥˘ed
);

42 
	}
}

44 
¥Ÿe˘ed
 
	$as£πOrdîedNodeNames
(
Såög
[] 
«mes
, Såög[] 
ex≥˘ed
) {

45 
size
 = 
«mes
.
Àngth
;

46 
	`as£πEquÆs
("Thêtwÿ¨øy†should bêthêßmêsize!", 
«mes
.
Àngth
, 
ex≥˘ed
.length);

47 
S‹ãdSë
<
ZNodeName
> 
nodeNames
 = 
√w
 
TªeSë
<ZNodeName>();

48 
Såög
 
«me
 : 
«mes
) {

49 
nodeNames
.
	`add
(
√w
 
	`ZNodeName
(
«me
));

52 
ödex
 = 0;

53 
ZNodeName
 
nodeName
 : 
nodeNames
) {

54 
Såög
 
«me
 = 
nodeName
.
	`gëName
();

55 
	`as£πEquÆs
("Nodê" + 
ödex
, 
ex≥˘ed
[ödex++], 
«me
);

57 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/include/zoo_queue.h

19 #i‚de‡
ZOOKEEPER_QUEUE_H_


20 
	#ZOOKEEPER_QUEUE_H_


	)

22 
	~<zookì≥r.h
>

23 
	~<±hªad.h
>

25 #ifde‡
__˝lu•lus


36 
	szkr_queue
 {

37 
zh™dÀ_t
 *
zh
;

38 *
∑th
;

39 
ACL_ve˘‹
 *
a˛
;

40 
±hªad_muãx_t
 
pmuãx
;

41 *
node_«me
;

42 
node_«me_Àngth
;

43 *
ˇched_¸óã_∑th
;

46 
zkr_queue
 
	tzkr_queue_t
;

59 
ZOOAPI
 
zkr_queue_öô
(
zkr_queue_t
 *
queue
, 
zh™dÀ_t
* 
zh
, * 
∑th
, 
ACL_ve˘‹
 *
a˛
);

70 
ZOOAPI
 
zkr_queue_of„r
(
zkr_queue_t
 *
queue
, c⁄° *
d©a
, 
buf„r_Àn
);

81 
ZOOAPI
 
zkr_queue_ñemít
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
);

92 
ZOOAPI
 
zkr_queue_ªmove
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
);

103 
ZOOAPI
 
zkr_queue_èke
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
);

112 
zkr_queue_de°roy
(
zkr_queue_t
 *
queue
);

115 #ifde‡
__˝lu•lus


	@/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/src/zoo_queue.c

19 #ifde‡
DLL_EXPORT


20 
	#USE_STATIC_LIB


	)

23 #i‡
deföed
(
__CYGWIN__
)

24 
	#USE_IPV6


	)

27 
	~<°dlib.h
>

28 
	~<°dio.h
>

29 
	~<°rög.h
>

30 
	~<zookì≥r_log.h
>

31 
	~<time.h
>

32 
	~<sys/time.h
>

33 
	~<sys/sockë.h
>

34 
	~<limôs.h
>

35 
	~<zoo_queue.h
>

36 
	~<°dboﬁ.h
>

37 #ifde‡
HAVE_SYS_UTSNAME_H


38 
	~<sys/ut¢ame.h
>

41 #ifde‡
HAVE_GETPWUID_R


42 
	~<pwd.h
>

45 
	#IF_DEBUG
(
x
Ëi‡(
logLevñ
==
ZOO_LOG_LEVEL_DEBUG
Ë{x;}

	)

48 
	$‰ì_Såög_ve˘‹
(
Såög_ve˘‹
 *
v
) {

49 i‡(
v
->
d©a
) {

50 
öt32_t
 
i
;

51 
i
=0; i<
v
->
cou¡
; i++) {

52 
	`‰ì
(
v
->
d©a
[
i
]);

54 
	`‰ì
(
v
->
d©a
);

55 
v
->
d©a
 = 0;

57 
	}
}

60 
	$v°rcmp
(c⁄° * 
°r1
, c⁄° * 
°r2
) {

61 c⁄° **
a
 = (c⁄° **)
°r1
;

62 c⁄° **
b
 = (c⁄° **Ë
°r2
;

63  
	`°rcmp
(*
a
, *
b
);

64 
	}
}

66 
	$s‹t_chûdªn
(
Såög_ve˘‹
 *
ve˘‹
) {

67 
	`qs‹t
–
ve˘‹
->
d©a
, ve˘‹->
cou¡
, (*), &
v°rcmp
);

68 
	}
}

71 
	$c⁄ˇt_∑th_nodíame_n
(*
buf„r
, 
Àn
, c⁄° *
∑th
, c⁄° *
node_«me
){

72 
	`¢¥ötf
(
buf„r
, 
Àn
, "%s/%s", 
∑th
, 
node_«me
);

73 
	}
}

75 *
	$c⁄ˇt_∑th_nodíame
(c⁄° *
∑th
, c⁄° *
node_«me
){

76 
node_∑th_Àngth
 = 
	`°æí
(
∑th
Ë+ 1+ såÀn(
node_«me
) +1;

77 *
node_∑th
 = (*Ë
	`mÆloc
(
node_∑th_Àngth
 * ());

78 
	`c⁄ˇt_∑th_nodíame_n
(
node_∑th
, 
node_∑th_Àngth
, 
∑th
, 
node_«me
);

79  
node_∑th
;

80 
	}
}

83 
	$zkr_queue_ˇche_¸óã_∑th
(
zkr_queue_t
 *
queue
){

84 if(
queue
->
ˇched_¸óã_∑th
 !
NULL
){

85 
	`‰ì
(
queue
->
ˇched_¸óã_∑th
);

87 
queue
->
ˇched_¸óã_∑th
 = 
	`c⁄ˇt_∑th_nodíame
(queue->
∑th
, queue->
node_«me
);

88 
	}
}

90 
ZOOAPI
 
	$zkr_queue_öô
(
zkr_queue_t
 *
queue
, 
zh™dÀ_t
* 
zh
, * 
∑th
, 
ACL_ve˘‹
 *
a˛
){

91 
queue
->
zh
 = zh;

92 
queue
->
∑th
 =Öath;

93 
queue
->
node_«me
 = "qn-";

94 
queue
->
node_«me_Àngth
 = 
	`°æí
(queue->
node_«me
);

95 
queue
->
ˇched_¸óã_∑th
 = 
NULL
;

96 
queue
->
a˛
 =ácl;

97 
	`±hªad_muãx_öô
(&(
queue
->
pmuãx
), 
NULL
);

98 
	`zkr_queue_ˇche_¸óã_∑th
(
queue
);

100 
	}
}

102 
ZOOAPI
 
	$¸óã_queue_roŸ
(
zkr_queue_t
 *
queue
){

103  
	`zoo_¸óã
(
queue
->
zh
, queue->
∑th
, 
NULL
, 0, queue->
a˛
, 0, NULL, 0 );

104 
	}
}

106 
	$vÆid_chûd_«me
(
zkr_queue_t
 *
queue
, c⁄° *
chûd_«me
){

107  
	`°∫cmp
(
queue
->
node_«me
, 
chûd_«me
, queue->
node_«me_Àngth
);

108 
	}
}

110 
ZOOAPI
 
	$zkr_queue_of„r
(
zkr_queue_t
 *
queue
, c⁄° *
d©a
, 
buf„r_Àn
){

112 
rc
 = 
	`zoo_¸óã
(
queue
->
zh
, queue->
ˇched_¸óã_∑th
, 
d©a
, 
buf„r_Àn
, queue->
a˛
, 
ZOO_SEQUENCE
, 
NULL
, 0 );

113 
rc
){

114 
¸óã_roŸ_rc
;

115 
ZNONODE
:

116 
¸óã_roŸ_rc
 = 
	`¸óã_queue_roŸ
(
queue
);

117 
¸óã_roŸ_rc
){

118 
ZNODEEXISTS
:

119 
ZOK
:

122  
¸óã_roŸ_rc
;

126  
rc
;

129 
	}
}

132 
ZOOAPI
 
	$zkr_queue_ñemít
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
){

133 
∑th_Àngth
 = 
	`°æí
(
queue
->
∑th
);

135 
Såög_ve˘‹
 
°ve˘‹
;

136 
Såög_ve˘‹
 *
ve˘‹
 = &
°ve˘‹
;

138 
gë_chûdªn_rc
 = 
	`zoo_gë_chûdªn
(
queue
->
zh
, queue->
∑th
, 0, 
ve˘‹
);

139 
gë_chûdªn_rc
){

140 
ZOK
:

142 
ZNONODE
:

143 *
buf„r_Àn
 = -1;

144  
ZOK
;

146  
gë_chûdªn_rc
;

148 if(
°ve˘‹
.
cou¡
 == 0){

149 *
buf„r_Àn
 = -1;

150  
ZOK
;

153 
	`s‹t_chûdªn
(
ve˘‹
);

155 
i
;

156 
i
=0; i < 
°ve˘‹
.
cou¡
; i++){

157 *
chûd_«me
 = 
°ve˘‹
.
d©a
[
i
];

158 
chûd_∑th_Àngth
 = 
∑th_Àngth
 + 1 + 
	`°æí
(
chûd_«me
) +1;

159 
chûd_∑th
[
chûd_∑th_Àngth
];

160 
	`c⁄ˇt_∑th_nodíame_n
(
chûd_∑th
, 
chûd_∑th_Àngth
, 
queue
->
∑th
, 
chûd_«me
);

161 
gë_rc
 = 
	`zoo_gë
(
queue
->
zh
, 
chûd_∑th
, 0, 
buf„r
, 
buf„r_Àn
, 
NULL
);

162 
gë_rc
){

163 
ZOK
:

164 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

165  
ZOK
;

166 
ZNONODE
:

169 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

170  
gë_rc
;

174 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

176 
	}
}

178 
ZOOAPI
 
	$zkr_queue_ªmove
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
){

179 
∑th_Àngth
 = 
	`°æí
(
queue
->
∑th
);

181 
Såög_ve˘‹
 
°ve˘‹
;

182 
Såög_ve˘‹
 *
ve˘‹
 = &
°ve˘‹
;

184 
gë_chûdªn_rc
 = 
	`zoo_gë_chûdªn
(
queue
->
zh
, queue->
∑th
, 0, &
°ve˘‹
);

185 
gë_chûdªn_rc
){

186 
ZOK
:

188 
ZNONODE
:

189 *
buf„r_Àn
 = -1;

190  
ZOK
;

193 *
buf„r_Àn
 = -1;

194  
gë_chûdªn_rc
;

196 if(
°ve˘‹
.
cou¡
 == 0){

197 *
buf„r_Àn
 = -1;

198  
ZOK
;

201 
	`s‹t_chûdªn
(
ve˘‹
);

203 
i
;

204  
i
=0; i < 
°ve˘‹
.
cou¡
; i++){

205 *
chûd_«me
 = 
°ve˘‹
.
d©a
[
i
];

206 
chûd_∑th_Àngth
 = 
∑th_Àngth
 + 1 + 
	`°æí
(
chûd_«me
) +1;

207 
chûd_∑th
[
chûd_∑th_Àngth
];

208 
	`c⁄ˇt_∑th_nodíame_n
(
chûd_∑th
, 
chûd_∑th_Àngth
, 
queue
->
∑th
, 
chûd_«me
);

209 
gë_rc
 = 
	`zoo_gë
(
queue
->
zh
, 
chûd_∑th
, 0, 
buf„r
, 
buf„r_Àn
, 
NULL
);

210 
gë_rc
){

211 
dñëe_rc
;

212 
ZOK
:

213 
dñëe_rc
 = 
	`zoo_dñëe
(
queue
->
zh
, 
chûd_∑th
, -1);

214 
dñëe_rc
){

215 
ZOK
:

216 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

217  
dñëe_rc
;

218 
ZNONODE
:

221 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

222 *
buf„r_Àn
 = -1;

223  
dñëe_rc
;

226 
ZNONODE
:

229 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

230 *
buf„r_Àn
 = -1;

231  
gë_rc
;

234 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

236 
	}
}

255 
	sèke_œtch
 {

256 
	eèke_°©e
 {
	mèke_öô
, 
	mèke_waôög
, 
	mèke_åiggîed
, 
	mèke_nŸ_√eded
} 
	m°©e
;

257 
±hªad_c⁄d_t
 
	mœtch_c⁄dôi⁄
;

258 
zkr_queue_t
 *
	mqueue
;

262 
èke_œtch
 
	tèke_œtch_t
;

265 
	$èke_œtch_öô
–
èke_œtch_t
 *
œtch
, 
zkr_queue_t
 *
queue
){

266 
±hªad_muãx_t
 *
muãx
 = &(
queue
->
pmuãx
);

267 
	`±hªad_muãx_lock
(
muãx
);

268 
œtch
->
°©e
 = 
èke_öô
;

269 
œtch
->
queue
 = queue;

270 
	`±hªad_muãx_u∆ock
(
muãx
);

271 
	}
}

273 
èke_œtch_t
 *
	$¸óã_èke_œtch
(
zkr_queue_t
 *
queue
){

274 
èke_œtch_t
 *
√w_èke_œtch
 = (èke_œtch_à*Ë
	`mÆloc
((take_latch_t));

275 
	`èke_œtch_öô
(
√w_èke_œtch
, 
queue
);

276  
√w_èke_œtch
;

277 
	}
}

281 
	$èke_œtch_de°roy_unß„
(
èke_œtch_t
 *
œtch
){

282 if(
œtch
->
°©e
 =
èke_waôög
){

283 
	`±hªad_c⁄d_de°roy
(&(
œtch
->
œtch_c⁄dôi⁄
));

285 
	`‰ì
(
œtch
);

286 
	}
}

288 
	$èke_œtch_de°roy_synchr⁄ized
(
èke_œtch_t
 *
œtch
){

289 
±hªad_muãx_t
 *
muãx
 = &(
œtch
->
queue
->
pmuãx
);

290 
	`±hªad_muãx_lock
(
muãx
);

291 
	`èke_œtch_de°roy_unß„
(
œtch
);

292 
	`±hªad_muãx_u∆ock
(
muãx
);

293 
	}
}

295 
	$èke_œtch_£âî_åiggî_œtch
(
èke_œtch_t
 *
œtch
){

296 
±hªad_muãx_t
 *
muãx
 = &(
œtch
->
queue
->
pmuãx
);

297 
	`±hªad_muãx_lock
(
muãx
);

298 
œtch
->
°©e
){

299 
èke_öô
:

300 
œtch
->
°©e
 = 
èke_åiggîed
;

302 
èke_nŸ_√eded
:

303 
	`èke_œtch_de°roy_unß„
(
œtch
);

305 
èke_åiggîed
:

306 
	`LOG_DEBUG
(("Error! Latch wasÅriggeredÅwice."));

308 
èke_waôög
:

309 
	`±hªad_c⁄d_sig«l
(&(
œtch
->
œtch_c⁄dôi⁄
));

312 
	`±hªad_muãx_u∆ock
(
muãx
);

313 
	}
}

315 
	$èke_œtch_waôî_awaô
(
èke_œtch_t
 *
œtch
){

316 
±hªad_muãx_t
 *
muãx
 = &(
œtch
->
queue
->
pmuãx
);

317 
	`±hªad_muãx_lock
(
muãx
);

318 
œtch
->
°©e
){

319 
èke_öô
:

320 
	`±hªad_c⁄d_öô
(&(
œtch
->
œtch_c⁄dôi⁄
),
NULL
);

321 
œtch
->
°©e
 = 
èke_waôög
;

322 
	`±hªad_c⁄d_waô
(&(
œtch
->
œtch_c⁄dôi⁄
),
muãx
);

323 
	`èke_œtch_de°roy_unß„
(
œtch
);

325 
èke_waôög
:

326 
	`LOG_DEBUG
(("Error! CalledáwaitÅwice."));

328 
èke_nŸ_√eded
:

329 
	`LOG_DEBUG
(("Error! Waitingáfter markingÇotÇeeded."));

331 
èke_åiggîed
:

332 
	`èke_œtch_de°roy_unß„
(
œtch
);

335 
	`±hªad_muãx_u∆ock
(
muãx
);

336 
	}
}

338 
	$èke_œtch_waôî_m¨k_u¬ìded
(
èke_œtch_t
 *
œtch
){

339 
±hªad_muãx_t
 *
muãx
 = &(
œtch
->
queue
->
pmuãx
);

340 
	`±hªad_muãx_lock
(
muãx
);

341 
œtch
->
°©e
){

342 
èke_öô
:

343 
œtch
->
°©e
 = 
èke_nŸ_√eded
;

345 
èke_waôög
:

346 
	`LOG_DEBUG
(("Error! Can't mark unneededáfter waiting."));

348 
èke_nŸ_√eded
:

349 
	`LOG_DEBUG
(("Marked unneededÅwice."));

351 
èke_åiggîed
:

352 
	`èke_œtch_de°roy_unß„
(
œtch
);

355 
	`±hªad_muãx_u∆ock
(
muãx
);

356 
	}
}

358 
	$èke_w©chî
(
zh™dÀ_t
 *
zh
, 
ty≥
, 
°©e
, c⁄° *
∑th
, *
w©chîCtx
){

359 
èke_œtch_t
 *
œtch
 = (èke_œtch_à*Ë
w©chîCtx
;

360 
	`èke_œtch_£âî_åiggî_œtch
(
œtch
);

361 
	}
}

365 
ZOOAPI
 
	$zkr_queue_èke
(
zkr_queue_t
 *
queue
, *
buf„r
, *
buf„r_Àn
){

366 
∑th_Àngth
 = 
	`°æí
(
queue
->
∑th
);

367 
èke_©ãm±
:

369 
Såög_ve˘‹
 
°ve˘‹
;

370 
Såög_ve˘‹
 *
ve˘‹
 = &
°ve˘‹
;

372 
èke_œtch_t
 *
èke_œtch
 = 
	`¸óã_èke_œtch
(
queue
);

373 
gë_chûdªn_rc
 = 
	`zoo_wgë_chûdªn
(
queue
->
zh
, queue->
∑th
, 
èke_w©chî
, 
èke_œtch
, &
°ve˘‹
);

374 
gë_chûdªn_rc
){

375 
ZOK
:

377 
¸óã_queue_rc
;

378 
ZNONODE
:

379 
	`èke_œtch_de°roy_synchr⁄ized
(
èke_œtch
);

380 
¸óã_queue_rc
 = 
	`¸óã_queue_roŸ
(
queue
);

381 
¸óã_queue_rc
){

382 
ZNODEEXISTS
:

383 
ZOK
:

384 
èke_©ãm±
;

386 *
buf„r_Àn
 = -1;

387  
¸óã_queue_rc
;

390 
	`èke_œtch_de°roy_synchr⁄ized
(
èke_œtch
);

391 *
buf„r_Àn
 = -1;

392  
gë_chûdªn_rc
;

394 if(
°ve˘‹
.
cou¡
 == 0){

395 
	`èke_œtch_waôî_awaô
(
èke_œtch
);

397 
	`èke_œtch_waôî_m¨k_u¬ìded
(
èke_œtch
);

400 
	`s‹t_chûdªn
(
ve˘‹
);

402 
i
;

403  
i
=0; i < 
°ve˘‹
.
cou¡
; i++){

404 *
chûd_«me
 = 
°ve˘‹
.
d©a
[
i
];

405 
chûd_∑th_Àngth
 = 
∑th_Àngth
 + 1 + 
	`°æí
(
chûd_«me
) +1;

406 
chûd_∑th
[
chûd_∑th_Àngth
];

407 
	`c⁄ˇt_∑th_nodíame_n
(
chûd_∑th
, 
chûd_∑th_Àngth
, 
queue
->
∑th
, 
chûd_«me
);

408 
gë_rc
 = 
	`zoo_gë
(
queue
->
zh
, 
chûd_∑th
, 0, 
buf„r
, 
buf„r_Àn
, 
NULL
);

409 
gë_rc
){

410 
dñëe_rc
;

411 
ZOK
:

412 
dñëe_rc
 = 
	`zoo_dñëe
(
queue
->
zh
, 
chûd_∑th
, -1);

413 
dñëe_rc
){

414 
ZOK
:

415 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

416  
dñëe_rc
;

417 
ZNONODE
:

420 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

421 *
buf„r_Àn
 = -1;

422  
dñëe_rc
;

425 
ZNONODE
:

428 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

429 *
buf„r_Àn
 = -1;

430  
gë_rc
;

433 
	`‰ì_Såög_ve˘‹
(
ve˘‹
);

435 
	}
}

437 
ZOOAPI
 
	$zkr_queue_de°roy
(
zkr_queue_t
 *
queue
){

438 
	`±hªad_muãx_de°roy
(&(
queue
->
pmuãx
));

439 if(
queue
->
ˇched_¸óã_∑th
 !
NULL
){

440 
	`‰ì
(
queue
->
ˇched_¸óã_∑th
);

442 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/tests/Util.h

19 #i‚de‡
UTIL_H_


20 
	#UTIL_H_


	)

22 
	~<m≠
>

23 
	~<ve˘‹
>

24 
	~<°rög
>

27 
	#COUNTOF
(
¨øy
Ë◊ºay)/◊ºay[0])

	)

29 
	#DECLARE_WRAPPER
(
ªt
,
sym
,
sig
) \

30 "C" 
ªt
 
__ªÆ_
##
sym
 
sig
; \

31 "C" 
ªt
 
__wøp_
##
sym
 
sig


	)

33 
	#CALL_REAL
(
sym
,
∑øms
) \

34 
__ªÆ_
##
sym
 
∑øms


	)

37 
	#TEST_TRACE
(
x
) \

38 
	`log_mesßge
(3,
__LINE__
,
__func__
,
f‹m©_log_mesßge
 
x
)

	)

40 c⁄° 
°d
::
°rög
 
EMPTY_STRING
;

45 
	gãm∂©e
 <
˛ass
 
	gT
>

46 
	sTy≥Op
 {

47 
T
 
	tB¨eT
;

48 
T
 
	tArgT
;

52 
	gãm∂©e
 <
˛ass
 
	gT
>

53 
	gTy≥Op
<
	gT
&>{

54 
	gT
& 
	tArgT
;

55 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

59 
	gãm∂©e
 <
˛ass
 
	gT
>

60 
	gTy≥Op
<
	gT
*>{

61 
T
* 
	tArgT
;

62 
ty≥«me
 
	tTy≥Op
<
	tT
>::
	tB¨eT
 BareT;

68 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

69 
putVÆue
(
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
, c⁄° V& 
v
){

70 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

71 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

72 if(
	gô
==
m≠
.
íd
())

73 
m≠
.
ö£π
(
ty≥«me
 
M≠
::
vÆue_ty≥
(
k
,
v
));

75 
	gm≠
[
k
]=
v
;

78 
	gãm∂©e
 <
˛ass
 
	gK
, cœs†
	gV
>

79 
boﬁ
 
gëVÆue
(c⁄° 
°d
::
m≠
<
K
,
V
>& m≠,c⁄° K& 
k
,V& 
v
){

80 
	g°d
::
	tm≠
<
	tK
,
	tV
> 
	tM≠
;

81 
ty≥«me
 
	gM≠
::
c⁄°_ôî©‹
 
ô
=
m≠
.
föd
(
k
);

82 if(
	gô
==
m≠
.
íd
())

83  
Ál£
;

84 
	gv
=
ô
->
£c⁄d
;

85  
	gåue
;

92 
mûli¶ìp
(
ms
);

95 
	gãm∂©e
<
˛ass
 
	gPªdiˇã
>

96 
	$ísuªC⁄dôi⁄
(c⁄° 
Pªdiˇã
& 
p
,
timeout
){

97 
ñ≠£d
=0;

98 !
	`p
(Ë&& 
ñ≠£d
<
timeout
){

99 
	`mûli¶ìp
(2);

100 
ñ≠£d
+=2;

102  
ñ≠£d
;

103 
	}
};

107 ˛as†
	cTe°C⁄fig
{

108 
	m°d
::
	tve˘‹
<
	t°d
::
	t°rög
> 
	tCmdLöeO±Li°
;

109 
	mpublic
:

110 
CmdLöeO±Li°
::
	tc⁄°_ôî©‹
 const_iterator;

111 
	$Te°C⁄fig
(){}

112 ~
	$Te°C⁄fig
(){
	}
}

113 
	$addC⁄figFromCmdLöe
(
¨gc
, * 
¨gv
[]){

114 if(
¨gc
>=2)

115 
ã°Name_
=
¨gv
[1];

116 
i
=2; i<
¨gc
;++i)

117 
cmdO±s_
.
	`push_back
(
¨gv
[
i
]);

118 
	}
}

119 
c⁄°_ôî©‹
 
	$gëExåaO±Begö
(Ëc⁄° { 
cmdO±s_
.
	`begö
();
	}
}

120 
c⁄°_ôî©‹
 
	$gëExåaO±End
(Ëc⁄° { 
cmdO±s_
.
	`íd
();
	}
}

121 
size_t
 
	$gëExåaO±Cou¡
() const {

122  
cmdO±s_
.
	`size
();

123 
	}
}

124 c⁄° 
	g°d
::
°rög
& 
	$gëTe°Name
() const {

125  
ã°Name_
=="Æl"?
EMPTY_STRING
:testName_;

126 
	}
}

127 
	g¥iv©e
:

128 
CmdLöeO±Li°
 
cmdO±s_
;

129 
	g°d
::
°rög
 
ã°Name_
;

132 
Te°C⁄fig
 
globÆTe°C⁄fig
;

	@/home/pig/zookeeper-3.4.5/src/recipes/queue/src/java/org/apache/zookeeper/recipes/queue/DistributedQueue.java

19 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gqueue
;

21 
imp‹t
 
	gjava
.
	gutû
.
	gLi°
;

22 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

23 
imp‹t
 
	gjava
.
	gutû
.
	gTªeM≠
;

24 
imp‹t
 
	gjava
.
	gutû
.
	gc⁄cuºít
.
	gCou¡DownL©ch
;

26 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggî
;

27 
imp‹t
 
	g‹g
.
	g¶f4j
.
	gLoggîFa˘‹y
;

28 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gCª©eMode
;

29 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

30 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chedEvít
;

31 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gW©chî
;

32 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooDefs
;

33 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

34 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gACL
;

35 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gd©a
.
	gSèt
;

43 
public
 cœs†
	cDi°ribuãdQueue
 {

44 
¥iv©e
 
föÆ
 
Loggî
 
	mLOG
 = 
LoggîFa˘‹y
.
gëLoggî
(
Di°ribuãdQueue
.
˛ass
);

46 
¥iv©e
 
föÆ
 
Såög
 
	mdú
;

48 
¥iv©e
 
ZooKì≥r
 
	mzookì≥r
;

49 
¥iv©e
 
	mLi°
<
	mACL
> 
	ma˛
 = 
ZooDefs
.
Ids
.
OPEN_ACL_UNSAFE
;

51 
¥iv©e
 
föÆ
 
Såög
 
	m¥efix
 = "qn-";

54 
public
 
Di°ribuãdQueue
(
ZooKì≥r
 
zookì≥r
, 
Såög
 
dú
, 
Li°
<
ACL
> 
a˛
){

55 
	mthis
.
	mdú
 = 
dú
;

57 if(
	ma˛
 !
nuŒ
){

58 
this
.
a˛
 =ácl;

60 
	mthis
.
	mzookì≥r
 = 
zookì≥r
;

71 
¥iv©e
 
	gTªeM≠
<
	gL⁄g
,
	gSåög
> 
	$‹dîedChûdªn
(
W©chî
 
w©chî
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

72 
TªeM≠
<
L⁄g
,
Såög
> 
‹dîedChûdªn
 = 
√w
 TreeMap<Long,String>();

74 
Li°
<
Såög
> 
chûdNames
 = 
nuŒ
;

75 
åy
{

76 
chûdNames
 = 
zookì≥r
.
	`gëChûdªn
(
dú
, 
w©chî
);

77 }
	`ˇtch
 (
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

78 
throw
 
e
;

81 
Såög
 
chûdName
 : 
chûdNames
){

82 
åy
{

84 if(!
chûdName
.
	`ªgi⁄M©ches
(0, 
¥efix
, 0,Öªfix.
	`Àngth
())){

85 
LOG
.
	`w¨n
("Found chûdÇodêwôh im¥›îÇame: " + 
chûdName
);

88 
Såög
 
suffix
 = 
chûdName
.
	`sub°rög
(
¥efix
.
	`Àngth
());

89 
L⁄g
 
chûdId
 = 
√w
 
	`L⁄g
(
suffix
);

90 
‹dîedChûdªn
.
	`put
(
chûdId
,
chûdName
);

91 }
	`ˇtch
(
NumbîF‹m©Ex˚±i⁄
 
e
){

92 
LOG
.
	`w¨n
("Found chûdÇodêwôh im¥›î f‹m© : " + 
chûdName
 + " " + 
e
,e);

96  
‹dîedChûdªn
;

97 
	}
}

103 
¥iv©e
 
Såög
 
	$smÆÀ°ChûdName
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

104 
möId
 = 
L⁄g
.
MAX_VALUE
;

105 
Såög
 
möName
 = "";

107 
Li°
<
Såög
> 
chûdNames
 = 
nuŒ
;

109 
åy
{

110 
chûdNames
 = 
zookì≥r
.
	`gëChûdªn
(
dú
, 
Ál£
);

111 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

112 
LOG
.
	`w¨n
("Caught: " +
e
,e);

113  
nuŒ
;

116 
Såög
 
chûdName
 : 
chûdNames
){

117 
åy
{

119 if(!
chûdName
.
	`ªgi⁄M©ches
(0, 
¥efix
, 0,Öªfix.
	`Àngth
())){

120 
LOG
.
	`w¨n
("Found chûdÇodêwôh im¥›îÇame: " + 
chûdName
);

123 
Såög
 
suffix
 = 
chûdName
.
	`sub°rög
(
¥efix
.
	`Àngth
());

124 
chûdId
 = 
L⁄g
.
	`∑r£L⁄g
(
suffix
);

125 if(
chûdId
 < 
möId
){

126 
möId
 = 
chûdId
;

127 
möName
 = 
chûdName
;

129 }
	`ˇtch
(
NumbîF‹m©Ex˚±i⁄
 
e
){

130 
LOG
.
	`w¨n
("Found chûdÇodêwôh im¥›î f‹m© : " + 
chûdName
 + " " + 
e
,e);

135 if(
möId
 < 
L⁄g
.
MAX_VALUE
){

136  
möName
;

138  
nuŒ
;

140 
	}
}

149 
public
 
	gbyã
[] 
	$ñemít
(Ë
throws
 
NoSuchEÀmítEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

150 
TªeM≠
<
L⁄g
,
Såög
> 
‹dîedChûdªn
;

157 
åue
){

158 
åy
{

159 
‹dîedChûdªn
 = 
	`‹dîedChûdªn
(
nuŒ
);

160 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

161 
throw
 
√w
 
	`NoSuchEÀmítEx˚±i⁄
();

163 if(
‹dîedChûdªn
.
	`size
(Ë=0 ) 
throw
 
√w
 
	`NoSuchEÀmítEx˚±i⁄
();

165 
Såög
 
hódNode
 : 
‹dîedChûdªn
.
	`vÆues
()){

166 if(
hódNode
 !
nuŒ
){

167 
åy
{

168  
zookì≥r
.
	`gëD©a
(
dú
+"/"+
hódNode
, 
Ál£
, 
nuŒ
);

169 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

176 
	}
}

186 
public
 
	gbyã
[] 
	$ªmove
(Ë
throws
 
NoSuchEÀmítEx˚±i⁄
, 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

187 
TªeM≠
<
L⁄g
,
Såög
> 
‹dîedChûdªn
;

189 
åue
){

190 
åy
{

191 
‹dîedChûdªn
 = 
	`‹dîedChûdªn
(
nuŒ
);

192 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

193 
throw
 
√w
 
	`NoSuchEÀmítEx˚±i⁄
();

195 if(
‹dîedChûdªn
.
	`size
(Ë=0Ë
throw
 
√w
 
	`NoSuchEÀmítEx˚±i⁄
();

197 
Såög
 
hódNode
 : 
‹dîedChûdªn
.
	`vÆues
()){

198 
Såög
 
∑th
 = 
dú
 +"/"+
hódNode
;

199 
åy
{

200 
byã
[] 
d©a
 = 
zookì≥r
.
	`gëD©a
(
∑th
, 
Ál£
, 
nuŒ
);

201 
zookì≥r
.
	`dñëe
(
∑th
, -1);

202  
d©a
;

203 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

209 
	}
}

211 
¥iv©e
 cœs†
	cL©chChûdW©chî
 
im∂emíts
 
	gW©chî
 {

213 
Cou¡DownL©ch
 
	gœtch
;

215 
public
 
L©chChûdW©chî
(){

216 
	gœtch
 = 
√w
 
Cou¡DownL©ch
(1);

219 
public
 
¥o˚ss
(
W©chedEvít
 
evít
){

220 
	gLOG
.
debug
("W©chî fúed o¿∑th: " + 
evít
.
gëP©h
() + " state: " +

221 
evít
.
gëSèã
(Ë+ "Åy≥ " +Évít.
gëTy≥
());

222 
	gœtch
.
cou¡Down
();

224 
public
 
awaô
(Ë
throws
 
	gI¡îru±edEx˚±i⁄
 {

225 
	gœtch
.
awaô
();

236 
public
 
	gbyã
[] 
	$èke
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

237 
TªeM≠
<
L⁄g
,
Såög
> 
‹dîedChûdªn
;

239 
åue
){

240 
L©chChûdW©chî
 
chûdW©chî
 = 
√w
 
	`L©chChûdW©chî
();

241 
åy
{

242 
‹dîedChûdªn
 = 
	`‹dîedChûdªn
(
chûdW©chî
);

243 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

244 
zookì≥r
.
	`¸óã
(
dú
, 
√w
 
byã
[0], 
a˛
, 
Cª©eMode
.
PERSISTENT
);

247 if(
‹dîedChûdªn
.
	`size
() == 0){

248 
chûdW©chî
.
	`awaô
();

252 
Såög
 
hódNode
 : 
‹dîedChûdªn
.
	`vÆues
()){

253 
Såög
 
∑th
 = 
dú
 +"/"+
hódNode
;

254 
åy
{

255 
byã
[] 
d©a
 = 
zookì≥r
.
	`gëD©a
(
∑th
, 
Ál£
, 
nuŒ
);

256 
zookì≥r
.
	`dñëe
(
∑th
, -1);

257  
d©a
;

258 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

263 
	}
}

270 
public
 
boﬁón
 
	$of„r
(
byã
[] 
d©a
Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
{

272 
åy
{

273 
zookì≥r
.
	`¸óã
(
dú
+"/"+
¥efix
, 
d©a
, 
a˛
, 
Cª©eMode
.
PERSISTENT_SEQUENTIAL
);

274  
åue
;

275 }
	`ˇtch
(
Kì≥rEx˚±i⁄
.
NoNodeEx˚±i⁄
 
e
){

276 
zookì≥r
.
	`¸óã
(
dú
, 
√w
 
byã
[0], 
a˛
, 
Cª©eMode
.
PERSISTENT
);

280 
	}
}

288 
public
 
	gbyã
[] 
	$≥ek
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
{

289 
åy
{

290  
	`ñemít
();

291 }
	`ˇtch
(
NoSuchEÀmítEx˚±i⁄
 
e
){

292  
nuŒ
;

294 
	}
}

303 
public
 
	gbyã
[] 
	$pﬁl
(Ë
throws
 
Kì≥rEx˚±i⁄
, 
I¡îru±edEx˚±i⁄
 {

304 
åy
{

305  
	`ªmove
();

306 }
	`ˇtch
(
NoSuchEÀmítEx˚±i⁄
 
e
){

307  
nuŒ
;

309 
	}
}

	@/home/pig/zookeeper-3.4.5/src/recipes/queue/test/org/apache/zookeeper/recipes/queue/DistributedQueueTest.java

18 
∑ckage
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gªcùes
.
	gqueue
;

20 
imp‹t
 
	gjava
.
	gutû
.
	gNoSuchEÀmítEx˚±i⁄
;

22 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gKì≥rEx˚±i⁄
;

23 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gZooKì≥r
;

24 
imp‹t
 
	g‹g
.
	g≠ache
.
	gzookì≥r
.
	gã°
.
	gClõ¡Ba£
;

25 
imp‹t
 
	g‹g
.
	gjunô
.
	gA·î
;

26 
imp‹t
 
	g‹g
.
	gjunô
.
	gAs£π
;

27 
imp‹t
 
	g‹g
.
	gjunô
.
	gTe°
;

31 
public
 cœs†
	cDi°ribuãdQueueTe°
 
exãnds
 
	mClõ¡Ba£
 {

33 @
A·î


34 
public
 
	$ã¨Down
(Ë
throws
 
Ex˚±i⁄
 {

35 
su≥r
.
	`ã¨Down
();

36 
LOG
.
	`öfo
("FINISHED " + 
	`gëTe°Name
());

40 @
Te°


41 
public
 
	$ã°Of„r1
(Ë
throws
 
Ex˚±i⁄
 {

42 
Såög
 
dú
 = "/testOffer1";

43 
Såög
 
ã°Såög
 = "Hello World";

44 
föÆ
 
num_˛õ¡s
 = 1;

45 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

46 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

47 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

48 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

49 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

52 
queueH™dÀs
[0].
	`of„r
(
ã°Såög
.
	`gëByãs
());

54 
byã
 
dequeuedByãs
[] = 
queueH™dÀs
[0].
	`ªmove
();

55 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
dequeuedByãs
), 
ã°Såög
);

56 
	}
}

58 @
Te°


59 
public
 
	$ã°Of„r2
(Ë
throws
 
Ex˚±i⁄
 {

60 
Såög
 
dú
 = "/testOffer2";

61 
Såög
 
ã°Såög
 = "Hello World";

62 
föÆ
 
num_˛õ¡s
 = 2;

63 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

64 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

65 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

66 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

67 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

70 
queueH™dÀs
[0].
	`of„r
(
ã°Såög
.
	`gëByãs
());

72 
byã
 
dequeuedByãs
[] = 
queueH™dÀs
[1].
	`ªmove
();

73 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
dequeuedByãs
), 
ã°Såög
);

74 
	}
}

76 @
Te°


77 
public
 
	$ã°Take1
(Ë
throws
 
Ex˚±i⁄
 {

78 
Såög
 
dú
 = "/testTake1";

79 
Såög
 
ã°Såög
 = "Hello World";

80 
föÆ
 
num_˛õ¡s
 = 1;

81 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

82 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

83 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

84 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

85 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

88 
queueH™dÀs
[0].
	`of„r
(
ã°Såög
.
	`gëByãs
());

90 
byã
 
dequeuedByãs
[] = 
queueH™dÀs
[0].
	`èke
();

91 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
dequeuedByãs
), 
ã°Såög
);

92 
	}
}

96 @
Te°


97 
public
 
	$ã°Remove1
(Ë
throws
 
Ex˚±i⁄
{

98 
Såög
 
dú
 = "/testRemove1";

99 
Såög
 
ã°Såög
 = "Hello World";

100 
föÆ
 
num_˛õ¡s
 = 1;

101 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

102 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

103 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

104 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

105 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

108 
åy
{

109 
queueH™dÀs
[0].
	`ªmove
();

110 }
	`ˇtch
(
NoSuchEÀmítEx˚±i⁄
 
e
){

113 
As£π
.
	`as£πTrue
(
Ál£
);

114 
	}
}

116 
public
 
	$¸óãNªmoveMã°
(
Såög
 
dú
,
n
,
m
Ë
throws
 
Ex˚±i⁄
{

117 
Såög
 
ã°Såög
 = "Hello World";

118 
föÆ
 
num_˛õ¡s
 = 2;

119 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

120 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

121 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

122 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

123 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

126 
i
=0; i< 
n
; i++){

127 
Såög
 
of„rSåög
 = 
ã°Såög
 + 
i
;

128 
queueH™dÀs
[0].
	`of„r
(
of„rSåög
.
	`gëByãs
());

131 
byã
 
d©a
[] = 
nuŒ
;

132 
i
=0; i<
m
; i++){

133 
d©a
=
queueH™dÀs
[1].
	`ªmove
();

135 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
d©a
), 
ã°Såög
+(
m
-1));

136 
	}
}

138 @
Te°


139 
public
 
	$ã°Remove2
(Ë
throws
 
Ex˚±i⁄
{

140 
	`¸óãNªmoveMã°
("/testRemove2",10,2);

141 
	}
}

142 @
Te°


143 
public
 
	$ã°Remove3
(Ë
throws
 
Ex˚±i⁄
{

144 
	`¸óãNªmoveMã°
("/testRemove3",1000,1000);

145 
	}
}

147 
public
 
	$¸óãNªmoveMñemítTe°
(
Såög
 
dú
,
n
,
m
Ë
throws
 
Ex˚±i⁄
{

148 
Såög
 
ã°Såög
 = "Hello World";

149 
föÆ
 
num_˛õ¡s
 = 2;

150 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

151 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

152 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

153 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

154 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

157 
i
=0; i< 
n
; i++){

158 
Såög
 
of„rSåög
 = 
ã°Såög
 + 
i
;

159 
queueH™dÀs
[0].
	`of„r
(
of„rSåög
.
	`gëByãs
());

162 
byã
 
d©a
[] = 
nuŒ
;

163 
i
=0; i<
m
; i++){

164 
d©a
=
queueH™dÀs
[1].
	`ªmove
();

166 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
queueH™dÀs
[1].
	`ñemít
()), 
ã°Såög
+
m
);

167 
	}
}

169 @
Te°


170 
public
 
	$ã°EÀmít1
(Ë
throws
 
Ex˚±i⁄
 {

171 
	`¸óãNªmoveMñemítTe°
("/testElement1",1,0);

172 
	}
}

174 @
Te°


175 
public
 
	$ã°EÀmít2
(Ë
throws
 
Ex˚±i⁄
 {

176 
	`¸óãNªmoveMñemítTe°
("/testElement2",10,2);

177 
	}
}

179 @
Te°


180 
public
 
	$ã°EÀmít3
(Ë
throws
 
Ex˚±i⁄
 {

181 
	`¸óãNªmoveMñemítTe°
("/testElement3",1000,500);

182 
	}
}

184 @
Te°


185 
public
 
	$ã°EÀmít4
(Ë
throws
 
Ex˚±i⁄
 {

186 
	`¸óãNªmoveMñemítTe°
("/testElement4",1000,1000-1);

187 
	}
}

189 @
Te°


190 
public
 
	$ã°TakeWaô1
(Ë
throws
 
Ex˚±i⁄
{

191 
Såög
 
dú
 = "/testTakeWait1";

192 
föÆ
 
Såög
 
ã°Såög
 = "Hello World";

193 
föÆ
 
num_˛õ¡s
 = 1;

194 
föÆ
 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

195 
föÆ
 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

196 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

197 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

198 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

201 
föÆ
 
byã
[] 
èkeResu…
[] = 
√w
 byte[1][];

202 
Thªad
 
èkeThªad
 = 
√w
 
	`Thªad
(){

203 
public
 
	`run
(){

204 
åy
{

205 
èkeResu…
[0] = 
queueH™dÀs
[0].
	`èke
();

206 }
	`ˇtch
(
Kì≥rEx˚±i⁄
 
e
){

208 }
	`ˇtch
(
I¡îru±edEx˚±i⁄
 
e
){

213 
èkeThªad
.
	`°¨t
();

215 
Thªad
.
	`¶ìp
(1000);

216 
Thªad
 
of„rThªad

√w
 
	`Thªad
() {

217 
public
 
	`run
(){

218 
åy
 {

219 
queueH™dÀs
[0].
	`of„r
(
ã°Såög
.
	`gëByãs
());

220 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

222 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

227 
of„rThªad
.
	`°¨t
();

228 
of„rThªad
.
	`joö
();

230 
èkeThªad
.
	`joö
();

232 
As£π
.
	`as£πTrue
(
èkeResu…
[0] !
nuŒ
);

233 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
èkeResu…
[0]), 
ã°Såög
);

234 
	}
}

236 @
Te°


237 
public
 
	$ã°TakeWaô2
(Ë
throws
 
Ex˚±i⁄
{

238 
Såög
 
dú
 = "/testTakeWait2";

239 
föÆ
 
Såög
 
ã°Såög
 = "Hello World";

240 
föÆ
 
num_˛õ¡s
 = 1;

241 
föÆ
 
ZooKì≥r
 
˛õ¡s
[] = 
√w
 ZooKì≥r[
num_˛õ¡s
];

242 
föÆ
 
Di°ribuãdQueue
 
queueH™dÀs
[] = 
√w
 Di°ribuãdQueue[
num_˛õ¡s
];

243 
i
=0; i < 
˛õ¡s
.
Àngth
; i++){

244 
˛õ¡s
[
i
] = 
	`¸óãClõ¡
();

245 
queueH™dÀs
[
i
] = 
√w
 
	`Di°ribuãdQueue
(
˛õ¡s
[i], 
dú
, 
nuŒ
);

247 
num_©ãm±s
 =2;

248 
i
=0; i< 
num_©ãm±s
; i++){

249 
föÆ
 
byã
[] 
èkeResu…
[] = 
√w
 byte[1][];

250 
föÆ
 
Såög
 
thªadTe°Såög
 = 
ã°Såög
 + 
i
;

251 
Thªad
 
èkeThªad
 = 
√w
 
	`Thªad
(){

252 
public
 
	`run
(){

253 
åy
{

254 
èkeResu…
[0] = 
queueH™dÀs
[0].
	`èke
();

255 }
	`ˇtch
(
Kì≥rEx˚±i⁄
 
e
){

257 }
	`ˇtch
(
I¡îru±edEx˚±i⁄
 
e
){

262 
èkeThªad
.
	`°¨t
();

264 
Thªad
.
	`¶ìp
(1000);

265 
Thªad
 
of„rThªad

√w
 
	`Thªad
() {

266 
public
 
	`run
(){

267 
åy
 {

268 
queueH™dÀs
[0].
	`of„r
(
thªadTe°Såög
.
	`gëByãs
());

269 } 
	`ˇtch
 (
Kì≥rEx˚±i⁄
 
e
) {

271 } 
	`ˇtch
 (
I¡îru±edEx˚±i⁄
 
e
) {

276 
of„rThªad
.
	`°¨t
();

277 
of„rThªad
.
	`joö
();

279 
èkeThªad
.
	`joö
();

281 
As£π
.
	`as£πTrue
(
èkeResu…
[0] !
nuŒ
);

282 
As£π
.
	`as£πEquÆs
(
√w
 
	`Såög
(
èkeResu…
[0]), 
thªadTe°Såög
);

284 
	}
}

	@
1
.
0
535
47912
/home/pig/zookeeper-3.4.5/src/c/config.h
/home/pig/zookeeper-3.4.5/src/c/eji_keeper/include/eji_keeper.h
/home/pig/zookeeper-3.4.5/src/c/eji_keeper/src/eji_keeper.c
/home/pig/zookeeper-3.4.5/src/c/generated/zookeeper.jute.c
/home/pig/zookeeper-3.4.5/src/c/generated/zookeeper.jute.h
/home/pig/zookeeper-3.4.5/src/c/include/proto.h
/home/pig/zookeeper-3.4.5/src/c/include/recordio.h
/home/pig/zookeeper-3.4.5/src/c/include/winconfig.h
/home/pig/zookeeper-3.4.5/src/c/include/winstdint.h
/home/pig/zookeeper-3.4.5/src/c/include/zookeeper.h
/home/pig/zookeeper-3.4.5/src/c/include/zookeeper_log.h
/home/pig/zookeeper-3.4.5/src/c/include/zookeeper_version.h
/home/pig/zookeeper-3.4.5/src/c/src/cli.c
/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable.c
/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable.h
/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_itr.c
/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_itr.h
/home/pig/zookeeper-3.4.5/src/c/src/hashtable/hashtable_private.h
/home/pig/zookeeper-3.4.5/src/c/src/load_gen.c
/home/pig/zookeeper-3.4.5/src/c/src/mt_adaptor.c
/home/pig/zookeeper-3.4.5/src/c/src/recordio.c
/home/pig/zookeeper-3.4.5/src/c/src/st_adaptor.c
/home/pig/zookeeper-3.4.5/src/c/src/winport.c
/home/pig/zookeeper-3.4.5/src/c/src/winport.h
/home/pig/zookeeper-3.4.5/src/c/src/zk_adaptor.h
/home/pig/zookeeper-3.4.5/src/c/src/zk_hashtable.c
/home/pig/zookeeper-3.4.5/src/c/src/zk_hashtable.h
/home/pig/zookeeper-3.4.5/src/c/src/zk_log.c
/home/pig/zookeeper-3.4.5/src/c/src/zookeeper.c
/home/pig/zookeeper-3.4.5/src/c/tests/CollectionUtil.h
/home/pig/zookeeper-3.4.5/src/c/tests/CppAssertHelper.h
/home/pig/zookeeper-3.4.5/src/c/tests/LibCMocks.h
/home/pig/zookeeper-3.4.5/src/c/tests/LibCSymTable.h
/home/pig/zookeeper-3.4.5/src/c/tests/MocksBase.h
/home/pig/zookeeper-3.4.5/src/c/tests/PthreadMocks.h
/home/pig/zookeeper-3.4.5/src/c/tests/ThreadingUtil.h
/home/pig/zookeeper-3.4.5/src/c/tests/Util.h
/home/pig/zookeeper-3.4.5/src/c/tests/Vector.h
/home/pig/zookeeper-3.4.5/src/c/tests/ZKMocks.h
/home/pig/zookeeper-3.4.5/src/contrib/fatjar/src/java/org/apache/zookeeper/util/FatJarMain.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterException.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/FilterParser.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/JsonGenerator.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/Log4JEntry.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/Log4JSource.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogEntry.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogIterator.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogServer.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogSkipList.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/LogSource.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/MeasureThroughput.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/MergedLogSource.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/RandomAccessFileReader.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TransactionEntry.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/TxnLogSource.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/AndOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/Arg.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/EqualsOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/GreaterThanOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/LessThanOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/NotOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/NumberArg.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/OrOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/StringArg.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/SymbolArg.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/filterops/XorOp.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/FileLoader.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/Fs.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/GraphData.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/JsonServlet.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/NumEvents.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/StaticContent.java
/home/pig/zookeeper-3.4.5/src/contrib/loggraph/src/java/org/apache/zookeeper/graph/servlets/Throughput.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/RestMain.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/ZooKeeperService.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/Credentials.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/Endpoint.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/HostPort.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/HostPortSet.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/cfg/RestCfg.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/filters/HTTPBasicAuth.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZChildren.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZChildrenJSON.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZError.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZPath.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZSession.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/jaxb/ZStat.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/JAXBContextResolver.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/KeeperExceptionMapper.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/RuntimeExceptionMapper.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/SessionsResource.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/ZErrorWriter.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/java/org/apache/zookeeper/server/jersey/resources/ZNodeResource.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/Base.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/CreateTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/DeleteTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/ExistsTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/GetChildrenTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/GetTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/RestTestSuite.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/RootTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/SessionTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/SetTest.java
/home/pig/zookeeper-3.4.5/src/contrib/rest/src/test/org/apache/zookeeper/server/jersey/WadlTest.java
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/blockingqueue.h
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/event.h
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/log.h
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/mutex.h
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/thread.h
/home/pig/zookeeper-3.4.5/src/contrib/zkfuse/src/zkadapter.h
/home/pig/zookeeper-3.4.5/src/contrib/zkperl/build/check_zk_version.c
/home/pig/zookeeper-3.4.5/src/contrib/zkperl/build/check_zk_version.h
/home/pig/zookeeper-3.4.5/src/contrib/zkpython/src/c/pyzk_docstrings.h
/home/pig/zookeeper-3.4.5/src/contrib/zkpython/src/c/zookeeper.c
/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/SimpleTree.h
/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/ZkAdaptor.h
/home/pig/zookeeper-3.4.5/src/contrib/zktreeutil/src/ZkTreeUtil.h
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/ZooInspector.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/encryption/BasicDataEncryptionManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/encryption/DataEncryptionManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/NodeViewersChangeListener.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorAboutDialog.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorConnectionPropertiesDialog.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorIconResources.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorNodeViewersDialog.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorNodeViewersPanel.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorPanel.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/ZooInspectorTreeViewer.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerACL.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerData.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/NodeViewerMetaData.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/gui/nodeviewer/ZooInspectorNodeViewer.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/logger/LoggerFactory.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/NodeListener.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/Pair.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorManagerImpl.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorNodeManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorNodeTreeManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/inspector/manager/ZooInspectorReadOnlyManager.java
/home/pig/zookeeper-3.4.5/src/contrib/zooinspector/src/java/org/apache/zookeeper/retry/ZooKeeperRetry.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/ACL.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/Id.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/Stat.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/StatPersisted.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/data/StatPersistedV1.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/AuthPacket.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CheckVersionRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ConnectRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ConnectResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CreateRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/CreateResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/DeleteRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ErrorResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ExistsRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ExistsResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetACLRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetACLResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildren2Request.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildren2Response.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildrenRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetChildrenResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetDataRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetDataResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetMaxChildrenRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetMaxChildrenResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/GetSASLRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/MultiHeader.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/ReplyHeader.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/RequestHeader.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetACLRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetACLResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetDataRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetDataResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetMaxChildrenRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetSASLRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetSASLResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SetWatches.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SyncRequest.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/SyncResponse.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/proto/WatcherEvent.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/persistence/FileHeader.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/quorum/LearnerInfo.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/server/quorum/QuorumPacket.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CheckVersionTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateSessionTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/CreateTxnV0.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/DeleteTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/ErrorTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/MultiTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetACLTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetDataTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/SetMaxChildrenTxn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/Txn.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/txn/TxnHeader.java
/home/pig/zookeeper-3.4.5/src/java/generated/org/apache/zookeeper/version/Info.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/BinaryInputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/BinaryOutputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/CsvInputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/CsvOutputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Index.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/InputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/OutputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Record.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/RecordReader.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/RecordWriter.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/Utils.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/XmlInputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/XmlOutputArchive.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CGenerator.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CSharpGenerator.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/CppGenerator.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JBoolean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JBuffer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JByte.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JCompType.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JDouble.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JField.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JFile.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JFloat.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JInt.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JLong.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JMap.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JRecord.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JString.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JType.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JVector.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/JavaGenerator.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/ParseException.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/Rcc.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/RccConstants.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/RccTokenManager.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/SimpleCharStream.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/Token.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/jute/compiler/generated/TokenMgrError.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/AsyncCallback.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxn.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxnSocket.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientCnxnSocketNIO.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ClientWatchManager.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/CreateMode.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Environment.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/JLineZNodeCompletor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/KeeperException.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Login.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/MultiResponse.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/MultiTransactionRecord.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Op.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/OpResult.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Quotas.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ServerAdminClient.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Shell.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/StatsTrack.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Transaction.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Version.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/WatchedEvent.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/Watcher.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZKUtil.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooDefs.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooKeeper.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/ZooKeeperMain.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/ConnectStringParser.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/FourLetterWordMain.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/HostProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/StaticHostProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/client/ZooKeeperSaslClient.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/AtomicFileOutputStream.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/IOUtils.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/PathTrie.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/common/PathUtils.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/CommonNames.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/MBeanRegistry.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/ManagedUtil.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/jmx/ZKMBeanInfo.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ByteBufferInputStream.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ByteBufferOutputStream.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ConnectionBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ConnectionMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataNode.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTree.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTreeBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DataTreeMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/DatadirCleanupManager.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/FinalRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/LogFormatter.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NIOServerCnxn.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NIOServerCnxnFactory.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NettyServerCnxn.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/NettyServerCnxnFactory.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ObserverBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/PrepRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/PurgeTxnLog.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/Request.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/RequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerCnxn.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerCnxnFactory.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerConfig.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ServerStats.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SessionTracker.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SessionTrackerImpl.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SnapshotFormatter.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/Stats.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/TraceFormatter.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/WatchManager.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZKDatabase.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperSaslServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMain.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/ZooTrace.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/AuthenticationProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/DigestAuthenticationProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/DigestLoginModule.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/IPAuthenticationProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/KerberosName.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/ProviderRegistry.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/SASLAuthenticationProvider.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/auth/SaslServerCallbackHandler.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/FileTxnSnapLog.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/SnapShot.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/TxnLog.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/persistence/Util.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/AckRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/AuthFastLeaderElection.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/CommitProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Election.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Follower.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/FollowerZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Leader.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElection.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElectionBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderElectionMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LeaderZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Learner.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerHandler.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerSessionTracker.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerSyncRequest.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LearnerZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LocalPeerBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/LocalPeerMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Observer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ObserverZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ProposalRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumCnxManager.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerConfig.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumPeerMain.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumStats.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/QuorumZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ReadOnlyZooKeeperServer.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/RemotePeerBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/RemotePeerMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/SendAckRequestProcessor.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ServerBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/ServerMXBean.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/StateSummary.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/Vote.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumHierarchical.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumMaj.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/quorum/flexible/QuorumVerifier.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/DataNodeV1.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/DataTreeV1.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeMain.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShot.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/KerberosUtil.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/Profiler.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/SerializeUtils.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/server/util/ZxidUtils.java
/home/pig/zookeeper-3.4.5/src/java/main/org/apache/zookeeper/version/util/VerGen.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/BaseSysTest.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/DuplicateNameException.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/GenerateLoad.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/Instance.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/InstanceContainer.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/InstanceManager.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/NoAssignmentException.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/NoAvailableContainers.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/QuorumPeerInstance.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/SimpleClient.java
/home/pig/zookeeper-3.4.5/src/java/systest/org/apache/zookeeper/test/system/SimpleSysTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ClientReconnectTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/JUnit4ZKTestRunner.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/JaasConfiguration.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/MultiResponseTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/MultiTransactionRecordTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/PortAssignment.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/TestableZooKeeper.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/VerGenTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ZKTestCase.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/ZooKeeperTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/CRCTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DataTreeUnitTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DatadirCleanupManagerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/DeserializationPerfTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/InvalidSnapshotTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/PrepRequestProcessorTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/SerializationPerfTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ServerCnxnFactoryAccessor.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/SessionTrackerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ToStringTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/TruncateCorruptionTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZooKeeperServerMainTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZooKeeperServerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/ZxidRolloverTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/LearnerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerMainTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/QuorumPeerTestBase.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/quorum/Zab1_0Test.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/server/util/PortForwarder.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLCountTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLRootTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ACLTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncHammerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncOps.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncOpsTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AsyncTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AtomicFileOutputStreamTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/AuthTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootAsyncTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootClientTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ChrootTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientBase.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientHammerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientPortBindTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientRetry.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ClientTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/CnxManagerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ConnectStringParserTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/CreateModeTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DataTreeTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DisconnectableZooKeeper.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/DisconnectedWatcherTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/EventTypeTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEBackwardElectionRoundTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLELostMessageTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLENewEpochTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEPredicateTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLERestartTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLETest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLETestUtils.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FLEZeroWeightTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FollowerResyncConcurrencyTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FourLetterWordsQuorumTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/FourLetterWordsTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/GetChildren2Test.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/HierarchicalQuorumTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/IntegrityCheck.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/InvalidSnapshotTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/JMXEnv.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/KeeperStateTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LENonTerminateTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LETest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/LoadFromLogTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/MaxCnxnsTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/MultiTransactionTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteBase.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteHammerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NioNettySuiteTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/NullDataTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/OOMTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverHierarchicalQuorumTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverLETest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverQuorumHammerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ObserverTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/PurgeTxnTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumBase.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumHammerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumQuotaTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumUtil.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/QuorumZxidSyncTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ReadOnlyModeTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RecoveryTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RepeatStartupTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/RestoreCommittedLogTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthDesignatedClientTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthDesignatedServerTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthFailDesignatedClientTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthFailTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthMissingClientConfigTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SaslAuthTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SessionInvalidationTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SessionTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SledgeHammer.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StandaloneTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StatTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/StaticHostProviderTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/SyncCallTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/TestHammer.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/TruncateTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/UpgradeTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatchedEventTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatcherFuncTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/WatcherTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZkDatabaseCorruptionTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZooKeeperQuotaTest.java
/home/pig/zookeeper-3.4.5/src/java/test/org/apache/zookeeper/test/ZooKeeperTestClient.java
/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionAware.java
/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderElectionSupport.java
/home/pig/zookeeper-3.4.5/src/recipes/election/src/java/org/apache/zookeeper/recipes/leader/LeaderOffer.java
/home/pig/zookeeper-3.4.5/src/recipes/election/test/org/apache/zookeeper/recipes/leader/LeaderElectionSupportTest.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/include/zoo_lock.h
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/src/zoo_lock.c
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/c/tests/Util.h
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/LockListener.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ProtocolSupport.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/WriteLock.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ZNodeName.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/src/java/org/apache/zookeeper/recipes/lock/ZooKeeperOperation.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/WriteLockTest.java
/home/pig/zookeeper-3.4.5/src/recipes/lock/test/org/apache/zookeeper/recipes/lock/ZNodeNameTest.java
/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/include/zoo_queue.h
/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/src/zoo_queue.c
/home/pig/zookeeper-3.4.5/src/recipes/queue/src/c/tests/Util.h
/home/pig/zookeeper-3.4.5/src/recipes/queue/src/java/org/apache/zookeeper/recipes/queue/DistributedQueue.java
/home/pig/zookeeper-3.4.5/src/recipes/queue/test/org/apache/zookeeper/recipes/queue/DistributedQueueTest.java
